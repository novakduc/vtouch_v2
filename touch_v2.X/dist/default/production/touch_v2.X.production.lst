

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov  6 02:47:01 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=4,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=4,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=4,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=4,class=CODE,delta=1
   141                           	psect	text120,global,reloc=4,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=4,class=CODE,delta=1
   146                           	psect	text125,global,reloc=4,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=4,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=4,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   162                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   163                           	psect	text140,global,reloc=4,class=CODE,delta=1
   164                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   165                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   166  0000                     
   167                           ; Version 2.10
   168                           ; Generated 31/07/2019 GMT
   169                           ; 
   170                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   171                           ; All rights reserved.
   172                           ; 
   173                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   174                           ; 
   175                           ; Redistribution and use in source and binary forms, with or without modification, are
   176                           ; permitted provided that the following conditions are met:
   177                           ; 
   178                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   179                           ;        conditions and the following disclaimer.
   180                           ; 
   181                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   182                           ;        of conditions and the following disclaimer in the documentation and/or other
   183                           ;        materials provided with the distribution.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC18F57K42 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     
   202 ;;_mode	offset	0
   203 ;;_channel	offset=-1 (param)
   204 ;;_s	offset=-2 (param)
   205 ;;_new	offset=-4 (param)
   206 ;;_bn	offset=-5 (param)
   207 ;;_slow	offset=-6 (param)
   208 ;;_cmd	offset=-1 (param)
   209 ;;_cmd	offset=-1 (param)
   210 ;;_data	offset=-1 (param)
   211 ;;__this	offset=-2 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_chan	offset=-1 (param)
   214 ;;_to_what	offset=-2 (param)
   215 ;;_index	offset=-1 (param)
   216 ;;_arg	offset	0
   217 ;;_exp	offset	4
   218 ;;_sign	offset=-1 (param)
   219 ;;_val	offset=-5 (param)
   220 ;;_flipper	offset=-1 (param)
   221 ;;_f	offset	0
   222 ;;_ap	offset	6
   223 ;;_s	offset=-3 (param)
   224 ;;_fmt	offset=-5 (param)
   225 ;;_line	offset=-1 (param)
   226 ;;_vterm	offset=-2 (param)
   227 ;;_numMilliseconds	offset=-2 (param)
   228 ;;_vterm	offset=-1 (param)
   229 ;;_r	offset=-1 (param)
   230 ;;_c	offset=-2 (param)
   231 ;;_strPtr	offset=-4 (param)
   232 ;;_strPtr	offset=-1 (param)
   233 ;;_delay	offset=-4 (param)
   234 ;;_strPtr	offset=-2 (param)
   235 ;;__this	offset=-2 (param)
   236 ;;_clearBuffer	offset=-3 (param)
   237 ;;_s	offset	0
   238 ;;_k	offset	2
   239 ;;_dest	offset=-2 (param)
   240 ;;_c	offset=-4 (param)
   241 ;;_n	offset=-6 (param)
   242 ;;_ap	offset	0
   243 ;;_fmt	offset=-3 (param)
   244 ;;_cfmt	offset	0
   245 ;;_fp	offset=-2 (param)
   246 ;;_fmt	offset=-4 (param)
   247 ;;_ap	offset=-6 (param)
   248 ;;_vfpfcnvrt$4150	offset	0
   249 ;;_vfpfcnvrt$4156	offset	2
   250 ;;_vfpfcnvrt$4149	offset	4
   251 ;;_llu	offset	6
   252 ;;_ll	offset	14
   253 ;;_f	offset	22
   254 ;;_ct	offset	26
   255 ;;_cp	offset	29
   256 ;;_c	offset	31
   257 ;;_fp	offset=-2 (param)
   258 ;;_fmt	offset=-4 (param)
   259 ;;_ap	offset=-6 (param)
   260 ;;_xtoa$4135	offset	0
   261 ;;_xtoa$4134	offset	2
   262 ;;_n	offset	4
   263 ;;_c	offset	12
   264 ;;_i	offset	14
   265 ;;_w	offset	16
   266 ;;_p	offset	18
   267 ;;_fp	offset=-2 (param)
   268 ;;_d	offset=-10 (param)
   269 ;;_x	offset=-11 (param)
   270 ;;_toupper$4787	offset	0
   271 ;;_c	offset=-2 (param)
   272 ;;_c	offset=-2 (param)
   273 ;;_c	offset=-2 (param)
   274 ;;_r	offset	0
   275 ;;_l	offset	2
   276 ;;__l	offset=-2 (param)
   277 ;;__r	offset=-4 (param)
   278 ;;_n	offset=-6 (param)
   279 ;;_nuls	offset	0
   280 ;;_l	offset	7
   281 ;;_p	offset	9
   282 ;;_cp	offset	11
   283 ;;_w	offset	13
   284 ;;_i	offset	15
   285 ;;_fp	offset=-2 (param)
   286 ;;_s	offset=-4 (param)
   287 ;;_efgtoa$4114	offset	0
   288 ;;_efgtoa$4113	offset	2
   289 ;;_efgtoa$4112	offset	4
   290 ;;_efgtoa$4108	offset	6
   291 ;;_efgtoa$4104	offset	8
   292 ;;_efgtoa$4103	offset	10
   293 ;;_u	offset	12
   294 ;;_g	offset	16
   295 ;;_l	offset	20
   296 ;;_h	offset	24
   297 ;;_ou	offset	28
   298 ;;_n	offset	32
   299 ;;_e	offset	34
   300 ;;_i	offset	36
   301 ;;_w	offset	38
   302 ;;_p	offset	40
   303 ;;_sign	offset	42
   304 ;;_d	offset	44
   305 ;;_ne	offset	46
   306 ;;_m	offset	48
   307 ;;_pp	offset	50
   308 ;;_t	offset	52
   309 ;;_mode	offset	54
   310 ;;_nmode	offset	55
   311 ;;_fp	offset=-2 (param)
   312 ;;_f	offset=-6 (param)
   313 ;;_c	offset=-7 (param)
   314 ;;_tolower$4772	offset	0
   315 ;;_c	offset=-2 (param)
   316 ;;_c	offset=-2 (param)
   317 ;;_d	offset	0
   318 ;;_s	offset	2
   319 ;;_dest	offset=-2 (param)
   320 ;;_src	offset=-4 (param)
   321 ;;_u	offset	0
   322 ;;_m	offset	4
   323 ;;_e	offset	8
   324 ;;_x	offset=-4 (param)
   325 ;;_u	offset	0
   326 ;;_e	offset	4
   327 ;;_x	offset=-4 (param)
   328 ;;_exp1	offset	0
   329 ;;_sign1	offset	1
   330 ;;_f1	offset=-4 (param)
   331 ;;_b	offset=-4 (param)
   332 ;;_a	offset=-8 (param)
   333 ;;_grs	offset	0
   334 ;;_bexp	offset	1
   335 ;;_aexp	offset	2
   336 ;;_signs	offset	3
   337 ;;_b	offset=-4 (param)
   338 ;;_a	offset=-8 (param)
   339 ;;_f1	offset=-4 (param)
   340 ;;_prod	offset	0
   341 ;;_grs	offset	4
   342 ;;_temp	offset	8
   343 ;;_bexp	offset	10
   344 ;;_aexp	offset	11
   345 ;;_sign	offset	12
   346 ;;_b	offset=-4 (param)
   347 ;;_a	offset=-8 (param)
   348 ;;_ff1	offset=-4 (param)
   349 ;;_ff2	offset=-8 (param)
   350 ;;_ff1	offset=-4 (param)
   351 ;;_ff2	offset=-8 (param)
   352 ;;_grs	offset	0
   353 ;;_rem	offset	4
   354 ;;_new_exp	offset	8
   355 ;;_aexp	offset	10
   356 ;;_bexp	offset	11
   357 ;;_sign	offset	12
   358 ;;_b	offset=-4 (param)
   359 ;;_a	offset=-8 (param)
   360 ;;_sign	offset	0
   361 ;;_counter	offset	1
   362 ;;_dividend	offset=-2 (param)
   363 ;;_divisor	offset=-4 (param)
   364 ;;_quotient	offset	0
   365 ;;_sign	offset	2
   366 ;;_counter	offset	3
   367 ;;_dividend	offset=-2 (param)
   368 ;;_divisor	offset=-4 (param)
   369 ;;_dtoa$4080	offset	0
   370 ;;_n	offset	2
   371 ;;_i	offset	10
   372 ;;_s	offset	12
   373 ;;_w	offset	14
   374 ;;_p	offset	16
   375 ;;_fp	offset=-2 (param)
   376 ;;_d	offset=-10 (param)
   377 ;;_a	offset=-2 (param)
   378 ;;_sign	offset	0
   379 ;;_counter	offset	1
   380 ;;_dividend	offset=-8 (param)
   381 ;;_divisor	offset=-16 (param)
   382 ;;_quotient	offset	0
   383 ;;_sign	offset	8
   384 ;;_counter	offset	9
   385 ;;_dividend	offset=-8 (param)
   386 ;;_divisor	offset=-16 (param)
   387 ;;_w	offset	0
   388 ;;_fp	offset=-2 (param)
   389 ;;_c	offset=-3 (param)
   390 ;;_w	offset	0
   391 ;;_i	offset	2
   392 ;;_fp	offset=-2 (param)
   393 ;;_buf	offset=-4 (param)
   394 ;;_p	offset=-6 (param)
   395 ;;_a	offset	0
   396 ;;_s	offset=-2 (param)
   397 ;;_i	offset	0
   398 ;;_c	offset	2
   399 ;;_s	offset=-2 (param)
   400 ;;_fp	offset=-4 (param)
   401 ;;_c	offset=-2 (param)
   402 ;;_fp	offset=-4 (param)
   403 ;;_c	offset=-1 (param)
   404 ;;__this	offset=-2 (param)
   405 ;;_c	offset=-3 (param)
   406 ;;_atoi$4633	offset	0
   407 ;;_atoi$4631	offset	2
   408 ;;_atoi$4632	offset	4
   409 ;;_n	offset	5
   410 ;;_neg	offset	7
   411 ;;_s	offset=-2 (param)
   412 ;;_isspace$4671	offset	0
   413 ;;_c	offset=-2 (param)
   414 ;;_c	offset=-2 (param)
   415 ;;_vterm	offset=-1 (param)
   416 ;;_new_response_info	offset=-1 (param)
   417 ;;_new_response_info	offset=-1 (param)
   418 ;;_level	offset=-2 (param)
   419 ;;_dutyValue	offset=-2 (param)
   420 ;;_timer	offset=-1 (param)
   421 ;;_timer	offset=-1 (param)
   422 ;;_count	offset=-3 (param)
   423 ;;_InterruptHandler	offset=-3 (param)
   424 ;;_InterruptHandler	offset=-3 (param)
   425 ;;_InterruptHandler	offset=-3 (param)
   426 ;;_InterruptHandler	offset=-3 (param)
   427 ;;_InterruptHandler	offset=-3 (param)
   428 ;;_InterruptHandler	offset=-3 (param)
   429 ;;_state	offset	0
   430 ;;_InterruptHandler	offset=-3 (param)
   431 ;;_InterruptHandler	offset=-3 (param)
   432 ;;_InterruptHandler	offset=-3 (param)
   433 ;;_InterruptHandler	offset=-3 (param)
   434 ;;_timerVal	offset=-2 (param)
   435 ;;_channel	offset=-1 (param)
   436 ;;_i	offset	0
   437                           
   438                           	psect	idataBANK0
   439  017F1E                     __pidataBANK0:
   440                           	opt callstack 0
   441                           
   442                           ;initializer for stoa@F1166
   443  017F1E  28                 	db	40
   444  017F1F  6E                 	db	110
   445  017F20  75                 	db	117
   446  017F21  6C                 	db	108
   447  017F22  6C                 	db	108
   448  017F23  29                 	db	41
   449  017F24  00                 	db	0
   450                           
   451                           ;initializer for _port_data
   452  017F25  FF                 	db	255
   453  017F26  00                 	db	0
   454  017F27  FF                 	db	255
   455  017F28  00                 	db	0
   456  017F29  FF                 	db	255
   457  017F2A  00                 	db	0
   458  017F2B  FF                 	db	255
   459  017F2C  00                 	db	0
   460  017F2D  FF                 	db	255
   461  017F2E  00                 	db	0
   462  017F2F  FF                 	db	255
   463  017F30  00                 	db	0
   464  017F31  FF                 	db	255
   465  017F32  00                 	db	0
   466  017F33  FF                 	db	255
   467  017F34  00                 	db	0
   468                           
   469                           	psect	idataBANK2
   470  01691E                     __pidataBANK2:
   471                           	opt callstack 0
   472                           
   473                           ;initializer for _V
   474  01691E  00                 	db	0
   475  01691F  00                 	db	0
   476  016920  00                 	db	0
   477  016921  00                 	db	0
   478  016922  00                 	db	0
   479  016923  00                 	db	0
   480  016924  00                 	db	0
   481  016925  00                 	db	0
   482  016926  00                 	db	0
   483  016927  00                 	db	0
   484  016928  00                 	db	0
   485  016929  00                 	db	0
   486  01692A  00                 	db	0
   487  01692B  00                 	db	0
   488  01692C  00                 	db	0
   489  01692D  00                 	db	0
   490  01692E  00                 	db	0
   491  01692F  00                 	db	0
   492  016930  00                 	db	0
   493  016931  00                 	db	0
   494  016932  00                 	db	0
   495  016933  00                 	db	0
   496  016934  00                 	db	0
   497  016935  00                 	db	0
   498  016936  00                 	db	0
   499  016937  00                 	db	0
   500  016938  00                 	db	0
   501  016939  00                 	db	0
   502  01693A  00                 	db	0
   503  01693B  00                 	db	0
   504  01693C  00                 	db	0
   505  01693D  00                 	db	0
   506  01693E  00                 	db	0
   507  01693F  00                 	db	0
   508  016940  00                 	db	0
   509  016941  00                 	db	0
   510  016942  00                 	db	0
   511  016943  00                 	db	0
   512  016944  00                 	db	0
   513  016945  00                 	db	0
   514  016946  00                 	db	0
   515  016947  00                 	db	0
   516  016948  00                 	db	0
   517  016949  00                 	db	0
   518  01694A  00                 	db	0
   519  01694B  00                 	db	0
   520  01694C  00                 	db	0
   521  01694D  00                 	db	0
   522  01694E  00                 	db	0
   523  01694F  00                 	db	0
   524  016950  00                 	db	0
   525  016951  00                 	db	0
   526  016952  00                 	db	0
   527  016953  00                 	db	0
   528  016954  00                 	db	0
   529  016955  00                 	db	0
   530  016956  00                 	db	0
   531  016957  00                 	db	0
   532  016958  00                 	db	0
   533  016959  00                 	db	0
   534  01695A  00                 	db	0
   535  01695B  00                 	db	0
   536  01695C  00                 	db	0
   537  01695D  00                 	db	0
   538  01695E  00                 	db	0
   539  01695F  00                 	db	0
   540  016960  00                 	db	0
   541  016961  00                 	db	0
   542  016962  00                 	db	0
   543  016963  00                 	db	0
   544  016964  00                 	db	0
   545  016965  00                 	db	0
   546  016966  00                 	db	0
   547  016967  00                 	db	0
   548  016968  00                 	db	0
   549  016969  00                 	db	0
   550  01696A  00                 	db	0
   551  01696B  00                 	db	0
   552  01696C  00                 	db	0
   553  01696D  00                 	db	0
   554  01696E  00                 	db	0
   555  01696F  00                 	db	0
   556  016970  00                 	db	0
   557  016971  00                 	db	0
   558  016972  00                 	db	0
   559  016973  00                 	db	0
   560  016974  00                 	db	0
   561  016975  00                 	db	0
   562  016976  00                 	db	0
   563  016977  00                 	db	0
   564  016978  00                 	db	0
   565  016979  00                 	db	0
   566  01697A  00                 	db	0
   567  01697B  00                 	db	0
   568  01697C  00                 	db	0
   569  01697D  00                 	db	0
   570  01697E  00                 	db	0
   571  01697F  00                 	db	0
   572  016980  00                 	db	0
   573  016981  00                 	db	0
   574  016982  00                 	db	0
   575  016983  00                 	db	0
   576  016984  00                 	db	0
   577  016985  00                 	db	0
   578  016986  00                 	db	0
   579  016987  00                 	db	0
   580  016988  00                 	db	0
   581  016989  00                 	db	0
   582  01698A  00                 	db	0
   583  01698B  00                 	db	0
   584  01698C  00                 	db	0
   585  01698D  00                 	db	0
   586  01698E  00                 	db	0
   587  01698F  00                 	db	0
   588  016990  00                 	db	0
   589  016991  00                 	db	0
   590  016992  00                 	db	0
   591  016993  00                 	db	0
   592  016994  00                 	db	0
   593  016995  00                 	db	0
   594  016996  00                 	db	0
   595  016997  00                 	db	0
   596  016998  00                 	db	0
   597  016999  00                 	db	0
   598  01699A  00                 	db	0
   599  01699B  00                 	db	0
   600  01699C  00                 	db	0
   601  01699D  00                 	db	0
   602  01699E  00                 	db	0
   603  01699F  0000               	dw	0
   604  0169A1  0000               	dw	0
   605  0169A3  0000               	dw	0
   606  0169A5  0000               	dw	0
   607  0169A7  0000               	dw	0
   608  0169A9  0000               	dw	0
   609  0169AB  00                 	db	0
   610  0169AC  00                 	db	0
   611  0169AD  00                 	db	0
   612  0169AE  00                 	db	0
   613  0169AF  00                 	db	0
   614  0169B0  00                 	db	0
   615  0169B1  00                 	db	0
   616  0169B2  00                 	db	0
   617  0169B3  0000               	dw	0
   618  0169B5  0000               	dw	0
   619  0169B7  0000               	dw	0
   620  0169B9  0000               	dw	0
   621  0169BB  0000               	dw	0
   622  0169BD  0000               	dw	0
   623  0169BF  0000               	dw	0
   624  0169C1  0000               	dw	0
   625  0169C3  0000               	dw	0
   626  0169C5  00                 	db	0
   627  0169C6  00                 	db	0
   628  0169C7  00                 	db	0
   629  0169C8  00                 	db	0
   630  0169C9  00                 	db	0
   631  0169CA  00                 	db	0
   632  0169CB  00                 	db	0
   633  0169CC  00                 	db	0
   634  0169CD  00                 	db	0
   635  0169CE  00                 	db	0
   636  0169CF  00                 	db	0
   637  0169D0  00                 	db	0
   638  0169D1  0000               	dw	0
   639  0169D3  0000               	dw	0
   640  0169D5  01                 	db	1
   641  0169D6  00                 	db	0
   642  0169D7  01                 	db	1
   643  0169D8  00                 	db	0
   644  0169D9  2D                 	db	45
   645  0169DA  00                 	db	0
   646                           
   647                           	psect	mediumconst
   648  00FE72                     __pmediumconst:
   649                           	opt callstack 0
   650  00FE72  00                 	db	0
   651  00FE73                     _T:
   652                           	opt callstack 0
   653  00FE73  63                 	db	99
   654  00FE74  6F                 	db	111
   655  00FE75  6D                 	db	109
   656  00FE76  6D                 	db	109
   657  00FE77  61                 	db	97
   658  00FE78  6E                 	db	110
   659  00FE79  64                 	db	100
   660  00FE7A  73                 	db	115
   661  00FE7B  20                 	db	32
   662  00FE7C  31                 	db	49
   663  00FE7D  00                 	db	0
   664  00FE7E  00                 	db	0
   665  00FE7F  00                 	db	0
   666  00FE80  00                 	db	0
   667  00FE81  00                 	db	0
   668  00FE82  00                 	db	0
   669  00FE83  00                 	db	0
   670  00FE84  00                 	db	0
   671  00FE85  64                 	db	100
   672  00FE86  69                 	db	105
   673  00FE87  73                 	db	115
   674  00FE88  70                 	db	112
   675  00FE89  6C                 	db	108
   676  00FE8A  61                 	db	97
   677  00FE8B  79                 	db	121
   678  00FE8C  73                 	db	115
   679  00FE8D  20                 	db	32
   680  00FE8E  31                 	db	49
   681  00FE8F  00                 	db	0
   682  00FE90  00                 	db	0
   683  00FE91  00                 	db	0
   684  00FE92  00                 	db	0
   685  00FE93  00                 	db	0
   686  00FE94  00                 	db	0
   687  00FE95  00                 	db	0
   688  00FE96  00                 	db	0
   689  00FE97  63                 	db	99
   690  00FE98  6F                 	db	111
   691  00FE99  6D                 	db	109
   692  00FE9A  6D                 	db	109
   693  00FE9B  61                 	db	97
   694  00FE9C  6E                 	db	110
   695  00FE9D  64                 	db	100
   696  00FE9E  73                 	db	115
   697  00FE9F  20                 	db	32
   698  00FEA0  32                 	db	50
   699  00FEA1  00                 	db	0
   700  00FEA2  00                 	db	0
   701  00FEA3  00                 	db	0
   702  00FEA4  00                 	db	0
   703  00FEA5  00                 	db	0
   704  00FEA6  00                 	db	0
   705  00FEA7  00                 	db	0
   706  00FEA8  00                 	db	0
   707  00FEA9  64                 	db	100
   708  00FEAA  69                 	db	105
   709  00FEAB  73                 	db	115
   710  00FEAC  70                 	db	112
   711  00FEAD  6C                 	db	108
   712  00FEAE  61                 	db	97
   713  00FEAF  79                 	db	121
   714  00FEB0  73                 	db	115
   715  00FEB1  20                 	db	32
   716  00FEB2  32                 	db	50
   717  00FEB3  00                 	db	0
   718  00FEB4  00                 	db	0
   719  00FEB5  00                 	db	0
   720  00FEB6  00                 	db	0
   721  00FEB7  00                 	db	0
   722  00FEB8  00                 	db	0
   723  00FEB9  00                 	db	0
   724  00FEBA  00                 	db	0
   725  00FEBB  63                 	db	99
   726  00FEBC  6F                 	db	111
   727  00FEBD  6D                 	db	109
   728  00FEBE  6D                 	db	109
   729  00FEBF  61                 	db	97
   730  00FEC0  6E                 	db	110
   731  00FEC1  64                 	db	100
   732  00FEC2  73                 	db	115
   733  00FEC3  20                 	db	32
   734  00FEC4  33                 	db	51
   735  00FEC5  00                 	db	0
   736  00FEC6  00                 	db	0
   737  00FEC7  00                 	db	0
   738  00FEC8  00                 	db	0
   739  00FEC9  00                 	db	0
   740  00FECA  00                 	db	0
   741  00FECB  00                 	db	0
   742  00FECC  00                 	db	0
   743  00FECD  64                 	db	100
   744  00FECE  69                 	db	105
   745  00FECF  73                 	db	115
   746  00FED0  70                 	db	112
   747  00FED1  6C                 	db	108
   748  00FED2  61                 	db	97
   749  00FED3  79                 	db	121
   750  00FED4  73                 	db	115
   751  00FED5  20                 	db	32
   752  00FED6  33                 	db	51
   753  00FED7  00                 	db	0
   754  00FED8  00                 	db	0
   755  00FED9  00                 	db	0
   756  00FEDA  00                 	db	0
   757  00FEDB  00                 	db	0
   758  00FEDC  00                 	db	0
   759  00FEDD  00                 	db	0
   760  00FEDE  00                 	db	0
   761  00FEDF  63                 	db	99
   762  00FEE0  6F                 	db	111
   763  00FEE1  6D                 	db	109
   764  00FEE2  6D                 	db	109
   765  00FEE3  61                 	db	97
   766  00FEE4  6E                 	db	110
   767  00FEE5  64                 	db	100
   768  00FEE6  73                 	db	115
   769  00FEE7  20                 	db	32
   770  00FEE8  34                 	db	52
   771  00FEE9  00                 	db	0
   772  00FEEA  00                 	db	0
   773  00FEEB  00                 	db	0
   774  00FEEC  00                 	db	0
   775  00FEED  00                 	db	0
   776  00FEEE  00                 	db	0
   777  00FEEF  00                 	db	0
   778  00FEF0  00                 	db	0
   779  00FEF1  64                 	db	100
   780  00FEF2  69                 	db	105
   781  00FEF3  73                 	db	115
   782  00FEF4  70                 	db	112
   783  00FEF5  6C                 	db	108
   784  00FEF6  61                 	db	97
   785  00FEF7  79                 	db	121
   786  00FEF8  73                 	db	115
   787  00FEF9  20                 	db	32
   788  00FEFA  34                 	db	52
   789  00FEFB  00                 	db	0
   790  00FEFC  00                 	db	0
   791  00FEFD  00                 	db	0
   792  00FEFE  00                 	db	0
   793  00FEFF  00                 	db	0
   794  00FF00  00                 	db	0
   795  00FF01  00                 	db	0
   796  00FF02  00                 	db	0
   797  00FF03                     __end_of_T:
   798                           	opt callstack 0
   799  0000                     _IVTADL	set	14493
   800  0000                     _IVTADH	set	14494
   801  0000                     _IVTADU	set	14495
   802  0000                     _PIR4bits	set	14756
   803  0000                     _PIE8bits	set	14744
   804  0000                     _PIR8bits	set	14760
   805  0000                     _SCANPR	set	14839
   806  0000                     _DMA2PR	set	14836
   807  0000                     _DMA1PR	set	14835
   808  0000                     _MAINPR	set	14834
   809  0000                     _ISRPR	set	14833
   810  0000                     _PIE2bits	set	14738
   811  0000                     _PIR2bits	set	14754
   812  0000                     _PIE9bits	set	14745
   813  0000                     _PIR9bits	set	14761
   814  0000                     _PIE6bits	set	14742
   815  0000                     _PIE3bits	set	14739
   816  0000                     _PMD7	set	14791
   817  0000                     _PMD6	set	14790
   818  0000                     _PMD5	set	14789
   819  0000                     _PMD4	set	14788
   820  0000                     _PMD3	set	14787
   821  0000                     _PMD2	set	14786
   822  0000                     _PMD1	set	14785
   823  0000                     _PMD0	set	14784
   824  0000                     _OSCTUNE	set	14814
   825  0000                     _OSCFRQ	set	14815
   826  0000                     _OSCEN	set	14813
   827  0000                     _OSCCON3	set	14811
   828  0000                     _OSCCON1	set	14809
   829  0000                     _IPR8bits	set	14728
   830  0000                     _IPR9bits	set	14729
   831  0000                     _IPR5bits	set	14725
   832  0000                     _IPR1bits	set	14721
   833  0000                     _IPR3bits	set	14723
   834  0000                     _IPR6bits	set	14726
   835  0000                     _IPR2bits	set	14722
   836  0000                     _PIE5bits	set	14741
   837  0000                     _PIE1bits	set	14737
   838  0000                     _PIR5bits	set	14757
   839  0000                     _PIR1bits	set	14753
   840  0000                     _PLLR	set	118496
   841  0000                     _SPI1SDIPPS	set	15071
   842  0000                     _U1RXPPS	set	15077
   843  0000                     _RC6PPS	set	14870
   844  0000                     _RC5PPS	set	14869
   845  0000                     _INT1PPS	set	15041
   846  0000                     _RD1PPS	set	14873
   847  0000                     _INT0PPS	set	15040
   848  0000                     _RC3PPS	set	14867
   849  0000                     _RB6PPS	set	14862
   850  0000                     _SPI1SCKPPS	set	15070
   851  0000                     _U2RXPPS	set	15080
   852  0000                     _SLRCONF	set	14995
   853  0000                     _SLRCONE	set	14979
   854  0000                     _SLRCOND	set	14963
   855  0000                     _SLRCONC	set	14947
   856  0000                     _SLRCONB	set	14931
   857  0000                     _SLRCONA	set	14915
   858  0000                     _ODCOND	set	14962
   859  0000                     _ODCONC	set	14946
   860  0000                     _ODCONB	set	14930
   861  0000                     _ODCONA	set	14914
   862  0000                     _ODCONF	set	14994
   863  0000                     _ODCONE	set	14978
   864  0000                     _WPUC	set	14945
   865  0000                     _WPUA	set	14913
   866  0000                     _WPUB	set	14929
   867  0000                     _WPUE	set	14977
   868  0000                     _WPUF	set	14993
   869  0000                     _WPUD	set	14961
   870  0000                     _ANSELA	set	14912
   871  0000                     _ANSELF	set	14992
   872  0000                     _ANSELE	set	14976
   873  0000                     _ANSELB	set	14928
   874  0000                     _ANSELC	set	14944
   875  0000                     _ANSELD	set	14960
   876  0000                     _DMA2SSA	set	15321
   877  0000                     _DMA1SSA	set	15353
   878  0000                     _DMA2DSZ	set	15310
   879  0000                     _DMA2SSZ	set	15319
   880  0000                     _DMA2DSA	set	15312
   881  0000                     _DMA1DSZ	set	15342
   882  0000                     _DMA1SSZ	set	15351
   883  0000                     _DMA1DSA	set	15344
   884  0000                     _DMA1CON0bits	set	15356
   885  0000                     _DMA1CON1bits	set	15357
   886  0000                     _DMA2CON0	set	15324
   887  0000                     _DMA2AIRQ	set	15326
   888  0000                     _DMA2SIRQ	set	15327
   889  0000                     _DMA2CON1	set	15325
   890  0000                     _DMA1CON0	set	15356
   891  0000                     _DMA1AIRQ	set	15358
   892  0000                     _DMA1SIRQ	set	15359
   893  0000                     _DMA1CON1	set	15357
   894  0000                     _CLKRCON	set	15589
   895  0000                     _CLKRCLK	set	15590
   896  0000                     _SPI1INTFbits	set	15642
   897  0000                     _SPI1RXB	set	15632
   898  0000                     _SPI1TXB	set	15633
   899  0000                     _SPI1TCNTL	set	15634
   900  0000                     _SPI1CON0	set	15636
   901  0000                     _SPI1CLK	set	15644
   902  0000                     _SPI1BAUD	set	15641
   903  0000                     _SPI1CON2	set	15638
   904  0000                     _SPI1CON1	set	15637
   905  0000                     _U2RXB	set	15824
   906  0000                     _U2TXB	set	15826
   907  0000                     _U2ERRIE	set	15842
   908  0000                     _U2ERRIR	set	15841
   909  0000                     _U2UIR	set	15840
   910  0000                     _U2FIFO	set	15839
   911  0000                     _U2BRGH	set	15838
   912  0000                     _U2BRGL	set	15837
   913  0000                     _U2CON2	set	15836
   914  0000                     _U2CON1	set	15835
   915  0000                     _U2CON0	set	15834
   916  0000                     _U2P3L	set	15832
   917  0000                     _U2P2L	set	15830
   918  0000                     _U2P1L	set	15828
   919  0000                     _U1RXB	set	15848
   920  0000                     _U1TXB	set	15850
   921  0000                     _U1ERRIE	set	15866
   922  0000                     _U1ERRIR	set	15865
   923  0000                     _U1UIR	set	15864
   924  0000                     _U1FIFO	set	15863
   925  0000                     _U1BRGH	set	15862
   926  0000                     _U1BRGL	set	15861
   927  0000                     _U1CON2	set	15860
   928  0000                     _U1CON1	set	15859
   929  0000                     _U1CON0	set	15858
   930  0000                     _U1P3H	set	15857
   931  0000                     _U1P3L	set	15856
   932  0000                     _U1P2H	set	15855
   933  0000                     _U1P2L	set	15854
   934  0000                     _U1P1H	set	15853
   935  0000                     _U1P1L	set	15852
   936  0000                     _FVRCON	set	16065
   937  0000                     _ADFLTRL	set	16102
   938  0000                     _ADFLTRH	set	16103
   939  0000                     _ADCON0bits	set	16120
   940  0000                     _ADCON0	set	16120
   941  0000                     _ADCLK	set	16127
   942  0000                     _ADACT	set	16126
   943  0000                     _ADREF	set	16125
   944  0000                     _ADSTAT	set	16124
   945  0000                     _ADCON3	set	16123
   946  0000                     _ADCON2	set	16122
   947  0000                     _ADCON1	set	16121
   948  0000                     _ADPREH	set	16119
   949  0000                     _ADPREL	set	16118
   950  0000                     _ADCAP	set	16117
   951  0000                     _ADACQH	set	16116
   952  0000                     _ADACQL	set	16115
   953  0000                     _ADPCH	set	16113
   954  0000                     _ADRPT	set	16108
   955  0000                     _ADACCU	set	16106
   956  0000                     _ADSTPTH	set	16101
   957  0000                     _ADSTPTL	set	16100
   958  0000                     _ADUTHH	set	16097
   959  0000                     _ADUTHL	set	16096
   960  0000                     _ADLTHH	set	16095
   961  0000                     _ADLTHL	set	16094
   962  0000                     _CCPTMRS1bits	set	16223
   963  0000                     _LATCbits	set	16316
   964  0000                     _LATDbits	set	16317
   965  0000                     _PORTBbits	set	16331
   966  0000                     _T2CON	set	16300
   967  0000                     _T2TMR	set	16298
   968  0000                     _T2PR	set	16299
   969  0000                     _T2RST	set	16303
   970  0000                     _T2HLT	set	16301
   971  0000                     _T2CLKCON	set	16302
   972  0000                     _PWM8DCL	set	16224
   973  0000                     _PWM8DCH	set	16225
   974  0000                     _PWM8CON	set	16226
   975  0000                     _LATEbits	set	16318
   976  0000                     _T5CONbits	set	16282
   977  0000                     _T5CON	set	16282
   978  0000                     _TMR5L	set	16280
   979  0000                     _TMR5H	set	16281
   980  0000                     _T5CLK	set	16285
   981  0000                     _T5GATE	set	16284
   982  0000                     _T5GCON	set	16283
   983  0000                     _T6CON	set	16276
   984  0000                     _T6TMR	set	16274
   985  0000                     _T6PR	set	16275
   986  0000                     _T6RST	set	16279
   987  0000                     _T6HLT	set	16277
   988  0000                     _T6CLKCON	set	16278
   989  0000                     _TRISD	set	16325
   990  0000                     _TRISC	set	16324
   991  0000                     _TRISB	set	16323
   992  0000                     _TRISA	set	16322
   993  0000                     _TRISF	set	16327
   994  0000                     _TRISE	set	16326
   995  0000                     _LATC	set	16316
   996  0000                     _LATB	set	16315
   997  0000                     _LATF	set	16319
   998  0000                     _LATA	set	16314
   999  0000                     _LATD	set	16317
  1000  0000                     _LATE	set	16318
  1001  0000                     _IVTLOCKbits	set	16340
  1002  0000                     _IVTLOCK	set	16340
  1003  0000                     _INTCON0bits	set	16338
  1004  0000                     _GIE	set	130711
  1005  00FF03                     
  1006                           ; BSR set to: 57
  1007  00FF03  20                 	db	32
  1008  00FF04  4D                 	db	77	;'M'
  1009  00FF05  65                 	db	101	;'e'
  1010  00FF06  73                 	db	115	;'s'
  1011  00FF07  67                 	db	103	;'g'
  1012  00FF08  20                 	db	32
  1013  00FF09  25                 	db	37
  1014  00FF0A  64                 	db	100	;'d'
  1015  00FF0B  20                 	db	32
  1016  00FF0C  53                 	db	83	;'S'
  1017  00FF0D  74                 	db	116	;'t'
  1018  00FF0E  61                 	db	97	;'a'
  1019  00FF0F  63                 	db	99	;'c'
  1020  00FF10  6B                 	db	107	;'k'
  1021  00FF11  20                 	db	32
  1022  00FF12  25                 	db	37
  1023  00FF13  64                 	db	100	;'d'
  1024  00FF14  20                 	db	32
  1025  00FF15  20                 	db	32
  1026  00FF16  20                 	db	32
  1027  00FF17  20                 	db	32
  1028  00FF18  20                 	db	32
  1029  00FF19  20                 	db	32
  1030  00FF1A  00                 	db	0
  1031  00FF1B                     STR_26:
  1032                           
  1033                           ; BSR set to: 57
  1034  00FF1B  20                 	db	32
  1035  00FF1C  20                 	db	32
  1036  00FF1D  20                 	db	32
  1037  00FF1E  20                 	db	32
  1038  00FF1F  20                 	db	32
  1039  00FF20  20                 	db	32
  1040  00FF21  20                 	db	32
  1041  00FF22  20                 	db	32
  1042  00FF23  20                 	db	32
  1043  00FF24  20                 	db	32
  1044  00FF25  20                 	db	32
  1045  00FF26  20                 	db	32
  1046  00FF27  20                 	db	32
  1047  00FF28  20                 	db	32
  1048  00FF29  20                 	db	32
  1049  00FF2A  20                 	db	32
  1050  00FF2B  20                 	db	32
  1051  00FF2C  20                 	db	32
  1052  00FF2D  00                 	db	0
  1053  00FF2E                     STR_16:
  1054                           
  1055                           ; BSR set to: 57
  1056  00FF2E  48                 	db	72	;'H'
  1057  00FF2F  45                 	db	69	;'E'
  1058  00FF30  4C                 	db	76	;'L'
  1059  00FF31  50                 	db	80	;'P'
  1060  00FF32  20                 	db	32
  1061  00FF33  25                 	db	37
  1062  00FF34  73                 	db	115	;'s'
  1063  00FF35  20                 	db	32
  1064  00FF36  20                 	db	32
  1065  00FF37  20                 	db	32
  1066  00FF38  20                 	db	32
  1067  00FF39  20                 	db	32
  1068  00FF3A  20                 	db	32
  1069  00FF3B  20                 	db	32
  1070  00FF3C  20                 	db	32
  1071  00FF3D  20                 	db	32
  1072  00FF3E  20                 	db	32
  1073  00FF3F  20                 	db	32
  1074  00FF40  00                 	db	0
  1075  00FF41                     
  1076                           ; BSR set to: 57
  1077  00FF41  44                 	db	68	;'D'
  1078  00FF42  49                 	db	73	;'I'
  1079  00FF43  53                 	db	83	;'S'
  1080  00FF44  50                 	db	80	;'P'
  1081  00FF45  4C                 	db	76	;'L'
  1082  00FF46  41                 	db	65	;'A'
  1083  00FF47  59                 	db	89	;'Y'
  1084  00FF48  20                 	db	32
  1085  00FF49  25                 	db	37
  1086  00FF4A  73                 	db	115	;'s'
  1087  00FF4B  20                 	db	32
  1088  00FF4C  20                 	db	32
  1089  00FF4D  20                 	db	32
  1090  00FF4E  20                 	db	32
  1091  00FF4F  20                 	db	32
  1092  00FF50  20                 	db	32
  1093  00FF51  20                 	db	32
  1094  00FF52  20                 	db	32
  1095  00FF53  00                 	db	0
  1096  00FF54                     STR_8:
  1097                           
  1098                           ; BSR set to: 57
  1099  00FF54  20                 	db	32
  1100  00FF55  56                 	db	86	;'V'
  1101  00FF56  54                 	db	84	;'T'
  1102  00FF57  45                 	db	69	;'E'
  1103  00FF58  52                 	db	82	;'R'
  1104  00FF59  4D                 	db	77	;'M'
  1105  00FF5A  20                 	db	32
  1106  00FF5B  23                 	db	35
  1107  00FF5C  32                 	db	50	;'2'
  1108  00FF5D  20                 	db	32
  1109  00FF5E  20                 	db	32
  1110  00FF5F  20                 	db	32
  1111  00FF60  20                 	db	32
  1112  00FF61  20                 	db	32
  1113  00FF62  20                 	db	32
  1114  00FF63  20                 	db	32
  1115  00FF64  00                 	db	0
  1116  00FF65                     STR_4:
  1117                           
  1118                           ; BSR set to: 57
  1119  00FF65  20                 	db	32
  1120  00FF66  4E                 	db	78	;'N'
  1121  00FF67  53                 	db	83	;'S'
  1122  00FF68  41                 	db	65	;'A'
  1123  00FF69  53                 	db	83	;'S'
  1124  00FF6A  50                 	db	80	;'P'
  1125  00FF6B  4F                 	db	79	;'O'
  1126  00FF6C  4F                 	db	79	;'O'
  1127  00FF6D  4B                 	db	75	;'K'
  1128  00FF6E  20                 	db	32
  1129  00FF6F  20                 	db	32
  1130  00FF70  20                 	db	32
  1131  00FF71  20                 	db	32
  1132  00FF72  20                 	db	32
  1133  00FF73  20                 	db	32
  1134  00FF74  20                 	db	32
  1135  00FF75  00                 	db	0
  1136  00FF76                     STR_1:
  1137                           
  1138                           ; BSR set to: 57
  1139  00FF76  20                 	db	32
  1140  00FF77  4D                 	db	77	;'M'
  1141  00FF78  42                 	db	66	;'B'
  1142  00FF79  4D                 	db	77	;'M'
  1143  00FF7A  43                 	db	67	;'C'
  1144  00FF7B  20                 	db	32
  1145  00FF7C  53                 	db	83	;'S'
  1146  00FF7D  4F                 	db	79	;'O'
  1147  00FF7E  4C                 	db	76	;'L'
  1148  00FF7F  41                 	db	65	;'A'
  1149  00FF80  52                 	db	82	;'R'
  1150  00FF81  4D                 	db	77	;'M'
  1151  00FF82  4F                 	db	79	;'O'
  1152  00FF83  4E                 	db	78	;'N'
  1153  00FF84  20                 	db	32
  1154  00FF85  20                 	db	32
  1155  00FF86  00                 	db	0
  1156  00FF87                     STR_5:
  1157                           
  1158                           ; BSR set to: 57
  1159  00FF87  20                 	db	32
  1160  00FF88  53                 	db	83	;'S'
  1161  00FF89  45                 	db	69	;'E'
  1162  00FF8A  51                 	db	81	;'Q'
  1163  00FF8B  55                 	db	85	;'U'
  1164  00FF8C  45                 	db	69	;'E'
  1165  00FF8D  4E                 	db	78	;'N'
  1166  00FF8E  43                 	db	67	;'C'
  1167  00FF8F  45                 	db	69	;'E'
  1168  00FF90  20                 	db	32
  1169  00FF91  54                 	db	84	;'T'
  1170  00FF92  45                 	db	69	;'E'
  1171  00FF93  53                 	db	83	;'S'
  1172  00FF94  54                 	db	84	;'T'
  1173  00FF95  20                 	db	32
  1174  00FF96  20                 	db	32
  1175  00FF97  00                 	db	0
  1176  00FF98                     STR_20:
  1177                           
  1178                           ; BSR set to: 57
  1179  00FF98  76                 	db	118	;'v'
  1180  00FF99  74                 	db	116	;'t'
  1181  00FF9A  65                 	db	101	;'e'
  1182  00FF9B  72                 	db	114	;'r'
  1183  00FF9C  6D                 	db	109	;'m'
  1184  00FF9D  20                 	db	32
  1185  00FF9E  25                 	db	37
  1186  00FF9F  78                 	db	120	;'x'
  1187  00FFA0  3A                 	db	58	;':'
  1188  00FFA1  25                 	db	37
  1189  00FFA2  78                 	db	120	;'x'
  1190  00FFA3  20                 	db	32
  1191  00FFA4  20                 	db	32
  1192  00FFA5  20                 	db	32
  1193  00FFA6  00                 	db	0
  1194  00FFA7                     STR_2:
  1195                           
  1196                           ; BSR set to: 57
  1197  00FFA7  20                 	db	32
  1198  00FFA8  56                 	db	86	;'V'
  1199  00FFA9  65                 	db	101	;'e'
  1200  00FFAA  72                 	db	114	;'r'
  1201  00FFAB  73                 	db	115	;'s'
  1202  00FFAC  69                 	db	105	;'i'
  1203  00FFAD  6F                 	db	111	;'o'
  1204  00FFAE  6E                 	db	110	;'n'
  1205  00FFAF  20                 	db	32
  1206  00FFB0  25                 	db	37
  1207  00FFB1  73                 	db	115	;'s'
  1208  00FFB2  20                 	db	32
  1209  00FFB3  20                 	db	32
  1210  00FFB4  20                 	db	32
  1211  00FFB5  00                 	db	0
  1212  00FFB6                     STR_9:
  1213                           
  1214                           ; BSR set to: 57
  1215  00FFB6  25                 	db	37
  1216  00FFB7  64                 	db	100	;'d'
  1217  00FFB8  20                 	db	32
  1218  00FFB9  25                 	db	37
  1219  00FFBA  32                 	db	50	;'2'
  1220  00FFBB  2E                 	db	46
  1221  00FFBC  32                 	db	50	;'2'
  1222  00FFBD  66                 	db	102	;'f'
  1223  00FFBE  20                 	db	32
  1224  00FFBF  20                 	db	32
  1225  00FFC0  20                 	db	32
  1226  00FFC1  23                 	db	35
  1227  00FFC2  00                 	db	0
  1228  00FFC3                     STR_14:
  1229                           
  1230                           ; BSR set to: 57
  1231  00FFC3  4E                 	db	78	;'N'
  1232  00FFC4  6F                 	db	111	;'o'
  1233  00FFC5  76                 	db	118	;'v'
  1234  00FFC6  20                 	db	32
  1235  00FFC7  20                 	db	32
  1236  00FFC8  35                 	db	53	;'5'
  1237  00FFC9  20                 	db	32
  1238  00FFCA  32                 	db	50	;'2'
  1239  00FFCB  30                 	db	48	;'0'
  1240  00FFCC  31                 	db	49	;'1'
  1241  00FFCD  39                 	db	57	;'9'
  1242  00FFCE  00                 	db	0
  1243  00FFCF                     STR_18:
  1244                           
  1245                           ; BSR set to: 57
  1246  00FFCF  25                 	db	37
  1247  00FFD0  73                 	db	115	;'s'
  1248  00FFD1  20                 	db	32
  1249  00FFD2  20                 	db	32
  1250  00FFD3  20                 	db	32
  1251  00FFD4  20                 	db	32
  1252  00FFD5  20                 	db	32
  1253  00FFD6  20                 	db	32
  1254  00FFD7  20                 	db	32
  1255  00FFD8  00                 	db	0
  1256  00FFD9                     STR_15:
  1257                           
  1258                           ; BSR set to: 57
  1259  00FFD9  31                 	db	49	;'1'
  1260  00FFDA  38                 	db	56	;'8'
  1261  00FFDB  3A                 	db	58	;':'
  1262  00FFDC  34                 	db	52	;'4'
  1263  00FFDD  36                 	db	54	;'6'
  1264  00FFDE  3A                 	db	58	;':'
  1265  00FFDF  35                 	db	53	;'5'
  1266  00FFE0  36                 	db	54	;'6'
  1267  00FFE1  00                 	db	0
  1268  00FFE2                     STR_32:
  1269                           
  1270                           ; BSR set to: 57
  1271  00FFE2  49                 	db	73	;'I'
  1272  00FFE3  4E                 	db	78	;'N'
  1273  00FFE4  46                 	db	70	;'F'
  1274  00FFE5  00                 	db	0
  1275  00FFE6                     STR_36:
  1276                           
  1277                           ; BSR set to: 57
  1278  00FFE6  4E                 	db	78	;'N'
  1279  00FFE7  41                 	db	65	;'A'
  1280  00FFE8  4E                 	db	78	;'N'
  1281  00FFE9  00                 	db	0
  1282  00FFEA                     STR_33:
  1283                           
  1284                           ; BSR set to: 57
  1285  00FFEA  69                 	db	105	;'i'
  1286  00FFEB  6E                 	db	110	;'n'
  1287  00FFEC  66                 	db	102	;'f'
  1288  00FFED  00                 	db	0
  1289  00FFEE                     STR_37:
  1290                           
  1291                           ; BSR set to: 57
  1292  00FFEE  6E                 	db	110	;'n'
  1293  00FFEF  61                 	db	97	;'a'
  1294  00FFF0  6E                 	db	110	;'n'
  1295  00FFF1  00                 	db	0
  1296  00FFF2                     STR_3:
  1297                           
  1298                           ; BSR set to: 57
  1299  00FFF2  30                 	db	48	;'0'
  1300  00FFF3  2E                 	db	46
  1301  00FFF4  37                 	db	55	;'7'
  1302  00FFF5  00                 	db	0
  1303  00FFF6                     STR_40:
  1304                           
  1305                           ; BSR set to: 57
  1306  00FFF6  6C                 	db	108	;'l'
  1307  00FFF7  66                 	db	102	;'f'
  1308  00FFF8  00                 	db	0
  1309  00FFF9                     STR_12:
  1310                           
  1311                           ; BSR set to: 57
  1312  00FFF9  25                 	db	37
  1313  00FFFA  63                 	db	99	;'c'
  1314  00FFFB  00                 	db	0
  1315  00FFFC                     STR_11:
  1316                           
  1317                           ; BSR set to: 57
  1318  00FFFC  25                 	db	37
  1319  00FFFD  73                 	db	115	;'s'
  1320  00FFFE  00                 	db	0
  1321  0000                     
  1322                           ; #config settings
  1323  00FFFF  00                 	db	0	; dummy byte at the end
  1324  0000                     
  1325                           	psect	cinit
  1326  016794                     __pcinit:
  1327                           	opt callstack 0
  1328  016794                     start_initialization:
  1329                           	opt callstack 0
  1330  016794                     __initialization:
  1331                           	opt callstack 0
  1332                           
  1333                           ; Initialize objects allocated to BANK2 (189 bytes)
  1334                           ; load TBLPTR registers with __pidataBANK2
  1335  016794  0E1E               	movlw	low __pidataBANK2
  1336  016796  6EF6               	movwf	tblptrl,c
  1337  016798  0E69               	movlw	high __pidataBANK2
  1338  01679A  6EF7               	movwf	tblptrh,c
  1339  01679C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1340  01679E  6EF8               	movwf	tblptru,c
  1341  0167A0  EE00  F200         	lfsr	0,__pdataBANK2
  1342  0167A4  EE20 F0BD          	lfsr	2,189
  1343  0167A8                     copy_data0:
  1344  0167A8  0009               	tblrd		*+
  1345  0167AA  006F FFD7 FFEE     	movff	tablat,postinc0
  1346  0167B0  50DD               	movf	postdec2,w,c
  1347  0167B2  50D9               	movf	fsr2l,w,c
  1348  0167B4  E1F9               	bnz	copy_data0
  1349                           
  1350                           ; Initialize objects allocated to BANK0 (23 bytes)
  1351                           ; load TBLPTR registers with __pidataBANK0
  1352  0167B6  0E1E               	movlw	low __pidataBANK0
  1353  0167B8  6EF6               	movwf	tblptrl,c
  1354  0167BA  0E7F               	movlw	high __pidataBANK0
  1355  0167BC  6EF7               	movwf	tblptrh,c
  1356  0167BE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1357  0167C0  6EF8               	movwf	tblptru,c
  1358  0167C2  EE00  F0C5         	lfsr	0,__pdataBANK0
  1359  0167C6  EE20 F017          	lfsr	2,23
  1360  0167CA                     copy_data1:
  1361  0167CA  0009               	tblrd		*+
  1362  0167CC  006F FFD7 FFEE     	movff	tablat,postinc0
  1363  0167D2  50DD               	movf	postdec2,w,c
  1364  0167D4  50D9               	movf	fsr2l,w,c
  1365  0167D6  E1F9               	bnz	copy_data1
  1366                           
  1367                           ; Clear objects allocated to BANK6 (255 bytes)
  1368  0167D8  EE01  F200         	lfsr	0,__pbssBANK6
  1369  0167DC  EE20 F0FF          	lfsr	2,255
  1370  0167E0                     clear_0:
  1371  0167E0  6AEE               	clrf	postinc0,c
  1372  0167E2  50DD               	movf	postdec2,w,c
  1373  0167E4  50D9               	movf	fsr2l,w,c
  1374  0167E6  E1FC               	bnz	clear_0
  1375  0167E8  50DA               	movf	fsr2h,w,c
  1376  0167EA  E1FA               	bnz	clear_0
  1377                           
  1378                           ; Clear objects allocated to BANK5 (255 bytes)
  1379  0167EC  EE01  F100         	lfsr	0,__pbssBANK5
  1380  0167F0  EE20 F0FF          	lfsr	2,255
  1381  0167F4                     clear_1:
  1382  0167F4  6AEE               	clrf	postinc0,c
  1383  0167F6  50DD               	movf	postdec2,w,c
  1384  0167F8  50D9               	movf	fsr2l,w,c
  1385  0167FA  E1FC               	bnz	clear_1
  1386  0167FC  50DA               	movf	fsr2h,w,c
  1387  0167FE  E1FA               	bnz	clear_1
  1388                           
  1389                           ; Clear objects allocated to BANK4 (218 bytes)
  1390  016800  EE01  F000         	lfsr	0,__pbssBANK4
  1391  016804  0EDA               	movlw	218
  1392  016806                     clear_2:
  1393  016806  6AEE               	clrf	postinc0,c
  1394  016808  06E8               	decf	wreg,f,c
  1395  01680A  E1FD               	bnz	clear_2
  1396                           
  1397                           ; Clear objects allocated to BANK3 (198 bytes)
  1398  01680C  EE00  F300         	lfsr	0,__pbssBANK3
  1399  016810  0EC6               	movlw	198
  1400  016812                     clear_3:
  1401  016812  6AEE               	clrf	postinc0,c
  1402  016814  06E8               	decf	wreg,f,c
  1403  016816  E1FD               	bnz	clear_3
  1404                           
  1405                           ; Clear objects allocated to BANK2 (64 bytes)
  1406  016818  EE00  F2BD         	lfsr	0,__pbssBANK2
  1407  01681C  0E40               	movlw	64
  1408  01681E                     clear_4:
  1409  01681E  6AEE               	clrf	postinc0,c
  1410  016820  06E8               	decf	wreg,f,c
  1411  016822  E1FD               	bnz	clear_4
  1412                           
  1413                           ; Clear objects allocated to BANK1 (244 bytes)
  1414  016824  EE00  F100         	lfsr	0,__pbssBANK1
  1415  016828  0EF4               	movlw	244
  1416  01682A                     clear_5:
  1417  01682A  6AEE               	clrf	postinc0,c
  1418  01682C  06E8               	decf	wreg,f,c
  1419  01682E  E1FD               	bnz	clear_5
  1420                           
  1421                           ; Clear objects allocated to BANK0 (101 bytes)
  1422  016830  EE00  F060         	lfsr	0,__pbssBANK0
  1423  016834  0E65               	movlw	101
  1424  016836                     clear_6:
  1425  016836  6AEE               	clrf	postinc0,c
  1426  016838  06E8               	decf	wreg,f,c
  1427  01683A  E1FD               	bnz	clear_6
  1428                           
  1429                           ; Clear objects allocated to COMRAM (52 bytes)
  1430  01683C  EE00  F001         	lfsr	0,__pbssCOMRAM
  1431  016840  0E34               	movlw	52
  1432  016842                     clear_7:
  1433  016842  6AEE               	clrf	postinc0,c
  1434  016844  06E8               	decf	wreg,f,c
  1435  016846  E1FD               	bnz	clear_7
  1436                           
  1437                           ;
  1438                           ; Setup IVTBASE
  1439                           ;
  1440  016848  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1441  01684A  6ED5               	movwf	213,c
  1442  01684C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1443  01684E  6ED6               	movwf	214,c
  1444  016850  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1445  016852  6ED7               	movwf	215,c
  1446  016854                     end_of_initialization:
  1447                           	opt callstack 0
  1448  016854                     __end_of__initialization:
  1449                           	opt callstack 0
  1450  016854  0100               	movlb	0
  1451  016856  EFB1  F09B         	goto	_main	;jump to C main() function
  1452                           
  1453                           	psect	bssCOMRAM
  1454  000001                     __pbssCOMRAM:
  1455                           	opt callstack 0
  1456  000001                     _TMR6_InterruptHandler:
  1457                           	opt callstack 0
  1458  000001                     	ds	3
  1459  000004                     _ADCC_ADTI_InterruptHandler:
  1460                           	opt callstack 0
  1461  000004                     	ds	3
  1462  000007                     _ADCC_ADI_InterruptHandler:
  1463                           	opt callstack 0
  1464  000007                     	ds	3
  1465  00000A                     _UART1_TxInterruptHandler:
  1466                           	opt callstack 0
  1467  00000A                     	ds	3
  1468  00000D                     _UART1_RxInterruptHandler:
  1469                           	opt callstack 0
  1470  00000D                     	ds	3
  1471  000010                     _UART2_TxInterruptHandler:
  1472                           	opt callstack 0
  1473  000010                     	ds	3
  1474  000013                     _UART2_RxInterruptHandler:
  1475                           	opt callstack 0
  1476  000013                     	ds	3
  1477  000016                     _INT1_InterruptHandler:
  1478                           	opt callstack 0
  1479  000016                     	ds	3
  1480  000019                     _INT0_InterruptHandler:
  1481                           	opt callstack 0
  1482  000019                     	ds	3
  1483  00001C                     _nout:
  1484                           	opt callstack 0
  1485  00001C                     	ds	2
  1486  00001E                     _width:
  1487                           	opt callstack 0
  1488  00001E                     	ds	2
  1489  000020                     _prec:
  1490                           	opt callstack 0
  1491  000020                     	ds	2
  1492  000022                     _flags:
  1493                           	opt callstack 0
  1494  000022                     	ds	2
  1495  000024                     TMR5_ISR@CountCallBack:
  1496                           	opt callstack 0
  1497  000024                     	ds	2
  1498  000026                     _timer5ReloadVal:
  1499                           	opt callstack 0
  1500  000026                     	ds	2
  1501  000028                     _mode_sw:
  1502                           	opt callstack 0
  1503  000028                     	ds	1
  1504  000029                     _uart2RxCount:
  1505                           	opt callstack 0
  1506  000029                     	ds	1
  1507  00002A                     _uart2RxTail:
  1508                           	opt callstack 0
  1509  00002A                     	ds	1
  1510  00002B                     _uart2RxHead:
  1511                           	opt callstack 0
  1512  00002B                     	ds	1
  1513  00002C                     _uart2TxBufferRemaining:
  1514                           	opt callstack 0
  1515  00002C                     	ds	1
  1516  00002D                     _uart2TxTail:
  1517                           	opt callstack 0
  1518  00002D                     	ds	1
  1519  00002E                     _uart2TxHead:
  1520                           	opt callstack 0
  1521  00002E                     	ds	1
  1522  00002F                     _uart1RxCount:
  1523                           	opt callstack 0
  1524  00002F                     	ds	1
  1525  000030                     _uart1RxTail:
  1526                           	opt callstack 0
  1527  000030                     	ds	1
  1528  000031                     _uart1RxHead:
  1529                           	opt callstack 0
  1530  000031                     	ds	1
  1531  000032                     _uart1TxBufferRemaining:
  1532                           	opt callstack 0
  1533  000032                     	ds	1
  1534  000033                     _uart1TxTail:
  1535                           	opt callstack 0
  1536  000033                     	ds	1
  1537  000034                     _uart1TxHead:
  1538                           	opt callstack 0
  1539  000034                     	ds	1
  1540                           
  1541                           	psect	bssBANK0
  1542  000060                     __pbssBANK0:
  1543                           	opt callstack 0
  1544  000060                     _R:
  1545                           	opt callstack 0
  1546  000060                     	ds	34
  1547  000082                     _tickCount:
  1548                           	opt callstack 0
  1549  000082                     	ds	24
  1550  00009A                     _spi_link:
  1551                           	opt callstack 0
  1552  00009A                     	ds	12
  1553  0000A6                     floorf@F524:
  1554                           	opt callstack 0
  1555  0000A6                     	ds	4
  1556  0000AA                     ___fpclassifyf@F463:
  1557                           	opt callstack 0
  1558  0000AA                     	ds	4
  1559  0000AE                     lp_filter@lp_x:
  1560                           	opt callstack 0
  1561  0000AE                     	ds	4
  1562  0000B2                     lp_filter@lp_speed:
  1563                           	opt callstack 0
  1564  0000B2                     	ds	4
  1565  0000B6                     wdtdelay@dcount:
  1566                           	opt callstack 0
  1567  0000B6                     	ds	4
  1568  0000BA                     _TMR5_InterruptHandler:
  1569                           	opt callstack 0
  1570  0000BA                     	ds	3
  1571  0000BD                     _seed:
  1572                           	opt callstack 0
  1573  0000BD                     	ds	8
  1574                           
  1575                           	psect	dataBANK0
  1576  0000C5                     __pdataBANK0:
  1577                           	opt callstack 0
  1578  0000C5                     stoa@F1166:
  1579                           	opt callstack 0
  1580  0000C5                     	ds	7
  1581  0000CC                     _port_data:
  1582                           	opt callstack 0
  1583  0000CC                     	ds	16
  1584                           
  1585                           	psect	bssBANK1
  1586  000100                     __pbssBANK1:
  1587                           	opt callstack 0
  1588  000100                     _C:
  1589                           	opt callstack 0
  1590  000100                     	ds	104
  1591  000168                     lp_filter@smooth:
  1592                           	opt callstack 0
  1593  000168                     	ds	60
  1594  0001A4                     _dbuf:
  1595                           	opt callstack 0
  1596  0001A4                     	ds	80
  1597                           
  1598                           	psect	bssBANK2
  1599  0002BD                     __pbssBANK2:
  1600                           	opt callstack 0
  1601  0002BD                     _uart1TxBuffer:
  1602                           	opt callstack 0
  1603  0002BD                     	ds	64
  1604                           
  1605                           	psect	dataBANK2
  1606  000200                     __pdataBANK2:
  1607                           	opt callstack 0
  1608  000200                     _V:
  1609                           	opt callstack 0
  1610  000200                     	ds	189
  1611                           
  1612                           	psect	bssBANK3
  1613  000300                     __pbssBANK3:
  1614                           	opt callstack 0
  1615  000300                     _uart2TxBuffer:
  1616                           	opt callstack 0
  1617  000300                     	ds	64
  1618  000340                     _ring_buf2:
  1619                           	opt callstack 0
  1620  000340                     	ds	67
  1621  000383                     _ring_buf1:
  1622                           	opt callstack 0
  1623  000383                     	ds	67
  1624                           
  1625                           	psect	bssBANK4
  1626  000400                     __pbssBANK4:
  1627                           	opt callstack 0
  1628  000400                     _D:
  1629                           	opt callstack 0
  1630  000400                     	ds	218
  1631                           
  1632                           	psect	bssBANK5
  1633  000500                     __pbssBANK5:
  1634                           	opt callstack 0
  1635  000500                     _uart1RxBuffer:
  1636                           	opt callstack 0
  1637  000500                     	ds	255
  1638                           
  1639                           	psect	bssBANK6
  1640  000600                     __pbssBANK6:
  1641                           	opt callstack 0
  1642  000600                     _uart2RxBuffer:
  1643                           	opt callstack 0
  1644  000600                     	ds	255
  1645                           
  1646                           	psect	cstackBANK0
  1647  0000DC                     __pcstackBANK0:
  1648                           	opt callstack 0
  1649  0000DC                     ??_TMR6_ISR:
  1650                           
  1651                           ; 1 bytes @ 0x0
  1652  0000DC                     	ds	1
  1653  0000DD                     ??_TMR5_ISR:
  1654                           
  1655                           ; 1 bytes @ 0x1
  1656  0000DD                     	ds	4
  1657                           
  1658                           	psect	cstackCOMRAM
  1659  000055                     __pcstackCOMRAM:
  1660                           	opt callstack 0
  1661  000055                     ??_ADCC_ISR:
  1662  000055                     
  1663                           ; 1 bytes @ 0x0
  1664  000055                     	ds	1
  1665  000056                     ??_ADCC_ThresholdISR:
  1666                           
  1667                           ; 1 bytes @ 0x1
  1668  000056                     	ds	5
  1669                           
  1670 ;;
  1671 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1672 ;;
  1673 ;; *************** function _main *****************
  1674 ;; Defined at:
  1675 ;;		line 149 in file "main.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  mode            1  [STACK] enum E17005
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1  [STACK] void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1693 ;;Total ram usage:        0 bytes
  1694 ;; Hardware stack levels required when called:   19
  1695 ;; This function calls:
  1696 ;;		_SYSTEM_Initialize
  1697 ;;		_StartTimer
  1698 ;;		_TimerDone
  1699 ;;		_WaitMs
  1700 ;;		_check_adc_scan
  1701 ;;		_check_help
  1702 ;;		_clear_adc_scan
  1703 ;;		_conv_raw_result
  1704 ;;		_eaDogM_WriteCommand
  1705 ;;		_get_raw_result
  1706 ;;		_get_vterm_ptr
  1707 ;;		_init_display
  1708 ;;		_lp_filter
  1709 ;;		_mode_lamp_dim
  1710 ;;		_set_display_info
  1711 ;;		_set_vterm
  1712 ;;		_sprintf
  1713 ;;		_srand
  1714 ;;		_start_adc_scan
  1715 ;;		_update_lcd
  1716 ;; This function is called by:
  1717 ;;		Startup code after reset
  1718 ;; This function uses a reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text0
  1722  013762                     __ptext0:
  1723                           	opt callstack 0
  1724  013762                     _main:
  1725                           	opt callstack 0
  1726                           
  1727                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1728  013762  52E6               	movf	postinc1,f,c
  1729                           
  1730                           ;main.c: 151:  UI_STATES mode;;main.c: 154:  SYSTEM_Initialize();
  1731                           
  1732                           ;incstack = 0
  1733  013764  EC04  F0BB         	call	_SYSTEM_Initialize	;wreg free
  1734                           
  1735                           ; BSR set to: 60
  1736                           ;main.c: 157:  (INTCON0bits.GIEH = 1);
  1737  013768  8ED2               	bsf	210,7,c	;volatile
  1738                           
  1739                           ; BSR set to: 60
  1740                           ;main.c: 160:  (INTCON0bits.GIEL = 1);
  1741  01376A  8CD2               	bsf	210,6,c	;volatile
  1742                           
  1743                           ; BSR set to: 60
  1744                           ;main.c: 162:  V.ui_state = UI_STATE_INIT;
  1745  01376C  0102               	movlb	2	; () banked
  1746  01376E  6B00               	clrf	_V& (0+255),b	;volatile
  1747                           
  1748                           ; BSR set to: 2
  1749                           ;main.c: 167:  WaitMs(300);
  1750  013770  0E2C               	movlw	44
  1751  013772  6EE6               	movwf	postinc1,c
  1752  013774  0E01               	movlw	1
  1753  013776  6EE6               	movwf	postinc1,c
  1754  013778  EC26  F0BC         	call	_WaitMs	;wreg free
  1755                           
  1756                           ;main.c: 168:  if (PORTBbits.RB0) {
  1757  01377C  A0CB               	btfss	203,0,c	;volatile
  1758  01377E  D004               	goto	l9903
  1759                           
  1760                           ;main.c: 169:   mode = UI_STATE_HOST;
  1761                           ;stkvar	_mode @ sp[(-1)+0]
  1762  013780  0EFF               	movlw	-1
  1763  013782  6AE3               	clrf	plusw1,c
  1764  013784  2AE3               	incf	plusw1,f,c
  1765                           
  1766                           ;main.c: 170:  } else {
  1767  013786  D004               	goto	l9905
  1768  013788                     l9903:
  1769                           
  1770                           ;main.c: 171:   mode = UI_STATE_LOG;
  1771                           ;stkvar	_mode @ sp[(-1)+0]
  1772  013788  0EFF               	movlw	-1
  1773  01378A  6AE3               	clrf	plusw1,c
  1774  01378C  80E3               	bsf	plusw1,0,c
  1775  01378E  82E3               	bsf	plusw1,1,c	;indir
  1776  013790                     l9905:
  1777                           
  1778                           ;main.c: 174:  if (mode == UI_STATE_HOST) {
  1779                           ;stkvar	_mode @ sp[(-1)+0]
  1780  013790  0EFF               	movlw	-1
  1781  013792  04E3               	decf	plusw1,w,c
  1782  013794  A4D8               	btfss	status,2,c
  1783  013796  D007               	goto	l1242
  1784                           
  1785                           ;main.c: 175:   do { LATDbits.LATD0 = 1; } while(0);
  1786  013798  80BD               	bsf	189,0,c	;volatile
  1787                           
  1788                           ;main.c: 176:   V.mode_pwm = 70;
  1789  01379A  0E00               	movlw	0
  1790  01379C  0102               	movlb	2	; () banked
  1791  01379E  6FA0               	movwf	(_V+160)& (0+255),b	;volatile
  1792  0137A0  0E46               	movlw	70
  1793  0137A2  6F9F               	movwf	(_V+159)& (0+255),b	;volatile
  1794                           
  1795                           ;main.c: 177:  } else {
  1796  0137A4  D004               	goto	l9909
  1797  0137A6                     l1242:
  1798  0137A6  90BD               	bcf	189,0,c	;volatile
  1799                           
  1800                           ;main.c: 179:   V.mode_pwm = 0;
  1801  0137A8  0102               	movlb	2	; () banked
  1802  0137AA  6B9F               	clrf	(_V+159)& (0+255),b	;volatile
  1803  0137AC  6BA0               	clrf	(_V+160)& (0+255),b	;volatile
  1804  0137AE                     l9909:
  1805                           
  1806                           ; BSR set to: 2
  1807                           ;main.c: 181:  mode_lamp_dim(V.mode_pwm);
  1808  0137AE  0060  FA7F  FFE6   	movff	_V+159,postinc1
  1809  0137B4  0060  FA83  FFE6   	movff	_V+160,postinc1
  1810  0137BA  EC77  F0BF         	call	_mode_lamp_dim	;wreg free
  1811  0137BE  D0CB               	goto	l9951
  1812  0137C0                     l9911:
  1813                           
  1814                           ; BSR set to: 2
  1815                           ;main.c: 192:    init_display();
  1816  0137C0  ECEB  F0B2         	call	_init_display	;wreg free
  1817                           
  1818                           ; BSR set to: 61
  1819                           ;main.c: 193:    eaDogM_WriteCommand(0b00001100);
  1820  0137C4  0E0C               	movlw	12
  1821  0137C6  6EE6               	movwf	postinc1,c
  1822  0137C8  ECD7  F0BF         	call	_eaDogM_WriteCommand	;wreg free
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 195:    V.ui_state = mode;
  1826                           ;stkvar	_mode @ sp[(-1)+0]
  1827  0137CC  0EFF               	movlw	-1
  1828  0137CE  006F FF8C  F200    	movff	plusw1,_V	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 196:    srand(1957);
  1832  0137D4  0EA5               	movlw	165
  1833  0137D6  6EE6               	movwf	postinc1,c
  1834  0137D8  0E07               	movlw	7
  1835  0137DA  6EE6               	movwf	postinc1,c
  1836  0137DC  EC5C  F0BC         	call	_srand	;wreg free
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;main.c: 197:    set_vterm(0);
  1840  0137E0  0E00               	movlw	0
  1841  0137E2  6EE6               	movwf	postinc1,c
  1842  0137E4  EC42  F0BF         	call	_set_vterm	;wreg free
  1843                           
  1844                           ; BSR set to: 4
  1845                           ;main.c: 198:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1846  0137E8  0E76               	movlw	low STR_1
  1847  0137EA  6EE6               	movwf	postinc1,c
  1848  0137EC  0EFF               	movlw	high STR_1
  1849  0137EE  6EE6               	movwf	postinc1,c
  1850  0137F0  0E00               	movlw	0
  1851  0137F2  6EE6               	movwf	postinc1,c
  1852  0137F4  0E00               	movlw	0
  1853  0137F6  6EE6               	movwf	postinc1,c
  1854  0137F8  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  1855  0137FC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1856  013802  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1857  013808  0E04               	movlw	4
  1858  01380A  6EE6               	movwf	postinc1,c
  1859  01380C  EC66  F0B2         	call	_sprintf	;wreg free
  1860                           
  1861                           ;main.c: 199:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.7");
  1862  013810  0EF2               	movlw	low STR_3
  1863  013812  6EE6               	movwf	postinc1,c
  1864  013814  0EFF               	movlw	high STR_3
  1865  013816  6EE6               	movwf	postinc1,c
  1866  013818  0EA7               	movlw	low STR_2
  1867  01381A  6EE6               	movwf	postinc1,c
  1868  01381C  0EFF               	movlw	high STR_2
  1869  01381E  6EE6               	movwf	postinc1,c
  1870  013820  0E00               	movlw	0
  1871  013822  6EE6               	movwf	postinc1,c
  1872  013824  0E01               	movlw	1
  1873  013826  6EE6               	movwf	postinc1,c
  1874  013828  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  1875  01382C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1876  013832  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1877  013838  0E06               	movlw	6
  1878  01383A  6EE6               	movwf	postinc1,c
  1879  01383C  EC66  F0B2         	call	_sprintf	;wreg free
  1880                           
  1881                           ;main.c: 200:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1882  013840  0E65               	movlw	low STR_4
  1883  013842  6EE6               	movwf	postinc1,c
  1884  013844  0EFF               	movlw	high STR_4
  1885  013846  6EE6               	movwf	postinc1,c
  1886  013848  0E00               	movlw	0
  1887  01384A  6EE6               	movwf	postinc1,c
  1888  01384C  0E02               	movlw	2
  1889  01384E  6EE6               	movwf	postinc1,c
  1890  013850  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  1891  013854  0060  F0D7  FFE6   	movff	btemp,postinc1
  1892  01385A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1893  013860  0E04               	movlw	4
  1894  013862  6EE6               	movwf	postinc1,c
  1895  013864  EC66  F0B2         	call	_sprintf	;wreg free
  1896                           
  1897                           ;main.c: 201:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1898  013868  0E87               	movlw	low STR_5
  1899  01386A  6EE6               	movwf	postinc1,c
  1900  01386C  0EFF               	movlw	high STR_5
  1901  01386E  6EE6               	movwf	postinc1,c
  1902  013870  0E02               	movlw	2
  1903  013872  6EE6               	movwf	postinc1,c
  1904  013874  0E00               	movlw	0
  1905  013876  6EE6               	movwf	postinc1,c
  1906  013878  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  1907  01387C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1908  013882  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1909  013888  0E04               	movlw	4
  1910  01388A  6EE6               	movwf	postinc1,c
  1911  01388C  EC66  F0B2         	call	_sprintf	;wreg free
  1912                           
  1913                           ;main.c: 202:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.7");
  1914  013890  0EF2               	movlw	low STR_3
  1915  013892  6EE6               	movwf	postinc1,c
  1916  013894  0EFF               	movlw	high STR_3
  1917  013896  6EE6               	movwf	postinc1,c
  1918  013898  0EA7               	movlw	low STR_2
  1919  01389A  6EE6               	movwf	postinc1,c
  1920  01389C  0EFF               	movlw	high STR_2
  1921  01389E  6EE6               	movwf	postinc1,c
  1922  0138A0  0E02               	movlw	2
  1923  0138A2  6EE6               	movwf	postinc1,c
  1924  0138A4  0E01               	movlw	1
  1925  0138A6  6EE6               	movwf	postinc1,c
  1926  0138A8  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  1927  0138AC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1928  0138B2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1929  0138B8  0E06               	movlw	6
  1930  0138BA  6EE6               	movwf	postinc1,c
  1931  0138BC  EC66  F0B2         	call	_sprintf	;wreg free
  1932                           
  1933                           ;main.c: 203:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1934  0138C0  0E54               	movlw	low STR_8
  1935  0138C2  6EE6               	movwf	postinc1,c
  1936  0138C4  0EFF               	movlw	high STR_8
  1937  0138C6  6EE6               	movwf	postinc1,c
  1938  0138C8  0E02               	movlw	2
  1939  0138CA  6EE6               	movwf	postinc1,c
  1940  0138CC  0E02               	movlw	2
  1941  0138CE  6EE6               	movwf	postinc1,c
  1942  0138D0  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  1943  0138D4  0060  F0D7  FFE6   	movff	btemp,postinc1
  1944  0138DA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1945  0138E0  0E04               	movlw	4
  1946  0138E2  6EE6               	movwf	postinc1,c
  1947  0138E4  EC66  F0B2         	call	_sprintf	;wreg free
  1948                           
  1949                           ;main.c: 204:    update_lcd(0);
  1950  0138E8  0E00               	movlw	0
  1951  0138EA  6EE6               	movwf	postinc1,c
  1952  0138EC  ECDF  F0B1         	call	_update_lcd	;wreg free
  1953                           
  1954                           ;main.c: 205:    WaitMs(3000);
  1955  0138F0  0EB8               	movlw	184
  1956  0138F2  6EE6               	movwf	postinc1,c
  1957  0138F4  0E0B               	movlw	11
  1958  0138F6  6EE6               	movwf	postinc1,c
  1959  0138F8  EC26  F0BC         	call	_WaitMs	;wreg free
  1960                           
  1961                           ;main.c: 206:    StartTimer(TMR_DISPLAY, 250);
  1962  0138FC  0EFA               	movlw	250
  1963  0138FE  6EE6               	movwf	postinc1,c
  1964  013900  0E00               	movlw	0
  1965  013902  6EE6               	movwf	postinc1,c
  1966  013904  0E0A               	movlw	10
  1967  013906  6EE6               	movwf	postinc1,c
  1968  013908  ECD0  F0BB         	call	_StartTimer	;wreg free
  1969                           
  1970                           ;main.c: 207:    StartTimer(TMR_ADC, 500);
  1971  01390C  0EF4               	movlw	244
  1972  01390E  6EE6               	movwf	postinc1,c
  1973  013910  0E01               	movlw	1
  1974  013912  6EE6               	movwf	postinc1,c
  1975  013914  0E01               	movlw	1
  1976  013916  6EE6               	movwf	postinc1,c
  1977  013918  ECD0  F0BB         	call	_StartTimer	;wreg free
  1978                           
  1979                           ;main.c: 208:    StartTimer(TMR_INFO, 3000);
  1980  01391C  0EB8               	movlw	184
  1981  01391E  6EE6               	movwf	postinc1,c
  1982  013920  0E0B               	movlw	11
  1983  013922  6EE6               	movwf	postinc1,c
  1984  013924  0E07               	movlw	7
  1985  013926  6EE6               	movwf	postinc1,c
  1986  013928  ECD0  F0BB         	call	_StartTimer	;wreg free
  1987                           
  1988                           ;main.c: 209:    StartTimer(TMR_FLIPPER, 1500);
  1989  01392C  0EDC               	movlw	220
  1990  01392E  6EE6               	movwf	postinc1,c
  1991  013930  0E05               	movlw	5
  1992  013932  6EE6               	movwf	postinc1,c
  1993  013934  0E0B               	movlw	11
  1994  013936  6EE6               	movwf	postinc1,c
  1995  013938  ECD0  F0BB         	call	_StartTimer	;wreg free
  1996                           
  1997                           ;main.c: 210:    StartTimer(TMR_HELPDIS, 3000);
  1998  01393C  0EB8               	movlw	184
  1999  01393E  6EE6               	movwf	postinc1,c
  2000  013940  0E0B               	movlw	11
  2001  013942  6EE6               	movwf	postinc1,c
  2002  013944  0E09               	movlw	9
  2003  013946  6EE6               	movwf	postinc1,c
  2004  013948  ECD0  F0BB         	call	_StartTimer	;wreg free
  2005                           
  2006                           ;main.c: 212:    start_adc_scan();
  2007  01394C  ECFB  F0B8         	call	_start_adc_scan	;wreg free
  2008                           
  2009                           ;main.c: 214:    break;
  2010  013950  D016               	goto	l9953
  2011  013952                     l1251:
  2012                           
  2013                           ; BSR set to: 2
  2014                           ;main.c: 221:    V.ui_state = UI_STATE_INIT;
  2015  013952  6B00               	clrf	_V& (0+255),b	;volatile
  2016                           
  2017                           ;main.c: 222:    break;
  2018  013954  D014               	goto	l9953
  2019  013956                     l9951:
  2020  013956  0102               	movlb	2	; () banked
  2021  013958  5100               	movf	_V& (0+255),w,b	;volatile
  2022  01395A  6E3F               	movwf	(btemp+10)^0,c
  2023  01395C  6A40               	clrf	(btemp+11)^0,c
  2024                           
  2025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2026                           ; Switch size 1, requested type "simple"
  2027                           ; Number of cases is 1, Range of values is 0 to 0
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte            4     3 (average)
  2031                           ;	Chosen strategy is simple_byte
  2032  01395E  5040               	movf	(btemp+11)^0,w,c
  2033  013960  0A00               	xorlw	0	; case 0
  2034  013962  A4D8               	btfss	status,2,c
  2035  013964  D7F6               	goto	l1251
  2036                           
  2037                           ; BSR set to: 2
  2038                           ; Switch size 1, requested type "simple"
  2039                           ; Number of cases is 4, Range of values is 0 to 4
  2040                           ; switch strategies available:
  2041                           ; Name         Instructions Cycles
  2042                           ; simple_byte           13     7 (average)
  2043                           ;	Chosen strategy is simple_byte
  2044  013966  503F               	movf	(btemp+10)^0,w,c
  2045  013968  0A00               	xorlw	0	; case 0
  2046  01396A  B4D8               	btfsc	status,2,c
  2047  01396C  D729               	goto	l9911
  2048  01396E  0A01               	xorlw	1	; case 1
  2049  013970  B4D8               	btfsc	status,2,c
  2050  013972  D005               	goto	l9953
  2051  013974  0A02               	xorlw	2	; case 3
  2052  013976  B4D8               	btfsc	status,2,c
  2053  013978  D002               	goto	l9953
  2054  01397A  0A07               	xorlw	7	; case 4
  2055  01397C  D7EA               	goto	l1251
  2056  01397E                     l9953:
  2057                           
  2058                           ;main.c: 225:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2059  01397E  0E01               	movlw	1
  2060  013980  6EE6               	movwf	postinc1,c
  2061  013982  EC83  F0BE         	call	_TimerDone	;wreg free
  2062  013986  5035               	movf	btemp^0,w,c
  2063  013988  B4D8               	btfsc	status,2,c
  2064  01398A  D059               	goto	l9965
  2065  01398C  EC1B  F0C0         	call	_check_adc_scan	;wreg free
  2066  013990  5035               	movf	btemp^0,w,c
  2067  013992  B4D8               	btfsc	status,2,c
  2068  013994  D054               	goto	l9965
  2069                           
  2070                           ;main.c: 229:    C.calc[C_BATT] = lp_filter(conv_raw_result(C_BATT, C_CONV), C_BATT, 0);
  2071  013996  0E00               	movlw	0
  2072  013998  6EE6               	movwf	postinc1,c
  2073  01399A  0E00               	movlw	0
  2074  01399C  6EE6               	movwf	postinc1,c
  2075  01399E  0E00               	movlw	0
  2076  0139A0  6EE6               	movwf	postinc1,c
  2077  0139A2  0E00               	movlw	0
  2078  0139A4  6EE6               	movwf	postinc1,c
  2079  0139A6  ECF0  F0AA         	call	_conv_raw_result	;wreg free
  2080  0139AA  0060  F0D7  FFE6   	movff	btemp,postinc1
  2081  0139B0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2082  0139B6  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2083  0139BC  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2084  0139C2  EC96  F0A6         	call	_lp_filter	;wreg free
  2085  0139C6  0060  F0D4  F100   	movff	btemp,_C
  2086  0139CC  0060  F0D8  F101   	movff	btemp+1,_C+1
  2087  0139D2  0060  F0DC  F102   	movff	btemp+2,_C+2
  2088  0139D8  0060  F0E0  F103   	movff	btemp+3,_C+3
  2089                           
  2090                           ;main.c: 230:    C.calc[V_CC] = lp_filter(conv_raw_result(V_CC, V_CONV), V_CC, 0);
  2091  0139DE  0E00               	movlw	0
  2092  0139E0  6EE6               	movwf	postinc1,c
  2093  0139E2  0E02               	movlw	2
  2094  0139E4  6EE6               	movwf	postinc1,c
  2095  0139E6  0E01               	movlw	1
  2096  0139E8  6EE6               	movwf	postinc1,c
  2097  0139EA  0E02               	movlw	2
  2098  0139EC  6EE6               	movwf	postinc1,c
  2099  0139EE  ECF0  F0AA         	call	_conv_raw_result	;wreg free
  2100  0139F2  0060  F0D7  FFE6   	movff	btemp,postinc1
  2101  0139F8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2102  0139FE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2103  013A04  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2104  013A0A  EC96  F0A6         	call	_lp_filter	;wreg free
  2105  013A0E  0060  F0D4  F108   	movff	btemp,_C+8
  2106  013A14  0060  F0D8  F109   	movff	btemp+1,_C+9
  2107  013A1A  0060  F0DC  F10A   	movff	btemp+2,_C+10
  2108  013A20  0060  F0E0  F10B   	movff	btemp+3,_C+11
  2109                           
  2110                           ;main.c: 234:    clear_adc_scan();
  2111  013A26  EC23  F0C0         	call	_clear_adc_scan	;wreg free
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;main.c: 235:    start_adc_scan();
  2115  013A2A  ECFB  F0B8         	call	_start_adc_scan	;wreg free
  2116                           
  2117                           ;main.c: 236:    StartTimer(TMR_ADC, 500);
  2118  013A2E  0EF4               	movlw	244
  2119  013A30  6EE6               	movwf	postinc1,c
  2120  013A32  0E01               	movlw	1
  2121  013A34  6EE6               	movwf	postinc1,c
  2122  013A36  0E01               	movlw	1
  2123  013A38  6EE6               	movwf	postinc1,c
  2124  013A3A  ECD0  F0BB         	call	_StartTimer	;wreg free
  2125  013A3E                     l9965:
  2126                           
  2127                           ;main.c: 243:   if (TimerDone(TMR_DISPLAY)) {
  2128                           
  2129                           ;main.c: 239:   if (V.ticks) {
  2130  013A3E  0E0A               	movlw	10
  2131  013A40  6EE6               	movwf	postinc1,c
  2132  013A42  EC83  F0BE         	call	_TimerDone	;wreg free
  2133  013A46  5035               	movf	btemp^0,w,c
  2134  013A48  B4D8               	btfsc	status,2,c
  2135  013A4A  D06B               	goto	l9981
  2136                           
  2137                           ;main.c: 244:    if (TimerDone(TMR_HELPDIS)) {
  2138  013A4C  0E09               	movlw	9
  2139  013A4E  6EE6               	movwf	postinc1,c
  2140  013A50  EC83  F0BE         	call	_TimerDone	;wreg free
  2141  013A54  5035               	movf	btemp^0,w,c
  2142  013A56  B4D8               	btfsc	status,2,c
  2143  013A58  D004               	goto	l9973
  2144                           
  2145                           ;main.c: 245:     set_display_info(DIS_STR);
  2146  013A5A  0E00               	movlw	0
  2147  013A5C  6EE6               	movwf	postinc1,c
  2148  013A5E  ECF8  F0BE         	call	_set_display_info	;wreg free
  2149  013A62                     l9973:
  2150                           
  2151                           ;main.c: 247:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2152  013A62  0060  F403  FFE6   	movff	_C,postinc1
  2153  013A68  0060  F407  FFE6   	movff	_C+1,postinc1
  2154  013A6E  0060  F40B  FFE6   	movff	_C+2,postinc1
  2155  013A74  0060  F40F  FFE6   	movff	_C+3,postinc1
  2156  013A7A  0E00               	movlw	0
  2157  013A7C  6EE6               	movwf	postinc1,c
  2158  013A7E  ECE9  F0BE         	call	_get_raw_result	;wreg free
  2159  013A82  0060  F0D7  FFE6   	movff	btemp,postinc1
  2160  013A88  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2161  013A8E  0EB6               	movlw	low STR_9
  2162  013A90  6EE6               	movwf	postinc1,c
  2163  013A92  0EFF               	movlw	high STR_9
  2164  013A94  6EE6               	movwf	postinc1,c
  2165  013A96  0E00               	movlw	0
  2166  013A98  6EE6               	movwf	postinc1,c
  2167  013A9A  0E01               	movlw	1
  2168  013A9C  6EE6               	movwf	postinc1,c
  2169  013A9E  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  2170  013AA2  0060  F0D7  FFE6   	movff	btemp,postinc1
  2171  013AA8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2172  013AAE  0E0A               	movlw	10
  2173  013AB0  6EE6               	movwf	postinc1,c
  2174  013AB2  EC66  F0B2         	call	_sprintf	;wreg free
  2175                           
  2176                           ;main.c: 248:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f   #", get_raw_result(V_CC), C.ca
      +                          lc[V_CC]);
  2177  013AB6  0060  F423  FFE6   	movff	_C+8,postinc1
  2178  013ABC  0060  F427  FFE6   	movff	_C+9,postinc1
  2179  013AC2  0060  F42B  FFE6   	movff	_C+10,postinc1
  2180  013AC8  0060  F42F  FFE6   	movff	_C+11,postinc1
  2181  013ACE  0E02               	movlw	2
  2182  013AD0  6EE6               	movwf	postinc1,c
  2183  013AD2  ECE9  F0BE         	call	_get_raw_result	;wreg free
  2184  013AD6  0060  F0D7  FFE6   	movff	btemp,postinc1
  2185  013ADC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2186  013AE2  0EB6               	movlw	low STR_9
  2187  013AE4  6EE6               	movwf	postinc1,c
  2188  013AE6  0EFF               	movlw	high STR_9
  2189  013AE8  6EE6               	movwf	postinc1,c
  2190  013AEA  0E00               	movlw	0
  2191  013AEC  6EE6               	movwf	postinc1,c
  2192  013AEE  0E02               	movlw	2
  2193  013AF0  6EE6               	movwf	postinc1,c
  2194  013AF2  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  2195  013AF6  0060  F0D7  FFE6   	movff	btemp,postinc1
  2196  013AFC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2197  013B02  0E0A               	movlw	10
  2198  013B04  6EE6               	movwf	postinc1,c
  2199  013B06  EC66  F0B2         	call	_sprintf	;wreg free
  2200                           
  2201                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  2202  013B0A  0EFA               	movlw	250
  2203  013B0C  6EE6               	movwf	postinc1,c
  2204  013B0E  0E00               	movlw	0
  2205  013B10  6EE6               	movwf	postinc1,c
  2206  013B12  0E0A               	movlw	10
  2207  013B14  6EE6               	movwf	postinc1,c
  2208  013B16  ECD0  F0BB         	call	_StartTimer	;wreg free
  2209                           
  2210                           ;main.c: 250:    update_lcd(0);
  2211  013B1A  0E00               	movlw	0
  2212  013B1C  6EE6               	movwf	postinc1,c
  2213  013B1E  ECDF  F0B1         	call	_update_lcd	;wreg free
  2214  013B22                     l9981:
  2215                           
  2216                           ;main.c: 256:   check_help(V.flipper);
  2217  013B22  0102               	movlb	2	; () banked
  2218  013B24  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  2219  013B26  6EE6               	movwf	postinc1,c
  2220  013B28  ECE5  F0A8         	call	_check_help	;wreg free
  2221                           
  2222                           ;main.c: 261:   if (V.set_sequ) {
  2223  013B2C  0102               	movlb	2	; () banked
  2224  013B2E  A7A7               	btfss	(_V+167)& (0+255),3,b	;volatile
  2225  013B30  D712               	goto	l9951
  2226                           
  2227                           ; BSR set to: 2
  2228                           ;main.c: 262:    if (TimerDone(TMR_INFO)) {
  2229  013B32  0E07               	movlw	7
  2230  013B34  6EE6               	movwf	postinc1,c
  2231  013B36  EC83  F0BE         	call	_TimerDone	;wreg free
  2232  013B3A  5035               	movf	btemp^0,w,c
  2233  013B3C  B4D8               	btfsc	status,2,c
  2234  013B3E  D00B               	goto	l9993
  2235                           
  2236                           ;main.c: 263:     V.set_sequ = 0;
  2237  013B40  0102               	movlb	2	; () banked
  2238  013B42  97A7               	bcf	(_V+167)& (0+255),3,b	;volatile
  2239                           
  2240                           ; BSR set to: 2
  2241                           ;main.c: 264:     set_vterm(0);
  2242  013B44  0E00               	movlw	0
  2243  013B46  6EE6               	movwf	postinc1,c
  2244  013B48  EC42  F0BF         	call	_set_vterm	;wreg free
  2245                           
  2246                           ; BSR set to: 4
  2247                           ;main.c: 265:     update_lcd(0);
  2248  013B4C  0E00               	movlw	0
  2249  013B4E  6EE6               	movwf	postinc1,c
  2250  013B50  ECDF  F0B1         	call	_update_lcd	;wreg free
  2251                           
  2252                           ;main.c: 266:    } else {
  2253  013B54  D700               	goto	l9951
  2254  013B56                     l9993:
  2255                           
  2256                           ;main.c: 267:     set_vterm(2);
  2257  013B56  0E02               	movlw	2
  2258  013B58  6EE6               	movwf	postinc1,c
  2259  013B5A  EC42  F0BF         	call	_set_vterm	;wreg free
  2260                           
  2261                           ; BSR set to: 4
  2262                           ;main.c: 268:     update_lcd(2);
  2263  013B5E  0E02               	movlw	2
  2264  013B60  6EE6               	movwf	postinc1,c
  2265  013B62  ECDF  F0B1         	call	_update_lcd	;wreg free
  2266  013B66  D6F7               	goto	l9951
  2267  013B68                     __end_of_main:
  2268                           	opt callstack 0
  2269                           
  2270 ;; *************** function _start_adc_scan *****************
  2271 ;; Defined at:
  2272 ;;		line 29 in file "daq.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1  [STACK] _Bool 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/4
  2283 ;;		On exit  : 1/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    7
  2293 ;; This function calls:
  2294 ;;		_ADCC_SetADIInterruptHandler
  2295 ;;		_ADCC_SetADTIInterruptHandler
  2296 ;;		_ADCC_StartConversion
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text1
  2303  0171F6                     __ptext1:
  2304                           	opt callstack 0
  2305  0171F6                     _start_adc_scan:
  2306                           	opt callstack 23
  2307                           
  2308                           ;daq.c: 31:  if (R.done)
  2309                           
  2310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2311                           ;incstack = 0
  2312  0171F6  0100               	movlb	0	; () banked
  2313  0171F8  5181               	movf	(_R+33)& (0+255),w,b	;volatile
  2314  0171FA  A4D8               	btfss	status,2,c
  2315  0171FC  0012               	return	
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;daq.c: 34:  R.scan_index = 0;
  2319  0171FE  6B7E               	clrf	(_R+30)& (0+255),b	;volatile
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;daq.c: 35:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2323  017200  013A               	movlb	58	; () banked
  2324  017202  5140               	movf	64,w,b	;volatile
  2325  017204  006E F940  F035    	movff	14928,btemp	;volatile
  2326  01720A  6A36               	clrf	(btemp+1)^0,c
  2327  01720C  0060  F0D4  F036   	movff	btemp,btemp+1
  2328  017212  6A35               	clrf	btemp^0,c
  2329  017214  2635               	addwf	btemp^0,f,c
  2330  017216  0E00               	movlw	0
  2331  017218  2236               	addwfc	(btemp+1)^0,f,c
  2332  01721A  0E77               	movlw	119
  2333  01721C  1435               	andwf	btemp^0,w,c
  2334  01721E  0100               	movlb	0	; () banked
  2335  017220  6F7F               	movwf	(_R+31)& (0+255),b	;volatile
  2336  017222  0E3C               	movlw	60
  2337  017224  1436               	andwf	(btemp+1)^0,w,c
  2338  017226  6F80               	movwf	(_R+32)& (0+255),b	;volatile
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;daq.c: 36:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2342  017228  0E0E               	movlw	low _adc_int_handler
  2343  01722A  6EE6               	movwf	postinc1,c
  2344  01722C  0E7E               	movlw	high _adc_int_handler
  2345  01722E  6EE6               	movwf	postinc1,c
  2346  017230  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2347  017232  6EE6               	movwf	postinc1,c
  2348  017234  EC20  F0BE         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2349                           
  2350                           ;daq.c: 37:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2351  017238  0E0E               	movlw	low _adc_int_t_handler
  2352  01723A  6EE6               	movwf	postinc1,c
  2353  01723C  0E6D               	movlw	high _adc_int_t_handler
  2354  01723E  6EE6               	movwf	postinc1,c
  2355  017240  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2356  017242  6EE6               	movwf	postinc1,c
  2357  017244  EC0C  F0BE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2358                           
  2359                           ;daq.c: 38:  ADCC_StartConversion(R.scan_index & 0xf);
  2360  017248  0100               	movlb	0	; () banked
  2361  01724A  517E               	movf	(_R+30)& (0+255),w,b	;volatile
  2362  01724C  0B0F               	andlw	15
  2363  01724E  6EE6               	movwf	postinc1,c
  2364  017250  ECC6  F0BF         	call	_ADCC_StartConversion	;wreg free
  2365                           
  2366                           ; BSR set to: 62
  2367  017254  82BE               	bsf	190,1,c	;volatile
  2368                           
  2369                           ; BSR set to: 62
  2370  017256  84BE               	bsf	190,2,c	;volatile
  2371                           
  2372                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2373  017258  0012               	return		;funcret
  2374  01725A                     __end_of_start_adc_scan:
  2375                           	opt callstack 0
  2376                           
  2377 ;; *************** function _ADCC_StartConversion *****************
  2378 ;; Defined at:
  2379 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  channel         1  [STACK] enum E16136
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1  [STACK] void 
  2386 ;; Registers used:
  2387 ;;		fsr1l, fsr1h
  2388 ;; Tracked objects:
  2389 ;;		On entry : 3F/0
  2390 ;;		On exit  : 3F/3E
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2397 ;;Total ram usage:        0 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    6
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_start_adc_scan
  2404 ;;		_adc_int_t_handler
  2405 ;; This function uses a reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text2
  2409  017F8C                     __ptext2:
  2410                           	opt callstack 0
  2411  017F8C                     _ADCC_StartConversion:
  2412                           	opt callstack 6
  2413                           
  2414                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2415                           ;stkvar	_channel @ sp[(0)+-1]
  2416                           
  2417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2418                           ;incstack = 0
  2419  017F8C  0EFF               	movlw	-1
  2420  017F8E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2421                           
  2422                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2423  017F94  013E               	movlb	62	; () banked
  2424  017F96  8FF8               	bsf	248,7,b	;volatile
  2425                           
  2426                           ; BSR set to: 62
  2427                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2428  017F98  81F8               	bsf	248,0,b	;volatile
  2429                           
  2430                           ; BSR set to: 62
  2431                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2432  017F9A  52E5               	movf	postdec1,f,c
  2433  017F9C  0012               	return		;funcret
  2434  017F9E                     __end_of_ADCC_StartConversion:
  2435                           	opt callstack 0
  2436                           
  2437 ;; *************** function _srand *****************
  2438 ;; Defined at:
  2439 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  s               2  [STACK] unsigned int 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1  [STACK] void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2448 ;; Tracked objects:
  2449 ;;		On entry : 3F/0
  2450 ;;		On exit  : 3F/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    6
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text3
  2468  0178B8                     __ptext3:
  2469                           	opt callstack 0
  2470  0178B8                     _srand:
  2471                           	opt callstack 24
  2472                           
  2473                           ;stkvar	_s @ sp[(0)+-2]
  2474                           
  2475                           ; BSR set to: 62
  2476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2477                           ;incstack = 0
  2478  0178B8  0EFE               	movlw	-2
  2479  0178BA  50E3               	movf	plusw1,w,c
  2480  0178BC  0FFF               	addlw	255
  2481  0178BE  6E3F               	movwf	(btemp+10)^0,c
  2482  0178C0  0EFF               	movlw	-1
  2483  0178C2  006F FF8C  F040    	movff	plusw1,btemp+11
  2484  0178C8  0EFF               	movlw	255
  2485  0178CA  2240               	addwfc	(btemp+11)^0,f,c
  2486  0178CC  0060  F0FC  F0BD   	movff	btemp+10,_seed
  2487  0178D2  0060  F100  F0BE   	movff	btemp+11,_seed+1
  2488  0178D8  0100               	movlb	0	; () banked
  2489  0178DA  6BBF               	clrf	(_seed+2)& (0+255),b
  2490  0178DC  6BC0               	clrf	(_seed+3)& (0+255),b
  2491  0178DE  6BC1               	clrf	(_seed+4)& (0+255),b
  2492  0178E0  6BC2               	clrf	(_seed+5)& (0+255),b
  2493  0178E2  6BC3               	clrf	(_seed+6)& (0+255),b
  2494  0178E4  6BC4               	clrf	(_seed+7)& (0+255),b
  2495                           
  2496                           ; BSR set to: 0
  2497                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2498  0178E6  52E5               	movf	postdec1,f,c
  2499  0178E8  52E5               	movf	postdec1,f,c
  2500  0178EA  0012               	return		;funcret
  2501  0178EC                     __end_of_srand:
  2502                           	opt callstack 0
  2503                           
  2504 ;; *************** function _lp_filter *****************
  2505 ;; Defined at:
  2506 ;;		line 3 in file "mbmc.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  new             4  [STACK] float 
  2509 ;;  bn              1  [STACK] unsigned char 
  2510 ;;  slow            1  [STACK] char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  4  [STACK] float 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/4
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    8
  2529 ;; This function calls:
  2530 ;;		___fladd
  2531 ;;		___fldiv
  2532 ;;		___flmul
  2533 ;;		___flsub
  2534 ;; This function is called by:
  2535 ;;		_main
  2536 ;; This function uses a reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text4
  2540  014D2C                     __ptext4:
  2541                           	opt callstack 0
  2542  014D2C                     _lp_filter:
  2543                           	opt callstack 22
  2544                           
  2545                           ;mbmc.c: 3: float lp_filter(float new, uint8_t bn, int8_t slow);mbmc.c: 4: {;mbmc.c: 5: 
      +                           static float smooth[0xF], lp_speed, lp_x;;mbmc.c: 7:  if (bn > 0xF)
  2546                           ;stkvar	_bn @ sp[(0)+-5]
  2547                           
  2548                           ; BSR set to: 0
  2549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2550                           ;incstack = 0
  2551  014D2C  0EFB               	movlw	-5
  2552  014D2E  006F FF8C  F035    	movff	plusw1,btemp
  2553  014D34  0E0F               	movlw	15
  2554  014D36  6435               	cpfsgt	btemp^0,c
  2555  014D38  D011               	goto	l8547
  2556  014D3A                     u7940:
  2557                           
  2558                           ;mbmc.c: 8:   return new;
  2559                           ;stkvar	_new @ sp[(0)+-4]
  2560  014D3A  0EFC               	movlw	-4
  2561  014D3C  006F FF8C  F035    	movff	plusw1,btemp
  2562  014D42  0EFD               	movlw	-3
  2563  014D44  006F FF8C  F036    	movff	plusw1,btemp+1
  2564  014D4A  0EFE               	movlw	-2
  2565  014D4C  006F FF8C  F037    	movff	plusw1,btemp+2
  2566  014D52  0EFF               	movlw	-1
  2567  014D54  006F FF8C  F038    	movff	plusw1,btemp+3
  2568  014D5A  D112               	goto	l1679
  2569  014D5C                     l8547:
  2570                           
  2571                           ;mbmc.c: 9:  if (slow == (-1)) {
  2572                           ;stkvar	_slow @ sp[(0)+-6]
  2573  014D5C  0EFA               	movlw	-6
  2574  014D5E  28E3               	incf	plusw1,w,c
  2575  014D60  A4D8               	btfss	status,2,c
  2576  014D62  D012               	goto	l8555
  2577                           
  2578                           ;mbmc.c: 10:   smooth[bn] = 0.0;
  2579                           ;stkvar	_bn @ sp[(0)+-5]
  2580  014D64  0EFB               	movlw	-5
  2581  014D66  50E3               	movf	plusw1,w,c
  2582  014D68  0D04               	mullw	4
  2583  014D6A  0E68               	movlw	low lp_filter@smooth
  2584  014D6C  24F3               	addwf	243,w,c
  2585  014D6E  6ED9               	movwf	fsr2l,c
  2586  014D70  0E01               	movlw	high lp_filter@smooth
  2587  014D72  20F4               	addwfc	prodh,w,c
  2588  014D74  6EDA               	movwf	fsr2h,c
  2589  014D76  0E00               	movlw	0
  2590  014D78  6EDE               	movwf	postinc2,c
  2591  014D7A  0E00               	movlw	0
  2592  014D7C  6EDE               	movwf	postinc2,c
  2593  014D7E  0E00               	movlw	0
  2594  014D80  6EDE               	movwf	postinc2,c
  2595  014D82  0E00               	movlw	0
  2596  014D84  6EDD               	movwf	postdec2,c
  2597  014D86  D7D9               	goto	u7940
  2598  014D88                     l8555:
  2599                           
  2600                           ;mbmc.c: 13:  if (slow) {
  2601                           ;stkvar	_slow @ sp[(0)+-6]
  2602  014D88  0EFA               	movlw	-6
  2603  014D8A  50E3               	movf	plusw1,w,c
  2604  014D8C  B4D8               	btfsc	status,2,c
  2605  014D8E  D009               	goto	l8559
  2606                           
  2607                           ;mbmc.c: 14:   lp_speed = 0.066;
  2608  014D90  0E02               	movlw	2
  2609  014D92  0100               	movlb	0	; () banked
  2610  014D94  6FB2               	movwf	lp_filter@lp_speed& (0+255),b
  2611  014D96  0E2B               	movlw	43
  2612  014D98  6FB3               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  2613  014D9A  0E87               	movlw	135
  2614  014D9C  6FB4               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  2615  014D9E  0E3D               	movlw	61
  2616  014DA0  D008               	goto	L1
  2617  014DA2                     l8559:
  2618                           
  2619                           ;mbmc.c: 16:   lp_speed = 0.333;
  2620  014DA2  0EFA               	movlw	250
  2621  014DA4  0100               	movlb	0	; () banked
  2622  014DA6  6FB2               	movwf	lp_filter@lp_speed& (0+255),b
  2623  014DA8  0E7E               	movlw	126
  2624  014DAA  6FB3               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  2625  014DAC  0EAA               	movlw	170
  2626  014DAE  6FB4               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  2627  014DB0  0E3E               	movlw	62
  2628  014DB2                     L1:
  2629  014DB2  6FB5               	movwf	(lp_filter@lp_speed+3)& (0+255),b
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;mbmc.c: 18:  lp_x = ((smooth[bn]*1000.0) + (((new * 1000.0)-(smooth[bn]*1000.0)) * lp_s
      +                          peed)) / 1000.0;
  2633  014DB4  0E00               	movlw	0
  2634  014DB6  6EE6               	movwf	postinc1,c
  2635  014DB8  0E00               	movlw	0
  2636  014DBA  6EE6               	movwf	postinc1,c
  2637  014DBC  0E7A               	movlw	122
  2638  014DBE  6EE6               	movwf	postinc1,c
  2639  014DC0  0E44               	movlw	68
  2640  014DC2  6EE6               	movwf	postinc1,c
  2641  014DC4  0060  F2CB  FFE6   	movff	lp_filter@lp_speed,postinc1
  2642  014DCA  0060  F2CF  FFE6   	movff	lp_filter@lp_speed+1,postinc1
  2643  014DD0  0060  F2D3  FFE6   	movff	lp_filter@lp_speed+2,postinc1
  2644  014DD6  0060  F2D7  FFE6   	movff	lp_filter@lp_speed+3,postinc1
  2645  014DDC  0E00               	movlw	0
  2646  014DDE  6EE6               	movwf	postinc1,c
  2647  014DE0  0E00               	movlw	0
  2648  014DE2  6EE6               	movwf	postinc1,c
  2649  014DE4  0E7A               	movlw	122
  2650  014DE6  6EE6               	movwf	postinc1,c
  2651  014DE8  0E44               	movlw	68
  2652  014DEA  6EE6               	movwf	postinc1,c
  2653                           
  2654                           ;stkvar	_bn @ sp[(-12)+-5]
  2655  014DEC  0EEF               	movlw	-17
  2656  014DEE  50E3               	movf	plusw1,w,c
  2657  014DF0  0D04               	mullw	4
  2658  014DF2  0E68               	movlw	low lp_filter@smooth
  2659  014DF4  24F3               	addwf	243,w,c
  2660  014DF6  6ED9               	movwf	fsr2l,c
  2661  014DF8  0E01               	movlw	high lp_filter@smooth
  2662  014DFA  20F4               	addwfc	prodh,w,c
  2663  014DFC  6EDA               	movwf	fsr2h,c
  2664  014DFE  006F FF7B FFE6     	movff	postinc2,postinc1
  2665  014E04  006F FF7B FFE6     	movff	postinc2,postinc1
  2666  014E0A  006F FF7B FFE6     	movff	postinc2,postinc1
  2667  014E10  006F FF7B FFE6     	movff	postinc2,postinc1
  2668  014E16  ECC1  F08E         	call	___flmul	;wreg free
  2669  014E1A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2670  014E20  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2671  014E26  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2672  014E2C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2673  014E32  0E00               	movlw	0
  2674  014E34  6EE6               	movwf	postinc1,c
  2675  014E36  0E00               	movlw	0
  2676  014E38  6EE6               	movwf	postinc1,c
  2677  014E3A  0E7A               	movlw	122
  2678  014E3C  6EE6               	movwf	postinc1,c
  2679  014E3E  0E44               	movlw	68
  2680  014E40  6EE6               	movwf	postinc1,c
  2681                           
  2682                           ;stkvar	_new @ sp[(-16)+-4]
  2683  014E42  0EEC               	movlw	-20
  2684  014E44  006F FF8F FFE6     	movff	plusw1,postinc1
  2685  014E4A  006F FF8F FFE6     	movff	plusw1,postinc1
  2686  014E50  006F FF8F FFE6     	movff	plusw1,postinc1
  2687  014E56  006F FF8F FFE6     	movff	plusw1,postinc1
  2688  014E5C  ECC1  F08E         	call	___flmul	;wreg free
  2689  014E60  0060  F0D7  FFE6   	movff	btemp,postinc1
  2690  014E66  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2691  014E6C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2692  014E72  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2693  014E78  ECBE  F0BA         	call	___flsub	;wreg free
  2694  014E7C  0060  F0D7  FFE6   	movff	btemp,postinc1
  2695  014E82  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2696  014E88  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2697  014E8E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2698  014E94  ECC1  F08E         	call	___flmul	;wreg free
  2699  014E98  0060  F0D7  FFE6   	movff	btemp,postinc1
  2700  014E9E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2701  014EA4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2702  014EAA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2703  014EB0  0E00               	movlw	0
  2704  014EB2  6EE6               	movwf	postinc1,c
  2705  014EB4  0E00               	movlw	0
  2706  014EB6  6EE6               	movwf	postinc1,c
  2707  014EB8  0E7A               	movlw	122
  2708  014EBA  6EE6               	movwf	postinc1,c
  2709  014EBC  0E44               	movlw	68
  2710  014EBE  6EE6               	movwf	postinc1,c
  2711                           
  2712                           ;stkvar	_bn @ sp[(-12)+-5]
  2713  014EC0  0EEF               	movlw	-17
  2714  014EC2  50E3               	movf	plusw1,w,c
  2715  014EC4  0D04               	mullw	4
  2716  014EC6  0E68               	movlw	low lp_filter@smooth
  2717  014EC8  24F3               	addwf	243,w,c
  2718  014ECA  6ED9               	movwf	fsr2l,c
  2719  014ECC  0E01               	movlw	high lp_filter@smooth
  2720  014ECE  20F4               	addwfc	prodh,w,c
  2721  014ED0  6EDA               	movwf	fsr2h,c
  2722  014ED2  006F FF7B FFE6     	movff	postinc2,postinc1
  2723  014ED8  006F FF7B FFE6     	movff	postinc2,postinc1
  2724  014EDE  006F FF7B FFE6     	movff	postinc2,postinc1
  2725  014EE4  006F FF7B FFE6     	movff	postinc2,postinc1
  2726  014EEA  ECC1  F08E         	call	___flmul	;wreg free
  2727  014EEE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2728  014EF4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2729  014EFA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2730  014F00  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2731  014F06  ECD6  F092         	call	___fladd	;wreg free
  2732  014F0A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2733  014F10  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2734  014F16  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2735  014F1C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2736  014F22  ECB4  F096         	call	___fldiv	;wreg free
  2737  014F26  0060  F0D4  F0AE   	movff	btemp,lp_filter@lp_x
  2738  014F2C  0060  F0D8  F0AF   	movff	btemp+1,lp_filter@lp_x+1
  2739  014F32  0060  F0DC  F0B0   	movff	btemp+2,lp_filter@lp_x+2
  2740  014F38  0060  F0E0  F0B1   	movff	btemp+3,lp_filter@lp_x+3
  2741                           
  2742                           ;mbmc.c: 19:  smooth[bn] = lp_x;
  2743                           ;stkvar	_bn @ sp[(0)+-5]
  2744  014F3E  0EFB               	movlw	-5
  2745  014F40  50E3               	movf	plusw1,w,c
  2746  014F42  0D04               	mullw	4
  2747  014F44  0E68               	movlw	low lp_filter@smooth
  2748  014F46  24F3               	addwf	243,w,c
  2749  014F48  6ED9               	movwf	fsr2l,c
  2750  014F4A  0E01               	movlw	high lp_filter@smooth
  2751  014F4C  20F4               	addwfc	prodh,w,c
  2752  014F4E  6EDA               	movwf	fsr2h,c
  2753  014F50  0060  F2BB  FFDE   	movff	lp_filter@lp_x,postinc2
  2754  014F56  0060  F2BF  FFDE   	movff	lp_filter@lp_x+1,postinc2
  2755  014F5C  0060  F2C3  FFDE   	movff	lp_filter@lp_x+2,postinc2
  2756  014F62  0060  F2C7  FFDE   	movff	lp_filter@lp_x+3,postinc2
  2757                           
  2758                           ;mbmc.c: 20:  return lp_x;
  2759  014F68  0060  F2B8  F035   	movff	lp_filter@lp_x,btemp
  2760  014F6E  0060  F2BC  F036   	movff	lp_filter@lp_x+1,btemp+1
  2761  014F74  0060  F2C0  F037   	movff	lp_filter@lp_x+2,btemp+2
  2762  014F7A  0060  F2C4  F038   	movff	lp_filter@lp_x+3,btemp+3
  2763  014F80                     l1679:
  2764                           
  2765                           ; _lp_filter: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  2766  014F80  0EFA               	movlw	250
  2767  014F82  26E1               	addwf	fsr1l,f,c
  2768  014F84  0EFF               	movlw	255
  2769  014F86  22E2               	addwfc	fsr1h,f,c
  2770  014F88  0012               	return		;funcret
  2771  014F8A                     __end_of_lp_filter:
  2772                           	opt callstack 0
  2773                           
  2774 ;; *************** function _init_display *****************
  2775 ;; Defined at:
  2776 ;;		line 37 in file "eadog.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1  [STACK] void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/2
  2787 ;;		On exit  : 3F/3D
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    8
  2797 ;; This function calls:
  2798 ;;		_ringBufS_init
  2799 ;;		_send_lcd_cmd
  2800 ;;		_send_lcd_cmd_long
  2801 ;;		_wdtdelay
  2802 ;; This function is called by:
  2803 ;;		_main
  2804 ;; This function uses a reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text5
  2808  0165D6                     __ptext5:
  2809                           	opt callstack 0
  2810  0165D6                     _init_display:
  2811                           	opt callstack 22
  2812                           
  2813                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2814                           
  2815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2816                           ;incstack = 0
  2817  0165D6  0E83               	movlw	low _ring_buf1
  2818  0165D8  0100               	movlb	0	; () banked
  2819  0165DA  6FA0               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2820  0165DC  0E03               	movlw	high _ring_buf1
  2821  0165DE  6FA1               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2822                           
  2823                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2824  0165E0  0E40               	movlw	low _ring_buf2
  2825  0165E2  6F9E               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2826  0165E4  0E03               	movlw	high _ring_buf2
  2827  0165E6  6F9F               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2831  0165E8  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  2832  0165EE  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  2833  0165F4  EC58  F0BD         	call	_ringBufS_init	;wreg free
  2834                           
  2835                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2836  0165F8  0060  F27B  FFE6   	movff	_spi_link+4,postinc1
  2837  0165FE  0060  F27F  FFE6   	movff	_spi_link+5,postinc1
  2838  016604  EC58  F0BD         	call	_ringBufS_init	;wreg free
  2839                           
  2840                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2841  016608  84BE               	bsf	190,2,c	;volatile
  2842  01660A  84BC               	bsf	188,2,c	;volatile
  2843                           
  2844                           ;eadog.c: 46:  wdtdelay(350000);
  2845  01660C  0E30               	movlw	48
  2846  01660E  6EE6               	movwf	postinc1,c
  2847  016610  0E57               	movlw	87
  2848  016612  6EE6               	movwf	postinc1,c
  2849  016614  0E05               	movlw	5
  2850  016616  6EE6               	movwf	postinc1,c
  2851  016618  0E00               	movlw	0
  2852  01661A  6EE6               	movwf	postinc1,c
  2853  01661C  ECEE  F0B9         	call	_wdtdelay	;wreg free
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2857  016620  0E39               	movlw	57
  2858  016622  6EE6               	movwf	postinc1,c
  2859  016624  EC44  F0BD         	call	_send_lcd_cmd	;wreg free
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2863  016628  0E1D               	movlw	29
  2864  01662A  6EE6               	movwf	postinc1,c
  2865  01662C  EC44  F0BD         	call	_send_lcd_cmd	;wreg free
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2869  016630  0E50               	movlw	80
  2870  016632  6EE6               	movwf	postinc1,c
  2871  016634  EC44  F0BD         	call	_send_lcd_cmd	;wreg free
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2875  016638  0E6C               	movlw	108
  2876  01663A  6EE6               	movwf	postinc1,c
  2877  01663C  EC44  F0BD         	call	_send_lcd_cmd	;wreg free
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2881  016640  0E76               	movlw	118
  2882  016642  6EE6               	movwf	postinc1,c
  2883  016644  EC44  F0BD         	call	_send_lcd_cmd	;wreg free
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2887  016648  0E38               	movlw	56
  2888  01664A  6EE6               	movwf	postinc1,c
  2889  01664C  EC30  F0BD         	call	_send_lcd_cmd_long	;wreg free
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2893  016650  0E0F               	movlw	15
  2894  016652  6EE6               	movwf	postinc1,c
  2895  016654  EC44  F0BD         	call	_send_lcd_cmd	;wreg free
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2899  016658  0E01               	movlw	1
  2900  01665A  6EE6               	movwf	postinc1,c
  2901  01665C  EC30  F0BD         	call	_send_lcd_cmd_long	;wreg free
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2905  016660  0E02               	movlw	2
  2906  016662  6EE6               	movwf	postinc1,c
  2907  016664  EC44  F0BD         	call	_send_lcd_cmd	;wreg free
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2911  016668  0E06               	movlw	6
  2912  01666A  6EE6               	movwf	postinc1,c
  2913  01666C  EC44  F0BD         	call	_send_lcd_cmd	;wreg free
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;eadog.c: 57:  wdtdelay(30);
  2917  016670  0E1E               	movlw	30
  2918  016672  6EE6               	movwf	postinc1,c
  2919  016674  0E00               	movlw	0
  2920  016676  6EE6               	movwf	postinc1,c
  2921  016678  0E00               	movlw	0
  2922  01667A  6EE6               	movwf	postinc1,c
  2923  01667C  0E00               	movlw	0
  2924  01667E  6EE6               	movwf	postinc1,c
  2925  016680  ECEE  F0B9         	call	_wdtdelay	;wreg free
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2929  016684  0E02               	movlw	2
  2930  016686  013D               	movlb	61	; () banked
  2931  016688  6F16               	movwf	22,b	;volatile
  2932                           
  2933                           ; BSR set to: 61
  2934                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2935  01668A  0E40               	movlw	64
  2936  01668C  6F15               	movwf	21,b	;volatile
  2937                           
  2938                           ; BSR set to: 61
  2939                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2940  01668E  0E83               	movlw	131
  2941  016690  6F14               	movwf	20,b	;volatile
  2942                           
  2943                           ; BSR set to: 61
  2944                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2945  016692  931A               	bcf	26,1,b	;volatile
  2946                           
  2947                           ; BSR set to: 61
  2948                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2949  016694  0E3F               	movlw	-193
  2950  016696  013B               	movlb	59	; () banked
  2951  016698  17FD               	andwf	253,f,b	;volatile
  2952                           
  2953                           ; BSR set to: 59
  2954                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2955  01669A  9BFD               	bcf	253,5,b	;volatile
  2956                           
  2957                           ; BSR set to: 59
  2958                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2959  01669C  51FD               	movf	253,w,b	;volatile
  2960  01669E  0BF9               	andlw	-7
  2961  0166A0  0902               	iorlw	2
  2962  0166A2  6FFD               	movwf	253,b	;volatile
  2963                           
  2964                           ; BSR set to: 59
  2965                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2966  0166A4  0EE7               	movlw	-25
  2967  0166A6  17FD               	andwf	253,f,b	;volatile
  2968                           
  2969                           ; BSR set to: 59
  2970                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2971  0166A8  81FD               	bsf	253,0,b	;volatile
  2972                           
  2973                           ; BSR set to: 59
  2974                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2975  0166AA  0E83               	movlw	low _ring_buf1
  2976  0166AC  6FF9               	movwf	249,b	;volatile
  2977  0166AE  0E03               	movlw	high _ring_buf1
  2978  0166B0  6FFA               	movwf	250,b	;volatile
  2979  0166B2  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2980  0166B4  6FFB               	movwf	251,b	;volatile
  2981                           
  2982                           ; BSR set to: 59
  2983                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2984  0166B6  9BFC               	bcf	252,5,b	;volatile
  2985                           
  2986                           ; BSR set to: 59
  2987                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2988  0166B8  013D               	movlb	61	; () banked
  2989  0166BA  831A               	bsf	26,1,b	;volatile
  2990                           
  2991                           ; BSR set to: 61
  2992                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2993  0166BC  94BE               	bcf	190,2,c	;volatile
  2994                           
  2995                           ; BSR set to: 61
  2996                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2997  0166BE  0012               	return		;funcret
  2998  0166C0                     __end_of_init_display:
  2999                           	opt callstack 0
  3000                           
  3001 ;; *************** function _send_lcd_cmd_long *****************
  3002 ;; Defined at:
  3003 ;;		line 114 in file "eadog.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  cmd             1  [STACK] const unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1  [STACK] void 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3012 ;; Tracked objects:
  3013 ;;		On entry : 3F/0
  3014 ;;		On exit  : 3F/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    7
  3024 ;; This function calls:
  3025 ;;		_SPI1_Exchange8bit
  3026 ;;		_wdtdelay
  3027 ;; This function is called by:
  3028 ;;		_init_display
  3029 ;; This function uses a reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text6
  3033  017A60                     __ptext6:
  3034                           	opt callstack 0
  3035  017A60                     _send_lcd_cmd_long:
  3036                           	opt callstack 22
  3037                           
  3038                           ; BSR set to: 61
  3039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3040                           ;incstack = 0
  3041                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3042  017A60  92BC               	bcf	188,1,c	;volatile
  3043                           
  3044                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3045  017A62  94BC               	bcf	188,2,c	;volatile
  3046                           
  3047                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3048                           ;stkvar	_cmd @ sp[(0)+-1]
  3049  017A64  0EFF               	movlw	-1
  3050  017A66  50E3               	movf	plusw1,w,c
  3051  017A68  6EE6               	movwf	postinc1,c
  3052  017A6A  ECDA  F0BE         	call	_SPI1_Exchange8bit	;wreg free
  3053                           
  3054                           ; BSR set to: 57
  3055                           ;eadog.c: 119:  wdtdelay(800);
  3056  017A6E  0E20               	movlw	32
  3057  017A70  6EE6               	movwf	postinc1,c
  3058  017A72  0E03               	movlw	3
  3059  017A74  6EE6               	movwf	postinc1,c
  3060  017A76  0E00               	movlw	0
  3061  017A78  6EE6               	movwf	postinc1,c
  3062  017A7A  0E00               	movlw	0
  3063  017A7C  6EE6               	movwf	postinc1,c
  3064  017A7E  ECEE  F0B9         	call	_wdtdelay	;wreg free
  3065                           
  3066                           ; BSR set to: 0
  3067  017A82  82BC               	bsf	188,1,c	;volatile
  3068                           
  3069                           ; BSR set to: 0
  3070                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3071  017A84  52E5               	movf	postdec1,f,c
  3072  017A86  0012               	return		;funcret
  3073  017A88                     __end_of_send_lcd_cmd_long:
  3074                           	opt callstack 0
  3075                           
  3076 ;; *************** function _send_lcd_cmd *****************
  3077 ;; Defined at:
  3078 ;;		line 102 in file "eadog.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  cmd             1  [STACK] const unsigned char 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1  [STACK] void 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3087 ;; Tracked objects:
  3088 ;;		On entry : 3F/0
  3089 ;;		On exit  : 3F/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3096 ;;Total ram usage:        0 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    7
  3099 ;; This function calls:
  3100 ;;		_SPI1_Exchange8bit
  3101 ;;		_wdtdelay
  3102 ;; This function is called by:
  3103 ;;		_init_display
  3104 ;; This function uses a reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text7
  3108  017A88                     __ptext7:
  3109                           	opt callstack 0
  3110  017A88                     _send_lcd_cmd:
  3111                           	opt callstack 22
  3112                           
  3113                           ; BSR set to: 0
  3114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3115                           ;incstack = 0
  3116                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3117  017A88  92BC               	bcf	188,1,c	;volatile
  3118                           
  3119                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3120  017A8A  94BC               	bcf	188,2,c	;volatile
  3121                           
  3122                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3123                           ;stkvar	_cmd @ sp[(0)+-1]
  3124  017A8C  0EFF               	movlw	-1
  3125  017A8E  50E3               	movf	plusw1,w,c
  3126  017A90  6EE6               	movwf	postinc1,c
  3127  017A92  ECDA  F0BE         	call	_SPI1_Exchange8bit	;wreg free
  3128                           
  3129                           ; BSR set to: 57
  3130                           ;eadog.c: 107:  wdtdelay(30);
  3131  017A96  0E1E               	movlw	30
  3132  017A98  6EE6               	movwf	postinc1,c
  3133  017A9A  0E00               	movlw	0
  3134  017A9C  6EE6               	movwf	postinc1,c
  3135  017A9E  0E00               	movlw	0
  3136  017AA0  6EE6               	movwf	postinc1,c
  3137  017AA2  0E00               	movlw	0
  3138  017AA4  6EE6               	movwf	postinc1,c
  3139  017AA6  ECEE  F0B9         	call	_wdtdelay	;wreg free
  3140                           
  3141                           ; BSR set to: 0
  3142  017AAA  82BC               	bsf	188,1,c	;volatile
  3143                           
  3144                           ; BSR set to: 0
  3145                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3146  017AAC  52E5               	movf	postdec1,f,c
  3147  017AAE  0012               	return		;funcret
  3148  017AB0                     __end_of_send_lcd_cmd:
  3149                           	opt callstack 0
  3150                           
  3151 ;; *************** function _SPI1_Exchange8bit *****************
  3152 ;; Defined at:
  3153 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  data            1  [STACK] unsigned char 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1  [STACK] unsigned char 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 3F/39
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    6
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_send_lcd_cmd
  3178 ;;		_send_lcd_cmd_long
  3179 ;; This function uses a reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text8
  3183  017DB4                     __ptext8:
  3184                           	opt callstack 0
  3185  017DB4                     _SPI1_Exchange8bit:
  3186                           	opt callstack 22
  3187                           
  3188                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3189                           
  3190                           ; BSR set to: 0
  3191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3192                           ;incstack = 0
  3193  017DB4  0E01               	movlw	1
  3194  017DB6  013D               	movlb	61	; () banked
  3195  017DB8  6F12               	movwf	18,b	;volatile
  3196                           
  3197                           ; BSR set to: 61
  3198                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3199                           ;stkvar	_data @ sp[(0)+-1]
  3200  017DBA  0EFF               	movlw	-1
  3201  017DBC  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3202  017DC2                     l835:
  3203                           
  3204                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3205  017DC2  0139               	movlb	57	; () banked
  3206  017DC4  A9A2               	btfss	162,4,b	;volatile
  3207  017DC6  D7FD               	goto	l835
  3208                           
  3209                           ; BSR set to: 57
  3210                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3211  017DC8  006F F440  F035    	movff	15632,btemp	;volatile
  3212                           
  3213                           ; BSR set to: 57
  3214                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3215  017DCE  52E5               	movf	postdec1,f,c
  3216  017DD0  0012               	return		;funcret
  3217  017DD2                     __end_of_SPI1_Exchange8bit:
  3218                           	opt callstack 0
  3219                           
  3220 ;; *************** function _ringBufS_init *****************
  3221 ;; Defined at:
  3222 ;;		line 22 in file "ringbufs.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  _this           2  [STACK] PTR volatile struct ring
  3225 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1  [STACK] void 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    7
  3244 ;; This function calls:
  3245 ;;		_memset
  3246 ;; This function is called by:
  3247 ;;		_init_display
  3248 ;; This function uses a reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text9
  3252  017AB0                     __ptext9:
  3253                           	opt callstack 0
  3254  017AB0                     _ringBufS_init:
  3255                           	opt callstack 22
  3256                           
  3257                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3258                           
  3259                           ; BSR set to: 57
  3260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3261                           ;incstack = 0
  3262  017AB0  0E43               	movlw	67
  3263  017AB2  6EE6               	movwf	postinc1,c
  3264  017AB4  0E00               	movlw	0
  3265  017AB6  6EE6               	movwf	postinc1,c
  3266  017AB8  0E00               	movlw	0
  3267  017ABA  6EE6               	movwf	postinc1,c
  3268  017ABC  0E00               	movlw	0
  3269  017ABE  6EE6               	movwf	postinc1,c
  3270                           
  3271                           ;stkvar	__this @ sp[(-4)+-2]
  3272  017AC0  0EFA               	movlw	-6
  3273  017AC2  006F FF8F FFE6     	movff	plusw1,postinc1
  3274  017AC8  006F FF8F FFE6     	movff	plusw1,postinc1
  3275  017ACE  EC47  F0A1         	call	_memset	;wreg free
  3276                           
  3277                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3278  017AD2  52E5               	movf	postdec1,f,c
  3279  017AD4  52E5               	movf	postdec1,f,c
  3280  017AD6  0012               	return		;funcret
  3281  017AD8                     __end_of_ringBufS_init:
  3282                           	opt callstack 0
  3283                           
  3284 ;; *************** function _eaDogM_WriteCommand *****************
  3285 ;; Defined at:
  3286 ;;		line 160 in file "eadog.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  cmd             1  [STACK] const unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1  [STACK] void 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3295 ;; Tracked objects:
  3296 ;;		On entry : 3F/3D
  3297 ;;		On exit  : 3F/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:   16
  3307 ;; This function calls:
  3308 ;;		_send_lcd_cmd_dma
  3309 ;; This function is called by:
  3310 ;;		_main
  3311 ;; This function uses a reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text10
  3315  017FAE                     __ptext10:
  3316                           	opt callstack 0
  3317  017FAE                     _eaDogM_WriteCommand:
  3318                           	opt callstack 14
  3319                           
  3320                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3321                           ;stkvar	_cmd @ sp[(0)+-1]
  3322                           
  3323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3324                           ;incstack = 0
  3325  017FAE  0EFF               	movlw	-1
  3326  017FB0  50E3               	movf	plusw1,w,c
  3327  017FB2  6EE6               	movwf	postinc1,c
  3328  017FB4  EC48  F0BA         	call	_send_lcd_cmd_dma	;wreg free
  3329                           
  3330                           ; BSR set to: 0
  3331                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3332  017FB8  52E5               	movf	postdec1,f,c
  3333  017FBA  0012               	return		;funcret
  3334  017FBC                     __end_of_eaDogM_WriteCommand:
  3335                           	opt callstack 0
  3336                           
  3337 ;; *************** function _conv_raw_result *****************
  3338 ;; Defined at:
  3339 ;;		line 71 in file "daq.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  chan            1  [STACK] enum E16136
  3342 ;;  to_what         1  [STACK] enum E16198
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  4  [STACK] float 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/4
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3358 ;;Total ram usage:        0 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    7
  3361 ;; This function calls:
  3362 ;;		___fladd
  3363 ;;		___fldiv
  3364 ;;		___flmul
  3365 ;;		___xxtofl
  3366 ;;		_get_raw_result
  3367 ;; This function is called by:
  3368 ;;		_main
  3369 ;; This function uses a reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text11
  3373  0155E0                     __ptext11:
  3374                           	opt callstack 0
  3375  0155E0                     _conv_raw_result:
  3376                           	opt callstack 23
  3377                           
  3378                           ;daq.c: 71: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 72: {;
      +                          daq.c: 73:  switch (to_what) {
  3379                           
  3380                           ; BSR set to: 0
  3381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3382                           ;incstack = 0
  3383  0155E0  D0D9               	goto	l8531
  3384  0155E2                     l8505:
  3385                           
  3386                           ;daq.c: 75:   return 25.0;
  3387  0155E2  0E00               	movlw	0
  3388  0155E4  6E35               	movwf	btemp^0,c
  3389  0155E6  0E00               	movlw	0
  3390  0155E8  6E36               	movwf	(btemp+1)^0,c
  3391  0155EA  0EC8               	movlw	200
  3392  0155EC  6E37               	movwf	(btemp+2)^0,c
  3393  0155EE  0E41               	movlw	65
  3394  0155F0  D0CF               	goto	L2
  3395  0155F2                     l8511:
  3396                           
  3397                           ;daq.c: 78:   return(((float) get_raw_result(chan) * 1.25) - 2493.0)*59.30 / 1000.0;
  3398  0155F2  0E00               	movlw	0
  3399  0155F4  6EE6               	movwf	postinc1,c
  3400  0155F6  0E00               	movlw	0
  3401  0155F8  6EE6               	movwf	postinc1,c
  3402  0155FA  0E7A               	movlw	122
  3403  0155FC  6EE6               	movwf	postinc1,c
  3404  0155FE  0E44               	movlw	68
  3405  015600  6EE6               	movwf	postinc1,c
  3406  015602  0E33               	movlw	51
  3407  015604  6EE6               	movwf	postinc1,c
  3408  015606  0E33               	movlw	51
  3409  015608  6EE6               	movwf	postinc1,c
  3410  01560A  0E6D               	movlw	109
  3411  01560C  6EE6               	movwf	postinc1,c
  3412  01560E  0E42               	movlw	66
  3413  015610  6EE6               	movwf	postinc1,c
  3414  015612  0E00               	movlw	0
  3415  015614  6EE6               	movwf	postinc1,c
  3416  015616  0ED0               	movlw	208
  3417  015618  6EE6               	movwf	postinc1,c
  3418  01561A  0E1B               	movlw	27
  3419  01561C  6EE6               	movwf	postinc1,c
  3420  01561E  0EC5               	movlw	197
  3421  015620  6EE6               	movwf	postinc1,c
  3422  015622  0E00               	movlw	0
  3423  015624  6EE6               	movwf	postinc1,c
  3424  015626  0E00               	movlw	0
  3425  015628  6EE6               	movwf	postinc1,c
  3426  01562A  0EA0               	movlw	160
  3427  01562C  6EE6               	movwf	postinc1,c
  3428  01562E  0E3F               	movlw	63
  3429  015630  6EE6               	movwf	postinc1,c
  3430                           
  3431                           ;stkvar	_chan @ sp[(-16)+-1]
  3432  015632  0EEF               	movlw	-17
  3433  015634  50E3               	movf	plusw1,w,c
  3434  015636  6EE6               	movwf	postinc1,c
  3435  015638  ECE9  F0BE         	call	_get_raw_result	;wreg free
  3436  01563C  0060  F0D4  F03F   	movff	btemp,btemp+10
  3437  015642  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3438  015648  503F               	movf	(btemp+10)^0,w,c
  3439  01564A  6E39               	movwf	(btemp+4)^0,c
  3440  01564C  5040               	movf	(btemp+11)^0,w,c
  3441  01564E  6E3A               	movwf	(btemp+5)^0,c
  3442  015650  6A3B               	clrf	(btemp+6)^0,c
  3443  015652  6A3C               	clrf	(btemp+7)^0,c
  3444  015654  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3445  01565A  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3446  015660  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3447  015666  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3448  01566C  0E00               	movlw	0
  3449  01566E  6EE6               	movwf	postinc1,c
  3450  015670  ECEE  F0A9         	call	___xxtofl	;wreg free
  3451  015674  0060  F0D7  FFE6   	movff	btemp,postinc1
  3452  01567A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3453  015680  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3454  015686  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3455  01568C  ECC1  F08E         	call	___flmul	;wreg free
  3456  015690  0060  F0D7  FFE6   	movff	btemp,postinc1
  3457  015696  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3458  01569C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3459  0156A2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3460  0156A8  ECD6  F092         	call	___fladd	;wreg free
  3461  0156AC  0060  F0D7  FFE6   	movff	btemp,postinc1
  3462  0156B2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3463  0156B8  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3464  0156BE  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3465  0156C4  ECC1  F08E         	call	___flmul	;wreg free
  3466  0156C8  0060  F0D7  FFE6   	movff	btemp,postinc1
  3467  0156CE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3468  0156D4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3469  0156DA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3470  0156E0  ECB4  F096         	call	___fldiv	;wreg free
  3471  0156E4  D06A               	goto	l1650
  3472  0156E6                     l8517:
  3473                           
  3474                           ;daq.c: 81:   return((float) get_raw_result(chan) * 8.250825) / 1000.0;
  3475  0156E6  0E00               	movlw	0
  3476  0156E8  6EE6               	movwf	postinc1,c
  3477  0156EA  0E00               	movlw	0
  3478  0156EC  6EE6               	movwf	postinc1,c
  3479  0156EE  0E7A               	movlw	122
  3480  0156F0  6EE6               	movwf	postinc1,c
  3481  0156F2  0E44               	movlw	68
  3482  0156F4  6EE6               	movwf	postinc1,c
  3483  0156F6  0E61               	movlw	97
  3484  0156F8  6EE6               	movwf	postinc1,c
  3485  0156FA  0E03               	movlw	3
  3486  0156FC  6EE6               	movwf	postinc1,c
  3487  0156FE  0E04               	movlw	4
  3488  015700  6EE6               	movwf	postinc1,c
  3489  015702  0E41               	movlw	65
  3490  015704  6EE6               	movwf	postinc1,c
  3491                           
  3492                           ;stkvar	_chan @ sp[(-8)+-1]
  3493  015706  0EF7               	movlw	-9
  3494  015708  50E3               	movf	plusw1,w,c
  3495  01570A  6EE6               	movwf	postinc1,c
  3496  01570C  ECE9  F0BE         	call	_get_raw_result	;wreg free
  3497  015710  0060  F0D4  F03F   	movff	btemp,btemp+10
  3498  015716  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3499  01571C  503F               	movf	(btemp+10)^0,w,c
  3500  01571E  6E39               	movwf	(btemp+4)^0,c
  3501  015720  5040               	movf	(btemp+11)^0,w,c
  3502  015722  6E3A               	movwf	(btemp+5)^0,c
  3503  015724  6A3B               	clrf	(btemp+6)^0,c
  3504  015726  6A3C               	clrf	(btemp+7)^0,c
  3505  015728  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3506  01572E  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3507  015734  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3508  01573A  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3509  015740  0E00               	movlw	0
  3510  015742  6EE6               	movwf	postinc1,c
  3511  015744  ECEE  F0A9         	call	___xxtofl	;wreg free
  3512  015748  0060  F0D7  FFE6   	movff	btemp,postinc1
  3513  01574E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3514  015754  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3515  01575A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3516  015760  ECC1  F08E         	call	___flmul	;wreg free
  3517  015764  0060  F0D7  FFE6   	movff	btemp,postinc1
  3518  01576A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3519  015770  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3520  015776  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3521  01577C  ECB4  F096         	call	___fldiv	;wreg free
  3522  015780  D01C               	goto	l1650
  3523  015782                     l8523:
  3524                           
  3525                           ;daq.c: 84:   return 0.0;
  3526  015782  0E00               	movlw	0
  3527  015784  6E35               	movwf	btemp^0,c
  3528  015786  0E00               	movlw	0
  3529  015788  6E36               	movwf	(btemp+1)^0,c
  3530  01578A  0E00               	movlw	0
  3531  01578C  6E37               	movwf	(btemp+2)^0,c
  3532  01578E  0E00               	movlw	0
  3533  015790                     L2:
  3534  015790  6E38               	movwf	(btemp+3)^0,c
  3535  015792  D013               	goto	l1650
  3536  015794                     l8531:
  3537                           
  3538                           ;stkvar	_to_what @ sp[(0)+-2]
  3539  015794  0EFE               	movlw	-2
  3540  015796  50E3               	movf	plusw1,w,c
  3541  015798  6E3F               	movwf	(btemp+10)^0,c
  3542  01579A  6A40               	clrf	(btemp+11)^0,c
  3543                           
  3544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3545                           ; Switch size 1, requested type "simple"
  3546                           ; Number of cases is 1, Range of values is 0 to 0
  3547                           ; switch strategies available:
  3548                           ; Name         Instructions Cycles
  3549                           ; simple_byte            4     3 (average)
  3550                           ;	Chosen strategy is simple_byte
  3551  01579C  5040               	movf	(btemp+11)^0,w,c
  3552  01579E  0A00               	xorlw	0	; case 0
  3553  0157A0  A4D8               	btfss	status,2,c
  3554  0157A2  D7EF               	goto	l8523
  3555                           
  3556                           ; Switch size 1, requested type "simple"
  3557                           ; Number of cases is 3, Range of values is 0 to 2
  3558                           ; switch strategies available:
  3559                           ; Name         Instructions Cycles
  3560                           ; simple_byte           10     6 (average)
  3561                           ;	Chosen strategy is simple_byte
  3562  0157A4  503F               	movf	(btemp+10)^0,w,c
  3563  0157A6  0A00               	xorlw	0	; case 0
  3564  0157A8  B4D8               	btfsc	status,2,c
  3565  0157AA  D723               	goto	l8511
  3566  0157AC  0A01               	xorlw	1	; case 1
  3567  0157AE  B4D8               	btfsc	status,2,c
  3568  0157B0  D79A               	goto	l8517
  3569  0157B2  0A03               	xorlw	3	; case 2
  3570  0157B4  B4D8               	btfsc	status,2,c
  3571  0157B6  D715               	goto	l8505
  3572  0157B8  D7E4               	goto	l8523
  3573  0157BA                     l1650:
  3574                           
  3575                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3576  0157BA  52E5               	movf	postdec1,f,c
  3577  0157BC  52E5               	movf	postdec1,f,c
  3578  0157BE  0012               	return		;funcret
  3579  0157C0                     __end_of_conv_raw_result:
  3580                           	opt callstack 0
  3581                           
  3582 ;; *************** function _get_raw_result *****************
  3583 ;; Defined at:
  3584 ;;		line 63 in file "daq.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  index           1  [STACK] enum E16136
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  2  [STACK] unsigned short 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/4
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    6
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;;		_conv_raw_result
  3610 ;; This function uses a reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text12
  3614  017DD2                     __ptext12:
  3615                           	opt callstack 0
  3616  017DD2                     _get_raw_result:
  3617                           	opt callstack 24
  3618                           
  3619                           ;daq.c: 63: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 64: {;daq.c: 65:  r
      +                          eturn R.raw_adc[index];
  3620                           ;stkvar	_index @ sp[(0)+-1]
  3621                           
  3622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3623                           ;incstack = 0
  3624  017DD2  0EFF               	movlw	-1
  3625  017DD4  50E3               	movf	plusw1,w,c
  3626  017DD6  0D02               	mullw	2
  3627  017DD8  50F3               	movf	243,w,c
  3628  017DDA  0F60               	addlw	low _R
  3629  017DDC  6ED9               	movwf	fsr2l,c
  3630  017DDE  6ADA               	clrf	fsr2h,c
  3631  017DE0  006F FF78  F035    	movff	postinc2,btemp
  3632  017DE6  006F FF74  F036    	movff	postdec2,btemp+1
  3633                           
  3634                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  3635  017DEC  52E5               	movf	postdec1,f,c
  3636  017DEE  0012               	return		;funcret
  3637  017DF0                     __end_of_get_raw_result:
  3638                           	opt callstack 0
  3639                           
  3640 ;; *************** function ___xxtofl *****************
  3641 ;; Defined at:
  3642 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  sign            1  [STACK] unsigned char 
  3645 ;;  val             4  [STACK] long 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  arg             4  [STACK] unsigned long 
  3648 ;;  exp             1  [STACK] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  4  [STACK] unsigned char 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/4
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    6
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_conv_raw_result
  3669 ;; This function uses a reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text13
  3673  0153DC                     __ptext13:
  3674                           	opt callstack 0
  3675  0153DC                     ___xxtofl:
  3676                           	opt callstack 0
  3677                           
  3678                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3679  0153DC  0E05               	movlw	5
  3680  0153DE  26E1               	addwf	fsr1l,f,c
  3681  0153E0  0E00               	movlw	0
  3682  0153E2  22E2               	addwfc	fsr1h,f,c
  3683                           
  3684                           ;stkvar	_sign @ sp[(-5)+-1]
  3685                           
  3686                           ;incstack = 0
  3687  0153E4  0EFA               	movlw	-6
  3688  0153E6  50E3               	movf	plusw1,w,c
  3689  0153E8  B4D8               	btfsc	status,2,c
  3690  0153EA  D01D               	goto	l8271
  3691                           
  3692                           ;stkvar	_val @ sp[(-5)+-5]
  3693  0153EC  0EF9               	movlw	-7
  3694  0153EE  AEE3               	btfss	plusw1,7,c
  3695  0153F0  D01A               	goto	l8271
  3696                           
  3697                           ;stkvar	_val @ sp[(-5)+-5]
  3698  0153F2  0EF6               	movlw	-10
  3699  0153F4  006F FF8C  F03D    	movff	plusw1,btemp+8
  3700  0153FA  0EF7               	movlw	-9
  3701  0153FC  006F FF8C  F03E    	movff	plusw1,btemp+9
  3702  015402  0EF8               	movlw	-8
  3703  015404  006F FF8C  F03F    	movff	plusw1,btemp+10
  3704  01540A  0EF9               	movlw	-7
  3705  01540C  006F FF8C  F040    	movff	plusw1,btemp+11
  3706  015412  1E3D               	comf	(btemp+8)^0,f,c
  3707  015414  1E3E               	comf	(btemp+9)^0,f,c
  3708  015416  1E3F               	comf	(btemp+10)^0,f,c
  3709  015418  1E40               	comf	(btemp+11)^0,f,c
  3710  01541A  2A3D               	incf	(btemp+8)^0,f,c
  3711  01541C  0E00               	movlw	0
  3712  01541E  223E               	addwfc	(btemp+9)^0,f,c
  3713  015420  223F               	addwfc	(btemp+10)^0,f,c
  3714  015422  2240               	addwfc	(btemp+11)^0,f,c
  3715  015424  D010               	goto	L3
  3716  015426                     l8271:
  3717                           
  3718                           ;stkvar	_val @ sp[(-5)+-5]
  3719  015426  0EF6               	movlw	-10
  3720  015428  006F FF8C  F03D    	movff	plusw1,btemp+8
  3721  01542E  0EF7               	movlw	-9
  3722  015430  006F FF8C  F03E    	movff	plusw1,btemp+9
  3723  015436  0EF8               	movlw	-8
  3724  015438  006F FF8C  F03F    	movff	plusw1,btemp+10
  3725  01543E  0EF9               	movlw	-7
  3726  015440  006F FF8C  F040    	movff	plusw1,btemp+11
  3727  015446                     L3:
  3728                           
  3729                           ;stkvar	_arg @ sp[(-5)+0]
  3730  015446  0EFB               	movlw	-5
  3731  015448  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3732  01544E  0EFC               	movlw	-4
  3733  015450  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3734  015456  0EFD               	movlw	-3
  3735  015458  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3736  01545E  0EFE               	movlw	-2
  3737  015460  0060  F103  FFE3   	movff	btemp+11,plusw1
  3738                           
  3739                           ;stkvar	_val @ sp[(-5)+-5]
  3740  015466  0EF6               	movlw	-10
  3741  015468  50E3               	movf	plusw1,w,c
  3742  01546A  E113               	bnz	l8279
  3743  01546C  0EF7               	movlw	-9
  3744  01546E  50E3               	movf	plusw1,w,c
  3745  015470  E110               	bnz	l8279
  3746  015472  0EF8               	movlw	-8
  3747  015474  50E3               	movf	plusw1,w,c
  3748  015476  E10D               	bnz	l8279
  3749  015478  0EF9               	movlw	-7
  3750  01547A  50E3               	movf	plusw1,w,c
  3751  01547C  A4D8               	btfss	status,2,c
  3752  01547E  D009               	goto	l8279
  3753  015480  0E00               	movlw	0
  3754  015482  6E35               	movwf	btemp^0,c
  3755  015484  0E00               	movlw	0
  3756  015486  6E36               	movwf	(btemp+1)^0,c
  3757  015488  0E00               	movlw	0
  3758  01548A  6E37               	movwf	(btemp+2)^0,c
  3759  01548C  0E00               	movlw	0
  3760  01548E  6E38               	movwf	(btemp+3)^0,c
  3761  015490  D0A2               	goto	l2621
  3762  015492                     l8279:
  3763  015492  0E96               	movlw	150
  3764  015494  6E40               	movwf	(btemp+11)^0,c
  3765                           
  3766                           ;stkvar	_exp @ sp[(-5)+4]
  3767  015496  0EFF               	movlw	-1
  3768  015498  0060  F103  FFE3   	movff	btemp+11,plusw1
  3769  01549E  D00B               	goto	l8283
  3770  0154A0                     l8281:
  3771                           
  3772                           ;stkvar	_exp @ sp[(-5)+4]
  3773  0154A0  0EFF               	movlw	-1
  3774  0154A2  2AE3               	incf	plusw1,f,c
  3775                           
  3776                           ;stkvar	_arg @ sp[(-5)+0]
  3777  0154A4  90D8               	bcf	status,0,c
  3778  0154A6  0EFE               	movlw	-2
  3779  0154A8  32E3               	rrcf	plusw1,f,c
  3780  0154AA  0EFD               	movlw	-3
  3781  0154AC  32E3               	rrcf	plusw1,f,c
  3782  0154AE  0EFC               	movlw	-4
  3783  0154B0  32E3               	rrcf	plusw1,f,c
  3784  0154B2  0EFB               	movlw	-5
  3785  0154B4  32E3               	rrcf	plusw1,f,c
  3786  0154B6                     l8283:
  3787                           
  3788                           ;stkvar	_arg @ sp[(-5)+0]
  3789  0154B6  50E1               	movf	fsr1l,w,c
  3790  0154B8  0FFB               	addlw	-5
  3791  0154BA  6ED9               	movwf	fsr2l,c
  3792  0154BC  50E2               	movf	fsr1h,w,c
  3793  0154BE  6EDA               	movwf	fsr2h,c
  3794  0154C0  0EFF               	movlw	255
  3795  0154C2  22DA               	addwfc	fsr2h,f,c
  3796  0154C4  52DE               	movf	postinc2,f,c
  3797  0154C6  52DE               	movf	postinc2,f,c
  3798  0154C8  52DE               	movf	postinc2,f,c
  3799  0154CA  0EFE               	movlw	254
  3800  0154CC  14DD               	andwf	postdec2,w,c
  3801  0154CE  B4D8               	btfsc	status,2,c
  3802  0154D0  D018               	goto	l8291
  3803  0154D2  D7E6               	goto	l8281
  3804  0154D4                     l8285:
  3805                           
  3806                           ;stkvar	_exp @ sp[(-5)+4]
  3807  0154D4  0EFF               	movlw	-1
  3808  0154D6  2AE3               	incf	plusw1,f,c
  3809                           
  3810                           ;stkvar	_arg @ sp[(-5)+0]
  3811  0154D8  50E1               	movf	fsr1l,w,c
  3812  0154DA  0FFB               	addlw	-5
  3813  0154DC  6ED9               	movwf	fsr2l,c
  3814  0154DE  50E2               	movf	fsr1h,w,c
  3815  0154E0  6EDA               	movwf	fsr2h,c
  3816  0154E2  0EFF               	movlw	255
  3817  0154E4  22DA               	addwfc	fsr2h,f,c
  3818  0154E6  2ADE               	incf	postinc2,f,c
  3819  0154E8  0E00               	movlw	0
  3820  0154EA  22DE               	addwfc	postinc2,f,c
  3821  0154EC  22DE               	addwfc	postinc2,f,c
  3822  0154EE  22DE               	addwfc	postinc2,f,c
  3823                           
  3824                           ;stkvar	_arg @ sp[(-5)+0]
  3825  0154F0  90D8               	bcf	status,0,c
  3826  0154F2  0EFE               	movlw	-2
  3827  0154F4  32E3               	rrcf	plusw1,f,c
  3828  0154F6  0EFD               	movlw	-3
  3829  0154F8  32E3               	rrcf	plusw1,f,c
  3830  0154FA  0EFC               	movlw	-4
  3831  0154FC  32E3               	rrcf	plusw1,f,c
  3832  0154FE  0EFB               	movlw	-5
  3833  015500  32E3               	rrcf	plusw1,f,c
  3834  015502                     l8291:
  3835                           
  3836                           ;stkvar	_arg @ sp[(-5)+0]
  3837  015502  50E1               	movf	fsr1l,w,c
  3838  015504  0FFB               	addlw	-5
  3839  015506  6ED9               	movwf	fsr2l,c
  3840  015508  50E2               	movf	fsr1h,w,c
  3841  01550A  6EDA               	movwf	fsr2h,c
  3842  01550C  0EFF               	movlw	255
  3843  01550E  22DA               	addwfc	fsr2h,f,c
  3844  015510  52DE               	movf	postinc2,f,c
  3845  015512  52DE               	movf	postinc2,f,c
  3846  015514  52DE               	movf	postinc2,f,c
  3847  015516  0EFF               	movlw	255
  3848  015518  14DD               	andwf	postdec2,w,c
  3849  01551A  B4D8               	btfsc	status,2,c
  3850  01551C  D00C               	goto	l8295
  3851  01551E  D7DA               	goto	l8285
  3852  015520                     l8293:
  3853                           
  3854                           ;stkvar	_exp @ sp[(-5)+4]
  3855  015520  0EFF               	movlw	-1
  3856  015522  06E3               	decf	plusw1,f,c
  3857                           
  3858                           ;stkvar	_arg @ sp[(-5)+0]
  3859  015524  90D8               	bcf	status,0,c
  3860  015526  0EFB               	movlw	-5
  3861  015528  36E3               	rlcf	plusw1,f,c
  3862  01552A  0EFC               	movlw	-4
  3863  01552C  36E3               	rlcf	plusw1,f,c
  3864  01552E  0EFD               	movlw	-3
  3865  015530  36E3               	rlcf	plusw1,f,c
  3866  015532  0EFE               	movlw	-2
  3867  015534  36E3               	rlcf	plusw1,f,c
  3868  015536                     l8295:
  3869                           
  3870                           ;stkvar	_arg @ sp[(-5)+0]
  3871  015536  0EFD               	movlw	-3
  3872  015538  BEE3               	btfsc	plusw1,7,c
  3873  01553A  D007               	goto	u7780
  3874                           
  3875                           ;stkvar	_exp @ sp[(-5)+4]
  3876  01553C  0EFF               	movlw	-1
  3877  01553E  006F FF8C  F035    	movff	plusw1,btemp
  3878  015544  0E02               	movlw	2
  3879  015546  6035               	cpfslt	btemp^0,c
  3880  015548  D7EB               	goto	l8293
  3881  01554A                     u7780:
  3882                           
  3883                           ;stkvar	_exp @ sp[(-5)+4]
  3884  01554A  0EFF               	movlw	-1
  3885  01554C  B0E3               	btfsc	plusw1,0,c
  3886  01554E  D002               	goto	l8303
  3887                           
  3888                           ;stkvar	_arg @ sp[(-5)+0]
  3889  015550  0EFD               	movlw	-3
  3890  015552  9EE3               	bcf	plusw1,7,c
  3891  015554                     l8303:
  3892                           
  3893                           ;stkvar	_exp @ sp[(-5)+4]
  3894  015554  50E1               	movf	fsr1l,w,c
  3895  015556  0FFF               	addlw	-1
  3896  015558  6ED9               	movwf	fsr2l,c
  3897  01555A  50E2               	movf	fsr1h,w,c
  3898  01555C  6EDA               	movwf	fsr2h,c
  3899  01555E  0EFF               	movlw	255
  3900  015560  22DA               	addwfc	fsr2h,f,c
  3901  015562  90D8               	bcf	status,0,c
  3902  015564  32DF               	rrcf	indf2,f,c
  3903                           
  3904                           ;stkvar	_exp @ sp[(-5)+4]
  3905  015566  0EFF               	movlw	-1
  3906  015568  006F FF8C  F040    	movff	plusw1,btemp+11
  3907  01556E  0060  F100  F039   	movff	btemp+11,btemp+4
  3908  015574  6A3A               	clrf	(btemp+5)^0,c
  3909  015576  6A3B               	clrf	(btemp+6)^0,c
  3910  015578  6A3C               	clrf	(btemp+7)^0,c
  3911  01557A  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  3912  015580  6A3B               	clrf	(btemp+6)^0,c
  3913  015582  6A3A               	clrf	(btemp+5)^0,c
  3914  015584  6A39               	clrf	(btemp+4)^0,c
  3915                           
  3916                           ;stkvar	_arg @ sp[(-5)+0]
  3917  015586  50E1               	movf	fsr1l,w,c
  3918  015588  0FFB               	addlw	-5
  3919  01558A  6ED9               	movwf	fsr2l,c
  3920  01558C  50E2               	movf	fsr1h,w,c
  3921  01558E  6EDA               	movwf	fsr2h,c
  3922  015590  0EFF               	movlw	255
  3923  015592  22DA               	addwfc	fsr2h,f,c
  3924  015594  5039               	movf	(btemp+4)^0,w,c
  3925  015596  12DE               	iorwf	postinc2,f,c
  3926  015598  503A               	movf	(btemp+5)^0,w,c
  3927  01559A  12DE               	iorwf	postinc2,f,c
  3928  01559C  503B               	movf	(btemp+6)^0,w,c
  3929  01559E  12DE               	iorwf	postinc2,f,c
  3930  0155A0  503C               	movf	(btemp+7)^0,w,c
  3931  0155A2  12DE               	iorwf	postinc2,f,c
  3932                           
  3933                           ;stkvar	_sign @ sp[(-5)+-1]
  3934  0155A4  0EFA               	movlw	-6
  3935  0155A6  50E3               	movf	plusw1,w,c
  3936  0155A8  B4D8               	btfsc	status,2,c
  3937  0155AA  D005               	goto	l8313
  3938                           
  3939                           ;stkvar	_val @ sp[(-5)+-5]
  3940  0155AC  0EF9               	movlw	-7
  3941  0155AE  AEE3               	btfss	plusw1,7,c
  3942  0155B0  D002               	goto	l8313
  3943                           
  3944                           ;stkvar	_arg @ sp[(-5)+0]
  3945  0155B2  0EFE               	movlw	-2
  3946  0155B4  8EE3               	bsf	plusw1,7,c
  3947  0155B6                     l8313:
  3948                           
  3949                           ;stkvar	_arg @ sp[(-5)+0]
  3950  0155B6  0EFB               	movlw	-5
  3951  0155B8  006F FF8C  F035    	movff	plusw1,btemp
  3952  0155BE  0EFC               	movlw	-4
  3953  0155C0  006F FF8C  F036    	movff	plusw1,btemp+1
  3954  0155C6  0EFD               	movlw	-3
  3955  0155C8  006F FF8C  F037    	movff	plusw1,btemp+2
  3956  0155CE  0EFE               	movlw	-2
  3957  0155D0  006F FF8C  F038    	movff	plusw1,btemp+3
  3958  0155D6                     l2621:
  3959                           
  3960                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  3961  0155D6  0EF6               	movlw	246
  3962  0155D8  26E1               	addwf	fsr1l,f,c
  3963  0155DA  0EFF               	movlw	255
  3964  0155DC  22E2               	addwfc	fsr1h,f,c
  3965  0155DE  0012               	return		;funcret
  3966  0155E0                     __end_of___xxtofl:
  3967                           	opt callstack 0
  3968                           
  3969 ;; *************** function _clear_adc_scan *****************
  3970 ;; Defined at:
  3971 ;;		line 55 in file "daq.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1  [STACK] void 
  3978 ;; Registers used:
  3979 ;;		None
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/4
  3982 ;;		On exit  : 3F/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    6
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text14
  4000  018046                     __ptext14:
  4001                           	opt callstack 0
  4002  018046                     _clear_adc_scan:
  4003                           	opt callstack 24
  4004                           
  4005                           ;daq.c: 57:  R.done = 0;
  4006                           
  4007                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4008                           ;incstack = 0
  4009  018046  0100               	movlb	0	; () banked
  4010  018048  6B81               	clrf	(_R+33)& (0+255),b	;volatile
  4011                           
  4012                           ; BSR set to: 0
  4013                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4014  01804A  0012               	return		;funcret
  4015  01804C                     __end_of_clear_adc_scan:
  4016                           	opt callstack 0
  4017                           
  4018 ;; *************** function _check_help *****************
  4019 ;; Defined at:
  4020 ;;		line 40 in file "mconfig.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  flipper         1  [STACK] _Bool 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1  [STACK] void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4029 ;; Tracked objects:
  4030 ;;		On entry : 3F/2
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4038 ;;Total ram usage:        0 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:   18
  4041 ;; This function calls:
  4042 ;;		_StartTimer
  4043 ;;		_TimerDone
  4044 ;;		_display_help
  4045 ;;		_display_info
  4046 ;;		_get_vterm_ptr
  4047 ;;		_help_button
  4048 ;;		_mode_lamp_bright
  4049 ;;		_mode_lamp_dim
  4050 ;;		_set_display_info
  4051 ;;		_set_temp_display_help
  4052 ;;		_set_vterm
  4053 ;;		_sprintf
  4054 ;;		_update_lcd
  4055 ;;		_vterm_dump
  4056 ;; This function is called by:
  4057 ;;		_main
  4058 ;; This function uses a reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text15
  4062  0151CA                     __ptext15:
  4063                           	opt callstack 0
  4064  0151CA                     _check_help:
  4065                           	opt callstack 12
  4066                           
  4067                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  4068                           
  4069                           ; BSR set to: 0
  4070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4071                           ;incstack = 0
  4072  0151CA  ECEE  F0BB         	call	_help_button	;wreg free
  4073  0151CE  5035               	movf	btemp^0,w,c
  4074  0151D0  B4D8               	btfsc	status,2,c
  4075  0151D2  D0D0               	goto	l9835
  4076  0151D4  EC13  F0C0         	call	_display_info	;wreg free
  4077  0151D8  0435               	decf	btemp^0,w,c
  4078  0151DA  B4D8               	btfsc	status,2,c
  4079  0151DC  D0CB               	goto	l9835
  4080                           
  4081                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4082  0151DE  0EDC               	movlw	220
  4083  0151E0  6EE6               	movwf	postinc1,c
  4084  0151E2  0E05               	movlw	5
  4085  0151E4  6EE6               	movwf	postinc1,c
  4086  0151E6  0E0B               	movlw	11
  4087  0151E8  6EE6               	movwf	postinc1,c
  4088  0151EA  ECD0  F0BB         	call	_StartTimer	;wreg free
  4089                           
  4090                           ;mconfig.c: 47:   if (V.debug)
  4091  0151EE  0102               	movlb	2	; () banked
  4092  0151F0  BBA8               	btfsc	(_V+168)& (0+255),5,b	;volatile
  4093                           
  4094                           ; BSR set to: 2
  4095                           ;mconfig.c: 48:    vterm_dump();
  4096  0151F2  ECA0  F0AF         	call	_vterm_dump	;wreg free
  4097                           
  4098                           ;mconfig.c: 50:   set_vterm(1);
  4099  0151F6  0E01               	movlw	1
  4100  0151F8  6EE6               	movwf	postinc1,c
  4101  0151FA  EC42  F0BF         	call	_set_vterm	;wreg free
  4102                           
  4103                           ; BSR set to: 4
  4104                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4105  0151FE  EC13  F0C0         	call	_display_info	;wreg free
  4106  015202  5035               	movf	btemp^0,w,c
  4107  015204  6EE6               	movwf	postinc1,c
  4108  015206  ECCF  F0BF         	call	_set_temp_display_help	;wreg free
  4109                           
  4110                           ; BSR set to: 2
  4111                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4112  01520A  0E01               	movlw	1
  4113  01520C  6EE6               	movwf	postinc1,c
  4114  01520E  ECF8  F0BE         	call	_set_display_info	;wreg free
  4115                           
  4116                           ;mconfig.c: 53:   if (flipper) {
  4117                           ;stkvar	_flipper @ sp[(0)+-1]
  4118  015212  0EFF               	movlw	-1
  4119  015214  50E3               	movf	plusw1,w,c
  4120  015216  B4D8               	btfsc	status,2,c
  4121  015218  D019               	goto	l9823
  4122                           
  4123                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4124  01521A  0EC3               	movlw	low STR_14
  4125  01521C  6EE6               	movwf	postinc1,c
  4126  01521E  0EFF               	movlw	high STR_14
  4127  015220  6EE6               	movwf	postinc1,c
  4128  015222  0E2E               	movlw	low STR_16
  4129  015224  6EE6               	movwf	postinc1,c
  4130  015226  0EFF               	movlw	high STR_16
  4131  015228  6EE6               	movwf	postinc1,c
  4132  01522A  0E01               	movlw	1
  4133  01522C  6EE6               	movwf	postinc1,c
  4134  01522E  0E00               	movlw	0
  4135  015230  6EE6               	movwf	postinc1,c
  4136  015232  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4137  015236  0060  F0D7  FFE6   	movff	btemp,postinc1
  4138  01523C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4139  015242  0E06               	movlw	6
  4140  015244  6EE6               	movwf	postinc1,c
  4141  015246  EC66  F0B2         	call	_sprintf	;wreg free
  4142                           
  4143                           ;mconfig.c: 55:   } else {
  4144  01524A  D018               	goto	l1553
  4145  01524C                     l9823:
  4146                           
  4147                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4148  01524C  0ED9               	movlw	low STR_15
  4149  01524E  6EE6               	movwf	postinc1,c
  4150  015250  0EFF               	movlw	high STR_15
  4151  015252  6EE6               	movwf	postinc1,c
  4152  015254  0E2E               	movlw	low STR_16
  4153  015256  6EE6               	movwf	postinc1,c
  4154  015258  0EFF               	movlw	high STR_16
  4155  01525A  6EE6               	movwf	postinc1,c
  4156  01525C  0E01               	movlw	1
  4157  01525E  6EE6               	movwf	postinc1,c
  4158  015260  0E00               	movlw	0
  4159  015262  6EE6               	movwf	postinc1,c
  4160  015264  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4161  015268  0060  F0D7  FFE6   	movff	btemp,postinc1
  4162  01526E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4163  015274  0E06               	movlw	6
  4164  015276  6EE6               	movwf	postinc1,c
  4165  015278  EC66  F0B2         	call	_sprintf	;wreg free
  4166  01527C                     l1553:
  4167                           
  4168                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4169  01527C  0102               	movlb	2	; () banked
  4170  01527E  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  4171  015280  32E8               	rrcf	wreg,f,c
  4172  015282  32E8               	rrcf	wreg,f,c
  4173  015284  0B03               	andlw	3
  4174  015286  0D24               	mullw	36
  4175  015288  0E12               	movlw	18
  4176  01528A  26F3               	addwf	243,f,c
  4177  01528C  0E00               	movlw	0
  4178  01528E  22F4               	addwfc	244,f,c
  4179  015290  0E73               	movlw	low _T
  4180  015292  6E3F               	movwf	(btemp+10)^0,c
  4181  015294  0EFE               	movlw	high _T
  4182  015296  6E40               	movwf	(btemp+11)^0,c
  4183  015298  50F3               	movf	243,w,c
  4184  01529A  263F               	addwf	(btemp+10)^0,f,c
  4185  01529C  50F4               	movf	244,w,c
  4186  01529E  2240               	addwfc	(btemp+11)^0,f,c
  4187  0152A0  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4188  0152A6  0060  F103  FFE6   	movff	btemp+11,postinc1
  4189  0152AC  0ECF               	movlw	low STR_18
  4190  0152AE  6EE6               	movwf	postinc1,c
  4191  0152B0  0EFF               	movlw	high STR_18
  4192  0152B2  6EE6               	movwf	postinc1,c
  4193  0152B4  0E01               	movlw	1
  4194  0152B6  6EE6               	movwf	postinc1,c
  4195  0152B8  0E01               	movlw	1
  4196  0152BA  6EE6               	movwf	postinc1,c
  4197  0152BC  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4198  0152C0  0060  F0D7  FFE6   	movff	btemp,postinc1
  4199  0152C6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4200  0152CC  0E06               	movlw	6
  4201  0152CE  6EE6               	movwf	postinc1,c
  4202  0152D0  EC66  F0B2         	call	_sprintf	;wreg free
  4203                           
  4204                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4205  0152D4  0102               	movlb	2	; () banked
  4206  0152D6  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  4207  0152D8  32E8               	rrcf	wreg,f,c
  4208  0152DA  32E8               	rrcf	wreg,f,c
  4209  0152DC  0B03               	andlw	3
  4210  0152DE  0D24               	mullw	36
  4211  0152E0  0E73               	movlw	low _T
  4212  0152E2  6E3F               	movwf	(btemp+10)^0,c
  4213  0152E4  0EFE               	movlw	high _T
  4214  0152E6  6E40               	movwf	(btemp+11)^0,c
  4215  0152E8  50F3               	movf	243,w,c
  4216  0152EA  263F               	addwf	(btemp+10)^0,f,c
  4217  0152EC  50F4               	movf	244,w,c
  4218  0152EE  2240               	addwfc	(btemp+11)^0,f,c
  4219  0152F0  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4220  0152F6  0060  F103  FFE6   	movff	btemp+11,postinc1
  4221  0152FC  0ECF               	movlw	low STR_18
  4222  0152FE  6EE6               	movwf	postinc1,c
  4223  015300  0EFF               	movlw	high STR_18
  4224  015302  6EE6               	movwf	postinc1,c
  4225  015304  0E01               	movlw	1
  4226  015306  6EE6               	movwf	postinc1,c
  4227  015308  0E02               	movlw	2
  4228  01530A  6EE6               	movwf	postinc1,c
  4229  01530C  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4230  015310  0060  F0D7  FFE6   	movff	btemp,postinc1
  4231  015316  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4232  01531C  0E06               	movlw	6
  4233  01531E  6EE6               	movwf	postinc1,c
  4234  015320  EC66  F0B2         	call	_sprintf	;wreg free
  4235                           
  4236                           ;mconfig.c: 60:   V.help_id++;
  4237  015324  EE20  F2A9         	lfsr	2,_V+169	;volatile
  4238  015328  30DF               	rrcf	223,w,c
  4239  01532A  6E40               	movwf	(btemp+11)^0,c
  4240  01532C  3240               	rrcf	(btemp+11)^0,f,c
  4241  01532E  3040               	rrcf	(btemp+11)^0,w,c
  4242  015330  0B03               	andlw	3
  4243  015332  6E40               	movwf	(btemp+11)^0,c
  4244  015334  2A40               	incf	(btemp+11)^0,f,c
  4245  015336  3640               	rlcf	(btemp+11)^0,f,c
  4246  015338  3640               	rlcf	(btemp+11)^0,f,c
  4247  01533A  3640               	rlcf	(btemp+11)^0,f,c
  4248  01533C  50DF               	movf	223,w,c
  4249  01533E  1840               	xorwf	(btemp+11)^0,w,c
  4250  015340  0BE7               	andlw	-25
  4251  015342  1840               	xorwf	(btemp+11)^0,w,c
  4252  015344  6EDF               	movwf	223,c
  4253                           
  4254                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4255  015346  0EB8               	movlw	184
  4256  015348  6EE6               	movwf	postinc1,c
  4257  01534A  0E0B               	movlw	11
  4258  01534C  6EE6               	movwf	postinc1,c
  4259  01534E  0E09               	movlw	9
  4260  015350  6EE6               	movwf	postinc1,c
  4261  015352  ECD0  F0BB         	call	_StartTimer	;wreg free
  4262                           
  4263                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4264  015356  0EB8               	movlw	184
  4265  015358  6EE6               	movwf	postinc1,c
  4266  01535A  0E0B               	movlw	11
  4267  01535C  6EE6               	movwf	postinc1,c
  4268  01535E  0E07               	movlw	7
  4269  015360  6EE6               	movwf	postinc1,c
  4270  015362  ECD0  F0BB         	call	_StartTimer	;wreg free
  4271                           
  4272                           ;mconfig.c: 63:   mode_lamp_bright();
  4273  015366  ECDE  F0BF         	call	_mode_lamp_bright	;wreg free
  4274                           
  4275                           ;mconfig.c: 64:   update_lcd(1);
  4276  01536A  0E01               	movlw	1
  4277  01536C  6EE6               	movwf	postinc1,c
  4278  01536E  ECDF  F0B1         	call	_update_lcd	;wreg free
  4279                           
  4280                           ;mconfig.c: 65:  } else {
  4281  015372  D032               	goto	l1557
  4282  015374                     l9835:
  4283                           
  4284                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4285  015374  0E09               	movlw	9
  4286  015376  6EE6               	movwf	postinc1,c
  4287  015378  EC83  F0BE         	call	_TimerDone	;wreg free
  4288  01537C  5035               	movf	btemp^0,w,c
  4289  01537E  B4D8               	btfsc	status,2,c
  4290  015380  D02B               	goto	l1557
  4291                           
  4292                           ;mconfig.c: 67:    set_vterm(0);
  4293  015382  0E00               	movlw	0
  4294  015384  6EE6               	movwf	postinc1,c
  4295  015386  EC42  F0BF         	call	_set_vterm	;wreg free
  4296                           
  4297                           ; BSR set to: 4
  4298                           ;mconfig.c: 68:    V.help = 0;
  4299  01538A  0102               	movlb	2	; () banked
  4300  01538C  9DA8               	bcf	(_V+168)& (0+255),6,b	;volatile
  4301                           
  4302                           ; BSR set to: 2
  4303                           ;mconfig.c: 69:    set_display_info(display_help());
  4304  01538E  EC17  F0C0         	call	_display_help	;wreg free
  4305  015392  5035               	movf	btemp^0,w,c
  4306  015394  6EE6               	movwf	postinc1,c
  4307  015396  ECF8  F0BE         	call	_set_display_info	;wreg free
  4308                           
  4309                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4310  01539A  0060  FA7F  FFE6   	movff	_V+159,postinc1
  4311  0153A0  0060  FA83  FFE6   	movff	_V+160,postinc1
  4312  0153A6  EC77  F0BF         	call	_mode_lamp_dim	;wreg free
  4313                           
  4314                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4315  0153AA  0E0B               	movlw	11
  4316  0153AC  6EE6               	movwf	postinc1,c
  4317  0153AE  EC83  F0BE         	call	_TimerDone	;wreg free
  4318  0153B2  5035               	movf	btemp^0,w,c
  4319  0153B4  B4D8               	btfsc	status,2,c
  4320  0153B6  D010               	goto	l1557
  4321                           
  4322                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4323  0153B8  0102               	movlb	2	; () banked
  4324  0153BA  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  4325  0153BC  A4D8               	btfss	status,2,c
  4326  0153BE  D002               	goto	u9790
  4327  0153C0  0E01               	movlw	1
  4328  0153C2  D001               	goto	u9800
  4329  0153C4                     u9790:
  4330  0153C4  0E00               	movlw	0
  4331  0153C6                     u9800:
  4332  0153C6  6FBC               	movwf	(_V+188)& (0+255),b	;volatile
  4333                           
  4334                           ; BSR set to: 2
  4335                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4336  0153C8  0EDC               	movlw	220
  4337  0153CA  6EE6               	movwf	postinc1,c
  4338  0153CC  0E05               	movlw	5
  4339  0153CE  6EE6               	movwf	postinc1,c
  4340  0153D0  0E0B               	movlw	11
  4341  0153D2  6EE6               	movwf	postinc1,c
  4342  0153D4  ECD0  F0BB         	call	_StartTimer	;wreg free
  4343  0153D8                     l1557:
  4344                           
  4345                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4346  0153D8  52E5               	movf	postdec1,f,c
  4347  0153DA  0012               	return		;funcret
  4348  0153DC                     __end_of_check_help:
  4349                           	opt callstack 0
  4350                           
  4351 ;; *************** function _vterm_dump *****************
  4352 ;; Defined at:
  4353 ;;		line 118 in file "mconfig.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1  [STACK] void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4362 ;; Tracked objects:
  4363 ;;		On entry : 3F/2
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:   17
  4374 ;; This function calls:
  4375 ;;		_WaitMs
  4376 ;;		_eaDogM_WriteStringAtPos
  4377 ;;		_get_vterm_ptr
  4378 ;;		_sprintf
  4379 ;;		_wait_lcd_done
  4380 ;; This function is called by:
  4381 ;;		_check_help
  4382 ;; This function uses a reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text16
  4386  015F40                     __ptext16:
  4387                           	opt callstack 0
  4388  015F40                     _vterm_dump:
  4389                           	opt callstack 12
  4390                           
  4391                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  4392                           
  4393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4394                           ;incstack = 0
  4395  015F40  0E01               	movlw	1
  4396  015F42  6EE6               	movwf	postinc1,c
  4397  015F44  0E00               	movlw	0
  4398  015F46  6EE6               	movwf	postinc1,c
  4399  015F48  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4400  015F4C  0060  F0D7  FFE6   	movff	btemp,postinc1
  4401  015F52  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4402  015F58  0E00               	movlw	0
  4403  015F5A  6EE6               	movwf	postinc1,c
  4404  015F5C  0E00               	movlw	0
  4405  015F5E  6EE6               	movwf	postinc1,c
  4406  015F60  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4407  015F64  0060  F0D7  FFE6   	movff	btemp,postinc1
  4408  015F6A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4409  015F70  0E98               	movlw	low STR_20
  4410  015F72  6EE6               	movwf	postinc1,c
  4411  015F74  0EFF               	movlw	high STR_20
  4412  015F76  6EE6               	movwf	postinc1,c
  4413  015F78  0E01               	movlw	low (_V+1)
  4414  015F7A  6EE6               	movwf	postinc1,c
  4415  015F7C  0E02               	movlw	high (_V+1)
  4416  015F7E  6EE6               	movwf	postinc1,c
  4417  015F80  0E08               	movlw	8
  4418  015F82  6EE6               	movwf	postinc1,c
  4419  015F84  EC66  F0B2         	call	_sprintf	;wreg free
  4420                           
  4421                           ;mconfig.c: 121:  wait_lcd_done();
  4422  015F88  EC34  F0BF         	call	_wait_lcd_done	;wreg free
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  4426  015F8C  0E01               	movlw	low (_V+1)
  4427  015F8E  6EE6               	movwf	postinc1,c
  4428  015F90  0E02               	movlw	high (_V+1)
  4429  015F92  6EE6               	movwf	postinc1,c
  4430  015F94  0E00               	movlw	0
  4431  015F96  6EE6               	movwf	postinc1,c
  4432  015F98  0E00               	movlw	0
  4433  015F9A  6EE6               	movwf	postinc1,c
  4434  015F9C  EC41  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  4435                           
  4436                           ; BSR set to: 59
  4437                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  4438  015FA0  0E01               	movlw	1
  4439  015FA2  6EE6               	movwf	postinc1,c
  4440  015FA4  0E01               	movlw	1
  4441  015FA6  6EE6               	movwf	postinc1,c
  4442  015FA8  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4443  015FAC  0060  F0D7  FFE6   	movff	btemp,postinc1
  4444  015FB2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4445  015FB8  0E00               	movlw	0
  4446  015FBA  6EE6               	movwf	postinc1,c
  4447  015FBC  0E01               	movlw	1
  4448  015FBE  6EE6               	movwf	postinc1,c
  4449  015FC0  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4450  015FC4  0060  F0D7  FFE6   	movff	btemp,postinc1
  4451  015FCA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4452  015FD0  0E98               	movlw	low STR_20
  4453  015FD2  6EE6               	movwf	postinc1,c
  4454  015FD4  0EFF               	movlw	high STR_20
  4455  015FD6  6EE6               	movwf	postinc1,c
  4456  015FD8  0E01               	movlw	low (_V+1)
  4457  015FDA  6EE6               	movwf	postinc1,c
  4458  015FDC  0E02               	movlw	high (_V+1)
  4459  015FDE  6EE6               	movwf	postinc1,c
  4460  015FE0  0E08               	movlw	8
  4461  015FE2  6EE6               	movwf	postinc1,c
  4462  015FE4  EC66  F0B2         	call	_sprintf	;wreg free
  4463                           
  4464                           ;mconfig.c: 124:  wait_lcd_done();
  4465  015FE8  EC34  F0BF         	call	_wait_lcd_done	;wreg free
  4466                           
  4467                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  4468  015FEC  0E01               	movlw	low (_V+1)
  4469  015FEE  6EE6               	movwf	postinc1,c
  4470  015FF0  0E02               	movlw	high (_V+1)
  4471  015FF2  6EE6               	movwf	postinc1,c
  4472  015FF4  0E00               	movlw	0
  4473  015FF6  6EE6               	movwf	postinc1,c
  4474  015FF8  0E01               	movlw	1
  4475  015FFA  6EE6               	movwf	postinc1,c
  4476  015FFC  EC41  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  4477                           
  4478                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  4479  016000  0E01               	movlw	1
  4480  016002  6EE6               	movwf	postinc1,c
  4481  016004  0E02               	movlw	2
  4482  016006  6EE6               	movwf	postinc1,c
  4483  016008  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4484  01600C  0060  F0D7  FFE6   	movff	btemp,postinc1
  4485  016012  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4486  016018  0E00               	movlw	0
  4487  01601A  6EE6               	movwf	postinc1,c
  4488  01601C  0E02               	movlw	2
  4489  01601E  6EE6               	movwf	postinc1,c
  4490  016020  ECD8  F0BC         	call	_get_vterm_ptr	;wreg free
  4491  016024  0060  F0D7  FFE6   	movff	btemp,postinc1
  4492  01602A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4493  016030  0E98               	movlw	low STR_20
  4494  016032  6EE6               	movwf	postinc1,c
  4495  016034  0EFF               	movlw	high STR_20
  4496  016036  6EE6               	movwf	postinc1,c
  4497  016038  0E01               	movlw	low (_V+1)
  4498  01603A  6EE6               	movwf	postinc1,c
  4499  01603C  0E02               	movlw	high (_V+1)
  4500  01603E  6EE6               	movwf	postinc1,c
  4501  016040  0E08               	movlw	8
  4502  016042  6EE6               	movwf	postinc1,c
  4503  016044  EC66  F0B2         	call	_sprintf	;wreg free
  4504                           
  4505                           ;mconfig.c: 127:  wait_lcd_done();
  4506  016048  EC34  F0BF         	call	_wait_lcd_done	;wreg free
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  4510  01604C  0E01               	movlw	low (_V+1)
  4511  01604E  6EE6               	movwf	postinc1,c
  4512  016050  0E02               	movlw	high (_V+1)
  4513  016052  6EE6               	movwf	postinc1,c
  4514  016054  0E00               	movlw	0
  4515  016056  6EE6               	movwf	postinc1,c
  4516  016058  0E02               	movlw	2
  4517  01605A  6EE6               	movwf	postinc1,c
  4518  01605C  EC41  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  4519                           
  4520                           ; BSR set to: 59
  4521                           ;mconfig.c: 129:  WaitMs(3000);
  4522  016060  0EB8               	movlw	184
  4523  016062  6EE6               	movwf	postinc1,c
  4524  016064  0E0B               	movlw	11
  4525  016066  6EE6               	movwf	postinc1,c
  4526  016068  EC26  F0BC         	call	_WaitMs	;wreg free
  4527                           
  4528                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4529  01606C  0012               	return		;funcret
  4530  01606E                     __end_of_vterm_dump:
  4531                           	opt callstack 0
  4532                           
  4533 ;; *************** function _sprintf *****************
  4534 ;; Defined at:
  4535 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  s               2  [STACK] PTR unsigned char 
  4538 ;;		 -> D.lcd(216), D(218), V(189), 
  4539 ;;  fmt             2  [STACK] PTR const unsigned char 
  4540 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  4541 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  4542 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  4543 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  4544 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  4545 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  f               6  [STACK] struct _IO_FILE
  4548 ;;  ap              2  [STACK] PTR void [1]
  4549 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4550 ;;  ret             2    0        int 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  2  [STACK] int 
  4553 ;; Registers used:
  4554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/4
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:   14
  4567 ;; This function calls:
  4568 ;;		_vfprintf
  4569 ;; This function is called by:
  4570 ;;		_main
  4571 ;;		_check_help
  4572 ;;		_vterm_dump
  4573 ;; This function uses a reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text17
  4577  0164CC                     __ptext17:
  4578                           	opt callstack 0
  4579  0164CC                     _sprintf:
  4580                           	opt callstack 0
  4581                           
  4582                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4583  0164CC  0E08               	movlw	8
  4584  0164CE  26E1               	addwf	fsr1l,f,c
  4585  0164D0  0E00               	movlw	0
  4586  0164D2  22E2               	addwfc	fsr1h,f,c
  4587                           
  4588                           ;incstack = 0
  4589  0164D4  0EFE               	movlw	254
  4590  0164D6  6E3F               	movwf	(btemp+10)^0,c
  4591  0164D8  0EFF               	movlw	255
  4592  0164DA  6E40               	movwf	(btemp+11)^0,c
  4593                           
  4594                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  4595  0164DC  0EF5               	movlw	245
  4596  0164DE  24E1               	addwf	fsr1l,w,c
  4597  0164E0  6E3D               	movwf	(btemp+8)^0,c
  4598  0164E2  0EFF               	movlw	255
  4599  0164E4  20E2               	addwfc	fsr1h,w,c
  4600  0164E6  6E3E               	movwf	(btemp+9)^0,c
  4601  0164E8  503F               	movf	(btemp+10)^0,w,c
  4602  0164EA  263D               	addwf	(btemp+8)^0,f,c
  4603  0164EC  5040               	movf	(btemp+11)^0,w,c
  4604  0164EE  223E               	addwfc	(btemp+9)^0,f,c
  4605                           
  4606                           ;stkvar	_ap @ sp[(-8)+6]
  4607  0164F0  0EFF               	movlw	-1
  4608  0164F2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4609  0164F8  0EFE               	movlw	-2
  4610  0164FA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4611                           
  4612                           ;stkvar	_s @ sp[(-8)+-3]
  4613  016500  0EF5               	movlw	-11
  4614  016502  006F FF8C  F03F    	movff	plusw1,btemp+10
  4615  016508  0EF6               	movlw	-10
  4616  01650A  006F FF8C  F040    	movff	plusw1,btemp+11
  4617                           
  4618                           ;stkvar	_f @ sp[(-8)+0]
  4619  016510  0EF9               	movlw	-7
  4620  016512  0060  F103  FFE3   	movff	btemp+11,plusw1
  4621  016518  0EF8               	movlw	-8
  4622  01651A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4623                           
  4624                           ;stkvar	_f @ sp[(-8)+0]
  4625  016520  0EFA               	movlw	250
  4626  016522  24E1               	addwf	fsr1l,w,c
  4627  016524  6ED9               	movwf	fsr2l,c
  4628  016526  0EFF               	movlw	255
  4629  016528  20E2               	addwfc	fsr1h,w,c
  4630  01652A  6EDA               	movwf	fsr2h,c
  4631  01652C  0E00               	movlw	0
  4632  01652E  6EDE               	movwf	postinc2,c
  4633  016530  0E00               	movlw	0
  4634  016532  6EDD               	movwf	postdec2,c
  4635                           
  4636                           ;stkvar	_f @ sp[(-8)+0]
  4637  016534  0EFC               	movlw	252
  4638  016536  24E1               	addwf	fsr1l,w,c
  4639  016538  6ED9               	movwf	fsr2l,c
  4640  01653A  0EFF               	movlw	255
  4641  01653C  20E2               	addwfc	fsr1h,w,c
  4642  01653E  6EDA               	movwf	fsr2h,c
  4643  016540  0E00               	movlw	0
  4644  016542  6EDE               	movwf	postinc2,c
  4645  016544  0E00               	movlw	0
  4646  016546  6EDD               	movwf	postdec2,c
  4647                           
  4648                           ;stkvar	_ap @ sp[(-8)+6]
  4649  016548  0EFE               	movlw	254
  4650  01654A  24E1               	addwf	fsr1l,w,c
  4651  01654C  6E35               	movwf	btemp^0,c
  4652  01654E  0EFF               	movlw	255
  4653  016550  20E2               	addwfc	fsr1h,w,c
  4654  016552  6E36               	movwf	(btemp+1)^0,c
  4655  016554  0060  F0D7  FFE6   	movff	btemp,postinc1
  4656  01655A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4657                           
  4658                           ;stkvar	_fmt @ sp[(-10)+-5]
  4659  016560  0EF1               	movlw	-15
  4660  016562  006F FF8F FFE6     	movff	plusw1,postinc1
  4661  016568  006F FF8F FFE6     	movff	plusw1,postinc1
  4662                           
  4663                           ;stkvar	_f @ sp[(-12)+0]
  4664  01656E  0EF4               	movlw	244
  4665  016570  24E1               	addwf	fsr1l,w,c
  4666  016572  6E35               	movwf	btemp^0,c
  4667  016574  0EFF               	movlw	255
  4668  016576  20E2               	addwfc	fsr1h,w,c
  4669  016578  6E36               	movwf	(btemp+1)^0,c
  4670  01657A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4671  016580  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4672  016586  EC43  F0B5         	call	_vfprintf	;wreg free
  4673                           
  4674                           ;stkvar	_f @ sp[(-8)+0]
  4675  01658A  0EFA               	movlw	250
  4676  01658C  24E1               	addwf	fsr1l,w,c
  4677  01658E  6ED9               	movwf	fsr2l,c
  4678  016590  0EFF               	movlw	255
  4679  016592  20E2               	addwfc	fsr1h,w,c
  4680  016594  6EDA               	movwf	fsr2h,c
  4681  016596  006F FF78  F03F    	movff	postinc2,btemp+10
  4682  01659C  006F FF74  F040    	movff	postdec2,btemp+11
  4683                           
  4684                           ;stkvar	_s @ sp[(-8)+-3]
  4685  0165A2  0EF5               	movlw	-11
  4686  0165A4  006F FF8C  F03D    	movff	plusw1,btemp+8
  4687  0165AA  0EF6               	movlw	-10
  4688  0165AC  006F FF8C  F03E    	movff	plusw1,btemp+9
  4689  0165B2  503F               	movf	(btemp+10)^0,w,c
  4690  0165B4  243D               	addwf	(btemp+8)^0,w,c
  4691  0165B6  6ED9               	movwf	fsr2l,c
  4692  0165B8  5040               	movf	(btemp+11)^0,w,c
  4693  0165BA  203E               	addwfc	(btemp+9)^0,w,c
  4694  0165BC  6EDA               	movwf	fsr2h,c
  4695  0165BE  0E00               	movlw	0
  4696  0165C0  6EDF               	movwf	indf2,c
  4697                           
  4698                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 4, vargsize = 0
  4699  0165C2  0EF8               	movlw	248
  4700  0165C4  26E1               	addwf	fsr1l,f,c
  4701  0165C6  0EFF               	movlw	255
  4702  0165C8  22E2               	addwfc	fsr1h,f,c
  4703  0165CA  52E5               	movf	postdec1,f,c
  4704  0165CC  50E7               	movf	indf1,w,c
  4705  0165CE  5EE1               	subwf	fsr1l,f,c
  4706  0165D0  0E00               	movlw	0
  4707  0165D2  5AE2               	subwfb	fsr1h,f,c
  4708  0165D4  0012               	return		;funcret
  4709  0165D6                     __end_of_sprintf:
  4710                           	opt callstack 0
  4711                           
  4712 ;; *************** function _get_vterm_ptr *****************
  4713 ;; Defined at:
  4714 ;;		line 113 in file "mconfig.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  line            1  [STACK] unsigned char 
  4717 ;;  vterm           1  [STACK] unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  2  [STACK] PTR unsigned char 
  4722 ;; Registers used:
  4723 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/4
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    6
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;;		_check_help
  4741 ;;		_vterm_dump
  4742 ;; This function uses a reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text18
  4746  0179B0                     __ptext18:
  4747                           	opt callstack 0
  4748  0179B0                     _get_vterm_ptr:
  4749                           	opt callstack 24
  4750                           
  4751                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  4752                           ;stkvar	_vterm @ sp[(0)+-2]
  4753                           
  4754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4755                           ;incstack = 0
  4756  0179B0  0EFE               	movlw	-2
  4757  0179B2  50E3               	movf	plusw1,w,c
  4758  0179B4  0B03               	andlw	3
  4759  0179B6  0D36               	mullw	54
  4760  0179B8  0E00               	movlw	low _D
  4761  0179BA  6E35               	movwf	btemp^0,c
  4762  0179BC  0E04               	movlw	high _D
  4763  0179BE  6E36               	movwf	(btemp+1)^0,c
  4764  0179C0  50F3               	movf	243,w,c
  4765  0179C2  2635               	addwf	btemp^0,f,c
  4766  0179C4  50F4               	movf	244,w,c
  4767  0179C6  2236               	addwfc	(btemp+1)^0,f,c
  4768                           
  4769                           ;stkvar	_line @ sp[(0)+-1]
  4770  0179C8  0EFF               	movlw	-1
  4771  0179CA  50E3               	movf	plusw1,w,c
  4772  0179CC  0B03               	andlw	3
  4773  0179CE  0D12               	mullw	18
  4774  0179D0  50F3               	movf	243,w,c
  4775  0179D2  2635               	addwf	btemp^0,f,c
  4776  0179D4  50F4               	movf	244,w,c
  4777  0179D6  2236               	addwfc	(btemp+1)^0,f,c
  4778                           
  4779                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4780  0179D8  52E5               	movf	postdec1,f,c
  4781  0179DA  52E5               	movf	postdec1,f,c
  4782  0179DC  0012               	return		;funcret
  4783  0179DE                     __end_of_get_vterm_ptr:
  4784                           	opt callstack 0
  4785                           
  4786 ;; *************** function _WaitMs *****************
  4787 ;; Defined at:
  4788 ;;		line 32 in file "timers.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  numMilliseco    2  [STACK] const unsigned short 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1  [STACK] void 
  4795 ;; Registers used:
  4796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/2
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4806 ;;Total ram usage:        0 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    7
  4809 ;; This function calls:
  4810 ;;		_StartTimer
  4811 ;;		_TimerDone
  4812 ;; This function is called by:
  4813 ;;		_main
  4814 ;;		_vterm_dump
  4815 ;; This function uses a reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text19
  4819  01784C                     __ptext19:
  4820                           	opt callstack 0
  4821  01784C                     _WaitMs:
  4822                           	opt callstack 21
  4823                           
  4824                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  4825                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4826                           
  4827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4828                           ;incstack = 0
  4829  01784C  0EFE               	movlw	-2
  4830  01784E  006F FF8F FFE6     	movff	plusw1,postinc1
  4831  017854  006F FF8F FFE6     	movff	plusw1,postinc1
  4832  01785A  0E00               	movlw	0
  4833  01785C  6EE6               	movwf	postinc1,c
  4834  01785E  ECD0  F0BB         	call	_StartTimer	;wreg free
  4835                           
  4836                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  4837  017862  D005               	goto	l7765
  4838  017864                     l1483:
  4839                           
  4840                           ;timers.c: 36:   __nop();
  4841  017864  F000               	nop	
  4842                           
  4843                           ;timers.c: 37:   __nop();
  4844  017866  F000               	nop	
  4845                           
  4846                           ;timers.c: 38:   __nop();
  4847  017868  F000               	nop	
  4848                           
  4849                           ;timers.c: 39:   __nop();
  4850  01786A  F000               	nop	
  4851  01786C  0004               	clrwdt		;# 
  4852  01786E                     l7765:
  4853                           
  4854                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  4855  01786E  0E00               	movlw	0
  4856  017870  6EE6               	movwf	postinc1,c
  4857  017872  EC83  F0BE         	call	_TimerDone	;wreg free
  4858  017876  5035               	movf	btemp^0,w,c
  4859  017878  B4D8               	btfsc	status,2,c
  4860  01787A  D7F4               	goto	l1483
  4861                           
  4862                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4863  01787C  52E5               	movf	postdec1,f,c
  4864  01787E  52E5               	movf	postdec1,f,c
  4865  017880  0012               	return		;funcret
  4866  017882                     __end_of_WaitMs:
  4867                           	opt callstack 0
  4868                           
  4869 ;; *************** function _update_lcd *****************
  4870 ;; Defined at:
  4871 ;;		line 82 in file "mconfig.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  vterm           1  [STACK] unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;		None
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1  [STACK] unsigned char 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/4
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4889 ;;Total ram usage:        0 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:   17
  4892 ;; This function calls:
  4893 ;;		_eaDogM_WriteStringAtPos
  4894 ;;		_wait_lcd_done
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;;		_check_help
  4898 ;; This function uses a reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text20
  4902  0163BE                     __ptext20:
  4903                           	opt callstack 0
  4904  0163BE                     _update_lcd:
  4905                           	opt callstack 13
  4906                           
  4907                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  4908                           ;stkvar	_vterm @ sp[(0)+-1]
  4909                           
  4910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4911                           ;incstack = 0
  4912  0163BE  0EFF               	movlw	-1
  4913  0163C0  006F FF8C  F035    	movff	plusw1,btemp
  4914  0163C6  0E03               	movlw	3
  4915  0163C8  1635               	andwf	btemp^0,f,c
  4916  0163CA  0EFF               	movlw	-1
  4917  0163CC  0060  F0D7  FFE3   	movff	btemp,plusw1
  4918                           
  4919                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  4920  0163D2  0104               	movlb	4	; () banked
  4921  0163D4  A1D8               	btfss	(_D+216)& (0+255),0,b
  4922  0163D6  D004               	goto	l9707
  4923                           
  4924                           ; BSR set to: 4
  4925                           ;stkvar	_vterm @ sp[(0)+-1]
  4926  0163D8  0EFF               	movlw	-1
  4927  0163DA  50E3               	movf	plusw1,w,c
  4928  0163DC  B4D8               	btfsc	status,2,c
  4929  0163DE  D074               	goto	l1561
  4930  0163E0                     l9707:
  4931                           
  4932                           ; BSR set to: 4
  4933                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  4934                           ;stkvar	_vterm @ sp[(0)+-1]
  4935  0163E0  0EFF               	movlw	-1
  4936  0163E2  50E3               	movf	plusw1,w,c
  4937  0163E4  0D36               	mullw	54
  4938  0163E6  0E10               	movlw	low (_D+16)
  4939  0163E8  24F3               	addwf	243,w,c
  4940  0163EA  6ED9               	movwf	fsr2l,c
  4941  0163EC  0E04               	movlw	high (_D+16)
  4942  0163EE  20F4               	addwfc	prodh,w,c
  4943  0163F0  6EDA               	movwf	fsr2h,c
  4944  0163F2  0E00               	movlw	0
  4945  0163F4  6EDF               	movwf	indf2,c
  4946                           
  4947                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  4948                           ;stkvar	_vterm @ sp[(0)+-1]
  4949  0163F6  0EFF               	movlw	-1
  4950  0163F8  50E3               	movf	plusw1,w,c
  4951  0163FA  0D36               	mullw	54
  4952  0163FC  0E22               	movlw	low (_D+34)
  4953  0163FE  24F3               	addwf	243,w,c
  4954  016400  6ED9               	movwf	fsr2l,c
  4955  016402  0E04               	movlw	high (_D+34)
  4956  016404  20F4               	addwfc	prodh,w,c
  4957  016406  6EDA               	movwf	fsr2h,c
  4958  016408  0E00               	movlw	0
  4959  01640A  6EDF               	movwf	indf2,c
  4960                           
  4961                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  4962                           ;stkvar	_vterm @ sp[(0)+-1]
  4963  01640C  0EFF               	movlw	-1
  4964  01640E  50E3               	movf	plusw1,w,c
  4965  016410  0D36               	mullw	54
  4966  016412  0E34               	movlw	low (_D+52)
  4967  016414  24F3               	addwf	243,w,c
  4968  016416  6ED9               	movwf	fsr2l,c
  4969  016418  0E04               	movlw	high (_D+52)
  4970  01641A  20F4               	addwfc	prodh,w,c
  4971  01641C  6EDA               	movwf	fsr2h,c
  4972  01641E  0E00               	movlw	0
  4973  016420  6EDF               	movwf	indf2,c
  4974                           
  4975                           ; BSR set to: 4
  4976                           ;mconfig.c: 92:  wait_lcd_done();
  4977  016422  EC34  F0BF         	call	_wait_lcd_done	;wreg free
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  4981                           ;stkvar	_vterm @ sp[(0)+-1]
  4982  016426  0EFF               	movlw	-1
  4983  016428  50E3               	movf	plusw1,w,c
  4984  01642A  0D36               	mullw	54
  4985  01642C  0E00               	movlw	low _D
  4986  01642E  6E3F               	movwf	(btemp+10)^0,c
  4987  016430  0E04               	movlw	high _D
  4988  016432  6E40               	movwf	(btemp+11)^0,c
  4989  016434  50F3               	movf	243,w,c
  4990  016436  263F               	addwf	(btemp+10)^0,f,c
  4991  016438  50F4               	movf	244,w,c
  4992  01643A  2240               	addwfc	(btemp+11)^0,f,c
  4993  01643C  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4994  016442  0060  F103  FFE6   	movff	btemp+11,postinc1
  4995  016448  0E00               	movlw	0
  4996  01644A  6EE6               	movwf	postinc1,c
  4997  01644C  0E00               	movlw	0
  4998  01644E  6EE6               	movwf	postinc1,c
  4999  016450  EC41  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  5000                           
  5001                           ; BSR set to: 59
  5002                           ;mconfig.c: 94:  wait_lcd_done();
  5003  016454  EC34  F0BF         	call	_wait_lcd_done	;wreg free
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5007                           ;stkvar	_vterm @ sp[(0)+-1]
  5008  016458  0EFF               	movlw	-1
  5009  01645A  50E3               	movf	plusw1,w,c
  5010  01645C  0D36               	mullw	54
  5011  01645E  0E00               	movlw	low _D
  5012  016460  6E3F               	movwf	(btemp+10)^0,c
  5013  016462  0E04               	movlw	high _D
  5014  016464  6E40               	movwf	(btemp+11)^0,c
  5015  016466  0E12               	movlw	18
  5016  016468  263F               	addwf	(btemp+10)^0,f,c
  5017  01646A  0E00               	movlw	0
  5018  01646C  2240               	addwfc	(btemp+11)^0,f,c
  5019  01646E  50F3               	movf	243,w,c
  5020  016470  263F               	addwf	(btemp+10)^0,f,c
  5021  016472  50F4               	movf	244,w,c
  5022  016474  2240               	addwfc	(btemp+11)^0,f,c
  5023  016476  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5024  01647C  0060  F103  FFE6   	movff	btemp+11,postinc1
  5025  016482  0E00               	movlw	0
  5026  016484  6EE6               	movwf	postinc1,c
  5027  016486  0E01               	movlw	1
  5028  016488  6EE6               	movwf	postinc1,c
  5029  01648A  EC41  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  5030                           
  5031                           ; BSR set to: 59
  5032                           ;mconfig.c: 96:  wait_lcd_done();
  5033  01648E  EC34  F0BF         	call	_wait_lcd_done	;wreg free
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5037                           ;stkvar	_vterm @ sp[(0)+-1]
  5038  016492  0EFF               	movlw	-1
  5039  016494  50E3               	movf	plusw1,w,c
  5040  016496  0D36               	mullw	54
  5041  016498  0E00               	movlw	low _D
  5042  01649A  6E3F               	movwf	(btemp+10)^0,c
  5043  01649C  0E04               	movlw	high _D
  5044  01649E  6E40               	movwf	(btemp+11)^0,c
  5045  0164A0  0E24               	movlw	36
  5046  0164A2  263F               	addwf	(btemp+10)^0,f,c
  5047  0164A4  0E00               	movlw	0
  5048  0164A6  2240               	addwfc	(btemp+11)^0,f,c
  5049  0164A8  50F3               	movf	243,w,c
  5050  0164AA  263F               	addwf	(btemp+10)^0,f,c
  5051  0164AC  50F4               	movf	244,w,c
  5052  0164AE  2240               	addwfc	(btemp+11)^0,f,c
  5053  0164B0  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5054  0164B6  0060  F103  FFE6   	movff	btemp+11,postinc1
  5055  0164BC  0E00               	movlw	0
  5056  0164BE  6EE6               	movwf	postinc1,c
  5057  0164C0  0E02               	movlw	2
  5058  0164C2  6EE6               	movwf	postinc1,c
  5059  0164C4  EC41  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  5060  0164C8                     l1561:
  5061                           
  5062                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5063  0164C8  52E5               	movf	postdec1,f,c
  5064  0164CA  0012               	return		;funcret
  5065  0164CC                     __end_of_update_lcd:
  5066                           	opt callstack 0
  5067                           
  5068 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5069 ;; Defined at:
  5070 ;;		line 252 in file "eadog.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  r               1  [STACK] const unsigned char 
  5073 ;;  c               1  [STACK] const unsigned char 
  5074 ;;  strPtr          2  [STACK] PTR unsigned char 
  5075 ;;		 -> D.lcd(216), D(218), V(189), 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1  [STACK] void 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5082 ;; Tracked objects:
  5083 ;;		On entry : 3F/0
  5084 ;;		On exit  : 3F/3B
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:   16
  5094 ;; This function calls:
  5095 ;;		_eaDogM_WriteString
  5096 ;;		_send_lcd_cmd_dma
  5097 ;; This function is called by:
  5098 ;;		_update_lcd
  5099 ;;		_vterm_dump
  5100 ;; This function uses a reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text21
  5104  017882                     __ptext21:
  5105                           	opt callstack 0
  5106  017882                     _eaDogM_WriteStringAtPos:
  5107                           	opt callstack 13
  5108                           
  5109                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5110                           ;stkvar	_c @ sp[(0)+-2]
  5111                           
  5112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5113                           ;incstack = 0
  5114  017882  0EFE               	movlw	-2
  5115  017884  006F FF8C  F040    	movff	plusw1,btemp+11
  5116                           
  5117                           ;stkvar	_r @ sp[(0)+-1]
  5118  01788A  0EFF               	movlw	-1
  5119  01788C  50E3               	movf	plusw1,w,c
  5120  01788E  0D10               	mullw	16
  5121  017890  50F3               	movf	243,w,c
  5122  017892  2440               	addwf	(btemp+11)^0,w,c
  5123  017894  0F80               	addlw	128
  5124  017896  6EE6               	movwf	postinc1,c
  5125  017898  EC48  F0BA         	call	_send_lcd_cmd_dma	;wreg free
  5126                           
  5127                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5128                           ;stkvar	_strPtr @ sp[(0)+-4]
  5129  01789C  0EFC               	movlw	-4
  5130  01789E  006F FF8F FFE6     	movff	plusw1,postinc1
  5131  0178A4  006F FF8F FFE6     	movff	plusw1,postinc1
  5132  0178AA  EC97  F0B5         	call	_eaDogM_WriteString	;wreg free
  5133                           
  5134                           ; BSR set to: 59
  5135                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5136  0178AE  52E5               	movf	postdec1,f,c
  5137  0178B0  52E5               	movf	postdec1,f,c
  5138  0178B2  52E5               	movf	postdec1,f,c
  5139  0178B4  52E5               	movf	postdec1,f,c
  5140  0178B6  0012               	return		;funcret
  5141  0178B8                     __end_of_eaDogM_WriteStringAtPos:
  5142                           	opt callstack 0
  5143                           
  5144 ;; *************** function _send_lcd_cmd_dma *****************
  5145 ;; Defined at:
  5146 ;;		line 205 in file "eadog.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  strPtr          1  [STACK] unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1  [STACK] void 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/3D
  5157 ;;		On exit  : 3F/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:   15
  5167 ;; This function calls:
  5168 ;;		_printf
  5169 ;;		_ringBufS_flush
  5170 ;;		_start_lcd
  5171 ;;		_wait_lcd_done
  5172 ;;		_wait_lcd_set
  5173 ;; This function is called by:
  5174 ;;		_eaDogM_WriteCommand
  5175 ;;		_eaDogM_WriteStringAtPos
  5176 ;; This function uses a reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text22
  5180  017490                     __ptext22:
  5181                           	opt callstack 0
  5182  017490                     _send_lcd_cmd_dma:
  5183                           	opt callstack 13
  5184                           
  5185                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5186                           
  5187                           ; BSR set to: 59
  5188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5189                           ;incstack = 0
  5190  017490  EC26  F0C0         	call	_wait_lcd_set	;wreg free
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5194  017494  0E00               	movlw	0
  5195  017496  6EE6               	movwf	postinc1,c
  5196  017498  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  5197  01749E  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  5198  0174A4  ECD2  F0B6         	call	_ringBufS_flush	;wreg free
  5199  0174A8  92BC               	bcf	188,1,c	;volatile
  5200  0174AA  94BC               	bcf	188,2,c	;volatile
  5201                           
  5202                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5203  0174AC  013B               	movlb	59	; () banked
  5204  0174AE  9FFC               	bcf	252,7,b	;volatile
  5205                           
  5206                           ; BSR set to: 59
  5207                           ;eadog.c: 214:  DMA1SSZ = 1;
  5208  0174B0  0E00               	movlw	0
  5209  0174B2  6FF8               	movwf	248,b	;volatile
  5210  0174B4  0E01               	movlw	1
  5211  0174B6  6FF7               	movwf	247,b	;volatile
  5212                           
  5213                           ; BSR set to: 59
  5214                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5215  0174B8  8FFC               	bsf	252,7,b	;volatile
  5216                           
  5217                           ; BSR set to: 59
  5218                           ;eadog.c: 216:  printf("%c", strPtr);
  5219                           ;stkvar	_strPtr @ sp[(0)+-1]
  5220  0174BA  0EFF               	movlw	-1
  5221  0174BC  50E3               	movf	plusw1,w,c
  5222  0174BE  6EE6               	movwf	postinc1,c
  5223  0174C0  0E00               	movlw	0
  5224  0174C2  6EE6               	movwf	postinc1,c
  5225  0174C4  0EF9               	movlw	low STR_12
  5226  0174C6  6EE6               	movwf	postinc1,c
  5227  0174C8  0EFF               	movlw	high STR_12
  5228  0174CA  6EE6               	movwf	postinc1,c
  5229  0174CC  0E04               	movlw	4
  5230  0174CE  6EE6               	movwf	postinc1,c
  5231  0174D0  EC5F  F0B9         	call	_printf	;wreg free
  5232                           
  5233                           ;eadog.c: 217:  start_lcd();
  5234  0174D4  EC29  F0C0         	call	_start_lcd	;wreg free
  5235                           
  5236                           ; BSR set to: 59
  5237                           ;eadog.c: 218:  wait_lcd_done();
  5238  0174D8  EC34  F0BF         	call	_wait_lcd_done	;wreg free
  5239                           
  5240                           ; BSR set to: 0
  5241  0174DC  82BC               	bsf	188,1,c	;volatile
  5242                           
  5243                           ; BSR set to: 0
  5244                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5245  0174DE  52E5               	movf	postdec1,f,c
  5246  0174E0  0012               	return		;funcret
  5247  0174E2                     __end_of_send_lcd_cmd_dma:
  5248                           	opt callstack 0
  5249                           
  5250 ;; *************** function _wait_lcd_done *****************
  5251 ;; Defined at:
  5252 ;;		line 141 in file "eadog.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1  [STACK] void 
  5259 ;; Registers used:
  5260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/2
  5263 ;;		On exit  : 3F/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5270 ;;Total ram usage:        0 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    7
  5273 ;; This function calls:
  5274 ;;		_wdtdelay
  5275 ;; This function is called by:
  5276 ;;		_send_lcd_cmd_dma
  5277 ;;		_update_lcd
  5278 ;;		_vterm_dump
  5279 ;; This function uses a reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text23
  5283  017E68                     __ptext23:
  5284                           	opt callstack 0
  5285  017E68                     _wait_lcd_done:
  5286                           	opt callstack 22
  5287                           
  5288                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5289                           
  5290                           ; BSR set to: 0
  5291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5292                           ;incstack = 0
  5293  017E68  0100               	movlb	0	; () banked
  5294  017E6A  B79A               	btfsc	_spi_link& (0+255),3,b	;volatile
  5295  017E6C  D7FD               	goto	_wait_lcd_done
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;eadog.c: 144:  wdtdelay(50);
  5299  017E6E  0E32               	movlw	50
  5300  017E70  6EE6               	movwf	postinc1,c
  5301  017E72  0E00               	movlw	0
  5302  017E74  6EE6               	movwf	postinc1,c
  5303  017E76  0E00               	movlw	0
  5304  017E78  6EE6               	movwf	postinc1,c
  5305  017E7A  0E00               	movlw	0
  5306  017E7C  6EE6               	movwf	postinc1,c
  5307  017E7E  ECEE  F0B9         	call	_wdtdelay	;wreg free
  5308                           
  5309                           ; BSR set to: 0
  5310                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5311  017E82  0012               	return		;funcret
  5312  017E84                     __end_of_wait_lcd_done:
  5313                           	opt callstack 0
  5314                           
  5315 ;; *************** function _wdtdelay *****************
  5316 ;; Defined at:
  5317 ;;		line 22 in file "eadog.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  delay           4  [STACK] const unsigned long 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1  [STACK] void 
  5324 ;; Registers used:
  5325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 3F/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5335 ;;Total ram usage:        0 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    6
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_init_display
  5342 ;;		_send_lcd_cmd
  5343 ;;		_send_lcd_cmd_long
  5344 ;;		_wait_lcd_done
  5345 ;; This function uses a reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text24
  5349  0173DC                     __ptext24:
  5350                           	opt callstack 0
  5351  0173DC                     _wdtdelay:
  5352                           	opt callstack 22
  5353                           
  5354                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5355                           
  5356                           ; BSR set to: 0
  5357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5358                           ;incstack = 0
  5359  0173DC  0100               	movlb	0	; () banked
  5360  0173DE  6BB6               	clrf	wdtdelay@dcount& (0+255),b
  5361  0173E0  6BB7               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5362  0173E2  6BB8               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5363  0173E4  6BB9               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5364  0173E6                     l1328:
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;eadog.c: 27:   __nop();
  5368  0173E6  F000               	nop	
  5369  0173E8  0004               	clrwdt		;# 
  5370                           
  5371                           ;eadog.c: 29:  };
  5372  0173EA  0E01               	movlw	1
  5373  0173EC  0100               	movlb	0	; () banked
  5374  0173EE  27B6               	addwf	wdtdelay@dcount& (0+255),f,b
  5375  0173F0  0E00               	movlw	0
  5376  0173F2  23B7               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5377  0173F4  23B8               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5378  0173F6  23B9               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;stkvar	_delay @ sp[(0)+-4]
  5382  0173F8  0EFC               	movlw	-4
  5383  0173FA  006F FF8C  F035    	movff	plusw1,btemp
  5384  017400  51B6               	movf	wdtdelay@dcount& (0+255),w,b
  5385  017402  5C35               	subwf	btemp^0,w,c
  5386  017404  0EFD               	movlw	-3
  5387  017406  006F FF8C  F035    	movff	plusw1,btemp
  5388  01740C  51B7               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5389  01740E  5835               	subwfb	btemp^0,w,c
  5390  017410  0EFE               	movlw	-2
  5391  017412  006F FF8C  F035    	movff	plusw1,btemp
  5392  017418  51B8               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5393  01741A  5835               	subwfb	btemp^0,w,c
  5394  01741C  0EFF               	movlw	-1
  5395  01741E  006F FF8C  F035    	movff	plusw1,btemp
  5396  017424  51B9               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5397  017426  5835               	subwfb	btemp^0,w,c
  5398  017428  B0D8               	btfsc	status,0,c
  5399  01742A  D7DD               	goto	l1328
  5400                           
  5401                           ; BSR set to: 0
  5402                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5403  01742C  52E5               	movf	postdec1,f,c
  5404  01742E  52E5               	movf	postdec1,f,c
  5405  017430  52E5               	movf	postdec1,f,c
  5406  017432  52E5               	movf	postdec1,f,c
  5407  017434  0012               	return		;funcret
  5408  017436                     __end_of_wdtdelay:
  5409                           	opt callstack 0
  5410                           
  5411 ;; *************** function _eaDogM_WriteString *****************
  5412 ;; Defined at:
  5413 ;;		line 184 in file "eadog.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  strPtr          2  [STACK] PTR unsigned char 
  5416 ;;		 -> D.lcd(216), D(218), V(189), 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1  [STACK] void 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5423 ;; Tracked objects:
  5424 ;;		On entry : 3F/0
  5425 ;;		On exit  : 3F/3B
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5432 ;;Total ram usage:        0 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:   15
  5435 ;; This function calls:
  5436 ;;		_printf
  5437 ;;		_ringBufS_flush
  5438 ;;		_start_lcd
  5439 ;;		_strlen
  5440 ;;		_wait_lcd_set
  5441 ;; This function is called by:
  5442 ;;		_eaDogM_WriteStringAtPos
  5443 ;; This function uses a reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text25
  5447  016B2E                     __ptext25:
  5448                           	opt callstack 0
  5449  016B2E                     _eaDogM_WriteString:
  5450                           	opt callstack 13
  5451                           
  5452                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  5453                           
  5454                           ; BSR set to: 0
  5455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5456                           ;incstack = 0
  5457  016B2E  EC26  F0C0         	call	_wait_lcd_set	;wreg free
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  5461  016B32  0E00               	movlw	0
  5462  016B34  6EE6               	movwf	postinc1,c
  5463  016B36  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  5464  016B3C  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  5465  016B42  ECD2  F0B6         	call	_ringBufS_flush	;wreg free
  5466  016B46  94BC               	bcf	188,2,c	;volatile
  5467                           
  5468                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5469                           ;stkvar	_strPtr @ sp[(0)+-2]
  5470  016B48  0EFE               	movlw	-2
  5471  016B4A  006F FF8F FFE6     	movff	plusw1,postinc1
  5472  016B50  006F FF8F FFE6     	movff	plusw1,postinc1
  5473  016B56  ECEA  F0B5         	call	_strlen	;wreg free
  5474  016B5A  5036               	movf	(btemp+1)^0,w,c
  5475  016B5C  E104               	bnz	u9700
  5476  016B5E  0E41               	movlw	65
  5477  016B60  5C35               	subwf	btemp^0,w,c
  5478  016B62  A0D8               	btfss	status,0,c
  5479  016B64  D010               	goto	l9673
  5480  016B66                     u9700:
  5481                           
  5482                           ;stkvar	_strPtr @ sp[(0)+-2]
  5483  016B66  0EFE               	movlw	-2
  5484  016B68  006F FF8C  F03F    	movff	plusw1,btemp+10
  5485  016B6E  0EFF               	movlw	-1
  5486  016B70  006F FF8C  F040    	movff	plusw1,btemp+11
  5487  016B76  0E40               	movlw	64
  5488  016B78  243F               	addwf	(btemp+10)^0,w,c
  5489  016B7A  6ED9               	movwf	fsr2l,c
  5490  016B7C  0E00               	movlw	0
  5491  016B7E  2040               	addwfc	(btemp+11)^0,w,c
  5492  016B80  6EDA               	movwf	fsr2h,c
  5493  016B82  0E00               	movlw	0
  5494  016B84  6EDF               	movwf	indf2,c
  5495  016B86                     l9673:
  5496                           
  5497                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  5498  016B86  013B               	movlb	59	; () banked
  5499  016B88  9FFC               	bcf	252,7,b	;volatile
  5500                           
  5501                           ; BSR set to: 59
  5502                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  5503                           ;stkvar	_strPtr @ sp[(0)+-2]
  5504  016B8A  0EFE               	movlw	-2
  5505  016B8C  006F FF8F FFE6     	movff	plusw1,postinc1
  5506  016B92  006F FF8F FFE6     	movff	plusw1,postinc1
  5507  016B98  ECEA  F0B5         	call	_strlen	;wreg free
  5508  016B9C  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  5509  016BA2  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  5510                           
  5511                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  5512  016BA8  013B               	movlb	59	; () banked
  5513  016BAA  8FFC               	bsf	252,7,b	;volatile
  5514                           
  5515                           ; BSR set to: 59
  5516                           ;eadog.c: 195:  printf("%s", strPtr);
  5517                           ;stkvar	_strPtr @ sp[(0)+-2]
  5518  016BAC  0EFE               	movlw	-2
  5519  016BAE  006F FF8F FFE6     	movff	plusw1,postinc1
  5520  016BB4  006F FF8F FFE6     	movff	plusw1,postinc1
  5521  016BBA  0EFC               	movlw	low STR_11
  5522  016BBC  6EE6               	movwf	postinc1,c
  5523  016BBE  0EFF               	movlw	high STR_11
  5524  016BC0  6EE6               	movwf	postinc1,c
  5525  016BC2  0E04               	movlw	4
  5526  016BC4  6EE6               	movwf	postinc1,c
  5527  016BC6  EC5F  F0B9         	call	_printf	;wreg free
  5528                           
  5529                           ;eadog.c: 196:  start_lcd();
  5530  016BCA  EC29  F0C0         	call	_start_lcd	;wreg free
  5531                           
  5532                           ; BSR set to: 59
  5533                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  5534  016BCE  52E5               	movf	postdec1,f,c
  5535  016BD0  52E5               	movf	postdec1,f,c
  5536  016BD2  0012               	return		;funcret
  5537  016BD4                     __end_of_eaDogM_WriteString:
  5538                           	opt callstack 0
  5539                           
  5540 ;; *************** function _wait_lcd_set *****************
  5541 ;; Defined at:
  5542 ;;		line 131 in file "eadog.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1  [STACK] void 
  5549 ;; Registers used:
  5550 ;;		None
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/3D
  5553 ;;		On exit  : 3F/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    6
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_eaDogM_WriteString
  5567 ;;		_send_lcd_cmd_dma
  5568 ;; This function uses a reentrant model
  5569 ;;
  5570                           
  5571                           	psect	text26
  5572  01804C                     __ptext26:
  5573                           	opt callstack 0
  5574  01804C                     _wait_lcd_set:
  5575                           	opt callstack 21
  5576                           
  5577                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  5578                           
  5579                           ; BSR set to: 59
  5580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5581                           ;incstack = 0
  5582  01804C  0100               	movlb	0	; () banked
  5583  01804E  879A               	bsf	_spi_link& (0+255),3,b	;volatile
  5584                           
  5585                           ; BSR set to: 0
  5586                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5587  018050  0012               	return		;funcret
  5588  018052                     __end_of_wait_lcd_set:
  5589                           	opt callstack 0
  5590                           
  5591 ;; *************** function _start_lcd *****************
  5592 ;; Defined at:
  5593 ;;		line 126 in file "eadog.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1  [STACK] void 
  5600 ;; Registers used:
  5601 ;;		None
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/3B
  5604 ;;		On exit  : 3F/3B
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    6
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_eaDogM_WriteString
  5618 ;;		_send_lcd_cmd_dma
  5619 ;; This function uses a reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text27
  5623  018052                     __ptext27:
  5624                           	opt callstack 0
  5625  018052                     _start_lcd:
  5626                           	opt callstack 21
  5627                           
  5628                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  5629                           
  5630                           ; BSR set to: 0
  5631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5632                           ;incstack = 0
  5633  018052  013B               	movlb	59	; () banked
  5634  018054  8DFC               	bsf	252,6,b	;volatile
  5635                           
  5636                           ; BSR set to: 59
  5637                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5638  018056  0012               	return		;funcret
  5639  018058                     __end_of_start_lcd:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function _ringBufS_flush *****************
  5643 ;; Defined at:
  5644 ;;		line 76 in file "ringbufs.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5647 ;;		 -> ring_buf1(67), 
  5648 ;;  clearBuffer     1  [STACK] const char 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1  [STACK] void 
  5653 ;; Registers used:
  5654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5655 ;; Tracked objects:
  5656 ;;		On entry : 3F/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5664 ;;Total ram usage:        0 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    7
  5667 ;; This function calls:
  5668 ;;		_memset
  5669 ;; This function is called by:
  5670 ;;		_eaDogM_WriteString
  5671 ;;		_send_lcd_cmd_dma
  5672 ;; This function uses a reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text28
  5676  016DA4                     __ptext28:
  5677                           	opt callstack 0
  5678  016DA4                     _ringBufS_flush:
  5679                           	opt callstack 20
  5680                           
  5681                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5682                           ;stkvar	__this @ sp[(0)+-2]
  5683                           
  5684                           ; BSR set to: 59
  5685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5686                           ;incstack = 0
  5687  016DA4  0EFE               	movlw	-2
  5688  016DA6  006F FF8C  F03F    	movff	plusw1,btemp+10
  5689  016DAC  0EFF               	movlw	-1
  5690  016DAE  006F FF8C  F040    	movff	plusw1,btemp+11
  5691  016DB4  0E42               	movlw	66
  5692  016DB6  243F               	addwf	(btemp+10)^0,w,c
  5693  016DB8  6ED9               	movwf	fsr2l,c
  5694  016DBA  0E00               	movlw	0
  5695  016DBC  2040               	addwfc	(btemp+11)^0,w,c
  5696  016DBE  6EDA               	movwf	fsr2h,c
  5697  016DC0  0E00               	movlw	0
  5698  016DC2  6EDF               	movwf	indf2,c
  5699                           
  5700                           ;ringbufs.c: 79:  _this->head = 0;
  5701                           ;stkvar	__this @ sp[(0)+-2]
  5702  016DC4  0EFE               	movlw	-2
  5703  016DC6  006F FF8C  F03F    	movff	plusw1,btemp+10
  5704  016DCC  0EFF               	movlw	-1
  5705  016DCE  006F FF8C  F040    	movff	plusw1,btemp+11
  5706  016DD4  0E40               	movlw	64
  5707  016DD6  243F               	addwf	(btemp+10)^0,w,c
  5708  016DD8  6ED9               	movwf	fsr2l,c
  5709  016DDA  0E00               	movlw	0
  5710  016DDC  2040               	addwfc	(btemp+11)^0,w,c
  5711  016DDE  6EDA               	movwf	fsr2h,c
  5712  016DE0  0E00               	movlw	0
  5713  016DE2  6EDF               	movwf	indf2,c
  5714                           
  5715                           ;ringbufs.c: 80:  _this->tail = 0;
  5716                           ;stkvar	__this @ sp[(0)+-2]
  5717  016DE4  0EFE               	movlw	-2
  5718  016DE6  006F FF8C  F03F    	movff	plusw1,btemp+10
  5719  016DEC  0EFF               	movlw	-1
  5720  016DEE  006F FF8C  F040    	movff	plusw1,btemp+11
  5721  016DF4  0E41               	movlw	65
  5722  016DF6  243F               	addwf	(btemp+10)^0,w,c
  5723  016DF8  6ED9               	movwf	fsr2l,c
  5724  016DFA  0E00               	movlw	0
  5725  016DFC  2040               	addwfc	(btemp+11)^0,w,c
  5726  016DFE  6EDA               	movwf	fsr2h,c
  5727  016E00  0E00               	movlw	0
  5728  016E02  6EDF               	movwf	indf2,c
  5729                           
  5730                           ;ringbufs.c: 81:  if (clearBuffer) {
  5731                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  5732  016E04  0EFD               	movlw	-3
  5733  016E06  50E3               	movf	plusw1,w,c
  5734  016E08  B4D8               	btfsc	status,2,c
  5735  016E0A  D011               	goto	l1468
  5736                           
  5737                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  5738  016E0C  0E40               	movlw	64
  5739  016E0E  6EE6               	movwf	postinc1,c
  5740  016E10  0E00               	movlw	0
  5741  016E12  6EE6               	movwf	postinc1,c
  5742  016E14  0E00               	movlw	0
  5743  016E16  6EE6               	movwf	postinc1,c
  5744  016E18  0E00               	movlw	0
  5745  016E1A  6EE6               	movwf	postinc1,c
  5746                           
  5747                           ;stkvar	__this @ sp[(-4)+-2]
  5748  016E1C  0EFA               	movlw	-6
  5749  016E1E  006F FF8F FFE6     	movff	plusw1,postinc1
  5750  016E24  006F FF8F FFE6     	movff	plusw1,postinc1
  5751  016E2A  EC47  F0A1         	call	_memset	;wreg free
  5752  016E2E                     l1468:
  5753                           
  5754                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  5755  016E2E  52E5               	movf	postdec1,f,c
  5756  016E30  52E5               	movf	postdec1,f,c
  5757  016E32  52E5               	movf	postdec1,f,c
  5758  016E34  0012               	return		;funcret
  5759  016E36                     __end_of_ringBufS_flush:
  5760                           	opt callstack 0
  5761                           
  5762 ;; *************** function _memset *****************
  5763 ;; Defined at:
  5764 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  dest            2  [STACK] PTR void 
  5767 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5768 ;;  c               2  [STACK] int 
  5769 ;;  n               2  [STACK] unsigned int 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  s               2  [STACK] PTR unsigned char 
  5772 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5773 ;;  k               2  [STACK] unsigned int 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  2  [STACK] PTR void 
  5776 ;; Registers used:
  5777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5787 ;;Total ram usage:        0 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    6
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_ringBufS_init
  5794 ;;		_ringBufS_flush
  5795 ;; This function uses a reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text29
  5799  01428E                     __ptext29:
  5800                           	opt callstack 0
  5801  01428E                     _memset:
  5802                           	opt callstack 0
  5803                           
  5804                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5805  01428E  52E6               	movf	postinc1,f,c
  5806  014290  52E6               	movf	postinc1,f,c
  5807  014292  52E6               	movf	postinc1,f,c
  5808  014294  52E6               	movf	postinc1,f,c
  5809                           
  5810                           ;stkvar	_dest @ sp[(-4)+-2]
  5811                           
  5812                           ;incstack = 0
  5813  014296  0EFA               	movlw	-6
  5814  014298  006F FF8C  F03F    	movff	plusw1,btemp+10
  5815  01429E  0EFB               	movlw	-5
  5816  0142A0  006F FF8C  F040    	movff	plusw1,btemp+11
  5817                           
  5818                           ;stkvar	_s @ sp[(-4)+0]
  5819  0142A6  0EFD               	movlw	-3
  5820  0142A8  0060  F103  FFE3   	movff	btemp+11,plusw1
  5821  0142AE  0EFC               	movlw	-4
  5822  0142B0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5823                           
  5824                           ;stkvar	_n @ sp[(-4)+-6]
  5825  0142B6  0EF6               	movlw	-10
  5826  0142B8  006F FF8C  F035    	movff	plusw1,btemp
  5827  0142BE  0EF7               	movlw	-9
  5828  0142C0  50E3               	movf	plusw1,w,c
  5829  0142C2  1035               	iorwf	btemp^0,w,c
  5830  0142C4  B4D8               	btfsc	status,2,c
  5831  0142C6  D154               	goto	u9670
  5832                           
  5833                           ;stkvar	_c @ sp[(-4)+-4]
  5834                           ;stkvar	_s @ sp[(-4)+0]
  5835  0142C8  0EFC               	movlw	-4
  5836  0142CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  5837  0142D0  0EFD               	movlw	-3
  5838  0142D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  5839  0142D8  0EF8               	movlw	-8
  5840  0142DA  006F FF8F FFDF     	movff	plusw1,indf2
  5841                           
  5842                           ;stkvar	_c @ sp[(-4)+-4]
  5843                           ;stkvar	_n @ sp[(-4)+-6]
  5844                           ;stkvar	_s @ sp[(-4)+0]
  5845  0142E0  0EFC               	movlw	-4
  5846  0142E2  006F FF8C  F03F    	movff	plusw1,btemp+10
  5847  0142E8  0EFD               	movlw	-3
  5848  0142EA  006F FF8C  F040    	movff	plusw1,btemp+11
  5849  0142F0  0EF6               	movlw	-10
  5850  0142F2  50E3               	movf	plusw1,w,c
  5851  0142F4  263F               	addwf	(btemp+10)^0,f,c
  5852  0142F6  0EF7               	movlw	-9
  5853  0142F8  50E3               	movf	plusw1,w,c
  5854  0142FA  2240               	addwfc	(btemp+11)^0,f,c
  5855  0142FC  0EFF               	movlw	255
  5856  0142FE  243F               	addwf	(btemp+10)^0,w,c
  5857  014300  6ED9               	movwf	fsr2l,c
  5858  014302  0EFF               	movlw	255
  5859  014304  2040               	addwfc	(btemp+11)^0,w,c
  5860  014306  6EDA               	movwf	fsr2h,c
  5861  014308  0EF8               	movlw	-8
  5862  01430A  006F FF8F FFDF     	movff	plusw1,indf2
  5863                           
  5864                           ;stkvar	_n @ sp[(-4)+-6]
  5865  014310  0EF7               	movlw	-9
  5866  014312  50E3               	movf	plusw1,w,c
  5867  014314  E108               	bnz	l9589
  5868  014316  0EF6               	movlw	-10
  5869  014318  006F FF8C  F035    	movff	plusw1,btemp
  5870  01431E  0E03               	movlw	3
  5871  014320  5E35               	subwf	btemp^0,f,c
  5872  014322  A0D8               	btfss	status,0,c
  5873  014324  D125               	goto	u9670
  5874  014326                     l9589:
  5875                           
  5876                           ;stkvar	_c @ sp[(-4)+-4]
  5877                           ;stkvar	_s @ sp[(-4)+0]
  5878  014326  0EFC               	movlw	-4
  5879  014328  006F FF8C  F03F    	movff	plusw1,btemp+10
  5880  01432E  0EFD               	movlw	-3
  5881  014330  006F FF8C  F040    	movff	plusw1,btemp+11
  5882  014336  0E01               	movlw	1
  5883  014338  243F               	addwf	(btemp+10)^0,w,c
  5884  01433A  6ED9               	movwf	fsr2l,c
  5885  01433C  0E00               	movlw	0
  5886  01433E  2040               	addwfc	(btemp+11)^0,w,c
  5887  014340  6EDA               	movwf	fsr2h,c
  5888  014342  0EF8               	movlw	-8
  5889  014344  006F FF8F FFDF     	movff	plusw1,indf2
  5890                           
  5891                           ;stkvar	_c @ sp[(-4)+-4]
  5892                           ;stkvar	_s @ sp[(-4)+0]
  5893  01434A  0EFC               	movlw	-4
  5894  01434C  006F FF8C  F03F    	movff	plusw1,btemp+10
  5895  014352  0EFD               	movlw	-3
  5896  014354  006F FF8C  F040    	movff	plusw1,btemp+11
  5897  01435A  0E02               	movlw	2
  5898  01435C  243F               	addwf	(btemp+10)^0,w,c
  5899  01435E  6ED9               	movwf	fsr2l,c
  5900  014360  0E00               	movlw	0
  5901  014362  2040               	addwfc	(btemp+11)^0,w,c
  5902  014364  6EDA               	movwf	fsr2h,c
  5903  014366  0EF8               	movlw	-8
  5904  014368  006F FF8F FFDF     	movff	plusw1,indf2
  5905                           
  5906                           ;stkvar	_c @ sp[(-4)+-4]
  5907                           ;stkvar	_n @ sp[(-4)+-6]
  5908                           ;stkvar	_s @ sp[(-4)+0]
  5909  01436E  0EFC               	movlw	-4
  5910  014370  006F FF8C  F03F    	movff	plusw1,btemp+10
  5911  014376  0EFD               	movlw	-3
  5912  014378  006F FF8C  F040    	movff	plusw1,btemp+11
  5913  01437E  0EF6               	movlw	-10
  5914  014380  50E3               	movf	plusw1,w,c
  5915  014382  263F               	addwf	(btemp+10)^0,f,c
  5916  014384  0EF7               	movlw	-9
  5917  014386  50E3               	movf	plusw1,w,c
  5918  014388  2240               	addwfc	(btemp+11)^0,f,c
  5919  01438A  0EFE               	movlw	254
  5920  01438C  243F               	addwf	(btemp+10)^0,w,c
  5921  01438E  6ED9               	movwf	fsr2l,c
  5922  014390  0EFF               	movlw	255
  5923  014392  2040               	addwfc	(btemp+11)^0,w,c
  5924  014394  6EDA               	movwf	fsr2h,c
  5925  014396  0EF8               	movlw	-8
  5926  014398  006F FF8F FFDF     	movff	plusw1,indf2
  5927                           
  5928                           ;stkvar	_c @ sp[(-4)+-4]
  5929                           ;stkvar	_n @ sp[(-4)+-6]
  5930                           ;stkvar	_s @ sp[(-4)+0]
  5931  01439E  0EFC               	movlw	-4
  5932  0143A0  006F FF8C  F03F    	movff	plusw1,btemp+10
  5933  0143A6  0EFD               	movlw	-3
  5934  0143A8  006F FF8C  F040    	movff	plusw1,btemp+11
  5935  0143AE  0EF6               	movlw	-10
  5936  0143B0  50E3               	movf	plusw1,w,c
  5937  0143B2  263F               	addwf	(btemp+10)^0,f,c
  5938  0143B4  0EF7               	movlw	-9
  5939  0143B6  50E3               	movf	plusw1,w,c
  5940  0143B8  2240               	addwfc	(btemp+11)^0,f,c
  5941  0143BA  0EFD               	movlw	253
  5942  0143BC  243F               	addwf	(btemp+10)^0,w,c
  5943  0143BE  6ED9               	movwf	fsr2l,c
  5944  0143C0  0EFF               	movlw	255
  5945  0143C2  2040               	addwfc	(btemp+11)^0,w,c
  5946  0143C4  6EDA               	movwf	fsr2h,c
  5947  0143C6  0EF8               	movlw	-8
  5948  0143C8  006F FF8F FFDF     	movff	plusw1,indf2
  5949                           
  5950                           ;stkvar	_n @ sp[(-4)+-6]
  5951  0143CE  0EF7               	movlw	-9
  5952  0143D0  50E3               	movf	plusw1,w,c
  5953  0143D2  E108               	bnz	l9595
  5954  0143D4  0EF6               	movlw	-10
  5955  0143D6  006F FF8C  F035    	movff	plusw1,btemp
  5956  0143DC  0E07               	movlw	7
  5957  0143DE  5E35               	subwf	btemp^0,f,c
  5958  0143E0  A0D8               	btfss	status,0,c
  5959  0143E2  D0C6               	goto	u9670
  5960  0143E4                     l9595:
  5961                           
  5962                           ;stkvar	_c @ sp[(-4)+-4]
  5963                           ;stkvar	_s @ sp[(-4)+0]
  5964  0143E4  0EFC               	movlw	-4
  5965  0143E6  006F FF8C  F03F    	movff	plusw1,btemp+10
  5966  0143EC  0EFD               	movlw	-3
  5967  0143EE  006F FF8C  F040    	movff	plusw1,btemp+11
  5968  0143F4  0E03               	movlw	3
  5969  0143F6  243F               	addwf	(btemp+10)^0,w,c
  5970  0143F8  6ED9               	movwf	fsr2l,c
  5971  0143FA  0E00               	movlw	0
  5972  0143FC  2040               	addwfc	(btemp+11)^0,w,c
  5973  0143FE  6EDA               	movwf	fsr2h,c
  5974  014400  0EF8               	movlw	-8
  5975  014402  006F FF8F FFDF     	movff	plusw1,indf2
  5976                           
  5977                           ;stkvar	_c @ sp[(-4)+-4]
  5978                           ;stkvar	_n @ sp[(-4)+-6]
  5979                           ;stkvar	_s @ sp[(-4)+0]
  5980  014408  0EFC               	movlw	-4
  5981  01440A  006F FF8C  F03F    	movff	plusw1,btemp+10
  5982  014410  0EFD               	movlw	-3
  5983  014412  006F FF8C  F040    	movff	plusw1,btemp+11
  5984  014418  0EF6               	movlw	-10
  5985  01441A  50E3               	movf	plusw1,w,c
  5986  01441C  263F               	addwf	(btemp+10)^0,f,c
  5987  01441E  0EF7               	movlw	-9
  5988  014420  50E3               	movf	plusw1,w,c
  5989  014422  2240               	addwfc	(btemp+11)^0,f,c
  5990  014424  0EFC               	movlw	252
  5991  014426  243F               	addwf	(btemp+10)^0,w,c
  5992  014428  6ED9               	movwf	fsr2l,c
  5993  01442A  0EFF               	movlw	255
  5994  01442C  2040               	addwfc	(btemp+11)^0,w,c
  5995  01442E  6EDA               	movwf	fsr2h,c
  5996  014430  0EF8               	movlw	-8
  5997  014432  006F FF8F FFDF     	movff	plusw1,indf2
  5998                           
  5999                           ;stkvar	_n @ sp[(-4)+-6]
  6000  014438  0EF7               	movlw	-9
  6001  01443A  50E3               	movf	plusw1,w,c
  6002  01443C  E108               	bnz	l9601
  6003  01443E  0EF6               	movlw	-10
  6004  014440  006F FF8C  F035    	movff	plusw1,btemp
  6005  014446  0E09               	movlw	9
  6006  014448  5E35               	subwf	btemp^0,f,c
  6007  01444A  A0D8               	btfss	status,0,c
  6008  01444C  D091               	goto	u9670
  6009  01444E                     l9601:
  6010                           
  6011                           ;stkvar	_s @ sp[(-4)+0]
  6012  01444E  0EFC               	movlw	-4
  6013  014450  006F FF8C  F03F    	movff	plusw1,btemp+10
  6014  014456  1E3F               	comf	(btemp+10)^0,f,c
  6015  014458  0EFD               	movlw	-3
  6016  01445A  006F FF8C  F040    	movff	plusw1,btemp+11
  6017  014460  1E40               	comf	(btemp+11)^0,f,c
  6018  014462  2A3F               	incf	(btemp+10)^0,f,c
  6019  014464  B4D8               	btfsc	status,2,c
  6020  014466  2A40               	incf	(btemp+11)^0,f,c
  6021  014468  0E03               	movlw	3
  6022  01446A  163F               	andwf	(btemp+10)^0,f,c
  6023  01446C  0E00               	movlw	0
  6024  01446E  1640               	andwf	(btemp+11)^0,f,c
  6025                           
  6026                           ;stkvar	_k @ sp[(-4)+2]
  6027  014470  0EFE               	movlw	-2
  6028  014472  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6029  014478  0EFF               	movlw	-1
  6030  01447A  0060  F103  FFE3   	movff	btemp+11,plusw1
  6031                           
  6032                           ;stkvar	_k @ sp[(-4)+2]
  6033                           ;stkvar	_s @ sp[(-4)+0]
  6034  014480  0EFC               	movlw	-4
  6035  014482  50E3               	movf	plusw1,w,c
  6036  014484  6E35               	movwf	btemp^0,c
  6037  014486  0EFE               	movlw	-2
  6038  014488  50E3               	movf	plusw1,w,c
  6039  01448A  2635               	addwf	btemp^0,f,c
  6040  01448C  0EFC               	movlw	-4
  6041  01448E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6042  014494  0EFD               	movlw	-3
  6043  014496  50E3               	movf	plusw1,w,c
  6044  014498  6E35               	movwf	btemp^0,c
  6045  01449A  0EFF               	movlw	-1
  6046  01449C  50E3               	movf	plusw1,w,c
  6047  01449E  2235               	addwfc	btemp^0,f,c
  6048  0144A0  0EFD               	movlw	-3
  6049  0144A2  0060  F0D7  FFE3   	movff	btemp,plusw1
  6050                           
  6051                           ;stkvar	_k @ sp[(-4)+2]
  6052                           ;stkvar	_n @ sp[(-4)+-6]
  6053  0144A8  0EF6               	movlw	-10
  6054  0144AA  50E3               	movf	plusw1,w,c
  6055  0144AC  6E35               	movwf	btemp^0,c
  6056  0144AE  0EFE               	movlw	-2
  6057  0144B0  50E3               	movf	plusw1,w,c
  6058  0144B2  5E35               	subwf	btemp^0,f,c
  6059  0144B4  0EF6               	movlw	-10
  6060  0144B6  0060  F0D7  FFE3   	movff	btemp,plusw1
  6061  0144BC  0EF7               	movlw	-9
  6062  0144BE  50E3               	movf	plusw1,w,c
  6063  0144C0  6E35               	movwf	btemp^0,c
  6064  0144C2  0EFF               	movlw	-1
  6065  0144C4  50E3               	movf	plusw1,w,c
  6066  0144C6  5A35               	subwfb	btemp^0,f,c
  6067  0144C8  0EF7               	movlw	-9
  6068  0144CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  6069  0144D0  0EFC               	movlw	252
  6070  0144D2  6E3F               	movwf	(btemp+10)^0,c
  6071  0144D4  0EFF               	movlw	255
  6072  0144D6  6E40               	movwf	(btemp+11)^0,c
  6073                           
  6074                           ;stkvar	_n @ sp[(-4)+-6]
  6075  0144D8  0EF6               	movlw	-10
  6076  0144DA  006F FF8C  F035    	movff	plusw1,btemp
  6077  0144E0  503F               	movf	(btemp+10)^0,w,c
  6078  0144E2  1635               	andwf	btemp^0,f,c
  6079  0144E4  0EF6               	movlw	-10
  6080  0144E6  0060  F0D7  FFE3   	movff	btemp,plusw1
  6081  0144EC  0EF7               	movlw	-9
  6082  0144EE  006F FF8C  F035    	movff	plusw1,btemp
  6083  0144F4  5040               	movf	(btemp+11)^0,w,c
  6084  0144F6  1635               	andwf	btemp^0,f,c
  6085  0144F8  0EF7               	movlw	-9
  6086  0144FA  D02E               	goto	L4
  6087  0144FC                     l9609:
  6088                           
  6089                           ;stkvar	_c @ sp[(-4)+-4]
  6090                           ;stkvar	_s @ sp[(-4)+0]
  6091  0144FC  0EFC               	movlw	-4
  6092  0144FE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6093  014504  0EFD               	movlw	-3
  6094  014506  006F FF8F FFDA     	movff	plusw1,fsr2h
  6095  01450C  0EF8               	movlw	-8
  6096  01450E  006F FF8F FFDF     	movff	plusw1,indf2
  6097                           
  6098                           ;stkvar	_n @ sp[(-4)+-6]
  6099  014514  0EF6               	movlw	-10
  6100  014516  006F FF8C  F035    	movff	plusw1,btemp
  6101  01451C  0E01               	movlw	1
  6102  01451E  5E35               	subwf	btemp^0,f,c
  6103  014520  0EF6               	movlw	-10
  6104  014522  0060  F0D7  FFE3   	movff	btemp,plusw1
  6105  014528  0EF7               	movlw	-9
  6106  01452A  006F FF8C  F035    	movff	plusw1,btemp
  6107  014530  0E00               	movlw	0
  6108  014532  5A35               	subwfb	btemp^0,f,c
  6109  014534  0EF7               	movlw	-9
  6110  014536  0060  F0D7  FFE3   	movff	btemp,plusw1
  6111                           
  6112                           ;stkvar	_s @ sp[(-4)+0]
  6113  01453C  0EFC               	movlw	-4
  6114  01453E  50E3               	movf	plusw1,w,c
  6115  014540  0F01               	addlw	1
  6116  014542  6E35               	movwf	btemp^0,c
  6117  014544  0EFC               	movlw	-4
  6118  014546  0060  F0D7  FFE3   	movff	btemp,plusw1
  6119  01454C  6A35               	clrf	btemp^0,c
  6120  01454E  0EFD               	movlw	-3
  6121  014550  50E3               	movf	plusw1,w,c
  6122  014552  2035               	addwfc	btemp^0,w,c
  6123  014554  6E35               	movwf	btemp^0,c
  6124  014556  0EFD               	movlw	-3
  6125  014558                     L4:
  6126  014558  0060  F0D7  FFE3   	movff	btemp,plusw1
  6127                           
  6128                           ;stkvar	_n @ sp[(-4)+-6]
  6129  01455E  0EF6               	movlw	-10
  6130  014560  006F FF8C  F035    	movff	plusw1,btemp
  6131  014566  0EF7               	movlw	-9
  6132  014568  50E3               	movf	plusw1,w,c
  6133  01456A  1035               	iorwf	btemp^0,w,c
  6134  01456C  A4D8               	btfss	status,2,c
  6135  01456E  D7C6               	goto	l9609
  6136  014570                     u9670:
  6137                           
  6138                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6139  014570  0EF6               	movlw	246
  6140  014572  26E1               	addwf	fsr1l,f,c
  6141  014574  0EFF               	movlw	255
  6142  014576  22E2               	addwfc	fsr1h,f,c
  6143  014578  0012               	return		;funcret
  6144  01457A                     __end_of_memset:
  6145                           	opt callstack 0
  6146                           
  6147 ;; *************** function _printf *****************
  6148 ;; Defined at:
  6149 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  fmt             2  [STACK] PTR const unsigned char 
  6152 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  ap              2  [STACK] PTR void [1]
  6155 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6156 ;;  ret             2    0        int 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  2  [STACK] int 
  6159 ;; Registers used:
  6160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6161 ;; Tracked objects:
  6162 ;;		On entry : 3F/3B
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6170 ;;Total ram usage:        0 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:   14
  6173 ;; This function calls:
  6174 ;;		_vfprintf
  6175 ;; This function is called by:
  6176 ;;		_eaDogM_WriteString
  6177 ;;		_send_lcd_cmd_dma
  6178 ;; This function uses a reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text30
  6182  0172BE                     __ptext30:
  6183                           	opt callstack 0
  6184  0172BE                     _printf:
  6185                           	opt callstack 0
  6186                           
  6187                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6188  0172BE  52E6               	movf	postinc1,f,c
  6189  0172C0  52E6               	movf	postinc1,f,c
  6190                           
  6191                           ;stkvar	?_printf @ sp[(-2)+-3]
  6192                           
  6193                           ;incstack = 0
  6194  0172C2  0EFB               	movlw	251
  6195  0172C4  24E1               	addwf	fsr1l,w,c
  6196  0172C6  6E3F               	movwf	(btemp+10)^0,c
  6197  0172C8  0EFF               	movlw	255
  6198  0172CA  20E2               	addwfc	fsr1h,w,c
  6199  0172CC  6E40               	movwf	(btemp+11)^0,c
  6200                           
  6201                           ;stkvar	_ap @ sp[(-2)+0]
  6202  0172CE  0EFF               	movlw	-1
  6203  0172D0  0060  F103  FFE3   	movff	btemp+11,plusw1
  6204  0172D6  0EFE               	movlw	-2
  6205  0172D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6206                           
  6207                           ;stkvar	_ap @ sp[(-2)+0]
  6208  0172DE  0EFE               	movlw	254
  6209  0172E0  24E1               	addwf	fsr1l,w,c
  6210  0172E2  6E35               	movwf	btemp^0,c
  6211  0172E4  0EFF               	movlw	255
  6212  0172E6  20E2               	addwfc	fsr1h,w,c
  6213  0172E8  6E36               	movwf	(btemp+1)^0,c
  6214  0172EA  0060  F0D7  FFE6   	movff	btemp,postinc1
  6215  0172F0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6216                           
  6217                           ;stkvar	_fmt @ sp[(-4)+-3]
  6218  0172F6  0EF9               	movlw	-7
  6219  0172F8  006F FF8F FFE6     	movff	plusw1,postinc1
  6220  0172FE  006F FF8F FFE6     	movff	plusw1,postinc1
  6221  017304  0E00               	movlw	0
  6222  017306  6EE6               	movwf	postinc1,c
  6223  017308  0E00               	movlw	0
  6224  01730A  6EE6               	movwf	postinc1,c
  6225  01730C  EC43  F0B5         	call	_vfprintf	;wreg free
  6226                           
  6227                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6228  017310  52E5               	movf	postdec1,f,c
  6229  017312  52E5               	movf	postdec1,f,c
  6230  017314  52E5               	movf	postdec1,f,c
  6231  017316  50E7               	movf	indf1,w,c
  6232  017318  5EE1               	subwf	fsr1l,f,c
  6233  01731A  0E00               	movlw	0
  6234  01731C  5AE2               	subwfb	fsr1h,f,c
  6235  01731E  0012               	return		;funcret
  6236  017320                     __end_of_printf:
  6237                           	opt callstack 0
  6238                           
  6239 ;; *************** function _vfprintf *****************
  6240 ;; Defined at:
  6241 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6244 ;;		 -> f(6), NULL(0), 
  6245 ;;  fmt             2  [STACK] PTR const unsigned char 
  6246 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6247 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6248 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6249 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6250 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6251 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6252 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6253 ;;  ap              2  [STACK] PTR PTR void 
  6254 ;;		 -> ap(2), ap(2), 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  cfmt            2  [STACK] PTR unsigned char 
  6257 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6258 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6259 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6260 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6261 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6262 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6263 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  2  [STACK] int 
  6266 ;; Registers used:
  6267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/4
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6277 ;;Total ram usage:        0 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:   13
  6280 ;; This function calls:
  6281 ;;		_vfpfcnvrt
  6282 ;; This function is called by:
  6283 ;;		_sprintf
  6284 ;;		_printf
  6285 ;; This function uses a reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text31
  6289  016A86                     __ptext31:
  6290                           	opt callstack 0
  6291  016A86                     _vfprintf:
  6292                           	opt callstack 0
  6293                           
  6294                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6295  016A86  52E6               	movf	postinc1,f,c
  6296  016A88  52E6               	movf	postinc1,f,c
  6297                           
  6298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6299                           ;stkvar	_fmt @ sp[(-2)+-4]
  6300                           
  6301                           ;incstack = 0
  6302  016A8A  0EFA               	movlw	-6
  6303  016A8C  006F FF8C  F03F    	movff	plusw1,btemp+10
  6304  016A92  0EFB               	movlw	-5
  6305  016A94  006F FF8C  F040    	movff	plusw1,btemp+11
  6306                           
  6307                           ;stkvar	_cfmt @ sp[(-2)+0]
  6308  016A9A  0EFF               	movlw	-1
  6309  016A9C  0060  F103  FFE3   	movff	btemp+11,plusw1
  6310  016AA2  0EFE               	movlw	-2
  6311  016AA4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6312                           
  6313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6314  016AAA  6A1C               	clrf	_nout^0,c
  6315  016AAC  6A1D               	clrf	(_nout+1)^0,c
  6316                           
  6317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6318  016AAE  D020               	goto	l9623
  6319  016AB0                     l9621:
  6320                           
  6321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6322                           ;stkvar	_ap @ sp[(-2)+-6]
  6323  016AB0  0EF8               	movlw	-8
  6324  016AB2  006F FF8F FFE6     	movff	plusw1,postinc1
  6325  016AB8  006F FF8F FFE6     	movff	plusw1,postinc1
  6326                           
  6327                           ;stkvar	_cfmt @ sp[(-4)+0]
  6328  016ABE  0EFC               	movlw	252
  6329  016AC0  24E1               	addwf	fsr1l,w,c
  6330  016AC2  6E35               	movwf	btemp^0,c
  6331  016AC4  0EFF               	movlw	255
  6332  016AC6  20E2               	addwfc	fsr1h,w,c
  6333  016AC8  6E36               	movwf	(btemp+1)^0,c
  6334  016ACA  0060  F0D7  FFE6   	movff	btemp,postinc1
  6335  016AD0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6336                           
  6337                           ;stkvar	_fp @ sp[(-6)+-2]
  6338  016AD6  0EF8               	movlw	-8
  6339  016AD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6340  016ADE  006F FF8F FFE6     	movff	plusw1,postinc1
  6341  016AE4  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6342  016AE8  5035               	movf	btemp^0,w,c
  6343  016AEA  261C               	addwf	_nout^0,f,c
  6344  016AEC  5036               	movf	(btemp+1)^0,w,c
  6345  016AEE  221D               	addwfc	(_nout+1)^0,f,c
  6346  016AF0                     l9623:
  6347                           
  6348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6349                           ;stkvar	_cfmt @ sp[(-2)+0]
  6350  016AF0  50E1               	movf	fsr1l,w,c
  6351  016AF2  0FFE               	addlw	-2
  6352  016AF4  6ED9               	movwf	fsr2l,c
  6353  016AF6  50E2               	movf	fsr1h,w,c
  6354  016AF8  6EDA               	movwf	fsr2h,c
  6355  016AFA  0EFF               	movlw	255
  6356  016AFC  22DA               	addwfc	fsr2h,f,c
  6357  016AFE  006F FF7B FFF6     	movff	postinc2,tblptrl
  6358  016B04  006F FF77 FFF7     	movff	postdec2,tblptrh
  6359  016B0A                     	if	0	;tblptru may be non-zero
  6360  016B0A                     	endif
  6361  016B0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6362  016B0A  0E00               	movlw	low (__mediumconst shr (0+16))
  6363  016B0C  6EF8               	movwf	tblptru,c
  6364  016B0E                     	endif
  6365  016B0E  0008               	tblrd		*
  6366  016B10  50F5               	movf	tablat,w,c
  6367  016B12  0900               	iorlw	0
  6368  016B14  A4D8               	btfss	status,2,c
  6369  016B16  D7CC               	goto	l9621
  6370                           
  6371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6372  016B18  0060  F070  F035   	movff	_nout,btemp
  6373  016B1E  0060  F074  F036   	movff	_nout+1,btemp+1
  6374                           
  6375                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  6376  016B24  0EF8               	movlw	248
  6377  016B26  26E1               	addwf	fsr1l,f,c
  6378  016B28  0EFF               	movlw	255
  6379  016B2A  22E2               	addwfc	fsr1h,f,c
  6380  016B2C  0012               	return		;funcret
  6381  016B2E                     __end_of_vfprintf:
  6382                           	opt callstack 0
  6383                           
  6384 ;; *************** function _vfpfcnvrt *****************
  6385 ;; Defined at:
  6386 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6389 ;;		 -> f(6), NULL(0), 
  6390 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6391 ;;		 -> cfmt(2), 
  6392 ;;  ap              2  [STACK] PTR PTR void 
  6393 ;;		 -> ap(2), ap(2), 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;  llu             8  [STACK] unsigned long long 
  6396 ;;  ll              8  [STACK] long long 
  6397 ;;  f               4  [STACK] long long 
  6398 ;;  ct              3  [STACK] unsigned char [3]
  6399 ;;  vp              3    0        PTR void 
  6400 ;;  cp              2  [STACK] PTR unsigned char 
  6401 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  6402 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6403 ;;		 -> STR_3(4), V(189), 
  6404 ;;  i               2    0        int 
  6405 ;;  done            2    0        int 
  6406 ;;  c               1  [STACK] unsigned char 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  2  [STACK] int 
  6409 ;; Registers used:
  6410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/4
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:   12
  6423 ;; This function calls:
  6424 ;;		_atoi
  6425 ;;		_ctoa
  6426 ;;		_dtoa
  6427 ;;		_efgtoa
  6428 ;;		_fputc
  6429 ;;		_isdigit
  6430 ;;		_isupper
  6431 ;;		_stoa
  6432 ;;		_strncmp
  6433 ;;		_tolower
  6434 ;;		_xtoa
  6435 ;; This function is called by:
  6436 ;;		_vfprintf
  6437 ;; This function uses a reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text32
  6441  011244                     __ptext32:
  6442                           	opt callstack 0
  6443  011244                     _vfpfcnvrt:
  6444                           	opt callstack 0
  6445                           
  6446                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6447  011244  0E20               	movlw	32
  6448  011246  26E1               	addwf	fsr1l,f,c
  6449  011248  0E00               	movlw	0
  6450  01124A  22E2               	addwfc	fsr1h,f,c
  6451                           
  6452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6453                           ;stkvar	_fmt @ sp[(-32)+-4]
  6454                           
  6455                           ;incstack = 0
  6456  01124C  0EDC               	movlw	-36
  6457  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6458  011254  0EDD               	movlw	-35
  6459  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  6460  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6461  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  6462  011268                     	if	0	;tblptru may be non-zero
  6463  011268                     	endif
  6464  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6465  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  6466  01126A  6EF8               	movwf	tblptru,c
  6467  01126C                     	endif
  6468  01126C  0008               	tblrd		*
  6469  01126E  50F5               	movf	tablat,w,c
  6470  011270  0A25               	xorlw	37
  6471  011272  A4D8               	btfss	status,2,c
  6472  011274  EF92  F08E         	goto	l9567
  6473                           
  6474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6475                           ;stkvar	_fmt @ sp[(-32)+-4]
  6476  011278  0EDC               	movlw	-36
  6477  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6478  011280  0EDD               	movlw	-35
  6479  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  6480  011288  2ADE               	incf	postinc2,f,c
  6481  01128A  0E00               	movlw	0
  6482  01128C  22DD               	addwfc	postdec2,f,c
  6483                           
  6484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6485  01128E  6A1E               	clrf	_width^0,c
  6486  011290  6A1F               	clrf	(_width+1)^0,c
  6487  011292  6A22               	clrf	_flags^0,c
  6488  011294  6A23               	clrf	(_flags+1)^0,c
  6489                           
  6490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6491  011296  6820               	setf	_prec^0,c
  6492  011298  6821               	setf	(_prec+1)^0,c
  6493                           
  6494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6495                           ;stkvar	_fmt @ sp[(-32)+-4]
  6496  01129A  0EDC               	movlw	-36
  6497  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6498  0112A2  0EDD               	movlw	-35
  6499  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6500  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  6501  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  6502  0112B6                     	if	0	;tblptru may be non-zero
  6503  0112B6                     	endif
  6504  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6505  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  6506  0112B8  6EF8               	movwf	tblptru,c
  6507  0112BA                     	endif
  6508  0112BA  0008               	tblrd		*
  6509  0112BC  50F5               	movf	tablat,w,c
  6510  0112BE  0A2A               	xorlw	42
  6511  0112C0  A4D8               	btfss	status,2,c
  6512  0112C2  D031               	goto	l9431
  6513                           
  6514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6515                           ;stkvar	_fmt @ sp[(-32)+-4]
  6516  0112C4  0EDC               	movlw	-36
  6517  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6518  0112CC  0EDD               	movlw	-35
  6519  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6520  0112D4  2ADE               	incf	postinc2,f,c
  6521  0112D6  0E00               	movlw	0
  6522  0112D8  22DD               	addwfc	postdec2,f,c
  6523                           
  6524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6525                           ;stkvar	_ap @ sp[(-32)+-6]
  6526  0112DA  0EDA               	movlw	-38
  6527  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6528  0112E2  0EDB               	movlw	-37
  6529  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6530  0112EA  0E02               	movlw	2
  6531  0112EC  5EDE               	subwf	postinc2,f,c
  6532  0112EE  0E00               	movlw	0
  6533  0112F0  5ADD               	subwfb	postdec2,f,c
  6534  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  6535  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  6536  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6537  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6538  01130A  006F FF78  F01E    	movff	postinc2,_width
  6539  011310  006F FF74  F01F    	movff	postdec2,_width+1
  6540                           
  6541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6542  011316  AE1F               	btfss	(_width+1)^0,7,c
  6543  011318  D066               	goto	u9430
  6544                           
  6545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6546  01131A  8022               	bsf	_flags^0,0,c
  6547                           
  6548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6549  01131C  6C1E               	negf	_width^0,c
  6550  01131E  1E1F               	comf	(_width+1)^0,f,c
  6551  011320  B0D8               	btfsc	status,0,c
  6552  011322  2A1F               	incf	(_width+1)^0,f,c
  6553  011324  D060               	goto	u9430
  6554  011326                     l9431:
  6555                           
  6556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6557                           ;stkvar	_fmt @ sp[(-32)+-4]
  6558  011326  0EDC               	movlw	-36
  6559  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  6560  01132E  0EDD               	movlw	-35
  6561  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  6562  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  6563  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  6564  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6565  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  6566  01134E  EC5C  F0A5         	call	_atoi	;wreg free
  6567  011352  0060  F0D4  F01E   	movff	btemp,_width
  6568  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  6569                           
  6570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6571  01135E  D00B               	goto	l9435
  6572  011360                     l9433:
  6573                           
  6574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6575                           ;stkvar	_fmt @ sp[(-32)+-4]
  6576  011360  0EDC               	movlw	-36
  6577  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  6578  011368  0EDD               	movlw	-35
  6579  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6580  011370  2ADE               	incf	postinc2,f,c
  6581  011372  0E00               	movlw	0
  6582  011374  22DD               	addwfc	postdec2,f,c
  6583  011376                     l9435:
  6584  011376  0ED0               	movlw	208
  6585  011378  6E3F               	movwf	(btemp+10)^0,c
  6586  01137A  0EFF               	movlw	255
  6587  01137C  6E40               	movwf	(btemp+11)^0,c
  6588                           
  6589                           ;stkvar	_fmt @ sp[(-32)+-4]
  6590  01137E  0EDC               	movlw	-36
  6591  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  6592  011386  0EDD               	movlw	-35
  6593  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  6594  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6595  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  6596  01139A                     	if	0	;tblptru may be non-zero
  6597  01139A                     	endif
  6598  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6599  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  6600  01139C  6EF8               	movwf	tblptru,c
  6601  01139E                     	endif
  6602  01139E  0008               	tblrd		*
  6603  0113A0  50F5               	movf	tablat,w,c
  6604  0113A2  6E3D               	movwf	(btemp+8)^0,c
  6605  0113A4  6A3E               	clrf	(btemp+9)^0,c
  6606  0113A6  503F               	movf	(btemp+10)^0,w,c
  6607  0113A8  263D               	addwf	(btemp+8)^0,f,c
  6608  0113AA  5040               	movf	(btemp+11)^0,w,c
  6609  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  6610  0113AE  503E               	movf	(btemp+9)^0,w,c
  6611  0113B0  E106               	bnz	u9410
  6612  0113B2  0E0A               	movlw	10
  6613  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  6614  0113B6  B0D8               	btfsc	status,0,c
  6615  0113B8  D002               	goto	u9410
  6616  0113BA  0E01               	movlw	1
  6617  0113BC  D001               	goto	u9420
  6618  0113BE                     u9410:
  6619  0113BE  0E00               	movlw	0
  6620  0113C0                     u9420:
  6621  0113C0  6E3F               	movwf	(btemp+10)^0,c
  6622  0113C2  6A40               	clrf	(btemp+11)^0,c
  6623                           
  6624                           ;stkvar	_vfpfcnvrt$4149 @ sp[(-32)+4]
  6625  0113C4  0EE4               	movlw	-28
  6626  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6627  0113CC  0EE5               	movlw	-27
  6628  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  6629                           
  6630                           ;stkvar	_vfpfcnvrt$4149 @ sp[(-32)+4]
  6631  0113D4  0EE4               	movlw	-28
  6632  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  6633  0113DC  0EE5               	movlw	-27
  6634  0113DE  50E3               	movf	plusw1,w,c
  6635  0113E0  1035               	iorwf	btemp^0,w,c
  6636  0113E2  A4D8               	btfss	status,2,c
  6637  0113E4  D7BD               	goto	l9433
  6638  0113E6                     u9430:
  6639                           
  6640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  6641                           ;stkvar	_fmt @ sp[(-32)+-4]
  6642  0113E6  0EDC               	movlw	-36
  6643  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6644  0113EE  0EDD               	movlw	-35
  6645  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6646  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6647  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6648  011402                     	if	0	;tblptru may be non-zero
  6649  011402                     	endif
  6650  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6651  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  6652  011404  6EF8               	movwf	tblptru,c
  6653  011406                     	endif
  6654  011406  0008               	tblrd		*
  6655  011408  50F5               	movf	tablat,w,c
  6656  01140A  0A2E               	xorlw	46
  6657  01140C  A4D8               	btfss	status,2,c
  6658  01140E  D0AC               	goto	u9480
  6659                           
  6660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  6661  011410  6A20               	clrf	_prec^0,c
  6662  011412  6A21               	clrf	(_prec+1)^0,c
  6663                           
  6664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  6665                           ;stkvar	_fmt @ sp[(-32)+-4]
  6666  011414  0EDC               	movlw	-36
  6667  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  6668  01141C  0EDD               	movlw	-35
  6669  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6670  011424  2ADE               	incf	postinc2,f,c
  6671  011426  0E00               	movlw	0
  6672  011428  22DD               	addwfc	postdec2,f,c
  6673                           
  6674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  6675                           ;stkvar	_fmt @ sp[(-32)+-4]
  6676  01142A  0EDC               	movlw	-36
  6677  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6678  011432  0EDD               	movlw	-35
  6679  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  6680  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  6681  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  6682  011446                     	if	0	;tblptru may be non-zero
  6683  011446                     	endif
  6684  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6685  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  6686  011448  6EF8               	movwf	tblptru,c
  6687  01144A                     	endif
  6688  01144A  0008               	tblrd		*
  6689  01144C  50F5               	movf	tablat,w,c
  6690  01144E  0A2A               	xorlw	42
  6691  011450  A4D8               	btfss	status,2,c
  6692  011452  D02A               	goto	l9453
  6693                           
  6694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  6695                           ;stkvar	_fmt @ sp[(-32)+-4]
  6696  011454  0EDC               	movlw	-36
  6697  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  6698  01145C  0EDD               	movlw	-35
  6699  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6700  011464  2ADE               	incf	postinc2,f,c
  6701  011466  0E00               	movlw	0
  6702  011468  22DD               	addwfc	postdec2,f,c
  6703                           
  6704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  6705                           ;stkvar	_ap @ sp[(-32)+-6]
  6706  01146A  0EDA               	movlw	-38
  6707  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6708  011472  0EDB               	movlw	-37
  6709  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  6710  01147A  0E02               	movlw	2
  6711  01147C  5EDE               	subwf	postinc2,f,c
  6712  01147E  0E00               	movlw	0
  6713  011480  5ADD               	subwfb	postdec2,f,c
  6714  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  6715  011488  006F FF74  F040    	movff	postdec2,btemp+11
  6716  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6717  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6718  01149A  006F FF78  F020    	movff	postinc2,_prec
  6719  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  6720                           
  6721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  6722  0114A6  D060               	goto	u9480
  6723  0114A8                     l9453:
  6724                           
  6725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  6726                           ;stkvar	_fmt @ sp[(-32)+-4]
  6727  0114A8  0EDC               	movlw	-36
  6728  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6729  0114B0  0EDD               	movlw	-35
  6730  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6731  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  6732  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  6733  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6734  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  6735  0114D0  EC5C  F0A5         	call	_atoi	;wreg free
  6736  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  6737  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  6738                           
  6739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6740  0114E0  D00B               	goto	l9457
  6741  0114E2                     l9455:
  6742                           
  6743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  6744                           ;stkvar	_fmt @ sp[(-32)+-4]
  6745  0114E2  0EDC               	movlw	-36
  6746  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6747  0114EA  0EDD               	movlw	-35
  6748  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6749  0114F2  2ADE               	incf	postinc2,f,c
  6750  0114F4  0E00               	movlw	0
  6751  0114F6  22DD               	addwfc	postdec2,f,c
  6752  0114F8                     l9457:
  6753  0114F8  0ED0               	movlw	208
  6754  0114FA  6E3F               	movwf	(btemp+10)^0,c
  6755  0114FC  0EFF               	movlw	255
  6756  0114FE  6E40               	movwf	(btemp+11)^0,c
  6757                           
  6758                           ;stkvar	_fmt @ sp[(-32)+-4]
  6759  011500  0EDC               	movlw	-36
  6760  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  6761  011508  0EDD               	movlw	-35
  6762  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6763  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  6764  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  6765  01151C                     	if	0	;tblptru may be non-zero
  6766  01151C                     	endif
  6767  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6768  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  6769  01151E  6EF8               	movwf	tblptru,c
  6770  011520                     	endif
  6771  011520  0008               	tblrd		*
  6772  011522  50F5               	movf	tablat,w,c
  6773  011524  6E3D               	movwf	(btemp+8)^0,c
  6774  011526  6A3E               	clrf	(btemp+9)^0,c
  6775  011528  503F               	movf	(btemp+10)^0,w,c
  6776  01152A  263D               	addwf	(btemp+8)^0,f,c
  6777  01152C  5040               	movf	(btemp+11)^0,w,c
  6778  01152E  223E               	addwfc	(btemp+9)^0,f,c
  6779  011530  503E               	movf	(btemp+9)^0,w,c
  6780  011532  E106               	bnz	u9460
  6781  011534  0E0A               	movlw	10
  6782  011536  5C3D               	subwf	(btemp+8)^0,w,c
  6783  011538  B0D8               	btfsc	status,0,c
  6784  01153A  D002               	goto	u9460
  6785  01153C  0E01               	movlw	1
  6786  01153E  D001               	goto	u9470
  6787  011540                     u9460:
  6788  011540  0E00               	movlw	0
  6789  011542                     u9470:
  6790  011542  6E3F               	movwf	(btemp+10)^0,c
  6791  011544  6A40               	clrf	(btemp+11)^0,c
  6792                           
  6793                           ;stkvar	_vfpfcnvrt$4150 @ sp[(-32)+0]
  6794  011546  0EE0               	movlw	-32
  6795  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6796  01154E  0EE1               	movlw	-31
  6797  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  6798                           
  6799                           ;stkvar	_vfpfcnvrt$4150 @ sp[(-32)+0]
  6800  011556  0EE0               	movlw	-32
  6801  011558  006F FF8C  F035    	movff	plusw1,btemp
  6802  01155E  0EE1               	movlw	-31
  6803  011560  50E3               	movf	plusw1,w,c
  6804  011562  1035               	iorwf	btemp^0,w,c
  6805  011564  A4D8               	btfss	status,2,c
  6806  011566  D7BD               	goto	l9455
  6807  011568                     u9480:
  6808                           
  6809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  6810                           ;stkvar	_fmt @ sp[(-32)+-4]
  6811  011568  0EDC               	movlw	-36
  6812  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6813  011570  0EDD               	movlw	-35
  6814  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  6815  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  6816  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6817  011584                     	if	0	;tblptru may be non-zero
  6818  011584                     	endif
  6819  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6820  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  6821  011586  6EF8               	movwf	tblptru,c
  6822  011588                     	endif
  6823  011588  0008               	tblrd		*
  6824  01158A  50F5               	movf	tablat,w,c
  6825  01158C  6EE6               	movwf	postinc1,c
  6826  01158E  0E00               	movlw	0
  6827  011590  6EE6               	movwf	postinc1,c
  6828  011592  ECE9  F0B7         	call	_tolower	;wreg free
  6829                           
  6830                           ;stkvar	_ct @ sp[(-32)+26]
  6831  011596  0EFA               	movlw	-6
  6832  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  6833                           
  6834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  6835                           ;stkvar	_ct @ sp[(-32)+26]
  6836  01159E  0EFA               	movlw	-6
  6837  0115A0  50E3               	movf	plusw1,w,c
  6838  0115A2  B4D8               	btfsc	status,2,c
  6839  0115A4  D05B               	goto	l9473
  6840                           
  6841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  6842                           ;stkvar	_ct @ sp[(-32)+26]
  6843  0115A6  0EFB               	movlw	251
  6844  0115A8  24E1               	addwf	fsr1l,w,c
  6845  0115AA  6ED9               	movwf	fsr2l,c
  6846  0115AC  0EFF               	movlw	255
  6847  0115AE  20E2               	addwfc	fsr1h,w,c
  6848  0115B0  6EDA               	movwf	fsr2h,c
  6849                           
  6850                           ;stkvar	_fmt @ sp[(-32)+-4]
  6851  0115B2  0EDC               	movlw	-36
  6852  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  6853  0115BA  0EDD               	movlw	-35
  6854  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  6855  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  6856  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  6857  0115CE  0E01               	movlw	1
  6858  0115D0  263F               	addwf	(btemp+10)^0,f,c
  6859  0115D2  0E00               	movlw	0
  6860  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  6861  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6862  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6863  0115E2                     	if	0	;tblptru may be non-zero
  6864  0115E2                     	endif
  6865  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6866  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  6867  0115E4  6EF8               	movwf	tblptru,c
  6868  0115E6                     	endif
  6869  0115E6  0008               	tblrd		*
  6870  0115E8  50F5               	movf	tablat,w,c
  6871  0115EA  6EE6               	movwf	postinc1,c
  6872  0115EC  0E00               	movlw	0
  6873  0115EE  6EE6               	movwf	postinc1,c
  6874  0115F0  ECE9  F0B7         	call	_tolower	;wreg free
  6875  0115F4  5035               	movf	btemp^0,w,c
  6876  0115F6  6EDF               	movwf	indf2,c
  6877                           
  6878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  6879                           ;stkvar	_ct @ sp[(-32)+26]
  6880  0115F8  0EFB               	movlw	251
  6881  0115FA  24E1               	addwf	fsr1l,w,c
  6882  0115FC  6ED9               	movwf	fsr2l,c
  6883  0115FE  0EFF               	movlw	255
  6884  011600  20E2               	addwfc	fsr1h,w,c
  6885  011602  6EDA               	movwf	fsr2h,c
  6886  011604  50DF               	movf	indf2,w,c
  6887  011606  B4D8               	btfsc	status,2,c
  6888  011608  D029               	goto	l9473
  6889                           
  6890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  6891                           ;stkvar	_ct @ sp[(-32)+26]
  6892  01160A  0EFC               	movlw	252
  6893  01160C  24E1               	addwf	fsr1l,w,c
  6894  01160E  6ED9               	movwf	fsr2l,c
  6895  011610  0EFF               	movlw	255
  6896  011612  20E2               	addwfc	fsr1h,w,c
  6897  011614  6EDA               	movwf	fsr2h,c
  6898                           
  6899                           ;stkvar	_fmt @ sp[(-32)+-4]
  6900  011616  0EDC               	movlw	-36
  6901  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  6902  01161E  0EDD               	movlw	-35
  6903  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  6904  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  6905  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  6906  011632  0E02               	movlw	2
  6907  011634  263F               	addwf	(btemp+10)^0,f,c
  6908  011636  0E00               	movlw	0
  6909  011638  2240               	addwfc	(btemp+11)^0,f,c
  6910  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6911  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6912  011646                     	if	0	;tblptru may be non-zero
  6913  011646                     	endif
  6914  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6915  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  6916  011648  6EF8               	movwf	tblptru,c
  6917  01164A                     	endif
  6918  01164A  0008               	tblrd		*
  6919  01164C  50F5               	movf	tablat,w,c
  6920  01164E  6EE6               	movwf	postinc1,c
  6921  011650  0E00               	movlw	0
  6922  011652  6EE6               	movwf	postinc1,c
  6923  011654  ECE9  F0B7         	call	_tolower	;wreg free
  6924  011658  5035               	movf	btemp^0,w,c
  6925  01165A  6EDF               	movwf	indf2,c
  6926  01165C                     l9473:
  6927                           
  6928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6929                           ;stkvar	_fmt @ sp[(-32)+-4]
  6930  01165C  0EDC               	movlw	-36
  6931  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6932  011664  0EDD               	movlw	-35
  6933  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  6934  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6935  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  6936  011678                     	if	0	;tblptru may be non-zero
  6937  011678                     	endif
  6938  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6939  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  6940  01167A  6EF8               	movwf	tblptru,c
  6941  01167C                     	endif
  6942  01167C  0008               	tblrd		*
  6943  01167E  50F5               	movf	tablat,w,c
  6944  011680  0A63               	xorlw	99
  6945  011682  A4D8               	btfss	status,2,c
  6946  011684  D036               	goto	l9483
  6947                           
  6948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6949                           ;stkvar	_fmt @ sp[(-32)+-4]
  6950  011686  0EDC               	movlw	-36
  6951  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  6952  01168E  0EDD               	movlw	-35
  6953  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  6954  011696  2ADE               	incf	postinc2,f,c
  6955  011698  0E00               	movlw	0
  6956  01169A  22DD               	addwfc	postdec2,f,c
  6957                           
  6958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6959                           ;stkvar	_ap @ sp[(-32)+-6]
  6960  01169C  0EDA               	movlw	-38
  6961  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6962  0116A4  0EDB               	movlw	-37
  6963  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6964  0116AC  0E02               	movlw	2
  6965  0116AE  5EDE               	subwf	postinc2,f,c
  6966  0116B0  0E00               	movlw	0
  6967  0116B2  5ADD               	subwfb	postdec2,f,c
  6968  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  6969  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  6970  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6971  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6972  0116CC  50DF               	movf	indf2,w,c
  6973  0116CE  6E40               	movwf	(btemp+11)^0,c
  6974                           
  6975                           ;stkvar	_c @ sp[(-32)+31]
  6976  0116D0  0EFF               	movlw	-1
  6977  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6978                           
  6979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6980                           ;stkvar	_c @ sp[(-32)+31]
  6981  0116D8  0EFF               	movlw	-1
  6982  0116DA  50E3               	movf	plusw1,w,c
  6983  0116DC  6EE6               	movwf	postinc1,c
  6984                           
  6985                           ;stkvar	_fp @ sp[(-33)+-2]
  6986  0116DE  0EDD               	movlw	-35
  6987  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  6988  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  6989  0116EC  EC63  F0B7         	call	_ctoa	;wreg free
  6990  0116F0  D343               	goto	l1938
  6991  0116F2                     l9483:
  6992                           
  6993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6994                           ;stkvar	_fmt @ sp[(-32)+-4]
  6995  0116F2  0EDC               	movlw	-36
  6996  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6997  0116FA  0EDD               	movlw	-35
  6998  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6999  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7000  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7001  01170E                     	if	0	;tblptru may be non-zero
  7002  01170E                     	endif
  7003  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7004  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7005  011710  6EF8               	movwf	tblptru,c
  7006  011712                     	endif
  7007  011712  0008               	tblrd		*
  7008  011714  50F5               	movf	tablat,w,c
  7009  011716  0A64               	xorlw	100
  7010  011718  B4D8               	btfsc	status,2,c
  7011  01171A  D015               	goto	u9530
  7012                           
  7013                           ;stkvar	_fmt @ sp[(-32)+-4]
  7014  01171C  0EDC               	movlw	-36
  7015  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7016  011724  0EDD               	movlw	-35
  7017  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7018  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7019  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7020  011738                     	if	0	;tblptru may be non-zero
  7021  011738                     	endif
  7022  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7023  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7024  01173A  6EF8               	movwf	tblptru,c
  7025  01173C                     	endif
  7026  01173C  0008               	tblrd		*
  7027  01173E  50F5               	movf	tablat,w,c
  7028  011740  0A69               	xorlw	105
  7029  011742  A4D8               	btfss	status,2,c
  7030  011744  D075               	goto	l9495
  7031  011746                     u9530:
  7032                           
  7033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7034                           ;stkvar	_fmt @ sp[(-32)+-4]
  7035  011746  0EDC               	movlw	-36
  7036  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7037  01174E  0EDD               	movlw	-35
  7038  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7039  011756  2ADE               	incf	postinc2,f,c
  7040  011758  0E00               	movlw	0
  7041  01175A  22DD               	addwfc	postdec2,f,c
  7042                           
  7043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7044                           ;stkvar	_ap @ sp[(-32)+-6]
  7045  01175C  0EDA               	movlw	-38
  7046  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7047  011764  0EDB               	movlw	-37
  7048  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7049  01176C  0E02               	movlw	2
  7050  01176E  5EDE               	subwf	postinc2,f,c
  7051  011770  0E00               	movlw	0
  7052  011772  5ADD               	subwfb	postdec2,f,c
  7053  011774  006F FF78  F03F    	movff	postinc2,btemp+10
  7054  01177A  006F FF74  F040    	movff	postdec2,btemp+11
  7055  011780  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7056  011786  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7057  01178C  006F FF78  F03F    	movff	postinc2,btemp+10
  7058  011792  006F FF74  F040    	movff	postdec2,btemp+11
  7059                           
  7060                           ;stkvar	_ll @ sp[(-32)+14]
  7061  011798  0EEE               	movlw	-18
  7062  01179A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7063  0117A0  0EEF               	movlw	-17
  7064  0117A2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7065  0117A8  6A35               	clrf	btemp^0,c
  7066  0117AA  BEE3               	btfsc	plusw1,7,c
  7067  0117AC  6835               	setf	btemp^0,c
  7068  0117AE  0EF0               	movlw	-16
  7069  0117B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7070  0117B6  0EF1               	movlw	-15
  7071  0117B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7072  0117BE  0EF2               	movlw	-14
  7073  0117C0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7074  0117C6  0EF3               	movlw	-13
  7075  0117C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7076  0117CE  0EF4               	movlw	-12
  7077  0117D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7078  0117D6  0EF5               	movlw	-11
  7079  0117D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7080                           
  7081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7082                           ;stkvar	_ll @ sp[(-32)+14]
  7083  0117DE  50E1               	movf	fsr1l,w,c
  7084  0117E0  0FEE               	addlw	-18
  7085  0117E2  6ED9               	movwf	fsr2l,c
  7086  0117E4  50E2               	movf	fsr1h,w,c
  7087  0117E6  6EDA               	movwf	fsr2h,c
  7088  0117E8  0EFF               	movlw	255
  7089  0117EA  22DA               	addwfc	fsr2h,f,c
  7090  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7091  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7092  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7093  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7094  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7095  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7096  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7097  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7098                           
  7099                           ;stkvar	_fp @ sp[(-40)+-2]
  7100  01181C  0ED6               	movlw	-42
  7101  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7102  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7103  01182A  EC71  F099         	call	_dtoa	;wreg free
  7104  01182E  D2A4               	goto	l1938
  7105  011830                     l9495:
  7106                           
  7107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7108                           ;stkvar	_ct @ sp[(-32)+26]
  7109  011830  0EFA               	movlw	-6
  7110  011832  006F FF8C  F035    	movff	plusw1,btemp
  7111  011838  0E66               	movlw	102
  7112  01183A  1835               	xorwf	btemp^0,w,c
  7113  01183C  A4D8               	btfss	status,2,c
  7114  01183E  D06E               	goto	l9507
  7115                           
  7116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7117                           ;stkvar	_fmt @ sp[(-32)+-4]
  7118  011840  0EDC               	movlw	-36
  7119  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7120  011848  0EDD               	movlw	-35
  7121  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7122  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7123  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7124  01185C                     	if	0	;tblptru may be non-zero
  7125  01185C                     	endif
  7126  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7127  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7128  01185E  6EF8               	movwf	tblptru,c
  7129  011860                     	endif
  7130                           
  7131                           ;stkvar	_c @ sp[(-32)+31]
  7132  011860  0008               	tblrd		*
  7133  011862  0EFF               	movlw	-1
  7134  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7135                           
  7136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7137                           ;stkvar	_fmt @ sp[(-32)+-4]
  7138  01186A  0EDC               	movlw	-36
  7139  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7140  011872  0EDD               	movlw	-35
  7141  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7142  01187A  2ADE               	incf	postinc2,f,c
  7143  01187C  0E00               	movlw	0
  7144  01187E  22DD               	addwfc	postdec2,f,c
  7145                           
  7146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7147                           ;stkvar	_ap @ sp[(-32)+-6]
  7148  011880  0EDA               	movlw	-38
  7149  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7150  011888  0EDB               	movlw	-37
  7151  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7152  011890  0E04               	movlw	4
  7153  011892  5EDE               	subwf	postinc2,f,c
  7154  011894  0E00               	movlw	0
  7155  011896  5ADD               	subwfb	postdec2,f,c
  7156  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7157  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7158  0118A4  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7159  0118AA  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7160  0118B0  006F FF78  F03D    	movff	postinc2,btemp+8
  7161  0118B6  006F FF78  F03E    	movff	postinc2,btemp+9
  7162  0118BC  006F FF78  F03F    	movff	postinc2,btemp+10
  7163  0118C2  006F FF78  F040    	movff	postinc2,btemp+11
  7164                           
  7165                           ;stkvar	_f @ sp[(-32)+22]
  7166  0118C8  0EF6               	movlw	-10
  7167  0118CA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7168  0118D0  0EF7               	movlw	-9
  7169  0118D2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7170  0118D8  0EF8               	movlw	-8
  7171  0118DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7172  0118E0  0EF9               	movlw	-7
  7173  0118E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7174  0118E8                     l9503:
  7175                           
  7176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7177                           ;stkvar	_c @ sp[(-32)+31]
  7178  0118E8  0EFF               	movlw	-1
  7179  0118EA  50E3               	movf	plusw1,w,c
  7180  0118EC  6EE6               	movwf	postinc1,c
  7181                           
  7182                           ;stkvar	_f @ sp[(-33)+22]
  7183  0118EE  0EF5               	movlw	-11
  7184  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7185  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7186  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7187  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7188                           
  7189                           ;stkvar	_fp @ sp[(-37)+-2]
  7190  011908  0ED9               	movlw	-39
  7191  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7192  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7193  011916  EC00  F080         	call	_efgtoa	;wreg free
  7194  01191A  D22E               	goto	l1938
  7195  01191C                     l9507:
  7196                           
  7197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7198  01191C  0E02               	movlw	2
  7199  01191E  6EE6               	movwf	postinc1,c
  7200  011920  0E00               	movlw	0
  7201  011922  6EE6               	movwf	postinc1,c
  7202  011924  0EF6               	movlw	low STR_40
  7203  011926  6EE6               	movwf	postinc1,c
  7204  011928  0EFF               	movlw	high STR_40
  7205  01192A  6EE6               	movwf	postinc1,c
  7206                           
  7207                           ;stkvar	_ct @ sp[(-36)+26]
  7208  01192C  0EF6               	movlw	246
  7209  01192E  24E1               	addwf	fsr1l,w,c
  7210  011930  6E35               	movwf	btemp^0,c
  7211  011932  0EFF               	movlw	255
  7212  011934  20E2               	addwfc	fsr1h,w,c
  7213  011936  6E36               	movwf	(btemp+1)^0,c
  7214  011938  0060  F0D7  FFE6   	movff	btemp,postinc1
  7215  01193E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7216  011944  ECE0  F0AB         	call	_strncmp	;wreg free
  7217  011948  5035               	movf	btemp^0,w,c
  7218  01194A  1036               	iorwf	(btemp+1)^0,w,c
  7219  01194C  A4D8               	btfss	status,2,c
  7220  01194E  D096               	goto	l9527
  7221                           
  7222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7223                           ;stkvar	_fmt @ sp[(-32)+-4]
  7224  011950  0EDC               	movlw	-36
  7225  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  7226  011958  0EDD               	movlw	-35
  7227  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7228  011960  006F FF78  F03F    	movff	postinc2,btemp+10
  7229  011966  006F FF74  F040    	movff	postdec2,btemp+11
  7230  01196C  0E01               	movlw	1
  7231  01196E  263F               	addwf	(btemp+10)^0,f,c
  7232  011970  0E00               	movlw	0
  7233  011972  2240               	addwfc	(btemp+11)^0,f,c
  7234  011974  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7235  01197A  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7236  011980                     	if	0	;tblptru may be non-zero
  7237  011980                     	endif
  7238  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7239  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  7240  011982  6EF8               	movwf	tblptru,c
  7241  011984                     	endif
  7242                           
  7243                           ;stkvar	_c @ sp[(-32)+31]
  7244  011984  0008               	tblrd		*
  7245  011986  0EFF               	movlw	-1
  7246  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  7247  01198E  0EBF               	movlw	191
  7248  011990  6E3F               	movwf	(btemp+10)^0,c
  7249  011992  0EFF               	movlw	255
  7250  011994  6E40               	movwf	(btemp+11)^0,c
  7251                           
  7252                           ;stkvar	_fmt @ sp[(-32)+-4]
  7253  011996  0EDC               	movlw	-36
  7254  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  7255  01199E  0EDD               	movlw	-35
  7256  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7257  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7258  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7259  0119B2                     	if	0	;tblptru may be non-zero
  7260  0119B2                     	endif
  7261  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7262  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7263  0119B4  6EF8               	movwf	tblptru,c
  7264  0119B6                     	endif
  7265  0119B6  0008               	tblrd		*
  7266  0119B8  50F5               	movf	tablat,w,c
  7267  0119BA  6E3D               	movwf	(btemp+8)^0,c
  7268  0119BC  6A3E               	clrf	(btemp+9)^0,c
  7269  0119BE  503F               	movf	(btemp+10)^0,w,c
  7270  0119C0  263D               	addwf	(btemp+8)^0,f,c
  7271  0119C2  5040               	movf	(btemp+11)^0,w,c
  7272  0119C4  223E               	addwfc	(btemp+9)^0,f,c
  7273  0119C6  503E               	movf	(btemp+9)^0,w,c
  7274  0119C8  E106               	bnz	u9560
  7275  0119CA  0E1A               	movlw	26
  7276  0119CC  5C3D               	subwf	(btemp+8)^0,w,c
  7277  0119CE  B0D8               	btfsc	status,0,c
  7278  0119D0  D002               	goto	u9560
  7279  0119D2  0E01               	movlw	1
  7280  0119D4  D001               	goto	u9570
  7281  0119D6                     u9560:
  7282  0119D6  0E00               	movlw	0
  7283  0119D8                     u9570:
  7284  0119D8  6E3F               	movwf	(btemp+10)^0,c
  7285  0119DA  6A40               	clrf	(btemp+11)^0,c
  7286                           
  7287                           ;stkvar	_vfpfcnvrt$4156 @ sp[(-32)+2]
  7288  0119DC  0EE2               	movlw	-30
  7289  0119DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7290  0119E4  0EE3               	movlw	-29
  7291  0119E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  7292                           
  7293                           ;stkvar	_vfpfcnvrt$4156 @ sp[(-32)+2]
  7294  0119EC  0EE2               	movlw	-30
  7295  0119EE  006F FF8C  F035    	movff	plusw1,btemp
  7296  0119F4  0EE3               	movlw	-29
  7297  0119F6  50E3               	movf	plusw1,w,c
  7298  0119F8  1035               	iorwf	btemp^0,w,c
  7299                           
  7300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7301                           ;stkvar	_ap @ sp[(-32)+-6]
  7302                           
  7303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7304                           
  7305                           ;stkvar	_f @ sp[(-32)+22]
  7306                           
  7307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7308                           ;stkvar	_ap @ sp[(-32)+-6]
  7309  0119FA  0EDA               	movlw	-38
  7310  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7311  011A02  0EDB               	movlw	-37
  7312  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  7313  011A0A  0E04               	movlw	4
  7314  011A0C  5EDE               	subwf	postinc2,f,c
  7315  011A0E  0E00               	movlw	0
  7316  011A10  5ADD               	subwfb	postdec2,f,c
  7317  011A12  006F FF78  F03F    	movff	postinc2,btemp+10
  7318  011A18  006F FF74  F040    	movff	postdec2,btemp+11
  7319  011A1E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7320  011A24  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7321  011A2A  006F FF78  F03D    	movff	postinc2,btemp+8
  7322  011A30  006F FF78  F03E    	movff	postinc2,btemp+9
  7323  011A36  006F FF78  F03F    	movff	postinc2,btemp+10
  7324  011A3C  006F FF78  F040    	movff	postinc2,btemp+11
  7325                           
  7326                           ;stkvar	_f @ sp[(-32)+22]
  7327  011A42  0EF6               	movlw	-10
  7328  011A44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7329  011A4A  0EF7               	movlw	-9
  7330  011A4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7331  011A52  0EF8               	movlw	-8
  7332  011A54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7333  011A5A  0EF9               	movlw	-7
  7334  011A5C  0060  F103  FFE3   	movff	btemp+11,plusw1
  7335                           
  7336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7337                           ;stkvar	_fmt @ sp[(-32)+-4]
  7338  011A62  0EDC               	movlw	-36
  7339  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  7340  011A6A  0EDD               	movlw	-35
  7341  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7342  011A72  0E02               	movlw	2
  7343  011A74  26DE               	addwf	postinc2,f,c
  7344  011A76  0E00               	movlw	0
  7345  011A78  22DD               	addwfc	postdec2,f,c
  7346  011A7A  D736               	goto	l9503
  7347  011A7C                     l9527:
  7348                           
  7349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7350                           ;stkvar	_fmt @ sp[(-32)+-4]
  7351  011A7C  0EDC               	movlw	-36
  7352  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7353  011A84  0EDD               	movlw	-35
  7354  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  7355  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7356  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  7357  011A98                     	if	0	;tblptru may be non-zero
  7358  011A98                     	endif
  7359  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7360  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  7361  011A9A  6EF8               	movwf	tblptru,c
  7362  011A9C                     	endif
  7363  011A9C  0008               	tblrd		*
  7364  011A9E  50F5               	movf	tablat,w,c
  7365  011AA0  0A73               	xorlw	115
  7366  011AA2  A4D8               	btfss	status,2,c
  7367  011AA4  D042               	goto	l9537
  7368                           
  7369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7370                           ;stkvar	_fmt @ sp[(-32)+-4]
  7371  011AA6  0EDC               	movlw	-36
  7372  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7373  011AAE  0EDD               	movlw	-35
  7374  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7375  011AB6  2ADE               	incf	postinc2,f,c
  7376  011AB8  0E00               	movlw	0
  7377  011ABA  22DD               	addwfc	postdec2,f,c
  7378                           
  7379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7380                           ;stkvar	_ap @ sp[(-32)+-6]
  7381  011ABC  0EDA               	movlw	-38
  7382  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7383  011AC4  0EDB               	movlw	-37
  7384  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7385  011ACC  0E02               	movlw	2
  7386  011ACE  5EDE               	subwf	postinc2,f,c
  7387  011AD0  0E00               	movlw	0
  7388  011AD2  5ADD               	subwfb	postdec2,f,c
  7389  011AD4  006F FF78  F03F    	movff	postinc2,btemp+10
  7390  011ADA  006F FF74  F040    	movff	postdec2,btemp+11
  7391  011AE0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7392  011AE6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7393  011AEC  006F FF78  F03F    	movff	postinc2,btemp+10
  7394  011AF2  006F FF74  F040    	movff	postdec2,btemp+11
  7395                           
  7396                           ;stkvar	_cp @ sp[(-32)+29]
  7397  011AF8  0EFE               	movlw	-2
  7398  011AFA  0060  F103  FFE3   	movff	btemp+11,plusw1
  7399  011B00  0EFD               	movlw	-3
  7400  011B02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7401                           
  7402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7403                           ;stkvar	_cp @ sp[(-32)+29]
  7404  011B08  0EFD               	movlw	-3
  7405  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  7406  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  7407                           
  7408                           ;stkvar	_fp @ sp[(-34)+-2]
  7409  011B16  0EDC               	movlw	-36
  7410  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  7411  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  7412  011B24  ECBD  F0A2         	call	_stoa	;wreg free
  7413  011B28  D127               	goto	l1938
  7414  011B2A                     l9537:
  7415                           
  7416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7417                           ;stkvar	_fmt @ sp[(-32)+-4]
  7418  011B2A  0EDC               	movlw	-36
  7419  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7420  011B32  0EDD               	movlw	-35
  7421  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  7422  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7423  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  7424  011B46                     	if	0	;tblptru may be non-zero
  7425  011B46                     	endif
  7426  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7427  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  7428  011B48  6EF8               	movwf	tblptru,c
  7429  011B4A                     	endif
  7430  011B4A  0008               	tblrd		*
  7431  011B4C  50F5               	movf	tablat,w,c
  7432  011B4E  0A78               	xorlw	120
  7433  011B50  B4D8               	btfsc	status,2,c
  7434  011B52  D015               	goto	u9610
  7435                           
  7436                           ;stkvar	_fmt @ sp[(-32)+-4]
  7437  011B54  0EDC               	movlw	-36
  7438  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  7439  011B5C  0EDD               	movlw	-35
  7440  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7441  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  7442  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7443  011B70                     	if	0	;tblptru may be non-zero
  7444  011B70                     	endif
  7445  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7446  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  7447  011B72  6EF8               	movwf	tblptru,c
  7448  011B74                     	endif
  7449  011B74  0008               	tblrd		*
  7450  011B76  50F5               	movf	tablat,w,c
  7451  011B78  0A58               	xorlw	88
  7452  011B7A  A4D8               	btfss	status,2,c
  7453  011B7C  D094               	goto	l9551
  7454  011B7E                     u9610:
  7455                           
  7456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  7457                           ;stkvar	_fmt @ sp[(-32)+-4]
  7458  011B7E  0EDC               	movlw	-36
  7459  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  7460  011B86  0EDD               	movlw	-35
  7461  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  7462  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7463  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  7464  011B9A                     	if	0	;tblptru may be non-zero
  7465  011B9A                     	endif
  7466  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7467  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  7468  011B9C  6EF8               	movwf	tblptru,c
  7469  011B9E                     	endif
  7470                           
  7471                           ;stkvar	_c @ sp[(-32)+31]
  7472  011B9E  0008               	tblrd		*
  7473  011BA0  0EFF               	movlw	-1
  7474  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  7475                           
  7476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  7477                           ;stkvar	_fmt @ sp[(-32)+-4]
  7478  011BA8  0EDC               	movlw	-36
  7479  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7480  011BB0  0EDD               	movlw	-35
  7481  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7482  011BB8  2ADE               	incf	postinc2,f,c
  7483  011BBA  0E00               	movlw	0
  7484  011BBC  22DD               	addwfc	postdec2,f,c
  7485                           
  7486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7487                           ;stkvar	_ap @ sp[(-32)+-6]
  7488  011BBE  0EDA               	movlw	-38
  7489  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7490  011BC6  0EDB               	movlw	-37
  7491  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7492  011BCE  0E02               	movlw	2
  7493  011BD0  5EDE               	subwf	postinc2,f,c
  7494  011BD2  0E00               	movlw	0
  7495  011BD4  5ADD               	subwfb	postdec2,f,c
  7496  011BD6  006F FF78  F03F    	movff	postinc2,btemp+10
  7497  011BDC  006F FF74  F040    	movff	postdec2,btemp+11
  7498  011BE2  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7499  011BE8  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7500  011BEE  006F FF78  F03F    	movff	postinc2,btemp+10
  7501  011BF4  006F FF74  F040    	movff	postdec2,btemp+11
  7502  011BFA  503F               	movf	(btemp+10)^0,w,c
  7503  011BFC  6E45               	movwf	(btemp+16)^0,c
  7504  011BFE  5040               	movf	(btemp+11)^0,w,c
  7505  011C00  6E46               	movwf	(btemp+17)^0,c
  7506  011C02  6A47               	clrf	(btemp+18)^0,c
  7507  011C04  6A48               	clrf	(btemp+19)^0,c
  7508  011C06  6A49               	clrf	(btemp+20)^0,c
  7509  011C08  6A4A               	clrf	(btemp+21)^0,c
  7510  011C0A  6A4B               	clrf	(btemp+22)^0,c
  7511  011C0C  6A4C               	clrf	(btemp+23)^0,c
  7512                           
  7513                           ;stkvar	_llu @ sp[(-32)+6]
  7514  011C0E  0EE6               	movlw	-26
  7515  011C10  0060  F117  FFE3   	movff	btemp+16,plusw1
  7516  011C16  0EE7               	movlw	-25
  7517  011C18  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7518  011C1E  0EE8               	movlw	-24
  7519  011C20  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7520  011C26  0EE9               	movlw	-23
  7521  011C28  0060  F123  FFE3   	movff	btemp+19,plusw1
  7522  011C2E  0EEA               	movlw	-22
  7523  011C30  0060  F127  FFE3   	movff	btemp+20,plusw1
  7524  011C36  0EEB               	movlw	-21
  7525  011C38  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7526  011C3E  0EEC               	movlw	-20
  7527  011C40  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7528  011C46  0EED               	movlw	-19
  7529  011C48  0060  F133  FFE3   	movff	btemp+23,plusw1
  7530                           
  7531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  7532                           ;stkvar	_c @ sp[(-32)+31]
  7533  011C4E  0EFF               	movlw	-1
  7534  011C50  50E3               	movf	plusw1,w,c
  7535  011C52  6EE6               	movwf	postinc1,c
  7536                           
  7537                           ;stkvar	_llu @ sp[(-33)+6]
  7538  011C54  50E1               	movf	fsr1l,w,c
  7539  011C56  0FE5               	addlw	-27
  7540  011C58  6ED9               	movwf	fsr2l,c
  7541  011C5A  50E2               	movf	fsr1h,w,c
  7542  011C5C  6EDA               	movwf	fsr2h,c
  7543  011C5E  0EFF               	movlw	255
  7544  011C60  22DA               	addwfc	fsr2h,f,c
  7545  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  7546  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  7547  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  7548  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  7549  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  7550  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  7551  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  7552  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  7553                           
  7554                           ;stkvar	_fp @ sp[(-41)+-2]
  7555  011C92  0ED5               	movlw	-43
  7556  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  7557  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  7558  011CA0  ECB4  F09D         	call	_xtoa	;wreg free
  7559  011CA4  D069               	goto	l1938
  7560  011CA6                     l9551:
  7561                           
  7562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7563                           ;stkvar	_fmt @ sp[(-32)+-4]
  7564  011CA6  0EDC               	movlw	-36
  7565  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7566  011CAE  0EDD               	movlw	-35
  7567  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7568  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7569  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7570  011CC2                     	if	0	;tblptru may be non-zero
  7571  011CC2                     	endif
  7572  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7573  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  7574  011CC4  6EF8               	movwf	tblptru,c
  7575  011CC6                     	endif
  7576  011CC6  0008               	tblrd		*
  7577  011CC8  50F5               	movf	tablat,w,c
  7578  011CCA  0A25               	xorlw	37
  7579  011CCC  A4D8               	btfss	status,2,c
  7580  011CCE  D01A               	goto	l9561
  7581                           
  7582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7583                           ;stkvar	_fmt @ sp[(-32)+-4]
  7584  011CD0  0EDC               	movlw	-36
  7585  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7586  011CD8  0EDD               	movlw	-35
  7587  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7588  011CE0  2ADE               	incf	postinc2,f,c
  7589  011CE2  0E00               	movlw	0
  7590  011CE4  22DD               	addwfc	postdec2,f,c
  7591                           
  7592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7593                           ;stkvar	_fp @ sp[(-32)+-2]
  7594  011CE6  0EDE               	movlw	-34
  7595  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7596  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  7597  011CF4  0E25               	movlw	37
  7598  011CF6  6EE6               	movwf	postinc1,c
  7599  011CF8  0E00               	movlw	0
  7600  011CFA  6EE6               	movwf	postinc1,c
  7601  011CFC  EC37  F0B0         	call	_fputc	;wreg free
  7602  011D00                     l9557:
  7603                           
  7604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7605  011D00  0E01               	movlw	1
  7606  011D02  D00C               	goto	L5
  7607  011D04                     l9561:
  7608                           
  7609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7610                           ;stkvar	_fmt @ sp[(-32)+-4]
  7611  011D04  0EDC               	movlw	-36
  7612  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  7613  011D0C  0EDD               	movlw	-35
  7614  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7615  011D14  2ADE               	incf	postinc2,f,c
  7616  011D16  0E00               	movlw	0
  7617  011D18  22DD               	addwfc	postdec2,f,c
  7618                           
  7619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7620  011D1A  0E00               	movlw	0
  7621  011D1C                     L5:
  7622  011D1C  6E35               	movwf	btemp^0,c
  7623  011D1E  0E00               	movlw	0
  7624  011D20  6E36               	movwf	(btemp+1)^0,c
  7625  011D22  D02A               	goto	l1938
  7626  011D24                     l9567:
  7627                           
  7628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7629                           ;stkvar	_fp @ sp[(-32)+-2]
  7630  011D24  0EDE               	movlw	-34
  7631  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  7632  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  7633                           
  7634                           ;stkvar	_fmt @ sp[(-34)+-4]
  7635  011D32  0EDA               	movlw	-38
  7636  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  7637  011D3A  0EDB               	movlw	-37
  7638  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7639  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  7640  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  7641  011D4E                     	if	0	;tblptru may be non-zero
  7642  011D4E                     	endif
  7643  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7644  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  7645  011D50  6EF8               	movwf	tblptru,c
  7646  011D52                     	endif
  7647  011D52  0008               	tblrd		*
  7648  011D54  50F5               	movf	tablat,w,c
  7649  011D56  6EE6               	movwf	postinc1,c
  7650  011D58  0E00               	movlw	0
  7651  011D5A  6EE6               	movwf	postinc1,c
  7652  011D5C  EC37  F0B0         	call	_fputc	;wreg free
  7653                           
  7654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7655                           ;stkvar	_fmt @ sp[(-32)+-4]
  7656  011D60  0EDC               	movlw	-36
  7657  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  7658  011D68  0EDD               	movlw	-35
  7659  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7660  011D70  2ADE               	incf	postinc2,f,c
  7661  011D72  0E00               	movlw	0
  7662  011D74  22DD               	addwfc	postdec2,f,c
  7663  011D76  D7C4               	goto	l9557
  7664  011D78                     l1938:
  7665                           
  7666                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7667  011D78  0EDA               	movlw	218
  7668  011D7A  26E1               	addwf	fsr1l,f,c
  7669  011D7C  0EFF               	movlw	255
  7670  011D7E  22E2               	addwfc	fsr1h,f,c
  7671  011D80  0012               	return		;funcret
  7672  011D82                     __end_of_vfpfcnvrt:
  7673                           	opt callstack 0
  7674                           
  7675 ;; *************** function _xtoa *****************
  7676 ;; Defined at:
  7677 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7680 ;;		 -> f(6), NULL(0), 
  7681 ;;  d               8  [STACK] unsigned long long 
  7682 ;;  x               1  [STACK] unsigned char 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  n               8  [STACK] unsigned long long 
  7685 ;;  c               2  [STACK] int 
  7686 ;;  i               2  [STACK] int 
  7687 ;;  w               2  [STACK] int 
  7688 ;;  p               2  [STACK] int 
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  2  [STACK] int 
  7691 ;; Registers used:
  7692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/4
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7702 ;;Total ram usage:        0 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:   11
  7705 ;; This function calls:
  7706 ;;		_isalpha
  7707 ;;		_isupper
  7708 ;;		_pad
  7709 ;;		_toupper
  7710 ;; This function is called by:
  7711 ;;		_vfpfcnvrt
  7712 ;; This function uses a reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text33
  7716  013B68                     __ptext33:
  7717                           	opt callstack 0
  7718  013B68                     _xtoa:
  7719                           	opt callstack 0
  7720                           
  7721                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7722  013B68  0E14               	movlw	20
  7723  013B6A  26E1               	addwf	fsr1l,f,c
  7724  013B6C  0E00               	movlw	0
  7725  013B6E  22E2               	addwfc	fsr1h,f,c
  7726                           
  7727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  7728                           
  7729                           ;incstack = 0
  7730  013B70  AE21               	btfss	(_prec+1)^0,7,c
  7731                           
  7732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  7733  013B72  9222               	bcf	_flags^0,1,c
  7734                           
  7735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  7736  013B74  BE21               	btfsc	(_prec+1)^0,7,c
  7737  013B76  D005               	goto	u9210
  7738  013B78  5021               	movf	(_prec+1)^0,w,c
  7739  013B7A  E110               	bnz	l9349
  7740  013B7C  0420               	decf	_prec^0,w,c
  7741  013B7E  B0D8               	btfsc	status,0,c
  7742  013B80  D00D               	goto	l9349
  7743  013B82                     u9210:
  7744  013B82  0E01               	movlw	1
  7745  013B84  6E3F               	movwf	(btemp+10)^0,c
  7746  013B86  0E00               	movlw	0
  7747  013B88  6E40               	movwf	(btemp+11)^0,c
  7748                           
  7749                           ;stkvar	_p @ sp[(-20)+18]
  7750  013B8A  0EFE               	movlw	-2
  7751  013B8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7752  013B92  0EFF               	movlw	-1
  7753  013B94  0060  F103  FFE3   	movff	btemp+11,plusw1
  7754  013B9A  D008               	goto	l1888
  7755  013B9C                     l9349:
  7756                           
  7757                           ;stkvar	_p @ sp[(-20)+18]
  7758  013B9C  0EFE               	movlw	-2
  7759  013B9E  0060  F083  FFE3   	movff	_prec,plusw1
  7760  013BA4  0EFF               	movlw	-1
  7761  013BA6  0060  F087  FFE3   	movff	_prec+1,plusw1
  7762  013BAC                     l1888:
  7763                           
  7764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  7765                           ;stkvar	_w @ sp[(-20)+16]
  7766  013BAC  0EFC               	movlw	-4
  7767  013BAE  0060  F07B  FFE3   	movff	_width,plusw1
  7768  013BB4  0EFD               	movlw	-3
  7769  013BB6  0060  F07F  FFE3   	movff	_width+1,plusw1
  7770                           
  7771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  7772  013BBC  A822               	btfss	_flags^0,4,c
  7773  013BBE  D00B               	goto	l9355
  7774                           
  7775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  7776                           ;stkvar	_w @ sp[(-20)+16]
  7777  013BC0  50E1               	movf	fsr1l,w,c
  7778  013BC2  0FFC               	addlw	-4
  7779  013BC4  6ED9               	movwf	fsr2l,c
  7780  013BC6  50E2               	movf	fsr1h,w,c
  7781  013BC8  6EDA               	movwf	fsr2h,c
  7782  013BCA  0EFF               	movlw	255
  7783  013BCC  22DA               	addwfc	fsr2h,f,c
  7784  013BCE  0EFE               	movlw	254
  7785  013BD0  26DE               	addwf	postinc2,f,c
  7786  013BD2  0EFF               	movlw	255
  7787  013BD4  22DD               	addwfc	postdec2,f,c
  7788  013BD6                     l9355:
  7789                           
  7790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  7791                           ;stkvar	_d @ sp[(-20)+-10]
  7792  013BD6  0EE2               	movlw	226
  7793  013BD8  24E1               	addwf	fsr1l,w,c
  7794  013BDA  6ED9               	movwf	fsr2l,c
  7795  013BDC  0EFF               	movlw	255
  7796  013BDE  20E2               	addwfc	fsr1h,w,c
  7797  013BE0  6EDA               	movwf	fsr2h,c
  7798                           
  7799                           ;stkvar	_n @ sp[(-20)+4]
  7800  013BE2  0E08               	movlw	8
  7801  013BE4  6E35               	movwf	btemp^0,c
  7802  013BE6  0EF0               	movlw	-16
  7803  013BE8                     us923999:
  7804  013BE8  006F FF7B FFE3     	movff	postinc2,plusw1
  7805  013BEE  28E8               	incf	wreg,w,c
  7806  013BF0  2E35               	decfsz	btemp^0,f,c
  7807  013BF2  D7FA               	bra	us923999
  7808                           
  7809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  7810  013BF4  0E4F               	movlw	79
  7811  013BF6  6E3F               	movwf	(btemp+10)^0,c
  7812  013BF8  0E00               	movlw	0
  7813  013BFA  6E40               	movwf	(btemp+11)^0,c
  7814                           
  7815                           ;stkvar	_i @ sp[(-20)+14]
  7816  013BFC  0EFA               	movlw	-6
  7817  013BFE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7818  013C04  0EFB               	movlw	-5
  7819  013C06  0060  F103  FFE3   	movff	btemp+11,plusw1
  7820                           
  7821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  7822  013C0C  0101               	movlb	1	; () banked
  7823  013C0E  6BF3               	clrf	(_dbuf+79)& (0+255),b
  7824                           
  7825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7826  013C10  D0EE               	goto	l9393
  7827  013C12                     l9361:
  7828                           
  7829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  7830                           ;stkvar	_i @ sp[(-20)+14]
  7831  013C12  50E1               	movf	fsr1l,w,c
  7832  013C14  0FFA               	addlw	-6
  7833  013C16  6ED9               	movwf	fsr2l,c
  7834  013C18  50E2               	movf	fsr1h,w,c
  7835  013C1A  6EDA               	movwf	fsr2h,c
  7836  013C1C  0EFF               	movlw	255
  7837  013C1E  22DA               	addwfc	fsr2h,f,c
  7838  013C20  06DE               	decf	postinc2,f,c
  7839  013C22  0E00               	movlw	0
  7840  013C24  5ADD               	subwfb	postdec2,f,c
  7841                           
  7842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  7843                           ;stkvar	_n @ sp[(-20)+4]
  7844  013C26  0EF0               	movlw	-16
  7845  013C28  006F FF8C  F03F    	movff	plusw1,btemp+10
  7846  013C2E  0EF1               	movlw	-15
  7847  013C30  006F FF8C  F040    	movff	plusw1,btemp+11
  7848  013C36  0E0F               	movlw	15
  7849  013C38  163F               	andwf	(btemp+10)^0,f,c
  7850  013C3A  0E00               	movlw	0
  7851  013C3C  1640               	andwf	(btemp+11)^0,f,c
  7852                           
  7853                           ;stkvar	_c @ sp[(-20)+12]
  7854  013C3E  0EF8               	movlw	-8
  7855  013C40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7856  013C46  0EF9               	movlw	-7
  7857  013C48  0060  F103  FFE3   	movff	btemp+11,plusw1
  7858                           
  7859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  7860                           ;stkvar	_c @ sp[(-20)+12]
  7861  013C4E  0EF9               	movlw	-7
  7862  013C50  BEE3               	btfsc	plusw1,7,c
  7863  013C52  D00F               	goto	l9369
  7864  013C54  0EF9               	movlw	-7
  7865  013C56  50E3               	movf	plusw1,w,c
  7866  013C58  E108               	bnz	u9240
  7867  013C5A  0EF8               	movlw	-8
  7868  013C5C  006F FF8C  F035    	movff	plusw1,btemp
  7869  013C62  0E0A               	movlw	10
  7870  013C64  5E35               	subwf	btemp^0,f,c
  7871  013C66  A0D8               	btfss	status,0,c
  7872  013C68  D004               	goto	l9369
  7873  013C6A                     u9240:
  7874                           
  7875                           ;stkvar	_c @ sp[(-20)+12]
  7876  013C6A  0EF8               	movlw	-8
  7877  013C6C  50E3               	movf	plusw1,w,c
  7878  013C6E  0F57               	addlw	87
  7879  013C70  D003               	goto	L6
  7880  013C72                     l9369:
  7881                           
  7882                           ;stkvar	_c @ sp[(-20)+12]
  7883  013C72  0EF8               	movlw	-8
  7884  013C74  50E3               	movf	plusw1,w,c
  7885  013C76  0F30               	addlw	48
  7886  013C78                     L6:
  7887  013C78  6E3F               	movwf	(btemp+10)^0,c
  7888  013C7A  0EF9               	movlw	-7
  7889  013C7C  006F FF8C  F040    	movff	plusw1,btemp+11
  7890  013C82  0E00               	movlw	0
  7891  013C84  2240               	addwfc	(btemp+11)^0,f,c
  7892                           
  7893                           ;stkvar	_c @ sp[(-20)+12]
  7894  013C86  0EF8               	movlw	-8
  7895  013C88  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7896  013C8E  0EF9               	movlw	-7
  7897  013C90  0060  F103  FFE3   	movff	btemp+11,plusw1
  7898  013C96  0EBF               	movlw	191
  7899  013C98  6E3F               	movwf	(btemp+10)^0,c
  7900  013C9A  0EFF               	movlw	255
  7901  013C9C  6E40               	movwf	(btemp+11)^0,c
  7902                           
  7903                           ;stkvar	_x @ sp[(-20)+-11]
  7904  013C9E  0EE1               	movlw	-31
  7905  013CA0  50E3               	movf	plusw1,w,c
  7906  013CA2  6E3D               	movwf	(btemp+8)^0,c
  7907  013CA4  6A3E               	clrf	(btemp+9)^0,c
  7908  013CA6  503F               	movf	(btemp+10)^0,w,c
  7909  013CA8  263D               	addwf	(btemp+8)^0,f,c
  7910  013CAA  5040               	movf	(btemp+11)^0,w,c
  7911  013CAC  223E               	addwfc	(btemp+9)^0,f,c
  7912  013CAE  503E               	movf	(btemp+9)^0,w,c
  7913  013CB0  E106               	bnz	u9250
  7914  013CB2  0E1A               	movlw	26
  7915  013CB4  5C3D               	subwf	(btemp+8)^0,w,c
  7916  013CB6  B0D8               	btfsc	status,0,c
  7917  013CB8  D002               	goto	u9250
  7918  013CBA  0E01               	movlw	1
  7919  013CBC  D001               	goto	u9260
  7920  013CBE                     u9250:
  7921  013CBE  0E00               	movlw	0
  7922  013CC0                     u9260:
  7923  013CC0  6E3F               	movwf	(btemp+10)^0,c
  7924  013CC2  6A40               	clrf	(btemp+11)^0,c
  7925                           
  7926                           ;stkvar	_xtoa$4134 @ sp[(-20)+2]
  7927  013CC4  0EEE               	movlw	-18
  7928  013CC6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7929  013CCC  0EEF               	movlw	-17
  7930  013CCE  0060  F103  FFE3   	movff	btemp+11,plusw1
  7931                           
  7932                           ;stkvar	_xtoa$4134 @ sp[(-20)+2]
  7933  013CD4  0EEE               	movlw	-18
  7934  013CD6  006F FF8C  F035    	movff	plusw1,btemp
  7935  013CDC  0EEF               	movlw	-17
  7936  013CDE  50E3               	movf	plusw1,w,c
  7937  013CE0  1035               	iorwf	btemp^0,w,c
  7938  013CE2  B4D8               	btfsc	status,2,c
  7939  013CE4  D041               	goto	l9385
  7940  013CE6  0E9F               	movlw	159
  7941  013CE8  6E3F               	movwf	(btemp+10)^0,c
  7942  013CEA  0EFF               	movlw	255
  7943  013CEC  6E40               	movwf	(btemp+11)^0,c
  7944                           
  7945                           ;stkvar	_c @ sp[(-20)+12]
  7946  013CEE  0EF8               	movlw	-8
  7947  013CF0  006F FF8C  F03D    	movff	plusw1,btemp+8
  7948  013CF6  0EF9               	movlw	-7
  7949  013CF8  006F FF8C  F03E    	movff	plusw1,btemp+9
  7950  013CFE  0E20               	movlw	32
  7951  013D00  123D               	iorwf	(btemp+8)^0,f,c
  7952  013D02  0E00               	movlw	0
  7953  013D04  123E               	iorwf	(btemp+9)^0,f,c
  7954  013D06  503F               	movf	(btemp+10)^0,w,c
  7955  013D08  263D               	addwf	(btemp+8)^0,f,c
  7956  013D0A  5040               	movf	(btemp+11)^0,w,c
  7957  013D0C  223E               	addwfc	(btemp+9)^0,f,c
  7958  013D0E  503E               	movf	(btemp+9)^0,w,c
  7959  013D10  E106               	bnz	u9280
  7960  013D12  0E1A               	movlw	26
  7961  013D14  5C3D               	subwf	(btemp+8)^0,w,c
  7962  013D16  B0D8               	btfsc	status,0,c
  7963  013D18  D002               	goto	u9280
  7964  013D1A  0E01               	movlw	1
  7965  013D1C  D001               	goto	u9290
  7966  013D1E                     u9280:
  7967  013D1E  0E00               	movlw	0
  7968  013D20                     u9290:
  7969  013D20  6E3F               	movwf	(btemp+10)^0,c
  7970  013D22  6A40               	clrf	(btemp+11)^0,c
  7971                           
  7972                           ;stkvar	_xtoa$4135 @ sp[(-20)+0]
  7973  013D24  0EEC               	movlw	-20
  7974  013D26  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7975  013D2C  0EED               	movlw	-19
  7976  013D2E  0060  F103  FFE3   	movff	btemp+11,plusw1
  7977                           
  7978                           ;stkvar	_xtoa$4135 @ sp[(-20)+0]
  7979  013D34  0EEC               	movlw	-20
  7980  013D36  006F FF8C  F035    	movff	plusw1,btemp
  7981  013D3C  0EED               	movlw	-19
  7982  013D3E  50E3               	movf	plusw1,w,c
  7983  013D40  1035               	iorwf	btemp^0,w,c
  7984  013D42  B4D8               	btfsc	status,2,c
  7985  013D44  D011               	goto	l9385
  7986                           
  7987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7988                           ;stkvar	_c @ sp[(-20)+12]
  7989  013D46  0EF8               	movlw	-8
  7990  013D48  006F FF8F FFE6     	movff	plusw1,postinc1
  7991  013D4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7992  013D54  ECA7  F0B7         	call	_toupper	;wreg free
  7993                           
  7994                           ;stkvar	_c @ sp[(-20)+12]
  7995  013D58  0EF8               	movlw	-8
  7996  013D5A  0060  F0D7  FFE3   	movff	btemp,plusw1
  7997  013D60  0EF9               	movlw	-7
  7998  013D62  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  7999  013D68                     l9385:
  8000                           
  8001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8002                           ;stkvar	_c @ sp[(-20)+12]
  8003                           ;stkvar	_i @ sp[(-20)+14]
  8004  013D68  0EFA               	movlw	-6
  8005  013D6A  006F FF8C  F03F    	movff	plusw1,btemp+10
  8006  013D70  0EFB               	movlw	-5
  8007  013D72  006F FF8C  F040    	movff	plusw1,btemp+11
  8008  013D78  0EA4               	movlw	low _dbuf
  8009  013D7A  243F               	addwf	(btemp+10)^0,w,c
  8010  013D7C  6ED9               	movwf	fsr2l,c
  8011  013D7E  0E01               	movlw	high _dbuf
  8012  013D80  2040               	addwfc	(btemp+11)^0,w,c
  8013  013D82  6EDA               	movwf	fsr2h,c
  8014  013D84  0EF8               	movlw	-8
  8015  013D86  006F FF8F FFDF     	movff	plusw1,indf2
  8016                           
  8017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8018                           ;stkvar	_p @ sp[(-20)+18]
  8019  013D8C  50E1               	movf	fsr1l,w,c
  8020  013D8E  0FFE               	addlw	-2
  8021  013D90  6ED9               	movwf	fsr2l,c
  8022  013D92  50E2               	movf	fsr1h,w,c
  8023  013D94  6EDA               	movwf	fsr2h,c
  8024  013D96  0EFF               	movlw	255
  8025  013D98  22DA               	addwfc	fsr2h,f,c
  8026  013D9A  06DE               	decf	postinc2,f,c
  8027  013D9C  0E00               	movlw	0
  8028  013D9E  5ADD               	subwfb	postdec2,f,c
  8029                           
  8030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8031                           ;stkvar	_w @ sp[(-20)+16]
  8032  013DA0  50E1               	movf	fsr1l,w,c
  8033  013DA2  0FFC               	addlw	-4
  8034  013DA4  6ED9               	movwf	fsr2l,c
  8035  013DA6  50E2               	movf	fsr1h,w,c
  8036  013DA8  6EDA               	movwf	fsr2h,c
  8037  013DAA  0EFF               	movlw	255
  8038  013DAC  22DA               	addwfc	fsr2h,f,c
  8039  013DAE  06DE               	decf	postinc2,f,c
  8040  013DB0  0E00               	movlw	0
  8041  013DB2  5ADD               	subwfb	postdec2,f,c
  8042                           
  8043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8044  013DB4  0E04               	movlw	4
  8045  013DB6  6E40               	movwf	(btemp+11)^0,c
  8046                           
  8047                           ;stkvar	_n @ sp[(-20)+4]
  8048  013DB8  50E1               	movf	fsr1l,w,c
  8049  013DBA  0FF0               	addlw	-16
  8050  013DBC  6ED9               	movwf	fsr2l,c
  8051  013DBE  50E2               	movf	fsr1h,w,c
  8052  013DC0  6EDA               	movwf	fsr2h,c
  8053  013DC2  0EFF               	movlw	255
  8054  013DC4  22DA               	addwfc	fsr2h,f,c
  8055  013DC6  2840               	incf	(btemp+11)^0,w,c
  8056  013DC8  52DE               	movf	postinc2,f,c
  8057  013DCA  D00F               	goto	u9310
  8058  013DCC                     u9315:
  8059  013DCC  52DE               	movf	postinc2,f,c
  8060  013DCE  52DE               	movf	postinc2,f,c
  8061  013DD0  52DE               	movf	postinc2,f,c
  8062  013DD2  52DE               	movf	postinc2,f,c
  8063  013DD4  52DE               	movf	postinc2,f,c
  8064  013DD6  52DE               	movf	postinc2,f,c
  8065  013DD8  90D8               	bcf	status,0,c
  8066  013DDA  32DD               	rrcf	postdec2,f,c
  8067  013DDC  32DD               	rrcf	postdec2,f,c
  8068  013DDE  32DD               	rrcf	postdec2,f,c
  8069  013DE0  32DD               	rrcf	postdec2,f,c
  8070  013DE2  32DD               	rrcf	postdec2,f,c
  8071  013DE4  32DD               	rrcf	postdec2,f,c
  8072  013DE6  32DD               	rrcf	postdec2,f,c
  8073  013DE8  32DE               	rrcf	postinc2,f,c
  8074  013DEA                     u9310:
  8075  013DEA  2EE8               	decfsz	wreg,f,c
  8076  013DEC  D7EF               	goto	u9315
  8077  013DEE                     l9393:
  8078                           
  8079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8080                           ;stkvar	_i @ sp[(-20)+14]
  8081  013DEE  0EFB               	movlw	-5
  8082  013DF0  BEE3               	btfsc	plusw1,7,c
  8083  013DF2  D03A               	goto	u9360
  8084  013DF4  0EFB               	movlw	-5
  8085  013DF6  50E3               	movf	plusw1,w,c
  8086  013DF8  E108               	bnz	u9320
  8087  013DFA  0EFA               	movlw	-6
  8088  013DFC  006F FF8C  F035    	movff	plusw1,btemp
  8089  013E02  0E02               	movlw	2
  8090  013E04  5E35               	subwf	btemp^0,f,c
  8091  013E06  A0D8               	btfss	status,0,c
  8092  013E08  D02F               	goto	u9360
  8093  013E0A                     u9320:
  8094                           
  8095                           ;stkvar	_n @ sp[(-20)+4]
  8096  013E0A  0EF0               	movlw	-16
  8097  013E0C  50E3               	movf	plusw1,w,c
  8098  013E0E  E115               	bnz	u9331
  8099  013E10  0EF1               	movlw	-15
  8100  013E12  50E3               	movf	plusw1,w,c
  8101  013E14  E112               	bnz	u9331
  8102  013E16  0EF2               	movlw	-14
  8103  013E18  50E3               	movf	plusw1,w,c
  8104  013E1A  E10F               	bnz	u9331
  8105  013E1C  0EF3               	movlw	-13
  8106  013E1E  50E3               	movf	plusw1,w,c
  8107  013E20  E10C               	bnz	u9331
  8108  013E22  0EF4               	movlw	-12
  8109  013E24  50E3               	movf	plusw1,w,c
  8110  013E26  E109               	bnz	u9331
  8111  013E28  0EF5               	movlw	-11
  8112  013E2A  50E3               	movf	plusw1,w,c
  8113  013E2C  E106               	bnz	u9331
  8114  013E2E  0EF6               	movlw	-10
  8115  013E30  50E3               	movf	plusw1,w,c
  8116  013E32  E103               	bnz	u9331
  8117  013E34  0EF7               	movlw	-9
  8118  013E36  50E3               	movf	plusw1,w,c
  8119  013E38  A4D8               	btfss	status,2,c
  8120  013E3A                     u9331:
  8121  013E3A  D6EB               	goto	l9361
  8122                           
  8123                           ;stkvar	_p @ sp[(-20)+18]
  8124  013E3C  0EFF               	movlw	-1
  8125  013E3E  BEE3               	btfsc	plusw1,7,c
  8126  013E40  D007               	goto	u9340
  8127  013E42  0EFF               	movlw	-1
  8128  013E44  50E3               	movf	plusw1,w,c
  8129  013E46  E103               	bnz	u9341
  8130  013E48  0EFE               	movlw	-2
  8131  013E4A  04E3               	decf	plusw1,w,c
  8132  013E4C  B0D8               	btfsc	status,0,c
  8133  013E4E                     u9341:
  8134  013E4E  D6E1               	goto	l9361
  8135  013E50                     u9340:
  8136                           
  8137                           ;stkvar	_w @ sp[(-20)+16]
  8138  013E50  0EFD               	movlw	-3
  8139  013E52  BEE3               	btfsc	plusw1,7,c
  8140  013E54  D009               	goto	u9360
  8141  013E56  0EFD               	movlw	-3
  8142  013E58  50E3               	movf	plusw1,w,c
  8143  013E5A  E104               	bnz	u9350
  8144  013E5C  0EFC               	movlw	-4
  8145  013E5E  04E3               	decf	plusw1,w,c
  8146  013E60  A0D8               	btfss	status,0,c
  8147  013E62  D002               	goto	u9360
  8148  013E64                     u9350:
  8149  013E64  B222               	btfsc	_flags^0,1,c
  8150  013E66  D6D5               	goto	l9361
  8151  013E68                     u9360:
  8152                           
  8153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8154  013E68  A822               	btfss	_flags^0,4,c
  8155  013E6A  D036               	goto	l9409
  8156                           
  8157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8158                           ;stkvar	_i @ sp[(-20)+14]
  8159  013E6C  50E1               	movf	fsr1l,w,c
  8160  013E6E  0FFA               	addlw	-6
  8161  013E70  6ED9               	movwf	fsr2l,c
  8162  013E72  50E2               	movf	fsr1h,w,c
  8163  013E74  6EDA               	movwf	fsr2h,c
  8164  013E76  0EFF               	movlw	255
  8165  013E78  22DA               	addwfc	fsr2h,f,c
  8166  013E7A  06DE               	decf	postinc2,f,c
  8167  013E7C  0E00               	movlw	0
  8168  013E7E  5ADD               	subwfb	postdec2,f,c
  8169                           
  8170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8171                           ;stkvar	_x @ sp[(-20)+-11]
  8172                           ;stkvar	_i @ sp[(-20)+14]
  8173  013E80  0EFA               	movlw	-6
  8174  013E82  006F FF8C  F03F    	movff	plusw1,btemp+10
  8175  013E88  0EFB               	movlw	-5
  8176  013E8A  006F FF8C  F040    	movff	plusw1,btemp+11
  8177  013E90  0EA4               	movlw	low _dbuf
  8178  013E92  243F               	addwf	(btemp+10)^0,w,c
  8179  013E94  6ED9               	movwf	fsr2l,c
  8180  013E96  0E01               	movlw	high _dbuf
  8181  013E98  2040               	addwfc	(btemp+11)^0,w,c
  8182  013E9A  6EDA               	movwf	fsr2h,c
  8183  013E9C  0EE1               	movlw	-31
  8184  013E9E  006F FF8F FFDF     	movff	plusw1,indf2
  8185                           
  8186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8187                           ;stkvar	_i @ sp[(-20)+14]
  8188  013EA4  50E1               	movf	fsr1l,w,c
  8189  013EA6  0FFA               	addlw	-6
  8190  013EA8  6ED9               	movwf	fsr2l,c
  8191  013EAA  50E2               	movf	fsr1h,w,c
  8192  013EAC  6EDA               	movwf	fsr2h,c
  8193  013EAE  0EFF               	movlw	255
  8194  013EB0  22DA               	addwfc	fsr2h,f,c
  8195  013EB2  06DE               	decf	postinc2,f,c
  8196  013EB4  0E00               	movlw	0
  8197  013EB6  5ADD               	subwfb	postdec2,f,c
  8198                           
  8199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8200                           ;stkvar	_i @ sp[(-20)+14]
  8201  013EB8  0EFA               	movlw	-6
  8202  013EBA  006F FF8C  F03F    	movff	plusw1,btemp+10
  8203  013EC0  0EFB               	movlw	-5
  8204  013EC2  006F FF8C  F040    	movff	plusw1,btemp+11
  8205  013EC8  0EA4               	movlw	low _dbuf
  8206  013ECA  243F               	addwf	(btemp+10)^0,w,c
  8207  013ECC  6ED9               	movwf	fsr2l,c
  8208  013ECE  0E01               	movlw	high _dbuf
  8209  013ED0  2040               	addwfc	(btemp+11)^0,w,c
  8210  013ED2  6EDA               	movwf	fsr2h,c
  8211  013ED4  0E30               	movlw	48
  8212  013ED6  6EDF               	movwf	indf2,c
  8213  013ED8                     l9409:
  8214                           
  8215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8216                           ;stkvar	_w @ sp[(-20)+16]
  8217  013ED8  0EFC               	movlw	-4
  8218  013EDA  006F FF8F FFE6     	movff	plusw1,postinc1
  8219  013EE0  006F FF8F FFE6     	movff	plusw1,postinc1
  8220                           
  8221                           ;stkvar	_i @ sp[(-22)+14]
  8222  013EE6  0EA4               	movlw	low _dbuf
  8223  013EE8  6E3F               	movwf	(btemp+10)^0,c
  8224  013EEA  0E01               	movlw	high _dbuf
  8225  013EEC  6E40               	movwf	(btemp+11)^0,c
  8226  013EEE  0EF8               	movlw	-8
  8227  013EF0  50E3               	movf	plusw1,w,c
  8228  013EF2  263F               	addwf	(btemp+10)^0,f,c
  8229  013EF4  0EF9               	movlw	-7
  8230  013EF6  50E3               	movf	plusw1,w,c
  8231  013EF8  2240               	addwfc	(btemp+11)^0,f,c
  8232  013EFA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8233  013F00  0060  F103  FFE6   	movff	btemp+11,postinc1
  8234                           
  8235                           ;stkvar	_fp @ sp[(-24)+-2]
  8236  013F06  0EE6               	movlw	-26
  8237  013F08  006F FF8F FFE6     	movff	plusw1,postinc1
  8238  013F0E  006F FF8F FFE6     	movff	plusw1,postinc1
  8239  013F14  EC55  F0B1         	call	_pad	;wreg free
  8240                           
  8241                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  8242  013F18  0EE1               	movlw	225
  8243  013F1A  26E1               	addwf	fsr1l,f,c
  8244  013F1C  0EFF               	movlw	255
  8245  013F1E  22E2               	addwfc	fsr1h,f,c
  8246  013F20  0012               	return		;funcret
  8247  013F22                     __end_of_xtoa:
  8248                           	opt callstack 0
  8249                           
  8250 ;; *************** function _toupper *****************
  8251 ;; Defined at:
  8252 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  c               2  [STACK] int 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  2  [STACK] int 
  8259 ;; Registers used:
  8260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/1
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8270 ;;Total ram usage:        0 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    7
  8273 ;; This function calls:
  8274 ;;		_islower
  8275 ;; This function is called by:
  8276 ;;		_xtoa
  8277 ;; This function uses a reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text34
  8281  016F4E                     __ptext34:
  8282                           	opt callstack 0
  8283  016F4E                     _toupper:
  8284                           	opt callstack 0
  8285                           
  8286                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8287  016F4E  52E6               	movf	postinc1,f,c
  8288  016F50  52E6               	movf	postinc1,f,c
  8289                           
  8290                           ;stkvar	_c @ sp[(-2)+-2]
  8291                           
  8292                           ;incstack = 0
  8293  016F52  0EFC               	movlw	-4
  8294  016F54  50E3               	movf	plusw1,w,c
  8295  016F56  0F9F               	addlw	159
  8296  016F58  6E3F               	movwf	(btemp+10)^0,c
  8297  016F5A  0EFD               	movlw	-3
  8298  016F5C  006F FF8C  F040    	movff	plusw1,btemp+11
  8299  016F62  0EFF               	movlw	255
  8300  016F64  2240               	addwfc	(btemp+11)^0,f,c
  8301  016F66  5040               	movf	(btemp+11)^0,w,c
  8302  016F68  E106               	bnz	u5010
  8303  016F6A  0E1A               	movlw	26
  8304  016F6C  5C3F               	subwf	(btemp+10)^0,w,c
  8305  016F6E  B0D8               	btfsc	status,0,c
  8306  016F70  D002               	goto	u5010
  8307  016F72  0E01               	movlw	1
  8308  016F74  D001               	goto	u5020
  8309  016F76                     u5010:
  8310  016F76  0E00               	movlw	0
  8311  016F78                     u5020:
  8312  016F78  6E3F               	movwf	(btemp+10)^0,c
  8313  016F7A  6A40               	clrf	(btemp+11)^0,c
  8314                           
  8315                           ;stkvar	_toupper$4787 @ sp[(-2)+0]
  8316  016F7C  0EFE               	movlw	-2
  8317  016F7E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8318  016F84  0EFF               	movlw	-1
  8319  016F86  0060  F103  FFE3   	movff	btemp+11,plusw1
  8320                           
  8321                           ;stkvar	_toupper$4787 @ sp[(-2)+0]
  8322  016F8C  0EFE               	movlw	-2
  8323  016F8E  006F FF8C  F035    	movff	plusw1,btemp
  8324  016F94  0EFF               	movlw	-1
  8325  016F96  50E3               	movf	plusw1,w,c
  8326  016F98  1035               	iorwf	btemp^0,w,c
  8327  016F9A  B4D8               	btfsc	status,2,c
  8328  016F9C  D00D               	goto	l6259
  8329                           
  8330                           ;stkvar	_c @ sp[(-2)+-2]
  8331  016F9E  0EFC               	movlw	-4
  8332  016FA0  006F FF8C  F035    	movff	plusw1,btemp
  8333  016FA6  0EFD               	movlw	-3
  8334  016FA8  006F FF8C  F036    	movff	plusw1,btemp+1
  8335  016FAE  0E5F               	movlw	95
  8336  016FB0  1635               	andwf	btemp^0,f,c
  8337  016FB2  0E00               	movlw	0
  8338  016FB4  1636               	andwf	(btemp+1)^0,f,c
  8339  016FB6  D008               	goto	l2818
  8340  016FB8                     l6259:
  8341                           
  8342                           ;stkvar	_c @ sp[(-2)+-2]
  8343  016FB8  0EFC               	movlw	-4
  8344  016FBA  006F FF8C  F035    	movff	plusw1,btemp
  8345  016FC0  0EFD               	movlw	-3
  8346  016FC2  006F FF8C  F036    	movff	plusw1,btemp+1
  8347  016FC8                     l2818:
  8348                           
  8349                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8350  016FC8  52E5               	movf	postdec1,f,c
  8351  016FCA  52E5               	movf	postdec1,f,c
  8352  016FCC  52E5               	movf	postdec1,f,c
  8353  016FCE  52E5               	movf	postdec1,f,c
  8354  016FD0  0012               	return		;funcret
  8355  016FD2                     __end_of_toupper:
  8356                           	opt callstack 0
  8357                           
  8358 ;; *************** function _islower *****************
  8359 ;; Defined at:
  8360 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  c               2  [STACK] int 
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;		None
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  2  [STACK] int 
  8367 ;; Registers used:
  8368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8378 ;;Total ram usage:        0 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:    6
  8381 ;; This function calls:
  8382 ;;		Nothing
  8383 ;; This function is called by:
  8384 ;;		_toupper
  8385 ;; This function uses a reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text35
  8389  017920                     __ptext35:
  8390                           	opt callstack 0
  8391  017920                     _islower:
  8392                           	opt callstack 16
  8393                           
  8394                           ;stkvar	_c @ sp[(0)+-2]
  8395                           
  8396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8397                           ;incstack = 0
  8398  017920  0EFE               	movlw	-2
  8399  017922  50E3               	movf	plusw1,w,c
  8400  017924  0F9F               	addlw	159
  8401  017926  6E3F               	movwf	(btemp+10)^0,c
  8402  017928  0EFF               	movlw	-1
  8403  01792A  006F FF8C  F040    	movff	plusw1,btemp+11
  8404  017930  0EFF               	movlw	255
  8405  017932  2240               	addwfc	(btemp+11)^0,f,c
  8406  017934  5040               	movf	(btemp+11)^0,w,c
  8407  017936  E106               	bnz	u4700
  8408  017938  0E1A               	movlw	26
  8409  01793A  5C3F               	subwf	(btemp+10)^0,w,c
  8410  01793C  B0D8               	btfsc	status,0,c
  8411  01793E  D002               	goto	u4700
  8412  017940  0E01               	movlw	1
  8413  017942  D001               	goto	u4710
  8414  017944                     u4700:
  8415  017944  0E00               	movlw	0
  8416  017946                     u4710:
  8417  017946  6E35               	movwf	btemp^0,c
  8418  017948  6A36               	clrf	(btemp+1)^0,c
  8419                           
  8420                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8421  01794A  52E5               	movf	postdec1,f,c
  8422  01794C  52E5               	movf	postdec1,f,c
  8423  01794E  0012               	return		;funcret
  8424  017950                     __end_of_islower:
  8425                           	opt callstack 0
  8426                           
  8427 ;; *************** function _isalpha *****************
  8428 ;; Defined at:
  8429 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  c               2  [STACK] int 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  2  [STACK] int 
  8436 ;; Registers used:
  8437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8447 ;;Total ram usage:        0 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; Hardware stack levels required when called:    6
  8450 ;; This function calls:
  8451 ;;		Nothing
  8452 ;; This function is called by:
  8453 ;;		_xtoa
  8454 ;; This function uses a reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text36
  8458  0176DA                     __ptext36:
  8459                           	opt callstack 0
  8460  0176DA                     _isalpha:
  8461                           	opt callstack 17
  8462                           
  8463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8464                           ;incstack = 0
  8465  0176DA  0E9F               	movlw	159
  8466  0176DC  6E3F               	movwf	(btemp+10)^0,c
  8467  0176DE  0EFF               	movlw	255
  8468  0176E0  6E40               	movwf	(btemp+11)^0,c
  8469                           
  8470                           ;stkvar	_c @ sp[(0)+-2]
  8471  0176E2  0EFE               	movlw	-2
  8472  0176E4  006F FF8C  F03D    	movff	plusw1,btemp+8
  8473  0176EA  0EFF               	movlw	-1
  8474  0176EC  006F FF8C  F03E    	movff	plusw1,btemp+9
  8475  0176F2  0E20               	movlw	32
  8476  0176F4  123D               	iorwf	(btemp+8)^0,f,c
  8477  0176F6  0E00               	movlw	0
  8478  0176F8  123E               	iorwf	(btemp+9)^0,f,c
  8479  0176FA  503F               	movf	(btemp+10)^0,w,c
  8480  0176FC  263D               	addwf	(btemp+8)^0,f,c
  8481  0176FE  5040               	movf	(btemp+11)^0,w,c
  8482  017700  223E               	addwfc	(btemp+9)^0,f,c
  8483  017702  503E               	movf	(btemp+9)^0,w,c
  8484  017704  E106               	bnz	u4990
  8485  017706  0E1A               	movlw	26
  8486  017708  5C3D               	subwf	(btemp+8)^0,w,c
  8487  01770A  B0D8               	btfsc	status,0,c
  8488  01770C  D002               	goto	u4990
  8489  01770E  0E01               	movlw	1
  8490  017710  D001               	goto	u5000
  8491  017712                     u4990:
  8492  017712  0E00               	movlw	0
  8493  017714                     u5000:
  8494  017714  6E35               	movwf	btemp^0,c
  8495  017716  6A36               	clrf	(btemp+1)^0,c
  8496                           
  8497                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8498  017718  52E5               	movf	postdec1,f,c
  8499  01771A  52E5               	movf	postdec1,f,c
  8500  01771C  0012               	return		;funcret
  8501  01771E                     __end_of_isalpha:
  8502                           	opt callstack 0
  8503                           
  8504 ;; *************** function _strncmp *****************
  8505 ;; Defined at:
  8506 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  _l              2  [STACK] PTR const unsigned char 
  8509 ;;		 -> ct(3), 
  8510 ;;  _r              2  [STACK] PTR const unsigned char 
  8511 ;;		 -> STR_42(3), 
  8512 ;;  n               2  [STACK] unsigned int 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  r               2  [STACK] PTR const unsigned char 
  8515 ;;		 -> STR_42(3), 
  8516 ;;  l               2  [STACK] PTR const unsigned char 
  8517 ;;		 -> ct(3), 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  2  [STACK] int 
  8520 ;; Registers used:
  8521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/4
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:    6
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_vfpfcnvrt
  8538 ;; This function uses a reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text37
  8542  0157C0                     __ptext37:
  8543                           	opt callstack 0
  8544  0157C0                     _strncmp:
  8545                           	opt callstack 0
  8546                           
  8547                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8548  0157C0  52E6               	movf	postinc1,f,c
  8549  0157C2  52E6               	movf	postinc1,f,c
  8550  0157C4  52E6               	movf	postinc1,f,c
  8551  0157C6  52E6               	movf	postinc1,f,c
  8552                           
  8553                           ;stkvar	__l @ sp[(-4)+-2]
  8554                           
  8555                           ;incstack = 0
  8556  0157C8  0EFA               	movlw	-6
  8557  0157CA  006F FF8C  F03F    	movff	plusw1,btemp+10
  8558  0157D0  0EFB               	movlw	-5
  8559  0157D2  006F FF8C  F040    	movff	plusw1,btemp+11
  8560                           
  8561                           ;stkvar	_l @ sp[(-4)+2]
  8562  0157D8  0EFF               	movlw	-1
  8563  0157DA  0060  F103  FFE3   	movff	btemp+11,plusw1
  8564  0157E0  0EFE               	movlw	-2
  8565  0157E2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8566                           
  8567                           ;stkvar	__r @ sp[(-4)+-4]
  8568  0157E8  0EF8               	movlw	-8
  8569  0157EA  006F FF8C  F03F    	movff	plusw1,btemp+10
  8570  0157F0  0EF9               	movlw	-7
  8571  0157F2  006F FF8C  F040    	movff	plusw1,btemp+11
  8572                           
  8573                           ;stkvar	_r @ sp[(-4)+0]
  8574  0157F8  0EFD               	movlw	-3
  8575  0157FA  0060  F103  FFE3   	movff	btemp+11,plusw1
  8576  015800  0EFC               	movlw	-4
  8577  015802  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8578                           
  8579                           ;stkvar	_n @ sp[(-4)+-6]
  8580  015808  0EF6               	movlw	-10
  8581  01580A  006F FF8C  F035    	movff	plusw1,btemp
  8582  015810  0E01               	movlw	1
  8583  015812  5E35               	subwf	btemp^0,f,c
  8584  015814  0EF6               	movlw	-10
  8585  015816  0060  F0D7  FFE3   	movff	btemp,plusw1
  8586  01581C  0EF7               	movlw	-9
  8587  01581E  006F FF8C  F035    	movff	plusw1,btemp
  8588  015824  0E00               	movlw	0
  8589  015826  5A35               	subwfb	btemp^0,f,c
  8590  015828  0EF7               	movlw	-9
  8591  01582A  0060  F0D7  FFE3   	movff	btemp,plusw1
  8592  015830  0EF6               	movlw	-10
  8593  015832  28E3               	incf	plusw1,w,c
  8594  015834  E13F               	bnz	l7417
  8595  015836  0EF7               	movlw	-9
  8596  015838  28E3               	incf	plusw1,w,c
  8597  01583A  A4D8               	btfss	status,2,c
  8598  01583C  D03B               	goto	l7417
  8599  01583E  0E00               	movlw	0
  8600  015840  6E35               	movwf	btemp^0,c
  8601  015842  0E00               	movlw	0
  8602  015844  6E36               	movwf	(btemp+1)^0,c
  8603  015846  D09B               	goto	l2790
  8604  015848                     l7415:
  8605                           
  8606                           ;stkvar	_l @ sp[(-4)+2]
  8607  015848  0EFE               	movlw	-2
  8608  01584A  50E3               	movf	plusw1,w,c
  8609  01584C  0F01               	addlw	1
  8610  01584E  6E35               	movwf	btemp^0,c
  8611  015850  0EFE               	movlw	-2
  8612  015852  0060  F0D7  FFE3   	movff	btemp,plusw1
  8613  015858  6A35               	clrf	btemp^0,c
  8614  01585A  0EFF               	movlw	-1
  8615  01585C  50E3               	movf	plusw1,w,c
  8616  01585E  2035               	addwfc	btemp^0,w,c
  8617  015860  6E35               	movwf	btemp^0,c
  8618  015862  0EFF               	movlw	-1
  8619  015864  0060  F0D7  FFE3   	movff	btemp,plusw1
  8620                           
  8621                           ;stkvar	_r @ sp[(-4)+0]
  8622  01586A  0EFC               	movlw	-4
  8623  01586C  50E3               	movf	plusw1,w,c
  8624  01586E  0F01               	addlw	1
  8625  015870  6E35               	movwf	btemp^0,c
  8626  015872  0EFC               	movlw	-4
  8627  015874  0060  F0D7  FFE3   	movff	btemp,plusw1
  8628  01587A  6A35               	clrf	btemp^0,c
  8629  01587C  0EFD               	movlw	-3
  8630  01587E  50E3               	movf	plusw1,w,c
  8631  015880  2035               	addwfc	btemp^0,w,c
  8632  015882  6E35               	movwf	btemp^0,c
  8633  015884  0EFD               	movlw	-3
  8634  015886  0060  F0D7  FFE3   	movff	btemp,plusw1
  8635                           
  8636                           ;stkvar	_n @ sp[(-4)+-6]
  8637  01588C  0EF6               	movlw	-10
  8638  01588E  006F FF8C  F035    	movff	plusw1,btemp
  8639  015894  0E01               	movlw	1
  8640  015896  5E35               	subwf	btemp^0,f,c
  8641  015898  0EF6               	movlw	-10
  8642  01589A  0060  F0D7  FFE3   	movff	btemp,plusw1
  8643  0158A0  0EF7               	movlw	-9
  8644  0158A2  006F FF8C  F035    	movff	plusw1,btemp
  8645  0158A8  0E00               	movlw	0
  8646  0158AA  5A35               	subwfb	btemp^0,f,c
  8647  0158AC  0EF7               	movlw	-9
  8648  0158AE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8649  0158B4                     l7417:
  8650                           
  8651                           ;stkvar	_l @ sp[(-4)+2]
  8652  0158B4  0EFE               	movlw	-2
  8653  0158B6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8654  0158BC  0EFF               	movlw	-1
  8655  0158BE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8656  0158C4  50DF               	movf	indf2,w,c
  8657  0158C6  B4D8               	btfsc	status,2,c
  8658  0158C8  D03B               	goto	u7190
  8659                           
  8660                           ;stkvar	_r @ sp[(-4)+0]
  8661  0158CA  50E1               	movf	fsr1l,w,c
  8662  0158CC  0FFC               	addlw	-4
  8663  0158CE  6ED9               	movwf	fsr2l,c
  8664  0158D0  50E2               	movf	fsr1h,w,c
  8665  0158D2  6EDA               	movwf	fsr2h,c
  8666  0158D4  0EFF               	movlw	255
  8667  0158D6  22DA               	addwfc	fsr2h,f,c
  8668  0158D8  006F FF7B FFF6     	movff	postinc2,tblptrl
  8669  0158DE  006F FF77 FFF7     	movff	postdec2,tblptrh
  8670  0158E4                     	if	0	;tblptru may be non-zero
  8671  0158E4                     	endif
  8672  0158E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8673  0158E4  0E00               	movlw	low (__mediumconst shr (0+16))
  8674  0158E6  6EF8               	movwf	tblptru,c
  8675  0158E8                     	endif
  8676  0158E8  0008               	tblrd		*
  8677  0158EA  50F5               	movf	tablat,w,c
  8678  0158EC  0900               	iorlw	0
  8679  0158EE  B4D8               	btfsc	status,2,c
  8680  0158F0  D027               	goto	u7190
  8681                           
  8682                           ;stkvar	_n @ sp[(-4)+-6]
  8683  0158F2  0EF6               	movlw	-10
  8684  0158F4  006F FF8C  F035    	movff	plusw1,btemp
  8685  0158FA  0EF7               	movlw	-9
  8686  0158FC  50E3               	movf	plusw1,w,c
  8687  0158FE  1035               	iorwf	btemp^0,w,c
  8688  015900  B4D8               	btfsc	status,2,c
  8689  015902  D01E               	goto	u7190
  8690                           
  8691                           ;stkvar	_l @ sp[(-4)+2]
  8692  015904  0EFE               	movlw	-2
  8693  015906  006F FF8F FFD9     	movff	plusw1,fsr2l
  8694  01590C  0EFF               	movlw	-1
  8695  01590E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8696  015914  50DF               	movf	indf2,w,c
  8697  015916  6E40               	movwf	(btemp+11)^0,c
  8698                           
  8699                           ;stkvar	_r @ sp[(-4)+0]
  8700  015918  50E1               	movf	fsr1l,w,c
  8701  01591A  0FFC               	addlw	-4
  8702  01591C  6ED9               	movwf	fsr2l,c
  8703  01591E  50E2               	movf	fsr1h,w,c
  8704  015920  6EDA               	movwf	fsr2h,c
  8705  015922  0EFF               	movlw	255
  8706  015924  22DA               	addwfc	fsr2h,f,c
  8707  015926  006F FF7B FFF6     	movff	postinc2,tblptrl
  8708  01592C  006F FF77 FFF7     	movff	postdec2,tblptrh
  8709  015932                     	if	0	;tblptru may be non-zero
  8710  015932                     	endif
  8711  015932                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8712  015932  0E00               	movlw	low (__mediumconst shr (0+16))
  8713  015934  6EF8               	movwf	tblptru,c
  8714  015936                     	endif
  8715  015936  0008               	tblrd		*
  8716  015938  50F5               	movf	tablat,w,c
  8717  01593A  1840               	xorwf	(btemp+11)^0,w,c
  8718  01593C  B4D8               	btfsc	status,2,c
  8719  01593E  D784               	goto	l7415
  8720  015940                     u7190:
  8721                           
  8722                           ;stkvar	_l @ sp[(-4)+2]
  8723  015940  0EFE               	movlw	-2
  8724  015942  006F FF8F FFD9     	movff	plusw1,fsr2l
  8725  015948  0EFF               	movlw	-1
  8726  01594A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8727  015950  50DF               	movf	indf2,w,c
  8728  015952  6E35               	movwf	btemp^0,c
  8729  015954  6A36               	clrf	(btemp+1)^0,c
  8730                           
  8731                           ;stkvar	_r @ sp[(-4)+0]
  8732  015956  50E1               	movf	fsr1l,w,c
  8733  015958  0FFC               	addlw	-4
  8734  01595A  6ED9               	movwf	fsr2l,c
  8735  01595C  50E2               	movf	fsr1h,w,c
  8736  01595E  6EDA               	movwf	fsr2h,c
  8737  015960  0EFF               	movlw	255
  8738  015962  22DA               	addwfc	fsr2h,f,c
  8739  015964  006F FF7B FFF6     	movff	postinc2,tblptrl
  8740  01596A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8741  015970                     	if	0	;tblptru may be non-zero
  8742  015970                     	endif
  8743  015970                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8744  015970  0E00               	movlw	low (__mediumconst shr (0+16))
  8745  015972  6EF8               	movwf	tblptru,c
  8746  015974                     	endif
  8747  015974  0008               	tblrd		*
  8748  015976  50F5               	movf	tablat,w,c
  8749  015978  5E35               	subwf	btemp^0,f,c
  8750  01597A  0E00               	movlw	0
  8751  01597C  5A36               	subwfb	(btemp+1)^0,f,c
  8752  01597E                     l2790:
  8753                           
  8754                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  8755  01597E  0EF6               	movlw	246
  8756  015980  26E1               	addwf	fsr1l,f,c
  8757  015982  0EFF               	movlw	255
  8758  015984  22E2               	addwfc	fsr1h,f,c
  8759  015986  0012               	return		;funcret
  8760  015988                     __end_of_strncmp:
  8761                           	opt callstack 0
  8762                           
  8763 ;; *************** function _stoa *****************
  8764 ;; Defined at:
  8765 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8768 ;;		 -> f(6), NULL(0), 
  8769 ;;  s               2  [STACK] PTR unsigned char 
  8770 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  8771 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  8772 ;;		 -> STR_3(4), V(189), 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  nuls            7  [STACK] unsigned char [7]
  8775 ;;  l               2  [STACK] int 
  8776 ;;  p               2  [STACK] int 
  8777 ;;  cp              2  [STACK] PTR unsigned char 
  8778 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_15(9), 
  8779 ;;		 -> STR_14(12), D.lcd(216), D(218), T(144), 
  8780 ;;		 -> STR_7(4), STR_3(4), V(189), 
  8781 ;;  w               2  [STACK] int 
  8782 ;;  i               2  [STACK] int 
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  2  [STACK] int 
  8785 ;; Registers used:
  8786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/4
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8796 ;;Total ram usage:        0 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:    9
  8799 ;; This function calls:
  8800 ;;		_fputc
  8801 ;;		_strlen
  8802 ;; This function is called by:
  8803 ;;		_vfpfcnvrt
  8804 ;; This function uses a reentrant model
  8805 ;;
  8806                           
  8807                           	psect	text38
  8808  01457A                     __ptext38:
  8809                           	opt callstack 0
  8810  01457A                     _stoa:
  8811                           	opt callstack 0
  8812                           
  8813                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8814  01457A  0E11               	movlw	17
  8815  01457C  26E1               	addwf	fsr1l,f,c
  8816  01457E  0E00               	movlw	0
  8817  014580  22E2               	addwfc	fsr1h,f,c
  8818                           
  8819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8820                           
  8821                           ;incstack = 0
  8822  014582  EE20  F0C5         	lfsr	2,stoa@F1166
  8823                           
  8824                           ;stkvar	_nuls @ sp[(-17)+0]
  8825  014586  0E07               	movlw	7
  8826  014588  6E35               	movwf	btemp^0,c
  8827  01458A  0EEF               	movlw	-17
  8828  01458C                     us910999:
  8829  01458C  006F FF7B FFE3     	movff	postinc2,plusw1
  8830  014592  28E8               	incf	wreg,w,c
  8831  014594  2E35               	decfsz	btemp^0,f,c
  8832  014596  D7FA               	bra	us910999
  8833                           
  8834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8835                           ;stkvar	_s @ sp[(-17)+-4]
  8836  014598  0EEB               	movlw	-21
  8837  01459A  006F FF8C  F03F    	movff	plusw1,btemp+10
  8838  0145A0  0EEC               	movlw	-20
  8839  0145A2  006F FF8C  F040    	movff	plusw1,btemp+11
  8840                           
  8841                           ;stkvar	_cp @ sp[(-17)+11]
  8842  0145A8  0EFB               	movlw	-5
  8843  0145AA  0060  F103  FFE3   	movff	btemp+11,plusw1
  8844  0145B0  0EFA               	movlw	-6
  8845  0145B2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8846                           
  8847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8848                           ;stkvar	_cp @ sp[(-17)+11]
  8849  0145B8  0EFA               	movlw	-6
  8850  0145BA  006F FF8C  F035    	movff	plusw1,btemp
  8851  0145C0  0EFB               	movlw	-5
  8852  0145C2  50E3               	movf	plusw1,w,c
  8853  0145C4  1035               	iorwf	btemp^0,w,c
  8854  0145C6  A4D8               	btfss	status,2,c
  8855  0145C8  D00E               	goto	l9297
  8856                           
  8857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8858                           ;stkvar	_nuls @ sp[(-17)+0]
  8859  0145CA  0EEF               	movlw	239
  8860  0145CC  24E1               	addwf	fsr1l,w,c
  8861  0145CE  6E3F               	movwf	(btemp+10)^0,c
  8862  0145D0  0EFF               	movlw	255
  8863  0145D2  20E2               	addwfc	fsr1h,w,c
  8864  0145D4  6E40               	movwf	(btemp+11)^0,c
  8865                           
  8866                           ;stkvar	_cp @ sp[(-17)+11]
  8867  0145D6  0EFB               	movlw	-5
  8868  0145D8  0060  F103  FFE3   	movff	btemp+11,plusw1
  8869  0145DE  0EFA               	movlw	-6
  8870  0145E0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8871  0145E6                     l9297:
  8872                           
  8873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8874                           ;stkvar	_cp @ sp[(-17)+11]
  8875  0145E6  0EFA               	movlw	-6
  8876  0145E8  006F FF8F FFE6     	movff	plusw1,postinc1
  8877  0145EE  006F FF8F FFE6     	movff	plusw1,postinc1
  8878  0145F4  ECEA  F0B5         	call	_strlen	;wreg free
  8879                           
  8880                           ;stkvar	_l @ sp[(-17)+7]
  8881  0145F8  0EF6               	movlw	-10
  8882  0145FA  0060  F0D7  FFE3   	movff	btemp,plusw1
  8883  014600  0EF7               	movlw	-9
  8884  014602  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8885                           
  8886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8887                           ;stkvar	_p @ sp[(-17)+9]
  8888  014608  0EF8               	movlw	-8
  8889  01460A  0060  F083  FFE3   	movff	_prec,plusw1
  8890  014610  0EF9               	movlw	-7
  8891  014612  0060  F087  FFE3   	movff	_prec+1,plusw1
  8892                           
  8893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8894                           ;stkvar	_p @ sp[(-17)+9]
  8895  014618  0EF9               	movlw	-7
  8896  01461A  BEE3               	btfsc	plusw1,7,c
  8897  01461C  D023               	goto	l1867
  8898                           
  8899                           ;stkvar	_l @ sp[(-17)+7]
  8900                           ;stkvar	_p @ sp[(-17)+9]
  8901  01461E  50E1               	movf	fsr1l,w,c
  8902  014620  0FF8               	addlw	-8
  8903  014622  6ED9               	movwf	fsr2l,c
  8904  014624  50E2               	movf	fsr1h,w,c
  8905  014626  6EDA               	movwf	fsr2h,c
  8906  014628  0EFF               	movlw	255
  8907  01462A  22DA               	addwfc	fsr2h,f,c
  8908  01462C  0EF6               	movlw	-10
  8909  01462E  50E3               	movf	plusw1,w,c
  8910  014630  5CDE               	subwf	postinc2,w,c
  8911  014632  50DE               	movf	postinc2,w,c
  8912  014634  0A80               	xorlw	128
  8913  014636  6E35               	movwf	btemp^0,c
  8914  014638  0EF7               	movlw	-9
  8915  01463A  50E3               	movf	plusw1,w,c
  8916  01463C  0A80               	xorlw	128
  8917  01463E  5835               	subwfb	btemp^0,w,c
  8918  014640  B0D8               	btfsc	status,0,c
  8919  014642  D010               	goto	l1867
  8920                           
  8921                           ;stkvar	_p @ sp[(-17)+9]
  8922                           ;stkvar	_l @ sp[(-17)+7]
  8923  014644  0EF8               	movlw	-8
  8924  014646  006F FF8C  F035    	movff	plusw1,btemp
  8925  01464C  0EF6               	movlw	-10
  8926  01464E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8927  014654  0EF9               	movlw	-7
  8928  014656  006F FF8C  F035    	movff	plusw1,btemp
  8929  01465C  0EF7               	movlw	-9
  8930  01465E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8931  014664                     l1867:
  8932                           
  8933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8934                           ;stkvar	_l @ sp[(-17)+7]
  8935                           ;stkvar	_p @ sp[(-17)+9]
  8936  014664  0EF6               	movlw	-10
  8937  014666  006F FF8C  F035    	movff	plusw1,btemp
  8938  01466C  0EF8               	movlw	-8
  8939  01466E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8940  014674  0EF7               	movlw	-9
  8941  014676  006F FF8C  F035    	movff	plusw1,btemp
  8942  01467C  0EF9               	movlw	-7
  8943  01467E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8944                           
  8945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8946                           ;stkvar	_w @ sp[(-17)+13]
  8947  014684  0EFC               	movlw	-4
  8948  014686  0060  F07B  FFE3   	movff	_width,plusw1
  8949  01468C  0EFD               	movlw	-3
  8950  01468E  0060  F07F  FFE3   	movff	_width+1,plusw1
  8951                           
  8952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8953  014694  A022               	btfss	_flags^0,0,c
  8954  014696  D01F               	goto	l9317
  8955  014698  D031               	goto	u9150
  8956  01469A                     l9313:
  8957                           
  8958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8959                           ;stkvar	_fp @ sp[(-17)+-2]
  8960  01469A  0EED               	movlw	-19
  8961  01469C  006F FF8F FFE6     	movff	plusw1,postinc1
  8962  0146A2  006F FF8F FFE6     	movff	plusw1,postinc1
  8963  0146A8  0E20               	movlw	32
  8964  0146AA  6EE6               	movwf	postinc1,c
  8965  0146AC  0E00               	movlw	0
  8966  0146AE  6EE6               	movwf	postinc1,c
  8967  0146B0  EC37  F0B0         	call	_fputc	;wreg free
  8968                           
  8969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8970                           ;stkvar	_l @ sp[(-17)+7]
  8971  0146B4  0EF6               	movlw	-10
  8972  0146B6  50E3               	movf	plusw1,w,c
  8973  0146B8  0F01               	addlw	1
  8974  0146BA  6E35               	movwf	btemp^0,c
  8975  0146BC  0EF6               	movlw	-10
  8976  0146BE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8977  0146C4  6A35               	clrf	btemp^0,c
  8978  0146C6  0EF7               	movlw	-9
  8979  0146C8  50E3               	movf	plusw1,w,c
  8980  0146CA  2035               	addwfc	btemp^0,w,c
  8981  0146CC  6E35               	movwf	btemp^0,c
  8982  0146CE  0EF7               	movlw	-9
  8983  0146D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  8984  0146D6                     l9317:
  8985                           
  8986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8987                           ;stkvar	_w @ sp[(-17)+13]
  8988                           ;stkvar	_l @ sp[(-17)+7]
  8989  0146D6  50E1               	movf	fsr1l,w,c
  8990  0146D8  0FF6               	addlw	-10
  8991  0146DA  6ED9               	movwf	fsr2l,c
  8992  0146DC  50E2               	movf	fsr1h,w,c
  8993  0146DE  6EDA               	movwf	fsr2h,c
  8994  0146E0  0EFF               	movlw	255
  8995  0146E2  22DA               	addwfc	fsr2h,f,c
  8996  0146E4  0EFC               	movlw	-4
  8997  0146E6  50E3               	movf	plusw1,w,c
  8998  0146E8  5CDE               	subwf	postinc2,w,c
  8999  0146EA  50DE               	movf	postinc2,w,c
  9000  0146EC  0A80               	xorlw	128
  9001  0146EE  6E35               	movwf	btemp^0,c
  9002  0146F0  0EFD               	movlw	-3
  9003  0146F2  50E3               	movf	plusw1,w,c
  9004  0146F4  0A80               	xorlw	128
  9005  0146F6  5835               	subwfb	btemp^0,w,c
  9006  0146F8  A0D8               	btfss	status,0,c
  9007  0146FA  D7CF               	goto	l9313
  9008  0146FC                     u9150:
  9009                           
  9010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9011                           ;stkvar	_i @ sp[(-17)+15]
  9012  0146FC  0EFE               	movlw	-2
  9013  0146FE  6AE3               	clrf	plusw1,c
  9014  014700  0EFF               	movlw	-1
  9015  014702  6AE3               	clrf	plusw1,c
  9016                           
  9017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9018  014704  D045               	goto	l9327
  9019  014706                     l9321:
  9020                           
  9021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9022                           ;stkvar	_fp @ sp[(-17)+-2]
  9023  014706  0EED               	movlw	-19
  9024  014708  006F FF8F FFE6     	movff	plusw1,postinc1
  9025  01470E  006F FF8F FFE6     	movff	plusw1,postinc1
  9026                           
  9027                           ;stkvar	_cp @ sp[(-19)+11]
  9028  014714  0EF8               	movlw	-8
  9029  014716  006F FF8F FFF6     	movff	plusw1,tblptrl
  9030  01471C  0EF9               	movlw	-7
  9031  01471E  006F FF8F FFF7     	movff	plusw1,tblptrh
  9032  014724  0E00               	movlw	low (__mediumconst shr (0+16))
  9033  014726  6EF8               	movwf	tblptru,c
  9034  014728  0E1F               	movlw	(high __ramtop+-1)
  9035  01472A  64F7               	cpfsgt	tblptrh,c
  9036  01472C  D003               	bra	u9167
  9037  01472E  0008               	tblrd		*
  9038  014730  50F5               	movf	tablat,w,c
  9039  014732  D007               	bra	u9160
  9040  014734                     u9167:
  9041  014734  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9042  01473A  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9043  014740  50EF               	movf	indf0,w,c
  9044  014742                     u9160:
  9045  014742  6EE6               	movwf	postinc1,c
  9046  014744  0E00               	movlw	0
  9047  014746  6EE6               	movwf	postinc1,c
  9048  014748  EC37  F0B0         	call	_fputc	;wreg free
  9049                           
  9050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9051                           ;stkvar	_cp @ sp[(-17)+11]
  9052  01474C  0EFA               	movlw	-6
  9053  01474E  50E3               	movf	plusw1,w,c
  9054  014750  0F01               	addlw	1
  9055  014752  6E35               	movwf	btemp^0,c
  9056  014754  0EFA               	movlw	-6
  9057  014756  0060  F0D7  FFE3   	movff	btemp,plusw1
  9058  01475C  6A35               	clrf	btemp^0,c
  9059  01475E  0EFB               	movlw	-5
  9060  014760  50E3               	movf	plusw1,w,c
  9061  014762  2035               	addwfc	btemp^0,w,c
  9062  014764  6E35               	movwf	btemp^0,c
  9063  014766  0EFB               	movlw	-5
  9064  014768  0060  F0D7  FFE3   	movff	btemp,plusw1
  9065                           
  9066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9067                           ;stkvar	_i @ sp[(-17)+15]
  9068  01476E  0EFE               	movlw	-2
  9069  014770  50E3               	movf	plusw1,w,c
  9070  014772  0F01               	addlw	1
  9071  014774  6E35               	movwf	btemp^0,c
  9072  014776  0EFE               	movlw	-2
  9073  014778  0060  F0D7  FFE3   	movff	btemp,plusw1
  9074  01477E  6A35               	clrf	btemp^0,c
  9075  014780  0EFF               	movlw	-1
  9076  014782  50E3               	movf	plusw1,w,c
  9077  014784  2035               	addwfc	btemp^0,w,c
  9078  014786  6E35               	movwf	btemp^0,c
  9079  014788  0EFF               	movlw	-1
  9080  01478A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9081  014790                     l9327:
  9082                           
  9083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9084                           ;stkvar	_p @ sp[(-17)+9]
  9085                           ;stkvar	_i @ sp[(-17)+15]
  9086  014790  50E1               	movf	fsr1l,w,c
  9087  014792  0FFE               	addlw	-2
  9088  014794  6ED9               	movwf	fsr2l,c
  9089  014796  50E2               	movf	fsr1h,w,c
  9090  014798  6EDA               	movwf	fsr2h,c
  9091  01479A  0EFF               	movlw	255
  9092  01479C  22DA               	addwfc	fsr2h,f,c
  9093  01479E  0EF8               	movlw	-8
  9094  0147A0  50E3               	movf	plusw1,w,c
  9095  0147A2  5CDE               	subwf	postinc2,w,c
  9096  0147A4  50DE               	movf	postinc2,w,c
  9097  0147A6  0A80               	xorlw	128
  9098  0147A8  6E35               	movwf	btemp^0,c
  9099  0147AA  0EF9               	movlw	-7
  9100  0147AC  50E3               	movf	plusw1,w,c
  9101  0147AE  0A80               	xorlw	128
  9102  0147B0  5835               	subwfb	btemp^0,w,c
  9103  0147B2  A0D8               	btfss	status,0,c
  9104  0147B4  D7A8               	goto	l9321
  9105                           
  9106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9107  0147B6  B022               	btfsc	_flags^0,0,c
  9108  0147B8  D01F               	goto	l9335
  9109  0147BA  D031               	goto	u9190
  9110  0147BC                     l9331:
  9111                           
  9112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9113                           ;stkvar	_fp @ sp[(-17)+-2]
  9114  0147BC  0EED               	movlw	-19
  9115  0147BE  006F FF8F FFE6     	movff	plusw1,postinc1
  9116  0147C4  006F FF8F FFE6     	movff	plusw1,postinc1
  9117  0147CA  0E20               	movlw	32
  9118  0147CC  6EE6               	movwf	postinc1,c
  9119  0147CE  0E00               	movlw	0
  9120  0147D0  6EE6               	movwf	postinc1,c
  9121  0147D2  EC37  F0B0         	call	_fputc	;wreg free
  9122                           
  9123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9124                           ;stkvar	_l @ sp[(-17)+7]
  9125  0147D6  0EF6               	movlw	-10
  9126  0147D8  50E3               	movf	plusw1,w,c
  9127  0147DA  0F01               	addlw	1
  9128  0147DC  6E35               	movwf	btemp^0,c
  9129  0147DE  0EF6               	movlw	-10
  9130  0147E0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9131  0147E6  6A35               	clrf	btemp^0,c
  9132  0147E8  0EF7               	movlw	-9
  9133  0147EA  50E3               	movf	plusw1,w,c
  9134  0147EC  2035               	addwfc	btemp^0,w,c
  9135  0147EE  6E35               	movwf	btemp^0,c
  9136  0147F0  0EF7               	movlw	-9
  9137  0147F2  0060  F0D7  FFE3   	movff	btemp,plusw1
  9138  0147F8                     l9335:
  9139                           
  9140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9141                           ;stkvar	_w @ sp[(-17)+13]
  9142                           ;stkvar	_l @ sp[(-17)+7]
  9143  0147F8  50E1               	movf	fsr1l,w,c
  9144  0147FA  0FF6               	addlw	-10
  9145  0147FC  6ED9               	movwf	fsr2l,c
  9146  0147FE  50E2               	movf	fsr1h,w,c
  9147  014800  6EDA               	movwf	fsr2h,c
  9148  014802  0EFF               	movlw	255
  9149  014804  22DA               	addwfc	fsr2h,f,c
  9150  014806  0EFC               	movlw	-4
  9151  014808  50E3               	movf	plusw1,w,c
  9152  01480A  5CDE               	subwf	postinc2,w,c
  9153  01480C  50DE               	movf	postinc2,w,c
  9154  01480E  0A80               	xorlw	128
  9155  014810  6E35               	movwf	btemp^0,c
  9156  014812  0EFD               	movlw	-3
  9157  014814  50E3               	movf	plusw1,w,c
  9158  014816  0A80               	xorlw	128
  9159  014818  5835               	subwfb	btemp^0,w,c
  9160  01481A  A0D8               	btfss	status,0,c
  9161  01481C  D7CF               	goto	l9331
  9162  01481E                     u9190:
  9163                           
  9164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9165                           ;stkvar	_l @ sp[(-17)+7]
  9166  01481E  0EF6               	movlw	-10
  9167  014820  006F FF8C  F035    	movff	plusw1,btemp
  9168  014826  0EF7               	movlw	-9
  9169  014828  006F FF8C  F036    	movff	plusw1,btemp+1
  9170                           
  9171                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9172  01482E  0EEB               	movlw	235
  9173  014830  26E1               	addwf	fsr1l,f,c
  9174  014832  0EFF               	movlw	255
  9175  014834  22E2               	addwfc	fsr1h,f,c
  9176  014836  0012               	return		;funcret
  9177  014838                     __end_of_stoa:
  9178                           	opt callstack 0
  9179                           
  9180 ;; *************** function _efgtoa *****************
  9181 ;; Defined at:
  9182 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9185 ;;		 -> f(6), NULL(0), 
  9186 ;;  f               4  [STACK] PTR struct _IO_FILE
  9187 ;;  c               1  [STACK] unsigned char 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  u               4  [STACK] unsigned char 
  9190 ;;  g               4  [STACK] unsigned char 
  9191 ;;  l               4  [STACK] unsigned char 
  9192 ;;  h               4  [STACK] unsigned char 
  9193 ;;  ou              4  [STACK] unsigned char 
  9194 ;;  n               2  [STACK] int 
  9195 ;;  e               2  [STACK] int 
  9196 ;;  i               2  [STACK] int 
  9197 ;;  w               2  [STACK] int 
  9198 ;;  p               2  [STACK] int 
  9199 ;;  sign            2  [STACK] int 
  9200 ;;  d               2  [STACK] int 
  9201 ;;  ne              2  [STACK] int 
  9202 ;;  m               2  [STACK] int 
  9203 ;;  pp              2  [STACK] int 
  9204 ;;  t               2  [STACK] int 
  9205 ;;  mode            1  [STACK] unsigned char 
  9206 ;;  nmode           1  [STACK] unsigned char 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  2  [STACK] int 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/4
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9220 ;;Total ram usage:        0 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:   11
  9223 ;; This function calls:
  9224 ;;		___awdiv
  9225 ;;		___awmod
  9226 ;;		___fladd
  9227 ;;		___fldiv
  9228 ;;		___fleq
  9229 ;;		___flge
  9230 ;;		___flmul
  9231 ;;		___flneg
  9232 ;;		___flsub
  9233 ;;		___fltol
  9234 ;;		___fpclassifyf
  9235 ;;		_floorf
  9236 ;;		_isupper
  9237 ;;		_pad
  9238 ;;		_strcpy
  9239 ;;		_tolower
  9240 ;; This function is called by:
  9241 ;;		_vfpfcnvrt
  9242 ;; This function uses a reentrant model
  9243 ;;
  9244                           
  9245                           	psect	text39
  9246  010000                     __ptext39:
  9247                           	opt callstack 0
  9248  010000                     _efgtoa:
  9249                           	opt callstack 0
  9250                           
  9251                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9252  010000  0E38               	movlw	56
  9253  010002  26E1               	addwf	fsr1l,f,c
  9254  010004  0E00               	movlw	0
  9255  010006  22E2               	addwfc	fsr1h,f,c
  9256                           
  9257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  9258                           ;stkvar	_sign @ sp[(-56)+42]
  9259                           
  9260                           ;incstack = 0
  9261  010008  0EF2               	movlw	-14
  9262  01000A  6AE3               	clrf	plusw1,c
  9263  01000C  0EF3               	movlw	-13
  9264  01000E  6AE3               	clrf	plusw1,c
  9265                           
  9266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  9267                           ;stkvar	_f @ sp[(-56)+-6]
  9268  010010  0EC2               	movlw	-62
  9269  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
  9270  010018  0EC3               	movlw	-61
  9271  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
  9272  010020  0EC4               	movlw	-60
  9273  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
  9274  010028  0EC5               	movlw	-59
  9275  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
  9276                           
  9277                           ;stkvar	_g @ sp[(-56)+16]
  9278  010030  0ED8               	movlw	-40
  9279  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9280  010038  0ED9               	movlw	-39
  9281  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9282  010040  0EDA               	movlw	-38
  9283  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9284  010048  0EDB               	movlw	-37
  9285  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9286                           
  9287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  9288                           ;stkvar	_g @ sp[(-56)+16]
  9289  010050  0EDB               	movlw	-37
  9290  010052  AEE3               	btfss	plusw1,7,c
  9291  010054  D02B               	goto	l8995
  9292                           
  9293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  9294  010056  0E01               	movlw	1
  9295  010058  6E3F               	movwf	(btemp+10)^0,c
  9296  01005A  0E00               	movlw	0
  9297  01005C  6E40               	movwf	(btemp+11)^0,c
  9298                           
  9299                           ;stkvar	_sign @ sp[(-56)+42]
  9300  01005E  0EF2               	movlw	-14
  9301  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9302  010066  0EF3               	movlw	-13
  9303  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
  9304                           
  9305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  9306                           ;stkvar	_g @ sp[(-56)+16]
  9307  01006E  0ED8               	movlw	-40
  9308  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  9309  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  9310  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  9311  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  9312  010088  EC9A  F0BA         	call	___flneg	;wreg free
  9313                           
  9314                           ;stkvar	_g @ sp[(-56)+16]
  9315  01008C  0ED8               	movlw	-40
  9316  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9317  010094  0ED9               	movlw	-39
  9318  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9319  01009C  0EDA               	movlw	-38
  9320  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9321  0100A4  0EDB               	movlw	-37
  9322  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9323  0100AC                     l8995:
  9324                           
  9325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  9326                           ;stkvar	_n @ sp[(-56)+32]
  9327  0100AC  0EE8               	movlw	-24
  9328  0100AE  6AE3               	clrf	plusw1,c
  9329  0100B0  0EE9               	movlw	-23
  9330  0100B2  6AE3               	clrf	plusw1,c
  9331                           
  9332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  9333                           ;stkvar	_w @ sp[(-56)+38]
  9334  0100B4  0EEE               	movlw	-18
  9335  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
  9336  0100BC  0EEF               	movlw	-17
  9337  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
  9338                           
  9339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  9340                           ;stkvar	_sign @ sp[(-56)+42]
  9341  0100C4  0EF2               	movlw	-14
  9342  0100C6  006F FF8C  F035    	movff	plusw1,btemp
  9343  0100CC  0EF3               	movlw	-13
  9344  0100CE  50E3               	movf	plusw1,w,c
  9345  0100D0  1035               	iorwf	btemp^0,w,c
  9346  0100D2  A4D8               	btfss	status,2,c
  9347  0100D4  D002               	goto	u8600
  9348  0100D6  A422               	btfss	_flags^0,2,c
  9349  0100D8  D036               	goto	l9015
  9350  0100DA                     u8600:
  9351                           
  9352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  9353                           ;stkvar	_sign @ sp[(-56)+42]
  9354  0100DA  0EF2               	movlw	-14
  9355  0100DC  006F FF8C  F035    	movff	plusw1,btemp
  9356  0100E2  0EF3               	movlw	-13
  9357  0100E4  50E3               	movf	plusw1,w,c
  9358  0100E6  1035               	iorwf	btemp^0,w,c
  9359  0100E8  A4D8               	btfss	status,2,c
  9360  0100EA  D002               	goto	l9007
  9361  0100EC  0E2B               	movlw	43
  9362  0100EE  D001               	goto	L7
  9363  0100F0                     l9007:
  9364  0100F0  0E2D               	movlw	45
  9365  0100F2                     L7:
  9366  0100F2  6E3F               	movwf	(btemp+10)^0,c
  9367  0100F4  0E00               	movlw	0
  9368  0100F6  6E40               	movwf	(btemp+11)^0,c
  9369                           
  9370                           ;stkvar	_efgtoa$4103 @ sp[(-56)+10]
  9371  0100F8  0ED2               	movlw	-46
  9372  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9373  010100  0ED3               	movlw	-45
  9374  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
  9375                           
  9376                           ;stkvar	_efgtoa$4103 @ sp[(-56)+10]
  9377  010108  0ED2               	movlw	-46
  9378  01010A  006F FF8C  F1A4    	movff	plusw1,_dbuf
  9379                           
  9380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  9381                           ;stkvar	_n @ sp[(-56)+32]
  9382  010110  0EE8               	movlw	-24
  9383  010112  50E3               	movf	plusw1,w,c
  9384  010114  0F01               	addlw	1
  9385  010116  6E35               	movwf	btemp^0,c
  9386  010118  0EE8               	movlw	-24
  9387  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9388  010120  6A35               	clrf	btemp^0,c
  9389  010122  0EE9               	movlw	-23
  9390  010124  50E3               	movf	plusw1,w,c
  9391  010126  2035               	addwfc	btemp^0,w,c
  9392  010128  6E35               	movwf	btemp^0,c
  9393  01012A  0EE9               	movlw	-23
  9394  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9395                           
  9396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  9397                           ;stkvar	_w @ sp[(-56)+38]
  9398  010132  50E1               	movf	fsr1l,w,c
  9399  010134  0FEE               	addlw	-18
  9400  010136  6ED9               	movwf	fsr2l,c
  9401  010138  50E2               	movf	fsr1h,w,c
  9402  01013A  6EDA               	movwf	fsr2h,c
  9403  01013C  0EFF               	movlw	255
  9404  01013E  22DA               	addwfc	fsr2h,f,c
  9405  010140  06DE               	decf	postinc2,f,c
  9406  010142  0E00               	movlw	0
  9407  010144  5ADD               	subwfb	postdec2,f,c
  9408  010146                     l9015:
  9409                           
  9410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9411                           ;stkvar	_g @ sp[(-56)+16]
  9412  010146  0ED8               	movlw	-40
  9413  010148  006F FF8F FFE6     	movff	plusw1,postinc1
  9414  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
  9415  010154  006F FF8F FFE6     	movff	plusw1,postinc1
  9416  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
  9417  010160  ECC4  F0AC         	call	___fpclassifyf	;wreg free
  9418  010164  0435               	decf	btemp^0,w,c
  9419  010166  1036               	iorwf	(btemp+1)^0,w,c
  9420  010168  A4D8               	btfss	status,2,c
  9421  01016A  D076               	goto	l9033
  9422  01016C  0EBF               	movlw	191
  9423  01016E  6E3F               	movwf	(btemp+10)^0,c
  9424  010170  0EFF               	movlw	255
  9425  010172  6E40               	movwf	(btemp+11)^0,c
  9426                           
  9427                           ;stkvar	_c @ sp[(-56)+-7]
  9428  010174  0EC1               	movlw	-63
  9429  010176  50E3               	movf	plusw1,w,c
  9430  010178  6E3D               	movwf	(btemp+8)^0,c
  9431  01017A  6A3E               	clrf	(btemp+9)^0,c
  9432  01017C  503F               	movf	(btemp+10)^0,w,c
  9433  01017E  263D               	addwf	(btemp+8)^0,f,c
  9434  010180  5040               	movf	(btemp+11)^0,w,c
  9435  010182  223E               	addwfc	(btemp+9)^0,f,c
  9436  010184  503E               	movf	(btemp+9)^0,w,c
  9437  010186  E106               	bnz	u8630
  9438  010188  0E1A               	movlw	26
  9439  01018A  5C3D               	subwf	(btemp+8)^0,w,c
  9440  01018C  B0D8               	btfsc	status,0,c
  9441  01018E  D002               	goto	u8630
  9442  010190  0E01               	movlw	1
  9443  010192  D001               	goto	u8640
  9444  010194                     u8630:
  9445  010194  0E00               	movlw	0
  9446  010196                     u8640:
  9447  010196  6E3F               	movwf	(btemp+10)^0,c
  9448  010198  6A40               	clrf	(btemp+11)^0,c
  9449                           
  9450                           ;stkvar	_efgtoa$4104 @ sp[(-56)+8]
  9451  01019A  0ED0               	movlw	-48
  9452  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9453  0101A2  0ED1               	movlw	-47
  9454  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  9455                           
  9456                           ;stkvar	_efgtoa$4104 @ sp[(-56)+8]
  9457  0101AA  0ED0               	movlw	-48
  9458  0101AC  006F FF8C  F035    	movff	plusw1,btemp
  9459  0101B2  0ED1               	movlw	-47
  9460  0101B4  50E3               	movf	plusw1,w,c
  9461  0101B6  1035               	iorwf	btemp^0,w,c
  9462  0101B8  B4D8               	btfsc	status,2,c
  9463  0101BA  D017               	goto	l9025
  9464                           
  9465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  9466  0101BC  0EE2               	movlw	low STR_32
  9467  0101BE  6EE6               	movwf	postinc1,c
  9468  0101C0  0EFF               	movlw	high STR_32
  9469  0101C2  6EE6               	movwf	postinc1,c
  9470                           
  9471                           ;stkvar	_n @ sp[(-58)+32]
  9472  0101C4  0EA4               	movlw	low _dbuf
  9473  0101C6  6E3F               	movwf	(btemp+10)^0,c
  9474  0101C8  0E01               	movlw	high _dbuf
  9475  0101CA  6E40               	movwf	(btemp+11)^0,c
  9476  0101CC  0EE6               	movlw	-26
  9477  0101CE  50E3               	movf	plusw1,w,c
  9478  0101D0  263F               	addwf	(btemp+10)^0,f,c
  9479  0101D2  0EE7               	movlw	-25
  9480  0101D4  50E3               	movf	plusw1,w,c
  9481  0101D6  2240               	addwfc	(btemp+11)^0,f,c
  9482  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9483  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
  9484  0101E4  EC60  F0B3         	call	_strcpy	;wreg free
  9485                           
  9486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  9487  0101E8  D016               	goto	l9027
  9488  0101EA                     l9025:
  9489                           
  9490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  9491  0101EA  0EEA               	movlw	low STR_33
  9492  0101EC  6EE6               	movwf	postinc1,c
  9493  0101EE  0EFF               	movlw	high STR_33
  9494  0101F0  6EE6               	movwf	postinc1,c
  9495                           
  9496                           ;stkvar	_n @ sp[(-58)+32]
  9497  0101F2  0EA4               	movlw	low _dbuf
  9498  0101F4  6E3F               	movwf	(btemp+10)^0,c
  9499  0101F6  0E01               	movlw	high _dbuf
  9500  0101F8  6E40               	movwf	(btemp+11)^0,c
  9501  0101FA  0EE6               	movlw	-26
  9502  0101FC  50E3               	movf	plusw1,w,c
  9503  0101FE  263F               	addwf	(btemp+10)^0,f,c
  9504  010200  0EE7               	movlw	-25
  9505  010202  50E3               	movf	plusw1,w,c
  9506  010204  2240               	addwfc	(btemp+11)^0,f,c
  9507  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9508  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
  9509  010212  EC60  F0B3         	call	_strcpy	;wreg free
  9510  010216                     l9027:
  9511                           
  9512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  9513                           ;stkvar	_w @ sp[(-56)+38]
  9514  010216  50E1               	movf	fsr1l,w,c
  9515  010218  0FEE               	addlw	-18
  9516  01021A  6ED9               	movwf	fsr2l,c
  9517  01021C  50E2               	movf	fsr1h,w,c
  9518  01021E  6EDA               	movwf	fsr2h,c
  9519  010220  0EFF               	movlw	255
  9520  010222  22DA               	addwfc	fsr2h,f,c
  9521  010224  0EFD               	movlw	253
  9522  010226  26DE               	addwf	postinc2,f,c
  9523  010228  0EFF               	movlw	255
  9524  01022A  22DD               	addwfc	postdec2,f,c
  9525  01022C                     l9029:
  9526                           
  9527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  9528                           ;stkvar	_w @ sp[(-56)+38]
  9529  01022C  0EEE               	movlw	-18
  9530  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
  9531  010234  006F FF8F FFE6     	movff	plusw1,postinc1
  9532  01023A  0EA4               	movlw	low _dbuf
  9533  01023C  6EE6               	movwf	postinc1,c
  9534  01023E  0E01               	movlw	high _dbuf
  9535  010240  6EE6               	movwf	postinc1,c
  9536                           
  9537                           ;stkvar	_fp @ sp[(-60)+-2]
  9538  010242  0EC2               	movlw	-62
  9539  010244  006F FF8F FFE6     	movff	plusw1,postinc1
  9540  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
  9541  010250  EC55  F0B1         	call	_pad	;wreg free
  9542  010254  EF1D  F089         	goto	l1785
  9543  010258                     l9033:
  9544                           
  9545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9546                           ;stkvar	_g @ sp[(-56)+16]
  9547  010258  0ED8               	movlw	-40
  9548  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
  9549  010260  006F FF8F FFE6     	movff	plusw1,postinc1
  9550  010266  006F FF8F FFE6     	movff	plusw1,postinc1
  9551  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
  9552  010272  ECC4  F0AC         	call	___fpclassifyf	;wreg free
  9553  010276  5035               	movf	btemp^0,w,c
  9554  010278  1036               	iorwf	(btemp+1)^0,w,c
  9555  01027A  A4D8               	btfss	status,2,c
  9556  01027C  D056               	goto	l9051
  9557  01027E  0EBF               	movlw	191
  9558  010280  6E3F               	movwf	(btemp+10)^0,c
  9559  010282  0EFF               	movlw	255
  9560  010284  6E40               	movwf	(btemp+11)^0,c
  9561                           
  9562                           ;stkvar	_c @ sp[(-56)+-7]
  9563  010286  0EC1               	movlw	-63
  9564  010288  50E3               	movf	plusw1,w,c
  9565  01028A  6E3D               	movwf	(btemp+8)^0,c
  9566  01028C  6A3E               	clrf	(btemp+9)^0,c
  9567  01028E  503F               	movf	(btemp+10)^0,w,c
  9568  010290  263D               	addwf	(btemp+8)^0,f,c
  9569  010292  5040               	movf	(btemp+11)^0,w,c
  9570  010294  223E               	addwfc	(btemp+9)^0,f,c
  9571  010296  503E               	movf	(btemp+9)^0,w,c
  9572  010298  E106               	bnz	u8670
  9573  01029A  0E1A               	movlw	26
  9574  01029C  5C3D               	subwf	(btemp+8)^0,w,c
  9575  01029E  B0D8               	btfsc	status,0,c
  9576  0102A0  D002               	goto	u8670
  9577  0102A2  0E01               	movlw	1
  9578  0102A4  D001               	goto	u8680
  9579  0102A6                     u8670:
  9580  0102A6  0E00               	movlw	0
  9581  0102A8                     u8680:
  9582  0102A8  6E3F               	movwf	(btemp+10)^0,c
  9583  0102AA  6A40               	clrf	(btemp+11)^0,c
  9584                           
  9585                           ;stkvar	_efgtoa$4108 @ sp[(-56)+6]
  9586  0102AC  0ECE               	movlw	-50
  9587  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9588  0102B4  0ECF               	movlw	-49
  9589  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
  9590                           
  9591                           ;stkvar	_efgtoa$4108 @ sp[(-56)+6]
  9592  0102BC  0ECE               	movlw	-50
  9593  0102BE  006F FF8C  F035    	movff	plusw1,btemp
  9594  0102C4  0ECF               	movlw	-49
  9595  0102C6  50E3               	movf	plusw1,w,c
  9596  0102C8  1035               	iorwf	btemp^0,w,c
  9597  0102CA  B4D8               	btfsc	status,2,c
  9598  0102CC  D017               	goto	l9043
  9599                           
  9600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  9601  0102CE  0EE6               	movlw	low STR_36
  9602  0102D0  6EE6               	movwf	postinc1,c
  9603  0102D2  0EFF               	movlw	high STR_36
  9604  0102D4  6EE6               	movwf	postinc1,c
  9605                           
  9606                           ;stkvar	_n @ sp[(-58)+32]
  9607  0102D6  0EA4               	movlw	low _dbuf
  9608  0102D8  6E3F               	movwf	(btemp+10)^0,c
  9609  0102DA  0E01               	movlw	high _dbuf
  9610  0102DC  6E40               	movwf	(btemp+11)^0,c
  9611  0102DE  0EE6               	movlw	-26
  9612  0102E0  50E3               	movf	plusw1,w,c
  9613  0102E2  263F               	addwf	(btemp+10)^0,f,c
  9614  0102E4  0EE7               	movlw	-25
  9615  0102E6  50E3               	movf	plusw1,w,c
  9616  0102E8  2240               	addwfc	(btemp+11)^0,f,c
  9617  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9618  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
  9619  0102F6  EC60  F0B3         	call	_strcpy	;wreg free
  9620                           
  9621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  9622  0102FA  D78D               	goto	l9027
  9623  0102FC                     l9043:
  9624                           
  9625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  9626  0102FC  0EEE               	movlw	low STR_37
  9627  0102FE  6EE6               	movwf	postinc1,c
  9628  010300  0EFF               	movlw	high STR_37
  9629  010302  6EE6               	movwf	postinc1,c
  9630                           
  9631                           ;stkvar	_n @ sp[(-58)+32]
  9632  010304  0EA4               	movlw	low _dbuf
  9633  010306  6E3F               	movwf	(btemp+10)^0,c
  9634  010308  0E01               	movlw	high _dbuf
  9635  01030A  6E40               	movwf	(btemp+11)^0,c
  9636  01030C  0EE6               	movlw	-26
  9637  01030E  50E3               	movf	plusw1,w,c
  9638  010310  263F               	addwf	(btemp+10)^0,f,c
  9639  010312  0EE7               	movlw	-25
  9640  010314  50E3               	movf	plusw1,w,c
  9641  010316  2240               	addwfc	(btemp+11)^0,f,c
  9642  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9643  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
  9644  010324  EC60  F0B3         	call	_strcpy	;wreg free
  9645  010328  D776               	goto	l9027
  9646  01032A                     l9051:
  9647                           
  9648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  9649  01032A  0E00               	movlw	0
  9650  01032C  6E3D               	movwf	(btemp+8)^0,c
  9651  01032E  0E00               	movlw	0
  9652  010330  6E3E               	movwf	(btemp+9)^0,c
  9653  010332  0E80               	movlw	128
  9654  010334  6E3F               	movwf	(btemp+10)^0,c
  9655  010336  0E3F               	movlw	63
  9656  010338  6E40               	movwf	(btemp+11)^0,c
  9657                           
  9658                           ;stkvar	_u @ sp[(-56)+12]
  9659  01033A  0ED4               	movlw	-44
  9660  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9661  010342  0ED5               	movlw	-43
  9662  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9663  01034A  0ED6               	movlw	-42
  9664  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9665  010352  0ED7               	movlw	-41
  9666  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
  9667                           
  9668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  9669                           ;stkvar	_e @ sp[(-56)+34]
  9670  01035A  0EEA               	movlw	-22
  9671  01035C  6AE3               	clrf	plusw1,c
  9672  01035E  0EEB               	movlw	-21
  9673  010360  6AE3               	clrf	plusw1,c
  9674                           
  9675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  9676  010362  0E00               	movlw	0
  9677  010364  6EE6               	movwf	postinc1,c
  9678  010366  0E00               	movlw	0
  9679  010368  6EE6               	movwf	postinc1,c
  9680  01036A  0E00               	movlw	0
  9681  01036C  6EE6               	movwf	postinc1,c
  9682  01036E  0E00               	movlw	0
  9683  010370  6EE6               	movwf	postinc1,c
  9684                           
  9685                           ;stkvar	_g @ sp[(-60)+16]
  9686  010372  0ED4               	movlw	-44
  9687  010374  006F FF8F FFE6     	movff	plusw1,postinc1
  9688  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
  9689  010380  006F FF8F FFE6     	movff	plusw1,postinc1
  9690  010386  006F FF8F FFE6     	movff	plusw1,postinc1
  9691  01038C  EC2D  F0B4         	call	___fleq	;wreg free
  9692  010390  A035               	btfss	btemp& (0+255),0,c
  9693  010392  D039               	goto	l9063
  9694  010394  D0BC               	goto	u8720
  9695  010396                     l9059:
  9696                           
  9697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  9698  010396  0E00               	movlw	0
  9699  010398  6EE6               	movwf	postinc1,c
  9700  01039A  0E00               	movlw	0
  9701  01039C  6EE6               	movwf	postinc1,c
  9702  01039E  0E20               	movlw	32
  9703  0103A0  6EE6               	movwf	postinc1,c
  9704  0103A2  0E41               	movlw	65
  9705  0103A4  6EE6               	movwf	postinc1,c
  9706                           
  9707                           ;stkvar	_u @ sp[(-60)+12]
  9708  0103A6  0ED0               	movlw	-48
  9709  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9710  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
  9711  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
  9712  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
  9713  0103C0  ECC1  F08E         	call	___flmul	;wreg free
  9714                           
  9715                           ;stkvar	_u @ sp[(-56)+12]
  9716  0103C4  0ED4               	movlw	-44
  9717  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9718  0103CC  0ED5               	movlw	-43
  9719  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9720  0103D4  0ED6               	movlw	-42
  9721  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9722  0103DC  0ED7               	movlw	-41
  9723  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9724                           
  9725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
  9726                           ;stkvar	_e @ sp[(-56)+34]
  9727  0103E4  0EEA               	movlw	-22
  9728  0103E6  50E3               	movf	plusw1,w,c
  9729  0103E8  0F01               	addlw	1
  9730  0103EA  6E35               	movwf	btemp^0,c
  9731  0103EC  0EEA               	movlw	-22
  9732  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
  9733  0103F4  6A35               	clrf	btemp^0,c
  9734  0103F6  0EEB               	movlw	-21
  9735  0103F8  50E3               	movf	plusw1,w,c
  9736  0103FA  2035               	addwfc	btemp^0,w,c
  9737  0103FC  6E35               	movwf	btemp^0,c
  9738  0103FE  0EEB               	movlw	-21
  9739  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
  9740  010406                     l9063:
  9741                           
  9742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  9743  010406  0E00               	movlw	0
  9744  010408  6EE6               	movwf	postinc1,c
  9745  01040A  0E00               	movlw	0
  9746  01040C  6EE6               	movwf	postinc1,c
  9747  01040E  0E20               	movlw	32
  9748  010410  6EE6               	movwf	postinc1,c
  9749  010412  0E41               	movlw	65
  9750  010414  6EE6               	movwf	postinc1,c
  9751                           
  9752                           ;stkvar	_u @ sp[(-60)+12]
  9753  010416  0ED0               	movlw	-48
  9754  010418  006F FF8F FFE6     	movff	plusw1,postinc1
  9755  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
  9756  010424  006F FF8F FFE6     	movff	plusw1,postinc1
  9757  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
  9758  010430  ECC1  F08E         	call	___flmul	;wreg free
  9759  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
  9760  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  9761  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  9762  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  9763                           
  9764                           ;stkvar	_g @ sp[(-60)+16]
  9765  01044C  0ED4               	movlw	-44
  9766  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
  9767  010454  006F FF8F FFE6     	movff	plusw1,postinc1
  9768  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
  9769  010460  006F FF8F FFE6     	movff	plusw1,postinc1
  9770  010466  EC48  F0AE         	call	___flge	;wreg free
  9771  01046A  A035               	btfss	btemp& (0+255),0,c
  9772  01046C  D032               	goto	l9069
  9773  01046E  D793               	goto	l9059
  9774  010470                     l9065:
  9775                           
  9776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  9777  010470  0E00               	movlw	0
  9778  010472  6EE6               	movwf	postinc1,c
  9779  010474  0E00               	movlw	0
  9780  010476  6EE6               	movwf	postinc1,c
  9781  010478  0E20               	movlw	32
  9782  01047A  6EE6               	movwf	postinc1,c
  9783  01047C  0E41               	movlw	65
  9784  01047E  6EE6               	movwf	postinc1,c
  9785                           
  9786                           ;stkvar	_u @ sp[(-60)+12]
  9787  010480  0ED0               	movlw	-48
  9788  010482  006F FF8F FFE6     	movff	plusw1,postinc1
  9789  010488  006F FF8F FFE6     	movff	plusw1,postinc1
  9790  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
  9791  010494  006F FF8F FFE6     	movff	plusw1,postinc1
  9792  01049A  ECB4  F096         	call	___fldiv	;wreg free
  9793                           
  9794                           ;stkvar	_u @ sp[(-56)+12]
  9795  01049E  0ED4               	movlw	-44
  9796  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9797  0104A6  0ED5               	movlw	-43
  9798  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9799  0104AE  0ED6               	movlw	-42
  9800  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9801  0104B6  0ED7               	movlw	-41
  9802  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9803                           
  9804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
  9805                           ;stkvar	_e @ sp[(-56)+34]
  9806  0104BE  50E1               	movf	fsr1l,w,c
  9807  0104C0  0FEA               	addlw	-22
  9808  0104C2  6ED9               	movwf	fsr2l,c
  9809  0104C4  50E2               	movf	fsr1h,w,c
  9810  0104C6  6EDA               	movwf	fsr2h,c
  9811  0104C8  0EFF               	movlw	255
  9812  0104CA  22DA               	addwfc	fsr2h,f,c
  9813  0104CC  06DE               	decf	postinc2,f,c
  9814  0104CE  0E00               	movlw	0
  9815  0104D0  5ADD               	subwfb	postdec2,f,c
  9816  0104D2                     l9069:
  9817                           
  9818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  9819                           ;stkvar	_u @ sp[(-56)+12]
  9820  0104D2  0ED4               	movlw	-44
  9821  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9822  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
  9823  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9824  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9825                           
  9826                           ;stkvar	_g @ sp[(-60)+16]
  9827  0104EC  0ED4               	movlw	-44
  9828  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9829  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9830  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
  9831  010500  006F FF8F FFE6     	movff	plusw1,postinc1
  9832  010506  EC48  F0AE         	call	___flge	;wreg free
  9833  01050A  A035               	btfss	btemp& (0+255),0,c
  9834  01050C  D7B1               	goto	l9065
  9835  01050E                     u8720:
  9836                           
  9837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  9838                           ;stkvar	_c @ sp[(-56)+-7]
  9839  01050E  0EC1               	movlw	-63
  9840  010510  50E3               	movf	plusw1,w,c
  9841  010512  6EE6               	movwf	postinc1,c
  9842  010514  0E00               	movlw	0
  9843  010516  6EE6               	movwf	postinc1,c
  9844  010518  ECE9  F0B7         	call	_tolower	;wreg free
  9845                           
  9846                           ;stkvar	_mode @ sp[(-56)+54]
  9847  01051C  0EFE               	movlw	-2
  9848  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9849                           
  9850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  9851                           ;stkvar	_mode @ sp[(-56)+54]
  9852                           ;stkvar	_nmode @ sp[(-56)+55]
  9853  010524  0EFE               	movlw	-2
  9854  010526  006F FF8C  F035    	movff	plusw1,btemp
  9855  01052C  0EFF               	movlw	-1
  9856  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9857                           
  9858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  9859                           ;stkvar	_mode @ sp[(-56)+54]
  9860  010534  0EFE               	movlw	-2
  9861  010536  006F FF8C  F035    	movff	plusw1,btemp
  9862  01053C  0E67               	movlw	103
  9863  01053E  1835               	xorwf	btemp^0,w,c
  9864  010540  A4D8               	btfss	status,2,c
  9865  010542  D025               	goto	l9087
  9866                           
  9867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  9868  010544  5020               	movf	_prec^0,w,c
  9869  010546  1021               	iorwf	(_prec+1)^0,w,c
  9870  010548  A4D8               	btfss	status,2,c
  9871  01054A  D004               	goto	l9081
  9872                           
  9873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  9874  01054C  0E00               	movlw	0
  9875  01054E  6E21               	movwf	(_prec+1)^0,c
  9876  010550  0E01               	movlw	1
  9877  010552  6E20               	movwf	_prec^0,c
  9878  010554                     l9081:
  9879                           
  9880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  9881  010554  BE21               	btfsc	(_prec+1)^0,7,c
  9882  010556  D005               	goto	u8750
  9883  010558  5021               	movf	(_prec+1)^0,w,c
  9884  01055A  E110               	bnz	l9085
  9885  01055C  0420               	decf	_prec^0,w,c
  9886  01055E  B0D8               	btfsc	status,0,c
  9887  010560  D00D               	goto	l9085
  9888  010562                     u8750:
  9889  010562  0E06               	movlw	6
  9890  010564  6E3F               	movwf	(btemp+10)^0,c
  9891  010566  0E00               	movlw	0
  9892  010568  6E40               	movwf	(btemp+11)^0,c
  9893                           
  9894                           ;stkvar	_p @ sp[(-56)+40]
  9895  01056A  0EF0               	movlw	-16
  9896  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9897  010572  0EF1               	movlw	-15
  9898  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
  9899  01057A  D00C               	goto	l9093
  9900  01057C                     l9085:
  9901                           
  9902                           ;stkvar	_p @ sp[(-56)+40]
  9903  01057C  0EF0               	movlw	-16
  9904  01057E  0060  F083  FFE3   	movff	_prec,plusw1
  9905  010584  0EF1               	movlw	-15
  9906  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
  9907  01058C  D003               	goto	l9093
  9908  01058E                     l9087:
  9909                           
  9910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  9911  01058E  AE21               	btfss	(_prec+1)^0,7,c
  9912  010590  D7F5               	goto	l9085
  9913  010592  D7E7               	goto	u8750
  9914  010594                     l9093:
  9915                           
  9916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  9917                           ;stkvar	_mode @ sp[(-56)+54]
  9918  010594  0EFE               	movlw	-2
  9919  010596  006F FF8C  F035    	movff	plusw1,btemp
  9920  01059C  0E67               	movlw	103
  9921  01059E  1835               	xorwf	btemp^0,w,c
  9922  0105A0  A4D8               	btfss	status,2,c
  9923  0105A2  D02F               	goto	l9103
  9924                           
  9925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  9926                           ;stkvar	_e @ sp[(-56)+34]
  9927  0105A4  0EEB               	movlw	-21
  9928  0105A6  AEE3               	btfss	plusw1,7,c
  9929  0105A8  D00E               	goto	u8780
  9930  0105AA  0EEA               	movlw	-22
  9931  0105AC  006F FF8C  F035    	movff	plusw1,btemp
  9932  0105B2  0EFC               	movlw	252
  9933  0105B4  5E35               	subwf	btemp^0,f,c
  9934  0105B6  0EEB               	movlw	-21
  9935  0105B8  006F FF8C  F035    	movff	plusw1,btemp
  9936  0105BE  0EFF               	movlw	255
  9937  0105C0  5A35               	subwfb	btemp^0,f,c
  9938  0105C2  A0D8               	btfss	status,0,c
  9939  0105C4  D018               	goto	l9101
  9940  0105C6                     u8780:
  9941                           
  9942                           ;stkvar	_e @ sp[(-56)+34]
  9943                           ;stkvar	_p @ sp[(-56)+40]
  9944  0105C6  0EF0               	movlw	-16
  9945  0105C8  50E3               	movf	plusw1,w,c
  9946  0105CA  0FFF               	addlw	255
  9947  0105CC  6E3F               	movwf	(btemp+10)^0,c
  9948  0105CE  0EF1               	movlw	-15
  9949  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
  9950  0105D6  0EFF               	movlw	255
  9951  0105D8  2240               	addwfc	(btemp+11)^0,f,c
  9952  0105DA  0EEA               	movlw	-22
  9953  0105DC  50E3               	movf	plusw1,w,c
  9954  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
  9955  0105E0  5040               	movf	(btemp+11)^0,w,c
  9956  0105E2  0A80               	xorlw	128
  9957  0105E4  6E35               	movwf	btemp^0,c
  9958  0105E6  0EEB               	movlw	-21
  9959  0105E8  50E3               	movf	plusw1,w,c
  9960  0105EA  0A80               	xorlw	128
  9961  0105EC  5835               	subwfb	btemp^0,w,c
  9962  0105EE  A0D8               	btfss	status,0,c
  9963  0105F0  D002               	goto	l9101
  9964                           
  9965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  9966  0105F2  0E66               	movlw	102
  9967  0105F4  D001               	goto	L8
  9968  0105F6                     l9101:
  9969                           
  9970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  9971  0105F6  0E65               	movlw	101
  9972  0105F8                     L8:
  9973  0105F8  6E40               	movwf	(btemp+11)^0,c
  9974                           
  9975                           ;stkvar	_nmode @ sp[(-56)+55]
  9976  0105FA  0EFF               	movlw	-1
  9977  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
  9978  010602                     l9103:
  9979                           
  9980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
  9981                           ;stkvar	_p @ sp[(-56)+40]
  9982                           ;stkvar	_m @ sp[(-56)+48]
  9983  010602  0EF0               	movlw	-16
  9984  010604  006F FF8C  F035    	movff	plusw1,btemp
  9985  01060A  0EF8               	movlw	-8
  9986  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9987  010612  0EF1               	movlw	-15
  9988  010614  006F FF8C  F035    	movff	plusw1,btemp
  9989  01061A  0EF9               	movlw	-7
  9990  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9991                           
  9992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  9993                           ;stkvar	_mode @ sp[(-56)+54]
  9994  010622  0EFE               	movlw	-2
  9995  010624  006F FF8C  F035    	movff	plusw1,btemp
  9996  01062A  0E67               	movlw	103
  9997  01062C  1835               	xorwf	btemp^0,w,c
  9998  01062E  A4D8               	btfss	status,2,c
  9999  010630  D00B               	goto	u8820
 10000                           
 10001                           ;stkvar	_nmode @ sp[(-56)+55]
 10002  010632  0EFF               	movlw	-1
 10003  010634  006F FF8C  F035    	movff	plusw1,btemp
 10004  01063A  0E66               	movlw	102
 10005  01063C  1835               	xorwf	btemp^0,w,c
 10006  01063E  A4D8               	btfss	status,2,c
 10007  010640  D014               	goto	l1814
 10008                           
 10009                           ;stkvar	_e @ sp[(-56)+34]
 10010  010642  0EEB               	movlw	-21
 10011  010644  AEE3               	btfss	plusw1,7,c
 10012  010646  D011               	goto	l1814
 10013  010648                     u8820:
 10014                           
 10015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10016                           ;stkvar	_m @ sp[(-56)+48]
 10017  010648  0EF8               	movlw	-8
 10018  01064A  50E3               	movf	plusw1,w,c
 10019  01064C  0F01               	addlw	1
 10020  01064E  6E35               	movwf	btemp^0,c
 10021  010650  0EF8               	movlw	-8
 10022  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 10023  010658  6A35               	clrf	btemp^0,c
 10024  01065A  0EF9               	movlw	-7
 10025  01065C  50E3               	movf	plusw1,w,c
 10026  01065E  2035               	addwfc	btemp^0,w,c
 10027  010660  6E35               	movwf	btemp^0,c
 10028  010662  0EF9               	movlw	-7
 10029  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 10030  01066A                     l1814:
 10031                           
 10032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10033                           ;stkvar	_nmode @ sp[(-56)+55]
 10034  01066A  0EFF               	movlw	-1
 10035  01066C  006F FF8C  F035    	movff	plusw1,btemp
 10036  010672  0E66               	movlw	102
 10037  010674  1835               	xorwf	btemp^0,w,c
 10038  010676  A4D8               	btfss	status,2,c
 10039  010678  D03B               	goto	l9123
 10040                           
 10041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10042                           ;stkvar	_e @ sp[(-56)+34]
 10043  01067A  0EEB               	movlw	-21
 10044  01067C  AEE3               	btfss	plusw1,7,c
 10045  01067E  D01C               	goto	l9119
 10046                           
 10047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10048  010680  0E00               	movlw	0
 10049  010682  6E3D               	movwf	(btemp+8)^0,c
 10050  010684  0E00               	movlw	0
 10051  010686  6E3E               	movwf	(btemp+9)^0,c
 10052  010688  0E80               	movlw	128
 10053  01068A  6E3F               	movwf	(btemp+10)^0,c
 10054  01068C  0E3F               	movlw	63
 10055  01068E  6E40               	movwf	(btemp+11)^0,c
 10056                           
 10057                           ;stkvar	_u @ sp[(-56)+12]
 10058  010690  0ED4               	movlw	-44
 10059  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10060  010698  0ED5               	movlw	-43
 10061  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10062  0106A0  0ED6               	movlw	-42
 10063  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10064  0106A8  0ED7               	movlw	-41
 10065  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10066                           
 10067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10068                           ;stkvar	_e @ sp[(-56)+34]
 10069  0106B0  0EEA               	movlw	-22
 10070  0106B2  6AE3               	clrf	plusw1,c
 10071  0106B4  0EEB               	movlw	-21
 10072  0106B6  6AE3               	clrf	plusw1,c
 10073  0106B8                     l9119:
 10074                           
 10075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10076                           ;stkvar	_mode @ sp[(-56)+54]
 10077  0106B8  0EFE               	movlw	-2
 10078  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 10079  0106C0  0E67               	movlw	103
 10080  0106C2  1835               	xorwf	btemp^0,w,c
 10081  0106C4  B4D8               	btfsc	status,2,c
 10082  0106C6  D014               	goto	l9123
 10083                           
 10084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10085                           ;stkvar	_e @ sp[(-56)+34]
 10086                           ;stkvar	_m @ sp[(-56)+48]
 10087  0106C8  0EF8               	movlw	-8
 10088  0106CA  50E3               	movf	plusw1,w,c
 10089  0106CC  6E35               	movwf	btemp^0,c
 10090  0106CE  0EEA               	movlw	-22
 10091  0106D0  50E3               	movf	plusw1,w,c
 10092  0106D2  2635               	addwf	btemp^0,f,c
 10093  0106D4  0EF8               	movlw	-8
 10094  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10095  0106DC  0EF9               	movlw	-7
 10096  0106DE  50E3               	movf	plusw1,w,c
 10097  0106E0  6E35               	movwf	btemp^0,c
 10098  0106E2  0EEB               	movlw	-21
 10099  0106E4  50E3               	movf	plusw1,w,c
 10100  0106E6  2235               	addwfc	btemp^0,f,c
 10101  0106E8  0EF9               	movlw	-7
 10102  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10103  0106F0                     l9123:
 10104                           
 10105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10106                           ;stkvar	_i @ sp[(-56)+36]
 10107  0106F0  0EEC               	movlw	-20
 10108  0106F2  6AE3               	clrf	plusw1,c
 10109  0106F4  0EED               	movlw	-19
 10110  0106F6  6AE3               	clrf	plusw1,c
 10111                           
 10112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10113                           ;stkvar	_g @ sp[(-56)+16]
 10114  0106F8  0ED8               	movlw	-40
 10115  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 10116  010700  0ED9               	movlw	-39
 10117  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 10118  010708  0EDA               	movlw	-38
 10119  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10120  010710  0EDB               	movlw	-37
 10121  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 10122                           
 10123                           ;stkvar	_h @ sp[(-56)+24]
 10124  010718  0EE0               	movlw	-32
 10125  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10126  010720  0EE1               	movlw	-31
 10127  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10128  010728  0EE2               	movlw	-30
 10129  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10130  010730  0EE3               	movlw	-29
 10131  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 10132                           
 10133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10134                           ;stkvar	_u @ sp[(-56)+12]
 10135  010738  0ED4               	movlw	-44
 10136  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 10137  010740  0ED5               	movlw	-43
 10138  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 10139  010748  0ED6               	movlw	-42
 10140  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10141  010750  0ED7               	movlw	-41
 10142  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 10143                           
 10144                           ;stkvar	_ou @ sp[(-56)+28]
 10145  010758  0EE4               	movlw	-28
 10146  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10147  010760  0EE5               	movlw	-27
 10148  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10149  010768  0EE6               	movlw	-26
 10150  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10151  010770  0EE7               	movlw	-25
 10152  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 10153                           
 10154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10155  010778  D0D6               	goto	l9139
 10156  01077A                     l9129:
 10157                           
 10158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10159                           ;stkvar	_u @ sp[(-56)+12]
 10160  01077A  0ED4               	movlw	-44
 10161  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10162  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10163  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10164  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10165                           
 10166                           ;stkvar	_h @ sp[(-60)+24]
 10167  010794  0EDC               	movlw	-36
 10168  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10169  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10170  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10171  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10172  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 10173  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 10174  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10175  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10176  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10177  0107CA  EC91  F09F         	call	_floorf	;wreg free
 10178                           
 10179                           ;stkvar	_l @ sp[(-56)+20]
 10180  0107CE  0EDC               	movlw	-36
 10181  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10182  0107D6  0EDD               	movlw	-35
 10183  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10184  0107DE  0EDE               	movlw	-34
 10185  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10186  0107E6  0EDF               	movlw	-33
 10187  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10188                           
 10189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10190                           ;stkvar	_l @ sp[(-56)+20]
 10191  0107EE  0EDC               	movlw	-36
 10192  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10193  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10194  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10195  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10196  010808  EC8F  F0AD         	call	___fltol	;wreg free
 10197  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 10198  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10199                           
 10200                           ;stkvar	_d @ sp[(-56)+44]
 10201  010818  0EF4               	movlw	-12
 10202  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10203  010820  0EF5               	movlw	-11
 10204  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 10205                           
 10206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10207                           ;stkvar	_u @ sp[(-56)+12]
 10208  010828  0ED4               	movlw	-44
 10209  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10210  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10211  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10212  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10213                           
 10214                           ;stkvar	_l @ sp[(-60)+20]
 10215  010842  0ED8               	movlw	-40
 10216  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10217  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10218  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10219  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10220  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10221  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 10222  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10223  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10224  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10225                           
 10226                           ;stkvar	_h @ sp[(-60)+24]
 10227  010878  0EDC               	movlw	-36
 10228  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 10229  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 10230  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 10231  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 10232  010892  ECBE  F0BA         	call	___flsub	;wreg free
 10233                           
 10234                           ;stkvar	_h @ sp[(-56)+24]
 10235  010896  0EE0               	movlw	-32
 10236  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 10237  01089E  0EE1               	movlw	-31
 10238  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10239  0108A6  0EE2               	movlw	-30
 10240  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10241  0108AE  0EE3               	movlw	-29
 10242  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10243                           
 10244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 10245  0108B6  0E00               	movlw	0
 10246  0108B8  6EE6               	movwf	postinc1,c
 10247  0108BA  0E00               	movlw	0
 10248  0108BC  6EE6               	movwf	postinc1,c
 10249  0108BE  0E20               	movlw	32
 10250  0108C0  6EE6               	movwf	postinc1,c
 10251  0108C2  0E41               	movlw	65
 10252  0108C4  6EE6               	movwf	postinc1,c
 10253                           
 10254                           ;stkvar	_u @ sp[(-60)+12]
 10255  0108C6  0ED0               	movlw	-48
 10256  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10257  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10258  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10259  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10260  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 10261                           
 10262                           ;stkvar	_u @ sp[(-56)+12]
 10263  0108E4  0ED4               	movlw	-44
 10264  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10265  0108EC  0ED5               	movlw	-43
 10266  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10267  0108F4  0ED6               	movlw	-42
 10268  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10269  0108FC  0ED7               	movlw	-41
 10270  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10271                           
 10272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 10273                           ;stkvar	_i @ sp[(-56)+36]
 10274  010904  0EEC               	movlw	-20
 10275  010906  50E3               	movf	plusw1,w,c
 10276  010908  0F01               	addlw	1
 10277  01090A  6E35               	movwf	btemp^0,c
 10278  01090C  0EEC               	movlw	-20
 10279  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10280  010914  6A35               	clrf	btemp^0,c
 10281  010916  0EED               	movlw	-19
 10282  010918  50E3               	movf	plusw1,w,c
 10283  01091A  2035               	addwfc	btemp^0,w,c
 10284  01091C  6E35               	movwf	btemp^0,c
 10285  01091E  0EED               	movlw	-19
 10286  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 10287  010926                     l9139:
 10288                           
 10289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10290                           ;stkvar	_m @ sp[(-56)+48]
 10291                           ;stkvar	_i @ sp[(-56)+36]
 10292  010926  50E1               	movf	fsr1l,w,c
 10293  010928  0FEC               	addlw	-20
 10294  01092A  6ED9               	movwf	fsr2l,c
 10295  01092C  50E2               	movf	fsr1h,w,c
 10296  01092E  6EDA               	movwf	fsr2h,c
 10297  010930  0EFF               	movlw	255
 10298  010932  22DA               	addwfc	fsr2h,f,c
 10299  010934  0EF8               	movlw	-8
 10300  010936  50E3               	movf	plusw1,w,c
 10301  010938  5CDE               	subwf	postinc2,w,c
 10302  01093A  50DE               	movf	postinc2,w,c
 10303  01093C  0A80               	xorlw	128
 10304  01093E  6E35               	movwf	btemp^0,c
 10305  010940  0EF9               	movlw	-7
 10306  010942  50E3               	movf	plusw1,w,c
 10307  010944  0A80               	xorlw	128
 10308  010946  5835               	subwfb	btemp^0,w,c
 10309  010948  A0D8               	btfss	status,0,c
 10310  01094A  D717               	goto	l9129
 10311                           
 10312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 10313  01094C  0E00               	movlw	0
 10314  01094E  6EE6               	movwf	postinc1,c
 10315  010950  0E00               	movlw	0
 10316  010952  6EE6               	movwf	postinc1,c
 10317  010954  0EA0               	movlw	160
 10318  010956  6EE6               	movwf	postinc1,c
 10319  010958  0E40               	movlw	64
 10320  01095A  6EE6               	movwf	postinc1,c
 10321                           
 10322                           ;stkvar	_u @ sp[(-60)+12]
 10323  01095C  0ED0               	movlw	-48
 10324  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 10325  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 10326  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 10327  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 10328  010976  ECC1  F08E         	call	___flmul	;wreg free
 10329                           
 10330                           ;stkvar	_l @ sp[(-56)+20]
 10331  01097A  0EDC               	movlw	-36
 10332  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10333  010982  0EDD               	movlw	-35
 10334  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10335  01098A  0EDE               	movlw	-34
 10336  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10337  010992  0EDF               	movlw	-33
 10338  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10339                           
 10340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 10341                           ;stkvar	_l @ sp[(-56)+20]
 10342  01099A  0EDC               	movlw	-36
 10343  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 10344  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10345  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10346  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10347                           
 10348                           ;stkvar	_h @ sp[(-60)+24]
 10349  0109B4  0EDC               	movlw	-36
 10350  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10351  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10352  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10353  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10354  0109CE  EC48  F0AE         	call	___flge	;wreg free
 10355  0109D2  A035               	btfss	btemp& (0+255),0,c
 10356  0109D4  D021               	goto	u8890
 10357                           
 10358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 10359                           ;stkvar	_l @ sp[(-56)+20]
 10360                           
 10361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 10362                           
 10363                           ;stkvar	_l @ sp[(-56)+20]
 10364                           
 10365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 10366  0109D6  0EDC               	movlw	-36
 10367  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 10368  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10369  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10370  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 10371                           
 10372                           ;stkvar	_h @ sp[(-60)+24]
 10373  0109F0  0EDC               	movlw	-36
 10374  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10375  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10376  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 10377  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 10378  010A0A  EC2D  F0B4         	call	___fleq	;wreg free
 10379  010A0E  A035               	btfss	btemp& (0+255),0,c
 10380  010A10  D01B               	goto	l9153
 10381                           
 10382                           ;stkvar	_d @ sp[(-56)+44]
 10383  010A12  0EF4               	movlw	-12
 10384  010A14  B0E3               	btfsc	plusw1,0,c
 10385  010A16  D018               	goto	l9153
 10386  010A18                     u8890:
 10387                           
 10388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 10389  010A18  0E00               	movlw	0
 10390  010A1A  6E3D               	movwf	(btemp+8)^0,c
 10391  010A1C  0E00               	movlw	0
 10392  010A1E  6E3E               	movwf	(btemp+9)^0,c
 10393  010A20  0E00               	movlw	0
 10394  010A22  6E3F               	movwf	(btemp+10)^0,c
 10395  010A24  0E00               	movlw	0
 10396  010A26  6E40               	movwf	(btemp+11)^0,c
 10397                           
 10398                           ;stkvar	_l @ sp[(-56)+20]
 10399  010A28  0EDC               	movlw	-36
 10400  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10401  010A30  0EDD               	movlw	-35
 10402  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10403  010A38  0EDE               	movlw	-34
 10404  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10405  010A40  0EDF               	movlw	-33
 10406  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 10407  010A48                     l9153:
 10408                           
 10409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 10410                           ;stkvar	_l @ sp[(-56)+20]
 10411  010A48  0EDC               	movlw	-36
 10412  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 10413  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 10414  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 10415  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10416                           
 10417                           ;stkvar	_g @ sp[(-60)+16]
 10418  010A62  0ED4               	movlw	-44
 10419  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 10420  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10421  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 10422  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 10423  010A7C  ECD6  F092         	call	___fladd	;wreg free
 10424                           
 10425                           ;stkvar	_h @ sp[(-56)+24]
 10426  010A80  0EE0               	movlw	-32
 10427  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 10428  010A88  0EE1               	movlw	-31
 10429  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10430  010A90  0EE2               	movlw	-30
 10431  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10432  010A98  0EE3               	movlw	-29
 10433  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10434                           
 10435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 10436                           ;stkvar	_ou @ sp[(-56)+28]
 10437  010AA0  0EE4               	movlw	-28
 10438  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 10439  010AA8  0EE5               	movlw	-27
 10440  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 10441  010AB0  0EE6               	movlw	-26
 10442  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 10443  010AB8  0EE7               	movlw	-25
 10444  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 10445                           
 10446                           ;stkvar	_u @ sp[(-56)+12]
 10447  010AC0  0ED4               	movlw	-44
 10448  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10449  010AC8  0ED5               	movlw	-43
 10450  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10451  010AD0  0ED6               	movlw	-42
 10452  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10453  010AD8  0ED7               	movlw	-41
 10454  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10455                           
 10456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 10457                           ;stkvar	_nmode @ sp[(-56)+55]
 10458  010AE0  0EFF               	movlw	-1
 10459  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 10460  010AE8  0E65               	movlw	101
 10461  010AEA  1835               	xorwf	btemp^0,w,c
 10462  010AEC  B4D8               	btfsc	status,2,c
 10463  010AEE  D011               	goto	l9161
 10464                           
 10465                           ;stkvar	_e @ sp[(-56)+34]
 10466                           ;stkvar	_ne @ sp[(-56)+46]
 10467  010AF0  0EEA               	movlw	-22
 10468  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 10469  010AF8  0EF6               	movlw	-10
 10470  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10471  010B00  0EEB               	movlw	-21
 10472  010B02  006F FF8C  F035    	movff	plusw1,btemp
 10473  010B08  0EF7               	movlw	-9
 10474  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10475  010B10  D004               	goto	l1829
 10476  010B12                     l9161:
 10477                           
 10478                           ;stkvar	_ne @ sp[(-56)+46]
 10479  010B12  0EF6               	movlw	-10
 10480  010B14  6AE3               	clrf	plusw1,c
 10481  010B16  0EF7               	movlw	-9
 10482  010B18  6AE3               	clrf	plusw1,c
 10483  010B1A                     l1829:
 10484                           
 10485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 10486                           ;stkvar	_pp @ sp[(-56)+50]
 10487  010B1A  0EFA               	movlw	-6
 10488  010B1C  6AE3               	clrf	plusw1,c
 10489  010B1E  0EFB               	movlw	-5
 10490  010B20  6AE3               	clrf	plusw1,c
 10491                           
 10492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 10493                           ;stkvar	_t @ sp[(-56)+52]
 10494  010B22  0EFC               	movlw	-4
 10495  010B24  6AE3               	clrf	plusw1,c
 10496  010B26  0EFD               	movlw	-3
 10497  010B28  6AE3               	clrf	plusw1,c
 10498                           
 10499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 10500                           ;stkvar	_i @ sp[(-56)+36]
 10501  010B2A  0EEC               	movlw	-20
 10502  010B2C  6AE3               	clrf	plusw1,c
 10503  010B2E  0EED               	movlw	-19
 10504  010B30  6AE3               	clrf	plusw1,c
 10505                           
 10506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10507  010B32  D1B7               	goto	l9213
 10508  010B34                     l9163:
 10509                           
 10510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 10511                           ;stkvar	_u @ sp[(-56)+12]
 10512  010B34  0ED4               	movlw	-44
 10513  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 10514  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10515  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 10516  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 10517                           
 10518                           ;stkvar	_h @ sp[(-60)+24]
 10519  010B4E  0EDC               	movlw	-36
 10520  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 10521  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 10522  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10523  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 10524  010B68  ECB4  F096         	call	___fldiv	;wreg free
 10525  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 10526  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10527  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10528  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10529  010B84  EC91  F09F         	call	_floorf	;wreg free
 10530                           
 10531                           ;stkvar	_l @ sp[(-56)+20]
 10532  010B88  0EDC               	movlw	-36
 10533  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10534  010B90  0EDD               	movlw	-35
 10535  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10536  010B98  0EDE               	movlw	-34
 10537  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10538  010BA0  0EDF               	movlw	-33
 10539  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10540                           
 10541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 10542                           ;stkvar	_l @ sp[(-56)+20]
 10543  010BA8  0EDC               	movlw	-36
 10544  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 10545  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 10546  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 10547  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 10548  010BC2  EC8F  F0AD         	call	___fltol	;wreg free
 10549  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 10550  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10551                           
 10552                           ;stkvar	_d @ sp[(-56)+44]
 10553  010BD2  0EF4               	movlw	-12
 10554  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10555  010BDA  0EF5               	movlw	-11
 10556  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10557                           
 10558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10559  010BE2  B822               	btfsc	_flags^0,4,c
 10560  010BE4  D026               	goto	l9177
 10561                           
 10562                           ;stkvar	_d @ sp[(-56)+44]
 10563  010BE6  0EF4               	movlw	-12
 10564  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 10565  010BEE  0EF5               	movlw	-11
 10566  010BF0  50E3               	movf	plusw1,w,c
 10567  010BF2  1035               	iorwf	btemp^0,w,c
 10568  010BF4  A4D8               	btfss	status,2,c
 10569  010BF6  D01D               	goto	l9177
 10570                           
 10571                           ;stkvar	_mode @ sp[(-56)+54]
 10572  010BF8  0EFE               	movlw	-2
 10573  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 10574  010C00  0E67               	movlw	103
 10575  010C02  1835               	xorwf	btemp^0,w,c
 10576  010C04  A4D8               	btfss	status,2,c
 10577  010C06  D015               	goto	l9177
 10578                           
 10579                           ;stkvar	_ne @ sp[(-56)+46]
 10580  010C08  0EF7               	movlw	-9
 10581  010C0A  AEE3               	btfss	plusw1,7,c
 10582  010C0C  D012               	goto	l9177
 10583                           
 10584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 10585                           ;stkvar	_t @ sp[(-56)+52]
 10586  010C0E  0EFC               	movlw	-4
 10587  010C10  50E3               	movf	plusw1,w,c
 10588  010C12  0F01               	addlw	1
 10589  010C14  6E35               	movwf	btemp^0,c
 10590  010C16  0EFC               	movlw	-4
 10591  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 10592  010C1E  6A35               	clrf	btemp^0,c
 10593  010C20  0EFD               	movlw	-3
 10594  010C22  50E3               	movf	plusw1,w,c
 10595  010C24  2035               	addwfc	btemp^0,w,c
 10596  010C26  6E35               	movwf	btemp^0,c
 10597  010C28  0EFD               	movlw	-3
 10598  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10599                           
 10600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 10601  010C30  D0AF               	goto	l9205
 10602  010C32                     l9177:
 10603                           
 10604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 10605                           ;stkvar	_pp @ sp[(-56)+50]
 10606  010C32  0EFA               	movlw	-6
 10607  010C34  006F FF8C  F035    	movff	plusw1,btemp
 10608  010C3A  0EFB               	movlw	-5
 10609  010C3C  50E3               	movf	plusw1,w,c
 10610  010C3E  1035               	iorwf	btemp^0,w,c
 10611  010C40  A4D8               	btfss	status,2,c
 10612  010C42  D070               	goto	l9197
 10613                           
 10614                           ;stkvar	_ne @ sp[(-56)+46]
 10615  010C44  0EF7               	movlw	-9
 10616  010C46  AEE3               	btfss	plusw1,7,c
 10617  010C48  D06D               	goto	l9197
 10618                           
 10619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 10620                           ;stkvar	_n @ sp[(-56)+32]
 10621  010C4A  0EE8               	movlw	-24
 10622  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10623  010C52  0EE9               	movlw	-23
 10624  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 10625  010C5A  0EA4               	movlw	low _dbuf
 10626  010C5C  243F               	addwf	(btemp+10)^0,w,c
 10627  010C5E  6ED9               	movwf	fsr2l,c
 10628  010C60  0E01               	movlw	high _dbuf
 10629  010C62  2040               	addwfc	(btemp+11)^0,w,c
 10630  010C64  6EDA               	movwf	fsr2h,c
 10631  010C66  0E2E               	movlw	46
 10632  010C68  6EDF               	movwf	indf2,c
 10633                           
 10634                           ;stkvar	_n @ sp[(-56)+32]
 10635  010C6A  0EE8               	movlw	-24
 10636  010C6C  50E3               	movf	plusw1,w,c
 10637  010C6E  0F01               	addlw	1
 10638  010C70  6E35               	movwf	btemp^0,c
 10639  010C72  0EE8               	movlw	-24
 10640  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 10641  010C7A  6A35               	clrf	btemp^0,c
 10642  010C7C  0EE9               	movlw	-23
 10643  010C7E  50E3               	movf	plusw1,w,c
 10644  010C80  2035               	addwfc	btemp^0,w,c
 10645  010C82  6E35               	movwf	btemp^0,c
 10646  010C84  0EE9               	movlw	-23
 10647  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 10648                           
 10649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 10650                           ;stkvar	_w @ sp[(-56)+38]
 10651  010C8C  50E1               	movf	fsr1l,w,c
 10652  010C8E  0FEE               	addlw	-18
 10653  010C90  6ED9               	movwf	fsr2l,c
 10654  010C92  50E2               	movf	fsr1h,w,c
 10655  010C94  6EDA               	movwf	fsr2h,c
 10656  010C96  0EFF               	movlw	255
 10657  010C98  22DA               	addwfc	fsr2h,f,c
 10658  010C9A  06DE               	decf	postinc2,f,c
 10659  010C9C  0E00               	movlw	0
 10660  010C9E  5ADD               	subwfb	postdec2,f,c
 10661                           
 10662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 10663  010CA0  0E01               	movlw	1
 10664  010CA2  6E3F               	movwf	(btemp+10)^0,c
 10665  010CA4  0E00               	movlw	0
 10666  010CA6  6E40               	movwf	(btemp+11)^0,c
 10667                           
 10668                           ;stkvar	_pp @ sp[(-56)+50]
 10669  010CA8  0EFA               	movlw	-6
 10670  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10671  010CB0  0EFB               	movlw	-5
 10672  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 10673  010CB8  D035               	goto	l9197
 10674  010CBA                     l9189:
 10675                           
 10676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 10677                           ;stkvar	_n @ sp[(-56)+32]
 10678  010CBA  0EE8               	movlw	-24
 10679  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10680  010CC2  0EE9               	movlw	-23
 10681  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 10682  010CCA  0EA4               	movlw	low _dbuf
 10683  010CCC  243F               	addwf	(btemp+10)^0,w,c
 10684  010CCE  6ED9               	movwf	fsr2l,c
 10685  010CD0  0E01               	movlw	high _dbuf
 10686  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 10687  010CD4  6EDA               	movwf	fsr2h,c
 10688  010CD6  0E30               	movlw	48
 10689  010CD8  6EDF               	movwf	indf2,c
 10690                           
 10691                           ;stkvar	_n @ sp[(-56)+32]
 10692  010CDA  0EE8               	movlw	-24
 10693  010CDC  50E3               	movf	plusw1,w,c
 10694  010CDE  0F01               	addlw	1
 10695  010CE0  6E35               	movwf	btemp^0,c
 10696  010CE2  0EE8               	movlw	-24
 10697  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 10698  010CEA  6A35               	clrf	btemp^0,c
 10699  010CEC  0EE9               	movlw	-23
 10700  010CEE  50E3               	movf	plusw1,w,c
 10701  010CF0  2035               	addwfc	btemp^0,w,c
 10702  010CF2  6E35               	movwf	btemp^0,c
 10703  010CF4  0EE9               	movlw	-23
 10704  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10705                           
 10706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 10707                           ;stkvar	_w @ sp[(-56)+38]
 10708  010CFC  50E1               	movf	fsr1l,w,c
 10709  010CFE  0FEE               	addlw	-18
 10710  010D00  6ED9               	movwf	fsr2l,c
 10711  010D02  50E2               	movf	fsr1h,w,c
 10712  010D04  6EDA               	movwf	fsr2h,c
 10713  010D06  0EFF               	movlw	255
 10714  010D08  22DA               	addwfc	fsr2h,f,c
 10715  010D0A  06DE               	decf	postinc2,f,c
 10716  010D0C  0E00               	movlw	0
 10717  010D0E  5ADD               	subwfb	postdec2,f,c
 10718                           
 10719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 10720                           ;stkvar	_t @ sp[(-56)+52]
 10721  010D10  50E1               	movf	fsr1l,w,c
 10722  010D12  0FFC               	addlw	-4
 10723  010D14  6ED9               	movwf	fsr2l,c
 10724  010D16  50E2               	movf	fsr1h,w,c
 10725  010D18  6EDA               	movwf	fsr2h,c
 10726  010D1A  0EFF               	movlw	255
 10727  010D1C  22DA               	addwfc	fsr2h,f,c
 10728  010D1E  06DE               	decf	postinc2,f,c
 10729  010D20  0E00               	movlw	0
 10730  010D22  5ADD               	subwfb	postdec2,f,c
 10731  010D24                     l9197:
 10732                           
 10733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 10734                           ;stkvar	_t @ sp[(-56)+52]
 10735  010D24  0EFC               	movlw	-4
 10736  010D26  006F FF8C  F035    	movff	plusw1,btemp
 10737  010D2C  0EFD               	movlw	-3
 10738  010D2E  50E3               	movf	plusw1,w,c
 10739  010D30  1035               	iorwf	btemp^0,w,c
 10740  010D32  A4D8               	btfss	status,2,c
 10741  010D34  D7C2               	goto	l9189
 10742                           
 10743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 10744                           ;stkvar	_n @ sp[(-56)+32]
 10745  010D36  0EE8               	movlw	-24
 10746  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 10747  010D3E  0EE9               	movlw	-23
 10748  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 10749  010D46  0EA4               	movlw	low _dbuf
 10750  010D48  243F               	addwf	(btemp+10)^0,w,c
 10751  010D4A  6ED9               	movwf	fsr2l,c
 10752  010D4C  0E01               	movlw	high _dbuf
 10753  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 10754  010D50  6EDA               	movwf	fsr2h,c
 10755                           
 10756                           ;stkvar	_d @ sp[(-56)+44]
 10757  010D52  0EF4               	movlw	-12
 10758  010D54  50E3               	movf	plusw1,w,c
 10759  010D56  0F30               	addlw	48
 10760  010D58  6EDF               	movwf	indf2,c
 10761                           
 10762                           ;stkvar	_n @ sp[(-56)+32]
 10763  010D5A  0EE8               	movlw	-24
 10764  010D5C  50E3               	movf	plusw1,w,c
 10765  010D5E  0F01               	addlw	1
 10766  010D60  6E35               	movwf	btemp^0,c
 10767  010D62  0EE8               	movlw	-24
 10768  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 10769  010D6A  6A35               	clrf	btemp^0,c
 10770  010D6C  0EE9               	movlw	-23
 10771  010D6E  50E3               	movf	plusw1,w,c
 10772  010D70  2035               	addwfc	btemp^0,w,c
 10773  010D72  6E35               	movwf	btemp^0,c
 10774  010D74  0EE9               	movlw	-23
 10775  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 10776                           
 10777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 10778                           ;stkvar	_w @ sp[(-56)+38]
 10779  010D7C  50E1               	movf	fsr1l,w,c
 10780  010D7E  0FEE               	addlw	-18
 10781  010D80  6ED9               	movwf	fsr2l,c
 10782  010D82  50E2               	movf	fsr1h,w,c
 10783  010D84  6EDA               	movwf	fsr2h,c
 10784  010D86  0EFF               	movlw	255
 10785  010D88  22DA               	addwfc	fsr2h,f,c
 10786  010D8A  06DE               	decf	postinc2,f,c
 10787  010D8C  0E00               	movlw	0
 10788  010D8E  5ADD               	subwfb	postdec2,f,c
 10789  010D90                     l9205:
 10790                           
 10791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 10792                           ;stkvar	_u @ sp[(-56)+12]
 10793  010D90  0ED4               	movlw	-44
 10794  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 10795  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 10796  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10797  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 10798                           
 10799                           ;stkvar	_l @ sp[(-60)+20]
 10800  010DAA  0ED8               	movlw	-40
 10801  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10802  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 10803  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 10804  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 10805  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 10806  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 10807  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10808  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10809  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10810                           
 10811                           ;stkvar	_h @ sp[(-60)+24]
 10812  010DE0  0EDC               	movlw	-36
 10813  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 10814  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 10815  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10816  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10817  010DFA  ECBE  F0BA         	call	___flsub	;wreg free
 10818                           
 10819                           ;stkvar	_h @ sp[(-56)+24]
 10820  010DFE  0EE0               	movlw	-32
 10821  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 10822  010E06  0EE1               	movlw	-31
 10823  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10824  010E0E  0EE2               	movlw	-30
 10825  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10826  010E16  0EE3               	movlw	-29
 10827  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10828                           
 10829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 10830  010E1E  0E00               	movlw	0
 10831  010E20  6EE6               	movwf	postinc1,c
 10832  010E22  0E00               	movlw	0
 10833  010E24  6EE6               	movwf	postinc1,c
 10834  010E26  0E20               	movlw	32
 10835  010E28  6EE6               	movwf	postinc1,c
 10836  010E2A  0E41               	movlw	65
 10837  010E2C  6EE6               	movwf	postinc1,c
 10838                           
 10839                           ;stkvar	_u @ sp[(-60)+12]
 10840  010E2E  0ED0               	movlw	-48
 10841  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 10842  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 10843  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10844  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 10845  010E48  ECB4  F096         	call	___fldiv	;wreg free
 10846                           
 10847                           ;stkvar	_u @ sp[(-56)+12]
 10848  010E4C  0ED4               	movlw	-44
 10849  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10850  010E54  0ED5               	movlw	-43
 10851  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10852  010E5C  0ED6               	movlw	-42
 10853  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10854  010E64  0ED7               	movlw	-41
 10855  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10856                           
 10857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 10858                           ;stkvar	_ne @ sp[(-56)+46]
 10859  010E6C  50E1               	movf	fsr1l,w,c
 10860  010E6E  0FF6               	addlw	-10
 10861  010E70  6ED9               	movwf	fsr2l,c
 10862  010E72  50E2               	movf	fsr1h,w,c
 10863  010E74  6EDA               	movwf	fsr2h,c
 10864  010E76  0EFF               	movlw	255
 10865  010E78  22DA               	addwfc	fsr2h,f,c
 10866  010E7A  06DE               	decf	postinc2,f,c
 10867  010E7C  0E00               	movlw	0
 10868  010E7E  5ADD               	subwfb	postdec2,f,c
 10869                           
 10870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 10871                           ;stkvar	_i @ sp[(-56)+36]
 10872  010E80  0EEC               	movlw	-20
 10873  010E82  50E3               	movf	plusw1,w,c
 10874  010E84  0F01               	addlw	1
 10875  010E86  6E35               	movwf	btemp^0,c
 10876  010E88  0EEC               	movlw	-20
 10877  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10878  010E90  6A35               	clrf	btemp^0,c
 10879  010E92  0EED               	movlw	-19
 10880  010E94  50E3               	movf	plusw1,w,c
 10881  010E96  2035               	addwfc	btemp^0,w,c
 10882  010E98  6E35               	movwf	btemp^0,c
 10883  010E9A  0EED               	movlw	-19
 10884  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10885  010EA2                     l9213:
 10886                           
 10887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10888                           ;stkvar	_m @ sp[(-56)+48]
 10889                           ;stkvar	_i @ sp[(-56)+36]
 10890  010EA2  50E1               	movf	fsr1l,w,c
 10891  010EA4  0FEC               	addlw	-20
 10892  010EA6  6ED9               	movwf	fsr2l,c
 10893  010EA8  50E2               	movf	fsr1h,w,c
 10894  010EAA  6EDA               	movwf	fsr2h,c
 10895  010EAC  0EFF               	movlw	255
 10896  010EAE  22DA               	addwfc	fsr2h,f,c
 10897  010EB0  0EF8               	movlw	-8
 10898  010EB2  50E3               	movf	plusw1,w,c
 10899  010EB4  5CDE               	subwf	postinc2,w,c
 10900  010EB6  50DE               	movf	postinc2,w,c
 10901  010EB8  0A80               	xorlw	128
 10902  010EBA  6E35               	movwf	btemp^0,c
 10903  010EBC  0EF9               	movlw	-7
 10904  010EBE  50E3               	movf	plusw1,w,c
 10905  010EC0  0A80               	xorlw	128
 10906  010EC2  5835               	subwfb	btemp^0,w,c
 10907  010EC4  B0D8               	btfsc	status,0,c
 10908  010EC6  D00E               	goto	u8990
 10909                           
 10910                           ;stkvar	_n @ sp[(-56)+32]
 10911  010EC8  0EE9               	movlw	-23
 10912  010ECA  BEE3               	btfsc	plusw1,7,c
 10913  010ECC  D633               	goto	l9163
 10914  010ECE  0EE9               	movlw	-23
 10915  010ED0  50E3               	movf	plusw1,w,c
 10916  010ED2  E108               	bnz	u8990
 10917  010ED4  0EE8               	movlw	-24
 10918  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 10919  010EDC  0E4B               	movlw	75
 10920  010EDE  5E35               	subwf	btemp^0,f,c
 10921  010EE0  A0D8               	btfss	status,0,c
 10922  010EE2  D628               	goto	l9163
 10923  010EE4                     u8990:
 10924                           
 10925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 10926                           ;stkvar	_pp @ sp[(-56)+50]
 10927  010EE4  0EFA               	movlw	-6
 10928  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 10929  010EEC  0EFB               	movlw	-5
 10930  010EEE  50E3               	movf	plusw1,w,c
 10931  010EF0  1035               	iorwf	btemp^0,w,c
 10932  010EF2  B4D8               	btfsc	status,2,c
 10933  010EF4  A822               	btfss	_flags^0,4,c
 10934  010EF6  D021               	goto	l9225
 10935                           
 10936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 10937                           ;stkvar	_n @ sp[(-56)+32]
 10938  010EF8  0EE8               	movlw	-24
 10939  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 10940  010F00  0EE9               	movlw	-23
 10941  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 10942  010F08  0EA4               	movlw	low _dbuf
 10943  010F0A  243F               	addwf	(btemp+10)^0,w,c
 10944  010F0C  6ED9               	movwf	fsr2l,c
 10945  010F0E  0E01               	movlw	high _dbuf
 10946  010F10  2040               	addwfc	(btemp+11)^0,w,c
 10947  010F12  6EDA               	movwf	fsr2h,c
 10948  010F14  0E2E               	movlw	46
 10949  010F16  6EDF               	movwf	indf2,c
 10950                           
 10951                           ;stkvar	_n @ sp[(-56)+32]
 10952  010F18  0EE8               	movlw	-24
 10953  010F1A  50E3               	movf	plusw1,w,c
 10954  010F1C  0F01               	addlw	1
 10955  010F1E  6E35               	movwf	btemp^0,c
 10956  010F20  0EE8               	movlw	-24
 10957  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 10958  010F28  6A35               	clrf	btemp^0,c
 10959  010F2A  0EE9               	movlw	-23
 10960  010F2C  50E3               	movf	plusw1,w,c
 10961  010F2E  2035               	addwfc	btemp^0,w,c
 10962  010F30  6E35               	movwf	btemp^0,c
 10963  010F32  0EE9               	movlw	-23
 10964  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 10965  010F3A                     l9225:
 10966                           
 10967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 10968                           ;stkvar	_n @ sp[(-56)+32]
 10969  010F3A  0EE8               	movlw	-24
 10970  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10971  010F42  0EE9               	movlw	-23
 10972  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 10973  010F4A  0EA4               	movlw	low _dbuf
 10974  010F4C  243F               	addwf	(btemp+10)^0,w,c
 10975  010F4E  6ED9               	movwf	fsr2l,c
 10976  010F50  0E01               	movlw	high _dbuf
 10977  010F52  2040               	addwfc	(btemp+11)^0,w,c
 10978  010F54  6EDA               	movwf	fsr2h,c
 10979  010F56  0E00               	movlw	0
 10980  010F58  6EDF               	movwf	indf2,c
 10981                           
 10982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 10983                           ;stkvar	_nmode @ sp[(-56)+55]
 10984  010F5A  0EFF               	movlw	-1
 10985  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 10986  010F62  0E65               	movlw	101
 10987  010F64  1835               	xorwf	btemp^0,w,c
 10988  010F66  A4D8               	btfss	status,2,c
 10989  010F68  EF16  F081         	goto	l9029
 10990                           
 10991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 10992  010F6C  0E4F               	movlw	79
 10993  010F6E  6E3F               	movwf	(btemp+10)^0,c
 10994  010F70  0E00               	movlw	0
 10995  010F72  6E40               	movwf	(btemp+11)^0,c
 10996                           
 10997                           ;stkvar	_i @ sp[(-56)+36]
 10998  010F74  0EEC               	movlw	-20
 10999  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11000  010F7C  0EED               	movlw	-19
 11001  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11002                           
 11003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11004                           ;stkvar	_i @ sp[(-56)+36]
 11005  010F84  0EEC               	movlw	-20
 11006  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 11007  010F8C  0EED               	movlw	-19
 11008  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 11009  010F94  0EA4               	movlw	low _dbuf
 11010  010F96  243F               	addwf	(btemp+10)^0,w,c
 11011  010F98  6ED9               	movwf	fsr2l,c
 11012  010F9A  0E01               	movlw	high _dbuf
 11013  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 11014  010F9E  6EDA               	movwf	fsr2h,c
 11015  010FA0  0E00               	movlw	0
 11016  010FA2  6EDF               	movwf	indf2,c
 11017                           
 11018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11019                           ;stkvar	_sign @ sp[(-56)+42]
 11020  010FA4  0EF2               	movlw	-14
 11021  010FA6  6AE3               	clrf	plusw1,c
 11022  010FA8  0EF3               	movlw	-13
 11023  010FAA  6AE3               	clrf	plusw1,c
 11024                           
 11025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11026                           ;stkvar	_e @ sp[(-56)+34]
 11027  010FAC  0EEB               	movlw	-21
 11028  010FAE  AEE3               	btfss	plusw1,7,c
 11029  010FB0  D012               	goto	l9239
 11030                           
 11031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11032  010FB2  0E01               	movlw	1
 11033  010FB4  6E3F               	movwf	(btemp+10)^0,c
 11034  010FB6  0E00               	movlw	0
 11035  010FB8  6E40               	movwf	(btemp+11)^0,c
 11036                           
 11037                           ;stkvar	_sign @ sp[(-56)+42]
 11038  010FBA  0EF2               	movlw	-14
 11039  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11040  010FC2  0EF3               	movlw	-13
 11041  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11042                           
 11043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11044                           ;stkvar	_e @ sp[(-56)+34]
 11045                           ;stkvar	_e @ sp[(-56)+34]
 11046  010FCA  0EEA               	movlw	-22
 11047  010FCC  6CE3               	negf	plusw1,c
 11048  010FCE  0EEB               	movlw	-21
 11049  010FD0  1EE3               	comf	plusw1,f,c
 11050  010FD2  B0D8               	btfsc	status,0,c
 11051  010FD4  2AE3               	incf	plusw1,f,c
 11052  010FD6                     l9239:
 11053                           
 11054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11055  010FD6  0E02               	movlw	2
 11056  010FD8  6E3F               	movwf	(btemp+10)^0,c
 11057  010FDA  0E00               	movlw	0
 11058  010FDC  6E40               	movwf	(btemp+11)^0,c
 11059                           
 11060                           ;stkvar	_p @ sp[(-56)+40]
 11061  010FDE  0EF0               	movlw	-16
 11062  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11063  010FE6  0EF1               	movlw	-15
 11064  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 11065                           
 11066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11067  010FEE  D051               	goto	l9251
 11068  010FF0                     l9241:
 11069                           
 11070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11071                           ;stkvar	_i @ sp[(-56)+36]
 11072  010FF0  50E1               	movf	fsr1l,w,c
 11073  010FF2  0FEC               	addlw	-20
 11074  010FF4  6ED9               	movwf	fsr2l,c
 11075  010FF6  50E2               	movf	fsr1h,w,c
 11076  010FF8  6EDA               	movwf	fsr2h,c
 11077  010FFA  0EFF               	movlw	255
 11078  010FFC  22DA               	addwfc	fsr2h,f,c
 11079  010FFE  06DE               	decf	postinc2,f,c
 11080  011000  0E00               	movlw	0
 11081  011002  5ADD               	subwfb	postdec2,f,c
 11082                           
 11083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11084                           ;stkvar	_i @ sp[(-56)+36]
 11085  011004  0EEC               	movlw	-20
 11086  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 11087  01100C  0EED               	movlw	-19
 11088  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 11089  011014  0EA4               	movlw	low _dbuf
 11090  011016  243F               	addwf	(btemp+10)^0,w,c
 11091  011018  6ED9               	movwf	fsr2l,c
 11092  01101A  0E01               	movlw	high _dbuf
 11093  01101C  2040               	addwfc	(btemp+11)^0,w,c
 11094  01101E  6EDA               	movwf	fsr2h,c
 11095  011020  0E0A               	movlw	10
 11096  011022  6EE6               	movwf	postinc1,c
 11097  011024  0E00               	movlw	0
 11098  011026  6EE6               	movwf	postinc1,c
 11099                           
 11100                           ;stkvar	_e @ sp[(-58)+34]
 11101  011028  0EE8               	movlw	-24
 11102  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11103  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11104  011036  ECC9  F0B0         	call	___awmod	;wreg free
 11105  01103A  5035               	movf	btemp^0,w,c
 11106  01103C  0F30               	addlw	48
 11107  01103E  6EDF               	movwf	indf2,c
 11108                           
 11109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11110  011040  0E0A               	movlw	10
 11111  011042  6EE6               	movwf	postinc1,c
 11112  011044  0E00               	movlw	0
 11113  011046  6EE6               	movwf	postinc1,c
 11114                           
 11115                           ;stkvar	_e @ sp[(-58)+34]
 11116  011048  0EE8               	movlw	-24
 11117  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11118  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11119  011056  ECF9  F0AE         	call	___awdiv	;wreg free
 11120                           
 11121                           ;stkvar	_e @ sp[(-56)+34]
 11122  01105A  0EEA               	movlw	-22
 11123  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11124  011062  0EEB               	movlw	-21
 11125  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11126                           
 11127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11128                           ;stkvar	_p @ sp[(-56)+40]
 11129  01106A  50E1               	movf	fsr1l,w,c
 11130  01106C  0FF0               	addlw	-16
 11131  01106E  6ED9               	movwf	fsr2l,c
 11132  011070  50E2               	movf	fsr1h,w,c
 11133  011072  6EDA               	movwf	fsr2h,c
 11134  011074  0EFF               	movlw	255
 11135  011076  22DA               	addwfc	fsr2h,f,c
 11136  011078  06DE               	decf	postinc2,f,c
 11137  01107A  0E00               	movlw	0
 11138  01107C  5ADD               	subwfb	postdec2,f,c
 11139                           
 11140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11141                           ;stkvar	_w @ sp[(-56)+38]
 11142  01107E  50E1               	movf	fsr1l,w,c
 11143  011080  0FEE               	addlw	-18
 11144  011082  6ED9               	movwf	fsr2l,c
 11145  011084  50E2               	movf	fsr1h,w,c
 11146  011086  6EDA               	movwf	fsr2h,c
 11147  011088  0EFF               	movlw	255
 11148  01108A  22DA               	addwfc	fsr2h,f,c
 11149  01108C  06DE               	decf	postinc2,f,c
 11150  01108E  0E00               	movlw	0
 11151  011090  5ADD               	subwfb	postdec2,f,c
 11152  011092                     l9251:
 11153                           
 11154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11155                           ;stkvar	_e @ sp[(-56)+34]
 11156  011092  0EEA               	movlw	-22
 11157  011094  006F FF8C  F035    	movff	plusw1,btemp
 11158  01109A  0EEB               	movlw	-21
 11159  01109C  50E3               	movf	plusw1,w,c
 11160  01109E  1035               	iorwf	btemp^0,w,c
 11161  0110A0  A4D8               	btfss	status,2,c
 11162  0110A2  D7A6               	goto	l9241
 11163                           
 11164                           ;stkvar	_p @ sp[(-56)+40]
 11165  0110A4  0EF1               	movlw	-15
 11166  0110A6  BEE3               	btfsc	plusw1,7,c
 11167  0110A8  D007               	goto	u9050
 11168  0110AA  0EF1               	movlw	-15
 11169  0110AC  50E3               	movf	plusw1,w,c
 11170  0110AE  E1A0               	bnz	l9241
 11171  0110B0  0EF0               	movlw	-16
 11172  0110B2  04E3               	decf	plusw1,w,c
 11173  0110B4  B0D8               	btfsc	status,0,c
 11174  0110B6  D79C               	goto	l9241
 11175  0110B8                     u9050:
 11176                           
 11177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11178                           ;stkvar	_i @ sp[(-56)+36]
 11179  0110B8  50E1               	movf	fsr1l,w,c
 11180  0110BA  0FEC               	addlw	-20
 11181  0110BC  6ED9               	movwf	fsr2l,c
 11182  0110BE  50E2               	movf	fsr1h,w,c
 11183  0110C0  6EDA               	movwf	fsr2h,c
 11184  0110C2  0EFF               	movlw	255
 11185  0110C4  22DA               	addwfc	fsr2h,f,c
 11186  0110C6  06DE               	decf	postinc2,f,c
 11187  0110C8  0E00               	movlw	0
 11188  0110CA  5ADD               	subwfb	postdec2,f,c
 11189                           
 11190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11191                           ;stkvar	_sign @ sp[(-56)+42]
 11192  0110CC  0EF2               	movlw	-14
 11193  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 11194  0110D4  0EF3               	movlw	-13
 11195  0110D6  50E3               	movf	plusw1,w,c
 11196  0110D8  1035               	iorwf	btemp^0,w,c
 11197  0110DA  A4D8               	btfss	status,2,c
 11198  0110DC  D002               	goto	l9261
 11199  0110DE  0E2B               	movlw	43
 11200  0110E0  D001               	goto	L9
 11201  0110E2                     l9261:
 11202  0110E2  0E2D               	movlw	45
 11203  0110E4                     L9:
 11204  0110E4  6E3F               	movwf	(btemp+10)^0,c
 11205  0110E6  0E00               	movlw	0
 11206  0110E8  6E40               	movwf	(btemp+11)^0,c
 11207                           
 11208                           ;stkvar	_efgtoa$4112 @ sp[(-56)+4]
 11209  0110EA  0ECC               	movlw	-52
 11210  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11211  0110F2  0ECD               	movlw	-51
 11212  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11213                           
 11214                           ;stkvar	_efgtoa$4112 @ sp[(-56)+4]
 11215                           ;stkvar	_i @ sp[(-56)+36]
 11216  0110FA  0EEC               	movlw	-20
 11217  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11218  011102  0EED               	movlw	-19
 11219  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 11220  01110A  0EA4               	movlw	low _dbuf
 11221  01110C  243F               	addwf	(btemp+10)^0,w,c
 11222  01110E  6ED9               	movwf	fsr2l,c
 11223  011110  0E01               	movlw	high _dbuf
 11224  011112  2040               	addwfc	(btemp+11)^0,w,c
 11225  011114  6EDA               	movwf	fsr2h,c
 11226  011116  0ECC               	movlw	-52
 11227  011118  006F FF8F FFDF     	movff	plusw1,indf2
 11228                           
 11229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 11230                           ;stkvar	_w @ sp[(-56)+38]
 11231  01111E  50E1               	movf	fsr1l,w,c
 11232  011120  0FEE               	addlw	-18
 11233  011122  6ED9               	movwf	fsr2l,c
 11234  011124  50E2               	movf	fsr1h,w,c
 11235  011126  6EDA               	movwf	fsr2h,c
 11236  011128  0EFF               	movlw	255
 11237  01112A  22DA               	addwfc	fsr2h,f,c
 11238  01112C  06DE               	decf	postinc2,f,c
 11239  01112E  0E00               	movlw	0
 11240  011130  5ADD               	subwfb	postdec2,f,c
 11241                           
 11242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11243                           ;stkvar	_i @ sp[(-56)+36]
 11244  011132  50E1               	movf	fsr1l,w,c
 11245  011134  0FEC               	addlw	-20
 11246  011136  6ED9               	movwf	fsr2l,c
 11247  011138  50E2               	movf	fsr1h,w,c
 11248  01113A  6EDA               	movwf	fsr2h,c
 11249  01113C  0EFF               	movlw	255
 11250  01113E  22DA               	addwfc	fsr2h,f,c
 11251  011140  06DE               	decf	postinc2,f,c
 11252  011142  0E00               	movlw	0
 11253  011144  5ADD               	subwfb	postdec2,f,c
 11254  011146  0EBF               	movlw	191
 11255  011148  6E3F               	movwf	(btemp+10)^0,c
 11256  01114A  0EFF               	movlw	255
 11257  01114C  6E40               	movwf	(btemp+11)^0,c
 11258                           
 11259                           ;stkvar	_c @ sp[(-56)+-7]
 11260  01114E  0EC1               	movlw	-63
 11261  011150  50E3               	movf	plusw1,w,c
 11262  011152  6E3D               	movwf	(btemp+8)^0,c
 11263  011154  6A3E               	clrf	(btemp+9)^0,c
 11264  011156  503F               	movf	(btemp+10)^0,w,c
 11265  011158  263D               	addwf	(btemp+8)^0,f,c
 11266  01115A  5040               	movf	(btemp+11)^0,w,c
 11267  01115C  223E               	addwfc	(btemp+9)^0,f,c
 11268  01115E  503E               	movf	(btemp+9)^0,w,c
 11269  011160  E106               	bnz	u9070
 11270  011162  0E1A               	movlw	26
 11271  011164  5C3D               	subwf	(btemp+8)^0,w,c
 11272  011166  B0D8               	btfsc	status,0,c
 11273  011168  D002               	goto	u9070
 11274  01116A  0E01               	movlw	1
 11275  01116C  D001               	goto	u9080
 11276  01116E                     u9070:
 11277  01116E  0E00               	movlw	0
 11278  011170                     u9080:
 11279  011170  6E3F               	movwf	(btemp+10)^0,c
 11280  011172  6A40               	clrf	(btemp+11)^0,c
 11281                           
 11282                           ;stkvar	_efgtoa$4114 @ sp[(-56)+0]
 11283  011174  0EC8               	movlw	-56
 11284  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11285  01117C  0EC9               	movlw	-55
 11286  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11287                           
 11288                           ;stkvar	_efgtoa$4114 @ sp[(-56)+0]
 11289  011184  0EC8               	movlw	-56
 11290  011186  006F FF8C  F035    	movff	plusw1,btemp
 11291  01118C  0EC9               	movlw	-55
 11292  01118E  50E3               	movf	plusw1,w,c
 11293  011190  1035               	iorwf	btemp^0,w,c
 11294  011192  A4D8               	btfss	status,2,c
 11295  011194  D002               	goto	l9277
 11296  011196  0E65               	movlw	101
 11297  011198  D001               	goto	L10
 11298  01119A                     l9277:
 11299  01119A  0E45               	movlw	69
 11300  01119C                     L10:
 11301  01119C  6E3F               	movwf	(btemp+10)^0,c
 11302  01119E  0E00               	movlw	0
 11303  0111A0  6E40               	movwf	(btemp+11)^0,c
 11304                           
 11305                           ;stkvar	_efgtoa$4113 @ sp[(-56)+2]
 11306  0111A2  0ECA               	movlw	-54
 11307  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11308  0111AA  0ECB               	movlw	-53
 11309  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11310                           
 11311                           ;stkvar	_efgtoa$4113 @ sp[(-56)+2]
 11312                           ;stkvar	_i @ sp[(-56)+36]
 11313  0111B2  0EEC               	movlw	-20
 11314  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 11315  0111BA  0EED               	movlw	-19
 11316  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 11317  0111C2  0EA4               	movlw	low _dbuf
 11318  0111C4  243F               	addwf	(btemp+10)^0,w,c
 11319  0111C6  6ED9               	movwf	fsr2l,c
 11320  0111C8  0E01               	movlw	high _dbuf
 11321  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 11322  0111CC  6EDA               	movwf	fsr2h,c
 11323  0111CE  0ECA               	movlw	-54
 11324  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 11325                           
 11326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 11327                           ;stkvar	_w @ sp[(-56)+38]
 11328  0111D6  50E1               	movf	fsr1l,w,c
 11329  0111D8  0FEE               	addlw	-18
 11330  0111DA  6ED9               	movwf	fsr2l,c
 11331  0111DC  50E2               	movf	fsr1h,w,c
 11332  0111DE  6EDA               	movwf	fsr2h,c
 11333  0111E0  0EFF               	movlw	255
 11334  0111E2  22DA               	addwfc	fsr2h,f,c
 11335  0111E4  06DE               	decf	postinc2,f,c
 11336  0111E6  0E00               	movlw	0
 11337  0111E8  5ADD               	subwfb	postdec2,f,c
 11338                           
 11339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 11340                           ;stkvar	_i @ sp[(-56)+36]
 11341  0111EA  0EEC               	movlw	-20
 11342  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11343  0111F2  0EED               	movlw	-19
 11344  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 11345  0111FA  0EA4               	movlw	low _dbuf
 11346  0111FC  243F               	addwf	(btemp+10)^0,w,c
 11347  0111FE  6E3D               	movwf	(btemp+8)^0,c
 11348  011200  0E01               	movlw	high _dbuf
 11349  011202  2040               	addwfc	(btemp+11)^0,w,c
 11350  011204  6E3E               	movwf	(btemp+9)^0,c
 11351  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 11352  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 11353                           
 11354                           ;stkvar	_n @ sp[(-58)+32]
 11355  011212  0EA4               	movlw	low _dbuf
 11356  011214  6E3F               	movwf	(btemp+10)^0,c
 11357  011216  0E01               	movlw	high _dbuf
 11358  011218  6E40               	movwf	(btemp+11)^0,c
 11359  01121A  0EE6               	movlw	-26
 11360  01121C  50E3               	movf	plusw1,w,c
 11361  01121E  263F               	addwf	(btemp+10)^0,f,c
 11362  011220  0EE7               	movlw	-25
 11363  011222  50E3               	movf	plusw1,w,c
 11364  011224  2240               	addwfc	(btemp+11)^0,f,c
 11365  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11366  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11367  011232  EC60  F0B3         	call	_strcpy	;wreg free
 11368  011236  EF16  F081         	goto	l9029
 11369  01123A                     l1785:
 11370                           
 11371                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 11372  01123A  0EC1               	movlw	193
 11373  01123C  26E1               	addwf	fsr1l,f,c
 11374  01123E  0EFF               	movlw	255
 11375  011240  22E2               	addwfc	fsr1h,f,c
 11376  011242  0012               	return		;funcret
 11377  011244                     __end_of_efgtoa:
 11378                           	opt callstack 0
 11379                           
 11380 ;; *************** function _tolower *****************
 11381 ;; Defined at:
 11382 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;  c               2  [STACK] int 
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;		None
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  2  [STACK] int 
 11389 ;; Registers used:
 11390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/4
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11400 ;;Total ram usage:        0 bytes
 11401 ;; Hardware stack levels used:    1
 11402 ;; Hardware stack levels required when called:    7
 11403 ;; This function calls:
 11404 ;;		_isupper
 11405 ;; This function is called by:
 11406 ;;		_efgtoa
 11407 ;;		_vfpfcnvrt
 11408 ;; This function uses a reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text40
 11412  016FD2                     __ptext40:
 11413                           	opt callstack 0
 11414  016FD2                     _tolower:
 11415                           	opt callstack 0
 11416                           
 11417                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11418  016FD2  52E6               	movf	postinc1,f,c
 11419  016FD4  52E6               	movf	postinc1,f,c
 11420                           
 11421                           ;stkvar	_c @ sp[(-2)+-2]
 11422                           
 11423                           ;incstack = 0
 11424  016FD6  0EFC               	movlw	-4
 11425  016FD8  50E3               	movf	plusw1,w,c
 11426  016FDA  0FBF               	addlw	191
 11427  016FDC  6E3F               	movwf	(btemp+10)^0,c
 11428  016FDE  0EFD               	movlw	-3
 11429  016FE0  006F FF8C  F040    	movff	plusw1,btemp+11
 11430  016FE6  0EFF               	movlw	255
 11431  016FE8  2240               	addwfc	(btemp+11)^0,f,c
 11432  016FEA  5040               	movf	(btemp+11)^0,w,c
 11433  016FEC  E106               	bnz	u4860
 11434  016FEE  0E1A               	movlw	26
 11435  016FF0  5C3F               	subwf	(btemp+10)^0,w,c
 11436  016FF2  B0D8               	btfsc	status,0,c
 11437  016FF4  D002               	goto	u4860
 11438  016FF6  0E01               	movlw	1
 11439  016FF8  D001               	goto	u4870
 11440  016FFA                     u4860:
 11441  016FFA  0E00               	movlw	0
 11442  016FFC                     u4870:
 11443  016FFC  6E3F               	movwf	(btemp+10)^0,c
 11444  016FFE  6A40               	clrf	(btemp+11)^0,c
 11445                           
 11446                           ;stkvar	_tolower$4772 @ sp[(-2)+0]
 11447  017000  0EFE               	movlw	-2
 11448  017002  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11449  017008  0EFF               	movlw	-1
 11450  01700A  0060  F103  FFE3   	movff	btemp+11,plusw1
 11451                           
 11452                           ;stkvar	_tolower$4772 @ sp[(-2)+0]
 11453  017010  0EFE               	movlw	-2
 11454  017012  006F FF8C  F035    	movff	plusw1,btemp
 11455  017018  0EFF               	movlw	-1
 11456  01701A  50E3               	movf	plusw1,w,c
 11457  01701C  1035               	iorwf	btemp^0,w,c
 11458  01701E  B4D8               	btfsc	status,2,c
 11459  017020  D00D               	goto	l6203
 11460                           
 11461                           ;stkvar	_c @ sp[(-2)+-2]
 11462  017022  0EFC               	movlw	-4
 11463  017024  006F FF8C  F035    	movff	plusw1,btemp
 11464  01702A  0EFD               	movlw	-3
 11465  01702C  006F FF8C  F036    	movff	plusw1,btemp+1
 11466  017032  0E20               	movlw	32
 11467  017034  1235               	iorwf	btemp^0,f,c
 11468  017036  0E00               	movlw	0
 11469  017038  1236               	iorwf	(btemp+1)^0,f,c
 11470  01703A  D008               	goto	l2805
 11471  01703C                     l6203:
 11472                           
 11473                           ;stkvar	_c @ sp[(-2)+-2]
 11474  01703C  0EFC               	movlw	-4
 11475  01703E  006F FF8C  F035    	movff	plusw1,btemp
 11476  017044  0EFD               	movlw	-3
 11477  017046  006F FF8C  F036    	movff	plusw1,btemp+1
 11478  01704C                     l2805:
 11479                           
 11480                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11481  01704C  52E5               	movf	postdec1,f,c
 11482  01704E  52E5               	movf	postdec1,f,c
 11483  017050  52E5               	movf	postdec1,f,c
 11484  017052  52E5               	movf	postdec1,f,c
 11485  017054  0012               	return		;funcret
 11486  017056                     __end_of_tolower:
 11487                           	opt callstack 0
 11488                           
 11489 ;; *************** function _isupper *****************
 11490 ;; Defined at:
 11491 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;  c               2  [STACK] int 
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;		None
 11496 ;; Return value:  Size  Location     Type
 11497 ;;                  2  [STACK] int 
 11498 ;; Registers used:
 11499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11500 ;; Tracked objects:
 11501 ;;		On entry : 0/0
 11502 ;;		On exit  : 0/0
 11503 ;;		Unchanged: 0/0
 11504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11509 ;;Total ram usage:        0 bytes
 11510 ;; Hardware stack levels used:    1
 11511 ;; Hardware stack levels required when called:    6
 11512 ;; This function calls:
 11513 ;;		Nothing
 11514 ;; This function is called by:
 11515 ;;		_efgtoa
 11516 ;;		_xtoa
 11517 ;;		_vfpfcnvrt
 11518 ;;		_tolower
 11519 ;; This function uses a reentrant model
 11520 ;;
 11521                           
 11522                           	psect	text41
 11523  017950                     __ptext41:
 11524                           	opt callstack 0
 11525  017950                     _isupper:
 11526                           	opt callstack 17
 11527                           
 11528                           ;stkvar	_c @ sp[(0)+-2]
 11529                           
 11530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11531                           ;incstack = 0
 11532  017950  0EFE               	movlw	-2
 11533  017952  50E3               	movf	plusw1,w,c
 11534  017954  0FBF               	addlw	191
 11535  017956  6E3F               	movwf	(btemp+10)^0,c
 11536  017958  0EFF               	movlw	-1
 11537  01795A  006F FF8C  F040    	movff	plusw1,btemp+11
 11538  017960  0EFF               	movlw	255
 11539  017962  2240               	addwfc	(btemp+11)^0,f,c
 11540  017964  5040               	movf	(btemp+11)^0,w,c
 11541  017966  E106               	bnz	u4260
 11542  017968  0E1A               	movlw	26
 11543  01796A  5C3F               	subwf	(btemp+10)^0,w,c
 11544  01796C  B0D8               	btfsc	status,0,c
 11545  01796E  D002               	goto	u4260
 11546  017970  0E01               	movlw	1
 11547  017972  D001               	goto	u4270
 11548  017974                     u4260:
 11549  017974  0E00               	movlw	0
 11550  017976                     u4270:
 11551  017976  6E35               	movwf	btemp^0,c
 11552  017978  6A36               	clrf	(btemp+1)^0,c
 11553                           
 11554                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11555  01797A  52E5               	movf	postdec1,f,c
 11556  01797C  52E5               	movf	postdec1,f,c
 11557  01797E  0012               	return		;funcret
 11558  017980                     __end_of_isupper:
 11559                           	opt callstack 0
 11560                           
 11561 ;; *************** function _strcpy *****************
 11562 ;; Defined at:
 11563 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;  dest            2  [STACK] PTR unsigned char 
 11566 ;;		 -> dbuf(80), 
 11567 ;;  src             2  [STACK] PTR const unsigned char 
 11568 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 11569 ;;		 -> dbuf(80), 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;  d               2  [STACK] PTR unsigned char 
 11572 ;;		 -> dbuf(80), 
 11573 ;;  s               2  [STACK] PTR const unsigned char 
 11574 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 11575 ;;		 -> dbuf(80), 
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  2  [STACK] PTR unsigned char 
 11578 ;; Registers used:
 11579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/4
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11589 ;;Total ram usage:        0 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:    6
 11592 ;; This function calls:
 11593 ;;		Nothing
 11594 ;; This function is called by:
 11595 ;;		_efgtoa
 11596 ;; This function uses a reentrant model
 11597 ;;
 11598                           
 11599                           	psect	text42
 11600  0166C0                     __ptext42:
 11601                           	opt callstack 0
 11602  0166C0                     _strcpy:
 11603                           	opt callstack 0
 11604                           
 11605                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11606  0166C0  52E6               	movf	postinc1,f,c
 11607  0166C2  52E6               	movf	postinc1,f,c
 11608  0166C4  52E6               	movf	postinc1,f,c
 11609  0166C6  52E6               	movf	postinc1,f,c
 11610                           
 11611                           ;stkvar	_src @ sp[(-4)+-4]
 11612                           
 11613                           ;incstack = 0
 11614  0166C8  0EF8               	movlw	-8
 11615  0166CA  006F FF8C  F03F    	movff	plusw1,btemp+10
 11616  0166D0  0EF9               	movlw	-7
 11617  0166D2  006F FF8C  F040    	movff	plusw1,btemp+11
 11618                           
 11619                           ;stkvar	_s @ sp[(-4)+2]
 11620  0166D8  0EFF               	movlw	-1
 11621  0166DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 11622  0166E0  0EFE               	movlw	-2
 11623  0166E2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11624                           
 11625                           ;stkvar	_dest @ sp[(-4)+-2]
 11626  0166E8  0EFA               	movlw	-6
 11627  0166EA  006F FF8C  F03F    	movff	plusw1,btemp+10
 11628  0166F0  0EFB               	movlw	-5
 11629  0166F2  006F FF8C  F040    	movff	plusw1,btemp+11
 11630                           
 11631                           ;stkvar	_d @ sp[(-4)+0]
 11632  0166F8  0EFD               	movlw	-3
 11633  0166FA  0060  F103  FFE3   	movff	btemp+11,plusw1
 11634  016700  0EFC               	movlw	-4
 11635  016702  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11636  016708                     l8903:
 11637                           
 11638                           ;stkvar	_s @ sp[(-4)+2]
 11639  016708  50E1               	movf	fsr1l,w,c
 11640  01670A  0FFE               	addlw	-2
 11641  01670C  6ED9               	movwf	fsr2l,c
 11642  01670E  50E2               	movf	fsr1h,w,c
 11643  016710  6EDA               	movwf	fsr2h,c
 11644  016712  0EFF               	movlw	255
 11645  016714  22DA               	addwfc	fsr2h,f,c
 11646  016716  006F FF7C  F03F    	movff	indf2,btemp+10
 11647  01671C  0E01               	movlw	1
 11648  01671E  26DE               	addwf	postinc2,f,c
 11649  016720  006F FF7C  F040    	movff	indf2,btemp+11
 11650  016726  0E00               	movlw	0
 11651  016728  22DD               	addwfc	postdec2,f,c
 11652  01672A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 11653  016730  0060  F103  FFF7   	movff	btemp+11,tblptrh
 11654  016736  0E00               	movlw	low (__mediumconst shr (0+16))
 11655  016738  6EF8               	movwf	tblptru,c
 11656                           
 11657                           ;stkvar	_d @ sp[(-4)+0]
 11658  01673A  50E1               	movf	fsr1l,w,c
 11659  01673C  0FFC               	addlw	-4
 11660  01673E  6ED9               	movwf	fsr2l,c
 11661  016740  50E2               	movf	fsr1h,w,c
 11662  016742  6EDA               	movwf	fsr2h,c
 11663  016744  0EFF               	movlw	255
 11664  016746  22DA               	addwfc	fsr2h,f,c
 11665  016748  006F FF7C  F03F    	movff	indf2,btemp+10
 11666  01674E  0E01               	movlw	1
 11667  016750  26DE               	addwf	postinc2,f,c
 11668  016752  006F FF7C  F040    	movff	indf2,btemp+11
 11669  016758  0E00               	movlw	0
 11670  01675A  22DD               	addwfc	postdec2,f,c
 11671  01675C  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 11672  016762  0060  F103  FFDA   	movff	btemp+11,fsr2h
 11673  016768  0E1F               	movlw	(high __ramtop+-1)
 11674  01676A  64F7               	cpfsgt	tblptrh,c
 11675  01676C  D003               	bra	u8387
 11676  01676E  0008               	tblrd		*
 11677  016770  50F5               	movf	tablat,w,c
 11678  016772  D007               	bra	u8380
 11679  016774                     u8387:
 11680  016774  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11681  01677A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11682  016780  50EF               	movf	indf0,w,c
 11683  016782                     u8380:
 11684  016782  6EDF               	movwf	indf2,c
 11685  016784  50DF               	movf	indf2,w,c
 11686  016786  A4D8               	btfss	status,2,c
 11687  016788  D7BF               	goto	l8903
 11688                           
 11689                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 11690  01678A  0EF8               	movlw	248
 11691  01678C  26E1               	addwf	fsr1l,f,c
 11692  01678E  0EFF               	movlw	255
 11693  016790  22E2               	addwfc	fsr1h,f,c
 11694  016792  0012               	return		;funcret
 11695  016794                     __end_of_strcpy:
 11696                           	opt callstack 0
 11697                           
 11698 ;; *************** function _floorf *****************
 11699 ;; Defined at:
 11700 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;  x               4  [STACK] float 
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;  u               4  [STACK] struct .
 11705 ;;  m               4  [STACK] unsigned long 
 11706 ;;  e               2  [STACK] int 
 11707 ;; Return value:  Size  Location     Type
 11708 ;;                  4  [STACK] float 
 11709 ;; Registers used:
 11710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 11711 ;; Tracked objects:
 11712 ;;		On entry : 0/4
 11713 ;;		On exit  : 0/0
 11714 ;;		Unchanged: 0/0
 11715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11720 ;;Total ram usage:        0 bytes
 11721 ;; Hardware stack levels used:    1
 11722 ;; Hardware stack levels required when called:    6
 11723 ;; This function calls:
 11724 ;;		Nothing
 11725 ;; This function is called by:
 11726 ;;		_efgtoa
 11727 ;; This function uses a reentrant model
 11728 ;;
 11729                           
 11730                           	psect	text43
 11731  013F22                     __ptext43:
 11732                           	opt callstack 0
 11733  013F22                     _floorf:
 11734                           	opt callstack 0
 11735                           
 11736                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11737  013F22  0E0A               	movlw	10
 11738  013F24  26E1               	addwf	fsr1l,f,c
 11739  013F26  0E00               	movlw	0
 11740  013F28  22E2               	addwfc	fsr1h,f,c
 11741                           
 11742                           ;incstack = 0
 11743  013F2A  0060  F298  F03D   	movff	floorf@F524,btemp+8
 11744  013F30  0060  F29C  F03E   	movff	floorf@F524+1,btemp+9
 11745  013F36  0060  F2A0  F03F   	movff	floorf@F524+2,btemp+10
 11746  013F3C  0060  F2A4  F040   	movff	floorf@F524+3,btemp+11
 11747                           
 11748                           ;stkvar	_u @ sp[(-10)+0]
 11749  013F42  0EF6               	movlw	-10
 11750  013F44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11751  013F4A  0EF7               	movlw	-9
 11752  013F4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11753  013F52  0EF8               	movlw	-8
 11754  013F54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11755  013F5A  0EF9               	movlw	-7
 11756  013F5C  0060  F103  FFE3   	movff	btemp+11,plusw1
 11757                           
 11758                           ;stkvar	_x @ sp[(-10)+-4]
 11759  013F62  0EF2               	movlw	-14
 11760  013F64  006F FF8C  F03D    	movff	plusw1,btemp+8
 11761  013F6A  0EF3               	movlw	-13
 11762  013F6C  006F FF8C  F03E    	movff	plusw1,btemp+9
 11763  013F72  0EF4               	movlw	-12
 11764  013F74  006F FF8C  F03F    	movff	plusw1,btemp+10
 11765  013F7A  0EF5               	movlw	-11
 11766  013F7C  006F FF8C  F040    	movff	plusw1,btemp+11
 11767                           
 11768                           ;stkvar	_u @ sp[(-10)+0]
 11769  013F82  0EF6               	movlw	-10
 11770  013F84  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11771  013F8A  0EF7               	movlw	-9
 11772  013F8C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11773  013F92  0EF8               	movlw	-8
 11774  013F94  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11775  013F9A  0EF9               	movlw	-7
 11776  013F9C  0060  F103  FFE3   	movff	btemp+11,plusw1
 11777  013FA2  0E81               	movlw	129
 11778  013FA4  6E3F               	movwf	(btemp+10)^0,c
 11779  013FA6  0EFF               	movlw	255
 11780  013FA8  6E40               	movwf	(btemp+11)^0,c
 11781                           
 11782                           ;stkvar	_u @ sp[(-10)+0]
 11783  013FAA  0EF6               	movlw	-10
 11784  013FAC  006F FF8C  F039    	movff	plusw1,btemp+4
 11785  013FB2  0EF7               	movlw	-9
 11786  013FB4  006F FF8C  F03A    	movff	plusw1,btemp+5
 11787  013FBA  0EF8               	movlw	-8
 11788  013FBC  006F FF8C  F03B    	movff	plusw1,btemp+6
 11789  013FC2  0EF9               	movlw	-7
 11790  013FC4  006F FF8C  F03C    	movff	plusw1,btemp+7
 11791  013FCA  0E18               	movlw	24
 11792  013FCC  D005               	goto	u4890
 11793  013FCE                     u4895:
 11794  013FCE  90D8               	bcf	status,0,c
 11795  013FD0  323C               	rrcf	(btemp+7)^0,f,c
 11796  013FD2  323B               	rrcf	(btemp+6)^0,f,c
 11797  013FD4  323A               	rrcf	(btemp+5)^0,f,c
 11798  013FD6  3239               	rrcf	(btemp+4)^0,f,c
 11799  013FD8                     u4890:
 11800  013FD8  2EE8               	decfsz	wreg,f,c
 11801  013FDA  D7F9               	goto	u4895
 11802  013FDC  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 11803  013FE2  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 11804  013FE8  0EFF               	movlw	255
 11805  013FEA  163D               	andwf	(btemp+8)^0,f,c
 11806  013FEC  0E00               	movlw	0
 11807  013FEE  163E               	andwf	(btemp+9)^0,f,c
 11808  013FF0  503F               	movf	(btemp+10)^0,w,c
 11809  013FF2  263D               	addwf	(btemp+8)^0,f,c
 11810  013FF4  5040               	movf	(btemp+11)^0,w,c
 11811  013FF6  223E               	addwfc	(btemp+9)^0,f,c
 11812                           
 11813                           ;stkvar	_e @ sp[(-10)+8]
 11814  013FF8  0EFE               	movlw	-2
 11815  013FFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11816  014000  0EFF               	movlw	-1
 11817  014002  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11818                           
 11819                           ;stkvar	_e @ sp[(-10)+8]
 11820  014008  0EFF               	movlw	-1
 11821  01400A  BEE3               	btfsc	plusw1,7,c
 11822  01400C  D019               	goto	l6217
 11823  01400E  0EFF               	movlw	-1
 11824  014010  50E3               	movf	plusw1,w,c
 11825  014012  E108               	bnz	u4900
 11826  014014  0EFE               	movlw	-2
 11827  014016  006F FF8C  F035    	movff	plusw1,btemp
 11828  01401C  0E17               	movlw	23
 11829  01401E  5E35               	subwf	btemp^0,f,c
 11830  014020  A0D8               	btfss	status,0,c
 11831  014022  D00E               	goto	l6217
 11832  014024                     u4900:
 11833                           
 11834                           ;stkvar	_x @ sp[(-10)+-4]
 11835  014024  0EF2               	movlw	-14
 11836  014026  006F FF8C  F035    	movff	plusw1,btemp
 11837  01402C  0EF3               	movlw	-13
 11838  01402E  006F FF8C  F036    	movff	plusw1,btemp+1
 11839  014034  0EF4               	movlw	-12
 11840  014036  006F FF8C  F037    	movff	plusw1,btemp+2
 11841  01403C  0EF5               	movlw	-11
 11842  01403E  D11F               	goto	L11
 11843  014040                     l6217:
 11844                           
 11845                           ;stkvar	_e @ sp[(-10)+8]
 11846  014040  0EFF               	movlw	-1
 11847  014042  BEE3               	btfsc	plusw1,7,c
 11848  014044  D0B4               	goto	l6233
 11849                           
 11850                           ;stkvar	_e @ sp[(-10)+8]
 11851  014046  0EFE               	movlw	-2
 11852  014048  006F FF8C  F040    	movff	plusw1,btemp+11
 11853  01404E  0EFF               	movlw	255
 11854  014050  6E39               	movwf	(btemp+4)^0,c
 11855  014052  0EFF               	movlw	255
 11856  014054  6E3A               	movwf	(btemp+5)^0,c
 11857  014056  0E7F               	movlw	127
 11858  014058  6E3B               	movwf	(btemp+6)^0,c
 11859  01405A  0E00               	movlw	0
 11860  01405C  6E3C               	movwf	(btemp+7)^0,c
 11861  01405E                     u4925:
 11862  01405E  6640               	tstfsz	(btemp+11)^0,c
 11863  014060  D001               	goto	u4926
 11864  014062  D007               	goto	u4927
 11865  014064                     u4926:
 11866  014064  343C               	rlcf	(btemp+7)^0,w,c
 11867  014066  323C               	rrcf	(btemp+7)^0,f,c
 11868  014068  323B               	rrcf	(btemp+6)^0,f,c
 11869  01406A  323A               	rrcf	(btemp+5)^0,f,c
 11870  01406C  3239               	rrcf	(btemp+4)^0,f,c
 11871  01406E  2E40               	decfsz	(btemp+11)^0,f,c
 11872  014070  D7F6               	goto	u4925
 11873  014072                     u4927:
 11874                           
 11875                           ;stkvar	_m @ sp[(-10)+4]
 11876  014072  0EFA               	movlw	-6
 11877  014074  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 11878  01407A  0EFB               	movlw	-5
 11879  01407C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 11880  014082  0EFC               	movlw	-4
 11881  014084  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 11882  01408A  0EFD               	movlw	-3
 11883  01408C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 11884                           
 11885                           ;stkvar	_m @ sp[(-10)+4]
 11886                           ;stkvar	_u @ sp[(-10)+0]
 11887  014092  0EF6               	movlw	-10
 11888  014094  006F FF8C  F03D    	movff	plusw1,btemp+8
 11889  01409A  0EF7               	movlw	-9
 11890  01409C  006F FF8C  F03E    	movff	plusw1,btemp+9
 11891  0140A2  0EF8               	movlw	-8
 11892  0140A4  006F FF8C  F03F    	movff	plusw1,btemp+10
 11893  0140AA  0EF9               	movlw	-7
 11894  0140AC  006F FF8C  F040    	movff	plusw1,btemp+11
 11895  0140B2  0EFA               	movlw	-6
 11896  0140B4  50E3               	movf	plusw1,w,c
 11897  0140B6  163D               	andwf	(btemp+8)^0,f,c
 11898  0140B8  0EFB               	movlw	-5
 11899  0140BA  50E3               	movf	plusw1,w,c
 11900  0140BC  163E               	andwf	(btemp+9)^0,f,c
 11901  0140BE  0EFC               	movlw	-4
 11902  0140C0  50E3               	movf	plusw1,w,c
 11903  0140C2  163F               	andwf	(btemp+10)^0,f,c
 11904  0140C4  0EFD               	movlw	-3
 11905  0140C6  50E3               	movf	plusw1,w,c
 11906  0140C8  1640               	andwf	(btemp+11)^0,f,c
 11907  0140CA  503D               	movf	(btemp+8)^0,w,c
 11908  0140CC  103E               	iorwf	(btemp+9)^0,w,c
 11909  0140CE  103F               	iorwf	(btemp+10)^0,w,c
 11910  0140D0  1040               	iorwf	(btemp+11)^0,w,c
 11911  0140D2  B4D8               	btfsc	status,2,c
 11912  0140D4  D7A7               	goto	u4900
 11913                           
 11914                           ;stkvar	_u @ sp[(-10)+0]
 11915  0140D6  0EF6               	movlw	-10
 11916  0140D8  006F FF8C  F03D    	movff	plusw1,btemp+8
 11917  0140DE  0EF7               	movlw	-9
 11918  0140E0  006F FF8C  F03E    	movff	plusw1,btemp+9
 11919  0140E6  0EF8               	movlw	-8
 11920  0140E8  006F FF8C  F03F    	movff	plusw1,btemp+10
 11921  0140EE  0EF9               	movlw	-7
 11922  0140F0  006F FF8C  F040    	movff	plusw1,btemp+11
 11923  0140F6  0E20               	movlw	32
 11924  0140F8  D005               	goto	u4940
 11925  0140FA                     u4945:
 11926  0140FA  90D8               	bcf	status,0,c
 11927  0140FC  3240               	rrcf	(btemp+11)^0,f,c
 11928  0140FE  323F               	rrcf	(btemp+10)^0,f,c
 11929  014100  323E               	rrcf	(btemp+9)^0,f,c
 11930  014102  323D               	rrcf	(btemp+8)^0,f,c
 11931  014104                     u4940:
 11932  014104  2EE8               	decfsz	wreg,f,c
 11933  014106  D7F9               	goto	u4945
 11934  014108  503D               	movf	(btemp+8)^0,w,c
 11935  01410A  B4D8               	btfsc	status,2,c
 11936  01410C  D028               	goto	l6231
 11937                           
 11938                           ;stkvar	_m @ sp[(-10)+4]
 11939                           ;stkvar	_u @ sp[(-10)+0]
 11940  01410E  0EF6               	movlw	-10
 11941  014110  50E3               	movf	plusw1,w,c
 11942  014112  6E35               	movwf	btemp^0,c
 11943  014114  0EFA               	movlw	-6
 11944  014116  50E3               	movf	plusw1,w,c
 11945  014118  2635               	addwf	btemp^0,f,c
 11946  01411A  0EF6               	movlw	-10
 11947  01411C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11948  014122  0EF7               	movlw	-9
 11949  014124  50E3               	movf	plusw1,w,c
 11950  014126  6E35               	movwf	btemp^0,c
 11951  014128  0EFB               	movlw	-5
 11952  01412A  50E3               	movf	plusw1,w,c
 11953  01412C  2235               	addwfc	btemp^0,f,c
 11954  01412E  0EF7               	movlw	-9
 11955  014130  0060  F0D7  FFE3   	movff	btemp,plusw1
 11956  014136  0EF8               	movlw	-8
 11957  014138  50E3               	movf	plusw1,w,c
 11958  01413A  6E35               	movwf	btemp^0,c
 11959  01413C  0EFC               	movlw	-4
 11960  01413E  50E3               	movf	plusw1,w,c
 11961  014140  2235               	addwfc	btemp^0,f,c
 11962  014142  0EF8               	movlw	-8
 11963  014144  0060  F0D7  FFE3   	movff	btemp,plusw1
 11964  01414A  0EF9               	movlw	-7
 11965  01414C  50E3               	movf	plusw1,w,c
 11966  01414E  6E35               	movwf	btemp^0,c
 11967  014150  0EFD               	movlw	-3
 11968  014152  50E3               	movf	plusw1,w,c
 11969  014154  2235               	addwfc	btemp^0,f,c
 11970  014156  0EF9               	movlw	-7
 11971  014158  0060  F0D7  FFE3   	movff	btemp,plusw1
 11972  01415E                     l6231:
 11973                           
 11974                           ;stkvar	_m @ sp[(-10)+4]
 11975  01415E  0EFA               	movlw	-6
 11976  014160  006F FF8C  F03D    	movff	plusw1,btemp+8
 11977  014166  0EFB               	movlw	-5
 11978  014168  006F FF8C  F03E    	movff	plusw1,btemp+9
 11979  01416E  0EFC               	movlw	-4
 11980  014170  006F FF8C  F03F    	movff	plusw1,btemp+10
 11981  014176  0EFD               	movlw	-3
 11982  014178  006F FF8C  F040    	movff	plusw1,btemp+11
 11983  01417E  1C3D               	comf	(btemp+8)^0,w,c
 11984  014180  6E39               	movwf	(btemp+4)^0,c
 11985  014182  1C3E               	comf	(btemp+9)^0,w,c
 11986  014184  6E3A               	movwf	(btemp+5)^0,c
 11987  014186  1C3F               	comf	(btemp+10)^0,w,c
 11988  014188  6E3B               	movwf	(btemp+6)^0,c
 11989  01418A  1C40               	comf	(btemp+11)^0,w,c
 11990  01418C  6E3C               	movwf	(btemp+7)^0,c
 11991                           
 11992                           ;stkvar	_u @ sp[(-10)+0]
 11993  01418E  50E1               	movf	fsr1l,w,c
 11994  014190  0FF6               	addlw	-10
 11995  014192  6ED9               	movwf	fsr2l,c
 11996  014194  50E2               	movf	fsr1h,w,c
 11997  014196  6EDA               	movwf	fsr2h,c
 11998  014198  0EFF               	movlw	255
 11999  01419A  22DA               	addwfc	fsr2h,f,c
 12000  01419C  5039               	movf	(btemp+4)^0,w,c
 12001  01419E  16DE               	andwf	postinc2,f,c
 12002  0141A0  503A               	movf	(btemp+5)^0,w,c
 12003  0141A2  16DE               	andwf	postinc2,f,c
 12004  0141A4  503B               	movf	(btemp+6)^0,w,c
 12005  0141A6  16DE               	andwf	postinc2,f,c
 12006  0141A8  503C               	movf	(btemp+7)^0,w,c
 12007  0141AA  16DE               	andwf	postinc2,f,c
 12008  0141AC  D05B               	goto	l6241
 12009  0141AE                     l6233:
 12010                           
 12011                           ;stkvar	_u @ sp[(-10)+0]
 12012  0141AE  0EF6               	movlw	-10
 12013  0141B0  006F FF8C  F03D    	movff	plusw1,btemp+8
 12014  0141B6  0EF7               	movlw	-9
 12015  0141B8  006F FF8C  F03E    	movff	plusw1,btemp+9
 12016  0141BE  0EF8               	movlw	-8
 12017  0141C0  006F FF8C  F03F    	movff	plusw1,btemp+10
 12018  0141C6  0EF9               	movlw	-7
 12019  0141C8  006F FF8C  F040    	movff	plusw1,btemp+11
 12020  0141CE  0E20               	movlw	32
 12021  0141D0  D005               	goto	u4960
 12022  0141D2                     u4965:
 12023  0141D2  90D8               	bcf	status,0,c
 12024  0141D4  3240               	rrcf	(btemp+11)^0,f,c
 12025  0141D6  323F               	rrcf	(btemp+10)^0,f,c
 12026  0141D8  323E               	rrcf	(btemp+9)^0,f,c
 12027  0141DA  323D               	rrcf	(btemp+8)^0,f,c
 12028  0141DC                     u4960:
 12029  0141DC  2EE8               	decfsz	wreg,f,c
 12030  0141DE  D7F9               	goto	u4965
 12031  0141E0  663D               	tstfsz	(btemp+8)^0,c
 12032  0141E2  D009               	goto	l6237
 12033                           
 12034                           ;stkvar	_u @ sp[(-10)+0]
 12035  0141E4  0EF6               	movlw	-10
 12036  0141E6  6AE3               	clrf	plusw1,c
 12037  0141E8  0EF7               	movlw	-9
 12038  0141EA  6AE3               	clrf	plusw1,c
 12039  0141EC  0EF8               	movlw	-8
 12040  0141EE  6AE3               	clrf	plusw1,c
 12041  0141F0  0EF9               	movlw	-7
 12042  0141F2  6AE3               	clrf	plusw1,c
 12043  0141F4  D037               	goto	l6241
 12044  0141F6                     l6237:
 12045                           
 12046                           ;stkvar	_u @ sp[(-10)+0]
 12047  0141F6  0EF6               	movlw	-10
 12048  0141F8  006F FF8C  F03D    	movff	plusw1,btemp+8
 12049  0141FE  0EF7               	movlw	-9
 12050  014200  006F FF8C  F03E    	movff	plusw1,btemp+9
 12051  014206  0EF8               	movlw	-8
 12052  014208  006F FF8C  F03F    	movff	plusw1,btemp+10
 12053  01420E  0EF9               	movlw	-7
 12054  014210  006F FF8C  F040    	movff	plusw1,btemp+11
 12055  014216  90D8               	bcf	status,0,c
 12056  014218  343D               	rlcf	(btemp+8)^0,w,c
 12057  01421A  6E39               	movwf	(btemp+4)^0,c
 12058  01421C  343E               	rlcf	(btemp+9)^0,w,c
 12059  01421E  6E3A               	movwf	(btemp+5)^0,c
 12060  014220  343F               	rlcf	(btemp+10)^0,w,c
 12061  014222  6E3B               	movwf	(btemp+6)^0,c
 12062  014224  3440               	rlcf	(btemp+11)^0,w,c
 12063  014226  6E3C               	movwf	(btemp+7)^0,c
 12064  014228  5039               	movf	(btemp+4)^0,w,c
 12065  01422A  103A               	iorwf	(btemp+5)^0,w,c
 12066  01422C  103B               	iorwf	(btemp+6)^0,w,c
 12067  01422E  103C               	iorwf	(btemp+7)^0,w,c
 12068  014230  B4D8               	btfsc	status,2,c
 12069  014232  D018               	goto	l6241
 12070  014234  0E00               	movlw	0
 12071  014236  6E3D               	movwf	(btemp+8)^0,c
 12072  014238  0E00               	movlw	0
 12073  01423A  6E3E               	movwf	(btemp+9)^0,c
 12074  01423C  0E80               	movlw	128
 12075  01423E  6E3F               	movwf	(btemp+10)^0,c
 12076  014240  0EBF               	movlw	191
 12077  014242  6E40               	movwf	(btemp+11)^0,c
 12078                           
 12079                           ;stkvar	_u @ sp[(-10)+0]
 12080  014244  0EF6               	movlw	-10
 12081  014246  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12082  01424C  0EF7               	movlw	-9
 12083  01424E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12084  014254  0EF8               	movlw	-8
 12085  014256  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12086  01425C  0EF9               	movlw	-7
 12087  01425E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12088  014264                     l6241:
 12089                           
 12090                           ;stkvar	_u @ sp[(-10)+0]
 12091  014264  0EF6               	movlw	-10
 12092  014266  006F FF8C  F035    	movff	plusw1,btemp
 12093  01426C  0EF7               	movlw	-9
 12094  01426E  006F FF8C  F036    	movff	plusw1,btemp+1
 12095  014274  0EF8               	movlw	-8
 12096  014276  006F FF8C  F037    	movff	plusw1,btemp+2
 12097  01427C  0EF9               	movlw	-7
 12098  01427E                     L11:
 12099  01427E  006F FF8C  F038    	movff	plusw1,btemp+3
 12100                           
 12101                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12102  014284  0EF2               	movlw	242
 12103  014286  26E1               	addwf	fsr1l,f,c
 12104  014288  0EFF               	movlw	255
 12105  01428A  22E2               	addwfc	fsr1h,f,c
 12106  01428C  0012               	return		;funcret
 12107  01428E                     __end_of_floorf:
 12108                           	opt callstack 0
 12109                           
 12110 ;; *************** function ___fpclassifyf *****************
 12111 ;; Defined at:
 12112 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;  x               4  [STACK] float 
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;  u               4  [STACK] struct .
 12117 ;;  e               2  [STACK] int 
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  2  [STACK] int 
 12120 ;; Registers used:
 12121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12122 ;; Tracked objects:
 12123 ;;		On entry : 0/4
 12124 ;;		On exit  : 0/0
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12131 ;;Total ram usage:        0 bytes
 12132 ;; Hardware stack levels used:    1
 12133 ;; Hardware stack levels required when called:    6
 12134 ;; This function calls:
 12135 ;;		Nothing
 12136 ;; This function is called by:
 12137 ;;		_efgtoa
 12138 ;; This function uses a reentrant model
 12139 ;;
 12140                           
 12141                           	psect	text44
 12142  015988                     __ptext44:
 12143                           	opt callstack 0
 12144  015988                     ___fpclassifyf:
 12145                           	opt callstack 0
 12146                           
 12147                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12148  015988  0E06               	movlw	6
 12149  01598A  26E1               	addwf	fsr1l,f,c
 12150  01598C  0E00               	movlw	0
 12151  01598E  22E2               	addwfc	fsr1h,f,c
 12152                           
 12153                           ;incstack = 0
 12154  015990  0060  F2A8  F03D   	movff	___fpclassifyf@F463,btemp+8
 12155  015996  0060  F2AC  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 12156  01599C  0060  F2B0  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 12157  0159A2  0060  F2B4  F040   	movff	___fpclassifyf@F463+3,btemp+11
 12158                           
 12159                           ;stkvar	_u @ sp[(-6)+0]
 12160  0159A8  0EFA               	movlw	-6
 12161  0159AA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12162  0159B0  0EFB               	movlw	-5
 12163  0159B2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12164  0159B8  0EFC               	movlw	-4
 12165  0159BA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12166  0159C0  0EFD               	movlw	-3
 12167  0159C2  0060  F103  FFE3   	movff	btemp+11,plusw1
 12168                           
 12169                           ;stkvar	_x @ sp[(-6)+-4]
 12170  0159C8  0EF6               	movlw	-10
 12171  0159CA  006F FF8C  F03D    	movff	plusw1,btemp+8
 12172  0159D0  0EF7               	movlw	-9
 12173  0159D2  006F FF8C  F03E    	movff	plusw1,btemp+9
 12174  0159D8  0EF8               	movlw	-8
 12175  0159DA  006F FF8C  F03F    	movff	plusw1,btemp+10
 12176  0159E0  0EF9               	movlw	-7
 12177  0159E2  006F FF8C  F040    	movff	plusw1,btemp+11
 12178                           
 12179                           ;stkvar	_u @ sp[(-6)+0]
 12180  0159E8  0EFA               	movlw	-6
 12181  0159EA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12182  0159F0  0EFB               	movlw	-5
 12183  0159F2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12184  0159F8  0EFC               	movlw	-4
 12185  0159FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12186  015A00  0EFD               	movlw	-3
 12187  015A02  0060  F103  FFE3   	movff	btemp+11,plusw1
 12188                           
 12189                           ;stkvar	_u @ sp[(-6)+0]
 12190  015A08  0EFA               	movlw	-6
 12191  015A0A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12192  015A10  0EFB               	movlw	-5
 12193  015A12  006F FF8C  F03E    	movff	plusw1,btemp+9
 12194  015A18  0EFC               	movlw	-4
 12195  015A1A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12196  015A20  0EFD               	movlw	-3
 12197  015A22  006F FF8C  F040    	movff	plusw1,btemp+11
 12198  015A28  0E18               	movlw	24
 12199  015A2A  D005               	goto	u4770
 12200  015A2C                     u4775:
 12201  015A2C  90D8               	bcf	status,0,c
 12202  015A2E  3240               	rrcf	(btemp+11)^0,f,c
 12203  015A30  323F               	rrcf	(btemp+10)^0,f,c
 12204  015A32  323E               	rrcf	(btemp+9)^0,f,c
 12205  015A34  323D               	rrcf	(btemp+8)^0,f,c
 12206  015A36                     u4770:
 12207  015A36  2EE8               	decfsz	wreg,f,c
 12208  015A38  D7F9               	goto	u4775
 12209  015A3A  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 12210  015A40  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 12211  015A46  0EFF               	movlw	255
 12212  015A48  163B               	andwf	(btemp+6)^0,f,c
 12213  015A4A  0E00               	movlw	0
 12214  015A4C  163C               	andwf	(btemp+7)^0,f,c
 12215                           
 12216                           ;stkvar	_e @ sp[(-6)+4]
 12217  015A4E  0EFE               	movlw	-2
 12218  015A50  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12219  015A56  0EFF               	movlw	-1
 12220  015A58  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12221                           
 12222                           ;stkvar	_e @ sp[(-6)+4]
 12223  015A5E  0EFE               	movlw	-2
 12224  015A60  006F FF8C  F035    	movff	plusw1,btemp
 12225  015A66  0EFF               	movlw	-1
 12226  015A68  50E3               	movf	plusw1,w,c
 12227  015A6A  1035               	iorwf	btemp^0,w,c
 12228  015A6C  A4D8               	btfss	status,2,c
 12229  015A6E  D023               	goto	l6179
 12230                           
 12231                           ;stkvar	_u @ sp[(-6)+0]
 12232  015A70  0EFA               	movlw	-6
 12233  015A72  006F FF8C  F03D    	movff	plusw1,btemp+8
 12234  015A78  0EFB               	movlw	-5
 12235  015A7A  006F FF8C  F03E    	movff	plusw1,btemp+9
 12236  015A80  0EFC               	movlw	-4
 12237  015A82  006F FF8C  F03F    	movff	plusw1,btemp+10
 12238  015A88  0EFD               	movlw	-3
 12239  015A8A  006F FF8C  F040    	movff	plusw1,btemp+11
 12240  015A90  90D8               	bcf	status,0,c
 12241  015A92  343D               	rlcf	(btemp+8)^0,w,c
 12242  015A94  6E39               	movwf	(btemp+4)^0,c
 12243  015A96  343E               	rlcf	(btemp+9)^0,w,c
 12244  015A98  6E3A               	movwf	(btemp+5)^0,c
 12245  015A9A  343F               	rlcf	(btemp+10)^0,w,c
 12246  015A9C  6E3B               	movwf	(btemp+6)^0,c
 12247  015A9E  3440               	rlcf	(btemp+11)^0,w,c
 12248  015AA0  6E3C               	movwf	(btemp+7)^0,c
 12249  015AA2  5039               	movf	(btemp+4)^0,w,c
 12250  015AA4  103A               	iorwf	(btemp+5)^0,w,c
 12251  015AA6  103B               	iorwf	(btemp+6)^0,w,c
 12252  015AA8  103C               	iorwf	(btemp+7)^0,w,c
 12253  015AAA  A4D8               	btfss	status,2,c
 12254  015AAC  D002               	goto	l6175
 12255  015AAE  0E02               	movlw	2
 12256  015AB0  D02E               	goto	L12
 12257  015AB2                     l6175:
 12258  015AB2  0E03               	movlw	3
 12259  015AB4  D02C               	goto	L12
 12260  015AB6                     l6179:
 12261                           
 12262                           ;stkvar	_e @ sp[(-6)+4]
 12263  015AB6  0EFE               	movlw	-2
 12264  015AB8  28E3               	incf	plusw1,w,c
 12265  015ABA  E128               	bnz	l6185
 12266  015ABC  0EFF               	movlw	-1
 12267  015ABE  50E3               	movf	plusw1,w,c
 12268  015AC0  A4D8               	btfss	status,2,c
 12269  015AC2  D024               	goto	l6185
 12270                           
 12271                           ;stkvar	_u @ sp[(-6)+0]
 12272  015AC4  0EFA               	movlw	-6
 12273  015AC6  006F FF8C  F03D    	movff	plusw1,btemp+8
 12274  015ACC  0EFB               	movlw	-5
 12275  015ACE  006F FF8C  F03E    	movff	plusw1,btemp+9
 12276  015AD4  0EFC               	movlw	-4
 12277  015AD6  006F FF8C  F03F    	movff	plusw1,btemp+10
 12278  015ADC  0EFD               	movlw	-3
 12279  015ADE  006F FF8C  F040    	movff	plusw1,btemp+11
 12280  015AE4  0E09               	movlw	9
 12281  015AE6                     u4815:
 12282  015AE6  90D8               	bcf	status,0,c
 12283  015AE8  363D               	rlcf	(btemp+8)^0,f,c
 12284  015AEA  363E               	rlcf	(btemp+9)^0,f,c
 12285  015AEC  363F               	rlcf	(btemp+10)^0,f,c
 12286  015AEE  3640               	rlcf	(btemp+11)^0,f,c
 12287  015AF0  2EE8               	decfsz	wreg,f,c
 12288  015AF2  D7F9               	goto	u4815
 12289  015AF4  503D               	movf	(btemp+8)^0,w,c
 12290  015AF6  103E               	iorwf	(btemp+9)^0,w,c
 12291  015AF8  103F               	iorwf	(btemp+10)^0,w,c
 12292  015AFA  1040               	iorwf	(btemp+11)^0,w,c
 12293  015AFC  A4D8               	btfss	status,2,c
 12294  015AFE  D002               	goto	u4820
 12295  015B00  0E01               	movlw	1
 12296  015B02  D001               	goto	u4830
 12297  015B04                     u4820:
 12298  015B04  0E00               	movlw	0
 12299  015B06                     u4830:
 12300  015B06  6E35               	movwf	btemp^0,c
 12301  015B08  6A36               	clrf	(btemp+1)^0,c
 12302  015B0A  D004               	goto	l2644
 12303  015B0C                     l6185:
 12304  015B0C  0E04               	movlw	4
 12305  015B0E                     L12:
 12306  015B0E  6E35               	movwf	btemp^0,c
 12307  015B10  0E00               	movlw	0
 12308  015B12  6E36               	movwf	(btemp+1)^0,c
 12309  015B14                     l2644:
 12310                           
 12311                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 12312  015B14  0EF6               	movlw	246
 12313  015B16  26E1               	addwf	fsr1l,f,c
 12314  015B18  0EFF               	movlw	255
 12315  015B1A  22E2               	addwfc	fsr1h,f,c
 12316  015B1C  0012               	return		;funcret
 12317  015B1E                     __end_of___fpclassifyf:
 12318                           	opt callstack 0
 12319                           
 12320 ;; *************** function ___fltol *****************
 12321 ;; Defined at:
 12322 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;  f1              4  [STACK] int 
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;  exp1            1  [STACK] unsigned char 
 12327 ;;  sign1           1  [STACK] unsigned char 
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  4  [STACK] long 
 12330 ;; Registers used:
 12331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 12332 ;; Tracked objects:
 12333 ;;		On entry : 0/4
 12334 ;;		On exit  : 0/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12341 ;;Total ram usage:        0 bytes
 12342 ;; Hardware stack levels used:    1
 12343 ;; Hardware stack levels required when called:    6
 12344 ;; This function calls:
 12345 ;;		Nothing
 12346 ;; This function is called by:
 12347 ;;		_efgtoa
 12348 ;; This function uses a reentrant model
 12349 ;;
 12350                           
 12351                           	psect	text45
 12352  015B1E                     __ptext45:
 12353                           	opt callstack 0
 12354  015B1E                     ___fltol:
 12355                           	opt callstack 0
 12356                           
 12357                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12358  015B1E  52E6               	movf	postinc1,f,c
 12359  015B20  52E6               	movf	postinc1,f,c
 12360                           
 12361                           ;stkvar	_f1 @ sp[(-2)+-4]
 12362                           
 12363                           ;incstack = 0
 12364  015B22  0EFA               	movlw	-6
 12365  015B24  006F FF8C  F03D    	movff	plusw1,btemp+8
 12366  015B2A  0EFB               	movlw	-5
 12367  015B2C  006F FF8C  F03E    	movff	plusw1,btemp+9
 12368  015B32  0EFC               	movlw	-4
 12369  015B34  006F FF8C  F03F    	movff	plusw1,btemp+10
 12370  015B3A  0EFD               	movlw	-3
 12371  015B3C  006F FF8C  F040    	movff	plusw1,btemp+11
 12372  015B42  0E18               	movlw	24
 12373  015B44  D005               	goto	u5980
 12374  015B46                     u5985:
 12375  015B46  90D8               	bcf	status,0,c
 12376  015B48  3240               	rrcf	(btemp+11)^0,f,c
 12377  015B4A  323F               	rrcf	(btemp+10)^0,f,c
 12378  015B4C  323E               	rrcf	(btemp+9)^0,f,c
 12379  015B4E  323D               	rrcf	(btemp+8)^0,f,c
 12380  015B50                     u5980:
 12381  015B50  2EE8               	decfsz	wreg,f,c
 12382  015B52  D7F9               	goto	u5985
 12383                           
 12384                           ;stkvar	_exp1 @ sp[(-2)+0]
 12385  015B54  0EFE               	movlw	-2
 12386  015B56  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12387  015B5C  0EFE               	movlw	-2
 12388  015B5E  50E3               	movf	plusw1,w,c
 12389  015B60  A4D8               	btfss	status,2,c
 12390  015B62  D006               	goto	l6805
 12391  015B64                     u5990:
 12392  015B64  0E00               	movlw	0
 12393  015B66  6E35               	movwf	btemp^0,c
 12394  015B68  6A36               	clrf	(btemp+1)^0,c
 12395  015B6A  6A37               	clrf	(btemp+2)^0,c
 12396  015B6C  6A38               	clrf	(btemp+3)^0,c
 12397  015B6E  D08B               	goto	l2260
 12398  015B70                     l6805:
 12399                           
 12400                           ;stkvar	_f1 @ sp[(-2)+-4]
 12401  015B70  0EFA               	movlw	-6
 12402  015B72  006F FF8C  F03D    	movff	plusw1,btemp+8
 12403  015B78  0EFB               	movlw	-5
 12404  015B7A  006F FF8C  F03E    	movff	plusw1,btemp+9
 12405  015B80  0EFC               	movlw	-4
 12406  015B82  006F FF8C  F03F    	movff	plusw1,btemp+10
 12407  015B88  0EFD               	movlw	-3
 12408  015B8A  006F FF8C  F040    	movff	plusw1,btemp+11
 12409  015B90  0E20               	movlw	32
 12410  015B92  D005               	goto	u6000
 12411  015B94                     u6005:
 12412  015B94  90D8               	bcf	status,0,c
 12413  015B96  3240               	rrcf	(btemp+11)^0,f,c
 12414  015B98  323F               	rrcf	(btemp+10)^0,f,c
 12415  015B9A  323E               	rrcf	(btemp+9)^0,f,c
 12416  015B9C  323D               	rrcf	(btemp+8)^0,f,c
 12417  015B9E                     u6000:
 12418  015B9E  2EE8               	decfsz	wreg,f,c
 12419  015BA0  D7F9               	goto	u6005
 12420                           
 12421                           ;stkvar	_sign1 @ sp[(-2)+1]
 12422  015BA2  0EFF               	movlw	-1
 12423  015BA4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12424                           
 12425                           ;stkvar	_f1 @ sp[(-2)+-4]
 12426  015BAA  0EFC               	movlw	-4
 12427  015BAC  8EE3               	bsf	plusw1,7,c
 12428                           
 12429                           ;stkvar	_f1 @ sp[(-2)+-4]
 12430  015BAE  50E1               	movf	fsr1l,w,c
 12431  015BB0  0FFA               	addlw	-6
 12432  015BB2  6ED9               	movwf	fsr2l,c
 12433  015BB4  50E2               	movf	fsr1h,w,c
 12434  015BB6  6EDA               	movwf	fsr2h,c
 12435  015BB8  0EFF               	movlw	255
 12436  015BBA  22DA               	addwfc	fsr2h,f,c
 12437  015BBC  0EFF               	movlw	255
 12438  015BBE  16DE               	andwf	postinc2,f,c
 12439  015BC0  0EFF               	movlw	255
 12440  015BC2  16DE               	andwf	postinc2,f,c
 12441  015BC4  0EFF               	movlw	255
 12442  015BC6  16DE               	andwf	postinc2,f,c
 12443  015BC8  0E00               	movlw	0
 12444  015BCA  16DE               	andwf	postinc2,f,c
 12445                           
 12446                           ;stkvar	_exp1 @ sp[(-2)+0]
 12447  015BCC  0EFE               	movlw	-2
 12448  015BCE  006F FF8C  F035    	movff	plusw1,btemp
 12449  015BD4  0E96               	movlw	150
 12450  015BD6  5E35               	subwf	btemp^0,f,c
 12451  015BD8  0EFE               	movlw	-2
 12452  015BDA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12453                           
 12454                           ;stkvar	_exp1 @ sp[(-2)+0]
 12455  015BE0  0EFE               	movlw	-2
 12456  015BE2  AEE3               	btfss	plusw1,7,c
 12457  015BE4  D014               	goto	l6823
 12458                           
 12459                           ;stkvar	_exp1 @ sp[(-2)+0]
 12460  015BE6  0EFE               	movlw	-2
 12461  015BE8  50E3               	movf	plusw1,w,c
 12462  015BEA  0A80               	xorlw	128
 12463  015BEC  0F97               	addlw	151
 12464  015BEE  A0D8               	btfss	status,0,c
 12465  015BF0  D7B9               	goto	u5990
 12466  015BF2                     l6821:
 12467                           
 12468                           ;stkvar	_f1 @ sp[(-2)+-4]
 12469  015BF2  90D8               	bcf	status,0,c
 12470  015BF4  0EFD               	movlw	-3
 12471  015BF6  32E3               	rrcf	plusw1,f,c
 12472  015BF8  0EFC               	movlw	-4
 12473  015BFA  32E3               	rrcf	plusw1,f,c
 12474  015BFC  0EFB               	movlw	-5
 12475  015BFE  32E3               	rrcf	plusw1,f,c
 12476  015C00  0EFA               	movlw	-6
 12477  015C02  32E3               	rrcf	plusw1,f,c
 12478                           
 12479                           ;stkvar	_exp1 @ sp[(-2)+0]
 12480  015C04  0EFE               	movlw	-2
 12481  015C06  2AE3               	incf	plusw1,f,c
 12482  015C08  B4D8               	btfsc	status,2,c
 12483  015C0A  D018               	goto	u6050
 12484  015C0C  D7F2               	goto	l6821
 12485  015C0E                     l6823:
 12486                           
 12487                           ;stkvar	_exp1 @ sp[(-2)+0]
 12488  015C0E  0EFE               	movlw	-2
 12489  015C10  006F FF8C  F035    	movff	plusw1,btemp
 12490  015C16  0E1F               	movlw	31
 12491  015C18  6435               	cpfsgt	btemp^0,c
 12492  015C1A  D00C               	goto	l6831
 12493  015C1C  D7A3               	goto	u5990
 12494  015C1E                     l6829:
 12495                           
 12496                           ;stkvar	_f1 @ sp[(-2)+-4]
 12497  015C1E  90D8               	bcf	status,0,c
 12498  015C20  0EFA               	movlw	-6
 12499  015C22  36E3               	rlcf	plusw1,f,c
 12500  015C24  0EFB               	movlw	-5
 12501  015C26  36E3               	rlcf	plusw1,f,c
 12502  015C28  0EFC               	movlw	-4
 12503  015C2A  36E3               	rlcf	plusw1,f,c
 12504  015C2C  0EFD               	movlw	-3
 12505  015C2E  36E3               	rlcf	plusw1,f,c
 12506                           
 12507                           ;stkvar	_exp1 @ sp[(-2)+0]
 12508  015C30  0EFE               	movlw	-2
 12509  015C32  06E3               	decf	plusw1,f,c
 12510  015C34                     l6831:
 12511                           
 12512                           ;stkvar	_exp1 @ sp[(-2)+0]
 12513  015C34  0EFE               	movlw	-2
 12514  015C36  50E3               	movf	plusw1,w,c
 12515  015C38  A4D8               	btfss	status,2,c
 12516  015C3A  D7F1               	goto	l6829
 12517  015C3C                     u6050:
 12518                           
 12519                           ;stkvar	_sign1 @ sp[(-2)+1]
 12520  015C3C  0EFF               	movlw	-1
 12521  015C3E  50E3               	movf	plusw1,w,c
 12522  015C40  B4D8               	btfsc	status,2,c
 12523  015C42  D011               	goto	u6070
 12524                           
 12525                           ;stkvar	_f1 @ sp[(-2)+-4]
 12526                           ;stkvar	_f1 @ sp[(-2)+-4]
 12527  015C44  0EFA               	movlw	-6
 12528  015C46  6CE3               	negf	plusw1,c
 12529  015C48  0EFB               	movlw	-5
 12530  015C4A  1EE3               	comf	plusw1,f,c
 12531  015C4C  0EFC               	movlw	-4
 12532  015C4E  1EE3               	comf	plusw1,f,c
 12533  015C50  0EFD               	movlw	-3
 12534  015C52  1EE3               	comf	plusw1,f,c
 12535  015C54  E308               	bnc	u6070
 12536  015C56  0EFB               	movlw	-5
 12537  015C58  2AE3               	incf	plusw1,f,c
 12538  015C5A  E305               	bnc	u6070
 12539  015C5C  0EFC               	movlw	-4
 12540  015C5E  2AE3               	incf	plusw1,f,c
 12541  015C60  E302               	bnc	u6070
 12542  015C62  0EFD               	movlw	-3
 12543  015C64  2AE3               	incf	plusw1,f,c
 12544  015C66                     u6070:
 12545                           
 12546                           ;stkvar	_f1 @ sp[(-2)+-4]
 12547  015C66  0EFA               	movlw	-6
 12548  015C68  006F FF8C  F035    	movff	plusw1,btemp
 12549  015C6E  0EFB               	movlw	-5
 12550  015C70  006F FF8C  F036    	movff	plusw1,btemp+1
 12551  015C76  0EFC               	movlw	-4
 12552  015C78  006F FF8C  F037    	movff	plusw1,btemp+2
 12553  015C7E  0EFD               	movlw	-3
 12554  015C80  006F FF8C  F038    	movff	plusw1,btemp+3
 12555  015C86                     l2260:
 12556                           
 12557                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12558  015C86  0EFA               	movlw	250
 12559  015C88  26E1               	addwf	fsr1l,f,c
 12560  015C8A  0EFF               	movlw	255
 12561  015C8C  22E2               	addwfc	fsr1h,f,c
 12562  015C8E  0012               	return		;funcret
 12563  015C90                     __end_of___fltol:
 12564                           	opt callstack 0
 12565                           
 12566 ;; *************** function ___flsub *****************
 12567 ;; Defined at:
 12568 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  b               4  [STACK] long 
 12571 ;;  a               4  [STACK] long 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;		None
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  4  [STACK] long 
 12576 ;; Registers used:
 12577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12578 ;; Tracked objects:
 12579 ;;		On entry : 0/0
 12580 ;;		On exit  : 0/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12587 ;;Total ram usage:        0 bytes
 12588 ;; Hardware stack levels used:    1
 12589 ;; Hardware stack levels required when called:    7
 12590 ;; This function calls:
 12591 ;;		___fladd
 12592 ;; This function is called by:
 12593 ;;		_lp_filter
 12594 ;;		_efgtoa
 12595 ;; This function uses a reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text46
 12599  01757C                     __ptext46:
 12600                           	opt callstack 0
 12601  01757C                     ___flsub:
 12602                           	opt callstack 16
 12603                           
 12604                           ;stkvar	_a @ sp[(0)+-8]
 12605                           
 12606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12607                           ;incstack = 0
 12608  01757C  0EFB               	movlw	-5
 12609  01757E  7EE3               	btg	plusw1,7,c
 12610                           
 12611                           ;stkvar	_a @ sp[(0)+-8]
 12612  017580  0EF8               	movlw	-8
 12613  017582  006F FF8F FFE6     	movff	plusw1,postinc1
 12614  017588  006F FF8F FFE6     	movff	plusw1,postinc1
 12615  01758E  006F FF8F FFE6     	movff	plusw1,postinc1
 12616  017594  006F FF8F FFE6     	movff	plusw1,postinc1
 12617                           
 12618                           ;stkvar	_b @ sp[(-4)+-4]
 12619  01759A  0EF8               	movlw	-8
 12620  01759C  006F FF8F FFE6     	movff	plusw1,postinc1
 12621  0175A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12622  0175A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12623  0175AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12624  0175B4  ECD6  F092         	call	___fladd	;wreg free
 12625                           
 12626                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 12627  0175B8  0EF8               	movlw	248
 12628  0175BA  26E1               	addwf	fsr1l,f,c
 12629  0175BC  0EFF               	movlw	255
 12630  0175BE  22E2               	addwfc	fsr1h,f,c
 12631  0175C0  0012               	return		;funcret
 12632  0175C2                     __end_of___flsub:
 12633                           	opt callstack 0
 12634                           
 12635 ;; *************** function ___fladd *****************
 12636 ;; Defined at:
 12637 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12638 ;; Parameters:    Size  Location     Type
 12639 ;;  b               4  [STACK] long 
 12640 ;;  a               4  [STACK] long 
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;  grs             1  [STACK] unsigned char 
 12643 ;;  bexp            1  [STACK] unsigned char 
 12644 ;;  aexp            1  [STACK] unsigned char 
 12645 ;;  signs           1  [STACK] unsigned char 
 12646 ;; Return value:  Size  Location     Type
 12647 ;;                  4  [STACK] unsigned char 
 12648 ;; Registers used:
 12649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12650 ;; Tracked objects:
 12651 ;;		On entry : 0/0
 12652 ;;		On exit  : 0/0
 12653 ;;		Unchanged: 0/0
 12654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12659 ;;Total ram usage:        0 bytes
 12660 ;; Hardware stack levels used:    1
 12661 ;; Hardware stack levels required when called:    6
 12662 ;; This function calls:
 12663 ;;		Nothing
 12664 ;; This function is called by:
 12665 ;;		_conv_raw_result
 12666 ;;		_lp_filter
 12667 ;;		_efgtoa
 12668 ;;		___flsub
 12669 ;; This function uses a reentrant model
 12670 ;;
 12671                           
 12672                           	psect	text47
 12673  0125AC                     __ptext47:
 12674                           	opt callstack 0
 12675  0125AC                     ___fladd:
 12676                           	opt callstack 0
 12677                           
 12678                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12679  0125AC  52E6               	movf	postinc1,f,c
 12680  0125AE  52E6               	movf	postinc1,f,c
 12681  0125B0  52E6               	movf	postinc1,f,c
 12682  0125B2  52E6               	movf	postinc1,f,c
 12683                           
 12684                           ;stkvar	_b @ sp[(-4)+-4]
 12685                           
 12686                           ;incstack = 0
 12687  0125B4  0EFB               	movlw	251
 12688  0125B6  24E1               	addwf	fsr1l,w,c
 12689  0125B8  6ED9               	movwf	fsr2l,c
 12690  0125BA  0EFF               	movlw	255
 12691  0125BC  20E2               	addwfc	fsr1h,w,c
 12692  0125BE  6EDA               	movwf	fsr2h,c
 12693  0125C0  50DF               	movf	indf2,w,c
 12694  0125C2  6E40               	movwf	(btemp+11)^0,c
 12695  0125C4  0E80               	movlw	128
 12696  0125C6  1640               	andwf	(btemp+11)^0,f,c
 12697                           
 12698                           ;stkvar	_signs @ sp[(-4)+3]
 12699  0125C8  0EFF               	movlw	-1
 12700  0125CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12701                           
 12702                           ;stkvar	_b @ sp[(-4)+-4]
 12703  0125D0  0EFB               	movlw	251
 12704  0125D2  24E1               	addwf	fsr1l,w,c
 12705  0125D4  6ED9               	movwf	fsr2l,c
 12706  0125D6  0EFF               	movlw	255
 12707  0125D8  20E2               	addwfc	fsr1h,w,c
 12708  0125DA  6EDA               	movwf	fsr2h,c
 12709  0125DC  50DF               	movf	indf2,w,c
 12710  0125DE  6E40               	movwf	(btemp+11)^0,c
 12711  0125E0  90D8               	bcf	status,0,c
 12712  0125E2  3440               	rlcf	(btemp+11)^0,w,c
 12713  0125E4  6E3F               	movwf	(btemp+10)^0,c
 12714                           
 12715                           ;stkvar	_bexp @ sp[(-4)+1]
 12716  0125E6  0EFD               	movlw	-3
 12717  0125E8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12718                           
 12719                           ;stkvar	_b @ sp[(-4)+-4]
 12720  0125EE  0EFA               	movlw	250
 12721  0125F0  24E1               	addwf	fsr1l,w,c
 12722  0125F2  6ED9               	movwf	fsr2l,c
 12723  0125F4  0EFF               	movlw	255
 12724  0125F6  20E2               	addwfc	fsr1h,w,c
 12725  0125F8  6EDA               	movwf	fsr2h,c
 12726  0125FA  AEDF               	btfss	indf2,7,c
 12727  0125FC  D002               	goto	l5919
 12728                           
 12729                           ;stkvar	_bexp @ sp[(-4)+1]
 12730  0125FE  0EFD               	movlw	-3
 12731  012600  80E3               	bsf	plusw1,0,c
 12732  012602                     l5919:
 12733                           
 12734                           ;stkvar	_bexp @ sp[(-4)+1]
 12735  012602  0EFD               	movlw	-3
 12736  012604  50E3               	movf	plusw1,w,c
 12737  012606  B4D8               	btfsc	status,2,c
 12738  012608  D027               	goto	l5929
 12739                           
 12740                           ;stkvar	_bexp @ sp[(-4)+1]
 12741  01260A  0EFD               	movlw	-3
 12742  01260C  28E3               	incf	plusw1,w,c
 12743  01260E  A4D8               	btfss	status,2,c
 12744  012610  D018               	goto	l5925
 12745  012612  0E00               	movlw	0
 12746  012614  6E3D               	movwf	(btemp+8)^0,c
 12747  012616  0E00               	movlw	0
 12748  012618  6E3E               	movwf	(btemp+9)^0,c
 12749  01261A  0E00               	movlw	0
 12750  01261C  6E3F               	movwf	(btemp+10)^0,c
 12751  01261E  0E00               	movlw	0
 12752  012620  6E40               	movwf	(btemp+11)^0,c
 12753                           
 12754                           ;stkvar	_b @ sp[(-4)+-4]
 12755  012622  0EF8               	movlw	-8
 12756  012624  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12757  01262A  0EF9               	movlw	-7
 12758  01262C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12759  012632  0EFA               	movlw	-6
 12760  012634  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12761  01263A  0EFB               	movlw	-5
 12762  01263C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12763  012642                     l5925:
 12764                           
 12765                           ;stkvar	_b @ sp[(-4)+-4]
 12766  012642  0EFA               	movlw	-6
 12767  012644  8EE3               	bsf	plusw1,7,c
 12768                           
 12769                           ;stkvar	_b @ sp[(-4)+-4]
 12770  012646  0EFB               	movlw	251
 12771  012648  24E1               	addwf	fsr1l,w,c
 12772  01264A  6ED9               	movwf	fsr2l,c
 12773  01264C  0EFF               	movlw	255
 12774  01264E  20E2               	addwfc	fsr1h,w,c
 12775  012650  6EDA               	movwf	fsr2h,c
 12776  012652  0E00               	movlw	0
 12777  012654  6EDF               	movwf	indf2,c
 12778  012656  D018               	goto	l5931
 12779  012658                     l5929:
 12780  012658  0E00               	movlw	0
 12781  01265A  6E3D               	movwf	(btemp+8)^0,c
 12782  01265C  0E00               	movlw	0
 12783  01265E  6E3E               	movwf	(btemp+9)^0,c
 12784  012660  0E00               	movlw	0
 12785  012662  6E3F               	movwf	(btemp+10)^0,c
 12786  012664  0E00               	movlw	0
 12787  012666  6E40               	movwf	(btemp+11)^0,c
 12788                           
 12789                           ;stkvar	_b @ sp[(-4)+-4]
 12790  012668  0EF8               	movlw	-8
 12791  01266A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12792  012670  0EF9               	movlw	-7
 12793  012672  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12794  012678  0EFA               	movlw	-6
 12795  01267A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12796  012680  0EFB               	movlw	-5
 12797  012682  0060  F103  FFE3   	movff	btemp+11,plusw1
 12798  012688                     l5931:
 12799                           
 12800                           ;stkvar	_a @ sp[(-4)+-8]
 12801  012688  0EF7               	movlw	247
 12802  01268A  24E1               	addwf	fsr1l,w,c
 12803  01268C  6ED9               	movwf	fsr2l,c
 12804  01268E  0EFF               	movlw	255
 12805  012690  20E2               	addwfc	fsr1h,w,c
 12806  012692  6EDA               	movwf	fsr2h,c
 12807  012694  50DF               	movf	indf2,w,c
 12808  012696  6E40               	movwf	(btemp+11)^0,c
 12809  012698  0E80               	movlw	128
 12810  01269A  1640               	andwf	(btemp+11)^0,f,c
 12811                           
 12812                           ;stkvar	_aexp @ sp[(-4)+2]
 12813  01269C  0EFE               	movlw	-2
 12814  01269E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12815                           
 12816                           ;stkvar	_signs @ sp[(-4)+3]
 12817                           ;stkvar	_aexp @ sp[(-4)+2]
 12818  0126A4  50E1               	movf	fsr1l,w,c
 12819  0126A6  0FFE               	addlw	-2
 12820  0126A8  6ED9               	movwf	fsr2l,c
 12821  0126AA  50E2               	movf	fsr1h,w,c
 12822  0126AC  6EDA               	movwf	fsr2h,c
 12823  0126AE  0EFF               	movlw	255
 12824  0126B0  22DA               	addwfc	fsr2h,f,c
 12825  0126B2  0EFF               	movlw	-1
 12826  0126B4  50E3               	movf	plusw1,w,c
 12827  0126B6  18DE               	xorwf	postinc2,w,c
 12828  0126B8  B4D8               	btfsc	status,2,c
 12829  0126BA  D002               	goto	l5937
 12830                           
 12831                           ;stkvar	_signs @ sp[(-4)+3]
 12832  0126BC  0EFF               	movlw	-1
 12833  0126BE  8CE3               	bsf	plusw1,6,c
 12834  0126C0                     l5937:
 12835                           
 12836                           ;stkvar	_a @ sp[(-4)+-8]
 12837  0126C0  0EF7               	movlw	247
 12838  0126C2  24E1               	addwf	fsr1l,w,c
 12839  0126C4  6ED9               	movwf	fsr2l,c
 12840  0126C6  0EFF               	movlw	255
 12841  0126C8  20E2               	addwfc	fsr1h,w,c
 12842  0126CA  6EDA               	movwf	fsr2h,c
 12843  0126CC  50DF               	movf	indf2,w,c
 12844  0126CE  6E40               	movwf	(btemp+11)^0,c
 12845  0126D0  90D8               	bcf	status,0,c
 12846  0126D2  3440               	rlcf	(btemp+11)^0,w,c
 12847  0126D4  6E3F               	movwf	(btemp+10)^0,c
 12848                           
 12849                           ;stkvar	_aexp @ sp[(-4)+2]
 12850  0126D6  0EFE               	movlw	-2
 12851  0126D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12852                           
 12853                           ;stkvar	_a @ sp[(-4)+-8]
 12854  0126DE  0EF6               	movlw	246
 12855  0126E0  24E1               	addwf	fsr1l,w,c
 12856  0126E2  6ED9               	movwf	fsr2l,c
 12857  0126E4  0EFF               	movlw	255
 12858  0126E6  20E2               	addwfc	fsr1h,w,c
 12859  0126E8  6EDA               	movwf	fsr2h,c
 12860  0126EA  AEDF               	btfss	indf2,7,c
 12861  0126EC  D002               	goto	l5943
 12862                           
 12863                           ;stkvar	_aexp @ sp[(-4)+2]
 12864  0126EE  0EFE               	movlw	-2
 12865  0126F0  80E3               	bsf	plusw1,0,c
 12866  0126F2                     l5943:
 12867                           
 12868                           ;stkvar	_aexp @ sp[(-4)+2]
 12869  0126F2  0EFE               	movlw	-2
 12870  0126F4  50E3               	movf	plusw1,w,c
 12871  0126F6  B4D8               	btfsc	status,2,c
 12872  0126F8  D027               	goto	l5953
 12873                           
 12874                           ;stkvar	_aexp @ sp[(-4)+2]
 12875  0126FA  0EFE               	movlw	-2
 12876  0126FC  28E3               	incf	plusw1,w,c
 12877  0126FE  A4D8               	btfss	status,2,c
 12878  012700  D018               	goto	l5949
 12879  012702  0E00               	movlw	0
 12880  012704  6E3D               	movwf	(btemp+8)^0,c
 12881  012706  0E00               	movlw	0
 12882  012708  6E3E               	movwf	(btemp+9)^0,c
 12883  01270A  0E00               	movlw	0
 12884  01270C  6E3F               	movwf	(btemp+10)^0,c
 12885  01270E  0E00               	movlw	0
 12886  012710  6E40               	movwf	(btemp+11)^0,c
 12887                           
 12888                           ;stkvar	_a @ sp[(-4)+-8]
 12889  012712  0EF4               	movlw	-12
 12890  012714  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12891  01271A  0EF5               	movlw	-11
 12892  01271C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12893  012722  0EF6               	movlw	-10
 12894  012724  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12895  01272A  0EF7               	movlw	-9
 12896  01272C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12897  012732                     l5949:
 12898                           
 12899                           ;stkvar	_a @ sp[(-4)+-8]
 12900  012732  0EF6               	movlw	-10
 12901  012734  8EE3               	bsf	plusw1,7,c
 12902                           
 12903                           ;stkvar	_a @ sp[(-4)+-8]
 12904  012736  0EF7               	movlw	247
 12905  012738  24E1               	addwf	fsr1l,w,c
 12906  01273A  6ED9               	movwf	fsr2l,c
 12907  01273C  0EFF               	movlw	255
 12908  01273E  20E2               	addwfc	fsr1h,w,c
 12909  012740  6EDA               	movwf	fsr2h,c
 12910  012742  0E00               	movlw	0
 12911  012744  6EDF               	movwf	indf2,c
 12912  012746  D018               	goto	l5955
 12913  012748                     l5953:
 12914  012748  0E00               	movlw	0
 12915  01274A  6E3D               	movwf	(btemp+8)^0,c
 12916  01274C  0E00               	movlw	0
 12917  01274E  6E3E               	movwf	(btemp+9)^0,c
 12918  012750  0E00               	movlw	0
 12919  012752  6E3F               	movwf	(btemp+10)^0,c
 12920  012754  0E00               	movlw	0
 12921  012756  6E40               	movwf	(btemp+11)^0,c
 12922                           
 12923                           ;stkvar	_a @ sp[(-4)+-8]
 12924  012758  0EF4               	movlw	-12
 12925  01275A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12926  012760  0EF5               	movlw	-11
 12927  012762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12928  012768  0EF6               	movlw	-10
 12929  01276A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12930  012770  0EF7               	movlw	-9
 12931  012772  0060  F103  FFE3   	movff	btemp+11,plusw1
 12932  012778                     l5955:
 12933                           
 12934                           ;stkvar	_bexp @ sp[(-4)+1]
 12935                           ;stkvar	_aexp @ sp[(-4)+2]
 12936  012778  50E1               	movf	fsr1l,w,c
 12937  01277A  0FFE               	addlw	-2
 12938  01277C  6ED9               	movwf	fsr2l,c
 12939  01277E  50E2               	movf	fsr1h,w,c
 12940  012780  6EDA               	movwf	fsr2h,c
 12941  012782  0EFF               	movlw	255
 12942  012784  22DA               	addwfc	fsr2h,f,c
 12943  012786  0EFD               	movlw	-3
 12944  012788  50E3               	movf	plusw1,w,c
 12945  01278A  5CDE               	subwf	postinc2,w,c
 12946  01278C  B0D8               	btfsc	status,0,c
 12947  01278E  D0A4               	goto	l5991
 12948                           
 12949                           ;stkvar	_signs @ sp[(-4)+3]
 12950  012790  0EFF               	movlw	-1
 12951  012792  ACE3               	btfss	plusw1,6,c
 12952  012794  D002               	goto	l5961
 12953                           
 12954                           ;stkvar	_signs @ sp[(-4)+3]
 12955  012796  0EFF               	movlw	-1
 12956  012798  7EE3               	btg	plusw1,7,c
 12957  01279A                     l5961:
 12958                           
 12959                           ;stkvar	_bexp @ sp[(-4)+1]
 12960                           ;stkvar	_grs @ sp[(-4)+0]
 12961  01279A  0EFD               	movlw	-3
 12962  01279C  006F FF8C  F035    	movff	plusw1,btemp
 12963  0127A2  0EFC               	movlw	-4
 12964  0127A4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12965                           
 12966                           ;stkvar	_aexp @ sp[(-4)+2]
 12967                           ;stkvar	_bexp @ sp[(-4)+1]
 12968  0127AA  0EFE               	movlw	-2
 12969  0127AC  006F FF8C  F035    	movff	plusw1,btemp
 12970  0127B2  0EFD               	movlw	-3
 12971  0127B4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12972                           
 12973                           ;stkvar	_grs @ sp[(-4)+0]
 12974                           ;stkvar	_aexp @ sp[(-4)+2]
 12975  0127BA  0EFC               	movlw	-4
 12976  0127BC  006F FF8C  F035    	movff	plusw1,btemp
 12977  0127C2  0EFE               	movlw	-2
 12978  0127C4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12979                           
 12980                           ;stkvar	_b @ sp[(-4)+-4]
 12981                           ;stkvar	_grs @ sp[(-4)+0]
 12982  0127CA  0EF8               	movlw	-8
 12983  0127CC  006F FF8C  F035    	movff	plusw1,btemp
 12984  0127D2  0EFC               	movlw	-4
 12985  0127D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12986                           
 12987                           ;stkvar	_a @ sp[(-4)+-8]
 12988                           ;stkvar	_b @ sp[(-4)+-4]
 12989  0127DA  0EF4               	movlw	-12
 12990  0127DC  006F FF8C  F035    	movff	plusw1,btemp
 12991  0127E2  0EF8               	movlw	-8
 12992  0127E4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12993                           
 12994                           ;stkvar	_grs @ sp[(-4)+0]
 12995                           ;stkvar	_a @ sp[(-4)+-8]
 12996  0127EA  0EFC               	movlw	-4
 12997  0127EC  006F FF8C  F035    	movff	plusw1,btemp
 12998  0127F2  0EF4               	movlw	-12
 12999  0127F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13000                           
 13001                           ;stkvar	_b @ sp[(-4)+-4]
 13002  0127FA  0EF9               	movlw	249
 13003  0127FC  24E1               	addwf	fsr1l,w,c
 13004  0127FE  6ED9               	movwf	fsr2l,c
 13005  012800  0EFF               	movlw	255
 13006  012802  20E2               	addwfc	fsr1h,w,c
 13007  012804  6EDA               	movwf	fsr2h,c
 13008  012806  50DF               	movf	indf2,w,c
 13009  012808  6E40               	movwf	(btemp+11)^0,c
 13010                           
 13011                           ;stkvar	_grs @ sp[(-4)+0]
 13012  01280A  0EFC               	movlw	-4
 13013  01280C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13014                           
 13015                           ;stkvar	_a @ sp[(-4)+-8]
 13016  012812  0EF5               	movlw	245
 13017  012814  24E1               	addwf	fsr1l,w,c
 13018  012816  6ED9               	movwf	fsr2l,c
 13019  012818  0EFF               	movlw	255
 13020  01281A  20E2               	addwfc	fsr1h,w,c
 13021  01281C  6EDA               	movwf	fsr2h,c
 13022                           
 13023                           ;stkvar	_b @ sp[(-4)+-4]
 13024  01281E  0EF9               	movlw	249
 13025  012820  24E1               	addwf	fsr1l,w,c
 13026  012822  6EE9               	movwf	fsr0l,c
 13027  012824  0EFF               	movlw	255
 13028  012826  20E2               	addwfc	fsr1h,w,c
 13029  012828  6EEA               	movwf	fsr0h,c
 13030  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13031                           
 13032                           ;stkvar	_grs @ sp[(-4)+0]
 13033                           ;stkvar	_a @ sp[(-4)+-8]
 13034  012830  0EF5               	movlw	245
 13035  012832  24E1               	addwf	fsr1l,w,c
 13036  012834  6ED9               	movwf	fsr2l,c
 13037  012836  0EFF               	movlw	255
 13038  012838  20E2               	addwfc	fsr1h,w,c
 13039  01283A  6EDA               	movwf	fsr2h,c
 13040  01283C  0EFC               	movlw	-4
 13041  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13042                           
 13043                           ;stkvar	_b @ sp[(-4)+-4]
 13044  012844  0EFA               	movlw	250
 13045  012846  24E1               	addwf	fsr1l,w,c
 13046  012848  6ED9               	movwf	fsr2l,c
 13047  01284A  0EFF               	movlw	255
 13048  01284C  20E2               	addwfc	fsr1h,w,c
 13049  01284E  6EDA               	movwf	fsr2h,c
 13050  012850  50DF               	movf	indf2,w,c
 13051  012852  6E40               	movwf	(btemp+11)^0,c
 13052                           
 13053                           ;stkvar	_grs @ sp[(-4)+0]
 13054  012854  0EFC               	movlw	-4
 13055  012856  0060  F103  FFE3   	movff	btemp+11,plusw1
 13056                           
 13057                           ;stkvar	_a @ sp[(-4)+-8]
 13058  01285C  0EF6               	movlw	246
 13059  01285E  24E1               	addwf	fsr1l,w,c
 13060  012860  6ED9               	movwf	fsr2l,c
 13061  012862  0EFF               	movlw	255
 13062  012864  20E2               	addwfc	fsr1h,w,c
 13063  012866  6EDA               	movwf	fsr2h,c
 13064                           
 13065                           ;stkvar	_b @ sp[(-4)+-4]
 13066  012868  0EFA               	movlw	250
 13067  01286A  24E1               	addwf	fsr1l,w,c
 13068  01286C  6EE9               	movwf	fsr0l,c
 13069  01286E  0EFF               	movlw	255
 13070  012870  20E2               	addwfc	fsr1h,w,c
 13071  012872  6EEA               	movwf	fsr0h,c
 13072  012874  006F FF7F FFEF     	movff	indf2,indf0
 13073                           
 13074                           ;stkvar	_grs @ sp[(-4)+0]
 13075                           ;stkvar	_a @ sp[(-4)+-8]
 13076  01287A  0EF6               	movlw	246
 13077  01287C  24E1               	addwf	fsr1l,w,c
 13078  01287E  6ED9               	movwf	fsr2l,c
 13079  012880  0EFF               	movlw	255
 13080  012882  20E2               	addwfc	fsr1h,w,c
 13081  012884  6EDA               	movwf	fsr2h,c
 13082  012886  0EFC               	movlw	-4
 13083  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13084                           
 13085                           ;stkvar	_b @ sp[(-4)+-4]
 13086  01288E  0EFB               	movlw	251
 13087  012890  24E1               	addwf	fsr1l,w,c
 13088  012892  6ED9               	movwf	fsr2l,c
 13089  012894  0EFF               	movlw	255
 13090  012896  20E2               	addwfc	fsr1h,w,c
 13091  012898  6EDA               	movwf	fsr2h,c
 13092  01289A  50DF               	movf	indf2,w,c
 13093  01289C  6E40               	movwf	(btemp+11)^0,c
 13094                           
 13095                           ;stkvar	_grs @ sp[(-4)+0]
 13096  01289E  0EFC               	movlw	-4
 13097  0128A0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13098                           
 13099                           ;stkvar	_a @ sp[(-4)+-8]
 13100  0128A6  0EF7               	movlw	247
 13101  0128A8  24E1               	addwf	fsr1l,w,c
 13102  0128AA  6ED9               	movwf	fsr2l,c
 13103  0128AC  0EFF               	movlw	255
 13104  0128AE  20E2               	addwfc	fsr1h,w,c
 13105  0128B0  6EDA               	movwf	fsr2h,c
 13106                           
 13107                           ;stkvar	_b @ sp[(-4)+-4]
 13108  0128B2  0EFB               	movlw	251
 13109  0128B4  24E1               	addwf	fsr1l,w,c
 13110  0128B6  6EE9               	movwf	fsr0l,c
 13111  0128B8  0EFF               	movlw	255
 13112  0128BA  20E2               	addwfc	fsr1h,w,c
 13113  0128BC  6EEA               	movwf	fsr0h,c
 13114  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13115                           
 13116                           ;stkvar	_grs @ sp[(-4)+0]
 13117                           ;stkvar	_a @ sp[(-4)+-8]
 13118  0128C4  0EF7               	movlw	247
 13119  0128C6  24E1               	addwf	fsr1l,w,c
 13120  0128C8  6ED9               	movwf	fsr2l,c
 13121  0128CA  0EFF               	movlw	255
 13122  0128CC  20E2               	addwfc	fsr1h,w,c
 13123  0128CE  6EDA               	movwf	fsr2h,c
 13124  0128D0  0EFC               	movlw	-4
 13125  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13126  0128D8                     l5991:
 13127                           
 13128                           ;stkvar	_grs @ sp[(-4)+0]
 13129  0128D8  0EFC               	movlw	-4
 13130  0128DA  6AE3               	clrf	plusw1,c
 13131                           
 13132                           ;stkvar	_aexp @ sp[(-4)+2]
 13133  0128DC  0EFE               	movlw	-2
 13134  0128DE  50E3               	movf	plusw1,w,c
 13135  0128E0  6E3F               	movwf	(btemp+10)^0,c
 13136  0128E2  6A40               	clrf	(btemp+11)^0,c
 13137                           
 13138                           ;stkvar	_bexp @ sp[(-4)+1]
 13139  0128E4  0EFD               	movlw	-3
 13140  0128E6  50E3               	movf	plusw1,w,c
 13141  0128E8  5E3F               	subwf	(btemp+10)^0,f,c
 13142  0128EA  0E00               	movlw	0
 13143  0128EC  5A40               	subwfb	(btemp+11)^0,f,c
 13144  0128EE  BE40               	btfsc	(btemp+11)^0,7,c
 13145  0128F0  D062               	goto	l6015
 13146  0128F2  5040               	movf	(btemp+11)^0,w,c
 13147  0128F4  E104               	bnz	u4370
 13148  0128F6  0E1A               	movlw	26
 13149  0128F8  5C3F               	subwf	(btemp+10)^0,w,c
 13150  0128FA  A0D8               	btfss	status,0,c
 13151  0128FC  D05C               	goto	l6015
 13152  0128FE                     u4370:
 13153                           
 13154                           ;stkvar	_b @ sp[(-4)+-4]
 13155  0128FE  0EF8               	movlw	-8
 13156  012900  50E3               	movf	plusw1,w,c
 13157  012902  E10A               	bnz	u4381
 13158  012904  0EF9               	movlw	-7
 13159  012906  50E3               	movf	plusw1,w,c
 13160  012908  E107               	bnz	u4381
 13161  01290A  0EFA               	movlw	-6
 13162  01290C  50E3               	movf	plusw1,w,c
 13163  01290E  E104               	bnz	u4381
 13164  012910  0EFB               	movlw	-5
 13165  012912  50E3               	movf	plusw1,w,c
 13166  012914  B4D8               	btfsc	status,2,c
 13167  012916  D003               	goto	u4380
 13168  012918                     u4381:
 13169  012918  6A40               	clrf	(btemp+11)^0,c
 13170  01291A  2A40               	incf	(btemp+11)^0,f,c
 13171  01291C  D001               	goto	u4398
 13172  01291E                     u4380:
 13173  01291E  6A40               	clrf	(btemp+11)^0,c
 13174  012920                     u4398:
 13175                           
 13176                           ;stkvar	_grs @ sp[(-4)+0]
 13177  012920  0EFC               	movlw	-4
 13178  012922  0060  F103  FFE3   	movff	btemp+11,plusw1
 13179                           
 13180                           ;stkvar	_b @ sp[(-4)+-4]
 13181  012928  0EF8               	movlw	-8
 13182  01292A  6AE3               	clrf	plusw1,c
 13183  01292C  0EF9               	movlw	-7
 13184  01292E  6AE3               	clrf	plusw1,c
 13185  012930  0EFA               	movlw	-6
 13186  012932  6AE3               	clrf	plusw1,c
 13187  012934  0EFB               	movlw	-5
 13188  012936  6AE3               	clrf	plusw1,c
 13189                           
 13190                           ;stkvar	_aexp @ sp[(-4)+2]
 13191                           ;stkvar	_bexp @ sp[(-4)+1]
 13192  012938  0EFE               	movlw	-2
 13193  01293A  006F FF8C  F035    	movff	plusw1,btemp
 13194  012940  0EFD               	movlw	-3
 13195  012942  0060  F0D7  FFE3   	movff	btemp,plusw1
 13196  012948  D042               	goto	u4430
 13197  01294A                     l6001:
 13198                           
 13199                           ;stkvar	_grs @ sp[(-4)+0]
 13200  01294A  0EFC               	movlw	-4
 13201  01294C  A0E3               	btfss	plusw1,0,c
 13202  01294E  D00D               	goto	l6005
 13203                           
 13204                           ;stkvar	_grs @ sp[(-4)+0]
 13205  012950  0EFC               	movlw	-4
 13206  012952  006F FF8C  F040    	movff	plusw1,btemp+11
 13207  012958  90D8               	bcf	status,0,c
 13208  01295A  3240               	rrcf	(btemp+11)^0,f,c
 13209  01295C  0E01               	movlw	1
 13210  01295E  1240               	iorwf	(btemp+11)^0,f,c
 13211                           
 13212                           ;stkvar	_grs @ sp[(-4)+0]
 13213  012960  0EFC               	movlw	-4
 13214  012962  0060  F103  FFE3   	movff	btemp+11,plusw1
 13215  012968  D009               	goto	l6007
 13216  01296A                     l6005:
 13217                           
 13218                           ;stkvar	_grs @ sp[(-4)+0]
 13219  01296A  50E1               	movf	fsr1l,w,c
 13220  01296C  0FFC               	addlw	-4
 13221  01296E  6ED9               	movwf	fsr2l,c
 13222  012970  50E2               	movf	fsr1h,w,c
 13223  012972  6EDA               	movwf	fsr2h,c
 13224  012974  0EFF               	movlw	255
 13225  012976  22DA               	addwfc	fsr2h,f,c
 13226  012978  90D8               	bcf	status,0,c
 13227  01297A  32DF               	rrcf	indf2,f,c
 13228  01297C                     l6007:
 13229                           
 13230                           ;stkvar	_b @ sp[(-4)+-4]
 13231  01297C  0EF8               	movlw	-8
 13232  01297E  A0E3               	btfss	plusw1,0,c
 13233  012980  D002               	goto	l6011
 13234                           
 13235                           ;stkvar	_grs @ sp[(-4)+0]
 13236  012982  0EFC               	movlw	-4
 13237  012984  8EE3               	bsf	plusw1,7,c
 13238  012986                     l6011:
 13239  012986  0E01               	movlw	1
 13240  012988  6E40               	movwf	(btemp+11)^0,c
 13241                           
 13242                           ;stkvar	_b @ sp[(-4)+-4]
 13243  01298A  50E1               	movf	fsr1l,w,c
 13244  01298C  0FF8               	addlw	-8
 13245  01298E  6ED9               	movwf	fsr2l,c
 13246  012990  50E2               	movf	fsr1h,w,c
 13247  012992  6EDA               	movwf	fsr2h,c
 13248  012994  0EFF               	movlw	255
 13249  012996  22DA               	addwfc	fsr2h,f,c
 13250  012998  2840               	incf	(btemp+11)^0,w,c
 13251  01299A  52DE               	movf	postinc2,f,c
 13252  01299C  D008               	goto	u4420
 13253  01299E                     u4425:
 13254  01299E  52DE               	movf	postinc2,f,c
 13255  0129A0  90D8               	bcf	status,0,c
 13256  0129A2  BEDC               	btfsc	preinc2,7,c
 13257  0129A4  80D8               	bsf	status,0,c
 13258  0129A6  32DD               	rrcf	postdec2,f,c
 13259  0129A8  32DD               	rrcf	postdec2,f,c
 13260  0129AA  32DD               	rrcf	postdec2,f,c
 13261  0129AC  32DE               	rrcf	postinc2,f,c
 13262  0129AE                     u4420:
 13263  0129AE  2EE8               	decfsz	wreg,f,c
 13264  0129B0  D7F6               	goto	u4425
 13265                           
 13266                           ;stkvar	_bexp @ sp[(-4)+1]
 13267  0129B2  0EFD               	movlw	-3
 13268  0129B4  2AE3               	incf	plusw1,f,c
 13269  0129B6                     l6015:
 13270                           
 13271                           ;stkvar	_aexp @ sp[(-4)+2]
 13272                           ;stkvar	_bexp @ sp[(-4)+1]
 13273  0129B6  50E1               	movf	fsr1l,w,c
 13274  0129B8  0FFD               	addlw	-3
 13275  0129BA  6ED9               	movwf	fsr2l,c
 13276  0129BC  50E2               	movf	fsr1h,w,c
 13277  0129BE  6EDA               	movwf	fsr2h,c
 13278  0129C0  0EFF               	movlw	255
 13279  0129C2  22DA               	addwfc	fsr2h,f,c
 13280  0129C4  0EFE               	movlw	-2
 13281  0129C6  50E3               	movf	plusw1,w,c
 13282  0129C8  5CDE               	subwf	postinc2,w,c
 13283  0129CA  A0D8               	btfss	status,0,c
 13284  0129CC  D7BE               	goto	l6001
 13285  0129CE                     u4430:
 13286                           
 13287                           ;stkvar	_signs @ sp[(-4)+3]
 13288  0129CE  0EFF               	movlw	-1
 13289  0129D0  BCE3               	btfsc	plusw1,6,c
 13290  0129D2  D066               	goto	l6043
 13291                           
 13292                           ;stkvar	_bexp @ sp[(-4)+1]
 13293  0129D4  0EFD               	movlw	-3
 13294  0129D6  50E3               	movf	plusw1,w,c
 13295  0129D8  B4D8               	btfsc	status,2,c
 13296  0129DA  D0F2               	goto	u4530
 13297                           
 13298                           ;stkvar	_a @ sp[(-4)+-8]
 13299                           ;stkvar	_b @ sp[(-4)+-4]
 13300  0129DC  0EF8               	movlw	-8
 13301  0129DE  50E3               	movf	plusw1,w,c
 13302  0129E0  6E35               	movwf	btemp^0,c
 13303  0129E2  0EF4               	movlw	-12
 13304  0129E4  50E3               	movf	plusw1,w,c
 13305  0129E6  2635               	addwf	btemp^0,f,c
 13306  0129E8  0EF8               	movlw	-8
 13307  0129EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 13308  0129F0  0EF9               	movlw	-7
 13309  0129F2  50E3               	movf	plusw1,w,c
 13310  0129F4  6E35               	movwf	btemp^0,c
 13311  0129F6  0EF5               	movlw	-11
 13312  0129F8  50E3               	movf	plusw1,w,c
 13313  0129FA  2235               	addwfc	btemp^0,f,c
 13314  0129FC  0EF9               	movlw	-7
 13315  0129FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 13316  012A04  0EFA               	movlw	-6
 13317  012A06  50E3               	movf	plusw1,w,c
 13318  012A08  6E35               	movwf	btemp^0,c
 13319  012A0A  0EF6               	movlw	-10
 13320  012A0C  50E3               	movf	plusw1,w,c
 13321  012A0E  2235               	addwfc	btemp^0,f,c
 13322  012A10  0EFA               	movlw	-6
 13323  012A12  0060  F0D7  FFE3   	movff	btemp,plusw1
 13324  012A18  0EFB               	movlw	-5
 13325  012A1A  50E3               	movf	plusw1,w,c
 13326  012A1C  6E35               	movwf	btemp^0,c
 13327  012A1E  0EF7               	movlw	-9
 13328  012A20  50E3               	movf	plusw1,w,c
 13329  012A22  2235               	addwfc	btemp^0,f,c
 13330  012A24  0EFB               	movlw	-5
 13331  012A26  0060  F0D7  FFE3   	movff	btemp,plusw1
 13332                           
 13333                           ;stkvar	_b @ sp[(-4)+-4]
 13334  012A2C  0EFB               	movlw	-5
 13335  012A2E  A0E3               	btfss	plusw1,0,c
 13336  012A30  D101               	goto	u4570
 13337                           
 13338                           ;stkvar	_grs @ sp[(-4)+0]
 13339  012A32  0EFC               	movlw	-4
 13340  012A34  A0E3               	btfss	plusw1,0,c
 13341  012A36  D00D               	goto	l6033
 13342                           
 13343                           ;stkvar	_grs @ sp[(-4)+0]
 13344  012A38  0EFC               	movlw	-4
 13345  012A3A  006F FF8C  F040    	movff	plusw1,btemp+11
 13346  012A40  90D8               	bcf	status,0,c
 13347  012A42  3240               	rrcf	(btemp+11)^0,f,c
 13348  012A44  0E01               	movlw	1
 13349  012A46  1240               	iorwf	(btemp+11)^0,f,c
 13350                           
 13351                           ;stkvar	_grs @ sp[(-4)+0]
 13352  012A48  0EFC               	movlw	-4
 13353  012A4A  0060  F103  FFE3   	movff	btemp+11,plusw1
 13354  012A50  D009               	goto	l6035
 13355  012A52                     l6033:
 13356                           
 13357                           ;stkvar	_grs @ sp[(-4)+0]
 13358  012A52  50E1               	movf	fsr1l,w,c
 13359  012A54  0FFC               	addlw	-4
 13360  012A56  6ED9               	movwf	fsr2l,c
 13361  012A58  50E2               	movf	fsr1h,w,c
 13362  012A5A  6EDA               	movwf	fsr2h,c
 13363  012A5C  0EFF               	movlw	255
 13364  012A5E  22DA               	addwfc	fsr2h,f,c
 13365  012A60  90D8               	bcf	status,0,c
 13366  012A62  32DF               	rrcf	indf2,f,c
 13367  012A64                     l6035:
 13368                           
 13369                           ;stkvar	_b @ sp[(-4)+-4]
 13370  012A64  0EF8               	movlw	-8
 13371  012A66  A0E3               	btfss	plusw1,0,c
 13372  012A68  D002               	goto	l6039
 13373                           
 13374                           ;stkvar	_grs @ sp[(-4)+0]
 13375  012A6A  0EFC               	movlw	-4
 13376  012A6C  8EE3               	bsf	plusw1,7,c
 13377  012A6E                     l6039:
 13378  012A6E  0E01               	movlw	1
 13379  012A70  6E40               	movwf	(btemp+11)^0,c
 13380                           
 13381                           ;stkvar	_b @ sp[(-4)+-4]
 13382  012A72  50E1               	movf	fsr1l,w,c
 13383  012A74  0FF8               	addlw	-8
 13384  012A76  6ED9               	movwf	fsr2l,c
 13385  012A78  50E2               	movf	fsr1h,w,c
 13386  012A7A  6EDA               	movwf	fsr2h,c
 13387  012A7C  0EFF               	movlw	255
 13388  012A7E  22DA               	addwfc	fsr2h,f,c
 13389  012A80  2840               	incf	(btemp+11)^0,w,c
 13390  012A82  52DE               	movf	postinc2,f,c
 13391  012A84  D008               	goto	u4490
 13392  012A86                     u4495:
 13393  012A86  52DE               	movf	postinc2,f,c
 13394  012A88  90D8               	bcf	status,0,c
 13395  012A8A  BEDC               	btfsc	preinc2,7,c
 13396  012A8C  80D8               	bsf	status,0,c
 13397  012A8E  32DD               	rrcf	postdec2,f,c
 13398  012A90  32DD               	rrcf	postdec2,f,c
 13399  012A92  32DD               	rrcf	postdec2,f,c
 13400  012A94  32DE               	rrcf	postinc2,f,c
 13401  012A96                     u4490:
 13402  012A96  2EE8               	decfsz	wreg,f,c
 13403  012A98  D7F6               	goto	u4495
 13404                           
 13405                           ;stkvar	_bexp @ sp[(-4)+1]
 13406  012A9A  0EFD               	movlw	-3
 13407  012A9C  2AE3               	incf	plusw1,f,c
 13408  012A9E  D0CA               	goto	u4570
 13409  012AA0                     l6043:
 13410                           
 13411                           ;stkvar	_a @ sp[(-4)+-8]
 13412                           ;stkvar	_b @ sp[(-4)+-4]
 13413  012AA0  50E1               	movf	fsr1l,w,c
 13414  012AA2  0FF8               	addlw	-8
 13415  012AA4  6ED9               	movwf	fsr2l,c
 13416  012AA6  50E2               	movf	fsr1h,w,c
 13417  012AA8  6EDA               	movwf	fsr2h,c
 13418  012AAA  0EFF               	movlw	255
 13419  012AAC  22DA               	addwfc	fsr2h,f,c
 13420  012AAE  0EF4               	movlw	-12
 13421  012AB0  50E3               	movf	plusw1,w,c
 13422  012AB2  5CDE               	subwf	postinc2,w,c
 13423  012AB4  0EF5               	movlw	-11
 13424  012AB6  50E3               	movf	plusw1,w,c
 13425  012AB8  58DE               	subwfb	postinc2,w,c
 13426  012ABA  0EF6               	movlw	-10
 13427  012ABC  50E3               	movf	plusw1,w,c
 13428  012ABE  58DE               	subwfb	postinc2,w,c
 13429  012AC0  50DE               	movf	postinc2,w,c
 13430  012AC2  0A80               	xorlw	128
 13431  012AC4  6E35               	movwf	btemp^0,c
 13432  012AC6  0EF7               	movlw	-9
 13433  012AC8  50E3               	movf	plusw1,w,c
 13434  012ACA  0A80               	xorlw	128
 13435  012ACC  5835               	subwfb	btemp^0,w,c
 13436  012ACE  B0D8               	btfsc	status,0,c
 13437  012AD0  D053               	goto	l6055
 13438                           
 13439                           ;stkvar	_b @ sp[(-4)+-4]
 13440                           ;stkvar	_a @ sp[(-4)+-8]
 13441  012AD2  0EF4               	movlw	-12
 13442  012AD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 13443  012ADA  0EF5               	movlw	-11
 13444  012ADC  006F FF8C  F03E    	movff	plusw1,btemp+9
 13445  012AE2  0EF6               	movlw	-10
 13446  012AE4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13447  012AEA  0EF7               	movlw	-9
 13448  012AEC  006F FF8C  F040    	movff	plusw1,btemp+11
 13449  012AF2  0EF8               	movlw	-8
 13450  012AF4  50E3               	movf	plusw1,w,c
 13451  012AF6  5E3D               	subwf	(btemp+8)^0,f,c
 13452  012AF8  0EF9               	movlw	-7
 13453  012AFA  50E3               	movf	plusw1,w,c
 13454  012AFC  5A3E               	subwfb	(btemp+9)^0,f,c
 13455  012AFE  0EFA               	movlw	-6
 13456  012B00  50E3               	movf	plusw1,w,c
 13457  012B02  5A3F               	subwfb	(btemp+10)^0,f,c
 13458  012B04  0EFB               	movlw	-5
 13459  012B06  50E3               	movf	plusw1,w,c
 13460  012B08  5A40               	subwfb	(btemp+11)^0,f,c
 13461  012B0A  0EFF               	movlw	255
 13462  012B0C  243D               	addwf	(btemp+8)^0,w,c
 13463  012B0E  6E39               	movwf	(btemp+4)^0,c
 13464  012B10  0EFF               	movlw	255
 13465  012B12  203E               	addwfc	(btemp+9)^0,w,c
 13466  012B14  6E3A               	movwf	(btemp+5)^0,c
 13467  012B16  0EFF               	movlw	255
 13468  012B18  203F               	addwfc	(btemp+10)^0,w,c
 13469  012B1A  6E3B               	movwf	(btemp+6)^0,c
 13470  012B1C  0EFF               	movlw	255
 13471  012B1E  2040               	addwfc	(btemp+11)^0,w,c
 13472  012B20  6E3C               	movwf	(btemp+7)^0,c
 13473                           
 13474                           ;stkvar	_b @ sp[(-4)+-4]
 13475  012B22  0EF8               	movlw	-8
 13476  012B24  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13477  012B2A  0EF9               	movlw	-7
 13478  012B2C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13479  012B32  0EFA               	movlw	-6
 13480  012B34  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13481  012B3A  0EFB               	movlw	-5
 13482  012B3C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13483                           
 13484                           ;stkvar	_signs @ sp[(-4)+3]
 13485  012B42  0EFF               	movlw	-1
 13486  012B44  7EE3               	btg	plusw1,7,c
 13487                           
 13488                           ;stkvar	_grs @ sp[(-4)+0]
 13489  012B46  0EFC               	movlw	-4
 13490  012B48  50E3               	movf	plusw1,w,c
 13491  012B4A  0800               	sublw	0
 13492  012B4C  6E40               	movwf	(btemp+11)^0,c
 13493                           
 13494                           ;stkvar	_grs @ sp[(-4)+0]
 13495  012B4E  0EFC               	movlw	-4
 13496  012B50  0060  F103  FFE3   	movff	btemp+11,plusw1
 13497                           
 13498                           ;stkvar	_grs @ sp[(-4)+0]
 13499  012B56  0EFC               	movlw	-4
 13500  012B58  50E3               	movf	plusw1,w,c
 13501  012B5A  A4D8               	btfss	status,2,c
 13502  012B5C  D020               	goto	l6057
 13503                           
 13504                           ;stkvar	_b @ sp[(-4)+-4]
 13505  012B5E  50E1               	movf	fsr1l,w,c
 13506  012B60  0FF8               	addlw	-8
 13507  012B62  6ED9               	movwf	fsr2l,c
 13508  012B64  50E2               	movf	fsr1h,w,c
 13509  012B66  6EDA               	movwf	fsr2h,c
 13510  012B68  0EFF               	movlw	255
 13511  012B6A  22DA               	addwfc	fsr2h,f,c
 13512  012B6C  2ADE               	incf	postinc2,f,c
 13513  012B6E  0E00               	movlw	0
 13514  012B70  22DE               	addwfc	postinc2,f,c
 13515  012B72  22DE               	addwfc	postinc2,f,c
 13516  012B74  22DE               	addwfc	postinc2,f,c
 13517  012B76  D013               	goto	l6057
 13518  012B78                     l6055:
 13519                           
 13520                           ;stkvar	_a @ sp[(-4)+-8]
 13521                           ;stkvar	_b @ sp[(-4)+-4]
 13522  012B78  50E1               	movf	fsr1l,w,c
 13523  012B7A  0FF8               	addlw	-8
 13524  012B7C  6ED9               	movwf	fsr2l,c
 13525  012B7E  50E2               	movf	fsr1h,w,c
 13526  012B80  6EDA               	movwf	fsr2h,c
 13527  012B82  0EFF               	movlw	255
 13528  012B84  22DA               	addwfc	fsr2h,f,c
 13529  012B86  0EF4               	movlw	-12
 13530  012B88  50E3               	movf	plusw1,w,c
 13531  012B8A  5EDE               	subwf	postinc2,f,c
 13532  012B8C  0EF5               	movlw	-11
 13533  012B8E  50E3               	movf	plusw1,w,c
 13534  012B90  5ADE               	subwfb	postinc2,f,c
 13535  012B92  0EF6               	movlw	-10
 13536  012B94  50E3               	movf	plusw1,w,c
 13537  012B96  5ADE               	subwfb	postinc2,f,c
 13538  012B98  0EF7               	movlw	-9
 13539  012B9A  50E3               	movf	plusw1,w,c
 13540  012B9C  5ADE               	subwfb	postinc2,f,c
 13541  012B9E                     l6057:
 13542                           
 13543                           ;stkvar	_b @ sp[(-4)+-4]
 13544  012B9E  0EF8               	movlw	-8
 13545  012BA0  50E3               	movf	plusw1,w,c
 13546  012BA2  E145               	bnz	l6079
 13547  012BA4  0EF9               	movlw	-7
 13548  012BA6  50E3               	movf	plusw1,w,c
 13549  012BA8  E142               	bnz	l6079
 13550  012BAA  0EFA               	movlw	-6
 13551  012BAC  50E3               	movf	plusw1,w,c
 13552  012BAE  E13F               	bnz	l6079
 13553  012BB0  0EFB               	movlw	-5
 13554  012BB2  50E3               	movf	plusw1,w,c
 13555  012BB4  A4D8               	btfss	status,2,c
 13556  012BB6  D03B               	goto	l6079
 13557                           
 13558                           ;stkvar	_grs @ sp[(-4)+0]
 13559  012BB8  0EFC               	movlw	-4
 13560  012BBA  50E3               	movf	plusw1,w,c
 13561  012BBC  A4D8               	btfss	status,2,c
 13562  012BBE  D037               	goto	l6079
 13563  012BC0                     u4530:
 13564  012BC0  0E00               	movlw	0
 13565  012BC2  6E35               	movwf	btemp^0,c
 13566  012BC4  0E00               	movlw	0
 13567  012BC6  6E36               	movwf	(btemp+1)^0,c
 13568  012BC8  0E00               	movlw	0
 13569  012BCA  6E37               	movwf	(btemp+2)^0,c
 13570  012BCC  0E00               	movlw	0
 13571  012BCE  6E38               	movwf	(btemp+3)^0,c
 13572  012BD0  D0C6               	goto	l2500
 13573  012BD2                     l6065:
 13574                           
 13575                           ;stkvar	_b @ sp[(-4)+-4]
 13576  012BD2  90D8               	bcf	status,0,c
 13577  012BD4  0EF8               	movlw	-8
 13578  012BD6  36E3               	rlcf	plusw1,f,c
 13579  012BD8  0EF9               	movlw	-7
 13580  012BDA  36E3               	rlcf	plusw1,f,c
 13581  012BDC  0EFA               	movlw	-6
 13582  012BDE  36E3               	rlcf	plusw1,f,c
 13583  012BE0  0EFB               	movlw	-5
 13584  012BE2  36E3               	rlcf	plusw1,f,c
 13585                           
 13586                           ;stkvar	_grs @ sp[(-4)+0]
 13587  012BE4  0EFC               	movlw	-4
 13588  012BE6  AEE3               	btfss	plusw1,7,c
 13589  012BE8  D002               	goto	l2512
 13590                           
 13591                           ;stkvar	_b @ sp[(-4)+-4]
 13592  012BEA  0EF8               	movlw	-8
 13593  012BEC  80E3               	bsf	plusw1,0,c
 13594  012BEE                     l2512:
 13595                           
 13596                           ;stkvar	_grs @ sp[(-4)+0]
 13597  012BEE  0EFC               	movlw	-4
 13598  012BF0  A0E3               	btfss	plusw1,0,c
 13599  012BF2  D00E               	goto	l6073
 13600                           
 13601                           ;stkvar	_grs @ sp[(-4)+0]
 13602  012BF4  0EFC               	movlw	-4
 13603  012BF6  006F FF8C  F040    	movff	plusw1,btemp+11
 13604  012BFC  90D8               	bcf	status,0,c
 13605  012BFE  3440               	rlcf	(btemp+11)^0,w,c
 13606  012C00  6E3F               	movwf	(btemp+10)^0,c
 13607  012C02  0E01               	movlw	1
 13608  012C04  123F               	iorwf	(btemp+10)^0,f,c
 13609                           
 13610                           ;stkvar	_grs @ sp[(-4)+0]
 13611  012C06  0EFC               	movlw	-4
 13612  012C08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13613  012C0E  D009               	goto	l6075
 13614  012C10                     l6073:
 13615                           
 13616                           ;stkvar	_grs @ sp[(-4)+0]
 13617  012C10  50E1               	movf	fsr1l,w,c
 13618  012C12  0FFC               	addlw	-4
 13619  012C14  6ED9               	movwf	fsr2l,c
 13620  012C16  50E2               	movf	fsr1h,w,c
 13621  012C18  6EDA               	movwf	fsr2h,c
 13622  012C1A  0EFF               	movlw	255
 13623  012C1C  22DA               	addwfc	fsr2h,f,c
 13624  012C1E  90D8               	bcf	status,0,c
 13625  012C20  36DF               	rlcf	indf2,f,c
 13626  012C22                     l6075:
 13627                           
 13628                           ;stkvar	_bexp @ sp[(-4)+1]
 13629  012C22  0EFD               	movlw	-3
 13630  012C24  50E3               	movf	plusw1,w,c
 13631  012C26  B4D8               	btfsc	status,2,c
 13632  012C28  D002               	goto	l6079
 13633                           
 13634                           ;stkvar	_bexp @ sp[(-4)+1]
 13635  012C2A  0EFD               	movlw	-3
 13636  012C2C  06E3               	decf	plusw1,f,c
 13637  012C2E                     l6079:
 13638                           
 13639                           ;stkvar	_b @ sp[(-4)+-4]
 13640  012C2E  0EFA               	movlw	-6
 13641  012C30  AEE3               	btfss	plusw1,7,c
 13642  012C32  D7CF               	goto	l6065
 13643  012C34                     u4570:
 13644                           
 13645                           ;stkvar	_aexp @ sp[(-4)+2]
 13646  012C34  0EFE               	movlw	-2
 13647  012C36  6AE3               	clrf	plusw1,c
 13648                           
 13649                           ;stkvar	_grs @ sp[(-4)+0]
 13650  012C38  0EFC               	movlw	-4
 13651  012C3A  AEE3               	btfss	plusw1,7,c
 13652  012C3C  D00F               	goto	l6093
 13653                           
 13654                           ;stkvar	_grs @ sp[(-4)+0]
 13655  012C3E  0EFC               	movlw	-4
 13656  012C40  006F FF8C  F040    	movff	plusw1,btemp+11
 13657  012C46  0E7F               	movlw	127
 13658  012C48  1640               	andwf	(btemp+11)^0,f,c
 13659  012C4A  B4D8               	btfsc	status,2,c
 13660  012C4C  D004               	goto	l6089
 13661  012C4E                     u4590:
 13662                           
 13663                           ;stkvar	_aexp @ sp[(-4)+2]
 13664  012C4E  0EFE               	movlw	-2
 13665  012C50  6AE3               	clrf	plusw1,c
 13666  012C52  2AE3               	incf	plusw1,f,c
 13667  012C54  D003               	goto	l6093
 13668  012C56                     l6089:
 13669                           
 13670                           ;stkvar	_b @ sp[(-4)+-4]
 13671  012C56  0EF8               	movlw	-8
 13672  012C58  B0E3               	btfsc	plusw1,0,c
 13673  012C5A  D7F9               	goto	u4590
 13674  012C5C                     l6093:
 13675                           
 13676                           ;stkvar	_aexp @ sp[(-4)+2]
 13677  012C5C  0EFE               	movlw	-2
 13678  012C5E  50E3               	movf	plusw1,w,c
 13679  012C60  B4D8               	btfsc	status,2,c
 13680  012C62  D02B               	goto	l6105
 13681                           
 13682                           ;stkvar	_b @ sp[(-4)+-4]
 13683  012C64  50E1               	movf	fsr1l,w,c
 13684  012C66  0FF8               	addlw	-8
 13685  012C68  6ED9               	movwf	fsr2l,c
 13686  012C6A  50E2               	movf	fsr1h,w,c
 13687  012C6C  6EDA               	movwf	fsr2h,c
 13688  012C6E  0EFF               	movlw	255
 13689  012C70  22DA               	addwfc	fsr2h,f,c
 13690  012C72  2ADE               	incf	postinc2,f,c
 13691  012C74  0E00               	movlw	0
 13692  012C76  22DE               	addwfc	postinc2,f,c
 13693  012C78  22DE               	addwfc	postinc2,f,c
 13694  012C7A  22DE               	addwfc	postinc2,f,c
 13695                           
 13696                           ;stkvar	_b @ sp[(-4)+-4]
 13697  012C7C  0EFB               	movlw	-5
 13698  012C7E  A0E3               	btfss	plusw1,0,c
 13699  012C80  D01C               	goto	l6105
 13700  012C82  0E01               	movlw	1
 13701  012C84  6E40               	movwf	(btemp+11)^0,c
 13702                           
 13703                           ;stkvar	_b @ sp[(-4)+-4]
 13704  012C86  50E1               	movf	fsr1l,w,c
 13705  012C88  0FF8               	addlw	-8
 13706  012C8A  6ED9               	movwf	fsr2l,c
 13707  012C8C  50E2               	movf	fsr1h,w,c
 13708  012C8E  6EDA               	movwf	fsr2h,c
 13709  012C90  0EFF               	movlw	255
 13710  012C92  22DA               	addwfc	fsr2h,f,c
 13711  012C94  2840               	incf	(btemp+11)^0,w,c
 13712  012C96  52DE               	movf	postinc2,f,c
 13713  012C98  D008               	goto	u4630
 13714  012C9A                     u4635:
 13715  012C9A  52DE               	movf	postinc2,f,c
 13716  012C9C  90D8               	bcf	status,0,c
 13717  012C9E  BEDC               	btfsc	preinc2,7,c
 13718  012CA0  80D8               	bsf	status,0,c
 13719  012CA2  32DD               	rrcf	postdec2,f,c
 13720  012CA4  32DD               	rrcf	postdec2,f,c
 13721  012CA6  32DD               	rrcf	postdec2,f,c
 13722  012CA8  32DE               	rrcf	postinc2,f,c
 13723  012CAA                     u4630:
 13724  012CAA  2EE8               	decfsz	wreg,f,c
 13725  012CAC  D7F6               	goto	u4635
 13726                           
 13727                           ;stkvar	_bexp @ sp[(-4)+1]
 13728  012CAE  0EFD               	movlw	-3
 13729  012CB0  28E3               	incf	plusw1,w,c
 13730  012CB2  B4D8               	btfsc	status,2,c
 13731  012CB4  D002               	goto	l6105
 13732                           
 13733                           ;stkvar	_bexp @ sp[(-4)+1]
 13734  012CB6  0EFD               	movlw	-3
 13735  012CB8  2AE3               	incf	plusw1,f,c
 13736  012CBA                     l6105:
 13737                           
 13738                           ;stkvar	_bexp @ sp[(-4)+1]
 13739  012CBA  0EFD               	movlw	-3
 13740  012CBC  28E3               	incf	plusw1,w,c
 13741  012CBE  B4D8               	btfsc	status,2,c
 13742  012CC0  D004               	goto	u4660
 13743                           
 13744                           ;stkvar	_bexp @ sp[(-4)+1]
 13745  012CC2  0EFD               	movlw	-3
 13746  012CC4  50E3               	movf	plusw1,w,c
 13747  012CC6  A4D8               	btfss	status,2,c
 13748  012CC8  D00E               	goto	l6115
 13749  012CCA                     u4660:
 13750                           
 13751                           ;stkvar	_b @ sp[(-4)+-4]
 13752  012CCA  0EF8               	movlw	-8
 13753  012CCC  6AE3               	clrf	plusw1,c
 13754  012CCE  0EF9               	movlw	-7
 13755  012CD0  6AE3               	clrf	plusw1,c
 13756  012CD2  0EFA               	movlw	-6
 13757  012CD4  6AE3               	clrf	plusw1,c
 13758  012CD6  0EFB               	movlw	-5
 13759  012CD8  6AE3               	clrf	plusw1,c
 13760                           
 13761                           ;stkvar	_bexp @ sp[(-4)+1]
 13762  012CDA  0EFD               	movlw	-3
 13763  012CDC  50E3               	movf	plusw1,w,c
 13764  012CDE  A4D8               	btfss	status,2,c
 13765  012CE0  D002               	goto	l6115
 13766                           
 13767                           ;stkvar	_signs @ sp[(-4)+3]
 13768  012CE2  0EFF               	movlw	-1
 13769  012CE4  6AE3               	clrf	plusw1,c
 13770  012CE6                     l6115:
 13771                           
 13772                           ;stkvar	_bexp @ sp[(-4)+1]
 13773  012CE6  0EFD               	movlw	-3
 13774  012CE8  A0E3               	btfss	plusw1,0,c
 13775  012CEA  D009               	goto	l6119
 13776                           
 13777                           ;stkvar	_b @ sp[(-4)+-4]
 13778  012CEC  0EFA               	movlw	250
 13779  012CEE  24E1               	addwf	fsr1l,w,c
 13780  012CF0  6ED9               	movwf	fsr2l,c
 13781  012CF2  0EFF               	movlw	255
 13782  012CF4  20E2               	addwfc	fsr1h,w,c
 13783  012CF6  6EDA               	movwf	fsr2h,c
 13784  012CF8  0E00               	movlw	0
 13785  012CFA  8EDB               	bsf	plusw2,7,c
 13786  012CFC  D008               	goto	l6121
 13787  012CFE                     l6119:
 13788                           
 13789                           ;stkvar	_b @ sp[(-4)+-4]
 13790  012CFE  0EFA               	movlw	250
 13791  012D00  24E1               	addwf	fsr1l,w,c
 13792  012D02  6ED9               	movwf	fsr2l,c
 13793  012D04  0EFF               	movlw	255
 13794  012D06  20E2               	addwfc	fsr1h,w,c
 13795  012D08  6EDA               	movwf	fsr2h,c
 13796  012D0A  0E7F               	movlw	127
 13797  012D0C  16DF               	andwf	indf2,f,c
 13798  012D0E                     l6121:
 13799                           
 13800                           ;stkvar	_b @ sp[(-4)+-4]
 13801  012D0E  0EFB               	movlw	251
 13802  012D10  24E1               	addwf	fsr1l,w,c
 13803  012D12  6ED9               	movwf	fsr2l,c
 13804  012D14  0EFF               	movlw	255
 13805  012D16  20E2               	addwfc	fsr1h,w,c
 13806  012D18  6EDA               	movwf	fsr2h,c
 13807                           
 13808                           ;stkvar	_bexp @ sp[(-4)+1]
 13809  012D1A  0EFD               	movlw	-3
 13810  012D1C  006F FF8C  F040    	movff	plusw1,btemp+11
 13811  012D22  90D8               	bcf	status,0,c
 13812  012D24  3040               	rrcf	(btemp+11)^0,w,c
 13813  012D26  6EDF               	movwf	indf2,c
 13814                           
 13815                           ;stkvar	_signs @ sp[(-4)+3]
 13816  012D28  0EFF               	movlw	-1
 13817  012D2A  AEE3               	btfss	plusw1,7,c
 13818  012D2C  D008               	goto	l6127
 13819                           
 13820                           ;stkvar	_b @ sp[(-4)+-4]
 13821  012D2E  0EFB               	movlw	251
 13822  012D30  24E1               	addwf	fsr1l,w,c
 13823  012D32  6ED9               	movwf	fsr2l,c
 13824  012D34  0EFF               	movlw	255
 13825  012D36  20E2               	addwfc	fsr1h,w,c
 13826  012D38  6EDA               	movwf	fsr2h,c
 13827  012D3A  0E00               	movlw	0
 13828  012D3C  8EDB               	bsf	plusw2,7,c
 13829  012D3E                     l6127:
 13830                           
 13831                           ;stkvar	_b @ sp[(-4)+-4]
 13832  012D3E  0EF8               	movlw	-8
 13833  012D40  006F FF8C  F035    	movff	plusw1,btemp
 13834  012D46  0EF9               	movlw	-7
 13835  012D48  006F FF8C  F036    	movff	plusw1,btemp+1
 13836  012D4E  0EFA               	movlw	-6
 13837  012D50  006F FF8C  F037    	movff	plusw1,btemp+2
 13838  012D56  0EFB               	movlw	-5
 13839  012D58  006F FF8C  F038    	movff	plusw1,btemp+3
 13840  012D5E                     l2500:
 13841                           
 13842                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13843  012D5E  0EF4               	movlw	244
 13844  012D60  26E1               	addwf	fsr1l,f,c
 13845  012D62  0EFF               	movlw	255
 13846  012D64  22E2               	addwfc	fsr1h,f,c
 13847  012D66  0012               	return		;funcret
 13848  012D68                     __end_of___fladd:
 13849                           	opt callstack 0
 13850                           
 13851 ;; *************** function ___flneg *****************
 13852 ;; Defined at:
 13853 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13854 ;; Parameters:    Size  Location     Type
 13855 ;;  f1              4  [STACK] unsigned char 
 13856 ;; Auto vars:     Size  Location     Type
 13857 ;;		None
 13858 ;; Return value:  Size  Location     Type
 13859 ;;                  4  [STACK] unsigned char 
 13860 ;; Registers used:
 13861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13862 ;; Tracked objects:
 13863 ;;		On entry : 0/4
 13864 ;;		On exit  : 0/0
 13865 ;;		Unchanged: 0/0
 13866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13871 ;;Total ram usage:        0 bytes
 13872 ;; Hardware stack levels used:    1
 13873 ;; Hardware stack levels required when called:    6
 13874 ;; This function calls:
 13875 ;;		Nothing
 13876 ;; This function is called by:
 13877 ;;		_efgtoa
 13878 ;; This function uses a reentrant model
 13879 ;;
 13880                           
 13881                           	psect	text48
 13882  017534                     __ptext48:
 13883                           	opt callstack 0
 13884  017534                     ___flneg:
 13885                           	opt callstack 17
 13886                           
 13887                           ;stkvar	_f1 @ sp[(0)+-4]
 13888                           
 13889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13890                           ;incstack = 0
 13891  017534  0EFC               	movlw	-4
 13892  017536  50E3               	movf	plusw1,w,c
 13893  017538  E10A               	bnz	u5970
 13894  01753A  0EFD               	movlw	-3
 13895  01753C  50E3               	movf	plusw1,w,c
 13896  01753E  E107               	bnz	u5970
 13897  017540  0EFE               	movlw	-2
 13898  017542  50E3               	movf	plusw1,w,c
 13899  017544  E104               	bnz	u5970
 13900  017546  0EFF               	movlw	-1
 13901  017548  50E3               	movf	plusw1,w,c
 13902  01754A  B4D8               	btfsc	status,2,c
 13903  01754C  D002               	goto	l6795
 13904  01754E                     u5970:
 13905                           
 13906                           ;stkvar	_f1 @ sp[(0)+-4]
 13907  01754E  0EFF               	movlw	-1
 13908  017550  7EE3               	btg	plusw1,7,c
 13909  017552                     l6795:
 13910                           
 13911                           ;stkvar	_f1 @ sp[(0)+-4]
 13912  017552  0EFC               	movlw	-4
 13913  017554  006F FF8C  F035    	movff	plusw1,btemp
 13914  01755A  0EFD               	movlw	-3
 13915  01755C  006F FF8C  F036    	movff	plusw1,btemp+1
 13916  017562  0EFE               	movlw	-2
 13917  017564  006F FF8C  F037    	movff	plusw1,btemp+2
 13918  01756A  0EFF               	movlw	-1
 13919  01756C  006F FF8C  F038    	movff	plusw1,btemp+3
 13920                           
 13921                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13922  017572  52E5               	movf	postdec1,f,c
 13923  017574  52E5               	movf	postdec1,f,c
 13924  017576  52E5               	movf	postdec1,f,c
 13925  017578  52E5               	movf	postdec1,f,c
 13926  01757A  0012               	return		;funcret
 13927  01757C                     __end_of___flneg:
 13928                           	opt callstack 0
 13929                           
 13930 ;; *************** function ___flmul *****************
 13931 ;; Defined at:
 13932 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 13933 ;; Parameters:    Size  Location     Type
 13934 ;;  b               4  [STACK] unsigned char 
 13935 ;;  a               4  [STACK] unsigned char 
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;  prod            4  [STACK] struct .
 13938 ;;  grs             4  [STACK] unsigned long 
 13939 ;;  temp            2  [STACK] struct .
 13940 ;;  bexp            1  [STACK] unsigned char 
 13941 ;;  aexp            1  [STACK] unsigned char 
 13942 ;;  sign            1  [STACK] unsigned char 
 13943 ;; Return value:  Size  Location     Type
 13944 ;;                  4  [STACK] unsigned char 
 13945 ;; Registers used:
 13946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13947 ;; Tracked objects:
 13948 ;;		On entry : 0/0
 13949 ;;		On exit  : 0/0
 13950 ;;		Unchanged: 0/0
 13951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13956 ;;Total ram usage:        0 bytes
 13957 ;; Hardware stack levels used:    1
 13958 ;; Hardware stack levels required when called:    6
 13959 ;; This function calls:
 13960 ;;		Nothing
 13961 ;; This function is called by:
 13962 ;;		_conv_raw_result
 13963 ;;		_lp_filter
 13964 ;;		_efgtoa
 13965 ;; This function uses a reentrant model
 13966 ;;
 13967                           
 13968                           	psect	text49
 13969  011D82                     __ptext49:
 13970                           	opt callstack 0
 13971  011D82                     ___flmul:
 13972                           	opt callstack 0
 13973                           
 13974                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13975  011D82  0E0D               	movlw	13
 13976  011D84  26E1               	addwf	fsr1l,f,c
 13977  011D86  0E00               	movlw	0
 13978  011D88  22E2               	addwfc	fsr1h,f,c
 13979                           
 13980                           ;stkvar	_b @ sp[(-13)+-4]
 13981                           
 13982                           ;incstack = 0
 13983  011D8A  0EF2               	movlw	242
 13984  011D8C  24E1               	addwf	fsr1l,w,c
 13985  011D8E  6ED9               	movwf	fsr2l,c
 13986  011D90  0EFF               	movlw	255
 13987  011D92  20E2               	addwfc	fsr1h,w,c
 13988  011D94  6EDA               	movwf	fsr2h,c
 13989  011D96  50DF               	movf	indf2,w,c
 13990  011D98  6E40               	movwf	(btemp+11)^0,c
 13991  011D9A  0E80               	movlw	128
 13992  011D9C  1640               	andwf	(btemp+11)^0,f,c
 13993                           
 13994                           ;stkvar	_sign @ sp[(-13)+12]
 13995  011D9E  0EFF               	movlw	-1
 13996  011DA0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13997                           
 13998                           ;stkvar	_b @ sp[(-13)+-4]
 13999  011DA6  0EF2               	movlw	242
 14000  011DA8  24E1               	addwf	fsr1l,w,c
 14001  011DAA  6ED9               	movwf	fsr2l,c
 14002  011DAC  0EFF               	movlw	255
 14003  011DAE  20E2               	addwfc	fsr1h,w,c
 14004  011DB0  6EDA               	movwf	fsr2h,c
 14005  011DB2  50DF               	movf	indf2,w,c
 14006  011DB4  6E40               	movwf	(btemp+11)^0,c
 14007  011DB6  90D8               	bcf	status,0,c
 14008  011DB8  3440               	rlcf	(btemp+11)^0,w,c
 14009  011DBA  6E3F               	movwf	(btemp+10)^0,c
 14010                           
 14011                           ;stkvar	_bexp @ sp[(-13)+10]
 14012  011DBC  0EFD               	movlw	-3
 14013  011DBE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14014                           
 14015                           ;stkvar	_b @ sp[(-13)+-4]
 14016  011DC4  0EF1               	movlw	241
 14017  011DC6  24E1               	addwf	fsr1l,w,c
 14018  011DC8  6ED9               	movwf	fsr2l,c
 14019  011DCA  0EFF               	movlw	255
 14020  011DCC  20E2               	addwfc	fsr1h,w,c
 14021  011DCE  6EDA               	movwf	fsr2h,c
 14022  011DD0  AEDF               	btfss	indf2,7,c
 14023  011DD2  D002               	goto	l6511
 14024                           
 14025                           ;stkvar	_bexp @ sp[(-13)+10]
 14026  011DD4  0EFD               	movlw	-3
 14027  011DD6  80E3               	bsf	plusw1,0,c
 14028  011DD8                     l6511:
 14029                           
 14030                           ;stkvar	_bexp @ sp[(-13)+10]
 14031  011DD8  0EFD               	movlw	-3
 14032  011DDA  50E3               	movf	plusw1,w,c
 14033  011DDC  B4D8               	btfsc	status,2,c
 14034  011DDE  D01F               	goto	l6519
 14035                           
 14036                           ;stkvar	_bexp @ sp[(-13)+10]
 14037  011DE0  0EFD               	movlw	-3
 14038  011DE2  28E3               	incf	plusw1,w,c
 14039  011DE4  A4D8               	btfss	status,2,c
 14040  011DE6  D018               	goto	l6517
 14041  011DE8  0E00               	movlw	0
 14042  011DEA  6E3D               	movwf	(btemp+8)^0,c
 14043  011DEC  0E00               	movlw	0
 14044  011DEE  6E3E               	movwf	(btemp+9)^0,c
 14045  011DF0  0E00               	movlw	0
 14046  011DF2  6E3F               	movwf	(btemp+10)^0,c
 14047  011DF4  0E00               	movlw	0
 14048  011DF6  6E40               	movwf	(btemp+11)^0,c
 14049                           
 14050                           ;stkvar	_b @ sp[(-13)+-4]
 14051  011DF8  0EEF               	movlw	-17
 14052  011DFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14053  011E00  0EF0               	movlw	-16
 14054  011E02  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14055  011E08  0EF1               	movlw	-15
 14056  011E0A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14057  011E10  0EF2               	movlw	-14
 14058  011E12  0060  F103  FFE3   	movff	btemp+11,plusw1
 14059  011E18                     l6517:
 14060                           
 14061                           ;stkvar	_b @ sp[(-13)+-4]
 14062  011E18  0EF1               	movlw	-15
 14063  011E1A  8EE3               	bsf	plusw1,7,c
 14064  011E1C  D018               	goto	l6521
 14065  011E1E                     l6519:
 14066  011E1E  0E00               	movlw	0
 14067  011E20  6E3D               	movwf	(btemp+8)^0,c
 14068  011E22  0E00               	movlw	0
 14069  011E24  6E3E               	movwf	(btemp+9)^0,c
 14070  011E26  0E00               	movlw	0
 14071  011E28  6E3F               	movwf	(btemp+10)^0,c
 14072  011E2A  0E00               	movlw	0
 14073  011E2C  6E40               	movwf	(btemp+11)^0,c
 14074                           
 14075                           ;stkvar	_b @ sp[(-13)+-4]
 14076  011E2E  0EEF               	movlw	-17
 14077  011E30  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14078  011E36  0EF0               	movlw	-16
 14079  011E38  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14080  011E3E  0EF1               	movlw	-15
 14081  011E40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14082  011E46  0EF2               	movlw	-14
 14083  011E48  0060  F103  FFE3   	movff	btemp+11,plusw1
 14084  011E4E                     l6521:
 14085                           
 14086                           ;stkvar	_a @ sp[(-13)+-8]
 14087  011E4E  0EEE               	movlw	238
 14088  011E50  24E1               	addwf	fsr1l,w,c
 14089  011E52  6ED9               	movwf	fsr2l,c
 14090  011E54  0EFF               	movlw	255
 14091  011E56  20E2               	addwfc	fsr1h,w,c
 14092  011E58  6EDA               	movwf	fsr2h,c
 14093  011E5A  50DF               	movf	indf2,w,c
 14094  011E5C  6E40               	movwf	(btemp+11)^0,c
 14095  011E5E  0E80               	movlw	128
 14096  011E60  1640               	andwf	(btemp+11)^0,f,c
 14097                           
 14098                           ;stkvar	_sign @ sp[(-13)+12]
 14099  011E62  50E1               	movf	fsr1l,w,c
 14100  011E64  0FFF               	addlw	-1
 14101  011E66  6ED9               	movwf	fsr2l,c
 14102  011E68  50E2               	movf	fsr1h,w,c
 14103  011E6A  6EDA               	movwf	fsr2h,c
 14104  011E6C  0EFF               	movlw	255
 14105  011E6E  22DA               	addwfc	fsr2h,f,c
 14106  011E70  5040               	movf	(btemp+11)^0,w,c
 14107  011E72  1ADF               	xorwf	indf2,f,c
 14108                           
 14109                           ;stkvar	_a @ sp[(-13)+-8]
 14110  011E74  0EEE               	movlw	238
 14111  011E76  24E1               	addwf	fsr1l,w,c
 14112  011E78  6ED9               	movwf	fsr2l,c
 14113  011E7A  0EFF               	movlw	255
 14114  011E7C  20E2               	addwfc	fsr1h,w,c
 14115  011E7E  6EDA               	movwf	fsr2h,c
 14116  011E80  50DF               	movf	indf2,w,c
 14117  011E82  6E40               	movwf	(btemp+11)^0,c
 14118  011E84  90D8               	bcf	status,0,c
 14119  011E86  3440               	rlcf	(btemp+11)^0,w,c
 14120  011E88  6E3F               	movwf	(btemp+10)^0,c
 14121                           
 14122                           ;stkvar	_aexp @ sp[(-13)+11]
 14123  011E8A  0EFE               	movlw	-2
 14124  011E8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14125                           
 14126                           ;stkvar	_a @ sp[(-13)+-8]
 14127  011E92  0EED               	movlw	237
 14128  011E94  24E1               	addwf	fsr1l,w,c
 14129  011E96  6ED9               	movwf	fsr2l,c
 14130  011E98  0EFF               	movlw	255
 14131  011E9A  20E2               	addwfc	fsr1h,w,c
 14132  011E9C  6EDA               	movwf	fsr2h,c
 14133  011E9E  AEDF               	btfss	indf2,7,c
 14134  011EA0  D002               	goto	l6529
 14135                           
 14136                           ;stkvar	_aexp @ sp[(-13)+11]
 14137  011EA2  0EFE               	movlw	-2
 14138  011EA4  80E3               	bsf	plusw1,0,c
 14139  011EA6                     l6529:
 14140                           
 14141                           ;stkvar	_aexp @ sp[(-13)+11]
 14142  011EA6  0EFE               	movlw	-2
 14143  011EA8  50E3               	movf	plusw1,w,c
 14144  011EAA  B4D8               	btfsc	status,2,c
 14145  011EAC  D01F               	goto	l6537
 14146                           
 14147                           ;stkvar	_aexp @ sp[(-13)+11]
 14148  011EAE  0EFE               	movlw	-2
 14149  011EB0  28E3               	incf	plusw1,w,c
 14150  011EB2  A4D8               	btfss	status,2,c
 14151  011EB4  D018               	goto	l6535
 14152  011EB6  0E00               	movlw	0
 14153  011EB8  6E3D               	movwf	(btemp+8)^0,c
 14154  011EBA  0E00               	movlw	0
 14155  011EBC  6E3E               	movwf	(btemp+9)^0,c
 14156  011EBE  0E00               	movlw	0
 14157  011EC0  6E3F               	movwf	(btemp+10)^0,c
 14158  011EC2  0E00               	movlw	0
 14159  011EC4  6E40               	movwf	(btemp+11)^0,c
 14160                           
 14161                           ;stkvar	_a @ sp[(-13)+-8]
 14162  011EC6  0EEB               	movlw	-21
 14163  011EC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14164  011ECE  0EEC               	movlw	-20
 14165  011ED0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14166  011ED6  0EED               	movlw	-19
 14167  011ED8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14168  011EDE  0EEE               	movlw	-18
 14169  011EE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14170  011EE6                     l6535:
 14171                           
 14172                           ;stkvar	_a @ sp[(-13)+-8]
 14173  011EE6  0EED               	movlw	-19
 14174  011EE8  8EE3               	bsf	plusw1,7,c
 14175  011EEA  D018               	goto	l6539
 14176  011EEC                     l6537:
 14177  011EEC  0E00               	movlw	0
 14178  011EEE  6E3D               	movwf	(btemp+8)^0,c
 14179  011EF0  0E00               	movlw	0
 14180  011EF2  6E3E               	movwf	(btemp+9)^0,c
 14181  011EF4  0E00               	movlw	0
 14182  011EF6  6E3F               	movwf	(btemp+10)^0,c
 14183  011EF8  0E00               	movlw	0
 14184  011EFA  6E40               	movwf	(btemp+11)^0,c
 14185                           
 14186                           ;stkvar	_a @ sp[(-13)+-8]
 14187  011EFC  0EEB               	movlw	-21
 14188  011EFE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14189  011F04  0EEC               	movlw	-20
 14190  011F06  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14191  011F0C  0EED               	movlw	-19
 14192  011F0E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14193  011F14  0EEE               	movlw	-18
 14194  011F16  0060  F103  FFE3   	movff	btemp+11,plusw1
 14195  011F1C                     l6539:
 14196                           
 14197                           ;stkvar	_aexp @ sp[(-13)+11]
 14198  011F1C  0EFE               	movlw	-2
 14199  011F1E  50E3               	movf	plusw1,w,c
 14200  011F20  B4D8               	btfsc	status,2,c
 14201  011F22  D004               	goto	u5600
 14202                           
 14203                           ;stkvar	_bexp @ sp[(-13)+10]
 14204  011F24  0EFD               	movlw	-3
 14205  011F26  50E3               	movf	plusw1,w,c
 14206  011F28  A4D8               	btfss	status,2,c
 14207  011F2A  D009               	goto	l6547
 14208  011F2C                     u5600:
 14209  011F2C  0E00               	movlw	0
 14210  011F2E  6E35               	movwf	btemp^0,c
 14211  011F30  0E00               	movlw	0
 14212  011F32  6E36               	movwf	(btemp+1)^0,c
 14213  011F34  0E00               	movlw	0
 14214  011F36  6E37               	movwf	(btemp+2)^0,c
 14215  011F38  0E00               	movlw	0
 14216  011F3A  6E38               	movwf	(btemp+3)^0,c
 14217  011F3C  D332               	goto	l2581
 14218  011F3E                     l6547:
 14219                           
 14220                           ;stkvar	_b @ sp[(-13)+-4]
 14221  011F3E  0EEF               	movlw	-17
 14222  011F40  006F FF8C  F040    	movff	plusw1,btemp+11
 14223                           
 14224                           ;stkvar	_a @ sp[(-13)+-8]
 14225  011F46  0EED               	movlw	237
 14226  011F48  24E1               	addwf	fsr1l,w,c
 14227  011F4A  6ED9               	movwf	fsr2l,c
 14228  011F4C  0EFF               	movlw	255
 14229  011F4E  20E2               	addwfc	fsr1h,w,c
 14230  011F50  6EDA               	movwf	fsr2h,c
 14231  011F52  50DF               	movf	indf2,w,c
 14232  011F54  0240               	mulwf	(btemp+11)^0,c
 14233                           
 14234                           ;stkvar	_temp @ sp[(-13)+8]
 14235  011F56  0EFB               	movlw	-5
 14236  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 14237  011F5E  0EFC               	movlw	-4
 14238  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 14239                           
 14240                           ;stkvar	_temp @ sp[(-13)+8]
 14241  011F66  0EFB               	movlw	-5
 14242  011F68  006F FF8C  F040    	movff	plusw1,btemp+11
 14243  011F6E  0060  F100  F039   	movff	btemp+11,btemp+4
 14244  011F74  6A3A               	clrf	(btemp+5)^0,c
 14245  011F76  6A3B               	clrf	(btemp+6)^0,c
 14246  011F78  6A3C               	clrf	(btemp+7)^0,c
 14247                           
 14248                           ;stkvar	_grs @ sp[(-13)+4]
 14249  011F7A  0EF7               	movlw	-9
 14250  011F7C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14251  011F82  0EF8               	movlw	-8
 14252  011F84  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14253  011F8A  0EF9               	movlw	-7
 14254  011F8C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14255  011F92  0EFA               	movlw	-6
 14256  011F94  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14257                           
 14258                           ;stkvar	_temp @ sp[(-13)+8]
 14259  011F9A  0EFC               	movlw	252
 14260  011F9C  24E1               	addwf	fsr1l,w,c
 14261  011F9E  6ED9               	movwf	fsr2l,c
 14262  011FA0  0EFF               	movlw	255
 14263  011FA2  20E2               	addwfc	fsr1h,w,c
 14264  011FA4  6EDA               	movwf	fsr2h,c
 14265  011FA6  50DF               	movf	indf2,w,c
 14266  011FA8  6E40               	movwf	(btemp+11)^0,c
 14267  011FAA  0060  F100  F039   	movff	btemp+11,btemp+4
 14268  011FB0  6A3A               	clrf	(btemp+5)^0,c
 14269  011FB2  6A3B               	clrf	(btemp+6)^0,c
 14270  011FB4  6A3C               	clrf	(btemp+7)^0,c
 14271                           
 14272                           ;stkvar	_prod @ sp[(-13)+0]
 14273  011FB6  0EF3               	movlw	-13
 14274  011FB8  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14275  011FBE  0EF4               	movlw	-12
 14276  011FC0  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14277  011FC6  0EF5               	movlw	-11
 14278  011FC8  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14279  011FCE  0EF6               	movlw	-10
 14280  011FD0  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14281                           
 14282                           ;stkvar	_b @ sp[(-13)+-4]
 14283  011FD6  0EF0               	movlw	240
 14284  011FD8  24E1               	addwf	fsr1l,w,c
 14285  011FDA  6ED9               	movwf	fsr2l,c
 14286  011FDC  0EFF               	movlw	255
 14287  011FDE  20E2               	addwfc	fsr1h,w,c
 14288  011FE0  6EDA               	movwf	fsr2h,c
 14289  011FE2  50DF               	movf	indf2,w,c
 14290  011FE4  6E40               	movwf	(btemp+11)^0,c
 14291                           
 14292                           ;stkvar	_a @ sp[(-13)+-8]
 14293  011FE6  0EEC               	movlw	236
 14294  011FE8  24E1               	addwf	fsr1l,w,c
 14295  011FEA  6ED9               	movwf	fsr2l,c
 14296  011FEC  0EFF               	movlw	255
 14297  011FEE  20E2               	addwfc	fsr1h,w,c
 14298  011FF0  6EDA               	movwf	fsr2h,c
 14299  011FF2  50DF               	movf	indf2,w,c
 14300  011FF4  0240               	mulwf	(btemp+11)^0,c
 14301                           
 14302                           ;stkvar	_temp @ sp[(-13)+8]
 14303  011FF6  0EFB               	movlw	-5
 14304  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 14305  011FFE  0EFC               	movlw	-4
 14306  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 14307                           
 14308                           ;stkvar	_grs @ sp[(-13)+4]
 14309  012006  50E1               	movf	fsr1l,w,c
 14310  012008  0FF7               	addlw	-9
 14311  01200A  6ED9               	movwf	fsr2l,c
 14312  01200C  50E2               	movf	fsr1h,w,c
 14313  01200E  6EDA               	movwf	fsr2h,c
 14314  012010  0EFF               	movlw	255
 14315  012012  22DA               	addwfc	fsr2h,f,c
 14316                           
 14317                           ;stkvar	_temp @ sp[(-13)+8]
 14318  012014  0EFB               	movlw	-5
 14319  012016  50E3               	movf	plusw1,w,c
 14320  012018  26DE               	addwf	postinc2,f,c
 14321  01201A  0E00               	movlw	0
 14322  01201C  22DE               	addwfc	postinc2,f,c
 14323  01201E  22DE               	addwfc	postinc2,f,c
 14324  012020  22DE               	addwfc	postinc2,f,c
 14325                           
 14326                           ;stkvar	_prod @ sp[(-13)+0]
 14327  012022  50E1               	movf	fsr1l,w,c
 14328  012024  0FF3               	addlw	-13
 14329  012026  6ED9               	movwf	fsr2l,c
 14330  012028  50E2               	movf	fsr1h,w,c
 14331  01202A  6EDA               	movwf	fsr2h,c
 14332  01202C  0EFF               	movlw	255
 14333  01202E  22DA               	addwfc	fsr2h,f,c
 14334                           
 14335                           ;stkvar	_temp @ sp[(-13)+8]
 14336  012030  0EFC               	movlw	252
 14337  012032  24E1               	addwf	fsr1l,w,c
 14338  012034  6EE9               	movwf	fsr0l,c
 14339  012036  0EFF               	movlw	255
 14340  012038  20E2               	addwfc	fsr1h,w,c
 14341  01203A  6EEA               	movwf	fsr0h,c
 14342  01203C  50EF               	movf	indf0,w,c
 14343  01203E  26DE               	addwf	postinc2,f,c
 14344  012040  0E00               	movlw	0
 14345  012042  22DE               	addwfc	postinc2,f,c
 14346  012044  22DE               	addwfc	postinc2,f,c
 14347  012046  22DE               	addwfc	postinc2,f,c
 14348                           
 14349                           ;stkvar	_b @ sp[(-13)+-4]
 14350  012048  0EF1               	movlw	241
 14351  01204A  24E1               	addwf	fsr1l,w,c
 14352  01204C  6ED9               	movwf	fsr2l,c
 14353  01204E  0EFF               	movlw	255
 14354  012050  20E2               	addwfc	fsr1h,w,c
 14355  012052  6EDA               	movwf	fsr2h,c
 14356  012054  50DF               	movf	indf2,w,c
 14357  012056  6E40               	movwf	(btemp+11)^0,c
 14358                           
 14359                           ;stkvar	_a @ sp[(-13)+-8]
 14360  012058  0EEB               	movlw	-21
 14361  01205A  50E3               	movf	plusw1,w,c
 14362  01205C  0240               	mulwf	(btemp+11)^0,c
 14363                           
 14364                           ;stkvar	_temp @ sp[(-13)+8]
 14365  01205E  0EFB               	movlw	-5
 14366  012060  006F FFCF FFE3     	movff	prodl,plusw1
 14367  012066  0EFC               	movlw	-4
 14368  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 14369                           
 14370                           ;stkvar	_grs @ sp[(-13)+4]
 14371  01206E  50E1               	movf	fsr1l,w,c
 14372  012070  0FF7               	addlw	-9
 14373  012072  6ED9               	movwf	fsr2l,c
 14374  012074  50E2               	movf	fsr1h,w,c
 14375  012076  6EDA               	movwf	fsr2h,c
 14376  012078  0EFF               	movlw	255
 14377  01207A  22DA               	addwfc	fsr2h,f,c
 14378                           
 14379                           ;stkvar	_temp @ sp[(-13)+8]
 14380  01207C  0EFB               	movlw	-5
 14381  01207E  50E3               	movf	plusw1,w,c
 14382  012080  26DE               	addwf	postinc2,f,c
 14383  012082  0E00               	movlw	0
 14384  012084  22DE               	addwfc	postinc2,f,c
 14385  012086  22DE               	addwfc	postinc2,f,c
 14386  012088  22DE               	addwfc	postinc2,f,c
 14387                           
 14388                           ;stkvar	_prod @ sp[(-13)+0]
 14389  01208A  50E1               	movf	fsr1l,w,c
 14390  01208C  0FF3               	addlw	-13
 14391  01208E  6ED9               	movwf	fsr2l,c
 14392  012090  50E2               	movf	fsr1h,w,c
 14393  012092  6EDA               	movwf	fsr2h,c
 14394  012094  0EFF               	movlw	255
 14395  012096  22DA               	addwfc	fsr2h,f,c
 14396                           
 14397                           ;stkvar	_temp @ sp[(-13)+8]
 14398  012098  0EFC               	movlw	252
 14399  01209A  24E1               	addwf	fsr1l,w,c
 14400  01209C  6EE9               	movwf	fsr0l,c
 14401  01209E  0EFF               	movlw	255
 14402  0120A0  20E2               	addwfc	fsr1h,w,c
 14403  0120A2  6EEA               	movwf	fsr0h,c
 14404  0120A4  50EF               	movf	indf0,w,c
 14405  0120A6  26DE               	addwf	postinc2,f,c
 14406  0120A8  0E00               	movlw	0
 14407  0120AA  22DE               	addwfc	postinc2,f,c
 14408  0120AC  22DE               	addwfc	postinc2,f,c
 14409  0120AE  22DE               	addwfc	postinc2,f,c
 14410                           
 14411                           ;stkvar	_grs @ sp[(-13)+4]
 14412  0120B0  50E1               	movf	fsr1l,w,c
 14413  0120B2  0FF7               	addlw	-9
 14414  0120B4  6ED9               	movwf	fsr2l,c
 14415  0120B6  50E2               	movf	fsr1h,w,c
 14416  0120B8  6EDA               	movwf	fsr2h,c
 14417  0120BA  0EFF               	movlw	255
 14418  0120BC  22DA               	addwfc	fsr2h,f,c
 14419  0120BE  0E08               	movlw	8
 14420  0120C0                     u5615:
 14421  0120C0  90D8               	bcf	status,0,c
 14422  0120C2  36DE               	rlcf	postinc2,f,c
 14423  0120C4  36DE               	rlcf	postinc2,f,c
 14424  0120C6  36DE               	rlcf	postinc2,f,c
 14425  0120C8  36DD               	rlcf	postdec2,f,c
 14426  0120CA  52DD               	movf	postdec2,f,c
 14427  0120CC  52DD               	movf	postdec2,f,c
 14428  0120CE  2EE8               	decfsz	wreg,f,c
 14429  0120D0  D7F7               	goto	u5615
 14430                           
 14431                           ;stkvar	_b @ sp[(-13)+-4]
 14432  0120D2  0EF0               	movlw	240
 14433  0120D4  24E1               	addwf	fsr1l,w,c
 14434  0120D6  6ED9               	movwf	fsr2l,c
 14435  0120D8  0EFF               	movlw	255
 14436  0120DA  20E2               	addwfc	fsr1h,w,c
 14437  0120DC  6EDA               	movwf	fsr2h,c
 14438  0120DE  50DF               	movf	indf2,w,c
 14439  0120E0  6E40               	movwf	(btemp+11)^0,c
 14440                           
 14441                           ;stkvar	_a @ sp[(-13)+-8]
 14442  0120E2  0EEB               	movlw	-21
 14443  0120E4  50E3               	movf	plusw1,w,c
 14444  0120E6  0240               	mulwf	(btemp+11)^0,c
 14445                           
 14446                           ;stkvar	_temp @ sp[(-13)+8]
 14447  0120E8  0EFB               	movlw	-5
 14448  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 14449  0120F0  0EFC               	movlw	-4
 14450  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 14451                           
 14452                           ;stkvar	_temp @ sp[(-13)+8]
 14453  0120F8  0EFB               	movlw	-5
 14454  0120FA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14455  012100  0EFC               	movlw	-4
 14456  012102  006F FF8C  F040    	movff	plusw1,btemp+11
 14457                           
 14458                           ;stkvar	_grs @ sp[(-13)+4]
 14459  012108  50E1               	movf	fsr1l,w,c
 14460  01210A  0FF7               	addlw	-9
 14461  01210C  6ED9               	movwf	fsr2l,c
 14462  01210E  50E2               	movf	fsr1h,w,c
 14463  012110  6EDA               	movwf	fsr2h,c
 14464  012112  0EFF               	movlw	255
 14465  012114  22DA               	addwfc	fsr2h,f,c
 14466  012116  503F               	movf	(btemp+10)^0,w,c
 14467  012118  26DE               	addwf	postinc2,f,c
 14468  01211A  5040               	movf	(btemp+11)^0,w,c
 14469  01211C  22DE               	addwfc	postinc2,f,c
 14470  01211E  0E00               	movlw	0
 14471  012120  22DE               	addwfc	postinc2,f,c
 14472  012122  22DE               	addwfc	postinc2,f,c
 14473                           
 14474                           ;stkvar	_b @ sp[(-13)+-4]
 14475  012124  0EEF               	movlw	-17
 14476  012126  006F FF8C  F040    	movff	plusw1,btemp+11
 14477                           
 14478                           ;stkvar	_a @ sp[(-13)+-8]
 14479  01212C  0EEC               	movlw	236
 14480  01212E  24E1               	addwf	fsr1l,w,c
 14481  012130  6ED9               	movwf	fsr2l,c
 14482  012132  0EFF               	movlw	255
 14483  012134  20E2               	addwfc	fsr1h,w,c
 14484  012136  6EDA               	movwf	fsr2h,c
 14485  012138  50DF               	movf	indf2,w,c
 14486  01213A  0240               	mulwf	(btemp+11)^0,c
 14487                           
 14488                           ;stkvar	_temp @ sp[(-13)+8]
 14489  01213C  0EFB               	movlw	-5
 14490  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 14491  012144  0EFC               	movlw	-4
 14492  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 14493                           
 14494                           ;stkvar	_temp @ sp[(-13)+8]
 14495  01214C  0EFB               	movlw	-5
 14496  01214E  006F FF8C  F03F    	movff	plusw1,btemp+10
 14497  012154  0EFC               	movlw	-4
 14498  012156  006F FF8C  F040    	movff	plusw1,btemp+11
 14499                           
 14500                           ;stkvar	_grs @ sp[(-13)+4]
 14501  01215C  50E1               	movf	fsr1l,w,c
 14502  01215E  0FF7               	addlw	-9
 14503  012160  6ED9               	movwf	fsr2l,c
 14504  012162  50E2               	movf	fsr1h,w,c
 14505  012164  6EDA               	movwf	fsr2h,c
 14506  012166  0EFF               	movlw	255
 14507  012168  22DA               	addwfc	fsr2h,f,c
 14508  01216A  503F               	movf	(btemp+10)^0,w,c
 14509  01216C  26DE               	addwf	postinc2,f,c
 14510  01216E  5040               	movf	(btemp+11)^0,w,c
 14511  012170  22DE               	addwfc	postinc2,f,c
 14512  012172  0E00               	movlw	0
 14513  012174  22DE               	addwfc	postinc2,f,c
 14514  012176  22DE               	addwfc	postinc2,f,c
 14515                           
 14516                           ;stkvar	_grs @ sp[(-13)+4]
 14517  012178  50E1               	movf	fsr1l,w,c
 14518  01217A  0FF7               	addlw	-9
 14519  01217C  6ED9               	movwf	fsr2l,c
 14520  01217E  50E2               	movf	fsr1h,w,c
 14521  012180  6EDA               	movwf	fsr2h,c
 14522  012182  0EFF               	movlw	255
 14523  012184  22DA               	addwfc	fsr2h,f,c
 14524  012186  0E08               	movlw	8
 14525  012188                     u5625:
 14526  012188  90D8               	bcf	status,0,c
 14527  01218A  36DE               	rlcf	postinc2,f,c
 14528  01218C  36DE               	rlcf	postinc2,f,c
 14529  01218E  36DE               	rlcf	postinc2,f,c
 14530  012190  36DD               	rlcf	postdec2,f,c
 14531  012192  52DD               	movf	postdec2,f,c
 14532  012194  52DD               	movf	postdec2,f,c
 14533  012196  2EE8               	decfsz	wreg,f,c
 14534  012198  D7F7               	goto	u5625
 14535                           
 14536                           ;stkvar	_b @ sp[(-13)+-4]
 14537  01219A  0EEF               	movlw	-17
 14538  01219C  006F FF8C  F040    	movff	plusw1,btemp+11
 14539                           
 14540                           ;stkvar	_a @ sp[(-13)+-8]
 14541  0121A2  0EEB               	movlw	-21
 14542  0121A4  50E3               	movf	plusw1,w,c
 14543  0121A6  0240               	mulwf	(btemp+11)^0,c
 14544                           
 14545                           ;stkvar	_temp @ sp[(-13)+8]
 14546  0121A8  0EFB               	movlw	-5
 14547  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 14548  0121B0  0EFC               	movlw	-4
 14549  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 14550                           
 14551                           ;stkvar	_temp @ sp[(-13)+8]
 14552  0121B8  0EFB               	movlw	-5
 14553  0121BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14554  0121C0  0EFC               	movlw	-4
 14555  0121C2  006F FF8C  F040    	movff	plusw1,btemp+11
 14556                           
 14557                           ;stkvar	_grs @ sp[(-13)+4]
 14558  0121C8  50E1               	movf	fsr1l,w,c
 14559  0121CA  0FF7               	addlw	-9
 14560  0121CC  6ED9               	movwf	fsr2l,c
 14561  0121CE  50E2               	movf	fsr1h,w,c
 14562  0121D0  6EDA               	movwf	fsr2h,c
 14563  0121D2  0EFF               	movlw	255
 14564  0121D4  22DA               	addwfc	fsr2h,f,c
 14565  0121D6  503F               	movf	(btemp+10)^0,w,c
 14566  0121D8  26DE               	addwf	postinc2,f,c
 14567  0121DA  5040               	movf	(btemp+11)^0,w,c
 14568  0121DC  22DE               	addwfc	postinc2,f,c
 14569  0121DE  0E00               	movlw	0
 14570  0121E0  22DE               	addwfc	postinc2,f,c
 14571  0121E2  22DE               	addwfc	postinc2,f,c
 14572                           
 14573                           ;stkvar	_b @ sp[(-13)+-4]
 14574  0121E4  0EF0               	movlw	240
 14575  0121E6  24E1               	addwf	fsr1l,w,c
 14576  0121E8  6ED9               	movwf	fsr2l,c
 14577  0121EA  0EFF               	movlw	255
 14578  0121EC  20E2               	addwfc	fsr1h,w,c
 14579  0121EE  6EDA               	movwf	fsr2h,c
 14580  0121F0  50DF               	movf	indf2,w,c
 14581  0121F2  6E40               	movwf	(btemp+11)^0,c
 14582                           
 14583                           ;stkvar	_a @ sp[(-13)+-8]
 14584  0121F4  0EED               	movlw	237
 14585  0121F6  24E1               	addwf	fsr1l,w,c
 14586  0121F8  6ED9               	movwf	fsr2l,c
 14587  0121FA  0EFF               	movlw	255
 14588  0121FC  20E2               	addwfc	fsr1h,w,c
 14589  0121FE  6EDA               	movwf	fsr2h,c
 14590  012200  50DF               	movf	indf2,w,c
 14591  012202  0240               	mulwf	(btemp+11)^0,c
 14592                           
 14593                           ;stkvar	_temp @ sp[(-13)+8]
 14594  012204  0EFB               	movlw	-5
 14595  012206  006F FFCF FFE3     	movff	prodl,plusw1
 14596  01220C  0EFC               	movlw	-4
 14597  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 14598                           
 14599                           ;stkvar	_temp @ sp[(-13)+8]
 14600  012214  0EFB               	movlw	-5
 14601  012216  006F FF8C  F03F    	movff	plusw1,btemp+10
 14602  01221C  0EFC               	movlw	-4
 14603  01221E  006F FF8C  F040    	movff	plusw1,btemp+11
 14604                           
 14605                           ;stkvar	_prod @ sp[(-13)+0]
 14606  012224  50E1               	movf	fsr1l,w,c
 14607  012226  0FF3               	addlw	-13
 14608  012228  6ED9               	movwf	fsr2l,c
 14609  01222A  50E2               	movf	fsr1h,w,c
 14610  01222C  6EDA               	movwf	fsr2h,c
 14611  01222E  0EFF               	movlw	255
 14612  012230  22DA               	addwfc	fsr2h,f,c
 14613  012232  503F               	movf	(btemp+10)^0,w,c
 14614  012234  26DE               	addwf	postinc2,f,c
 14615  012236  5040               	movf	(btemp+11)^0,w,c
 14616  012238  22DE               	addwfc	postinc2,f,c
 14617  01223A  0E00               	movlw	0
 14618  01223C  22DE               	addwfc	postinc2,f,c
 14619  01223E  22DE               	addwfc	postinc2,f,c
 14620                           
 14621                           ;stkvar	_b @ sp[(-13)+-4]
 14622  012240  0EF1               	movlw	241
 14623  012242  24E1               	addwf	fsr1l,w,c
 14624  012244  6ED9               	movwf	fsr2l,c
 14625  012246  0EFF               	movlw	255
 14626  012248  20E2               	addwfc	fsr1h,w,c
 14627  01224A  6EDA               	movwf	fsr2h,c
 14628  01224C  50DF               	movf	indf2,w,c
 14629  01224E  6E40               	movwf	(btemp+11)^0,c
 14630                           
 14631                           ;stkvar	_a @ sp[(-13)+-8]
 14632  012250  0EEC               	movlw	236
 14633  012252  24E1               	addwf	fsr1l,w,c
 14634  012254  6ED9               	movwf	fsr2l,c
 14635  012256  0EFF               	movlw	255
 14636  012258  20E2               	addwfc	fsr1h,w,c
 14637  01225A  6EDA               	movwf	fsr2h,c
 14638  01225C  50DF               	movf	indf2,w,c
 14639  01225E  0240               	mulwf	(btemp+11)^0,c
 14640                           
 14641                           ;stkvar	_temp @ sp[(-13)+8]
 14642  012260  0EFB               	movlw	-5
 14643  012262  006F FFCF FFE3     	movff	prodl,plusw1
 14644  012268  0EFC               	movlw	-4
 14645  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 14646                           
 14647                           ;stkvar	_temp @ sp[(-13)+8]
 14648  012270  0EFB               	movlw	-5
 14649  012272  006F FF8C  F03F    	movff	plusw1,btemp+10
 14650  012278  0EFC               	movlw	-4
 14651  01227A  006F FF8C  F040    	movff	plusw1,btemp+11
 14652                           
 14653                           ;stkvar	_prod @ sp[(-13)+0]
 14654  012280  50E1               	movf	fsr1l,w,c
 14655  012282  0FF3               	addlw	-13
 14656  012284  6ED9               	movwf	fsr2l,c
 14657  012286  50E2               	movf	fsr1h,w,c
 14658  012288  6EDA               	movwf	fsr2h,c
 14659  01228A  0EFF               	movlw	255
 14660  01228C  22DA               	addwfc	fsr2h,f,c
 14661  01228E  503F               	movf	(btemp+10)^0,w,c
 14662  012290  26DE               	addwf	postinc2,f,c
 14663  012292  5040               	movf	(btemp+11)^0,w,c
 14664  012294  22DE               	addwfc	postinc2,f,c
 14665  012296  0E00               	movlw	0
 14666  012298  22DE               	addwfc	postinc2,f,c
 14667  01229A  22DE               	addwfc	postinc2,f,c
 14668                           
 14669                           ;stkvar	_b @ sp[(-13)+-4]
 14670  01229C  0EF1               	movlw	241
 14671  01229E  24E1               	addwf	fsr1l,w,c
 14672  0122A0  6ED9               	movwf	fsr2l,c
 14673  0122A2  0EFF               	movlw	255
 14674  0122A4  20E2               	addwfc	fsr1h,w,c
 14675  0122A6  6EDA               	movwf	fsr2h,c
 14676  0122A8  50DF               	movf	indf2,w,c
 14677  0122AA  6E40               	movwf	(btemp+11)^0,c
 14678                           
 14679                           ;stkvar	_a @ sp[(-13)+-8]
 14680  0122AC  0EED               	movlw	237
 14681  0122AE  24E1               	addwf	fsr1l,w,c
 14682  0122B0  6ED9               	movwf	fsr2l,c
 14683  0122B2  0EFF               	movlw	255
 14684  0122B4  20E2               	addwfc	fsr1h,w,c
 14685  0122B6  6EDA               	movwf	fsr2h,c
 14686  0122B8  50DF               	movf	indf2,w,c
 14687  0122BA  0240               	mulwf	(btemp+11)^0,c
 14688                           
 14689                           ;stkvar	_temp @ sp[(-13)+8]
 14690  0122BC  0EFB               	movlw	-5
 14691  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 14692  0122C4  0EFC               	movlw	-4
 14693  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 14694                           
 14695                           ;stkvar	_temp @ sp[(-13)+8]
 14696  0122CC  0EFB               	movlw	-5
 14697  0122CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 14698  0122D4  0EFC               	movlw	-4
 14699  0122D6  006F FF8C  F040    	movff	plusw1,btemp+11
 14700  0122DC  503F               	movf	(btemp+10)^0,w,c
 14701  0122DE  6E39               	movwf	(btemp+4)^0,c
 14702  0122E0  5040               	movf	(btemp+11)^0,w,c
 14703  0122E2  6E3A               	movwf	(btemp+5)^0,c
 14704  0122E4  6A3B               	clrf	(btemp+6)^0,c
 14705  0122E6  6A3C               	clrf	(btemp+7)^0,c
 14706  0122E8  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 14707  0122EE  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 14708  0122F4  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 14709  0122FA  6A39               	clrf	(btemp+4)^0,c
 14710                           
 14711                           ;stkvar	_prod @ sp[(-13)+0]
 14712  0122FC  50E1               	movf	fsr1l,w,c
 14713  0122FE  0FF3               	addlw	-13
 14714  012300  6ED9               	movwf	fsr2l,c
 14715  012302  50E2               	movf	fsr1h,w,c
 14716  012304  6EDA               	movwf	fsr2h,c
 14717  012306  0EFF               	movlw	255
 14718  012308  22DA               	addwfc	fsr2h,f,c
 14719  01230A  5039               	movf	(btemp+4)^0,w,c
 14720  01230C  26DE               	addwf	postinc2,f,c
 14721  01230E  503A               	movf	(btemp+5)^0,w,c
 14722  012310  22DE               	addwfc	postinc2,f,c
 14723  012312  503B               	movf	(btemp+6)^0,w,c
 14724  012314  22DE               	addwfc	postinc2,f,c
 14725  012316  503C               	movf	(btemp+7)^0,w,c
 14726  012318  22DE               	addwfc	postinc2,f,c
 14727                           
 14728                           ;stkvar	_prod @ sp[(-13)+0]
 14729  01231A  50E1               	movf	fsr1l,w,c
 14730  01231C  0FF3               	addlw	-13
 14731  01231E  6ED9               	movwf	fsr2l,c
 14732  012320  50E2               	movf	fsr1h,w,c
 14733  012322  6EDA               	movwf	fsr2h,c
 14734  012324  0EFF               	movlw	255
 14735  012326  22DA               	addwfc	fsr2h,f,c
 14736                           
 14737                           ;stkvar	_grs @ sp[(-13)+4]
 14738  012328  0EFA               	movlw	250
 14739  01232A  24E1               	addwf	fsr1l,w,c
 14740  01232C  6EE9               	movwf	fsr0l,c
 14741  01232E  0EFF               	movlw	255
 14742  012330  20E2               	addwfc	fsr1h,w,c
 14743  012332  6EEA               	movwf	fsr0h,c
 14744  012334  50EF               	movf	indf0,w,c
 14745  012336  26DE               	addwf	postinc2,f,c
 14746  012338  0E00               	movlw	0
 14747  01233A  22DE               	addwfc	postinc2,f,c
 14748  01233C  22DE               	addwfc	postinc2,f,c
 14749  01233E  22DE               	addwfc	postinc2,f,c
 14750                           
 14751                           ;stkvar	_grs @ sp[(-13)+4]
 14752  012340  50E1               	movf	fsr1l,w,c
 14753  012342  0FF7               	addlw	-9
 14754  012344  6ED9               	movwf	fsr2l,c
 14755  012346  50E2               	movf	fsr1h,w,c
 14756  012348  6EDA               	movwf	fsr2h,c
 14757  01234A  0EFF               	movlw	255
 14758  01234C  22DA               	addwfc	fsr2h,f,c
 14759  01234E  0E08               	movlw	8
 14760  012350                     u5635:
 14761  012350  90D8               	bcf	status,0,c
 14762  012352  36DE               	rlcf	postinc2,f,c
 14763  012354  36DE               	rlcf	postinc2,f,c
 14764  012356  36DE               	rlcf	postinc2,f,c
 14765  012358  36DD               	rlcf	postdec2,f,c
 14766  01235A  52DD               	movf	postdec2,f,c
 14767  01235C  52DD               	movf	postdec2,f,c
 14768  01235E  2EE8               	decfsz	wreg,f,c
 14769  012360  D7F7               	goto	u5635
 14770  012362  0E82               	movlw	130
 14771  012364  6E3F               	movwf	(btemp+10)^0,c
 14772  012366  0EFF               	movlw	255
 14773  012368  6E40               	movwf	(btemp+11)^0,c
 14774                           
 14775                           ;stkvar	_bexp @ sp[(-13)+10]
 14776  01236A  0EFD               	movlw	-3
 14777  01236C  50E3               	movf	plusw1,w,c
 14778  01236E  6E3D               	movwf	(btemp+8)^0,c
 14779  012370  6A3E               	clrf	(btemp+9)^0,c
 14780                           
 14781                           ;stkvar	_aexp @ sp[(-13)+11]
 14782  012372  0EFE               	movlw	-2
 14783  012374  50E3               	movf	plusw1,w,c
 14784  012376  263D               	addwf	(btemp+8)^0,f,c
 14785  012378  0E00               	movlw	0
 14786  01237A  223E               	addwfc	(btemp+9)^0,f,c
 14787  01237C  503F               	movf	(btemp+10)^0,w,c
 14788  01237E  263D               	addwf	(btemp+8)^0,f,c
 14789  012380  5040               	movf	(btemp+11)^0,w,c
 14790  012382  223E               	addwfc	(btemp+9)^0,f,c
 14791                           
 14792                           ;stkvar	_temp @ sp[(-13)+8]
 14793  012384  0EFB               	movlw	-5
 14794  012386  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14795  01238C  0EFC               	movlw	-4
 14796  01238E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14797  012394  D021               	goto	l6609
 14798  012396                     l6599:
 14799                           
 14800                           ;stkvar	_prod @ sp[(-13)+0]
 14801  012396  90D8               	bcf	status,0,c
 14802  012398  0EF3               	movlw	-13
 14803  01239A  36E3               	rlcf	plusw1,f,c
 14804  01239C  0EF4               	movlw	-12
 14805  01239E  36E3               	rlcf	plusw1,f,c
 14806  0123A0  0EF5               	movlw	-11
 14807  0123A2  36E3               	rlcf	plusw1,f,c
 14808  0123A4  0EF6               	movlw	-10
 14809  0123A6  36E3               	rlcf	plusw1,f,c
 14810                           
 14811                           ;stkvar	_grs @ sp[(-13)+4]
 14812  0123A8  0EFA               	movlw	-6
 14813  0123AA  AEE3               	btfss	plusw1,7,c
 14814  0123AC  D002               	goto	l6605
 14815                           
 14816                           ;stkvar	_prod @ sp[(-13)+0]
 14817  0123AE  0EF3               	movlw	-13
 14818  0123B0  80E3               	bsf	plusw1,0,c
 14819  0123B2                     l6605:
 14820                           
 14821                           ;stkvar	_grs @ sp[(-13)+4]
 14822  0123B2  90D8               	bcf	status,0,c
 14823  0123B4  0EF7               	movlw	-9
 14824  0123B6  36E3               	rlcf	plusw1,f,c
 14825  0123B8  0EF8               	movlw	-8
 14826  0123BA  36E3               	rlcf	plusw1,f,c
 14827  0123BC  0EF9               	movlw	-7
 14828  0123BE  36E3               	rlcf	plusw1,f,c
 14829  0123C0  0EFA               	movlw	-6
 14830  0123C2  36E3               	rlcf	plusw1,f,c
 14831                           
 14832                           ;stkvar	_temp @ sp[(-13)+8]
 14833  0123C4  50E1               	movf	fsr1l,w,c
 14834  0123C6  0FFB               	addlw	-5
 14835  0123C8  6ED9               	movwf	fsr2l,c
 14836  0123CA  50E2               	movf	fsr1h,w,c
 14837  0123CC  6EDA               	movwf	fsr2h,c
 14838  0123CE  0EFF               	movlw	255
 14839  0123D0  22DA               	addwfc	fsr2h,f,c
 14840  0123D2  06DE               	decf	postinc2,f,c
 14841  0123D4  0E00               	movlw	0
 14842  0123D6  5ADD               	subwfb	postdec2,f,c
 14843  0123D8                     l6609:
 14844                           
 14845                           ;stkvar	_prod @ sp[(-13)+0]
 14846  0123D8  0EF5               	movlw	-11
 14847  0123DA  AEE3               	btfss	plusw1,7,c
 14848  0123DC  D7DC               	goto	l6599
 14849                           
 14850                           ;stkvar	_aexp @ sp[(-13)+11]
 14851  0123DE  0EFE               	movlw	-2
 14852  0123E0  6AE3               	clrf	plusw1,c
 14853                           
 14854                           ;stkvar	_grs @ sp[(-13)+4]
 14855  0123E2  0EFA               	movlw	-6
 14856  0123E4  AEE3               	btfss	plusw1,7,c
 14857  0123E6  D020               	goto	l6623
 14858                           
 14859                           ;stkvar	_grs @ sp[(-13)+4]
 14860  0123E8  50E1               	movf	fsr1l,w,c
 14861  0123EA  0FF7               	addlw	-9
 14862  0123EC  6ED9               	movwf	fsr2l,c
 14863  0123EE  50E2               	movf	fsr1h,w,c
 14864  0123F0  6EDA               	movwf	fsr2h,c
 14865  0123F2  0EFF               	movlw	255
 14866  0123F4  22DA               	addwfc	fsr2h,f,c
 14867  0123F6  0EFF               	movlw	255
 14868  0123F8  14DE               	andwf	postinc2,w,c
 14869  0123FA  6E3D               	movwf	(btemp+8)^0,c
 14870  0123FC  0EFF               	movlw	255
 14871  0123FE  14DE               	andwf	postinc2,w,c
 14872  012400  6E3E               	movwf	(btemp+9)^0,c
 14873  012402  0EFF               	movlw	255
 14874  012404  14DE               	andwf	postinc2,w,c
 14875  012406  6E3F               	movwf	(btemp+10)^0,c
 14876  012408  0E7F               	movlw	127
 14877  01240A  14DE               	andwf	postinc2,w,c
 14878  01240C  6E40               	movwf	(btemp+11)^0,c
 14879  01240E  503D               	movf	(btemp+8)^0,w,c
 14880  012410  103E               	iorwf	(btemp+9)^0,w,c
 14881  012412  103F               	iorwf	(btemp+10)^0,w,c
 14882  012414  1040               	iorwf	(btemp+11)^0,w,c
 14883  012416  B4D8               	btfsc	status,2,c
 14884  012418  D004               	goto	l6619
 14885  01241A                     u5670:
 14886                           
 14887                           ;stkvar	_aexp @ sp[(-13)+11]
 14888  01241A  0EFE               	movlw	-2
 14889  01241C  6AE3               	clrf	plusw1,c
 14890  01241E  2AE3               	incf	plusw1,f,c
 14891  012420  D003               	goto	l6623
 14892  012422                     l6619:
 14893                           
 14894                           ;stkvar	_prod @ sp[(-13)+0]
 14895  012422  0EF3               	movlw	-13
 14896  012424  B0E3               	btfsc	plusw1,0,c
 14897  012426  D7F9               	goto	u5670
 14898  012428                     l6623:
 14899                           
 14900                           ;stkvar	_aexp @ sp[(-13)+11]
 14901  012428  0EFE               	movlw	-2
 14902  01242A  50E3               	movf	plusw1,w,c
 14903  01242C  B4D8               	btfsc	status,2,c
 14904  01242E  D036               	goto	l6633
 14905                           
 14906                           ;stkvar	_prod @ sp[(-13)+0]
 14907  012430  50E1               	movf	fsr1l,w,c
 14908  012432  0FF3               	addlw	-13
 14909  012434  6ED9               	movwf	fsr2l,c
 14910  012436  50E2               	movf	fsr1h,w,c
 14911  012438  6EDA               	movwf	fsr2h,c
 14912  01243A  0EFF               	movlw	255
 14913  01243C  22DA               	addwfc	fsr2h,f,c
 14914  01243E  2ADE               	incf	postinc2,f,c
 14915  012440  0E00               	movlw	0
 14916  012442  22DE               	addwfc	postinc2,f,c
 14917  012444  22DE               	addwfc	postinc2,f,c
 14918  012446  22DE               	addwfc	postinc2,f,c
 14919                           
 14920                           ;stkvar	_prod @ sp[(-13)+0]
 14921  012448  0EF6               	movlw	-10
 14922  01244A  A0E3               	btfss	plusw1,0,c
 14923  01244C  D027               	goto	l6633
 14924  01244E  0E01               	movlw	1
 14925  012450  6E40               	movwf	(btemp+11)^0,c
 14926                           
 14927                           ;stkvar	_prod @ sp[(-13)+0]
 14928  012452  50E1               	movf	fsr1l,w,c
 14929  012454  0FF3               	addlw	-13
 14930  012456  6ED9               	movwf	fsr2l,c
 14931  012458  50E2               	movf	fsr1h,w,c
 14932  01245A  6EDA               	movwf	fsr2h,c
 14933  01245C  0EFF               	movlw	255
 14934  01245E  22DA               	addwfc	fsr2h,f,c
 14935  012460  2840               	incf	(btemp+11)^0,w,c
 14936  012462  52DE               	movf	postinc2,f,c
 14937  012464  D008               	goto	u5710
 14938  012466                     u5715:
 14939  012466  52DE               	movf	postinc2,f,c
 14940  012468  90D8               	bcf	status,0,c
 14941  01246A  BEDC               	btfsc	preinc2,7,c
 14942  01246C  80D8               	bsf	status,0,c
 14943  01246E  32DD               	rrcf	postdec2,f,c
 14944  012470  32DD               	rrcf	postdec2,f,c
 14945  012472  32DD               	rrcf	postdec2,f,c
 14946  012474  32DE               	rrcf	postinc2,f,c
 14947  012476                     u5710:
 14948  012476  2EE8               	decfsz	wreg,f,c
 14949  012478  D7F6               	goto	u5715
 14950                           
 14951                           ;stkvar	_temp @ sp[(-13)+8]
 14952  01247A  0EFB               	movlw	-5
 14953  01247C  50E3               	movf	plusw1,w,c
 14954  01247E  0F01               	addlw	1
 14955  012480  6E35               	movwf	btemp^0,c
 14956  012482  0EFB               	movlw	-5
 14957  012484  0060  F0D7  FFE3   	movff	btemp,plusw1
 14958  01248A  6A35               	clrf	btemp^0,c
 14959  01248C  0EFC               	movlw	-4
 14960  01248E  50E3               	movf	plusw1,w,c
 14961  012490  2035               	addwfc	btemp^0,w,c
 14962  012492  6E35               	movwf	btemp^0,c
 14963  012494  0EFC               	movlw	-4
 14964  012496  0060  F0D7  FFE3   	movff	btemp,plusw1
 14965  01249C                     l6633:
 14966                           
 14967                           ;stkvar	_temp @ sp[(-13)+8]
 14968  01249C  0EFC               	movlw	-4
 14969  01249E  BEE3               	btfsc	plusw1,7,c
 14970  0124A0  D020               	goto	l6637
 14971  0124A2  0EFC               	movlw	-4
 14972  0124A4  50E3               	movf	plusw1,w,c
 14973  0124A6  E104               	bnz	u5720
 14974  0124A8  0EFB               	movlw	-5
 14975  0124AA  28E3               	incf	plusw1,w,c
 14976  0124AC  A0D8               	btfss	status,0,c
 14977  0124AE  D019               	goto	l6637
 14978  0124B0                     u5720:
 14979  0124B0  0E00               	movlw	0
 14980  0124B2  6E3D               	movwf	(btemp+8)^0,c
 14981  0124B4  0E00               	movlw	0
 14982  0124B6  6E3E               	movwf	(btemp+9)^0,c
 14983  0124B8  0E80               	movlw	128
 14984  0124BA  6E3F               	movwf	(btemp+10)^0,c
 14985  0124BC  0E7F               	movlw	127
 14986  0124BE  6E40               	movwf	(btemp+11)^0,c
 14987                           
 14988                           ;stkvar	_prod @ sp[(-13)+0]
 14989  0124C0  0EF3               	movlw	-13
 14990  0124C2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14991  0124C8  0EF4               	movlw	-12
 14992  0124CA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14993  0124D0  0EF5               	movlw	-11
 14994  0124D2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14995  0124D8  0EF6               	movlw	-10
 14996  0124DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 14997  0124E0  D044               	goto	l6653
 14998  0124E2                     l6637:
 14999                           
 15000                           ;stkvar	_temp @ sp[(-13)+8]
 15001  0124E2  0EFC               	movlw	-4
 15002  0124E4  BEE3               	btfsc	plusw1,7,c
 15003  0124E6  D007               	goto	u5730
 15004  0124E8  0EFC               	movlw	-4
 15005  0124EA  50E3               	movf	plusw1,w,c
 15006  0124EC  E10F               	bnz	l6643
 15007  0124EE  0EFB               	movlw	-5
 15008  0124F0  04E3               	decf	plusw1,w,c
 15009  0124F2  B0D8               	btfsc	status,0,c
 15010  0124F4  D00B               	goto	l6643
 15011  0124F6                     u5730:
 15012                           
 15013                           ;stkvar	_prod @ sp[(-13)+0]
 15014  0124F6  0EF3               	movlw	-13
 15015  0124F8  6AE3               	clrf	plusw1,c
 15016  0124FA  0EF4               	movlw	-12
 15017  0124FC  6AE3               	clrf	plusw1,c
 15018  0124FE  0EF5               	movlw	-11
 15019  012500  6AE3               	clrf	plusw1,c
 15020  012502  0EF6               	movlw	-10
 15021  012504  6AE3               	clrf	plusw1,c
 15022                           
 15023                           ;stkvar	_sign @ sp[(-13)+12]
 15024  012506  0EFF               	movlw	-1
 15025  012508  6AE3               	clrf	plusw1,c
 15026  01250A  D02F               	goto	l6653
 15027  01250C                     l6643:
 15028                           
 15029                           ;stkvar	_temp @ sp[(-13)+8]
 15030                           ;stkvar	_bexp @ sp[(-13)+10]
 15031  01250C  0EFB               	movlw	-5
 15032  01250E  006F FF8C  F035    	movff	plusw1,btemp
 15033  012514  0EFD               	movlw	-3
 15034  012516  0060  F0D7  FFE3   	movff	btemp,plusw1
 15035                           
 15036                           ;stkvar	_prod @ sp[(-13)+0]
 15037  01251C  50E1               	movf	fsr1l,w,c
 15038  01251E  0FF3               	addlw	-13
 15039  012520  6ED9               	movwf	fsr2l,c
 15040  012522  50E2               	movf	fsr1h,w,c
 15041  012524  6EDA               	movwf	fsr2h,c
 15042  012526  0EFF               	movlw	255
 15043  012528  22DA               	addwfc	fsr2h,f,c
 15044  01252A  0EFF               	movlw	255
 15045  01252C  16DE               	andwf	postinc2,f,c
 15046  01252E  0EFF               	movlw	255
 15047  012530  16DE               	andwf	postinc2,f,c
 15048  012532  0E7F               	movlw	127
 15049  012534  16DE               	andwf	postinc2,f,c
 15050  012536  0E00               	movlw	0
 15051  012538  16DE               	andwf	postinc2,f,c
 15052                           
 15053                           ;stkvar	_bexp @ sp[(-13)+10]
 15054  01253A  0EFD               	movlw	-3
 15055  01253C  A0E3               	btfss	plusw1,0,c
 15056  01253E  D008               	goto	l6651
 15057                           
 15058                           ;stkvar	_prod @ sp[(-13)+0]
 15059  012540  0EF5               	movlw	245
 15060  012542  24E1               	addwf	fsr1l,w,c
 15061  012544  6ED9               	movwf	fsr2l,c
 15062  012546  0EFF               	movlw	255
 15063  012548  20E2               	addwfc	fsr1h,w,c
 15064  01254A  6EDA               	movwf	fsr2h,c
 15065  01254C  0E00               	movlw	0
 15066  01254E  8EDB               	bsf	plusw2,7,c
 15067  012550                     l6651:
 15068                           
 15069                           ;stkvar	_prod @ sp[(-13)+0]
 15070  012550  0EF6               	movlw	246
 15071  012552  24E1               	addwf	fsr1l,w,c
 15072  012554  6ED9               	movwf	fsr2l,c
 15073  012556  0EFF               	movlw	255
 15074  012558  20E2               	addwfc	fsr1h,w,c
 15075  01255A  6EDA               	movwf	fsr2h,c
 15076                           
 15077                           ;stkvar	_bexp @ sp[(-13)+10]
 15078  01255C  0EFD               	movlw	-3
 15079  01255E  006F FF8C  F040    	movff	plusw1,btemp+11
 15080  012564  90D8               	bcf	status,0,c
 15081  012566  3040               	rrcf	(btemp+11)^0,w,c
 15082  012568  6EDF               	movwf	indf2,c
 15083  01256A                     l6653:
 15084                           
 15085                           ;stkvar	_sign @ sp[(-13)+12]
 15086  01256A  0EFF               	movlw	-1
 15087  01256C  006F FF8C  F040    	movff	plusw1,btemp+11
 15088                           
 15089                           ;stkvar	_prod @ sp[(-13)+0]
 15090  012572  0EF6               	movlw	246
 15091  012574  24E1               	addwf	fsr1l,w,c
 15092  012576  6ED9               	movwf	fsr2l,c
 15093  012578  0EFF               	movlw	255
 15094  01257A  20E2               	addwfc	fsr1h,w,c
 15095  01257C  6EDA               	movwf	fsr2h,c
 15096  01257E  5040               	movf	(btemp+11)^0,w,c
 15097  012580  12DF               	iorwf	indf2,f,c
 15098                           
 15099                           ;stkvar	_prod @ sp[(-13)+0]
 15100  012582  0EF3               	movlw	-13
 15101  012584  006F FF8C  F035    	movff	plusw1,btemp
 15102  01258A  0EF4               	movlw	-12
 15103  01258C  006F FF8C  F036    	movff	plusw1,btemp+1
 15104  012592  0EF5               	movlw	-11
 15105  012594  006F FF8C  F037    	movff	plusw1,btemp+2
 15106  01259A  0EF6               	movlw	-10
 15107  01259C  006F FF8C  F038    	movff	plusw1,btemp+3
 15108  0125A2                     l2581:
 15109                           
 15110                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15111  0125A2  0EEB               	movlw	235
 15112  0125A4  26E1               	addwf	fsr1l,f,c
 15113  0125A6  0EFF               	movlw	255
 15114  0125A8  22E2               	addwfc	fsr1h,f,c
 15115  0125AA  0012               	return		;funcret
 15116  0125AC                     __end_of___flmul:
 15117                           	opt callstack 0
 15118                           
 15119 ;; *************** function ___flge *****************
 15120 ;; Defined at:
 15121 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15122 ;; Parameters:    Size  Location     Type
 15123 ;;  ff1             4  [STACK] unsigned char 
 15124 ;;  ff2             4  [STACK] unsigned char 
 15125 ;; Auto vars:     Size  Location     Type
 15126 ;;		None
 15127 ;; Return value:  Size  Location     Type
 15128 ;;		None               void
 15129 ;; Registers used:
 15130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15131 ;; Tracked objects:
 15132 ;;		On entry : 0/4
 15133 ;;		On exit  : 0/0
 15134 ;;		Unchanged: 0/0
 15135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15140 ;;Total ram usage:        0 bytes
 15141 ;; Hardware stack levels used:    1
 15142 ;; Hardware stack levels required when called:    6
 15143 ;; This function calls:
 15144 ;;		Nothing
 15145 ;; This function is called by:
 15146 ;;		_efgtoa
 15147 ;; This function uses a reentrant model
 15148 ;;
 15149                           
 15150                           	psect	text50
 15151  015C90                     __ptext50:
 15152                           	opt callstack 0
 15153  015C90                     ___flge:
 15154                           	opt callstack 17
 15155                           
 15156                           ;stkvar	_ff1 @ sp[(0)+-4]
 15157                           
 15158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15159                           ;incstack = 0
 15160  015C90  50E1               	movf	fsr1l,w,c
 15161  015C92  0FFC               	addlw	-4
 15162  015C94  6ED9               	movwf	fsr2l,c
 15163  015C96  50E2               	movf	fsr1h,w,c
 15164  015C98  6EDA               	movwf	fsr2h,c
 15165  015C9A  0EFF               	movlw	255
 15166  015C9C  22DA               	addwfc	fsr2h,f,c
 15167  015C9E  0E00               	movlw	0
 15168  015CA0  14DE               	andwf	postinc2,w,c
 15169  015CA2  6E3D               	movwf	(btemp+8)^0,c
 15170  015CA4  0E00               	movlw	0
 15171  015CA6  14DE               	andwf	postinc2,w,c
 15172  015CA8  6E3E               	movwf	(btemp+9)^0,c
 15173  015CAA  0E80               	movlw	128
 15174  015CAC  14DE               	andwf	postinc2,w,c
 15175  015CAE  6E3F               	movwf	(btemp+10)^0,c
 15176  015CB0  0E7F               	movlw	127
 15177  015CB2  14DE               	andwf	postinc2,w,c
 15178  015CB4  6E40               	movwf	(btemp+11)^0,c
 15179  015CB6  503D               	movf	(btemp+8)^0,w,c
 15180  015CB8  103E               	iorwf	(btemp+9)^0,w,c
 15181  015CBA  103F               	iorwf	(btemp+10)^0,w,c
 15182  015CBC  1040               	iorwf	(btemp+11)^0,w,c
 15183  015CBE  A4D8               	btfss	status,2,c
 15184  015CC0  D008               	goto	l6769
 15185                           
 15186                           ;stkvar	_ff1 @ sp[(0)+-4]
 15187  015CC2  0EFC               	movlw	-4
 15188  015CC4  6AE3               	clrf	plusw1,c
 15189  015CC6  0EFD               	movlw	-3
 15190  015CC8  6AE3               	clrf	plusw1,c
 15191  015CCA  0EFE               	movlw	-2
 15192  015CCC  6AE3               	clrf	plusw1,c
 15193  015CCE  0EFF               	movlw	-1
 15194  015CD0  6AE3               	clrf	plusw1,c
 15195  015CD2                     l6769:
 15196                           
 15197                           ;stkvar	_ff2 @ sp[(0)+-8]
 15198  015CD2  50E1               	movf	fsr1l,w,c
 15199  015CD4  0FF8               	addlw	-8
 15200  015CD6  6ED9               	movwf	fsr2l,c
 15201  015CD8  50E2               	movf	fsr1h,w,c
 15202  015CDA  6EDA               	movwf	fsr2h,c
 15203  015CDC  0EFF               	movlw	255
 15204  015CDE  22DA               	addwfc	fsr2h,f,c
 15205  015CE0  0E00               	movlw	0
 15206  015CE2  14DE               	andwf	postinc2,w,c
 15207  015CE4  6E3D               	movwf	(btemp+8)^0,c
 15208  015CE6  0E00               	movlw	0
 15209  015CE8  14DE               	andwf	postinc2,w,c
 15210  015CEA  6E3E               	movwf	(btemp+9)^0,c
 15211  015CEC  0E80               	movlw	128
 15212  015CEE  14DE               	andwf	postinc2,w,c
 15213  015CF0  6E3F               	movwf	(btemp+10)^0,c
 15214  015CF2  0E7F               	movlw	127
 15215  015CF4  14DE               	andwf	postinc2,w,c
 15216  015CF6  6E40               	movwf	(btemp+11)^0,c
 15217  015CF8  503D               	movf	(btemp+8)^0,w,c
 15218  015CFA  103E               	iorwf	(btemp+9)^0,w,c
 15219  015CFC  103F               	iorwf	(btemp+10)^0,w,c
 15220  015CFE  1040               	iorwf	(btemp+11)^0,w,c
 15221  015D00  A4D8               	btfss	status,2,c
 15222  015D02  D008               	goto	l2226
 15223                           
 15224                           ;stkvar	_ff2 @ sp[(0)+-8]
 15225  015D04  0EF8               	movlw	-8
 15226  015D06  6AE3               	clrf	plusw1,c
 15227  015D08  0EF9               	movlw	-7
 15228  015D0A  6AE3               	clrf	plusw1,c
 15229  015D0C  0EFA               	movlw	-6
 15230  015D0E  6AE3               	clrf	plusw1,c
 15231  015D10  0EFB               	movlw	-5
 15232  015D12  6AE3               	clrf	plusw1,c
 15233  015D14                     l2226:
 15234                           
 15235                           ;stkvar	_ff1 @ sp[(0)+-4]
 15236  015D14  0EFF               	movlw	-1
 15237  015D16  AEE3               	btfss	plusw1,7,c
 15238  015D18  D024               	goto	l6775
 15239                           
 15240                           ;stkvar	_ff1 @ sp[(0)+-4]
 15241  015D1A  0E00               	movlw	0
 15242  015D1C  6E3D               	movwf	(btemp+8)^0,c
 15243  015D1E  0E00               	movlw	0
 15244  015D20  6E3E               	movwf	(btemp+9)^0,c
 15245  015D22  0E00               	movlw	0
 15246  015D24  6E3F               	movwf	(btemp+10)^0,c
 15247  015D26  0E80               	movlw	128
 15248  015D28  6E40               	movwf	(btemp+11)^0,c
 15249  015D2A  0EFC               	movlw	-4
 15250  015D2C  50E3               	movf	plusw1,w,c
 15251  015D2E  5E3D               	subwf	(btemp+8)^0,f,c
 15252  015D30  0EFD               	movlw	-3
 15253  015D32  50E3               	movf	plusw1,w,c
 15254  015D34  5A3E               	subwfb	(btemp+9)^0,f,c
 15255  015D36  0EFE               	movlw	-2
 15256  015D38  50E3               	movf	plusw1,w,c
 15257  015D3A  5A3F               	subwfb	(btemp+10)^0,f,c
 15258  015D3C  0EFF               	movlw	-1
 15259  015D3E  50E3               	movf	plusw1,w,c
 15260  015D40  5A40               	subwfb	(btemp+11)^0,f,c
 15261                           
 15262                           ;stkvar	_ff1 @ sp[(0)+-4]
 15263  015D42  0EFC               	movlw	-4
 15264  015D44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15265  015D4A  0EFD               	movlw	-3
 15266  015D4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15267  015D52  0EFE               	movlw	-2
 15268  015D54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15269  015D5A  0EFF               	movlw	-1
 15270  015D5C  0060  F103  FFE3   	movff	btemp+11,plusw1
 15271  015D62                     l6775:
 15272                           
 15273                           ;stkvar	_ff2 @ sp[(0)+-8]
 15274  015D62  0EFB               	movlw	-5
 15275  015D64  AEE3               	btfss	plusw1,7,c
 15276  015D66  D024               	goto	l6779
 15277                           
 15278                           ;stkvar	_ff2 @ sp[(0)+-8]
 15279  015D68  0E00               	movlw	0
 15280  015D6A  6E3D               	movwf	(btemp+8)^0,c
 15281  015D6C  0E00               	movlw	0
 15282  015D6E  6E3E               	movwf	(btemp+9)^0,c
 15283  015D70  0E00               	movlw	0
 15284  015D72  6E3F               	movwf	(btemp+10)^0,c
 15285  015D74  0E80               	movlw	128
 15286  015D76  6E40               	movwf	(btemp+11)^0,c
 15287  015D78  0EF8               	movlw	-8
 15288  015D7A  50E3               	movf	plusw1,w,c
 15289  015D7C  5E3D               	subwf	(btemp+8)^0,f,c
 15290  015D7E  0EF9               	movlw	-7
 15291  015D80  50E3               	movf	plusw1,w,c
 15292  015D82  5A3E               	subwfb	(btemp+9)^0,f,c
 15293  015D84  0EFA               	movlw	-6
 15294  015D86  50E3               	movf	plusw1,w,c
 15295  015D88  5A3F               	subwfb	(btemp+10)^0,f,c
 15296  015D8A  0EFB               	movlw	-5
 15297  015D8C  50E3               	movf	plusw1,w,c
 15298  015D8E  5A40               	subwfb	(btemp+11)^0,f,c
 15299                           
 15300                           ;stkvar	_ff2 @ sp[(0)+-8]
 15301  015D90  0EF8               	movlw	-8
 15302  015D92  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15303  015D98  0EF9               	movlw	-7
 15304  015D9A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15305  015DA0  0EFA               	movlw	-6
 15306  015DA2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15307  015DA8  0EFB               	movlw	-5
 15308  015DAA  0060  F103  FFE3   	movff	btemp+11,plusw1
 15309  015DB0                     l6779:
 15310                           
 15311                           ;stkvar	_ff1 @ sp[(0)+-4]
 15312  015DB0  0EFF               	movlw	-1
 15313  015DB2  7EE3               	btg	plusw1,7,c
 15314                           
 15315                           ;stkvar	_ff2 @ sp[(0)+-8]
 15316  015DB4  0EFB               	movlw	-5
 15317  015DB6  7EE3               	btg	plusw1,7,c
 15318                           
 15319                           ;stkvar	_ff2 @ sp[(0)+-8]
 15320                           ;stkvar	_ff1 @ sp[(0)+-4]
 15321  015DB8  50E1               	movf	fsr1l,w,c
 15322  015DBA  0FFC               	addlw	-4
 15323  015DBC  6ED9               	movwf	fsr2l,c
 15324  015DBE  50E2               	movf	fsr1h,w,c
 15325  015DC0  6EDA               	movwf	fsr2h,c
 15326  015DC2  0EFF               	movlw	255
 15327  015DC4  22DA               	addwfc	fsr2h,f,c
 15328  015DC6  0EF8               	movlw	-8
 15329  015DC8  50E3               	movf	plusw1,w,c
 15330  015DCA  5CDE               	subwf	postinc2,w,c
 15331  015DCC  0EF9               	movlw	-7
 15332  015DCE  50E3               	movf	plusw1,w,c
 15333  015DD0  58DE               	subwfb	postinc2,w,c
 15334  015DD2  0EFA               	movlw	-6
 15335  015DD4  50E3               	movf	plusw1,w,c
 15336  015DD6  58DE               	subwfb	postinc2,w,c
 15337  015DD8  0EFB               	movlw	-5
 15338  015DDA  50E3               	movf	plusw1,w,c
 15339  015DDC  58DE               	subwfb	postinc2,w,c
 15340  015DDE  B0D8               	btfsc	status,0,c
 15341  015DE0  D002               	goto	l6787
 15342  015DE2  9035               	bcf	btemp& (0+255),0,c
 15343  015DE4  D001               	goto	l2233
 15344  015DE6                     l6787:
 15345  015DE6  8035               	bsf	btemp& (0+255),0,c
 15346  015DE8                     l2233:
 15347                           
 15348                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15349  015DE8  0EF8               	movlw	248
 15350  015DEA  26E1               	addwf	fsr1l,f,c
 15351  015DEC  0EFF               	movlw	255
 15352  015DEE  22E2               	addwfc	fsr1h,f,c
 15353  015DF0  0012               	return		;funcret
 15354  015DF2                     __end_of___flge:
 15355                           	opt callstack 0
 15356                           
 15357 ;; *************** function ___fleq *****************
 15358 ;; Defined at:
 15359 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;  ff1             4  [STACK] unsigned char 
 15362 ;;  ff2             4  [STACK] unsigned char 
 15363 ;; Auto vars:     Size  Location     Type
 15364 ;;		None
 15365 ;; Return value:  Size  Location     Type
 15366 ;;		None               void
 15367 ;; Registers used:
 15368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15369 ;; Tracked objects:
 15370 ;;		On entry : 0/4
 15371 ;;		On exit  : 0/0
 15372 ;;		Unchanged: 0/0
 15373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15378 ;;Total ram usage:        0 bytes
 15379 ;; Hardware stack levels used:    1
 15380 ;; Hardware stack levels required when called:    6
 15381 ;; This function calls:
 15382 ;;		Nothing
 15383 ;; This function is called by:
 15384 ;;		_efgtoa
 15385 ;; This function uses a reentrant model
 15386 ;;
 15387                           
 15388                           	psect	text51
 15389  01685A                     __ptext51:
 15390                           	opt callstack 0
 15391  01685A                     ___fleq:
 15392                           	opt callstack 17
 15393                           
 15394                           ;stkvar	_ff1 @ sp[(0)+-4]
 15395                           
 15396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15397                           ;incstack = 0
 15398  01685A  50E1               	movf	fsr1l,w,c
 15399  01685C  0FFC               	addlw	-4
 15400  01685E  6ED9               	movwf	fsr2l,c
 15401  016860  50E2               	movf	fsr1h,w,c
 15402  016862  6EDA               	movwf	fsr2h,c
 15403  016864  0EFF               	movlw	255
 15404  016866  22DA               	addwfc	fsr2h,f,c
 15405  016868  0E00               	movlw	0
 15406  01686A  14DE               	andwf	postinc2,w,c
 15407  01686C  6E3D               	movwf	(btemp+8)^0,c
 15408  01686E  0E00               	movlw	0
 15409  016870  14DE               	andwf	postinc2,w,c
 15410  016872  6E3E               	movwf	(btemp+9)^0,c
 15411  016874  0E80               	movlw	128
 15412  016876  14DE               	andwf	postinc2,w,c
 15413  016878  6E3F               	movwf	(btemp+10)^0,c
 15414  01687A  0E7F               	movlw	127
 15415  01687C  14DE               	andwf	postinc2,w,c
 15416  01687E  6E40               	movwf	(btemp+11)^0,c
 15417  016880  503D               	movf	(btemp+8)^0,w,c
 15418  016882  103E               	iorwf	(btemp+9)^0,w,c
 15419  016884  103F               	iorwf	(btemp+10)^0,w,c
 15420  016886  1040               	iorwf	(btemp+11)^0,w,c
 15421  016888  A4D8               	btfss	status,2,c
 15422  01688A  D008               	goto	l6753
 15423                           
 15424                           ;stkvar	_ff1 @ sp[(0)+-4]
 15425  01688C  0EFC               	movlw	-4
 15426  01688E  6AE3               	clrf	plusw1,c
 15427  016890  0EFD               	movlw	-3
 15428  016892  6AE3               	clrf	plusw1,c
 15429  016894  0EFE               	movlw	-2
 15430  016896  6AE3               	clrf	plusw1,c
 15431  016898  0EFF               	movlw	-1
 15432  01689A  6AE3               	clrf	plusw1,c
 15433  01689C                     l6753:
 15434                           
 15435                           ;stkvar	_ff2 @ sp[(0)+-8]
 15436  01689C  50E1               	movf	fsr1l,w,c
 15437  01689E  0FF8               	addlw	-8
 15438  0168A0  6ED9               	movwf	fsr2l,c
 15439  0168A2  50E2               	movf	fsr1h,w,c
 15440  0168A4  6EDA               	movwf	fsr2h,c
 15441  0168A6  0EFF               	movlw	255
 15442  0168A8  22DA               	addwfc	fsr2h,f,c
 15443  0168AA  0E00               	movlw	0
 15444  0168AC  14DE               	andwf	postinc2,w,c
 15445  0168AE  6E3D               	movwf	(btemp+8)^0,c
 15446  0168B0  0E00               	movlw	0
 15447  0168B2  14DE               	andwf	postinc2,w,c
 15448  0168B4  6E3E               	movwf	(btemp+9)^0,c
 15449  0168B6  0E80               	movlw	128
 15450  0168B8  14DE               	andwf	postinc2,w,c
 15451  0168BA  6E3F               	movwf	(btemp+10)^0,c
 15452  0168BC  0E7F               	movlw	127
 15453  0168BE  14DE               	andwf	postinc2,w,c
 15454  0168C0  6E40               	movwf	(btemp+11)^0,c
 15455  0168C2  503D               	movf	(btemp+8)^0,w,c
 15456  0168C4  103E               	iorwf	(btemp+9)^0,w,c
 15457  0168C6  103F               	iorwf	(btemp+10)^0,w,c
 15458  0168C8  1040               	iorwf	(btemp+11)^0,w,c
 15459  0168CA  A4D8               	btfss	status,2,c
 15460  0168CC  D008               	goto	l6757
 15461                           
 15462                           ;stkvar	_ff2 @ sp[(0)+-8]
 15463  0168CE  0EF8               	movlw	-8
 15464  0168D0  6AE3               	clrf	plusw1,c
 15465  0168D2  0EF9               	movlw	-7
 15466  0168D4  6AE3               	clrf	plusw1,c
 15467  0168D6  0EFA               	movlw	-6
 15468  0168D8  6AE3               	clrf	plusw1,c
 15469  0168DA  0EFB               	movlw	-5
 15470  0168DC  6AE3               	clrf	plusw1,c
 15471  0168DE                     l6757:
 15472                           
 15473                           ;stkvar	_ff2 @ sp[(0)+-8]
 15474                           ;stkvar	_ff1 @ sp[(0)+-4]
 15475  0168DE  50E1               	movf	fsr1l,w,c
 15476  0168E0  0FFC               	addlw	-4
 15477  0168E2  6ED9               	movwf	fsr2l,c
 15478  0168E4  50E2               	movf	fsr1h,w,c
 15479  0168E6  6EDA               	movwf	fsr2h,c
 15480  0168E8  0EFF               	movlw	255
 15481  0168EA  22DA               	addwfc	fsr2h,f,c
 15482  0168EC  0EF8               	movlw	-8
 15483  0168EE  50E3               	movf	plusw1,w,c
 15484  0168F0  18DE               	xorwf	postinc2,w,c
 15485  0168F2  E10D               	bnz	u5910
 15486  0168F4  0EF9               	movlw	-7
 15487  0168F6  50E3               	movf	plusw1,w,c
 15488  0168F8  18DE               	xorwf	postinc2,w,c
 15489  0168FA  E109               	bnz	u5910
 15490  0168FC  0EFA               	movlw	-6
 15491  0168FE  50E3               	movf	plusw1,w,c
 15492  016900  18DE               	xorwf	postinc2,w,c
 15493  016902  E105               	bnz	u5910
 15494  016904  0EFB               	movlw	-5
 15495  016906  50E3               	movf	plusw1,w,c
 15496  016908  18DE               	xorwf	postinc2,w,c
 15497  01690A  B4D8               	btfsc	status,2,c
 15498  01690C  D002               	goto	l6761
 15499  01690E                     u5910:
 15500  01690E  9035               	bcf	btemp& (0+255),0,c
 15501  016910  D001               	goto	l2222
 15502  016912                     l6761:
 15503  016912  8035               	bsf	btemp& (0+255),0,c
 15504  016914                     l2222:
 15505                           
 15506                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15507  016914  0EF8               	movlw	248
 15508  016916  26E1               	addwf	fsr1l,f,c
 15509  016918  0EFF               	movlw	255
 15510  01691A  22E2               	addwfc	fsr1h,f,c
 15511  01691C  0012               	return		;funcret
 15512  01691E                     __end_of___fleq:
 15513                           	opt callstack 0
 15514                           
 15515 ;; *************** function ___fldiv *****************
 15516 ;; Defined at:
 15517 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15518 ;; Parameters:    Size  Location     Type
 15519 ;;  b               4  [STACK] unsigned char 
 15520 ;;  a               4  [STACK] unsigned char 
 15521 ;; Auto vars:     Size  Location     Type
 15522 ;;  grs             4  [STACK] unsigned long 
 15523 ;;  rem             4  [STACK] unsigned long 
 15524 ;;  new_exp         2  [STACK] short 
 15525 ;;  aexp            1  [STACK] unsigned char 
 15526 ;;  bexp            1  [STACK] unsigned char 
 15527 ;;  sign            1  [STACK] unsigned char 
 15528 ;; Return value:  Size  Location     Type
 15529 ;;                  4  [STACK] unsigned char 
 15530 ;; Registers used:
 15531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15532 ;; Tracked objects:
 15533 ;;		On entry : 0/0
 15534 ;;		On exit  : 0/0
 15535 ;;		Unchanged: 0/0
 15536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15541 ;;Total ram usage:        0 bytes
 15542 ;; Hardware stack levels used:    1
 15543 ;; Hardware stack levels required when called:    6
 15544 ;; This function calls:
 15545 ;;		Nothing
 15546 ;; This function is called by:
 15547 ;;		_conv_raw_result
 15548 ;;		_lp_filter
 15549 ;;		_efgtoa
 15550 ;; This function uses a reentrant model
 15551 ;;
 15552                           
 15553                           	psect	text52
 15554  012D68                     __ptext52:
 15555                           	opt callstack 0
 15556  012D68                     ___fldiv:
 15557                           	opt callstack 0
 15558                           
 15559                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15560  012D68  0E0D               	movlw	13
 15561  012D6A  26E1               	addwf	fsr1l,f,c
 15562  012D6C  0E00               	movlw	0
 15563  012D6E  22E2               	addwfc	fsr1h,f,c
 15564                           
 15565                           ;stkvar	_b @ sp[(-13)+-4]
 15566                           
 15567                           ;incstack = 0
 15568  012D70  0EF2               	movlw	242
 15569  012D72  24E1               	addwf	fsr1l,w,c
 15570  012D74  6ED9               	movwf	fsr2l,c
 15571  012D76  0EFF               	movlw	255
 15572  012D78  20E2               	addwfc	fsr1h,w,c
 15573  012D7A  6EDA               	movwf	fsr2h,c
 15574  012D7C  50DF               	movf	indf2,w,c
 15575  012D7E  6E40               	movwf	(btemp+11)^0,c
 15576  012D80  0E80               	movlw	128
 15577  012D82  1640               	andwf	(btemp+11)^0,f,c
 15578                           
 15579                           ;stkvar	_sign @ sp[(-13)+12]
 15580  012D84  0EFF               	movlw	-1
 15581  012D86  0060  F103  FFE3   	movff	btemp+11,plusw1
 15582                           
 15583                           ;stkvar	_b @ sp[(-13)+-4]
 15584  012D8C  0EF2               	movlw	242
 15585  012D8E  24E1               	addwf	fsr1l,w,c
 15586  012D90  6ED9               	movwf	fsr2l,c
 15587  012D92  0EFF               	movlw	255
 15588  012D94  20E2               	addwfc	fsr1h,w,c
 15589  012D96  6EDA               	movwf	fsr2h,c
 15590  012D98  50DF               	movf	indf2,w,c
 15591  012D9A  6E40               	movwf	(btemp+11)^0,c
 15592  012D9C  90D8               	bcf	status,0,c
 15593  012D9E  3440               	rlcf	(btemp+11)^0,w,c
 15594  012DA0  6E3F               	movwf	(btemp+10)^0,c
 15595                           
 15596                           ;stkvar	_bexp @ sp[(-13)+11]
 15597  012DA2  0EFE               	movlw	-2
 15598  012DA4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15599                           
 15600                           ;stkvar	_b @ sp[(-13)+-4]
 15601  012DAA  0EF1               	movlw	241
 15602  012DAC  24E1               	addwf	fsr1l,w,c
 15603  012DAE  6ED9               	movwf	fsr2l,c
 15604  012DB0  0EFF               	movlw	255
 15605  012DB2  20E2               	addwfc	fsr1h,w,c
 15606  012DB4  6EDA               	movwf	fsr2h,c
 15607  012DB6  AEDF               	btfss	indf2,7,c
 15608  012DB8  D002               	goto	l6355
 15609                           
 15610                           ;stkvar	_bexp @ sp[(-13)+11]
 15611  012DBA  0EFE               	movlw	-2
 15612  012DBC  80E3               	bsf	plusw1,0,c
 15613  012DBE                     l6355:
 15614                           
 15615                           ;stkvar	_bexp @ sp[(-13)+11]
 15616  012DBE  0EFE               	movlw	-2
 15617  012DC0  50E3               	movf	plusw1,w,c
 15618  012DC2  B4D8               	btfsc	status,2,c
 15619  012DC4  D027               	goto	l6365
 15620                           
 15621                           ;stkvar	_bexp @ sp[(-13)+11]
 15622  012DC6  0EFE               	movlw	-2
 15623  012DC8  28E3               	incf	plusw1,w,c
 15624  012DCA  A4D8               	btfss	status,2,c
 15625  012DCC  D018               	goto	l6361
 15626  012DCE  0E00               	movlw	0
 15627  012DD0  6E3D               	movwf	(btemp+8)^0,c
 15628  012DD2  0E00               	movlw	0
 15629  012DD4  6E3E               	movwf	(btemp+9)^0,c
 15630  012DD6  0E00               	movlw	0
 15631  012DD8  6E3F               	movwf	(btemp+10)^0,c
 15632  012DDA  0E00               	movlw	0
 15633  012DDC  6E40               	movwf	(btemp+11)^0,c
 15634                           
 15635                           ;stkvar	_b @ sp[(-13)+-4]
 15636  012DDE  0EEF               	movlw	-17
 15637  012DE0  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15638  012DE6  0EF0               	movlw	-16
 15639  012DE8  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15640  012DEE  0EF1               	movlw	-15
 15641  012DF0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15642  012DF6  0EF2               	movlw	-14
 15643  012DF8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15644  012DFE                     l6361:
 15645                           
 15646                           ;stkvar	_b @ sp[(-13)+-4]
 15647  012DFE  0EF1               	movlw	-15
 15648  012E00  8EE3               	bsf	plusw1,7,c
 15649                           
 15650                           ;stkvar	_b @ sp[(-13)+-4]
 15651  012E02  0EF2               	movlw	242
 15652  012E04  24E1               	addwf	fsr1l,w,c
 15653  012E06  6ED9               	movwf	fsr2l,c
 15654  012E08  0EFF               	movlw	255
 15655  012E0A  20E2               	addwfc	fsr1h,w,c
 15656  012E0C  6EDA               	movwf	fsr2h,c
 15657  012E0E  0E00               	movlw	0
 15658  012E10  6EDF               	movwf	indf2,c
 15659  012E12  D018               	goto	l6367
 15660  012E14                     l6365:
 15661  012E14  0E00               	movlw	0
 15662  012E16  6E3D               	movwf	(btemp+8)^0,c
 15663  012E18  0E00               	movlw	0
 15664  012E1A  6E3E               	movwf	(btemp+9)^0,c
 15665  012E1C  0E00               	movlw	0
 15666  012E1E  6E3F               	movwf	(btemp+10)^0,c
 15667  012E20  0E00               	movlw	0
 15668  012E22  6E40               	movwf	(btemp+11)^0,c
 15669                           
 15670                           ;stkvar	_b @ sp[(-13)+-4]
 15671  012E24  0EEF               	movlw	-17
 15672  012E26  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15673  012E2C  0EF0               	movlw	-16
 15674  012E2E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15675  012E34  0EF1               	movlw	-15
 15676  012E36  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15677  012E3C  0EF2               	movlw	-14
 15678  012E3E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15679  012E44                     l6367:
 15680                           
 15681                           ;stkvar	_a @ sp[(-13)+-8]
 15682  012E44  0EEE               	movlw	238
 15683  012E46  24E1               	addwf	fsr1l,w,c
 15684  012E48  6ED9               	movwf	fsr2l,c
 15685  012E4A  0EFF               	movlw	255
 15686  012E4C  20E2               	addwfc	fsr1h,w,c
 15687  012E4E  6EDA               	movwf	fsr2h,c
 15688  012E50  50DF               	movf	indf2,w,c
 15689  012E52  6E40               	movwf	(btemp+11)^0,c
 15690  012E54  0E80               	movlw	128
 15691  012E56  1640               	andwf	(btemp+11)^0,f,c
 15692                           
 15693                           ;stkvar	_sign @ sp[(-13)+12]
 15694  012E58  50E1               	movf	fsr1l,w,c
 15695  012E5A  0FFF               	addlw	-1
 15696  012E5C  6ED9               	movwf	fsr2l,c
 15697  012E5E  50E2               	movf	fsr1h,w,c
 15698  012E60  6EDA               	movwf	fsr2h,c
 15699  012E62  0EFF               	movlw	255
 15700  012E64  22DA               	addwfc	fsr2h,f,c
 15701  012E66  5040               	movf	(btemp+11)^0,w,c
 15702  012E68  1ADF               	xorwf	indf2,f,c
 15703                           
 15704                           ;stkvar	_a @ sp[(-13)+-8]
 15705  012E6A  0EEE               	movlw	238
 15706  012E6C  24E1               	addwf	fsr1l,w,c
 15707  012E6E  6ED9               	movwf	fsr2l,c
 15708  012E70  0EFF               	movlw	255
 15709  012E72  20E2               	addwfc	fsr1h,w,c
 15710  012E74  6EDA               	movwf	fsr2h,c
 15711  012E76  50DF               	movf	indf2,w,c
 15712  012E78  6E40               	movwf	(btemp+11)^0,c
 15713  012E7A  90D8               	bcf	status,0,c
 15714  012E7C  3440               	rlcf	(btemp+11)^0,w,c
 15715  012E7E  6E3F               	movwf	(btemp+10)^0,c
 15716                           
 15717                           ;stkvar	_aexp @ sp[(-13)+10]
 15718  012E80  0EFD               	movlw	-3
 15719  012E82  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15720                           
 15721                           ;stkvar	_a @ sp[(-13)+-8]
 15722  012E88  0EED               	movlw	237
 15723  012E8A  24E1               	addwf	fsr1l,w,c
 15724  012E8C  6ED9               	movwf	fsr2l,c
 15725  012E8E  0EFF               	movlw	255
 15726  012E90  20E2               	addwfc	fsr1h,w,c
 15727  012E92  6EDA               	movwf	fsr2h,c
 15728  012E94  AEDF               	btfss	indf2,7,c
 15729  012E96  D002               	goto	l6375
 15730                           
 15731                           ;stkvar	_aexp @ sp[(-13)+10]
 15732  012E98  0EFD               	movlw	-3
 15733  012E9A  80E3               	bsf	plusw1,0,c
 15734  012E9C                     l6375:
 15735                           
 15736                           ;stkvar	_aexp @ sp[(-13)+10]
 15737  012E9C  0EFD               	movlw	-3
 15738  012E9E  50E3               	movf	plusw1,w,c
 15739  012EA0  B4D8               	btfsc	status,2,c
 15740  012EA2  D027               	goto	l6385
 15741                           
 15742                           ;stkvar	_aexp @ sp[(-13)+10]
 15743  012EA4  0EFD               	movlw	-3
 15744  012EA6  28E3               	incf	plusw1,w,c
 15745  012EA8  A4D8               	btfss	status,2,c
 15746  012EAA  D018               	goto	l6381
 15747  012EAC  0E00               	movlw	0
 15748  012EAE  6E3D               	movwf	(btemp+8)^0,c
 15749  012EB0  0E00               	movlw	0
 15750  012EB2  6E3E               	movwf	(btemp+9)^0,c
 15751  012EB4  0E00               	movlw	0
 15752  012EB6  6E3F               	movwf	(btemp+10)^0,c
 15753  012EB8  0E00               	movlw	0
 15754  012EBA  6E40               	movwf	(btemp+11)^0,c
 15755                           
 15756                           ;stkvar	_a @ sp[(-13)+-8]
 15757  012EBC  0EEB               	movlw	-21
 15758  012EBE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15759  012EC4  0EEC               	movlw	-20
 15760  012EC6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15761  012ECC  0EED               	movlw	-19
 15762  012ECE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15763  012ED4  0EEE               	movlw	-18
 15764  012ED6  0060  F103  FFE3   	movff	btemp+11,plusw1
 15765  012EDC                     l6381:
 15766                           
 15767                           ;stkvar	_a @ sp[(-13)+-8]
 15768  012EDC  0EED               	movlw	-19
 15769  012EDE  8EE3               	bsf	plusw1,7,c
 15770                           
 15771                           ;stkvar	_a @ sp[(-13)+-8]
 15772  012EE0  0EEE               	movlw	238
 15773  012EE2  24E1               	addwf	fsr1l,w,c
 15774  012EE4  6ED9               	movwf	fsr2l,c
 15775  012EE6  0EFF               	movlw	255
 15776  012EE8  20E2               	addwfc	fsr1h,w,c
 15777  012EEA  6EDA               	movwf	fsr2h,c
 15778  012EEC  0E00               	movlw	0
 15779  012EEE  6EDF               	movwf	indf2,c
 15780  012EF0  D018               	goto	l6387
 15781  012EF2                     l6385:
 15782  012EF2  0E00               	movlw	0
 15783  012EF4  6E3D               	movwf	(btemp+8)^0,c
 15784  012EF6  0E00               	movlw	0
 15785  012EF8  6E3E               	movwf	(btemp+9)^0,c
 15786  012EFA  0E00               	movlw	0
 15787  012EFC  6E3F               	movwf	(btemp+10)^0,c
 15788  012EFE  0E00               	movlw	0
 15789  012F00  6E40               	movwf	(btemp+11)^0,c
 15790                           
 15791                           ;stkvar	_a @ sp[(-13)+-8]
 15792  012F02  0EEB               	movlw	-21
 15793  012F04  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15794  012F0A  0EEC               	movlw	-20
 15795  012F0C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15796  012F12  0EED               	movlw	-19
 15797  012F14  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15798  012F1A  0EEE               	movlw	-18
 15799  012F1C  0060  F103  FFE3   	movff	btemp+11,plusw1
 15800  012F22                     l6387:
 15801                           
 15802                           ;stkvar	_a @ sp[(-13)+-8]
 15803  012F22  0EEB               	movlw	-21
 15804  012F24  50E3               	movf	plusw1,w,c
 15805  012F26  E139               	bnz	l6399
 15806  012F28  0EEC               	movlw	-20
 15807  012F2A  50E3               	movf	plusw1,w,c
 15808  012F2C  E136               	bnz	l6399
 15809  012F2E  0EED               	movlw	-19
 15810  012F30  50E3               	movf	plusw1,w,c
 15811  012F32  E133               	bnz	l6399
 15812  012F34  0EEE               	movlw	-18
 15813  012F36  50E3               	movf	plusw1,w,c
 15814  012F38  A4D8               	btfss	status,2,c
 15815  012F3A  D02F               	goto	l6399
 15816                           
 15817                           ;stkvar	_b @ sp[(-13)+-4]
 15818  012F3C  0EEF               	movlw	-17
 15819  012F3E  6AE3               	clrf	plusw1,c
 15820  012F40  0EF0               	movlw	-16
 15821  012F42  6AE3               	clrf	plusw1,c
 15822  012F44  0EF1               	movlw	-15
 15823  012F46  6AE3               	clrf	plusw1,c
 15824  012F48  0EF2               	movlw	-14
 15825  012F4A  6AE3               	clrf	plusw1,c
 15826                           
 15827                           ;stkvar	_b @ sp[(-13)+-4]
 15828  012F4C  0EF1               	movlw	241
 15829  012F4E  24E1               	addwf	fsr1l,w,c
 15830  012F50  6ED9               	movwf	fsr2l,c
 15831  012F52  0EFF               	movlw	255
 15832  012F54  20E2               	addwfc	fsr1h,w,c
 15833  012F56  6EDA               	movwf	fsr2h,c
 15834  012F58  0E80               	movlw	128
 15835  012F5A  12DE               	iorwf	postinc2,f,c
 15836  012F5C  0E7F               	movlw	127
 15837  012F5E  12DD               	iorwf	postdec2,f,c
 15838  012F60                     l6393:
 15839                           
 15840                           ;stkvar	_sign @ sp[(-13)+12]
 15841  012F60  0EFF               	movlw	-1
 15842  012F62  006F FF8C  F040    	movff	plusw1,btemp+11
 15843                           
 15844                           ;stkvar	_b @ sp[(-13)+-4]
 15845  012F68  0EF2               	movlw	242
 15846  012F6A  24E1               	addwf	fsr1l,w,c
 15847  012F6C  6ED9               	movwf	fsr2l,c
 15848  012F6E  0EFF               	movlw	255
 15849  012F70  20E2               	addwfc	fsr1h,w,c
 15850  012F72  6EDA               	movwf	fsr2h,c
 15851  012F74  5040               	movf	(btemp+11)^0,w,c
 15852  012F76  12DF               	iorwf	indf2,f,c
 15853                           
 15854                           ;stkvar	_b @ sp[(-13)+-4]
 15855  012F78  0EEF               	movlw	-17
 15856  012F7A  006F FF8C  F035    	movff	plusw1,btemp
 15857  012F80  0EF0               	movlw	-16
 15858  012F82  006F FF8C  F036    	movff	plusw1,btemp+1
 15859  012F88  0EF1               	movlw	-15
 15860  012F8A  006F FF8C  F037    	movff	plusw1,btemp+2
 15861  012F90  0EF2               	movlw	-14
 15862  012F92  006F FF8C  F038    	movff	plusw1,btemp+3
 15863  012F98  D19F               	goto	l2545
 15864  012F9A                     l6399:
 15865                           
 15866                           ;stkvar	_bexp @ sp[(-13)+11]
 15867  012F9A  0EFE               	movlw	-2
 15868  012F9C  50E3               	movf	plusw1,w,c
 15869  012F9E  A4D8               	btfss	status,2,c
 15870  012FA0  D009               	goto	l6407
 15871  012FA2  0E00               	movlw	0
 15872  012FA4  6E35               	movwf	btemp^0,c
 15873  012FA6  0E00               	movlw	0
 15874  012FA8  6E36               	movwf	(btemp+1)^0,c
 15875  012FAA  0E00               	movlw	0
 15876  012FAC  6E37               	movwf	(btemp+2)^0,c
 15877  012FAE  0E00               	movlw	0
 15878  012FB0  6E38               	movwf	(btemp+3)^0,c
 15879  012FB2  D192               	goto	l2545
 15880  012FB4                     l6407:
 15881                           
 15882                           ;stkvar	_bexp @ sp[(-13)+11]
 15883  012FB4  0EFE               	movlw	-2
 15884  012FB6  50E3               	movf	plusw1,w,c
 15885  012FB8  6E3F               	movwf	(btemp+10)^0,c
 15886  012FBA  6A40               	clrf	(btemp+11)^0,c
 15887                           
 15888                           ;stkvar	_aexp @ sp[(-13)+10]
 15889  012FBC  0EFD               	movlw	-3
 15890  012FBE  50E3               	movf	plusw1,w,c
 15891  012FC0  5E3F               	subwf	(btemp+10)^0,f,c
 15892  012FC2  0E00               	movlw	0
 15893  012FC4  5A40               	subwfb	(btemp+11)^0,f,c
 15894  012FC6  0E7F               	movlw	127
 15895  012FC8  263F               	addwf	(btemp+10)^0,f,c
 15896  012FCA  0E00               	movlw	0
 15897  012FCC  2240               	addwfc	(btemp+11)^0,f,c
 15898                           
 15899                           ;stkvar	_new_exp @ sp[(-13)+8]
 15900  012FCE  0EFB               	movlw	-5
 15901  012FD0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15902  012FD6  0EFC               	movlw	-4
 15903  012FD8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15904                           
 15905                           ;stkvar	_b @ sp[(-13)+-4]
 15906  012FDE  0EEF               	movlw	-17
 15907  012FE0  006F FF8C  F03D    	movff	plusw1,btemp+8
 15908  012FE6  0EF0               	movlw	-16
 15909  012FE8  006F FF8C  F03E    	movff	plusw1,btemp+9
 15910  012FEE  0EF1               	movlw	-15
 15911  012FF0  006F FF8C  F03F    	movff	plusw1,btemp+10
 15912  012FF6  0EF2               	movlw	-14
 15913  012FF8  006F FF8C  F040    	movff	plusw1,btemp+11
 15914                           
 15915                           ;stkvar	_rem @ sp[(-13)+4]
 15916  012FFE  0EF7               	movlw	-9
 15917  013000  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15918  013006  0EF8               	movlw	-8
 15919  013008  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15920  01300E  0EF9               	movlw	-7
 15921  013010  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15922  013016  0EFA               	movlw	-6
 15923  013018  0060  F103  FFE3   	movff	btemp+11,plusw1
 15924                           
 15925                           ;stkvar	_b @ sp[(-13)+-4]
 15926  01301E  0EEF               	movlw	-17
 15927  013020  6AE3               	clrf	plusw1,c
 15928  013022  0EF0               	movlw	-16
 15929  013024  6AE3               	clrf	plusw1,c
 15930  013026  0EF1               	movlw	-15
 15931  013028  6AE3               	clrf	plusw1,c
 15932  01302A  0EF2               	movlw	-14
 15933  01302C  6AE3               	clrf	plusw1,c
 15934                           
 15935                           ;stkvar	_grs @ sp[(-13)+0]
 15936  01302E  0EF3               	movlw	-13
 15937  013030  6AE3               	clrf	plusw1,c
 15938  013032  0EF4               	movlw	-12
 15939  013034  6AE3               	clrf	plusw1,c
 15940  013036  0EF5               	movlw	-11
 15941  013038  6AE3               	clrf	plusw1,c
 15942  01303A  0EF6               	movlw	-10
 15943  01303C  6AE3               	clrf	plusw1,c
 15944                           
 15945                           ;stkvar	_aexp @ sp[(-13)+10]
 15946  01303E  0EFD               	movlw	-3
 15947  013040  6AE3               	clrf	plusw1,c
 15948  013042  D050               	goto	l6435
 15949  013044                     l6417:
 15950                           
 15951                           ;stkvar	_aexp @ sp[(-13)+10]
 15952  013044  0EFD               	movlw	-3
 15953  013046  50E3               	movf	plusw1,w,c
 15954  013048  B4D8               	btfsc	status,2,c
 15955  01304A  D020               	goto	l6427
 15956                           
 15957                           ;stkvar	_rem @ sp[(-13)+4]
 15958  01304C  90D8               	bcf	status,0,c
 15959  01304E  0EF7               	movlw	-9
 15960  013050  36E3               	rlcf	plusw1,f,c
 15961  013052  0EF8               	movlw	-8
 15962  013054  36E3               	rlcf	plusw1,f,c
 15963  013056  0EF9               	movlw	-7
 15964  013058  36E3               	rlcf	plusw1,f,c
 15965  01305A  0EFA               	movlw	-6
 15966  01305C  36E3               	rlcf	plusw1,f,c
 15967                           
 15968                           ;stkvar	_b @ sp[(-13)+-4]
 15969  01305E  90D8               	bcf	status,0,c
 15970  013060  0EEF               	movlw	-17
 15971  013062  36E3               	rlcf	plusw1,f,c
 15972  013064  0EF0               	movlw	-16
 15973  013066  36E3               	rlcf	plusw1,f,c
 15974  013068  0EF1               	movlw	-15
 15975  01306A  36E3               	rlcf	plusw1,f,c
 15976  01306C  0EF2               	movlw	-14
 15977  01306E  36E3               	rlcf	plusw1,f,c
 15978                           
 15979                           ;stkvar	_grs @ sp[(-13)+0]
 15980  013070  0EF6               	movlw	-10
 15981  013072  AEE3               	btfss	plusw1,7,c
 15982  013074  D002               	goto	l6425
 15983                           
 15984                           ;stkvar	_b @ sp[(-13)+-4]
 15985  013076  0EEF               	movlw	-17
 15986  013078  80E3               	bsf	plusw1,0,c
 15987  01307A                     l6425:
 15988                           
 15989                           ;stkvar	_grs @ sp[(-13)+0]
 15990  01307A  90D8               	bcf	status,0,c
 15991  01307C  0EF3               	movlw	-13
 15992  01307E  36E3               	rlcf	plusw1,f,c
 15993  013080  0EF4               	movlw	-12
 15994  013082  36E3               	rlcf	plusw1,f,c
 15995  013084  0EF5               	movlw	-11
 15996  013086  36E3               	rlcf	plusw1,f,c
 15997  013088  0EF6               	movlw	-10
 15998  01308A  36E3               	rlcf	plusw1,f,c
 15999  01308C                     l6427:
 16000                           
 16001                           ;stkvar	_a @ sp[(-13)+-8]
 16002                           ;stkvar	_rem @ sp[(-13)+4]
 16003  01308C  50E1               	movf	fsr1l,w,c
 16004  01308E  0FF7               	addlw	-9
 16005  013090  6ED9               	movwf	fsr2l,c
 16006  013092  50E2               	movf	fsr1h,w,c
 16007  013094  6EDA               	movwf	fsr2h,c
 16008  013096  0EFF               	movlw	255
 16009  013098  22DA               	addwfc	fsr2h,f,c
 16010  01309A  0EEB               	movlw	-21
 16011  01309C  50E3               	movf	plusw1,w,c
 16012  01309E  5CDE               	subwf	postinc2,w,c
 16013  0130A0  0EEC               	movlw	-20
 16014  0130A2  50E3               	movf	plusw1,w,c
 16015  0130A4  58DE               	subwfb	postinc2,w,c
 16016  0130A6  0EED               	movlw	-19
 16017  0130A8  50E3               	movf	plusw1,w,c
 16018  0130AA  58DE               	subwfb	postinc2,w,c
 16019  0130AC  0EEE               	movlw	-18
 16020  0130AE  50E3               	movf	plusw1,w,c
 16021  0130B0  58DE               	subwfb	postinc2,w,c
 16022  0130B2  A0D8               	btfss	status,0,c
 16023  0130B4  D015               	goto	l6433
 16024                           
 16025                           ;stkvar	_grs @ sp[(-13)+0]
 16026  0130B6  0EF6               	movlw	-10
 16027  0130B8  8CE3               	bsf	plusw1,6,c
 16028                           
 16029                           ;stkvar	_a @ sp[(-13)+-8]
 16030                           ;stkvar	_rem @ sp[(-13)+4]
 16031  0130BA  50E1               	movf	fsr1l,w,c
 16032  0130BC  0FF7               	addlw	-9
 16033  0130BE  6ED9               	movwf	fsr2l,c
 16034  0130C0  50E2               	movf	fsr1h,w,c
 16035  0130C2  6EDA               	movwf	fsr2h,c
 16036  0130C4  0EFF               	movlw	255
 16037  0130C6  22DA               	addwfc	fsr2h,f,c
 16038  0130C8  0EEB               	movlw	-21
 16039  0130CA  50E3               	movf	plusw1,w,c
 16040  0130CC  5EDE               	subwf	postinc2,f,c
 16041  0130CE  0EEC               	movlw	-20
 16042  0130D0  50E3               	movf	plusw1,w,c
 16043  0130D2  5ADE               	subwfb	postinc2,f,c
 16044  0130D4  0EED               	movlw	-19
 16045  0130D6  50E3               	movf	plusw1,w,c
 16046  0130D8  5ADE               	subwfb	postinc2,f,c
 16047  0130DA  0EEE               	movlw	-18
 16048  0130DC  50E3               	movf	plusw1,w,c
 16049  0130DE  5ADE               	subwfb	postinc2,f,c
 16050  0130E0                     l6433:
 16051                           
 16052                           ;stkvar	_aexp @ sp[(-13)+10]
 16053  0130E0  0EFD               	movlw	-3
 16054  0130E2  2AE3               	incf	plusw1,f,c
 16055  0130E4                     l6435:
 16056                           
 16057                           ;stkvar	_aexp @ sp[(-13)+10]
 16058  0130E4  0EFD               	movlw	-3
 16059  0130E6  006F FF8C  F035    	movff	plusw1,btemp
 16060  0130EC  0E19               	movlw	25
 16061  0130EE  6435               	cpfsgt	btemp^0,c
 16062  0130F0  D7A9               	goto	l6417
 16063                           
 16064                           ;stkvar	_rem @ sp[(-13)+4]
 16065  0130F2  0EF7               	movlw	-9
 16066  0130F4  50E3               	movf	plusw1,w,c
 16067  0130F6  E10A               	bnz	u5410
 16068  0130F8  0EF8               	movlw	-8
 16069  0130FA  50E3               	movf	plusw1,w,c
 16070  0130FC  E107               	bnz	u5410
 16071  0130FE  0EF9               	movlw	-7
 16072  013100  50E3               	movf	plusw1,w,c
 16073  013102  E104               	bnz	u5410
 16074  013104  0EFA               	movlw	-6
 16075  013106  50E3               	movf	plusw1,w,c
 16076  013108  B4D8               	btfsc	status,2,c
 16077  01310A  D024               	goto	l6451
 16078  01310C                     u5410:
 16079                           
 16080                           ;stkvar	_grs @ sp[(-13)+0]
 16081  01310C  0EF3               	movlw	-13
 16082  01310E  80E3               	bsf	plusw1,0,c
 16083  013110  D021               	goto	l6451
 16084  013112                     l6441:
 16085                           
 16086                           ;stkvar	_b @ sp[(-13)+-4]
 16087  013112  90D8               	bcf	status,0,c
 16088  013114  0EEF               	movlw	-17
 16089  013116  36E3               	rlcf	plusw1,f,c
 16090  013118  0EF0               	movlw	-16
 16091  01311A  36E3               	rlcf	plusw1,f,c
 16092  01311C  0EF1               	movlw	-15
 16093  01311E  36E3               	rlcf	plusw1,f,c
 16094  013120  0EF2               	movlw	-14
 16095  013122  36E3               	rlcf	plusw1,f,c
 16096                           
 16097                           ;stkvar	_grs @ sp[(-13)+0]
 16098  013124  0EF6               	movlw	-10
 16099  013126  AEE3               	btfss	plusw1,7,c
 16100  013128  D002               	goto	l6447
 16101                           
 16102                           ;stkvar	_b @ sp[(-13)+-4]
 16103  01312A  0EEF               	movlw	-17
 16104  01312C  80E3               	bsf	plusw1,0,c
 16105  01312E                     l6447:
 16106                           
 16107                           ;stkvar	_grs @ sp[(-13)+0]
 16108  01312E  90D8               	bcf	status,0,c
 16109  013130  0EF3               	movlw	-13
 16110  013132  36E3               	rlcf	plusw1,f,c
 16111  013134  0EF4               	movlw	-12
 16112  013136  36E3               	rlcf	plusw1,f,c
 16113  013138  0EF5               	movlw	-11
 16114  01313A  36E3               	rlcf	plusw1,f,c
 16115  01313C  0EF6               	movlw	-10
 16116  01313E  36E3               	rlcf	plusw1,f,c
 16117                           
 16118                           ;stkvar	_new_exp @ sp[(-13)+8]
 16119  013140  50E1               	movf	fsr1l,w,c
 16120  013142  0FFB               	addlw	-5
 16121  013144  6ED9               	movwf	fsr2l,c
 16122  013146  50E2               	movf	fsr1h,w,c
 16123  013148  6EDA               	movwf	fsr2h,c
 16124  01314A  0EFF               	movlw	255
 16125  01314C  22DA               	addwfc	fsr2h,f,c
 16126  01314E  06DE               	decf	postinc2,f,c
 16127  013150  0E00               	movlw	0
 16128  013152  5ADD               	subwfb	postdec2,f,c
 16129  013154                     l6451:
 16130                           
 16131                           ;stkvar	_b @ sp[(-13)+-4]
 16132  013154  0EF1               	movlw	-15
 16133  013156  AEE3               	btfss	plusw1,7,c
 16134  013158  D7DC               	goto	l6441
 16135                           
 16136                           ;stkvar	_aexp @ sp[(-13)+10]
 16137  01315A  0EFD               	movlw	-3
 16138  01315C  6AE3               	clrf	plusw1,c
 16139                           
 16140                           ;stkvar	_grs @ sp[(-13)+0]
 16141  01315E  0EF6               	movlw	-10
 16142  013160  AEE3               	btfss	plusw1,7,c
 16143  013162  D020               	goto	l6465
 16144                           
 16145                           ;stkvar	_grs @ sp[(-13)+0]
 16146  013164  50E1               	movf	fsr1l,w,c
 16147  013166  0FF3               	addlw	-13
 16148  013168  6ED9               	movwf	fsr2l,c
 16149  01316A  50E2               	movf	fsr1h,w,c
 16150  01316C  6EDA               	movwf	fsr2h,c
 16151  01316E  0EFF               	movlw	255
 16152  013170  22DA               	addwfc	fsr2h,f,c
 16153  013172  0EFF               	movlw	255
 16154  013174  14DE               	andwf	postinc2,w,c
 16155  013176  6E3D               	movwf	(btemp+8)^0,c
 16156  013178  0EFF               	movlw	255
 16157  01317A  14DE               	andwf	postinc2,w,c
 16158  01317C  6E3E               	movwf	(btemp+9)^0,c
 16159  01317E  0EFF               	movlw	255
 16160  013180  14DE               	andwf	postinc2,w,c
 16161  013182  6E3F               	movwf	(btemp+10)^0,c
 16162  013184  0E7F               	movlw	127
 16163  013186  14DE               	andwf	postinc2,w,c
 16164  013188  6E40               	movwf	(btemp+11)^0,c
 16165  01318A  503D               	movf	(btemp+8)^0,w,c
 16166  01318C  103E               	iorwf	(btemp+9)^0,w,c
 16167  01318E  103F               	iorwf	(btemp+10)^0,w,c
 16168  013190  1040               	iorwf	(btemp+11)^0,w,c
 16169  013192  B4D8               	btfsc	status,2,c
 16170  013194  D004               	goto	l6461
 16171  013196                     u5450:
 16172                           
 16173                           ;stkvar	_aexp @ sp[(-13)+10]
 16174  013196  0EFD               	movlw	-3
 16175  013198  6AE3               	clrf	plusw1,c
 16176  01319A  2AE3               	incf	plusw1,f,c
 16177  01319C  D003               	goto	l6465
 16178  01319E                     l6461:
 16179                           
 16180                           ;stkvar	_b @ sp[(-13)+-4]
 16181  01319E  0EEF               	movlw	-17
 16182  0131A0  B0E3               	btfsc	plusw1,0,c
 16183  0131A2  D7F9               	goto	u5450
 16184  0131A4                     l6465:
 16185                           
 16186                           ;stkvar	_aexp @ sp[(-13)+10]
 16187  0131A4  0EFD               	movlw	-3
 16188  0131A6  50E3               	movf	plusw1,w,c
 16189  0131A8  B4D8               	btfsc	status,2,c
 16190  0131AA  D036               	goto	l6475
 16191                           
 16192                           ;stkvar	_b @ sp[(-13)+-4]
 16193  0131AC  50E1               	movf	fsr1l,w,c
 16194  0131AE  0FEF               	addlw	-17
 16195  0131B0  6ED9               	movwf	fsr2l,c
 16196  0131B2  50E2               	movf	fsr1h,w,c
 16197  0131B4  6EDA               	movwf	fsr2h,c
 16198  0131B6  0EFF               	movlw	255
 16199  0131B8  22DA               	addwfc	fsr2h,f,c
 16200  0131BA  2ADE               	incf	postinc2,f,c
 16201  0131BC  0E00               	movlw	0
 16202  0131BE  22DE               	addwfc	postinc2,f,c
 16203  0131C0  22DE               	addwfc	postinc2,f,c
 16204  0131C2  22DE               	addwfc	postinc2,f,c
 16205                           
 16206                           ;stkvar	_b @ sp[(-13)+-4]
 16207  0131C4  0EF2               	movlw	-14
 16208  0131C6  A0E3               	btfss	plusw1,0,c
 16209  0131C8  D027               	goto	l6475
 16210  0131CA  0E01               	movlw	1
 16211  0131CC  6E40               	movwf	(btemp+11)^0,c
 16212                           
 16213                           ;stkvar	_b @ sp[(-13)+-4]
 16214  0131CE  50E1               	movf	fsr1l,w,c
 16215  0131D0  0FEF               	addlw	-17
 16216  0131D2  6ED9               	movwf	fsr2l,c
 16217  0131D4  50E2               	movf	fsr1h,w,c
 16218  0131D6  6EDA               	movwf	fsr2h,c
 16219  0131D8  0EFF               	movlw	255
 16220  0131DA  22DA               	addwfc	fsr2h,f,c
 16221  0131DC  2840               	incf	(btemp+11)^0,w,c
 16222  0131DE  52DE               	movf	postinc2,f,c
 16223  0131E0  D008               	goto	u5490
 16224  0131E2                     u5495:
 16225  0131E2  52DE               	movf	postinc2,f,c
 16226  0131E4  90D8               	bcf	status,0,c
 16227  0131E6  BEDC               	btfsc	preinc2,7,c
 16228  0131E8  80D8               	bsf	status,0,c
 16229  0131EA  32DD               	rrcf	postdec2,f,c
 16230  0131EC  32DD               	rrcf	postdec2,f,c
 16231  0131EE  32DD               	rrcf	postdec2,f,c
 16232  0131F0  32DE               	rrcf	postinc2,f,c
 16233  0131F2                     u5490:
 16234  0131F2  2EE8               	decfsz	wreg,f,c
 16235  0131F4  D7F6               	goto	u5495
 16236                           
 16237                           ;stkvar	_new_exp @ sp[(-13)+8]
 16238  0131F6  0EFB               	movlw	-5
 16239  0131F8  50E3               	movf	plusw1,w,c
 16240  0131FA  0F01               	addlw	1
 16241  0131FC  6E35               	movwf	btemp^0,c
 16242  0131FE  0EFB               	movlw	-5
 16243  013200  0060  F0D7  FFE3   	movff	btemp,plusw1
 16244  013206  6A35               	clrf	btemp^0,c
 16245  013208  0EFC               	movlw	-4
 16246  01320A  50E3               	movf	plusw1,w,c
 16247  01320C  2035               	addwfc	btemp^0,w,c
 16248  01320E  6E35               	movwf	btemp^0,c
 16249  013210  0EFC               	movlw	-4
 16250  013212  0060  F0D7  FFE3   	movff	btemp,plusw1
 16251  013218                     l6475:
 16252                           
 16253                           ;stkvar	_new_exp @ sp[(-13)+8]
 16254  013218  0EFC               	movlw	-4
 16255  01321A  BEE3               	btfsc	plusw1,7,c
 16256  01321C  D01B               	goto	l6481
 16257  01321E  0EFC               	movlw	-4
 16258  013220  50E3               	movf	plusw1,w,c
 16259  013222  E104               	bnz	u5500
 16260  013224  0EFB               	movlw	-5
 16261  013226  28E3               	incf	plusw1,w,c
 16262  013228  A0D8               	btfss	status,0,c
 16263  01322A  D014               	goto	l6481
 16264  01322C                     u5500:
 16265  01322C  0EFF               	movlw	255
 16266  01322E  6E3F               	movwf	(btemp+10)^0,c
 16267  013230  0E00               	movlw	0
 16268  013232  6E40               	movwf	(btemp+11)^0,c
 16269                           
 16270                           ;stkvar	_new_exp @ sp[(-13)+8]
 16271  013234  0EFB               	movlw	-5
 16272  013236  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16273  01323C  0EFC               	movlw	-4
 16274  01323E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16275                           
 16276                           ;stkvar	_b @ sp[(-13)+-4]
 16277  013244  0EEF               	movlw	-17
 16278  013246  6AE3               	clrf	plusw1,c
 16279  013248  0EF0               	movlw	-16
 16280  01324A  6AE3               	clrf	plusw1,c
 16281  01324C  0EF1               	movlw	-15
 16282  01324E  6AE3               	clrf	plusw1,c
 16283  013250  0EF2               	movlw	-14
 16284  013252  6AE3               	clrf	plusw1,c
 16285  013254                     l6481:
 16286                           
 16287                           ;stkvar	_new_exp @ sp[(-13)+8]
 16288  013254  0EFC               	movlw	-4
 16289  013256  BEE3               	btfsc	plusw1,7,c
 16290  013258  D007               	goto	u5510
 16291  01325A  0EFC               	movlw	-4
 16292  01325C  50E3               	movf	plusw1,w,c
 16293  01325E  E112               	bnz	l6487
 16294  013260  0EFB               	movlw	-5
 16295  013262  04E3               	decf	plusw1,w,c
 16296  013264  B0D8               	btfsc	status,0,c
 16297  013266  D00E               	goto	l6487
 16298  013268                     u5510:
 16299                           
 16300                           ;stkvar	_new_exp @ sp[(-13)+8]
 16301  013268  0EFB               	movlw	-5
 16302  01326A  6AE3               	clrf	plusw1,c
 16303  01326C  0EFC               	movlw	-4
 16304  01326E  6AE3               	clrf	plusw1,c
 16305                           
 16306                           ;stkvar	_b @ sp[(-13)+-4]
 16307  013270  0EEF               	movlw	-17
 16308  013272  6AE3               	clrf	plusw1,c
 16309  013274  0EF0               	movlw	-16
 16310  013276  6AE3               	clrf	plusw1,c
 16311  013278  0EF1               	movlw	-15
 16312  01327A  6AE3               	clrf	plusw1,c
 16313  01327C  0EF2               	movlw	-14
 16314  01327E  6AE3               	clrf	plusw1,c
 16315                           
 16316                           ;stkvar	_sign @ sp[(-13)+12]
 16317  013280  0EFF               	movlw	-1
 16318  013282  6AE3               	clrf	plusw1,c
 16319  013284                     l6487:
 16320                           
 16321                           ;stkvar	_new_exp @ sp[(-13)+8]
 16322                           ;stkvar	_bexp @ sp[(-13)+11]
 16323  013284  0EFB               	movlw	-5
 16324  013286  006F FF8C  F035    	movff	plusw1,btemp
 16325  01328C  0EFE               	movlw	-2
 16326  01328E  0060  F0D7  FFE3   	movff	btemp,plusw1
 16327                           
 16328                           ;stkvar	_bexp @ sp[(-13)+11]
 16329  013294  0EFE               	movlw	-2
 16330  013296  A0E3               	btfss	plusw1,0,c
 16331  013298  D009               	goto	l6493
 16332                           
 16333                           ;stkvar	_b @ sp[(-13)+-4]
 16334  01329A  0EF1               	movlw	241
 16335  01329C  24E1               	addwf	fsr1l,w,c
 16336  01329E  6ED9               	movwf	fsr2l,c
 16337  0132A0  0EFF               	movlw	255
 16338  0132A2  20E2               	addwfc	fsr1h,w,c
 16339  0132A4  6EDA               	movwf	fsr2h,c
 16340  0132A6  0E00               	movlw	0
 16341  0132A8  8EDB               	bsf	plusw2,7,c
 16342  0132AA  D008               	goto	l6495
 16343  0132AC                     l6493:
 16344                           
 16345                           ;stkvar	_b @ sp[(-13)+-4]
 16346  0132AC  0EF1               	movlw	241
 16347  0132AE  24E1               	addwf	fsr1l,w,c
 16348  0132B0  6ED9               	movwf	fsr2l,c
 16349  0132B2  0EFF               	movlw	255
 16350  0132B4  20E2               	addwfc	fsr1h,w,c
 16351  0132B6  6EDA               	movwf	fsr2h,c
 16352  0132B8  0E7F               	movlw	127
 16353  0132BA  16DF               	andwf	indf2,f,c
 16354  0132BC                     l6495:
 16355                           
 16356                           ;stkvar	_b @ sp[(-13)+-4]
 16357  0132BC  0EF2               	movlw	242
 16358  0132BE  24E1               	addwf	fsr1l,w,c
 16359  0132C0  6ED9               	movwf	fsr2l,c
 16360  0132C2  0EFF               	movlw	255
 16361  0132C4  20E2               	addwfc	fsr1h,w,c
 16362  0132C6  6EDA               	movwf	fsr2h,c
 16363                           
 16364                           ;stkvar	_bexp @ sp[(-13)+11]
 16365  0132C8  0EFE               	movlw	-2
 16366  0132CA  006F FF8C  F040    	movff	plusw1,btemp+11
 16367  0132D0  90D8               	bcf	status,0,c
 16368  0132D2  3040               	rrcf	(btemp+11)^0,w,c
 16369  0132D4  6EDF               	movwf	indf2,c
 16370  0132D6  D644               	goto	l6393
 16371  0132D8                     l2545:
 16372                           
 16373                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16374  0132D8  0EEB               	movlw	235
 16375  0132DA  26E1               	addwf	fsr1l,f,c
 16376  0132DC  0EFF               	movlw	255
 16377  0132DE  22E2               	addwfc	fsr1h,f,c
 16378  0132E0  0012               	return		;funcret
 16379  0132E2                     __end_of___fldiv:
 16380                           	opt callstack 0
 16381                           
 16382 ;; *************** function ___awmod *****************
 16383 ;; Defined at:
 16384 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16385 ;; Parameters:    Size  Location     Type
 16386 ;;  dividend        2  [STACK] int 
 16387 ;;  divisor         2  [STACK] int 
 16388 ;; Auto vars:     Size  Location     Type
 16389 ;;  sign            1  [STACK] unsigned char 
 16390 ;;  counter         1  [STACK] unsigned char 
 16391 ;; Return value:  Size  Location     Type
 16392 ;;                  2  [STACK] int 
 16393 ;; Registers used:
 16394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16395 ;; Tracked objects:
 16396 ;;		On entry : 0/4
 16397 ;;		On exit  : 0/0
 16398 ;;		Unchanged: 0/0
 16399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16404 ;;Total ram usage:        0 bytes
 16405 ;; Hardware stack levels used:    1
 16406 ;; Hardware stack levels required when called:    6
 16407 ;; This function calls:
 16408 ;;		Nothing
 16409 ;; This function is called by:
 16410 ;;		_efgtoa
 16411 ;; This function uses a reentrant model
 16412 ;;
 16413                           
 16414                           	psect	text53
 16415  016192                     __ptext53:
 16416                           	opt callstack 0
 16417  016192                     ___awmod:
 16418                           	opt callstack 0
 16419                           
 16420                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16421  016192  52E6               	movf	postinc1,f,c
 16422  016194  52E6               	movf	postinc1,f,c
 16423                           
 16424                           ;stkvar	_sign @ sp[(-2)+0]
 16425                           
 16426                           ;incstack = 0
 16427  016196  0EFE               	movlw	-2
 16428  016198  6AE3               	clrf	plusw1,c
 16429                           
 16430                           ;stkvar	_dividend @ sp[(-2)+-2]
 16431  01619A  0EFD               	movlw	-3
 16432  01619C  AEE3               	btfss	plusw1,7,c
 16433  01619E  D009               	goto	l6719
 16434                           
 16435                           ;stkvar	_dividend @ sp[(-2)+-2]
 16436                           ;stkvar	_dividend @ sp[(-2)+-2]
 16437  0161A0  0EFC               	movlw	-4
 16438  0161A2  6CE3               	negf	plusw1,c
 16439  0161A4  0EFD               	movlw	-3
 16440  0161A6  1EE3               	comf	plusw1,f,c
 16441  0161A8  B0D8               	btfsc	status,0,c
 16442  0161AA  2AE3               	incf	plusw1,f,c
 16443                           
 16444                           ;stkvar	_sign @ sp[(-2)+0]
 16445  0161AC  0EFE               	movlw	-2
 16446  0161AE  6AE3               	clrf	plusw1,c
 16447  0161B0  2AE3               	incf	plusw1,f,c
 16448  0161B2                     l6719:
 16449                           
 16450                           ;stkvar	_divisor @ sp[(-2)+-4]
 16451  0161B2  0EFB               	movlw	-5
 16452  0161B4  AEE3               	btfss	plusw1,7,c
 16453  0161B6  D006               	goto	l6723
 16454                           
 16455                           ;stkvar	_divisor @ sp[(-2)+-4]
 16456                           ;stkvar	_divisor @ sp[(-2)+-4]
 16457  0161B8  0EFA               	movlw	-6
 16458  0161BA  6CE3               	negf	plusw1,c
 16459  0161BC  0EFB               	movlw	-5
 16460  0161BE  1EE3               	comf	plusw1,f,c
 16461  0161C0  B0D8               	btfsc	status,0,c
 16462  0161C2  2AE3               	incf	plusw1,f,c
 16463  0161C4                     l6723:
 16464                           
 16465                           ;stkvar	_divisor @ sp[(-2)+-4]
 16466  0161C4  0EFA               	movlw	-6
 16467  0161C6  006F FF8C  F035    	movff	plusw1,btemp
 16468  0161CC  0EFB               	movlw	-5
 16469  0161CE  50E3               	movf	plusw1,w,c
 16470  0161D0  1035               	iorwf	btemp^0,w,c
 16471  0161D2  B4D8               	btfsc	status,2,c
 16472  0161D4  D053               	goto	u5870
 16473                           
 16474                           ;stkvar	_counter @ sp[(-2)+1]
 16475  0161D6  0EFF               	movlw	-1
 16476  0161D8  6AE3               	clrf	plusw1,c
 16477  0161DA  D012               	goto	L13
 16478  0161DC                     l6727:
 16479                           
 16480                           ;stkvar	_divisor @ sp[(-2)+-4]
 16481  0161DC  0EFA               	movlw	-6
 16482  0161DE  50E3               	movf	plusw1,w,c
 16483  0161E0  90D8               	bcf	status,0,c
 16484  0161E2  34E8               	rlcf	wreg,w,c
 16485  0161E4  6E35               	movwf	btemp^0,c
 16486  0161E6  0EFA               	movlw	-6
 16487  0161E8  0060  F0D7  FFE3   	movff	btemp,plusw1
 16488  0161EE  0EFB               	movlw	-5
 16489  0161F0  50E3               	movf	plusw1,w,c
 16490  0161F2  34E8               	rlcf	wreg,w,c
 16491  0161F4  6E35               	movwf	btemp^0,c
 16492  0161F6  0EFB               	movlw	-5
 16493  0161F8  0060  F0D7  FFE3   	movff	btemp,plusw1
 16494                           
 16495                           ;stkvar	_counter @ sp[(-2)+1]
 16496  0161FE  0EFF               	movlw	-1
 16497  016200                     L13:
 16498  016200  2AE3               	incf	plusw1,f,c
 16499                           
 16500                           ;stkvar	_divisor @ sp[(-2)+-4]
 16501  016202  0EFB               	movlw	-5
 16502  016204  AEE3               	btfss	plusw1,7,c
 16503  016206  D7EA               	goto	l6727
 16504  016208                     u5850:
 16505                           
 16506                           ;stkvar	_divisor @ sp[(-2)+-4]
 16507  016208  0EFA               	movlw	-6
 16508  01620A  006F FF8C  F03F    	movff	plusw1,btemp+10
 16509  016210  0EFB               	movlw	-5
 16510  016212  006F FF8C  F040    	movff	plusw1,btemp+11
 16511                           
 16512                           ;stkvar	_dividend @ sp[(-2)+-2]
 16513  016218  0EFC               	movlw	-4
 16514  01621A  006F FF8C  F03D    	movff	plusw1,btemp+8
 16515  016220  0EFD               	movlw	-3
 16516  016222  006F FF8C  F03E    	movff	plusw1,btemp+9
 16517  016228  503F               	movf	(btemp+10)^0,w,c
 16518  01622A  5C3D               	subwf	(btemp+8)^0,w,c
 16519  01622C  5040               	movf	(btemp+11)^0,w,c
 16520  01622E  583E               	subwfb	(btemp+9)^0,w,c
 16521  016230  A0D8               	btfss	status,0,c
 16522  016232  D014               	goto	l6737
 16523                           
 16524                           ;stkvar	_divisor @ sp[(-2)+-4]
 16525                           ;stkvar	_dividend @ sp[(-2)+-2]
 16526  016234  0EFC               	movlw	-4
 16527  016236  50E3               	movf	plusw1,w,c
 16528  016238  6E35               	movwf	btemp^0,c
 16529  01623A  0EFA               	movlw	-6
 16530  01623C  50E3               	movf	plusw1,w,c
 16531  01623E  5E35               	subwf	btemp^0,f,c
 16532  016240  0EFC               	movlw	-4
 16533  016242  0060  F0D7  FFE3   	movff	btemp,plusw1
 16534  016248  0EFD               	movlw	-3
 16535  01624A  50E3               	movf	plusw1,w,c
 16536  01624C  6E35               	movwf	btemp^0,c
 16537  01624E  0EFB               	movlw	-5
 16538  016250  50E3               	movf	plusw1,w,c
 16539  016252  5A35               	subwfb	btemp^0,f,c
 16540  016254  0EFD               	movlw	-3
 16541  016256  0060  F0D7  FFE3   	movff	btemp,plusw1
 16542  01625C                     l6737:
 16543                           
 16544                           ;stkvar	_divisor @ sp[(-2)+-4]
 16545  01625C  90D8               	bcf	status,0,c
 16546  01625E  0EFB               	movlw	-5
 16547  016260  32E3               	rrcf	plusw1,f,c
 16548  016262  0EFA               	movlw	-6
 16549  016264  32E3               	rrcf	plusw1,f,c
 16550                           
 16551                           ;stkvar	_counter @ sp[(-2)+1]
 16552  016266  0EFF               	movlw	-1
 16553  016268  50E3               	movf	plusw1,w,c
 16554  01626A  6E35               	movwf	btemp^0,c
 16555  01626C  0E01               	movlw	1
 16556  01626E  5E35               	subwf	btemp^0,f,c
 16557  016270  0EFF               	movlw	-1
 16558  016272  0060  F0D7  FFE3   	movff	btemp,plusw1
 16559  016278  A4D8               	btfss	status,2,c
 16560  01627A  D7C6               	goto	u5850
 16561  01627C                     u5870:
 16562                           
 16563                           ;stkvar	_sign @ sp[(-2)+0]
 16564  01627C  0EFE               	movlw	-2
 16565  01627E  50E3               	movf	plusw1,w,c
 16566  016280  B4D8               	btfsc	status,2,c
 16567  016282  D006               	goto	l6745
 16568                           
 16569                           ;stkvar	_dividend @ sp[(-2)+-2]
 16570                           ;stkvar	_dividend @ sp[(-2)+-2]
 16571  016284  0EFC               	movlw	-4
 16572  016286  6CE3               	negf	plusw1,c
 16573  016288  0EFD               	movlw	-3
 16574  01628A  1EE3               	comf	plusw1,f,c
 16575  01628C  B0D8               	btfsc	status,0,c
 16576  01628E  2AE3               	incf	plusw1,f,c
 16577  016290                     l6745:
 16578                           
 16579                           ;stkvar	_dividend @ sp[(-2)+-2]
 16580  016290  0EFC               	movlw	-4
 16581  016292  006F FF8C  F035    	movff	plusw1,btemp
 16582  016298  0EFD               	movlw	-3
 16583  01629A  006F FF8C  F036    	movff	plusw1,btemp+1
 16584                           
 16585                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16586  0162A0  0EFA               	movlw	250
 16587  0162A2  26E1               	addwf	fsr1l,f,c
 16588  0162A4  0EFF               	movlw	255
 16589  0162A6  22E2               	addwfc	fsr1h,f,c
 16590  0162A8  0012               	return		;funcret
 16591  0162AA                     __end_of___awmod:
 16592                           	opt callstack 0
 16593                           
 16594 ;; *************** function ___awdiv *****************
 16595 ;; Defined at:
 16596 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;  dividend        2  [STACK] int 
 16599 ;;  divisor         2  [STACK] int 
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;  quotient        2  [STACK] int 
 16602 ;;  sign            1  [STACK] unsigned char 
 16603 ;;  counter         1  [STACK] unsigned char 
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  2  [STACK] int 
 16606 ;; Registers used:
 16607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16608 ;; Tracked objects:
 16609 ;;		On entry : 0/4
 16610 ;;		On exit  : 0/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16617 ;;Total ram usage:        0 bytes
 16618 ;; Hardware stack levels used:    1
 16619 ;; Hardware stack levels required when called:    6
 16620 ;; This function calls:
 16621 ;;		Nothing
 16622 ;; This function is called by:
 16623 ;;		_efgtoa
 16624 ;; This function uses a reentrant model
 16625 ;;
 16626                           
 16627                           	psect	text54
 16628  015DF2                     __ptext54:
 16629                           	opt callstack 0
 16630  015DF2                     ___awdiv:
 16631                           	opt callstack 0
 16632                           
 16633                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16634  015DF2  52E6               	movf	postinc1,f,c
 16635  015DF4  52E6               	movf	postinc1,f,c
 16636  015DF6  52E6               	movf	postinc1,f,c
 16637  015DF8  52E6               	movf	postinc1,f,c
 16638                           
 16639                           ;stkvar	_sign @ sp[(-4)+2]
 16640                           
 16641                           ;incstack = 0
 16642  015DFA  0EFE               	movlw	-2
 16643  015DFC  6AE3               	clrf	plusw1,c
 16644                           
 16645                           ;stkvar	_divisor @ sp[(-4)+-4]
 16646  015DFE  0EF9               	movlw	-7
 16647  015E00  AEE3               	btfss	plusw1,7,c
 16648  015E02  D009               	goto	l6673
 16649                           
 16650                           ;stkvar	_divisor @ sp[(-4)+-4]
 16651                           ;stkvar	_divisor @ sp[(-4)+-4]
 16652  015E04  0EF8               	movlw	-8
 16653  015E06  6CE3               	negf	plusw1,c
 16654  015E08  0EF9               	movlw	-7
 16655  015E0A  1EE3               	comf	plusw1,f,c
 16656  015E0C  B0D8               	btfsc	status,0,c
 16657  015E0E  2AE3               	incf	plusw1,f,c
 16658                           
 16659                           ;stkvar	_sign @ sp[(-4)+2]
 16660  015E10  0EFE               	movlw	-2
 16661  015E12  6AE3               	clrf	plusw1,c
 16662  015E14  2AE3               	incf	plusw1,f,c
 16663  015E16                     l6673:
 16664                           
 16665                           ;stkvar	_dividend @ sp[(-4)+-2]
 16666  015E16  0EFB               	movlw	-5
 16667  015E18  AEE3               	btfss	plusw1,7,c
 16668  015E1A  D008               	goto	l6679
 16669                           
 16670                           ;stkvar	_dividend @ sp[(-4)+-2]
 16671                           ;stkvar	_dividend @ sp[(-4)+-2]
 16672  015E1C  0EFA               	movlw	-6
 16673  015E1E  6CE3               	negf	plusw1,c
 16674  015E20  0EFB               	movlw	-5
 16675  015E22  1EE3               	comf	plusw1,f,c
 16676  015E24  B0D8               	btfsc	status,0,c
 16677  015E26  2AE3               	incf	plusw1,f,c
 16678                           
 16679                           ;stkvar	_sign @ sp[(-4)+2]
 16680  015E28  0EFE               	movlw	-2
 16681  015E2A  70E3               	btg	plusw1,0,c
 16682  015E2C                     l6679:
 16683                           
 16684                           ;stkvar	_quotient @ sp[(-4)+0]
 16685  015E2C  0EFC               	movlw	-4
 16686  015E2E  6AE3               	clrf	plusw1,c
 16687  015E30  0EFD               	movlw	-3
 16688  015E32  6AE3               	clrf	plusw1,c
 16689                           
 16690                           ;stkvar	_divisor @ sp[(-4)+-4]
 16691  015E34  0EF8               	movlw	-8
 16692  015E36  006F FF8C  F035    	movff	plusw1,btemp
 16693  015E3C  0EF9               	movlw	-7
 16694  015E3E  50E3               	movf	plusw1,w,c
 16695  015E40  1035               	iorwf	btemp^0,w,c
 16696  015E42  B4D8               	btfsc	status,2,c
 16697  015E44  D066               	goto	u5800
 16698                           
 16699                           ;stkvar	_counter @ sp[(-4)+3]
 16700  015E46  0EFF               	movlw	-1
 16701  015E48  6AE3               	clrf	plusw1,c
 16702  015E4A  D012               	goto	L14
 16703  015E4C                     l6685:
 16704                           
 16705                           ;stkvar	_divisor @ sp[(-4)+-4]
 16706  015E4C  0EF8               	movlw	-8
 16707  015E4E  50E3               	movf	plusw1,w,c
 16708  015E50  90D8               	bcf	status,0,c
 16709  015E52  34E8               	rlcf	wreg,w,c
 16710  015E54  6E35               	movwf	btemp^0,c
 16711  015E56  0EF8               	movlw	-8
 16712  015E58  0060  F0D7  FFE3   	movff	btemp,plusw1
 16713  015E5E  0EF9               	movlw	-7
 16714  015E60  50E3               	movf	plusw1,w,c
 16715  015E62  34E8               	rlcf	wreg,w,c
 16716  015E64  6E35               	movwf	btemp^0,c
 16717  015E66  0EF9               	movlw	-7
 16718  015E68  0060  F0D7  FFE3   	movff	btemp,plusw1
 16719                           
 16720                           ;stkvar	_counter @ sp[(-4)+3]
 16721  015E6E  0EFF               	movlw	-1
 16722  015E70                     L14:
 16723  015E70  2AE3               	incf	plusw1,f,c
 16724                           
 16725                           ;stkvar	_divisor @ sp[(-4)+-4]
 16726  015E72  0EF9               	movlw	-7
 16727  015E74  AEE3               	btfss	plusw1,7,c
 16728  015E76  D7EA               	goto	l6685
 16729  015E78                     u5780:
 16730                           
 16731                           ;stkvar	_quotient @ sp[(-4)+0]
 16732  015E78  0EFC               	movlw	-4
 16733  015E7A  50E3               	movf	plusw1,w,c
 16734  015E7C  90D8               	bcf	status,0,c
 16735  015E7E  34E8               	rlcf	wreg,w,c
 16736  015E80  6E35               	movwf	btemp^0,c
 16737  015E82  0EFC               	movlw	-4
 16738  015E84  0060  F0D7  FFE3   	movff	btemp,plusw1
 16739  015E8A  0EFD               	movlw	-3
 16740  015E8C  50E3               	movf	plusw1,w,c
 16741  015E8E  34E8               	rlcf	wreg,w,c
 16742  015E90  6E35               	movwf	btemp^0,c
 16743  015E92  0EFD               	movlw	-3
 16744  015E94  0060  F0D7  FFE3   	movff	btemp,plusw1
 16745                           
 16746                           ;stkvar	_divisor @ sp[(-4)+-4]
 16747  015E9A  0EF8               	movlw	-8
 16748  015E9C  006F FF8C  F03F    	movff	plusw1,btemp+10
 16749  015EA2  0EF9               	movlw	-7
 16750  015EA4  006F FF8C  F040    	movff	plusw1,btemp+11
 16751                           
 16752                           ;stkvar	_dividend @ sp[(-4)+-2]
 16753  015EAA  0EFA               	movlw	-6
 16754  015EAC  006F FF8C  F03D    	movff	plusw1,btemp+8
 16755  015EB2  0EFB               	movlw	-5
 16756  015EB4  006F FF8C  F03E    	movff	plusw1,btemp+9
 16757  015EBA  503F               	movf	(btemp+10)^0,w,c
 16758  015EBC  5C3D               	subwf	(btemp+8)^0,w,c
 16759  015EBE  5040               	movf	(btemp+11)^0,w,c
 16760  015EC0  583E               	subwfb	(btemp+9)^0,w,c
 16761  015EC2  A0D8               	btfss	status,0,c
 16762  015EC4  D016               	goto	l6699
 16763                           
 16764                           ;stkvar	_divisor @ sp[(-4)+-4]
 16765                           ;stkvar	_dividend @ sp[(-4)+-2]
 16766  015EC6  0EFA               	movlw	-6
 16767  015EC8  50E3               	movf	plusw1,w,c
 16768  015ECA  6E35               	movwf	btemp^0,c
 16769  015ECC  0EF8               	movlw	-8
 16770  015ECE  50E3               	movf	plusw1,w,c
 16771  015ED0  5E35               	subwf	btemp^0,f,c
 16772  015ED2  0EFA               	movlw	-6
 16773  015ED4  0060  F0D7  FFE3   	movff	btemp,plusw1
 16774  015EDA  0EFB               	movlw	-5
 16775  015EDC  50E3               	movf	plusw1,w,c
 16776  015EDE  6E35               	movwf	btemp^0,c
 16777  015EE0  0EF9               	movlw	-7
 16778  015EE2  50E3               	movf	plusw1,w,c
 16779  015EE4  5A35               	subwfb	btemp^0,f,c
 16780  015EE6  0EFB               	movlw	-5
 16781  015EE8  0060  F0D7  FFE3   	movff	btemp,plusw1
 16782                           
 16783                           ;stkvar	_quotient @ sp[(-4)+0]
 16784  015EEE  0EFC               	movlw	-4
 16785  015EF0  80E3               	bsf	plusw1,0,c
 16786  015EF2                     l6699:
 16787                           
 16788                           ;stkvar	_divisor @ sp[(-4)+-4]
 16789  015EF2  90D8               	bcf	status,0,c
 16790  015EF4  0EF9               	movlw	-7
 16791  015EF6  32E3               	rrcf	plusw1,f,c
 16792  015EF8  0EF8               	movlw	-8
 16793  015EFA  32E3               	rrcf	plusw1,f,c
 16794                           
 16795                           ;stkvar	_counter @ sp[(-4)+3]
 16796  015EFC  0EFF               	movlw	-1
 16797  015EFE  50E3               	movf	plusw1,w,c
 16798  015F00  6E35               	movwf	btemp^0,c
 16799  015F02  0E01               	movlw	1
 16800  015F04  5E35               	subwf	btemp^0,f,c
 16801  015F06  0EFF               	movlw	-1
 16802  015F08  0060  F0D7  FFE3   	movff	btemp,plusw1
 16803  015F0E  A4D8               	btfss	status,2,c
 16804  015F10  D7B3               	goto	u5780
 16805  015F12                     u5800:
 16806                           
 16807                           ;stkvar	_sign @ sp[(-4)+2]
 16808  015F12  0EFE               	movlw	-2
 16809  015F14  50E3               	movf	plusw1,w,c
 16810  015F16  B4D8               	btfsc	status,2,c
 16811  015F18  D006               	goto	l6707
 16812                           
 16813                           ;stkvar	_quotient @ sp[(-4)+0]
 16814                           ;stkvar	_quotient @ sp[(-4)+0]
 16815  015F1A  0EFC               	movlw	-4
 16816  015F1C  6CE3               	negf	plusw1,c
 16817  015F1E  0EFD               	movlw	-3
 16818  015F20  1EE3               	comf	plusw1,f,c
 16819  015F22  B0D8               	btfsc	status,0,c
 16820  015F24  2AE3               	incf	plusw1,f,c
 16821  015F26                     l6707:
 16822                           
 16823                           ;stkvar	_quotient @ sp[(-4)+0]
 16824  015F26  0EFC               	movlw	-4
 16825  015F28  006F FF8C  F035    	movff	plusw1,btemp
 16826  015F2E  0EFD               	movlw	-3
 16827  015F30  006F FF8C  F036    	movff	plusw1,btemp+1
 16828                           
 16829                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16830  015F36  0EF8               	movlw	248
 16831  015F38  26E1               	addwf	fsr1l,f,c
 16832  015F3A  0EFF               	movlw	255
 16833  015F3C  22E2               	addwfc	fsr1h,f,c
 16834  015F3E  0012               	return		;funcret
 16835  015F40                     __end_of___awdiv:
 16836                           	opt callstack 0
 16837                           
 16838 ;; *************** function _dtoa *****************
 16839 ;; Defined at:
 16840 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16841 ;; Parameters:    Size  Location     Type
 16842 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16843 ;;		 -> f(6), NULL(0), 
 16844 ;;  d               8  [STACK] long long 
 16845 ;; Auto vars:     Size  Location     Type
 16846 ;;  n               8  [STACK] long long 
 16847 ;;  i               2  [STACK] int 
 16848 ;;  s               2  [STACK] int 
 16849 ;;  w               2  [STACK] int 
 16850 ;;  p               2  [STACK] int 
 16851 ;; Return value:  Size  Location     Type
 16852 ;;                  2  [STACK] int 
 16853 ;; Registers used:
 16854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16855 ;; Tracked objects:
 16856 ;;		On entry : 0/4
 16857 ;;		On exit  : 0/0
 16858 ;;		Unchanged: 0/0
 16859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16864 ;;Total ram usage:        0 bytes
 16865 ;; Hardware stack levels used:    1
 16866 ;; Hardware stack levels required when called:   11
 16867 ;; This function calls:
 16868 ;;		___aodiv
 16869 ;;		___aomod
 16870 ;;		_abs
 16871 ;;		_pad
 16872 ;; This function is called by:
 16873 ;;		_vfpfcnvrt
 16874 ;; This function uses a reentrant model
 16875 ;;
 16876                           
 16877                           	psect	text55
 16878  0132E2                     __ptext55:
 16879                           	opt callstack 0
 16880  0132E2                     _dtoa:
 16881                           	opt callstack 0
 16882                           
 16883                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16884  0132E2  0E12               	movlw	18
 16885  0132E4  26E1               	addwf	fsr1l,f,c
 16886  0132E6  0E00               	movlw	0
 16887  0132E8  22E2               	addwfc	fsr1h,f,c
 16888                           
 16889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16890                           ;stkvar	_d @ sp[(-18)+-10]
 16891                           
 16892                           ;incstack = 0
 16893  0132EA  0EE4               	movlw	228
 16894  0132EC  24E1               	addwf	fsr1l,w,c
 16895  0132EE  6ED9               	movwf	fsr2l,c
 16896  0132F0  0EFF               	movlw	255
 16897  0132F2  20E2               	addwfc	fsr1h,w,c
 16898  0132F4  6EDA               	movwf	fsr2h,c
 16899                           
 16900                           ;stkvar	_n @ sp[(-18)+2]
 16901  0132F6  0E08               	movlw	8
 16902  0132F8  6E35               	movwf	btemp^0,c
 16903  0132FA  0EF0               	movlw	-16
 16904  0132FC                     us841999:
 16905  0132FC  006F FF7B FFE3     	movff	postinc2,plusw1
 16906  013302  28E8               	incf	wreg,w,c
 16907  013304  2E35               	decfsz	btemp^0,f,c
 16908  013306  D7FA               	bra	us841999
 16909                           
 16910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16911                           ;stkvar	_n @ sp[(-18)+2]
 16912  013308  0EF7               	movlw	-9
 16913  01330A  AEE3               	btfss	plusw1,7,c
 16914  01330C  D002               	goto	u8420
 16915  01330E  0E01               	movlw	1
 16916  013310  D001               	goto	u8430
 16917  013312                     u8420:
 16918  013312  0E00               	movlw	0
 16919  013314                     u8430:
 16920  013314  6E3F               	movwf	(btemp+10)^0,c
 16921  013316  6A40               	clrf	(btemp+11)^0,c
 16922                           
 16923                           ;stkvar	_s @ sp[(-18)+12]
 16924  013318  0EFA               	movlw	-6
 16925  01331A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16926  013320  0EFB               	movlw	-5
 16927  013322  0060  F103  FFE3   	movff	btemp+11,plusw1
 16928                           
 16929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16930                           ;stkvar	_s @ sp[(-18)+12]
 16931  013328  0EFA               	movlw	-6
 16932  01332A  006F FF8C  F035    	movff	plusw1,btemp
 16933  013330  0EFB               	movlw	-5
 16934  013332  50E3               	movf	plusw1,w,c
 16935  013334  1035               	iorwf	btemp^0,w,c
 16936  013336  B4D8               	btfsc	status,2,c
 16937  013338  D025               	goto	u8450
 16938                           
 16939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16940                           ;stkvar	_n @ sp[(-18)+2]
 16941                           ;stkvar	_n @ sp[(-18)+2]
 16942  01333A  0EF0               	movlw	-16
 16943  01333C  6CE3               	negf	plusw1,c
 16944  01333E  0EF1               	movlw	-15
 16945  013340  1EE3               	comf	plusw1,f,c
 16946  013342  0EF2               	movlw	-14
 16947  013344  1EE3               	comf	plusw1,f,c
 16948  013346  0EF3               	movlw	-13
 16949  013348  1EE3               	comf	plusw1,f,c
 16950  01334A  0EF4               	movlw	-12
 16951  01334C  1EE3               	comf	plusw1,f,c
 16952  01334E  0EF5               	movlw	-11
 16953  013350  1EE3               	comf	plusw1,f,c
 16954  013352  0EF6               	movlw	-10
 16955  013354  1EE3               	comf	plusw1,f,c
 16956  013356  0EF7               	movlw	-9
 16957  013358  1EE3               	comf	plusw1,f,c
 16958  01335A  E314               	bnc	u8450
 16959  01335C  0EF1               	movlw	-15
 16960  01335E  2AE3               	incf	plusw1,f,c
 16961  013360  E311               	bnc	u8450
 16962  013362  0EF2               	movlw	-14
 16963  013364  2AE3               	incf	plusw1,f,c
 16964  013366  E30E               	bnc	u8450
 16965  013368  0EF3               	movlw	-13
 16966  01336A  2AE3               	incf	plusw1,f,c
 16967  01336C  E30B               	bnc	u8450
 16968  01336E  0EF4               	movlw	-12
 16969  013370  2AE3               	incf	plusw1,f,c
 16970  013372  E308               	bnc	u8450
 16971  013374  0EF5               	movlw	-11
 16972  013376  2AE3               	incf	plusw1,f,c
 16973  013378  E305               	bnc	u8450
 16974  01337A  0EF6               	movlw	-10
 16975  01337C  2AE3               	incf	plusw1,f,c
 16976  01337E  E302               	bnc	u8450
 16977  013380  0EF7               	movlw	-9
 16978  013382  2AE3               	incf	plusw1,f,c
 16979  013384                     u8450:
 16980                           
 16981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16982  013384  AE21               	btfss	(_prec+1)^0,7,c
 16983                           
 16984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16985  013386  9222               	bcf	_flags^0,1,c
 16986                           
 16987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16988  013388  BE21               	btfsc	(_prec+1)^0,7,c
 16989  01338A  D005               	goto	u8470
 16990  01338C  5021               	movf	(_prec+1)^0,w,c
 16991  01338E  E110               	bnz	l8935
 16992  013390  0420               	decf	_prec^0,w,c
 16993  013392  B0D8               	btfsc	status,0,c
 16994  013394  D00D               	goto	l8935
 16995  013396                     u8470:
 16996  013396  0E01               	movlw	1
 16997  013398  6E3F               	movwf	(btemp+10)^0,c
 16998  01339A  0E00               	movlw	0
 16999  01339C  6E40               	movwf	(btemp+11)^0,c
 17000                           
 17001                           ;stkvar	_p @ sp[(-18)+16]
 17002  01339E  0EFE               	movlw	-2
 17003  0133A0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17004  0133A6  0EFF               	movlw	-1
 17005  0133A8  0060  F103  FFE3   	movff	btemp+11,plusw1
 17006  0133AE  D008               	goto	l1749
 17007  0133B0                     l8935:
 17008                           
 17009                           ;stkvar	_p @ sp[(-18)+16]
 17010  0133B0  0EFE               	movlw	-2
 17011  0133B2  0060  F083  FFE3   	movff	_prec,plusw1
 17012  0133B8  0EFF               	movlw	-1
 17013  0133BA  0060  F087  FFE3   	movff	_prec+1,plusw1
 17014  0133C0                     l1749:
 17015                           
 17016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17017                           ;stkvar	_w @ sp[(-18)+14]
 17018  0133C0  0EFC               	movlw	-4
 17019  0133C2  0060  F07B  FFE3   	movff	_width,plusw1
 17020  0133C8  0EFD               	movlw	-3
 17021  0133CA  0060  F07F  FFE3   	movff	_width+1,plusw1
 17022                           
 17023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17024                           ;stkvar	_s @ sp[(-18)+12]
 17025  0133D0  0EFA               	movlw	-6
 17026  0133D2  006F FF8C  F035    	movff	plusw1,btemp
 17027  0133D8  0EFB               	movlw	-5
 17028  0133DA  50E3               	movf	plusw1,w,c
 17029  0133DC  1035               	iorwf	btemp^0,w,c
 17030  0133DE  A4D8               	btfss	status,2,c
 17031  0133E0  D002               	goto	u8490
 17032  0133E2  A422               	btfss	_flags^0,2,c
 17033  0133E4  D00A               	goto	l8943
 17034  0133E6                     u8490:
 17035                           
 17036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17037                           ;stkvar	_w @ sp[(-18)+14]
 17038  0133E6  50E1               	movf	fsr1l,w,c
 17039  0133E8  0FFC               	addlw	-4
 17040  0133EA  6ED9               	movwf	fsr2l,c
 17041  0133EC  50E2               	movf	fsr1h,w,c
 17042  0133EE  6EDA               	movwf	fsr2h,c
 17043  0133F0  0EFF               	movlw	255
 17044  0133F2  22DA               	addwfc	fsr2h,f,c
 17045  0133F4  06DE               	decf	postinc2,f,c
 17046  0133F6  0E00               	movlw	0
 17047  0133F8  5ADD               	subwfb	postdec2,f,c
 17048  0133FA                     l8943:
 17049                           
 17050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17051  0133FA  0E4F               	movlw	79
 17052  0133FC  6E3F               	movwf	(btemp+10)^0,c
 17053  0133FE  0E00               	movlw	0
 17054  013400  6E40               	movwf	(btemp+11)^0,c
 17055                           
 17056                           ;stkvar	_i @ sp[(-18)+10]
 17057  013402  0EF8               	movlw	-8
 17058  013404  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17059  01340A  0EF9               	movlw	-7
 17060  01340C  0060  F103  FFE3   	movff	btemp+11,plusw1
 17061                           
 17062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17063  013412  0101               	movlb	1	; () banked
 17064  013414  6BF3               	clrf	(_dbuf+79)& (0+255),b
 17065                           
 17066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17067  013416  D109               	goto	l8957
 17068  013418                     l8947:
 17069                           
 17070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17071                           ;stkvar	_i @ sp[(-18)+10]
 17072  013418  50E1               	movf	fsr1l,w,c
 17073  01341A  0FF8               	addlw	-8
 17074  01341C  6ED9               	movwf	fsr2l,c
 17075  01341E  50E2               	movf	fsr1h,w,c
 17076  013420  6EDA               	movwf	fsr2h,c
 17077  013422  0EFF               	movlw	255
 17078  013424  22DA               	addwfc	fsr2h,f,c
 17079  013426  06DE               	decf	postinc2,f,c
 17080  013428  0E00               	movlw	0
 17081  01342A  5ADD               	subwfb	postdec2,f,c
 17082                           
 17083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17084  01342C  0E0A               	movlw	10
 17085  01342E  6EE6               	movwf	postinc1,c
 17086  013430  0E00               	movlw	0
 17087  013432  6EE6               	movwf	postinc1,c
 17088  013434  0E00               	movlw	0
 17089  013436  6EE6               	movwf	postinc1,c
 17090  013438  0E00               	movlw	0
 17091  01343A  6EE6               	movwf	postinc1,c
 17092  01343C  0E00               	movlw	0
 17093  01343E  6EE6               	movwf	postinc1,c
 17094  013440  0E00               	movlw	0
 17095  013442  6EE6               	movwf	postinc1,c
 17096  013444  0E00               	movlw	0
 17097  013446  6EE6               	movwf	postinc1,c
 17098  013448  0E00               	movlw	0
 17099  01344A  6EE6               	movwf	postinc1,c
 17100                           
 17101                           ;stkvar	_n @ sp[(-26)+2]
 17102  01344C  50E1               	movf	fsr1l,w,c
 17103  01344E  0FE8               	addlw	-24
 17104  013450  6ED9               	movwf	fsr2l,c
 17105  013452  50E2               	movf	fsr1h,w,c
 17106  013454  6EDA               	movwf	fsr2h,c
 17107  013456  0EFF               	movlw	255
 17108  013458  22DA               	addwfc	fsr2h,f,c
 17109  01345A  006F FF7B FFE6     	movff	postinc2,postinc1
 17110  013460  006F FF7B FFE6     	movff	postinc2,postinc1
 17111  013466  006F FF7B FFE6     	movff	postinc2,postinc1
 17112  01346C  006F FF7B FFE6     	movff	postinc2,postinc1
 17113  013472  006F FF7B FFE6     	movff	postinc2,postinc1
 17114  013478  006F FF7B FFE6     	movff	postinc2,postinc1
 17115  01347E  006F FF7B FFE6     	movff	postinc2,postinc1
 17116  013484  006F FF7B FFE6     	movff	postinc2,postinc1
 17117  01348A  ECC5  F0A7         	call	___aomod	;wreg free
 17118  01348E  52E5               	movf	postdec1,f,c
 17119  013490  006F FF9C  F04C    	movff	indf1,btemp+23
 17120  013496  52E5               	movf	postdec1,f,c
 17121  013498  006F FF9C  F04B    	movff	indf1,btemp+22
 17122  01349E  52E5               	movf	postdec1,f,c
 17123  0134A0  006F FF9C  F04A    	movff	indf1,btemp+21
 17124  0134A6  52E5               	movf	postdec1,f,c
 17125  0134A8  006F FF9C  F049    	movff	indf1,btemp+20
 17126  0134AE  52E5               	movf	postdec1,f,c
 17127  0134B0  006F FF9C  F048    	movff	indf1,btemp+19
 17128  0134B6  52E5               	movf	postdec1,f,c
 17129  0134B8  006F FF9C  F047    	movff	indf1,btemp+18
 17130  0134BE  52E5               	movf	postdec1,f,c
 17131  0134C0  006F FF9C  F046    	movff	indf1,btemp+17
 17132  0134C6  52E5               	movf	postdec1,f,c
 17133  0134C8  006F FF9C  F045    	movff	indf1,btemp+16
 17134  0134CE  0EF8               	movlw	248
 17135  0134D0  26E1               	addwf	fsr1l,f,c
 17136  0134D2  0EFF               	movlw	255
 17137  0134D4  22E2               	addwfc	fsr1h,f,c
 17138  0134D6  0060  F114  F03F   	movff	btemp+16,btemp+10
 17139  0134DC  0060  F118  F040   	movff	btemp+17,btemp+11
 17140  0134E2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17141  0134E8  0060  F103  FFE6   	movff	btemp+11,postinc1
 17142  0134EE  ECE1  F0BA         	call	_abs	;wreg free
 17143  0134F2  0E30               	movlw	48
 17144  0134F4  2635               	addwf	btemp^0,f,c
 17145                           
 17146                           ;stkvar	_i @ sp[(-18)+10]
 17147  0134F6  0EF8               	movlw	-8
 17148  0134F8  006F FF8C  F03F    	movff	plusw1,btemp+10
 17149  0134FE  0EF9               	movlw	-7
 17150  013500  006F FF8C  F040    	movff	plusw1,btemp+11
 17151  013506  0EA4               	movlw	low _dbuf
 17152  013508  243F               	addwf	(btemp+10)^0,w,c
 17153  01350A  6ED9               	movwf	fsr2l,c
 17154  01350C  0E01               	movlw	high _dbuf
 17155  01350E  2040               	addwfc	(btemp+11)^0,w,c
 17156  013510  6EDA               	movwf	fsr2h,c
 17157  013512  0060  F0D7  FFDF   	movff	btemp,indf2
 17158                           
 17159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17160                           ;stkvar	_p @ sp[(-18)+16]
 17161  013518  50E1               	movf	fsr1l,w,c
 17162  01351A  0FFE               	addlw	-2
 17163  01351C  6ED9               	movwf	fsr2l,c
 17164  01351E  50E2               	movf	fsr1h,w,c
 17165  013520  6EDA               	movwf	fsr2h,c
 17166  013522  0EFF               	movlw	255
 17167  013524  22DA               	addwfc	fsr2h,f,c
 17168  013526  06DE               	decf	postinc2,f,c
 17169  013528  0E00               	movlw	0
 17170  01352A  5ADD               	subwfb	postdec2,f,c
 17171                           
 17172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17173                           ;stkvar	_w @ sp[(-18)+14]
 17174  01352C  50E1               	movf	fsr1l,w,c
 17175  01352E  0FFC               	addlw	-4
 17176  013530  6ED9               	movwf	fsr2l,c
 17177  013532  50E2               	movf	fsr1h,w,c
 17178  013534  6EDA               	movwf	fsr2h,c
 17179  013536  0EFF               	movlw	255
 17180  013538  22DA               	addwfc	fsr2h,f,c
 17181  01353A  06DE               	decf	postinc2,f,c
 17182  01353C  0E00               	movlw	0
 17183  01353E  5ADD               	subwfb	postdec2,f,c
 17184                           
 17185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17186  013540  0E0A               	movlw	10
 17187  013542  6EE6               	movwf	postinc1,c
 17188  013544  0E00               	movlw	0
 17189  013546  6EE6               	movwf	postinc1,c
 17190  013548  0E00               	movlw	0
 17191  01354A  6EE6               	movwf	postinc1,c
 17192  01354C  0E00               	movlw	0
 17193  01354E  6EE6               	movwf	postinc1,c
 17194  013550  0E00               	movlw	0
 17195  013552  6EE6               	movwf	postinc1,c
 17196  013554  0E00               	movlw	0
 17197  013556  6EE6               	movwf	postinc1,c
 17198  013558  0E00               	movlw	0
 17199  01355A  6EE6               	movwf	postinc1,c
 17200  01355C  0E00               	movlw	0
 17201  01355E  6EE6               	movwf	postinc1,c
 17202                           
 17203                           ;stkvar	_n @ sp[(-26)+2]
 17204  013560  50E1               	movf	fsr1l,w,c
 17205  013562  0FE8               	addlw	-24
 17206  013564  6ED9               	movwf	fsr2l,c
 17207  013566  50E2               	movf	fsr1h,w,c
 17208  013568  6EDA               	movwf	fsr2h,c
 17209  01356A  0EFF               	movlw	255
 17210  01356C  22DA               	addwfc	fsr2h,f,c
 17211  01356E  006F FF7B FFE6     	movff	postinc2,postinc1
 17212  013574  006F FF7B FFE6     	movff	postinc2,postinc1
 17213  01357A  006F FF7B FFE6     	movff	postinc2,postinc1
 17214  013580  006F FF7B FFE6     	movff	postinc2,postinc1
 17215  013586  006F FF7B FFE6     	movff	postinc2,postinc1
 17216  01358C  006F FF7B FFE6     	movff	postinc2,postinc1
 17217  013592  006F FF7B FFE6     	movff	postinc2,postinc1
 17218  013598  006F FF7B FFE6     	movff	postinc2,postinc1
 17219  01359E  EC1C  F0A4         	call	___aodiv	;wreg free
 17220  0135A2  52E5               	movf	postdec1,f,c
 17221  0135A4  006F FF9C  F04C    	movff	indf1,btemp+23
 17222  0135AA  52E5               	movf	postdec1,f,c
 17223  0135AC  006F FF9C  F04B    	movff	indf1,btemp+22
 17224  0135B2  52E5               	movf	postdec1,f,c
 17225  0135B4  006F FF9C  F04A    	movff	indf1,btemp+21
 17226  0135BA  52E5               	movf	postdec1,f,c
 17227  0135BC  006F FF9C  F049    	movff	indf1,btemp+20
 17228  0135C2  52E5               	movf	postdec1,f,c
 17229  0135C4  006F FF9C  F048    	movff	indf1,btemp+19
 17230  0135CA  52E5               	movf	postdec1,f,c
 17231  0135CC  006F FF9C  F047    	movff	indf1,btemp+18
 17232  0135D2  52E5               	movf	postdec1,f,c
 17233  0135D4  006F FF9C  F046    	movff	indf1,btemp+17
 17234  0135DA  52E5               	movf	postdec1,f,c
 17235  0135DC  006F FF9C  F045    	movff	indf1,btemp+16
 17236  0135E2  0EF8               	movlw	248
 17237  0135E4  26E1               	addwf	fsr1l,f,c
 17238  0135E6  0EFF               	movlw	255
 17239  0135E8  22E2               	addwfc	fsr1h,f,c
 17240                           
 17241                           ;stkvar	_n @ sp[(-18)+2]
 17242  0135EA  0EF0               	movlw	-16
 17243  0135EC  0060  F117  FFE3   	movff	btemp+16,plusw1
 17244  0135F2  0EF1               	movlw	-15
 17245  0135F4  0060  F11B  FFE3   	movff	btemp+17,plusw1
 17246  0135FA  0EF2               	movlw	-14
 17247  0135FC  0060  F11F  FFE3   	movff	btemp+18,plusw1
 17248  013602  0EF3               	movlw	-13
 17249  013604  0060  F123  FFE3   	movff	btemp+19,plusw1
 17250  01360A  0EF4               	movlw	-12
 17251  01360C  0060  F127  FFE3   	movff	btemp+20,plusw1
 17252  013612  0EF5               	movlw	-11
 17253  013614  0060  F12B  FFE3   	movff	btemp+21,plusw1
 17254  01361A  0EF6               	movlw	-10
 17255  01361C  0060  F12F  FFE3   	movff	btemp+22,plusw1
 17256  013622  0EF7               	movlw	-9
 17257  013624  0060  F133  FFE3   	movff	btemp+23,plusw1
 17258  01362A                     l8957:
 17259                           
 17260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17261                           ;stkvar	_i @ sp[(-18)+10]
 17262  01362A  0EF9               	movlw	-7
 17263  01362C  BEE3               	btfsc	plusw1,7,c
 17264  01362E  D036               	goto	u8540
 17265  013630  0EF9               	movlw	-7
 17266  013632  50E3               	movf	plusw1,w,c
 17267  013634  E104               	bnz	u8500
 17268  013636  0EF8               	movlw	-8
 17269  013638  04E3               	decf	plusw1,w,c
 17270  01363A  A0D8               	btfss	status,0,c
 17271  01363C  D02F               	goto	u8540
 17272  01363E                     u8500:
 17273                           
 17274                           ;stkvar	_n @ sp[(-18)+2]
 17275  01363E  0EF0               	movlw	-16
 17276  013640  50E3               	movf	plusw1,w,c
 17277  013642  E115               	bnz	u8511
 17278  013644  0EF1               	movlw	-15
 17279  013646  50E3               	movf	plusw1,w,c
 17280  013648  E112               	bnz	u8511
 17281  01364A  0EF2               	movlw	-14
 17282  01364C  50E3               	movf	plusw1,w,c
 17283  01364E  E10F               	bnz	u8511
 17284  013650  0EF3               	movlw	-13
 17285  013652  50E3               	movf	plusw1,w,c
 17286  013654  E10C               	bnz	u8511
 17287  013656  0EF4               	movlw	-12
 17288  013658  50E3               	movf	plusw1,w,c
 17289  01365A  E109               	bnz	u8511
 17290  01365C  0EF5               	movlw	-11
 17291  01365E  50E3               	movf	plusw1,w,c
 17292  013660  E106               	bnz	u8511
 17293  013662  0EF6               	movlw	-10
 17294  013664  50E3               	movf	plusw1,w,c
 17295  013666  E103               	bnz	u8511
 17296  013668  0EF7               	movlw	-9
 17297  01366A  50E3               	movf	plusw1,w,c
 17298  01366C  A4D8               	btfss	status,2,c
 17299  01366E                     u8511:
 17300  01366E  D6D4               	goto	l8947
 17301                           
 17302                           ;stkvar	_p @ sp[(-18)+16]
 17303  013670  0EFF               	movlw	-1
 17304  013672  BEE3               	btfsc	plusw1,7,c
 17305  013674  D007               	goto	u8520
 17306  013676  0EFF               	movlw	-1
 17307  013678  50E3               	movf	plusw1,w,c
 17308  01367A  E103               	bnz	u8521
 17309  01367C  0EFE               	movlw	-2
 17310  01367E  04E3               	decf	plusw1,w,c
 17311  013680  B0D8               	btfsc	status,0,c
 17312  013682                     u8521:
 17313  013682  D6CA               	goto	l8947
 17314  013684                     u8520:
 17315                           
 17316                           ;stkvar	_w @ sp[(-18)+14]
 17317  013684  0EFD               	movlw	-3
 17318  013686  BEE3               	btfsc	plusw1,7,c
 17319  013688  D009               	goto	u8540
 17320  01368A  0EFD               	movlw	-3
 17321  01368C  50E3               	movf	plusw1,w,c
 17322  01368E  E104               	bnz	u8530
 17323  013690  0EFC               	movlw	-4
 17324  013692  04E3               	decf	plusw1,w,c
 17325  013694  A0D8               	btfss	status,0,c
 17326  013696  D002               	goto	u8540
 17327  013698                     u8530:
 17328  013698  B222               	btfsc	_flags^0,1,c
 17329  01369A  D6BE               	goto	l8947
 17330  01369C                     u8540:
 17331                           
 17332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17333                           ;stkvar	_s @ sp[(-18)+12]
 17334  01369C  0EFA               	movlw	-6
 17335  01369E  006F FF8C  F035    	movff	plusw1,btemp
 17336  0136A4  0EFB               	movlw	-5
 17337  0136A6  50E3               	movf	plusw1,w,c
 17338  0136A8  1035               	iorwf	btemp^0,w,c
 17339  0136AA  A4D8               	btfss	status,2,c
 17340  0136AC  D002               	goto	u8560
 17341  0136AE  A422               	btfss	_flags^0,2,c
 17342  0136B0  D033               	goto	l8981
 17343  0136B2                     u8560:
 17344                           
 17345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17346                           ;stkvar	_i @ sp[(-18)+10]
 17347  0136B2  50E1               	movf	fsr1l,w,c
 17348  0136B4  0FF8               	addlw	-8
 17349  0136B6  6ED9               	movwf	fsr2l,c
 17350  0136B8  50E2               	movf	fsr1h,w,c
 17351  0136BA  6EDA               	movwf	fsr2h,c
 17352  0136BC  0EFF               	movlw	255
 17353  0136BE  22DA               	addwfc	fsr2h,f,c
 17354  0136C0  06DE               	decf	postinc2,f,c
 17355  0136C2  0E00               	movlw	0
 17356  0136C4  5ADD               	subwfb	postdec2,f,c
 17357                           
 17358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17359                           ;stkvar	_s @ sp[(-18)+12]
 17360  0136C6  0EFA               	movlw	-6
 17361  0136C8  006F FF8C  F035    	movff	plusw1,btemp
 17362  0136CE  0EFB               	movlw	-5
 17363  0136D0  50E3               	movf	plusw1,w,c
 17364  0136D2  1035               	iorwf	btemp^0,w,c
 17365  0136D4  A4D8               	btfss	status,2,c
 17366  0136D6  D002               	goto	l8977
 17367  0136D8  0E2B               	movlw	43
 17368  0136DA  D001               	goto	L15
 17369  0136DC                     l8977:
 17370  0136DC  0E2D               	movlw	45
 17371  0136DE                     L15:
 17372  0136DE  6E3F               	movwf	(btemp+10)^0,c
 17373  0136E0  0E00               	movlw	0
 17374  0136E2  6E40               	movwf	(btemp+11)^0,c
 17375                           
 17376                           ;stkvar	_dtoa$4080 @ sp[(-18)+0]
 17377  0136E4  0EEE               	movlw	-18
 17378  0136E6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17379  0136EC  0EEF               	movlw	-17
 17380  0136EE  0060  F103  FFE3   	movff	btemp+11,plusw1
 17381                           
 17382                           ;stkvar	_dtoa$4080 @ sp[(-18)+0]
 17383                           ;stkvar	_i @ sp[(-18)+10]
 17384  0136F4  0EF8               	movlw	-8
 17385  0136F6  006F FF8C  F03F    	movff	plusw1,btemp+10
 17386  0136FC  0EF9               	movlw	-7
 17387  0136FE  006F FF8C  F040    	movff	plusw1,btemp+11
 17388  013704  0EA4               	movlw	low _dbuf
 17389  013706  243F               	addwf	(btemp+10)^0,w,c
 17390  013708  6ED9               	movwf	fsr2l,c
 17391  01370A  0E01               	movlw	high _dbuf
 17392  01370C  2040               	addwfc	(btemp+11)^0,w,c
 17393  01370E  6EDA               	movwf	fsr2h,c
 17394  013710  0EEE               	movlw	-18
 17395  013712  006F FF8F FFDF     	movff	plusw1,indf2
 17396  013718                     l8981:
 17397                           
 17398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17399                           ;stkvar	_w @ sp[(-18)+14]
 17400  013718  0EFC               	movlw	-4
 17401  01371A  006F FF8F FFE6     	movff	plusw1,postinc1
 17402  013720  006F FF8F FFE6     	movff	plusw1,postinc1
 17403                           
 17404                           ;stkvar	_i @ sp[(-20)+10]
 17405  013726  0EA4               	movlw	low _dbuf
 17406  013728  6E3F               	movwf	(btemp+10)^0,c
 17407  01372A  0E01               	movlw	high _dbuf
 17408  01372C  6E40               	movwf	(btemp+11)^0,c
 17409  01372E  0EF6               	movlw	-10
 17410  013730  50E3               	movf	plusw1,w,c
 17411  013732  263F               	addwf	(btemp+10)^0,f,c
 17412  013734  0EF7               	movlw	-9
 17413  013736  50E3               	movf	plusw1,w,c
 17414  013738  2240               	addwfc	(btemp+11)^0,f,c
 17415  01373A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17416  013740  0060  F103  FFE6   	movff	btemp+11,postinc1
 17417                           
 17418                           ;stkvar	_fp @ sp[(-22)+-2]
 17419  013746  0EE8               	movlw	-24
 17420  013748  006F FF8F FFE6     	movff	plusw1,postinc1
 17421  01374E  006F FF8F FFE6     	movff	plusw1,postinc1
 17422  013754  EC55  F0B1         	call	_pad	;wreg free
 17423                           
 17424                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17425  013758  0EE4               	movlw	228
 17426  01375A  26E1               	addwf	fsr1l,f,c
 17427  01375C  0EFF               	movlw	255
 17428  01375E  22E2               	addwfc	fsr1h,f,c
 17429  013760  0012               	return		;funcret
 17430  013762                     __end_of_dtoa:
 17431                           	opt callstack 0
 17432                           
 17433 ;; *************** function _abs *****************
 17434 ;; Defined at:
 17435 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17436 ;; Parameters:    Size  Location     Type
 17437 ;;  a               2  [STACK] int 
 17438 ;; Auto vars:     Size  Location     Type
 17439 ;;		None
 17440 ;; Return value:  Size  Location     Type
 17441 ;;                  2  [STACK] int 
 17442 ;; Registers used:
 17443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17444 ;; Tracked objects:
 17445 ;;		On entry : 0/1
 17446 ;;		On exit  : 0/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17453 ;;Total ram usage:        0 bytes
 17454 ;; Hardware stack levels used:    1
 17455 ;; Hardware stack levels required when called:    6
 17456 ;; This function calls:
 17457 ;;		Nothing
 17458 ;; This function is called by:
 17459 ;;		_dtoa
 17460 ;; This function uses a reentrant model
 17461 ;;
 17462                           
 17463                           	psect	text56
 17464  0175C2                     __ptext56:
 17465                           	opt callstack 0
 17466  0175C2                     _abs:
 17467                           	opt callstack 17
 17468                           
 17469                           ;stkvar	_a @ sp[(0)+-2]
 17470                           
 17471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17472                           ;incstack = 0
 17473  0175C2  0EFF               	movlw	-1
 17474  0175C4  BEE3               	btfsc	plusw1,7,c
 17475  0175C6  D007               	goto	u4760
 17476  0175C8  0EFF               	movlw	-1
 17477  0175CA  50E3               	movf	plusw1,w,c
 17478  0175CC  E112               	bnz	l6161
 17479  0175CE  0EFE               	movlw	-2
 17480  0175D0  04E3               	decf	plusw1,w,c
 17481  0175D2  B0D8               	btfsc	status,0,c
 17482  0175D4  D00E               	goto	l6161
 17483  0175D6                     u4760:
 17484                           
 17485                           ;stkvar	_a @ sp[(0)+-2]
 17486  0175D6  0EFE               	movlw	-2
 17487  0175D8  006F FF8C  F035    	movff	plusw1,btemp
 17488  0175DE  1E35               	comf	btemp^0,f,c
 17489  0175E0  0EFF               	movlw	-1
 17490  0175E2  006F FF8C  F036    	movff	plusw1,btemp+1
 17491  0175E8  1E36               	comf	(btemp+1)^0,f,c
 17492  0175EA  2A35               	incf	btemp^0,f,c
 17493  0175EC  B4D8               	btfsc	status,2,c
 17494  0175EE  2A36               	incf	(btemp+1)^0,f,c
 17495  0175F0  D008               	goto	l2652
 17496  0175F2                     l6161:
 17497                           
 17498                           ;stkvar	_a @ sp[(0)+-2]
 17499  0175F2  0EFE               	movlw	-2
 17500  0175F4  006F FF8C  F035    	movff	plusw1,btemp
 17501  0175FA  0EFF               	movlw	-1
 17502  0175FC  006F FF8C  F036    	movff	plusw1,btemp+1
 17503  017602                     l2652:
 17504                           
 17505                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17506  017602  52E5               	movf	postdec1,f,c
 17507  017604  52E5               	movf	postdec1,f,c
 17508  017606  0012               	return		;funcret
 17509  017608                     __end_of_abs:
 17510                           	opt callstack 0
 17511                           
 17512 ;; *************** function ___aomod *****************
 17513 ;; Defined at:
 17514 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17515 ;; Parameters:    Size  Location     Type
 17516 ;;  dividend        8  [STACK] long long 
 17517 ;;  divisor         8  [STACK] long long 
 17518 ;; Auto vars:     Size  Location     Type
 17519 ;;  sign            1  [STACK] unsigned char 
 17520 ;;  counter         1  [STACK] unsigned char 
 17521 ;; Return value:  Size  Location     Type
 17522 ;;                  8  [STACK] long long 
 17523 ;; Registers used:
 17524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17525 ;; Tracked objects:
 17526 ;;		On entry : 0/1
 17527 ;;		On exit  : 0/0
 17528 ;;		Unchanged: 0/0
 17529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17534 ;;Total ram usage:        0 bytes
 17535 ;; Hardware stack levels used:    1
 17536 ;; Hardware stack levels required when called:    6
 17537 ;; This function calls:
 17538 ;;		Nothing
 17539 ;; This function is called by:
 17540 ;;		_dtoa
 17541 ;; This function uses a reentrant model
 17542 ;;
 17543                           
 17544                           	psect	text57
 17545  014F8A                     __ptext57:
 17546                           	opt callstack 0
 17547  014F8A                     ___aomod:
 17548                           	opt callstack 0
 17549                           
 17550                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17551  014F8A  52E6               	movf	postinc1,f,c
 17552  014F8C  52E6               	movf	postinc1,f,c
 17553                           
 17554                           ;stkvar	_sign @ sp[(-2)+0]
 17555                           
 17556                           ;incstack = 0
 17557  014F8E  0EFE               	movlw	-2
 17558  014F90  6AE3               	clrf	plusw1,c
 17559                           
 17560                           ;stkvar	_dividend @ sp[(-2)+-8]
 17561  014F92  0EFD               	movlw	-3
 17562  014F94  AEE3               	btfss	plusw1,7,c
 17563  014F96  D028               	goto	l6319
 17564                           
 17565                           ;stkvar	_dividend @ sp[(-2)+-8]
 17566                           ;stkvar	_dividend @ sp[(-2)+-8]
 17567  014F98  0EF6               	movlw	-10
 17568  014F9A  6CE3               	negf	plusw1,c
 17569  014F9C  0EF7               	movlw	-9
 17570  014F9E  1EE3               	comf	plusw1,f,c
 17571  014FA0  0EF8               	movlw	-8
 17572  014FA2  1EE3               	comf	plusw1,f,c
 17573  014FA4  0EF9               	movlw	-7
 17574  014FA6  1EE3               	comf	plusw1,f,c
 17575  014FA8  0EFA               	movlw	-6
 17576  014FAA  1EE3               	comf	plusw1,f,c
 17577  014FAC  0EFB               	movlw	-5
 17578  014FAE  1EE3               	comf	plusw1,f,c
 17579  014FB0  0EFC               	movlw	-4
 17580  014FB2  1EE3               	comf	plusw1,f,c
 17581  014FB4  0EFD               	movlw	-3
 17582  014FB6  1EE3               	comf	plusw1,f,c
 17583  014FB8  E314               	bnc	u5190
 17584  014FBA  0EF7               	movlw	-9
 17585  014FBC  2AE3               	incf	plusw1,f,c
 17586  014FBE  E311               	bnc	u5190
 17587  014FC0  0EF8               	movlw	-8
 17588  014FC2  2AE3               	incf	plusw1,f,c
 17589  014FC4  E30E               	bnc	u5190
 17590  014FC6  0EF9               	movlw	-7
 17591  014FC8  2AE3               	incf	plusw1,f,c
 17592  014FCA  E30B               	bnc	u5190
 17593  014FCC  0EFA               	movlw	-6
 17594  014FCE  2AE3               	incf	plusw1,f,c
 17595  014FD0  E308               	bnc	u5190
 17596  014FD2  0EFB               	movlw	-5
 17597  014FD4  2AE3               	incf	plusw1,f,c
 17598  014FD6  E305               	bnc	u5190
 17599  014FD8  0EFC               	movlw	-4
 17600  014FDA  2AE3               	incf	plusw1,f,c
 17601  014FDC  E302               	bnc	u5190
 17602  014FDE  0EFD               	movlw	-3
 17603  014FE0  2AE3               	incf	plusw1,f,c
 17604  014FE2                     u5190:
 17605                           
 17606                           ;stkvar	_sign @ sp[(-2)+0]
 17607  014FE2  0EFE               	movlw	-2
 17608  014FE4  6AE3               	clrf	plusw1,c
 17609  014FE6  2AE3               	incf	plusw1,f,c
 17610  014FE8                     l6319:
 17611                           
 17612                           ;stkvar	_divisor @ sp[(-2)+-16]
 17613  014FE8  0EF5               	movlw	-11
 17614  014FEA  AEE3               	btfss	plusw1,7,c
 17615  014FEC  D025               	goto	u5210
 17616                           
 17617                           ;stkvar	_divisor @ sp[(-2)+-16]
 17618                           ;stkvar	_divisor @ sp[(-2)+-16]
 17619  014FEE  0EEE               	movlw	-18
 17620  014FF0  6CE3               	negf	plusw1,c
 17621  014FF2  0EEF               	movlw	-17
 17622  014FF4  1EE3               	comf	plusw1,f,c
 17623  014FF6  0EF0               	movlw	-16
 17624  014FF8  1EE3               	comf	plusw1,f,c
 17625  014FFA  0EF1               	movlw	-15
 17626  014FFC  1EE3               	comf	plusw1,f,c
 17627  014FFE  0EF2               	movlw	-14
 17628  015000  1EE3               	comf	plusw1,f,c
 17629  015002  0EF3               	movlw	-13
 17630  015004  1EE3               	comf	plusw1,f,c
 17631  015006  0EF4               	movlw	-12
 17632  015008  1EE3               	comf	plusw1,f,c
 17633  01500A  0EF5               	movlw	-11
 17634  01500C  1EE3               	comf	plusw1,f,c
 17635  01500E  E314               	bnc	u5210
 17636  015010  0EEF               	movlw	-17
 17637  015012  2AE3               	incf	plusw1,f,c
 17638  015014  E311               	bnc	u5210
 17639  015016  0EF0               	movlw	-16
 17640  015018  2AE3               	incf	plusw1,f,c
 17641  01501A  E30E               	bnc	u5210
 17642  01501C  0EF1               	movlw	-15
 17643  01501E  2AE3               	incf	plusw1,f,c
 17644  015020  E30B               	bnc	u5210
 17645  015022  0EF2               	movlw	-14
 17646  015024  2AE3               	incf	plusw1,f,c
 17647  015026  E308               	bnc	u5210
 17648  015028  0EF3               	movlw	-13
 17649  01502A  2AE3               	incf	plusw1,f,c
 17650  01502C  E305               	bnc	u5210
 17651  01502E  0EF4               	movlw	-12
 17652  015030  2AE3               	incf	plusw1,f,c
 17653  015032  E302               	bnc	u5210
 17654  015034  0EF5               	movlw	-11
 17655  015036  2AE3               	incf	plusw1,f,c
 17656  015038                     u5210:
 17657                           
 17658                           ;stkvar	_divisor @ sp[(-2)+-16]
 17659  015038  0EEE               	movlw	-18
 17660  01503A  50E3               	movf	plusw1,w,c
 17661  01503C  E116               	bnz	u5220
 17662  01503E  0EEF               	movlw	-17
 17663  015040  50E3               	movf	plusw1,w,c
 17664  015042  E113               	bnz	u5220
 17665  015044  0EF0               	movlw	-16
 17666  015046  50E3               	movf	plusw1,w,c
 17667  015048  E110               	bnz	u5220
 17668  01504A  0EF1               	movlw	-15
 17669  01504C  50E3               	movf	plusw1,w,c
 17670  01504E  E10D               	bnz	u5220
 17671  015050  0EF2               	movlw	-14
 17672  015052  50E3               	movf	plusw1,w,c
 17673  015054  E10A               	bnz	u5220
 17674  015056  0EF3               	movlw	-13
 17675  015058  50E3               	movf	plusw1,w,c
 17676  01505A  E107               	bnz	u5220
 17677  01505C  0EF4               	movlw	-12
 17678  01505E  50E3               	movf	plusw1,w,c
 17679  015060  E104               	bnz	u5220
 17680  015062  0EF5               	movlw	-11
 17681  015064  50E3               	movf	plusw1,w,c
 17682  015066  B4D8               	btfsc	status,2,c
 17683  015068  D075               	goto	u5250
 17684  01506A                     u5220:
 17685                           
 17686                           ;stkvar	_counter @ sp[(-2)+1]
 17687  01506A  0EFF               	movlw	-1
 17688  01506C  6AE3               	clrf	plusw1,c
 17689  01506E  D012               	goto	L16
 17690  015070                     l6327:
 17691                           
 17692                           ;stkvar	_divisor @ sp[(-2)+-16]
 17693  015070  90D8               	bcf	status,0,c
 17694  015072  0EEE               	movlw	-18
 17695  015074  36E3               	rlcf	plusw1,f,c
 17696  015076  0EEF               	movlw	-17
 17697  015078  36E3               	rlcf	plusw1,f,c
 17698  01507A  0EF0               	movlw	-16
 17699  01507C  36E3               	rlcf	plusw1,f,c
 17700  01507E  0EF1               	movlw	-15
 17701  015080  36E3               	rlcf	plusw1,f,c
 17702  015082  0EF2               	movlw	-14
 17703  015084  36E3               	rlcf	plusw1,f,c
 17704  015086  0EF3               	movlw	-13
 17705  015088  36E3               	rlcf	plusw1,f,c
 17706  01508A  0EF4               	movlw	-12
 17707  01508C  36E3               	rlcf	plusw1,f,c
 17708  01508E  0EF5               	movlw	-11
 17709  015090  36E3               	rlcf	plusw1,f,c
 17710                           
 17711                           ;stkvar	_counter @ sp[(-2)+1]
 17712  015092  0EFF               	movlw	-1
 17713  015094                     L16:
 17714  015094  2AE3               	incf	plusw1,f,c
 17715                           
 17716                           ;stkvar	_divisor @ sp[(-2)+-16]
 17717  015096  0EF5               	movlw	-11
 17718  015098  AEE3               	btfss	plusw1,7,c
 17719  01509A  D7EA               	goto	l6327
 17720  01509C                     u5230:
 17721                           
 17722                           ;stkvar	_divisor @ sp[(-2)+-16]
 17723                           ;stkvar	_dividend @ sp[(-2)+-8]
 17724  01509C  50E1               	movf	fsr1l,w,c
 17725  01509E  0FF6               	addlw	-10
 17726  0150A0  6ED9               	movwf	fsr2l,c
 17727  0150A2  50E2               	movf	fsr1h,w,c
 17728  0150A4  6EDA               	movwf	fsr2h,c
 17729  0150A6  0EFF               	movlw	255
 17730  0150A8  22DA               	addwfc	fsr2h,f,c
 17731  0150AA  0EEE               	movlw	-18
 17732  0150AC  50E3               	movf	plusw1,w,c
 17733  0150AE  5CDE               	subwf	postinc2,w,c
 17734  0150B0  0EEF               	movlw	-17
 17735  0150B2  50E3               	movf	plusw1,w,c
 17736  0150B4  58DE               	subwfb	postinc2,w,c
 17737  0150B6  0EF0               	movlw	-16
 17738  0150B8  50E3               	movf	plusw1,w,c
 17739  0150BA  58DE               	subwfb	postinc2,w,c
 17740  0150BC  0EF1               	movlw	-15
 17741  0150BE  50E3               	movf	plusw1,w,c
 17742  0150C0  58DE               	subwfb	postinc2,w,c
 17743  0150C2  0EF2               	movlw	-14
 17744  0150C4  50E3               	movf	plusw1,w,c
 17745  0150C6  58DE               	subwfb	postinc2,w,c
 17746  0150C8  0EF3               	movlw	-13
 17747  0150CA  50E3               	movf	plusw1,w,c
 17748  0150CC  58DE               	subwfb	postinc2,w,c
 17749  0150CE  0EF4               	movlw	-12
 17750  0150D0  50E3               	movf	plusw1,w,c
 17751  0150D2  58DE               	subwfb	postinc2,w,c
 17752  0150D4  0EF5               	movlw	-11
 17753  0150D6  50E3               	movf	plusw1,w,c
 17754  0150D8  58DE               	subwfb	postinc2,w,c
 17755  0150DA  A0D8               	btfss	status,0,c
 17756  0150DC  D01F               	goto	l6335
 17757                           
 17758                           ;stkvar	_divisor @ sp[(-2)+-16]
 17759                           ;stkvar	_dividend @ sp[(-2)+-8]
 17760  0150DE  50E1               	movf	fsr1l,w,c
 17761  0150E0  0FF6               	addlw	-10
 17762  0150E2  6ED9               	movwf	fsr2l,c
 17763  0150E4  50E2               	movf	fsr1h,w,c
 17764  0150E6  6EDA               	movwf	fsr2h,c
 17765  0150E8  0EFF               	movlw	255
 17766  0150EA  22DA               	addwfc	fsr2h,f,c
 17767  0150EC  0EEE               	movlw	-18
 17768  0150EE  50E3               	movf	plusw1,w,c
 17769  0150F0  5EDE               	subwf	postinc2,f,c
 17770  0150F2  0EEF               	movlw	-17
 17771  0150F4  50E3               	movf	plusw1,w,c
 17772  0150F6  5ADE               	subwfb	postinc2,f,c
 17773  0150F8  0EF0               	movlw	-16
 17774  0150FA  50E3               	movf	plusw1,w,c
 17775  0150FC  5ADE               	subwfb	postinc2,f,c
 17776  0150FE  0EF1               	movlw	-15
 17777  015100  50E3               	movf	plusw1,w,c
 17778  015102  5ADE               	subwfb	postinc2,f,c
 17779  015104  0EF2               	movlw	-14
 17780  015106  50E3               	movf	plusw1,w,c
 17781  015108  5ADE               	subwfb	postinc2,f,c
 17782  01510A  0EF3               	movlw	-13
 17783  01510C  50E3               	movf	plusw1,w,c
 17784  01510E  5ADE               	subwfb	postinc2,f,c
 17785  015110  0EF4               	movlw	-12
 17786  015112  50E3               	movf	plusw1,w,c
 17787  015114  5ADE               	subwfb	postinc2,f,c
 17788  015116  0EF5               	movlw	-11
 17789  015118  50E3               	movf	plusw1,w,c
 17790  01511A  5ADE               	subwfb	postinc2,f,c
 17791  01511C                     l6335:
 17792                           
 17793                           ;stkvar	_divisor @ sp[(-2)+-16]
 17794  01511C  90D8               	bcf	status,0,c
 17795  01511E  0EF5               	movlw	-11
 17796  015120  32E3               	rrcf	plusw1,f,c
 17797  015122  0EF4               	movlw	-12
 17798  015124  32E3               	rrcf	plusw1,f,c
 17799  015126  0EF3               	movlw	-13
 17800  015128  32E3               	rrcf	plusw1,f,c
 17801  01512A  0EF2               	movlw	-14
 17802  01512C  32E3               	rrcf	plusw1,f,c
 17803  01512E  0EF1               	movlw	-15
 17804  015130  32E3               	rrcf	plusw1,f,c
 17805  015132  0EF0               	movlw	-16
 17806  015134  32E3               	rrcf	plusw1,f,c
 17807  015136  0EEF               	movlw	-17
 17808  015138  32E3               	rrcf	plusw1,f,c
 17809  01513A  0EEE               	movlw	-18
 17810  01513C  32E3               	rrcf	plusw1,f,c
 17811                           
 17812                           ;stkvar	_counter @ sp[(-2)+1]
 17813  01513E  0EFF               	movlw	-1
 17814  015140  50E3               	movf	plusw1,w,c
 17815  015142  6E35               	movwf	btemp^0,c
 17816  015144  0E01               	movlw	1
 17817  015146  5E35               	subwf	btemp^0,f,c
 17818  015148  0EFF               	movlw	-1
 17819  01514A  0060  F0D7  FFE3   	movff	btemp,plusw1
 17820  015150  A4D8               	btfss	status,2,c
 17821  015152  D7A4               	goto	u5230
 17822  015154                     u5250:
 17823                           
 17824                           ;stkvar	_sign @ sp[(-2)+0]
 17825  015154  0EFE               	movlw	-2
 17826  015156  50E3               	movf	plusw1,w,c
 17827  015158  B4D8               	btfsc	status,2,c
 17828  01515A  D025               	goto	u5270
 17829                           
 17830                           ;stkvar	_dividend @ sp[(-2)+-8]
 17831                           ;stkvar	_dividend @ sp[(-2)+-8]
 17832  01515C  0EF6               	movlw	-10
 17833  01515E  6CE3               	negf	plusw1,c
 17834  015160  0EF7               	movlw	-9
 17835  015162  1EE3               	comf	plusw1,f,c
 17836  015164  0EF8               	movlw	-8
 17837  015166  1EE3               	comf	plusw1,f,c
 17838  015168  0EF9               	movlw	-7
 17839  01516A  1EE3               	comf	plusw1,f,c
 17840  01516C  0EFA               	movlw	-6
 17841  01516E  1EE3               	comf	plusw1,f,c
 17842  015170  0EFB               	movlw	-5
 17843  015172  1EE3               	comf	plusw1,f,c
 17844  015174  0EFC               	movlw	-4
 17845  015176  1EE3               	comf	plusw1,f,c
 17846  015178  0EFD               	movlw	-3
 17847  01517A  1EE3               	comf	plusw1,f,c
 17848  01517C  E314               	bnc	u5270
 17849  01517E  0EF7               	movlw	-9
 17850  015180  2AE3               	incf	plusw1,f,c
 17851  015182  E311               	bnc	u5270
 17852  015184  0EF8               	movlw	-8
 17853  015186  2AE3               	incf	plusw1,f,c
 17854  015188  E30E               	bnc	u5270
 17855  01518A  0EF9               	movlw	-7
 17856  01518C  2AE3               	incf	plusw1,f,c
 17857  01518E  E30B               	bnc	u5270
 17858  015190  0EFA               	movlw	-6
 17859  015192  2AE3               	incf	plusw1,f,c
 17860  015194  E308               	bnc	u5270
 17861  015196  0EFB               	movlw	-5
 17862  015198  2AE3               	incf	plusw1,f,c
 17863  01519A  E305               	bnc	u5270
 17864  01519C  0EFC               	movlw	-4
 17865  01519E  2AE3               	incf	plusw1,f,c
 17866  0151A0  E302               	bnc	u5270
 17867  0151A2  0EFD               	movlw	-3
 17868  0151A4  2AE3               	incf	plusw1,f,c
 17869  0151A6                     u5270:
 17870                           
 17871                           ;stkvar	_dividend @ sp[(-2)+-8]
 17872  0151A6  0EF6               	movlw	246
 17873  0151A8  24E1               	addwf	fsr1l,w,c
 17874  0151AA  6ED9               	movwf	fsr2l,c
 17875  0151AC  0EFF               	movlw	255
 17876  0151AE  20E2               	addwfc	fsr1h,w,c
 17877  0151B0  6EDA               	movwf	fsr2h,c
 17878                           
 17879                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17880  0151B2  0E08               	movlw	8
 17881  0151B4  6E35               	movwf	btemp^0,c
 17882  0151B6  0EF6               	movlw	-10
 17883  0151B8                     us528999:
 17884  0151B8  006F FF7B FFE3     	movff	postinc2,plusw1
 17885  0151BE  28E8               	incf	wreg,w,c
 17886  0151C0  2E35               	decfsz	btemp^0,f,c
 17887  0151C2  D7FA               	bra	us528999
 17888                           
 17889                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17890  0151C4  52E5               	movf	postdec1,f,c
 17891  0151C6  52E5               	movf	postdec1,f,c
 17892  0151C8  0012               	return		;funcret
 17893  0151CA                     __end_of___aomod:
 17894                           	opt callstack 0
 17895                           
 17896 ;; *************** function ___aodiv *****************
 17897 ;; Defined at:
 17898 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17899 ;; Parameters:    Size  Location     Type
 17900 ;;  dividend        8  [STACK] long long 
 17901 ;;  divisor         8  [STACK] long long 
 17902 ;; Auto vars:     Size  Location     Type
 17903 ;;  quotient        8  [STACK] long long 
 17904 ;;  sign            1  [STACK] unsigned char 
 17905 ;;  counter         1  [STACK] unsigned char 
 17906 ;; Return value:  Size  Location     Type
 17907 ;;                  8  [STACK] long long 
 17908 ;; Registers used:
 17909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17910 ;; Tracked objects:
 17911 ;;		On entry : 0/1
 17912 ;;		On exit  : 0/0
 17913 ;;		Unchanged: 0/0
 17914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17919 ;;Total ram usage:        0 bytes
 17920 ;; Hardware stack levels used:    1
 17921 ;; Hardware stack levels required when called:    6
 17922 ;; This function calls:
 17923 ;;		Nothing
 17924 ;; This function is called by:
 17925 ;;		_dtoa
 17926 ;; This function uses a reentrant model
 17927 ;;
 17928                           
 17929                           	psect	text58
 17930  014838                     __ptext58:
 17931                           	opt callstack 0
 17932  014838                     ___aodiv:
 17933                           	opt callstack 0
 17934                           
 17935                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17936  014838  0E0A               	movlw	10
 17937  01483A  26E1               	addwf	fsr1l,f,c
 17938  01483C  0E00               	movlw	0
 17939  01483E  22E2               	addwfc	fsr1h,f,c
 17940                           
 17941                           ;stkvar	_sign @ sp[(-10)+8]
 17942                           
 17943                           ;incstack = 0
 17944  014840  0EFE               	movlw	-2
 17945  014842  6AE3               	clrf	plusw1,c
 17946                           
 17947                           ;stkvar	_divisor @ sp[(-10)+-16]
 17948  014844  0EED               	movlw	-19
 17949  014846  AEE3               	btfss	plusw1,7,c
 17950  014848  D028               	goto	l6275
 17951                           
 17952                           ;stkvar	_divisor @ sp[(-10)+-16]
 17953                           ;stkvar	_divisor @ sp[(-10)+-16]
 17954  01484A  0EE6               	movlw	-26
 17955  01484C  6CE3               	negf	plusw1,c
 17956  01484E  0EE7               	movlw	-25
 17957  014850  1EE3               	comf	plusw1,f,c
 17958  014852  0EE8               	movlw	-24
 17959  014854  1EE3               	comf	plusw1,f,c
 17960  014856  0EE9               	movlw	-23
 17961  014858  1EE3               	comf	plusw1,f,c
 17962  01485A  0EEA               	movlw	-22
 17963  01485C  1EE3               	comf	plusw1,f,c
 17964  01485E  0EEB               	movlw	-21
 17965  014860  1EE3               	comf	plusw1,f,c
 17966  014862  0EEC               	movlw	-20
 17967  014864  1EE3               	comf	plusw1,f,c
 17968  014866  0EED               	movlw	-19
 17969  014868  1EE3               	comf	plusw1,f,c
 17970  01486A  E314               	bnc	u5070
 17971  01486C  0EE7               	movlw	-25
 17972  01486E  2AE3               	incf	plusw1,f,c
 17973  014870  E311               	bnc	u5070
 17974  014872  0EE8               	movlw	-24
 17975  014874  2AE3               	incf	plusw1,f,c
 17976  014876  E30E               	bnc	u5070
 17977  014878  0EE9               	movlw	-23
 17978  01487A  2AE3               	incf	plusw1,f,c
 17979  01487C  E30B               	bnc	u5070
 17980  01487E  0EEA               	movlw	-22
 17981  014880  2AE3               	incf	plusw1,f,c
 17982  014882  E308               	bnc	u5070
 17983  014884  0EEB               	movlw	-21
 17984  014886  2AE3               	incf	plusw1,f,c
 17985  014888  E305               	bnc	u5070
 17986  01488A  0EEC               	movlw	-20
 17987  01488C  2AE3               	incf	plusw1,f,c
 17988  01488E  E302               	bnc	u5070
 17989  014890  0EED               	movlw	-19
 17990  014892  2AE3               	incf	plusw1,f,c
 17991  014894                     u5070:
 17992                           
 17993                           ;stkvar	_sign @ sp[(-10)+8]
 17994  014894  0EFE               	movlw	-2
 17995  014896  6AE3               	clrf	plusw1,c
 17996  014898  2AE3               	incf	plusw1,f,c
 17997  01489A                     l6275:
 17998                           
 17999                           ;stkvar	_dividend @ sp[(-10)+-8]
 18000  01489A  0EF5               	movlw	-11
 18001  01489C  AEE3               	btfss	plusw1,7,c
 18002  01489E  D027               	goto	l6281
 18003                           
 18004                           ;stkvar	_dividend @ sp[(-10)+-8]
 18005                           ;stkvar	_dividend @ sp[(-10)+-8]
 18006  0148A0  0EEE               	movlw	-18
 18007  0148A2  6CE3               	negf	plusw1,c
 18008  0148A4  0EEF               	movlw	-17
 18009  0148A6  1EE3               	comf	plusw1,f,c
 18010  0148A8  0EF0               	movlw	-16
 18011  0148AA  1EE3               	comf	plusw1,f,c
 18012  0148AC  0EF1               	movlw	-15
 18013  0148AE  1EE3               	comf	plusw1,f,c
 18014  0148B0  0EF2               	movlw	-14
 18015  0148B2  1EE3               	comf	plusw1,f,c
 18016  0148B4  0EF3               	movlw	-13
 18017  0148B6  1EE3               	comf	plusw1,f,c
 18018  0148B8  0EF4               	movlw	-12
 18019  0148BA  1EE3               	comf	plusw1,f,c
 18020  0148BC  0EF5               	movlw	-11
 18021  0148BE  1EE3               	comf	plusw1,f,c
 18022  0148C0  E314               	bnc	u5090
 18023  0148C2  0EEF               	movlw	-17
 18024  0148C4  2AE3               	incf	plusw1,f,c
 18025  0148C6  E311               	bnc	u5090
 18026  0148C8  0EF0               	movlw	-16
 18027  0148CA  2AE3               	incf	plusw1,f,c
 18028  0148CC  E30E               	bnc	u5090
 18029  0148CE  0EF1               	movlw	-15
 18030  0148D0  2AE3               	incf	plusw1,f,c
 18031  0148D2  E30B               	bnc	u5090
 18032  0148D4  0EF2               	movlw	-14
 18033  0148D6  2AE3               	incf	plusw1,f,c
 18034  0148D8  E308               	bnc	u5090
 18035  0148DA  0EF3               	movlw	-13
 18036  0148DC  2AE3               	incf	plusw1,f,c
 18037  0148DE  E305               	bnc	u5090
 18038  0148E0  0EF4               	movlw	-12
 18039  0148E2  2AE3               	incf	plusw1,f,c
 18040  0148E4  E302               	bnc	u5090
 18041  0148E6  0EF5               	movlw	-11
 18042  0148E8  2AE3               	incf	plusw1,f,c
 18043  0148EA                     u5090:
 18044                           
 18045                           ;stkvar	_sign @ sp[(-10)+8]
 18046  0148EA  0EFE               	movlw	-2
 18047  0148EC  70E3               	btg	plusw1,0,c
 18048  0148EE                     l6281:
 18049                           
 18050                           ;stkvar	_quotient @ sp[(-10)+0]
 18051  0148EE  0E07               	movlw	7
 18052  0148F0  6E35               	movwf	btemp^0,c
 18053  0148F2  0EF6               	movlw	-10
 18054  0148F4                     u5101:
 18055  0148F4  6AE3               	clrf	plusw1,c
 18056  0148F6  2AE8               	incf	wreg,f,c
 18057  0148F8  0635               	decf	btemp^0,f,c
 18058  0148FA  E2FC               	bc	u5101
 18059                           
 18060                           ;stkvar	_divisor @ sp[(-10)+-16]
 18061  0148FC  0EE6               	movlw	-26
 18062  0148FE  50E3               	movf	plusw1,w,c
 18063  014900  E116               	bnz	u5110
 18064  014902  0EE7               	movlw	-25
 18065  014904  50E3               	movf	plusw1,w,c
 18066  014906  E113               	bnz	u5110
 18067  014908  0EE8               	movlw	-24
 18068  01490A  50E3               	movf	plusw1,w,c
 18069  01490C  E110               	bnz	u5110
 18070  01490E  0EE9               	movlw	-23
 18071  014910  50E3               	movf	plusw1,w,c
 18072  014912  E10D               	bnz	u5110
 18073  014914  0EEA               	movlw	-22
 18074  014916  50E3               	movf	plusw1,w,c
 18075  014918  E10A               	bnz	u5110
 18076  01491A  0EEB               	movlw	-21
 18077  01491C  50E3               	movf	plusw1,w,c
 18078  01491E  E107               	bnz	u5110
 18079  014920  0EEC               	movlw	-20
 18080  014922  50E3               	movf	plusw1,w,c
 18081  014924  E104               	bnz	u5110
 18082  014926  0EED               	movlw	-19
 18083  014928  50E3               	movf	plusw1,w,c
 18084  01492A  B4D8               	btfsc	status,2,c
 18085  01492C  D088               	goto	u5140
 18086  01492E                     u5110:
 18087                           
 18088                           ;stkvar	_counter @ sp[(-10)+9]
 18089  01492E  0EFF               	movlw	-1
 18090  014930  6AE3               	clrf	plusw1,c
 18091  014932  D012               	goto	L17
 18092  014934                     l6287:
 18093                           
 18094                           ;stkvar	_divisor @ sp[(-10)+-16]
 18095  014934  90D8               	bcf	status,0,c
 18096  014936  0EE6               	movlw	-26
 18097  014938  36E3               	rlcf	plusw1,f,c
 18098  01493A  0EE7               	movlw	-25
 18099  01493C  36E3               	rlcf	plusw1,f,c
 18100  01493E  0EE8               	movlw	-24
 18101  014940  36E3               	rlcf	plusw1,f,c
 18102  014942  0EE9               	movlw	-23
 18103  014944  36E3               	rlcf	plusw1,f,c
 18104  014946  0EEA               	movlw	-22
 18105  014948  36E3               	rlcf	plusw1,f,c
 18106  01494A  0EEB               	movlw	-21
 18107  01494C  36E3               	rlcf	plusw1,f,c
 18108  01494E  0EEC               	movlw	-20
 18109  014950  36E3               	rlcf	plusw1,f,c
 18110  014952  0EED               	movlw	-19
 18111  014954  36E3               	rlcf	plusw1,f,c
 18112                           
 18113                           ;stkvar	_counter @ sp[(-10)+9]
 18114  014956  0EFF               	movlw	-1
 18115  014958                     L17:
 18116  014958  2AE3               	incf	plusw1,f,c
 18117                           
 18118                           ;stkvar	_divisor @ sp[(-10)+-16]
 18119  01495A  0EED               	movlw	-19
 18120  01495C  AEE3               	btfss	plusw1,7,c
 18121  01495E  D7EA               	goto	l6287
 18122  014960                     u5120:
 18123                           
 18124                           ;stkvar	_quotient @ sp[(-10)+0]
 18125  014960  90D8               	bcf	status,0,c
 18126  014962  0EF6               	movlw	-10
 18127  014964  36E3               	rlcf	plusw1,f,c
 18128  014966  0EF7               	movlw	-9
 18129  014968  36E3               	rlcf	plusw1,f,c
 18130  01496A  0EF8               	movlw	-8
 18131  01496C  36E3               	rlcf	plusw1,f,c
 18132  01496E  0EF9               	movlw	-7
 18133  014970  36E3               	rlcf	plusw1,f,c
 18134  014972  0EFA               	movlw	-6
 18135  014974  36E3               	rlcf	plusw1,f,c
 18136  014976  0EFB               	movlw	-5
 18137  014978  36E3               	rlcf	plusw1,f,c
 18138  01497A  0EFC               	movlw	-4
 18139  01497C  36E3               	rlcf	plusw1,f,c
 18140  01497E  0EFD               	movlw	-3
 18141  014980  36E3               	rlcf	plusw1,f,c
 18142                           
 18143                           ;stkvar	_divisor @ sp[(-10)+-16]
 18144                           ;stkvar	_dividend @ sp[(-10)+-8]
 18145  014982  50E1               	movf	fsr1l,w,c
 18146  014984  0FEE               	addlw	-18
 18147  014986  6ED9               	movwf	fsr2l,c
 18148  014988  50E2               	movf	fsr1h,w,c
 18149  01498A  6EDA               	movwf	fsr2h,c
 18150  01498C  0EFF               	movlw	255
 18151  01498E  22DA               	addwfc	fsr2h,f,c
 18152  014990  0EE6               	movlw	-26
 18153  014992  50E3               	movf	plusw1,w,c
 18154  014994  5CDE               	subwf	postinc2,w,c
 18155  014996  0EE7               	movlw	-25
 18156  014998  50E3               	movf	plusw1,w,c
 18157  01499A  58DE               	subwfb	postinc2,w,c
 18158  01499C  0EE8               	movlw	-24
 18159  01499E  50E3               	movf	plusw1,w,c
 18160  0149A0  58DE               	subwfb	postinc2,w,c
 18161  0149A2  0EE9               	movlw	-23
 18162  0149A4  50E3               	movf	plusw1,w,c
 18163  0149A6  58DE               	subwfb	postinc2,w,c
 18164  0149A8  0EEA               	movlw	-22
 18165  0149AA  50E3               	movf	plusw1,w,c
 18166  0149AC  58DE               	subwfb	postinc2,w,c
 18167  0149AE  0EEB               	movlw	-21
 18168  0149B0  50E3               	movf	plusw1,w,c
 18169  0149B2  58DE               	subwfb	postinc2,w,c
 18170  0149B4  0EEC               	movlw	-20
 18171  0149B6  50E3               	movf	plusw1,w,c
 18172  0149B8  58DE               	subwfb	postinc2,w,c
 18173  0149BA  0EED               	movlw	-19
 18174  0149BC  50E3               	movf	plusw1,w,c
 18175  0149BE  58DE               	subwfb	postinc2,w,c
 18176  0149C0  A0D8               	btfss	status,0,c
 18177  0149C2  D021               	goto	l6299
 18178                           
 18179                           ;stkvar	_divisor @ sp[(-10)+-16]
 18180                           ;stkvar	_dividend @ sp[(-10)+-8]
 18181  0149C4  50E1               	movf	fsr1l,w,c
 18182  0149C6  0FEE               	addlw	-18
 18183  0149C8  6ED9               	movwf	fsr2l,c
 18184  0149CA  50E2               	movf	fsr1h,w,c
 18185  0149CC  6EDA               	movwf	fsr2h,c
 18186  0149CE  0EFF               	movlw	255
 18187  0149D0  22DA               	addwfc	fsr2h,f,c
 18188  0149D2  0EE6               	movlw	-26
 18189  0149D4  50E3               	movf	plusw1,w,c
 18190  0149D6  5EDE               	subwf	postinc2,f,c
 18191  0149D8  0EE7               	movlw	-25
 18192  0149DA  50E3               	movf	plusw1,w,c
 18193  0149DC  5ADE               	subwfb	postinc2,f,c
 18194  0149DE  0EE8               	movlw	-24
 18195  0149E0  50E3               	movf	plusw1,w,c
 18196  0149E2  5ADE               	subwfb	postinc2,f,c
 18197  0149E4  0EE9               	movlw	-23
 18198  0149E6  50E3               	movf	plusw1,w,c
 18199  0149E8  5ADE               	subwfb	postinc2,f,c
 18200  0149EA  0EEA               	movlw	-22
 18201  0149EC  50E3               	movf	plusw1,w,c
 18202  0149EE  5ADE               	subwfb	postinc2,f,c
 18203  0149F0  0EEB               	movlw	-21
 18204  0149F2  50E3               	movf	plusw1,w,c
 18205  0149F4  5ADE               	subwfb	postinc2,f,c
 18206  0149F6  0EEC               	movlw	-20
 18207  0149F8  50E3               	movf	plusw1,w,c
 18208  0149FA  5ADE               	subwfb	postinc2,f,c
 18209  0149FC  0EED               	movlw	-19
 18210  0149FE  50E3               	movf	plusw1,w,c
 18211  014A00  5ADE               	subwfb	postinc2,f,c
 18212                           
 18213                           ;stkvar	_quotient @ sp[(-10)+0]
 18214  014A02  0EF6               	movlw	-10
 18215  014A04  80E3               	bsf	plusw1,0,c
 18216  014A06                     l6299:
 18217                           
 18218                           ;stkvar	_divisor @ sp[(-10)+-16]
 18219  014A06  90D8               	bcf	status,0,c
 18220  014A08  0EED               	movlw	-19
 18221  014A0A  32E3               	rrcf	plusw1,f,c
 18222  014A0C  0EEC               	movlw	-20
 18223  014A0E  32E3               	rrcf	plusw1,f,c
 18224  014A10  0EEB               	movlw	-21
 18225  014A12  32E3               	rrcf	plusw1,f,c
 18226  014A14  0EEA               	movlw	-22
 18227  014A16  32E3               	rrcf	plusw1,f,c
 18228  014A18  0EE9               	movlw	-23
 18229  014A1A  32E3               	rrcf	plusw1,f,c
 18230  014A1C  0EE8               	movlw	-24
 18231  014A1E  32E3               	rrcf	plusw1,f,c
 18232  014A20  0EE7               	movlw	-25
 18233  014A22  32E3               	rrcf	plusw1,f,c
 18234  014A24  0EE6               	movlw	-26
 18235  014A26  32E3               	rrcf	plusw1,f,c
 18236                           
 18237                           ;stkvar	_counter @ sp[(-10)+9]
 18238  014A28  0EFF               	movlw	-1
 18239  014A2A  50E3               	movf	plusw1,w,c
 18240  014A2C  6E35               	movwf	btemp^0,c
 18241  014A2E  0E01               	movlw	1
 18242  014A30  5E35               	subwf	btemp^0,f,c
 18243  014A32  0EFF               	movlw	-1
 18244  014A34  0060  F0D7  FFE3   	movff	btemp,plusw1
 18245  014A3A  A4D8               	btfss	status,2,c
 18246  014A3C  D791               	goto	u5120
 18247  014A3E                     u5140:
 18248                           
 18249                           ;stkvar	_sign @ sp[(-10)+8]
 18250  014A3E  0EFE               	movlw	-2
 18251  014A40  50E3               	movf	plusw1,w,c
 18252  014A42  B4D8               	btfsc	status,2,c
 18253  014A44  D025               	goto	u5160
 18254                           
 18255                           ;stkvar	_quotient @ sp[(-10)+0]
 18256                           ;stkvar	_quotient @ sp[(-10)+0]
 18257  014A46  0EF6               	movlw	-10
 18258  014A48  6CE3               	negf	plusw1,c
 18259  014A4A  0EF7               	movlw	-9
 18260  014A4C  1EE3               	comf	plusw1,f,c
 18261  014A4E  0EF8               	movlw	-8
 18262  014A50  1EE3               	comf	plusw1,f,c
 18263  014A52  0EF9               	movlw	-7
 18264  014A54  1EE3               	comf	plusw1,f,c
 18265  014A56  0EFA               	movlw	-6
 18266  014A58  1EE3               	comf	plusw1,f,c
 18267  014A5A  0EFB               	movlw	-5
 18268  014A5C  1EE3               	comf	plusw1,f,c
 18269  014A5E  0EFC               	movlw	-4
 18270  014A60  1EE3               	comf	plusw1,f,c
 18271  014A62  0EFD               	movlw	-3
 18272  014A64  1EE3               	comf	plusw1,f,c
 18273  014A66  E314               	bnc	u5160
 18274  014A68  0EF7               	movlw	-9
 18275  014A6A  2AE3               	incf	plusw1,f,c
 18276  014A6C  E311               	bnc	u5160
 18277  014A6E  0EF8               	movlw	-8
 18278  014A70  2AE3               	incf	plusw1,f,c
 18279  014A72  E30E               	bnc	u5160
 18280  014A74  0EF9               	movlw	-7
 18281  014A76  2AE3               	incf	plusw1,f,c
 18282  014A78  E30B               	bnc	u5160
 18283  014A7A  0EFA               	movlw	-6
 18284  014A7C  2AE3               	incf	plusw1,f,c
 18285  014A7E  E308               	bnc	u5160
 18286  014A80  0EFB               	movlw	-5
 18287  014A82  2AE3               	incf	plusw1,f,c
 18288  014A84  E305               	bnc	u5160
 18289  014A86  0EFC               	movlw	-4
 18290  014A88  2AE3               	incf	plusw1,f,c
 18291  014A8A  E302               	bnc	u5160
 18292  014A8C  0EFD               	movlw	-3
 18293  014A8E  2AE3               	incf	plusw1,f,c
 18294  014A90                     u5160:
 18295                           
 18296                           ;stkvar	_quotient @ sp[(-10)+0]
 18297  014A90  0EF6               	movlw	246
 18298  014A92  24E1               	addwf	fsr1l,w,c
 18299  014A94  6ED9               	movwf	fsr2l,c
 18300  014A96  0EFF               	movlw	255
 18301  014A98  20E2               	addwfc	fsr1h,w,c
 18302  014A9A  6EDA               	movwf	fsr2h,c
 18303                           
 18304                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18305  014A9C  0E08               	movlw	8
 18306  014A9E  6E35               	movwf	btemp^0,c
 18307  014AA0  0EEE               	movlw	-18
 18308  014AA2                     us517999:
 18309  014AA2  006F FF7B FFE3     	movff	postinc2,plusw1
 18310  014AA8  28E8               	incf	wreg,w,c
 18311  014AAA  2E35               	decfsz	btemp^0,f,c
 18312  014AAC  D7FA               	bra	us517999
 18313                           
 18314                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18315  014AAE  0EF6               	movlw	246
 18316  014AB0  26E1               	addwf	fsr1l,f,c
 18317  014AB2  0EFF               	movlw	255
 18318  014AB4  22E2               	addwfc	fsr1h,f,c
 18319  014AB6  0012               	return		;funcret
 18320  014AB8                     __end_of___aodiv:
 18321                           	opt callstack 0
 18322                           
 18323 ;; *************** function _ctoa *****************
 18324 ;; Defined at:
 18325 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18326 ;; Parameters:    Size  Location     Type
 18327 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18328 ;;		 -> f(6), NULL(0), 
 18329 ;;  c               1  [STACK] unsigned char 
 18330 ;; Auto vars:     Size  Location     Type
 18331 ;;  w               2  [STACK] int 
 18332 ;;  l               2    0        int 
 18333 ;; Return value:  Size  Location     Type
 18334 ;;                  2  [STACK] int 
 18335 ;; Registers used:
 18336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18337 ;; Tracked objects:
 18338 ;;		On entry : 0/4
 18339 ;;		On exit  : 0/0
 18340 ;;		Unchanged: 0/0
 18341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18346 ;;Total ram usage:        0 bytes
 18347 ;; Hardware stack levels used:    1
 18348 ;; Hardware stack levels required when called:   11
 18349 ;; This function calls:
 18350 ;;		_pad
 18351 ;; This function is called by:
 18352 ;;		_vfpfcnvrt
 18353 ;; This function uses a reentrant model
 18354 ;;
 18355                           
 18356                           	psect	text59
 18357  016EC6                     __ptext59:
 18358                           	opt callstack 0
 18359  016EC6                     _ctoa:
 18360                           	opt callstack 0
 18361                           
 18362                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18363  016EC6  52E6               	movf	postinc1,f,c
 18364  016EC8  52E6               	movf	postinc1,f,c
 18365                           
 18366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18367                           
 18368                           ;incstack = 0
 18369  016ECA  501E               	movf	_width^0,w,c
 18370  016ECC  101F               	iorwf	(_width+1)^0,w,c
 18371  016ECE  A4D8               	btfss	status,2,c
 18372  016ED0  D009               	goto	l8909
 18373                           
 18374                           ;stkvar	_w @ sp[(-2)+0]
 18375  016ED2  0EFE               	movlw	-2
 18376  016ED4  0060  F07B  FFE3   	movff	_width,plusw1
 18377  016EDA  0EFF               	movlw	-1
 18378  016EDC  0060  F07F  FFE3   	movff	_width+1,plusw1
 18379  016EE2  D016               	goto	l8911
 18380  016EE4                     l8909:
 18381  016EE4  0EFF               	movlw	255
 18382  016EE6  6E3F               	movwf	(btemp+10)^0,c
 18383  016EE8  0EFF               	movlw	255
 18384  016EEA  6E40               	movwf	(btemp+11)^0,c
 18385  016EEC  0060  F078  F03D   	movff	_width,btemp+8
 18386  016EF2  0060  F07C  F03E   	movff	_width+1,btemp+9
 18387  016EF8  503F               	movf	(btemp+10)^0,w,c
 18388  016EFA  263D               	addwf	(btemp+8)^0,f,c
 18389  016EFC  5040               	movf	(btemp+11)^0,w,c
 18390  016EFE  223E               	addwfc	(btemp+9)^0,f,c
 18391                           
 18392                           ;stkvar	_w @ sp[(-2)+0]
 18393  016F00  0EFE               	movlw	-2
 18394  016F02  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 18395  016F08  0EFF               	movlw	-1
 18396  016F0A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 18397  016F10                     l8911:
 18398                           
 18399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18400                           ;stkvar	_c @ sp[(-2)+-3]
 18401  016F10  0EFB               	movlw	-5
 18402  016F12  006F FF8C  F1A4    	movff	plusw1,_dbuf
 18403                           
 18404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18405  016F18  0101               	movlb	1	; () banked
 18406  016F1A  6BA5               	clrf	(_dbuf+1)& (0+255),b
 18407                           
 18408                           ; BSR set to: 1
 18409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18410                           ;stkvar	_w @ sp[(-2)+0]
 18411  016F1C  0EFE               	movlw	-2
 18412  016F1E  006F FF8F FFE6     	movff	plusw1,postinc1
 18413  016F24  006F FF8F FFE6     	movff	plusw1,postinc1
 18414  016F2A  0EA4               	movlw	low _dbuf
 18415  016F2C  6EE6               	movwf	postinc1,c
 18416  016F2E  0E01               	movlw	high _dbuf
 18417  016F30  6EE6               	movwf	postinc1,c
 18418                           
 18419                           ;stkvar	_fp @ sp[(-6)+-2]
 18420  016F32  0EF8               	movlw	-8
 18421  016F34  006F FF8F FFE6     	movff	plusw1,postinc1
 18422  016F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 18423  016F40  EC55  F0B1         	call	_pad	;wreg free
 18424                           
 18425                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18426  016F44  0EFB               	movlw	251
 18427  016F46  26E1               	addwf	fsr1l,f,c
 18428  016F48  0EFF               	movlw	255
 18429  016F4A  22E2               	addwfc	fsr1h,f,c
 18430  016F4C  0012               	return		;funcret
 18431  016F4E                     __end_of_ctoa:
 18432                           	opt callstack 0
 18433                           
 18434 ;; *************** function _pad *****************
 18435 ;; Defined at:
 18436 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18437 ;; Parameters:    Size  Location     Type
 18438 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18439 ;;		 -> f(6), NULL(0), 
 18440 ;;  buf             2  [STACK] PTR unsigned char 
 18441 ;;		 -> dbuf(80), 
 18442 ;;  p               2  [STACK] int 
 18443 ;; Auto vars:     Size  Location     Type
 18444 ;;  w               2  [STACK] int 
 18445 ;;  i               2  [STACK] int 
 18446 ;; Return value:  Size  Location     Type
 18447 ;;                  2  [STACK] int 
 18448 ;; Registers used:
 18449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18450 ;; Tracked objects:
 18451 ;;		On entry : 0/1
 18452 ;;		On exit  : 0/0
 18453 ;;		Unchanged: 0/0
 18454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18459 ;;Total ram usage:        0 bytes
 18460 ;; Hardware stack levels used:    1
 18461 ;; Hardware stack levels required when called:   10
 18462 ;; This function calls:
 18463 ;;		_fputc
 18464 ;;		_fputs
 18465 ;;		_strlen
 18466 ;; This function is called by:
 18467 ;;		_ctoa
 18468 ;;		_dtoa
 18469 ;;		_efgtoa
 18470 ;;		_xtoa
 18471 ;; This function uses a reentrant model
 18472 ;;
 18473                           
 18474                           	psect	text60
 18475  0162AA                     __ptext60:
 18476                           	opt callstack 0
 18477  0162AA                     _pad:
 18478                           	opt callstack 0
 18479                           
 18480                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18481  0162AA  52E6               	movf	postinc1,f,c
 18482  0162AC  52E6               	movf	postinc1,f,c
 18483  0162AE  52E6               	movf	postinc1,f,c
 18484  0162B0  52E6               	movf	postinc1,f,c
 18485                           
 18486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18487                           
 18488                           ;incstack = 0
 18489  0162B2  A022               	btfss	_flags^0,0,c
 18490  0162B4  D010               	goto	l8883
 18491                           
 18492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18493                           ;stkvar	_fp @ sp[(-4)+-2]
 18494  0162B6  0EFA               	movlw	-6
 18495  0162B8  006F FF8F FFE6     	movff	plusw1,postinc1
 18496  0162BE  006F FF8F FFE6     	movff	plusw1,postinc1
 18497                           
 18498                           ;stkvar	_buf @ sp[(-6)+-4]
 18499  0162C4  0EF6               	movlw	-10
 18500  0162C6  006F FF8F FFE6     	movff	plusw1,postinc1
 18501  0162CC  006F FF8F FFE6     	movff	plusw1,postinc1
 18502  0162D2  EC3B  F0B6         	call	_fputs	;wreg free
 18503  0162D6                     l8883:
 18504                           
 18505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18506                           ;stkvar	_p @ sp[(-4)+-6]
 18507  0162D6  0EF7               	movlw	-9
 18508  0162D8  BEE3               	btfsc	plusw1,7,c
 18509  0162DA  D011               	goto	l8887
 18510                           
 18511                           ;stkvar	_p @ sp[(-4)+-6]
 18512                           ;stkvar	_w @ sp[(-4)+0]
 18513  0162DC  0EF6               	movlw	-10
 18514  0162DE  006F FF8C  F035    	movff	plusw1,btemp
 18515  0162E4  0EFC               	movlw	-4
 18516  0162E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18517  0162EC  0EF7               	movlw	-9
 18518  0162EE  006F FF8C  F035    	movff	plusw1,btemp
 18519  0162F4  0EFD               	movlw	-3
 18520  0162F6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18521  0162FC  D004               	goto	l1729
 18522  0162FE                     l8887:
 18523                           
 18524                           ;stkvar	_w @ sp[(-4)+0]
 18525  0162FE  0EFC               	movlw	-4
 18526  016300  6AE3               	clrf	plusw1,c
 18527  016302  0EFD               	movlw	-3
 18528  016304  6AE3               	clrf	plusw1,c
 18529  016306                     l1729:
 18530                           
 18531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18532                           ;stkvar	_i @ sp[(-4)+2]
 18533  016306  0EFE               	movlw	-2
 18534  016308  6AE3               	clrf	plusw1,c
 18535  01630A  0EFF               	movlw	-1
 18536  01630C  6AE3               	clrf	plusw1,c
 18537                           
 18538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18539  01630E  D01E               	goto	l8893
 18540  016310                     l8889:
 18541                           
 18542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18543                           ;stkvar	_fp @ sp[(-4)+-2]
 18544  016310  0EFA               	movlw	-6
 18545  016312  006F FF8F FFE6     	movff	plusw1,postinc1
 18546  016318  006F FF8F FFE6     	movff	plusw1,postinc1
 18547  01631E  0E20               	movlw	32
 18548  016320  6EE6               	movwf	postinc1,c
 18549  016322  0E00               	movlw	0
 18550  016324  6EE6               	movwf	postinc1,c
 18551  016326  EC37  F0B0         	call	_fputc	;wreg free
 18552                           
 18553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18554                           ;stkvar	_i @ sp[(-4)+2]
 18555  01632A  0EFE               	movlw	-2
 18556  01632C  50E3               	movf	plusw1,w,c
 18557  01632E  0F01               	addlw	1
 18558  016330  6E35               	movwf	btemp^0,c
 18559  016332  0EFE               	movlw	-2
 18560  016334  0060  F0D7  FFE3   	movff	btemp,plusw1
 18561  01633A  6A35               	clrf	btemp^0,c
 18562  01633C  0EFF               	movlw	-1
 18563  01633E  50E3               	movf	plusw1,w,c
 18564  016340  2035               	addwfc	btemp^0,w,c
 18565  016342  6E35               	movwf	btemp^0,c
 18566  016344  0EFF               	movlw	-1
 18567  016346  0060  F0D7  FFE3   	movff	btemp,plusw1
 18568  01634C                     l8893:
 18569                           
 18570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18571                           ;stkvar	_w @ sp[(-4)+0]
 18572                           ;stkvar	_i @ sp[(-4)+2]
 18573  01634C  50E1               	movf	fsr1l,w,c
 18574  01634E  0FFE               	addlw	-2
 18575  016350  6ED9               	movwf	fsr2l,c
 18576  016352  50E2               	movf	fsr1h,w,c
 18577  016354  6EDA               	movwf	fsr2h,c
 18578  016356  0EFF               	movlw	255
 18579  016358  22DA               	addwfc	fsr2h,f,c
 18580  01635A  0EFC               	movlw	-4
 18581  01635C  50E3               	movf	plusw1,w,c
 18582  01635E  5CDE               	subwf	postinc2,w,c
 18583  016360  50DE               	movf	postinc2,w,c
 18584  016362  0A80               	xorlw	128
 18585  016364  6E35               	movwf	btemp^0,c
 18586  016366  0EFD               	movlw	-3
 18587  016368  50E3               	movf	plusw1,w,c
 18588  01636A  0A80               	xorlw	128
 18589  01636C  5835               	subwfb	btemp^0,w,c
 18590  01636E  A0D8               	btfss	status,0,c
 18591  016370  D7CF               	goto	l8889
 18592                           
 18593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18594  016372  B022               	btfsc	_flags^0,0,c
 18595  016374  D010               	goto	l8897
 18596                           
 18597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18598                           ;stkvar	_fp @ sp[(-4)+-2]
 18599  016376  0EFA               	movlw	-6
 18600  016378  006F FF8F FFE6     	movff	plusw1,postinc1
 18601  01637E  006F FF8F FFE6     	movff	plusw1,postinc1
 18602                           
 18603                           ;stkvar	_buf @ sp[(-6)+-4]
 18604  016384  0EF6               	movlw	-10
 18605  016386  006F FF8F FFE6     	movff	plusw1,postinc1
 18606  01638C  006F FF8F FFE6     	movff	plusw1,postinc1
 18607  016392  EC3B  F0B6         	call	_fputs	;wreg free
 18608  016396                     l8897:
 18609                           
 18610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18611                           ;stkvar	_w @ sp[(-4)+0]
 18612                           ;stkvar	_buf @ sp[(-4)+-4]
 18613  016396  0EF8               	movlw	-8
 18614  016398  006F FF8F FFE6     	movff	plusw1,postinc1
 18615  01639E  006F FF8F FFE6     	movff	plusw1,postinc1
 18616  0163A4  ECEA  F0B5         	call	_strlen	;wreg free
 18617  0163A8  0EFC               	movlw	-4
 18618  0163AA  50E3               	movf	plusw1,w,c
 18619  0163AC  2635               	addwf	btemp^0,f,c
 18620  0163AE  0EFD               	movlw	-3
 18621  0163B0  50E3               	movf	plusw1,w,c
 18622  0163B2  2236               	addwfc	(btemp+1)^0,f,c
 18623                           
 18624                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18625  0163B4  0EF6               	movlw	246
 18626  0163B6  26E1               	addwf	fsr1l,f,c
 18627  0163B8  0EFF               	movlw	255
 18628  0163BA  22E2               	addwfc	fsr1h,f,c
 18629  0163BC  0012               	return		;funcret
 18630  0163BE                     __end_of_pad:
 18631                           	opt callstack 0
 18632                           
 18633 ;; *************** function _strlen *****************
 18634 ;; Defined at:
 18635 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18636 ;; Parameters:    Size  Location     Type
 18637 ;;  s               2  [STACK] PTR const unsigned char 
 18638 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18639 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18640 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 18641 ;; Auto vars:     Size  Location     Type
 18642 ;;  a               2  [STACK] PTR const unsigned char 
 18643 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18644 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18645 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 18646 ;; Return value:  Size  Location     Type
 18647 ;;                  2  [STACK] unsigned int 
 18648 ;; Registers used:
 18649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18650 ;; Tracked objects:
 18651 ;;		On entry : 0/0
 18652 ;;		On exit  : 0/0
 18653 ;;		Unchanged: 0/0
 18654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18659 ;;Total ram usage:        0 bytes
 18660 ;; Hardware stack levels used:    1
 18661 ;; Hardware stack levels required when called:    6
 18662 ;; This function calls:
 18663 ;;		Nothing
 18664 ;; This function is called by:
 18665 ;;		_eaDogM_WriteString
 18666 ;;		_pad
 18667 ;;		_stoa
 18668 ;; This function uses a reentrant model
 18669 ;;
 18670                           
 18671                           	psect	text61
 18672  016BD4                     __ptext61:
 18673                           	opt callstack 0
 18674  016BD4                     _strlen:
 18675                           	opt callstack 0
 18676                           
 18677                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18678  016BD4  52E6               	movf	postinc1,f,c
 18679  016BD6  52E6               	movf	postinc1,f,c
 18680                           
 18681                           ;stkvar	_s @ sp[(-2)+-2]
 18682                           
 18683                           ;incstack = 0
 18684  016BD8  0EFC               	movlw	-4
 18685  016BDA  006F FF8C  F03F    	movff	plusw1,btemp+10
 18686  016BE0  0EFD               	movlw	-3
 18687  016BE2  006F FF8C  F040    	movff	plusw1,btemp+11
 18688                           
 18689                           ;stkvar	_a @ sp[(-2)+0]
 18690  016BE8  0EFF               	movlw	-1
 18691  016BEA  0060  F103  FFE3   	movff	btemp+11,plusw1
 18692  016BF0  0EFE               	movlw	-2
 18693  016BF2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18694  016BF8  D011               	goto	l5893
 18695  016BFA                     l5891:
 18696                           
 18697                           ;stkvar	_s @ sp[(-2)+-2]
 18698  016BFA  0EFC               	movlw	-4
 18699  016BFC  50E3               	movf	plusw1,w,c
 18700  016BFE  0F01               	addlw	1
 18701  016C00  6E35               	movwf	btemp^0,c
 18702  016C02  0EFC               	movlw	-4
 18703  016C04  0060  F0D7  FFE3   	movff	btemp,plusw1
 18704  016C0A  6A35               	clrf	btemp^0,c
 18705  016C0C  0EFD               	movlw	-3
 18706  016C0E  50E3               	movf	plusw1,w,c
 18707  016C10  2035               	addwfc	btemp^0,w,c
 18708  016C12  6E35               	movwf	btemp^0,c
 18709  016C14  0EFD               	movlw	-3
 18710  016C16  0060  F0D7  FFE3   	movff	btemp,plusw1
 18711  016C1C                     l5893:
 18712                           
 18713                           ;stkvar	_s @ sp[(-2)+-2]
 18714  016C1C  0EFC               	movlw	-4
 18715  016C1E  006F FF8F FFF6     	movff	plusw1,tblptrl
 18716  016C24  0EFD               	movlw	-3
 18717  016C26  006F FF8F FFF7     	movff	plusw1,tblptrh
 18718  016C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 18719  016C2E  6EF8               	movwf	tblptru,c
 18720  016C30  0E1F               	movlw	(high __ramtop+-1)
 18721  016C32  64F7               	cpfsgt	tblptrh,c
 18722  016C34  D003               	bra	u4237
 18723  016C36  0008               	tblrd		*
 18724  016C38  50F5               	movf	tablat,w,c
 18725  016C3A  D007               	bra	u4230
 18726  016C3C                     u4237:
 18727  016C3C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18728  016C42  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18729  016C48  50EF               	movf	indf0,w,c
 18730  016C4A                     u4230:
 18731  016C4A  0900               	iorlw	0
 18732  016C4C  A4D8               	btfss	status,2,c
 18733  016C4E  D7D5               	goto	l5891
 18734                           
 18735                           ;stkvar	_a @ sp[(-2)+0]
 18736                           ;stkvar	_s @ sp[(-2)+-2]
 18737  016C50  0EFC               	movlw	-4
 18738  016C52  006F FF8C  F035    	movff	plusw1,btemp
 18739  016C58  0EFD               	movlw	-3
 18740  016C5A  006F FF8C  F036    	movff	plusw1,btemp+1
 18741  016C60  0EFE               	movlw	-2
 18742  016C62  50E3               	movf	plusw1,w,c
 18743  016C64  5E35               	subwf	btemp^0,f,c
 18744  016C66  0EFF               	movlw	-1
 18745  016C68  50E3               	movf	plusw1,w,c
 18746  016C6A  5A36               	subwfb	(btemp+1)^0,f,c
 18747                           
 18748                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18749  016C6C  52E5               	movf	postdec1,f,c
 18750  016C6E  52E5               	movf	postdec1,f,c
 18751  016C70  52E5               	movf	postdec1,f,c
 18752  016C72  52E5               	movf	postdec1,f,c
 18753  016C74  0012               	return		;funcret
 18754  016C76                     __end_of_strlen:
 18755                           	opt callstack 0
 18756                           
 18757 ;; *************** function _fputs *****************
 18758 ;; Defined at:
 18759 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18760 ;; Parameters:    Size  Location     Type
 18761 ;;  s               2  [STACK] PTR const unsigned char 
 18762 ;;		 -> dbuf(80), 
 18763 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18764 ;;		 -> f(6), NULL(0), 
 18765 ;; Auto vars:     Size  Location     Type
 18766 ;;  i               2  [STACK] int 
 18767 ;;  c               1  [STACK] unsigned char 
 18768 ;; Return value:  Size  Location     Type
 18769 ;;                  2  [STACK] int 
 18770 ;; Registers used:
 18771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18772 ;; Tracked objects:
 18773 ;;		On entry : 0/1
 18774 ;;		On exit  : 0/0
 18775 ;;		Unchanged: 0/0
 18776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18781 ;;Total ram usage:        0 bytes
 18782 ;; Hardware stack levels used:    1
 18783 ;; Hardware stack levels required when called:    9
 18784 ;; This function calls:
 18785 ;;		_fputc
 18786 ;; This function is called by:
 18787 ;;		_pad
 18788 ;; This function uses a reentrant model
 18789 ;;
 18790                           
 18791                           	psect	text62
 18792  016C76                     __ptext62:
 18793                           	opt callstack 0
 18794  016C76                     _fputs:
 18795                           	opt callstack 0
 18796                           
 18797                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18798  016C76  52E6               	movf	postinc1,f,c
 18799  016C78  52E6               	movf	postinc1,f,c
 18800  016C7A  52E6               	movf	postinc1,f,c
 18801                           
 18802                           ;stkvar	_i @ sp[(-3)+0]
 18803                           
 18804                           ;incstack = 0
 18805  016C7C  0EFD               	movlw	-3
 18806  016C7E  6AE3               	clrf	plusw1,c
 18807  016C80  0EFE               	movlw	-2
 18808  016C82  6AE3               	clrf	plusw1,c
 18809  016C84  D01F               	goto	l8877
 18810  016C86                     l8873:
 18811                           
 18812                           ;stkvar	_fp @ sp[(-3)+-4]
 18813  016C86  0EF9               	movlw	-7
 18814  016C88  006F FF8F FFE6     	movff	plusw1,postinc1
 18815  016C8E  006F FF8F FFE6     	movff	plusw1,postinc1
 18816                           
 18817                           ;stkvar	_c @ sp[(-5)+2]
 18818  016C94  0EFD               	movlw	-3
 18819  016C96  50E3               	movf	plusw1,w,c
 18820  016C98  6EE6               	movwf	postinc1,c
 18821  016C9A  0E00               	movlw	0
 18822  016C9C  6EE6               	movwf	postinc1,c
 18823  016C9E  EC37  F0B0         	call	_fputc	;wreg free
 18824                           
 18825                           ;stkvar	_i @ sp[(-3)+0]
 18826  016CA2  0EFD               	movlw	-3
 18827  016CA4  50E3               	movf	plusw1,w,c
 18828  016CA6  0F01               	addlw	1
 18829  016CA8  6E35               	movwf	btemp^0,c
 18830  016CAA  0EFD               	movlw	-3
 18831  016CAC  0060  F0D7  FFE3   	movff	btemp,plusw1
 18832  016CB2  6A35               	clrf	btemp^0,c
 18833  016CB4  0EFE               	movlw	-2
 18834  016CB6  50E3               	movf	plusw1,w,c
 18835  016CB8  2035               	addwfc	btemp^0,w,c
 18836  016CBA  6E35               	movwf	btemp^0,c
 18837  016CBC  0EFE               	movlw	-2
 18838  016CBE  0060  F0D7  FFE3   	movff	btemp,plusw1
 18839  016CC4                     l8877:
 18840                           
 18841                           ;stkvar	_i @ sp[(-3)+0]
 18842  016CC4  0EFD               	movlw	-3
 18843  016CC6  006F FF8C  F03F    	movff	plusw1,btemp+10
 18844  016CCC  0EFE               	movlw	-2
 18845  016CCE  006F FF8C  F040    	movff	plusw1,btemp+11
 18846                           
 18847                           ;stkvar	_s @ sp[(-3)+-2]
 18848  016CD4  0EFB               	movlw	-5
 18849  016CD6  006F FF8C  F03D    	movff	plusw1,btemp+8
 18850  016CDC  0EFC               	movlw	-4
 18851  016CDE  006F FF8C  F03E    	movff	plusw1,btemp+9
 18852  016CE4  503F               	movf	(btemp+10)^0,w,c
 18853  016CE6  243D               	addwf	(btemp+8)^0,w,c
 18854  016CE8  6ED9               	movwf	fsr2l,c
 18855  016CEA  5040               	movf	(btemp+11)^0,w,c
 18856  016CEC  203E               	addwfc	(btemp+9)^0,w,c
 18857  016CEE  6EDA               	movwf	fsr2h,c
 18858  016CF0  50DF               	movf	indf2,w,c
 18859  016CF2  6E40               	movwf	(btemp+11)^0,c
 18860                           
 18861                           ;stkvar	_c @ sp[(-3)+2]
 18862  016CF4  0EFF               	movlw	-1
 18863  016CF6  0060  F103  FFE3   	movff	btemp+11,plusw1
 18864  016CFC  0EFF               	movlw	-1
 18865  016CFE  50E3               	movf	plusw1,w,c
 18866  016D00  A4D8               	btfss	status,2,c
 18867  016D02  D7C1               	goto	l8873
 18868                           
 18869                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18870  016D04  0EF9               	movlw	249
 18871  016D06  26E1               	addwf	fsr1l,f,c
 18872  016D08  0EFF               	movlw	255
 18873  016D0A  22E2               	addwfc	fsr1h,f,c
 18874  016D0C  0012               	return		;funcret
 18875  016D0E                     __end_of_fputs:
 18876                           	opt callstack 0
 18877                           
 18878 ;; *************** function _fputc *****************
 18879 ;; Defined at:
 18880 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18881 ;; Parameters:    Size  Location     Type
 18882 ;;  c               2  [STACK] int 
 18883 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18884 ;;		 -> f(6), NULL(0), 
 18885 ;; Auto vars:     Size  Location     Type
 18886 ;;		None
 18887 ;; Return value:  Size  Location     Type
 18888 ;;                  2  [STACK] int 
 18889 ;; Registers used:
 18890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18891 ;; Tracked objects:
 18892 ;;		On entry : 0/4
 18893 ;;		On exit  : 0/0
 18894 ;;		Unchanged: 0/0
 18895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18900 ;;Total ram usage:        0 bytes
 18901 ;; Hardware stack levels used:    1
 18902 ;; Hardware stack levels required when called:    8
 18903 ;; This function calls:
 18904 ;;		_putch
 18905 ;; This function is called by:
 18906 ;;		_pad
 18907 ;;		_stoa
 18908 ;;		_vfpfcnvrt
 18909 ;;		_fputs
 18910 ;; This function uses a reentrant model
 18911 ;;
 18912                           
 18913                           	psect	text63
 18914  01606E                     __ptext63:
 18915                           	opt callstack 0
 18916  01606E                     _fputc:
 18917                           	opt callstack 13
 18918                           
 18919                           ;stkvar	_fp @ sp[(0)+-4]
 18920                           
 18921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18922                           ;incstack = 0
 18923  01606E  0EFC               	movlw	-4
 18924  016070  006F FF8C  F035    	movff	plusw1,btemp
 18925  016076  0EFD               	movlw	-3
 18926  016078  50E3               	movf	plusw1,w,c
 18927  01607A  1035               	iorwf	btemp^0,w,c
 18928  01607C  B4D8               	btfsc	status,2,c
 18929  01607E  D009               	goto	u8300
 18930                           
 18931                           ;stkvar	_fp @ sp[(0)+-4]
 18932  016080  0EFC               	movlw	-4
 18933  016082  006F FF8C  F035    	movff	plusw1,btemp
 18934  016088  0EFD               	movlw	-3
 18935  01608A  50E3               	movf	plusw1,w,c
 18936  01608C  1035               	iorwf	btemp^0,w,c
 18937  01608E  A4D8               	btfss	status,2,c
 18938  016090  D006               	goto	l8861
 18939  016092                     u8300:
 18940                           
 18941                           ;stkvar	_c @ sp[(0)+-2]
 18942  016092  0EFE               	movlw	-2
 18943  016094  50E3               	movf	plusw1,w,c
 18944  016096  6EE6               	movwf	postinc1,c
 18945  016098  EC50  F0BF         	call	_putch	;wreg free
 18946  01609C  D075               	goto	l2744
 18947  01609E                     l8861:
 18948                           
 18949                           ;stkvar	_fp @ sp[(0)+-4]
 18950  01609E  0EFC               	movlw	-4
 18951  0160A0  006F FF8C  F03F    	movff	plusw1,btemp+10
 18952  0160A6  0EFD               	movlw	-3
 18953  0160A8  006F FF8C  F040    	movff	plusw1,btemp+11
 18954  0160AE  0E04               	movlw	4
 18955  0160B0  243F               	addwf	(btemp+10)^0,w,c
 18956  0160B2  6ED9               	movwf	fsr2l,c
 18957  0160B4  0E00               	movlw	0
 18958  0160B6  2040               	addwfc	(btemp+11)^0,w,c
 18959  0160B8  6EDA               	movwf	fsr2h,c
 18960  0160BA  50DE               	movf	postinc2,w,c
 18961  0160BC  10DE               	iorwf	postinc2,w,c
 18962  0160BE  B4D8               	btfsc	status,2,c
 18963  0160C0  D026               	goto	u8320
 18964                           
 18965                           ;stkvar	_fp @ sp[(0)+-4]
 18966  0160C2  0EFC               	movlw	-4
 18967  0160C4  006F FF8C  F03F    	movff	plusw1,btemp+10
 18968  0160CA  0EFD               	movlw	-3
 18969  0160CC  006F FF8C  F040    	movff	plusw1,btemp+11
 18970  0160D2  0E04               	movlw	4
 18971  0160D4  243F               	addwf	(btemp+10)^0,w,c
 18972  0160D6  6ED9               	movwf	fsr2l,c
 18973  0160D8  0E00               	movlw	0
 18974  0160DA  2040               	addwfc	(btemp+11)^0,w,c
 18975  0160DC  6EDA               	movwf	fsr2h,c
 18976                           
 18977                           ;stkvar	_fp @ sp[(0)+-4]
 18978  0160DE  0EFC               	movlw	-4
 18979  0160E0  006F FF8C  F03F    	movff	plusw1,btemp+10
 18980  0160E6  0EFD               	movlw	-3
 18981  0160E8  006F FF8C  F040    	movff	plusw1,btemp+11
 18982  0160EE  0E02               	movlw	2
 18983  0160F0  243F               	addwf	(btemp+10)^0,w,c
 18984  0160F2  6EE9               	movwf	fsr0l,c
 18985  0160F4  0E00               	movlw	0
 18986  0160F6  2040               	addwfc	(btemp+11)^0,w,c
 18987  0160F8  6EEA               	movwf	fsr0h,c
 18988  0160FA  50DE               	movf	postinc2,w,c
 18989  0160FC  5CEE               	subwf	postinc0,w,c
 18990  0160FE  50EE               	movf	postinc0,w,c
 18991  016100  0A80               	xorlw	128
 18992  016102  6E35               	movwf	btemp^0,c
 18993  016104  50DE               	movf	postinc2,w,c
 18994  016106  0A80               	xorlw	128
 18995  016108  5835               	subwfb	btemp^0,w,c
 18996  01610A  B0D8               	btfsc	status,0,c
 18997  01610C  D03D               	goto	l2744
 18998  01610E                     u8320:
 18999                           
 19000                           ;stkvar	_c @ sp[(0)+-2]
 19001                           ;stkvar	_fp @ sp[(0)+-4]
 19002  01610E  0EFC               	movlw	-4
 19003  016110  006F FF8C  F03F    	movff	plusw1,btemp+10
 19004  016116  0EFD               	movlw	-3
 19005  016118  006F FF8C  F040    	movff	plusw1,btemp+11
 19006  01611E  0E02               	movlw	2
 19007  016120  243F               	addwf	(btemp+10)^0,w,c
 19008  016122  6ED9               	movwf	fsr2l,c
 19009  016124  0E00               	movlw	0
 19010  016126  2040               	addwfc	(btemp+11)^0,w,c
 19011  016128  6EDA               	movwf	fsr2h,c
 19012  01612A  006F FF78  F03F    	movff	postinc2,btemp+10
 19013  016130  006F FF74  F040    	movff	postdec2,btemp+11
 19014                           
 19015                           ;stkvar	_fp @ sp[(0)+-4]
 19016  016136  0EFC               	movlw	-4
 19017  016138  006F FF8F FFD9     	movff	plusw1,fsr2l
 19018  01613E  0EFD               	movlw	-3
 19019  016140  006F FF8F FFDA     	movff	plusw1,fsr2h
 19020  016146  006F FF78  F03D    	movff	postinc2,btemp+8
 19021  01614C  006F FF74  F03E    	movff	postdec2,btemp+9
 19022  016152  503F               	movf	(btemp+10)^0,w,c
 19023  016154  243D               	addwf	(btemp+8)^0,w,c
 19024  016156  6ED9               	movwf	fsr2l,c
 19025  016158  5040               	movf	(btemp+11)^0,w,c
 19026  01615A  203E               	addwfc	(btemp+9)^0,w,c
 19027  01615C  6EDA               	movwf	fsr2h,c
 19028  01615E  0EFE               	movlw	-2
 19029  016160  006F FF8F FFDF     	movff	plusw1,indf2
 19030                           
 19031                           ;stkvar	_fp @ sp[(0)+-4]
 19032  016166  0EFC               	movlw	-4
 19033  016168  006F FF8C  F03F    	movff	plusw1,btemp+10
 19034  01616E  0EFD               	movlw	-3
 19035  016170  006F FF8C  F040    	movff	plusw1,btemp+11
 19036  016176  0E02               	movlw	2
 19037  016178  243F               	addwf	(btemp+10)^0,w,c
 19038  01617A  6ED9               	movwf	fsr2l,c
 19039  01617C  0E00               	movlw	0
 19040  01617E  2040               	addwfc	(btemp+11)^0,w,c
 19041  016180  6EDA               	movwf	fsr2h,c
 19042  016182  2ADE               	incf	postinc2,f,c
 19043  016184  0E00               	movlw	0
 19044  016186  22DD               	addwfc	postdec2,f,c
 19045  016188                     l2744:
 19046                           
 19047                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19048  016188  52E5               	movf	postdec1,f,c
 19049  01618A  52E5               	movf	postdec1,f,c
 19050  01618C  52E5               	movf	postdec1,f,c
 19051  01618E  52E5               	movf	postdec1,f,c
 19052  016190  0012               	return		;funcret
 19053  016192                     __end_of_fputc:
 19054                           	opt callstack 0
 19055                           
 19056 ;; *************** function _putch *****************
 19057 ;; Defined at:
 19058 ;;		line 155 in file "eadog.c"
 19059 ;; Parameters:    Size  Location     Type
 19060 ;;  c               1  [STACK] unsigned char 
 19061 ;; Auto vars:     Size  Location     Type
 19062 ;;		None
 19063 ;; Return value:  Size  Location     Type
 19064 ;;                  1  [STACK] void 
 19065 ;; Registers used:
 19066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19067 ;; Tracked objects:
 19068 ;;		On entry : 0/4
 19069 ;;		On exit  : 0/0
 19070 ;;		Unchanged: 0/0
 19071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19076 ;;Total ram usage:        0 bytes
 19077 ;; Hardware stack levels used:    1
 19078 ;; Hardware stack levels required when called:    7
 19079 ;; This function calls:
 19080 ;;		_ringBufS_put_dma
 19081 ;; This function is called by:
 19082 ;;		_fputc
 19083 ;; This function uses a reentrant model
 19084 ;;
 19085                           
 19086                           	psect	text64
 19087  017EA0                     __ptext64:
 19088                           	opt callstack 0
 19089  017EA0                     _putch:
 19090                           	opt callstack 13
 19091                           
 19092                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19093                           ;stkvar	_c @ sp[(0)+-1]
 19094                           
 19095                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19096                           ;incstack = 0
 19097  017EA0  0EFF               	movlw	-1
 19098  017EA2  50E3               	movf	plusw1,w,c
 19099  017EA4  6EE6               	movwf	postinc1,c
 19100  017EA6  0060  F283  FFE6   	movff	_spi_link+6,postinc1
 19101  017EAC  0060  F287  FFE6   	movff	_spi_link+7,postinc1
 19102  017EB2  ECEE  F0B4         	call	_ringBufS_put_dma	;wreg free
 19103                           
 19104                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19105  017EB6  52E5               	movf	postdec1,f,c
 19106  017EB8  0012               	return		;funcret
 19107  017EBA                     __end_of_putch:
 19108                           	opt callstack 0
 19109                           
 19110 ;; *************** function _ringBufS_put_dma *****************
 19111 ;; Defined at:
 19112 ;;		line 67 in file "ringbufs.c"
 19113 ;; Parameters:    Size  Location     Type
 19114 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19115 ;;		 -> ring_buf1(67), 
 19116 ;;  c               1  [STACK] const unsigned char 
 19117 ;; Auto vars:     Size  Location     Type
 19118 ;;		None
 19119 ;; Return value:  Size  Location     Type
 19120 ;;                  1  [STACK] void 
 19121 ;; Registers used:
 19122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19123 ;; Tracked objects:
 19124 ;;		On entry : 0/4
 19125 ;;		On exit  : 0/0
 19126 ;;		Unchanged: 0/0
 19127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19132 ;;Total ram usage:        0 bytes
 19133 ;; Hardware stack levels used:    1
 19134 ;; Hardware stack levels required when called:    6
 19135 ;; This function calls:
 19136 ;;		Nothing
 19137 ;; This function is called by:
 19138 ;;		_putch
 19139 ;; This function uses a reentrant model
 19140 ;;
 19141                           
 19142                           	psect	text65
 19143  0169DC                     __ptext65:
 19144                           	opt callstack 0
 19145  0169DC                     _ringBufS_put_dma:
 19146                           	opt callstack 13
 19147                           
 19148                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19149                           ;stkvar	__this @ sp[(0)+-2]
 19150                           
 19151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19152                           ;incstack = 0
 19153  0169DC  0EFE               	movlw	-2
 19154  0169DE  006F FF8C  F03F    	movff	plusw1,btemp+10
 19155  0169E4  0EFF               	movlw	-1
 19156  0169E6  006F FF8C  F040    	movff	plusw1,btemp+11
 19157  0169EC  0E42               	movlw	66
 19158  0169EE  243F               	addwf	(btemp+10)^0,w,c
 19159  0169F0  6ED9               	movwf	fsr2l,c
 19160  0169F2  0E00               	movlw	0
 19161  0169F4  2040               	addwfc	(btemp+11)^0,w,c
 19162  0169F6  6EDA               	movwf	fsr2h,c
 19163  0169F8  0E40               	movlw	64
 19164  0169FA  60DF               	cpfslt	indf2,c
 19165  0169FC  D040               	goto	l1464
 19166                           
 19167                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19168                           ;stkvar	_c @ sp[(0)+-3]
 19169                           ;stkvar	__this @ sp[(0)+-2]
 19170  0169FE  0EFE               	movlw	-2
 19171  016A00  006F FF8C  F03F    	movff	plusw1,btemp+10
 19172  016A06  0EFF               	movlw	-1
 19173  016A08  006F FF8C  F040    	movff	plusw1,btemp+11
 19174  016A0E  0E40               	movlw	64
 19175  016A10  243F               	addwf	(btemp+10)^0,w,c
 19176  016A12  6ED9               	movwf	fsr2l,c
 19177  016A14  0E00               	movlw	0
 19178  016A16  2040               	addwfc	(btemp+11)^0,w,c
 19179  016A18  6EDA               	movwf	fsr2h,c
 19180  016A1A  50DF               	movf	indf2,w,c
 19181  016A1C  6E40               	movwf	(btemp+11)^0,c
 19182                           
 19183                           ;stkvar	__this @ sp[(0)+-2]
 19184  016A1E  0EFE               	movlw	-2
 19185  016A20  006F FF8C  F03D    	movff	plusw1,btemp+8
 19186  016A26  0EFF               	movlw	-1
 19187  016A28  006F FF8C  F03E    	movff	plusw1,btemp+9
 19188  016A2E  5040               	movf	(btemp+11)^0,w,c
 19189  016A30  243D               	addwf	(btemp+8)^0,w,c
 19190  016A32  6ED9               	movwf	fsr2l,c
 19191  016A34  0E00               	movlw	0
 19192  016A36  203E               	addwfc	(btemp+9)^0,w,c
 19193  016A38  6EDA               	movwf	fsr2h,c
 19194  016A3A  0EFD               	movlw	-3
 19195  016A3C  006F FF8F FFDF     	movff	plusw1,indf2
 19196                           
 19197                           ;ringbufs.c: 71:   ++_this->head;
 19198                           ;stkvar	__this @ sp[(0)+-2]
 19199  016A42  0EFE               	movlw	-2
 19200  016A44  006F FF8C  F03F    	movff	plusw1,btemp+10
 19201  016A4A  0EFF               	movlw	-1
 19202  016A4C  006F FF8C  F040    	movff	plusw1,btemp+11
 19203  016A52  0E40               	movlw	64
 19204  016A54  243F               	addwf	(btemp+10)^0,w,c
 19205  016A56  6ED9               	movwf	fsr2l,c
 19206  016A58  0E00               	movlw	0
 19207  016A5A  2040               	addwfc	(btemp+11)^0,w,c
 19208  016A5C  6EDA               	movwf	fsr2h,c
 19209  016A5E  2ADF               	incf	indf2,f,c
 19210                           
 19211                           ;ringbufs.c: 72:   ++_this->count;
 19212                           ;stkvar	__this @ sp[(0)+-2]
 19213  016A60  0EFE               	movlw	-2
 19214  016A62  006F FF8C  F03F    	movff	plusw1,btemp+10
 19215  016A68  0EFF               	movlw	-1
 19216  016A6A  006F FF8C  F040    	movff	plusw1,btemp+11
 19217  016A70  0E42               	movlw	66
 19218  016A72  243F               	addwf	(btemp+10)^0,w,c
 19219  016A74  6ED9               	movwf	fsr2l,c
 19220  016A76  0E00               	movlw	0
 19221  016A78  2040               	addwfc	(btemp+11)^0,w,c
 19222  016A7A  6EDA               	movwf	fsr2h,c
 19223  016A7C  2ADF               	incf	indf2,f,c
 19224  016A7E                     l1464:
 19225                           
 19226                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19227  016A7E  52E5               	movf	postdec1,f,c
 19228  016A80  52E5               	movf	postdec1,f,c
 19229  016A82  52E5               	movf	postdec1,f,c
 19230  016A84  0012               	return		;funcret
 19231  016A86                     __end_of_ringBufS_put_dma:
 19232                           	opt callstack 0
 19233                           
 19234 ;; *************** function _atoi *****************
 19235 ;; Defined at:
 19236 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19237 ;; Parameters:    Size  Location     Type
 19238 ;;  s               2  [STACK] PTR const unsigned char 
 19239 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
 19240 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 19241 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
 19242 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
 19243 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
 19244 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
 19245 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 19246 ;; Auto vars:     Size  Location     Type
 19247 ;;  n               2  [STACK] int 
 19248 ;;  neg             2  [STACK] int 
 19249 ;; Return value:  Size  Location     Type
 19250 ;;                  2  [STACK] int 
 19251 ;; Registers used:
 19252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19253 ;; Tracked objects:
 19254 ;;		On entry : 0/4
 19255 ;;		On exit  : 0/0
 19256 ;;		Unchanged: 0/0
 19257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19262 ;;Total ram usage:        0 bytes
 19263 ;; Hardware stack levels used:    1
 19264 ;; Hardware stack levels required when called:    7
 19265 ;; This function calls:
 19266 ;;		_isdigit
 19267 ;;		_isspace
 19268 ;; This function is called by:
 19269 ;;		_vfpfcnvrt
 19270 ;; This function uses a reentrant model
 19271 ;;
 19272                           
 19273                           	psect	text66
 19274  014AB8                     __ptext66:
 19275                           	opt callstack 0
 19276  014AB8                     _atoi:
 19277                           	opt callstack 0
 19278                           
 19279                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19280  014AB8  0E09               	movlw	9
 19281  014ABA  26E1               	addwf	fsr1l,f,c
 19282  014ABC  0E00               	movlw	0
 19283  014ABE  22E2               	addwfc	fsr1h,f,c
 19284                           
 19285                           ;stkvar	_n @ sp[(-9)+5]
 19286                           
 19287                           ;incstack = 0
 19288  014AC0  0EFC               	movlw	-4
 19289  014AC2  6AE3               	clrf	plusw1,c
 19290  014AC4  0EFD               	movlw	-3
 19291  014AC6  6AE3               	clrf	plusw1,c
 19292                           
 19293                           ;stkvar	_neg @ sp[(-9)+7]
 19294  014AC8  0EFE               	movlw	-2
 19295  014ACA  6AE3               	clrf	plusw1,c
 19296  014ACC  0EFF               	movlw	-1
 19297  014ACE  6AE3               	clrf	plusw1,c
 19298  014AD0  D011               	goto	l7365
 19299  014AD2                     l7363:
 19300                           
 19301                           ;stkvar	_s @ sp[(-9)+-2]
 19302  014AD2  0EF5               	movlw	-11
 19303  014AD4  50E3               	movf	plusw1,w,c
 19304  014AD6  0F01               	addlw	1
 19305  014AD8  6E35               	movwf	btemp^0,c
 19306  014ADA  0EF5               	movlw	-11
 19307  014ADC  0060  F0D7  FFE3   	movff	btemp,plusw1
 19308  014AE2  6A35               	clrf	btemp^0,c
 19309  014AE4  0EF6               	movlw	-10
 19310  014AE6  50E3               	movf	plusw1,w,c
 19311  014AE8  2035               	addwfc	btemp^0,w,c
 19312  014AEA  6E35               	movwf	btemp^0,c
 19313  014AEC  0EF6               	movlw	-10
 19314  014AEE  0060  F0D7  FFE3   	movff	btemp,plusw1
 19315  014AF4                     l7365:
 19316                           
 19317                           ;stkvar	_atoi$4632 @ sp[(-9)+4]
 19318  014AF4  0EFB               	movlw	-5
 19319  014AF6  6AE3               	clrf	plusw1,c
 19320  014AF8  2AE3               	incf	plusw1,f,c
 19321                           
 19322                           ;stkvar	_s @ sp[(-9)+-2]
 19323  014AFA  50E1               	movf	fsr1l,w,c
 19324  014AFC  0FF5               	addlw	-11
 19325  014AFE  6ED9               	movwf	fsr2l,c
 19326  014B00  50E2               	movf	fsr1h,w,c
 19327  014B02  6EDA               	movwf	fsr2h,c
 19328  014B04  0EFF               	movlw	255
 19329  014B06  22DA               	addwfc	fsr2h,f,c
 19330  014B08  006F FF7B FFF6     	movff	postinc2,tblptrl
 19331  014B0E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19332  014B14                     	if	0	;tblptru may be non-zero
 19333  014B14                     	endif
 19334  014B14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19335  014B14  0E00               	movlw	low (__mediumconst shr (0+16))
 19336  014B16  6EF8               	movwf	tblptru,c
 19337  014B18                     	endif
 19338  014B18  0008               	tblrd		*
 19339  014B1A  50F5               	movf	tablat,w,c
 19340  014B1C  0A20               	xorlw	32
 19341  014B1E  B4D8               	btfsc	status,2,c
 19342  014B20  D023               	goto	l7373
 19343  014B22  0EF7               	movlw	247
 19344  014B24  6E3F               	movwf	(btemp+10)^0,c
 19345  014B26  0EFF               	movlw	255
 19346  014B28  6E40               	movwf	(btemp+11)^0,c
 19347                           
 19348                           ;stkvar	_s @ sp[(-9)+-2]
 19349  014B2A  50E1               	movf	fsr1l,w,c
 19350  014B2C  0FF5               	addlw	-11
 19351  014B2E  6ED9               	movwf	fsr2l,c
 19352  014B30  50E2               	movf	fsr1h,w,c
 19353  014B32  6EDA               	movwf	fsr2h,c
 19354  014B34  0EFF               	movlw	255
 19355  014B36  22DA               	addwfc	fsr2h,f,c
 19356  014B38  006F FF7B FFF6     	movff	postinc2,tblptrl
 19357  014B3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19358  014B44                     	if	0	;tblptru may be non-zero
 19359  014B44                     	endif
 19360  014B44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19361  014B44  0E00               	movlw	low (__mediumconst shr (0+16))
 19362  014B46  6EF8               	movwf	tblptru,c
 19363  014B48                     	endif
 19364  014B48  0008               	tblrd		*
 19365  014B4A  50F5               	movf	tablat,w,c
 19366  014B4C  6E3D               	movwf	(btemp+8)^0,c
 19367  014B4E  6A3E               	clrf	(btemp+9)^0,c
 19368  014B50  503F               	movf	(btemp+10)^0,w,c
 19369  014B52  263D               	addwf	(btemp+8)^0,f,c
 19370  014B54  5040               	movf	(btemp+11)^0,w,c
 19371  014B56  223E               	addwfc	(btemp+9)^0,f,c
 19372  014B58  503E               	movf	(btemp+9)^0,w,c
 19373  014B5A  E104               	bnz	u7090
 19374  014B5C  0E05               	movlw	5
 19375  014B5E  5C3D               	subwf	(btemp+8)^0,w,c
 19376  014B60  A0D8               	btfss	status,0,c
 19377  014B62  D002               	goto	l7373
 19378  014B64                     u7090:
 19379                           
 19380                           ;stkvar	_atoi$4632 @ sp[(-9)+4]
 19381  014B64  0EFB               	movlw	-5
 19382  014B66  6AE3               	clrf	plusw1,c
 19383  014B68                     l7373:
 19384                           
 19385                           ;stkvar	_atoi$4632 @ sp[(-9)+4]
 19386  014B68  0EFB               	movlw	-5
 19387  014B6A  50E3               	movf	plusw1,w,c
 19388  014B6C  6E3F               	movwf	(btemp+10)^0,c
 19389  014B6E  6A40               	clrf	(btemp+11)^0,c
 19390                           
 19391                           ;stkvar	_atoi$4631 @ sp[(-9)+2]
 19392  014B70  0EF9               	movlw	-7
 19393  014B72  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19394  014B78  0EFA               	movlw	-6
 19395  014B7A  0060  F103  FFE3   	movff	btemp+11,plusw1
 19396                           
 19397                           ;stkvar	_atoi$4631 @ sp[(-9)+2]
 19398  014B80  0EF9               	movlw	-7
 19399  014B82  006F FF8C  F035    	movff	plusw1,btemp
 19400  014B88  0EFA               	movlw	-6
 19401  014B8A  50E3               	movf	plusw1,w,c
 19402  014B8C  1035               	iorwf	btemp^0,w,c
 19403  014B8E  B4D8               	btfsc	status,2,c
 19404  014B90  D01F               	goto	l7383
 19405  014B92  D79F               	goto	l7363
 19406  014B94                     l7379:
 19407  014B94  0E01               	movlw	1
 19408  014B96  6E3F               	movwf	(btemp+10)^0,c
 19409  014B98  0E00               	movlw	0
 19410  014B9A  6E40               	movwf	(btemp+11)^0,c
 19411                           
 19412                           ;stkvar	_neg @ sp[(-9)+7]
 19413  014B9C  0EFE               	movlw	-2
 19414  014B9E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19415  014BA4  0EFF               	movlw	-1
 19416  014BA6  0060  F103  FFE3   	movff	btemp+11,plusw1
 19417  014BAC                     l7381:
 19418                           
 19419                           ;stkvar	_s @ sp[(-9)+-2]
 19420  014BAC  0EF5               	movlw	-11
 19421  014BAE  50E3               	movf	plusw1,w,c
 19422  014BB0  0F01               	addlw	1
 19423  014BB2  6E35               	movwf	btemp^0,c
 19424  014BB4  0EF5               	movlw	-11
 19425  014BB6  0060  F0D7  FFE3   	movff	btemp,plusw1
 19426  014BBC  6A35               	clrf	btemp^0,c
 19427  014BBE  0EF6               	movlw	-10
 19428  014BC0  50E3               	movf	plusw1,w,c
 19429  014BC2  2035               	addwfc	btemp^0,w,c
 19430  014BC4  6E35               	movwf	btemp^0,c
 19431  014BC6  0EF6               	movlw	-10
 19432  014BC8  0060  F0D7  FFE3   	movff	btemp,plusw1
 19433  014BCE  D053               	goto	l7389
 19434  014BD0                     l7383:
 19435                           
 19436                           ;stkvar	_s @ sp[(-9)+-2]
 19437  014BD0  50E1               	movf	fsr1l,w,c
 19438  014BD2  0FF5               	addlw	-11
 19439  014BD4  6ED9               	movwf	fsr2l,c
 19440  014BD6  50E2               	movf	fsr1h,w,c
 19441  014BD8  6EDA               	movwf	fsr2h,c
 19442  014BDA  0EFF               	movlw	255
 19443  014BDC  22DA               	addwfc	fsr2h,f,c
 19444  014BDE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19445  014BE4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19446  014BEA                     	if	0	;tblptru may be non-zero
 19447  014BEA                     	endif
 19448  014BEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19449  014BEA  0E00               	movlw	low (__mediumconst shr (0+16))
 19450  014BEC  6EF8               	movwf	tblptru,c
 19451  014BEE                     	endif
 19452  014BEE  0008               	tblrd		*
 19453  014BF0  50F5               	movf	tablat,w,c
 19454  014BF2  6E3F               	movwf	(btemp+10)^0,c
 19455  014BF4  6A40               	clrf	(btemp+11)^0,c
 19456                           
 19457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19458                           ; Switch size 1, requested type "simple"
 19459                           ; Number of cases is 1, Range of values is 0 to 0
 19460                           ; switch strategies available:
 19461                           ; Name         Instructions Cycles
 19462                           ; simple_byte            4     3 (average)
 19463                           ;	Chosen strategy is simple_byte
 19464  014BF6  5040               	movf	(btemp+11)^0,w,c
 19465  014BF8  0A00               	xorlw	0	; case 0
 19466  014BFA  A4D8               	btfss	status,2,c
 19467  014BFC  D03C               	goto	l7389
 19468                           
 19469                           ; Switch size 1, requested type "simple"
 19470                           ; Number of cases is 2, Range of values is 43 to 45
 19471                           ; switch strategies available:
 19472                           ; Name         Instructions Cycles
 19473                           ; simple_byte            7     4 (average)
 19474                           ;	Chosen strategy is simple_byte
 19475  014BFE  503F               	movf	(btemp+10)^0,w,c
 19476  014C00  0A2B               	xorlw	43	; case 43
 19477  014C02  B4D8               	btfsc	status,2,c
 19478  014C04  D7D3               	goto	l7381
 19479  014C06  0A06               	xorlw	6	; case 45
 19480  014C08  B4D8               	btfsc	status,2,c
 19481  014C0A  D7C4               	goto	l7379
 19482  014C0C  D034               	goto	l7389
 19483  014C0E                     l7385:
 19484                           
 19485                           ;stkvar	_n @ sp[(-9)+5]
 19486  014C0E  0EFC               	movlw	-4
 19487  014C10  006F FF8C  F03F    	movff	plusw1,btemp+10
 19488  014C16  0EFD               	movlw	-3
 19489  014C18  006F FF8C  F040    	movff	plusw1,btemp+11
 19490  014C1E  0E0A               	movlw	10
 19491  014C20  023F               	mulwf	(btemp+10)^0,c
 19492  014C22  006F FFCC  F03D    	movff	prodl,btemp+8
 19493  014C28  006F FFD0  F03E    	movff	prodh,btemp+9
 19494  014C2E  0240               	mulwf	(btemp+11)^0,c
 19495  014C30  50F3               	movf	prodl,w,c
 19496  014C32  263E               	addwf	(btemp+9)^0,f,c
 19497                           
 19498                           ;stkvar	_s @ sp[(-9)+-2]
 19499  014C34  50E1               	movf	fsr1l,w,c
 19500  014C36  0FF5               	addlw	-11
 19501  014C38  6ED9               	movwf	fsr2l,c
 19502  014C3A  50E2               	movf	fsr1h,w,c
 19503  014C3C  6EDA               	movwf	fsr2h,c
 19504  014C3E  0EFF               	movlw	255
 19505  014C40  22DA               	addwfc	fsr2h,f,c
 19506  014C42  006F FF7B FFF6     	movff	postinc2,tblptrl
 19507  014C48  006F FF77 FFF7     	movff	postdec2,tblptrh
 19508  014C4E                     	if	0	;tblptru may be non-zero
 19509  014C4E                     	endif
 19510  014C4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19511  014C4E  0E00               	movlw	low (__mediumconst shr (0+16))
 19512  014C50  6EF8               	movwf	tblptru,c
 19513  014C52                     	endif
 19514  014C52  0008               	tblrd		*
 19515  014C54  50F5               	movf	tablat,w,c
 19516  014C56  5E3D               	subwf	(btemp+8)^0,f,c
 19517  014C58  0E00               	movlw	0
 19518  014C5A  5A3E               	subwfb	(btemp+9)^0,f,c
 19519  014C5C  0E30               	movlw	48
 19520  014C5E  263D               	addwf	(btemp+8)^0,f,c
 19521  014C60  0E00               	movlw	0
 19522  014C62  223E               	addwfc	(btemp+9)^0,f,c
 19523                           
 19524                           ;stkvar	_n @ sp[(-9)+5]
 19525  014C64  0EFC               	movlw	-4
 19526  014C66  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 19527  014C6C  0EFD               	movlw	-3
 19528  014C6E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 19529  014C74  D79B               	goto	l7381
 19530  014C76                     l7389:
 19531  014C76  0ED0               	movlw	208
 19532  014C78  6E3F               	movwf	(btemp+10)^0,c
 19533  014C7A  0EFF               	movlw	255
 19534  014C7C  6E40               	movwf	(btemp+11)^0,c
 19535                           
 19536                           ;stkvar	_s @ sp[(-9)+-2]
 19537  014C7E  50E1               	movf	fsr1l,w,c
 19538  014C80  0FF5               	addlw	-11
 19539  014C82  6ED9               	movwf	fsr2l,c
 19540  014C84  50E2               	movf	fsr1h,w,c
 19541  014C86  6EDA               	movwf	fsr2h,c
 19542  014C88  0EFF               	movlw	255
 19543  014C8A  22DA               	addwfc	fsr2h,f,c
 19544  014C8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19545  014C92  006F FF77 FFF7     	movff	postdec2,tblptrh
 19546  014C98                     	if	0	;tblptru may be non-zero
 19547  014C98                     	endif
 19548  014C98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19549  014C98  0E00               	movlw	low (__mediumconst shr (0+16))
 19550  014C9A  6EF8               	movwf	tblptru,c
 19551  014C9C                     	endif
 19552  014C9C  0008               	tblrd		*
 19553  014C9E  50F5               	movf	tablat,w,c
 19554  014CA0  6E3D               	movwf	(btemp+8)^0,c
 19555  014CA2  6A3E               	clrf	(btemp+9)^0,c
 19556  014CA4  503F               	movf	(btemp+10)^0,w,c
 19557  014CA6  263D               	addwf	(btemp+8)^0,f,c
 19558  014CA8  5040               	movf	(btemp+11)^0,w,c
 19559  014CAA  223E               	addwfc	(btemp+9)^0,f,c
 19560  014CAC  503E               	movf	(btemp+9)^0,w,c
 19561  014CAE  E106               	bnz	u7110
 19562  014CB0  0E0A               	movlw	10
 19563  014CB2  5C3D               	subwf	(btemp+8)^0,w,c
 19564  014CB4  B0D8               	btfsc	status,0,c
 19565  014CB6  D002               	goto	u7110
 19566  014CB8  0E01               	movlw	1
 19567  014CBA  D001               	goto	u7120
 19568  014CBC                     u7110:
 19569  014CBC  0E00               	movlw	0
 19570  014CBE                     u7120:
 19571  014CBE  6E3F               	movwf	(btemp+10)^0,c
 19572  014CC0  6A40               	clrf	(btemp+11)^0,c
 19573                           
 19574                           ;stkvar	_atoi$4633 @ sp[(-9)+0]
 19575  014CC2  0EF7               	movlw	-9
 19576  014CC4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19577  014CCA  0EF8               	movlw	-8
 19578  014CCC  0060  F103  FFE3   	movff	btemp+11,plusw1
 19579                           
 19580                           ;stkvar	_atoi$4633 @ sp[(-9)+0]
 19581  014CD2  0EF7               	movlw	-9
 19582  014CD4  006F FF8C  F035    	movff	plusw1,btemp
 19583  014CDA  0EF8               	movlw	-8
 19584  014CDC  50E3               	movf	plusw1,w,c
 19585  014CDE  1035               	iorwf	btemp^0,w,c
 19586  014CE0  A4D8               	btfss	status,2,c
 19587  014CE2  D795               	goto	l7385
 19588                           
 19589                           ;stkvar	_neg @ sp[(-9)+7]
 19590  014CE4  0EFE               	movlw	-2
 19591  014CE6  006F FF8C  F035    	movff	plusw1,btemp
 19592  014CEC  0EFF               	movlw	-1
 19593  014CEE  50E3               	movf	plusw1,w,c
 19594  014CF0  1035               	iorwf	btemp^0,w,c
 19595  014CF2  A4D8               	btfss	status,2,c
 19596  014CF4  D00E               	goto	l7399
 19597                           
 19598                           ;stkvar	_n @ sp[(-9)+5]
 19599  014CF6  0EFC               	movlw	-4
 19600  014CF8  006F FF8C  F035    	movff	plusw1,btemp
 19601  014CFE  1E35               	comf	btemp^0,f,c
 19602  014D00  0EFD               	movlw	-3
 19603  014D02  006F FF8C  F036    	movff	plusw1,btemp+1
 19604  014D08  1E36               	comf	(btemp+1)^0,f,c
 19605  014D0A  2A35               	incf	btemp^0,f,c
 19606  014D0C  B4D8               	btfsc	status,2,c
 19607  014D0E  2A36               	incf	(btemp+1)^0,f,c
 19608  014D10  D008               	goto	l2683
 19609  014D12                     l7399:
 19610                           
 19611                           ;stkvar	_n @ sp[(-9)+5]
 19612  014D12  0EFC               	movlw	-4
 19613  014D14  006F FF8C  F035    	movff	plusw1,btemp
 19614  014D1A  0EFD               	movlw	-3
 19615  014D1C  006F FF8C  F036    	movff	plusw1,btemp+1
 19616  014D22                     l2683:
 19617                           
 19618                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19619  014D22  0EF5               	movlw	245
 19620  014D24  26E1               	addwf	fsr1l,f,c
 19621  014D26  0EFF               	movlw	255
 19622  014D28  22E2               	addwfc	fsr1h,f,c
 19623  014D2A  0012               	return		;funcret
 19624  014D2C                     __end_of_atoi:
 19625                           	opt callstack 0
 19626                           
 19627 ;; *************** function _isspace *****************
 19628 ;; Defined at:
 19629 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19630 ;; Parameters:    Size  Location     Type
 19631 ;;  c               2  [STACK] int 
 19632 ;; Auto vars:     Size  Location     Type
 19633 ;;		None
 19634 ;; Return value:  Size  Location     Type
 19635 ;;                  2  [STACK] int 
 19636 ;; Registers used:
 19637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19638 ;; Tracked objects:
 19639 ;;		On entry : 0/0
 19640 ;;		On exit  : 0/0
 19641 ;;		Unchanged: 0/0
 19642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19647 ;;Total ram usage:        0 bytes
 19648 ;; Hardware stack levels used:    1
 19649 ;; Hardware stack levels required when called:    6
 19650 ;; This function calls:
 19651 ;;		Nothing
 19652 ;; This function is called by:
 19653 ;;		_atoi
 19654 ;; This function uses a reentrant model
 19655 ;;
 19656                           
 19657                           	psect	text67
 19658  0174E2                     __ptext67:
 19659                           	opt callstack 0
 19660  0174E2                     _isspace:
 19661                           	opt callstack 0
 19662                           
 19663                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19664  0174E2  52E6               	movf	postinc1,f,c
 19665                           
 19666                           ;stkvar	_isspace$4671 @ sp[(-1)+0]
 19667                           
 19668                           ;incstack = 0
 19669  0174E4  0EFF               	movlw	-1
 19670  0174E6  6AE3               	clrf	plusw1,c
 19671  0174E8  2AE3               	incf	plusw1,f,c
 19672                           
 19673                           ;stkvar	_c @ sp[(-1)+-2]
 19674  0174EA  0EFD               	movlw	-3
 19675  0174EC  006F FF8C  F035    	movff	plusw1,btemp
 19676  0174F2  0E20               	movlw	32
 19677  0174F4  1835               	xorwf	btemp^0,w,c
 19678  0174F6  E104               	bnz	u6080
 19679  0174F8  0EFE               	movlw	-2
 19680  0174FA  50E3               	movf	plusw1,w,c
 19681  0174FC  B4D8               	btfsc	status,2,c
 19682  0174FE  D012               	goto	l6849
 19683  017500                     u6080:
 19684                           
 19685                           ;stkvar	_c @ sp[(-1)+-2]
 19686  017500  0EFD               	movlw	-3
 19687  017502  50E3               	movf	plusw1,w,c
 19688  017504  0FF7               	addlw	247
 19689  017506  6E3F               	movwf	(btemp+10)^0,c
 19690  017508  0EFE               	movlw	-2
 19691  01750A  006F FF8C  F040    	movff	plusw1,btemp+11
 19692  017510  0EFF               	movlw	255
 19693  017512  2240               	addwfc	(btemp+11)^0,f,c
 19694  017514  5040               	movf	(btemp+11)^0,w,c
 19695  017516  E104               	bnz	u6090
 19696  017518  0E05               	movlw	5
 19697  01751A  5C3F               	subwf	(btemp+10)^0,w,c
 19698  01751C  A0D8               	btfss	status,0,c
 19699  01751E  D002               	goto	l6849
 19700  017520                     u6090:
 19701                           
 19702                           ;stkvar	_isspace$4671 @ sp[(-1)+0]
 19703  017520  0EFF               	movlw	-1
 19704  017522  6AE3               	clrf	plusw1,c
 19705  017524                     l6849:
 19706                           
 19707                           ;stkvar	_isspace$4671 @ sp[(-1)+0]
 19708  017524  0EFF               	movlw	-1
 19709  017526  50E3               	movf	plusw1,w,c
 19710  017528  6E35               	movwf	btemp^0,c
 19711  01752A  6A36               	clrf	(btemp+1)^0,c
 19712                           
 19713                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19714  01752C  52E5               	movf	postdec1,f,c
 19715  01752E  52E5               	movf	postdec1,f,c
 19716  017530  52E5               	movf	postdec1,f,c
 19717  017532  0012               	return		;funcret
 19718  017534                     __end_of_isspace:
 19719                           	opt callstack 0
 19720                           
 19721 ;; *************** function _isdigit *****************
 19722 ;; Defined at:
 19723 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19724 ;; Parameters:    Size  Location     Type
 19725 ;;  c               2  [STACK] int 
 19726 ;; Auto vars:     Size  Location     Type
 19727 ;;		None
 19728 ;; Return value:  Size  Location     Type
 19729 ;;                  2  [STACK] int 
 19730 ;; Registers used:
 19731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19732 ;; Tracked objects:
 19733 ;;		On entry : 0/0
 19734 ;;		On exit  : 0/0
 19735 ;;		Unchanged: 0/0
 19736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19741 ;;Total ram usage:        0 bytes
 19742 ;; Hardware stack levels used:    1
 19743 ;; Hardware stack levels required when called:    6
 19744 ;; This function calls:
 19745 ;;		Nothing
 19746 ;; This function is called by:
 19747 ;;		_vfpfcnvrt
 19748 ;;		_atoi
 19749 ;; This function uses a reentrant model
 19750 ;;
 19751                           
 19752                           	psect	text68
 19753  017980                     __ptext68:
 19754                           	opt callstack 0
 19755  017980                     _isdigit:
 19756                           	opt callstack 18
 19757                           
 19758                           ;stkvar	_c @ sp[(0)+-2]
 19759                           
 19760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19761                           ;incstack = 0
 19762  017980  0EFE               	movlw	-2
 19763  017982  50E3               	movf	plusw1,w,c
 19764  017984  0FD0               	addlw	208
 19765  017986  6E3F               	movwf	(btemp+10)^0,c
 19766  017988  0EFF               	movlw	-1
 19767  01798A  006F FF8C  F040    	movff	plusw1,btemp+11
 19768  017990  0EFF               	movlw	255
 19769  017992  2240               	addwfc	(btemp+11)^0,f,c
 19770  017994  5040               	movf	(btemp+11)^0,w,c
 19771  017996  E106               	bnz	u5040
 19772  017998  0E0A               	movlw	10
 19773  01799A  5C3F               	subwf	(btemp+10)^0,w,c
 19774  01799C  B0D8               	btfsc	status,0,c
 19775  01799E  D002               	goto	u5040
 19776  0179A0  0E01               	movlw	1
 19777  0179A2  D001               	goto	u5050
 19778  0179A4                     u5040:
 19779  0179A4  0E00               	movlw	0
 19780  0179A6                     u5050:
 19781  0179A6  6E35               	movwf	btemp^0,c
 19782  0179A8  6A36               	clrf	(btemp+1)^0,c
 19783                           
 19784                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19785  0179AA  52E5               	movf	postdec1,f,c
 19786  0179AC  52E5               	movf	postdec1,f,c
 19787  0179AE  0012               	return		;funcret
 19788  0179B0                     __end_of_isdigit:
 19789                           	opt callstack 0
 19790                           
 19791 ;; *************** function _set_vterm *****************
 19792 ;; Defined at:
 19793 ;;		line 104 in file "mconfig.c"
 19794 ;; Parameters:    Size  Location     Type
 19795 ;;  vterm           1  [STACK] unsigned char 
 19796 ;; Auto vars:     Size  Location     Type
 19797 ;;		None
 19798 ;; Return value:  Size  Location     Type
 19799 ;;                  1  [STACK] unsigned char 
 19800 ;; Registers used:
 19801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 19802 ;; Tracked objects:
 19803 ;;		On entry : 0/0
 19804 ;;		On exit  : 3F/4
 19805 ;;		Unchanged: 0/0
 19806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19811 ;;Total ram usage:        0 bytes
 19812 ;; Hardware stack levels used:    1
 19813 ;; Hardware stack levels required when called:    6
 19814 ;; This function calls:
 19815 ;;		Nothing
 19816 ;; This function is called by:
 19817 ;;		_main
 19818 ;;		_check_help
 19819 ;; This function uses a reentrant model
 19820 ;;
 19821                           
 19822                           	psect	text69
 19823  017E84                     __ptext69:
 19824                           	opt callstack 0
 19825  017E84                     _set_vterm:
 19826                           	opt callstack 24
 19827                           
 19828                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 19829                           ;stkvar	_vterm @ sp[(0)+-1]
 19830                           
 19831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19832                           ;incstack = 0
 19833  017E84  0EFF               	movlw	-1
 19834  017E86  006F FF8C  F040    	movff	plusw1,btemp+11
 19835  017E8C  0E03               	movlw	3
 19836  017E8E  1640               	andwf	(btemp+11)^0,f,c
 19837  017E90  0104               	movlb	4	; () banked
 19838  017E92  51D8               	movf	(_D+216)& (0+255),w,b
 19839  017E94  1840               	xorwf	(btemp+11)^0,w,c
 19840  017E96  0BFE               	andlw	-2
 19841  017E98  1840               	xorwf	(btemp+11)^0,w,c
 19842  017E9A  6FD8               	movwf	(_D+216)& (0+255),b
 19843                           
 19844                           ; BSR set to: 4
 19845                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19846  017E9C  52E5               	movf	postdec1,f,c
 19847  017E9E  0012               	return		;funcret
 19848  017EA0                     __end_of_set_vterm:
 19849                           	opt callstack 0
 19850                           
 19851 ;; *************** function _set_temp_display_help *****************
 19852 ;; Defined at:
 19853 ;;		line 208 in file "mconfig.c"
 19854 ;; Parameters:    Size  Location     Type
 19855 ;;  new_response    1  [STACK] const enum E16501
 19856 ;; Auto vars:     Size  Location     Type
 19857 ;;		None
 19858 ;; Return value:  Size  Location     Type
 19859 ;;                  1  [STACK] enum E16501
 19860 ;; Registers used:
 19861 ;;		wreg, fsr1l, fsr1h
 19862 ;; Tracked objects:
 19863 ;;		On entry : 0/4
 19864 ;;		On exit  : 3F/2
 19865 ;;		Unchanged: 0/0
 19866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19871 ;;Total ram usage:        0 bytes
 19872 ;; Hardware stack levels used:    1
 19873 ;; Hardware stack levels required when called:    6
 19874 ;; This function calls:
 19875 ;;		Nothing
 19876 ;; This function is called by:
 19877 ;;		_check_help
 19878 ;; This function uses a reentrant model
 19879 ;;
 19880                           
 19881                           	psect	text70
 19882  017F9E                     __ptext70:
 19883                           	opt callstack 0
 19884  017F9E                     _set_temp_display_help:
 19885                           	opt callstack 23
 19886                           
 19887                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 19888                           
 19889                           ; BSR set to: 4
 19890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19891                           ;incstack = 0
 19892  017F9E  0102               	movlb	2	; () banked
 19893  017FA0  51B2               	movf	(_V+178)& (0+255),w,b	;volatile
 19894                           
 19895                           ; BSR set to: 2
 19896                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 19897                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19898  017FA2  0EFF               	movlw	-1
 19899  017FA4  006F FF8C  F2B2    	movff	plusw1,_V+178	;volatile
 19900                           
 19901                           ; BSR set to: 2
 19902                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19903  017FAA  52E5               	movf	postdec1,f,c
 19904  017FAC  0012               	return		;funcret
 19905  017FAE                     __end_of_set_temp_display_help:
 19906                           	opt callstack 0
 19907                           
 19908 ;; *************** function _set_display_info *****************
 19909 ;; Defined at:
 19910 ;;		line 197 in file "mconfig.c"
 19911 ;; Parameters:    Size  Location     Type
 19912 ;;  new_response    1  [STACK] const enum E16501
 19913 ;; Auto vars:     Size  Location     Type
 19914 ;;		None
 19915 ;; Return value:  Size  Location     Type
 19916 ;;                  1  [STACK] enum E16986
 19917 ;; Registers used:
 19918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19919 ;; Tracked objects:
 19920 ;;		On entry : 0/4
 19921 ;;		On exit  : 0/0
 19922 ;;		Unchanged: 0/0
 19923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19928 ;;Total ram usage:        0 bytes
 19929 ;; Hardware stack levels used:    1
 19930 ;; Hardware stack levels required when called:    7
 19931 ;; This function calls:
 19932 ;;		_TimerDone
 19933 ;; This function is called by:
 19934 ;;		_main
 19935 ;;		_check_help
 19936 ;; This function uses a reentrant model
 19937 ;;
 19938                           
 19939                           	psect	text71
 19940  017DF0                     __ptext71:
 19941                           	opt callstack 0
 19942  017DF0                     _set_display_info:
 19943                           	opt callstack 23
 19944                           
 19945                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 19946                           
 19947                           ; BSR set to: 2
 19948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19949                           ;incstack = 0
 19950  017DF0  0E07               	movlw	7
 19951  017DF2  6EE6               	movwf	postinc1,c
 19952  017DF4  EC83  F0BE         	call	_TimerDone	;wreg free
 19953  017DF8  5035               	movf	btemp^0,w,c
 19954  017DFA  B4D8               	btfsc	status,2,c
 19955  017DFC  D006               	goto	l1601
 19956                           
 19957                           ;mconfig.c: 202:   old_info = V.response.info;
 19958  017DFE  0102               	movlb	2	; () banked
 19959  017E00  51B1               	movf	(_V+177)& (0+255),w,b	;volatile
 19960                           
 19961                           ; BSR set to: 2
 19962                           ;mconfig.c: 203:   V.response.info = new_response_info;
 19963                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19964  017E02  0EFF               	movlw	-1
 19965  017E04  006F FF8C  F2B1    	movff	plusw1,_V+177	;volatile
 19966  017E0A                     l1601:
 19967                           
 19968                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19969  017E0A  52E5               	movf	postdec1,f,c
 19970  017E0C  0012               	return		;funcret
 19971  017E0E                     __end_of_set_display_info:
 19972                           	opt callstack 0
 19973                           
 19974 ;; *************** function _mode_lamp_dim *****************
 19975 ;; Defined at:
 19976 ;;		line 13 in file "mconfig.c"
 19977 ;; Parameters:    Size  Location     Type
 19978 ;;  level           2  [STACK] const unsigned short 
 19979 ;; Auto vars:     Size  Location     Type
 19980 ;;		None
 19981 ;; Return value:  Size  Location     Type
 19982 ;;                  1  [STACK] void 
 19983 ;; Registers used:
 19984 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19985 ;; Tracked objects:
 19986 ;;		On entry : 0/2
 19987 ;;		On exit  : 0/0
 19988 ;;		Unchanged: 0/0
 19989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19994 ;;Total ram usage:        0 bytes
 19995 ;; Hardware stack levels used:    1
 19996 ;; Hardware stack levels required when called:    7
 19997 ;; This function calls:
 19998 ;;		_PWM8_LoadDutyValue
 19999 ;; This function is called by:
 20000 ;;		_main
 20001 ;;		_check_help
 20002 ;; This function uses a reentrant model
 20003 ;;
 20004                           
 20005                           	psect	text72
 20006  017EEE                     __ptext72:
 20007                           	opt callstack 0
 20008  017EEE                     _mode_lamp_dim:
 20009                           	opt callstack 23
 20010                           
 20011                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20012                           ;stkvar	_level @ sp[(0)+-2]
 20013                           
 20014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20015                           ;incstack = 0
 20016  017EEE  0EFE               	movlw	-2
 20017  017EF0  006F FF8F FFE6     	movff	plusw1,postinc1
 20018  017EF6  006F FF8F FFE6     	movff	plusw1,postinc1
 20019  017EFC  EC8F  F0BB         	call	_PWM8_LoadDutyValue	;wreg free
 20020                           
 20021                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20022  017F00  52E5               	movf	postdec1,f,c
 20023  017F02  52E5               	movf	postdec1,f,c
 20024  017F04  0012               	return		;funcret
 20025  017F06                     __end_of_mode_lamp_dim:
 20026                           	opt callstack 0
 20027                           
 20028 ;; *************** function _mode_lamp_bright *****************
 20029 ;; Defined at:
 20030 ;;		line 18 in file "mconfig.c"
 20031 ;; Parameters:    Size  Location     Type
 20032 ;;		None
 20033 ;; Auto vars:     Size  Location     Type
 20034 ;;		None
 20035 ;; Return value:  Size  Location     Type
 20036 ;;                  1  [STACK] void 
 20037 ;; Registers used:
 20038 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20039 ;; Tracked objects:
 20040 ;;		On entry : 0/2
 20041 ;;		On exit  : 0/0
 20042 ;;		Unchanged: 0/0
 20043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20048 ;;Total ram usage:        0 bytes
 20049 ;; Hardware stack levels used:    1
 20050 ;; Hardware stack levels required when called:    7
 20051 ;; This function calls:
 20052 ;;		_PWM8_LoadDutyValue
 20053 ;; This function is called by:
 20054 ;;		_check_help
 20055 ;; This function uses a reentrant model
 20056 ;;
 20057                           
 20058                           	psect	text73
 20059  017FBC                     __ptext73:
 20060                           	opt callstack 0
 20061  017FBC                     _mode_lamp_bright:
 20062                           	opt callstack 22
 20063                           
 20064                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20065                           
 20066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20067                           ;incstack = 0
 20068  017FBC  0E2C               	movlw	44
 20069  017FBE  6EE6               	movwf	postinc1,c
 20070  017FC0  0E01               	movlw	1
 20071  017FC2  6EE6               	movwf	postinc1,c
 20072  017FC4  EC8F  F0BB         	call	_PWM8_LoadDutyValue	;wreg free
 20073                           
 20074                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20075  017FC8  0012               	return		;funcret
 20076  017FCA                     __end_of_mode_lamp_bright:
 20077                           	opt callstack 0
 20078                           
 20079 ;; *************** function _PWM8_LoadDutyValue *****************
 20080 ;; Defined at:
 20081 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20082 ;; Parameters:    Size  Location     Type
 20083 ;;  dutyValue       2  [STACK] unsigned short 
 20084 ;; Auto vars:     Size  Location     Type
 20085 ;;		None
 20086 ;; Return value:  Size  Location     Type
 20087 ;;                  1  [STACK] void 
 20088 ;; Registers used:
 20089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20090 ;; Tracked objects:
 20091 ;;		On entry : 0/2
 20092 ;;		On exit  : 0/0
 20093 ;;		Unchanged: 0/0
 20094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20099 ;;Total ram usage:        0 bytes
 20100 ;; Hardware stack levels used:    1
 20101 ;; Hardware stack levels required when called:    6
 20102 ;; This function calls:
 20103 ;;		Nothing
 20104 ;; This function is called by:
 20105 ;;		_mode_lamp_dim
 20106 ;;		_mode_lamp_bright
 20107 ;; This function uses a reentrant model
 20108 ;;
 20109                           
 20110                           	psect	text74
 20111  01771E                     __ptext74:
 20112                           	opt callstack 0
 20113  01771E                     _PWM8_LoadDutyValue:
 20114                           	opt callstack 23
 20115                           
 20116                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20117                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20118                           
 20119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20120                           ;incstack = 0
 20121  01771E  0EFE               	movlw	-2
 20122  017720  006F FF8C  F03F    	movff	plusw1,btemp+10
 20123  017726  0EFF               	movlw	-1
 20124  017728  006F FF8C  F040    	movff	plusw1,btemp+11
 20125  01772E  90D8               	bcf	status,0,c
 20126  017730  3240               	rrcf	(btemp+11)^0,f,c
 20127  017732  323F               	rrcf	(btemp+10)^0,f,c
 20128  017734  90D8               	bcf	status,0,c
 20129  017736  3240               	rrcf	(btemp+11)^0,f,c
 20130  017738  323F               	rrcf	(btemp+10)^0,f,c
 20131  01773A  503F               	movf	(btemp+10)^0,w,c
 20132  01773C  6E61               	movwf	97,c	;volatile
 20133                           
 20134                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20135                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20136  01773E  0EFE               	movlw	-2
 20137  017740  006F FF8C  F040    	movff	plusw1,btemp+11
 20138  017746  0E03               	movlw	3
 20139  017748  1640               	andwf	(btemp+11)^0,f,c
 20140  01774A  0E06               	movlw	6
 20141  01774C  6E35               	movwf	btemp^0,c
 20142  01774E                     u7575:
 20143  01774E  90D8               	bcf	status,0,c
 20144  017750  3640               	rlcf	(btemp+11)^0,f,c
 20145  017752  2E35               	decfsz	btemp^0,f,c
 20146  017754  D7FC               	goto	u7575
 20147  017756  5040               	movf	(btemp+11)^0,w,c
 20148  017758  6E60               	movwf	96,c	;volatile
 20149                           
 20150                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20151  01775A  52E5               	movf	postdec1,f,c
 20152  01775C  52E5               	movf	postdec1,f,c
 20153  01775E  0012               	return		;funcret
 20154  017760                     __end_of_PWM8_LoadDutyValue:
 20155                           	opt callstack 0
 20156                           
 20157 ;; *************** function _help_button *****************
 20158 ;; Defined at:
 20159 ;;		line 26 in file "mconfig.c"
 20160 ;; Parameters:    Size  Location     Type
 20161 ;;		None
 20162 ;; Auto vars:     Size  Location     Type
 20163 ;;		None
 20164 ;; Return value:  Size  Location     Type
 20165 ;;                  1  [STACK] _Bool 
 20166 ;; Registers used:
 20167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20168 ;; Tracked objects:
 20169 ;;		On entry : 0/2
 20170 ;;		On exit  : 0/0
 20171 ;;		Unchanged: 0/0
 20172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20177 ;;Total ram usage:        0 bytes
 20178 ;; Hardware stack levels used:    1
 20179 ;; Hardware stack levels required when called:    7
 20180 ;; This function calls:
 20181 ;;		_StartTimer
 20182 ;;		_TimerDone
 20183 ;; This function is called by:
 20184 ;;		_check_help
 20185 ;; This function uses a reentrant model
 20186 ;;
 20187                           
 20188                           	psect	text75
 20189  0177DC                     __ptext75:
 20190                           	opt callstack 0
 20191  0177DC                     _help_button:
 20192                           	opt callstack 22
 20193                           
 20194                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20195                           
 20196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20197                           ;incstack = 0
 20198  0177DC  B0CB               	btfsc	203,0,c	;volatile
 20199  0177DE  D00C               	goto	l1544
 20200                           
 20201                           ;mconfig.c: 29:   V.help = 1;
 20202  0177E0  0102               	movlb	2	; () banked
 20203  0177E2  8DA8               	bsf	(_V+168)& (0+255),6,b	;volatile
 20204                           
 20205                           ; BSR set to: 2
 20206                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20207  0177E4  0E08               	movlw	8
 20208  0177E6  6EE6               	movwf	postinc1,c
 20209  0177E8  EC83  F0BE         	call	_TimerDone	;wreg free
 20210  0177EC  5035               	movf	btemp^0,w,c
 20211  0177EE  B4D8               	btfsc	status,2,c
 20212  0177F0  D003               	goto	l1544
 20213                           
 20214                           ;mconfig.c: 31:    return 1;
 20215  0177F2  0E01               	movlw	1
 20216  0177F4  6E35               	movwf	btemp^0,c
 20217  0177F6  0012               	return	
 20218  0177F8                     l1544:
 20219                           
 20220                           ;mconfig.c: 34:  if (!V.help)
 20221  0177F8  0102               	movlb	2	; () banked
 20222  0177FA  BDA8               	btfsc	(_V+168)& (0+255),6,b	;volatile
 20223  0177FC  D008               	goto	l8231
 20224                           
 20225                           ; BSR set to: 2
 20226                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20227  0177FE  0E2C               	movlw	44
 20228  017800  6EE6               	movwf	postinc1,c
 20229  017802  0E01               	movlw	1
 20230  017804  6EE6               	movwf	postinc1,c
 20231  017806  0E08               	movlw	8
 20232  017808  6EE6               	movwf	postinc1,c
 20233  01780A  ECD0  F0BB         	call	_StartTimer	;wreg free
 20234  01780E                     l8231:
 20235                           
 20236                           ;mconfig.c: 37:  return 0;
 20237  01780E  0E00               	movlw	0
 20238  017810  6E35               	movwf	btemp^0,c
 20239                           
 20240                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20241  017812  0012               	return		;funcret
 20242  017814                     __end_of_help_button:
 20243                           	opt callstack 0
 20244                           
 20245 ;; *************** function _TimerDone *****************
 20246 ;; Defined at:
 20247 ;;		line 20 in file "timers.c"
 20248 ;; Parameters:    Size  Location     Type
 20249 ;;  timer           1  [STACK] const unsigned char 
 20250 ;; Auto vars:     Size  Location     Type
 20251 ;;		None
 20252 ;; Return value:  Size  Location     Type
 20253 ;;                  1  [STACK] _Bool 
 20254 ;; Registers used:
 20255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20256 ;; Tracked objects:
 20257 ;;		On entry : 0/4
 20258 ;;		On exit  : 0/0
 20259 ;;		Unchanged: 0/0
 20260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20265 ;;Total ram usage:        0 bytes
 20266 ;; Hardware stack levels used:    1
 20267 ;; Hardware stack levels required when called:    6
 20268 ;; This function calls:
 20269 ;;		Nothing
 20270 ;; This function is called by:
 20271 ;;		_main
 20272 ;;		_WaitMs
 20273 ;;		_help_button
 20274 ;;		_check_help
 20275 ;;		_set_display_info
 20276 ;; This function uses a reentrant model
 20277 ;;
 20278                           
 20279                           	psect	text76
 20280  017D06                     __ptext76:
 20281                           	opt callstack 0
 20282  017D06                     _TimerDone:
 20283                           	opt callstack 23
 20284                           
 20285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20286                           ;incstack = 0
 20287  017D06  0004               	clrwdt		;# 
 20288                           
 20289                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20290                           ;stkvar	_timer @ sp[(0)+-1]
 20291  017D08  0EFF               	movlw	-1
 20292  017D0A  50E3               	movf	plusw1,w,c
 20293  017D0C  0D02               	mullw	2
 20294  017D0E  50F3               	movf	243,w,c
 20295  017D10  0F82               	addlw	low _tickCount
 20296  017D12  6ED9               	movwf	fsr2l,c
 20297  017D14  6ADA               	clrf	fsr2h,c
 20298  017D16  50DE               	movf	postinc2,w,c
 20299  017D18  10DE               	iorwf	postinc2,w,c
 20300  017D1A  A4D8               	btfss	status,2,c
 20301  017D1C  D002               	goto	l7685
 20302                           
 20303                           ;timers.c: 24:   return 1;
 20304  017D1E  0E01               	movlw	1
 20305  017D20  D001               	goto	L18
 20306  017D22                     l7685:
 20307                           
 20308                           ;timers.c: 26:  return 0;
 20309  017D22  0E00               	movlw	0
 20310  017D24                     L18:
 20311  017D24  6E35               	movwf	btemp^0,c
 20312                           
 20313                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20314  017D26  52E5               	movf	postdec1,f,c
 20315  017D28  0012               	return		;funcret
 20316  017D2A                     __end_of_TimerDone:
 20317                           	opt callstack 0
 20318                           
 20319 ;; *************** function _StartTimer *****************
 20320 ;; Defined at:
 20321 ;;		line 12 in file "timers.c"
 20322 ;; Parameters:    Size  Location     Type
 20323 ;;  timer           1  [STACK] const unsigned char 
 20324 ;;  count           2  [STACK] const unsigned short 
 20325 ;; Auto vars:     Size  Location     Type
 20326 ;;		None
 20327 ;; Return value:  Size  Location     Type
 20328 ;;                  1  [STACK] void 
 20329 ;; Registers used:
 20330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20331 ;; Tracked objects:
 20332 ;;		On entry : 0/4
 20333 ;;		On exit  : 0/0
 20334 ;;		Unchanged: 0/0
 20335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20340 ;;Total ram usage:        0 bytes
 20341 ;; Hardware stack levels used:    1
 20342 ;; Hardware stack levels required when called:    6
 20343 ;; This function calls:
 20344 ;;		Nothing
 20345 ;; This function is called by:
 20346 ;;		_main
 20347 ;;		_WaitMs
 20348 ;;		_help_button
 20349 ;;		_check_help
 20350 ;; This function uses a reentrant model
 20351 ;;
 20352                           
 20353                           	psect	text77
 20354  0177A0                     __ptext77:
 20355                           	opt callstack 0
 20356  0177A0                     _StartTimer:
 20357                           	opt callstack 21
 20358                           
 20359                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 20360                           ;stkvar	_count @ sp[(0)+-3]
 20361                           
 20362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20363                           ;incstack = 0
 20364  0177A0  0EFD               	movlw	-3
 20365  0177A2  006F FF8C  F03F    	movff	plusw1,btemp+10
 20366  0177A8  0EFE               	movlw	-2
 20367  0177AA  006F FF8C  F040    	movff	plusw1,btemp+11
 20368  0177B0  90D8               	bcf	status,0,c
 20369  0177B2  343F               	rlcf	(btemp+10)^0,w,c
 20370  0177B4  6E3D               	movwf	(btemp+8)^0,c
 20371  0177B6  3440               	rlcf	(btemp+11)^0,w,c
 20372  0177B8  6E3E               	movwf	(btemp+9)^0,c
 20373                           
 20374                           ;stkvar	_timer @ sp[(0)+-1]
 20375  0177BA  0EFF               	movlw	-1
 20376  0177BC  50E3               	movf	plusw1,w,c
 20377  0177BE  0D02               	mullw	2
 20378  0177C0  50F3               	movf	243,w,c
 20379  0177C2  0F82               	addlw	low _tickCount
 20380  0177C4  6ED9               	movwf	fsr2l,c
 20381  0177C6  6ADA               	clrf	fsr2h,c
 20382  0177C8  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 20383  0177CE  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 20384                           
 20385                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20386  0177D4  52E5               	movf	postdec1,f,c
 20387  0177D6  52E5               	movf	postdec1,f,c
 20388  0177D8  52E5               	movf	postdec1,f,c
 20389  0177DA  0012               	return		;funcret
 20390  0177DC                     __end_of_StartTimer:
 20391                           	opt callstack 0
 20392                           
 20393 ;; *************** function _display_info *****************
 20394 ;; Defined at:
 20395 ;;		line 187 in file "mconfig.c"
 20396 ;; Parameters:    Size  Location     Type
 20397 ;;		None
 20398 ;; Auto vars:     Size  Location     Type
 20399 ;;		None
 20400 ;; Return value:  Size  Location     Type
 20401 ;;                  1  [STACK] enum E16501
 20402 ;; Registers used:
 20403 ;;		btemp
 20404 ;; Tracked objects:
 20405 ;;		On entry : 0/2
 20406 ;;		On exit  : 0/0
 20407 ;;		Unchanged: 0/0
 20408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20413 ;;Total ram usage:        0 bytes
 20414 ;; Hardware stack levels used:    1
 20415 ;; Hardware stack levels required when called:    6
 20416 ;; This function calls:
 20417 ;;		Nothing
 20418 ;; This function is called by:
 20419 ;;		_check_help
 20420 ;; This function uses a reentrant model
 20421 ;;
 20422                           
 20423                           	psect	text78
 20424  018026                     __ptext78:
 20425                           	opt callstack 0
 20426  018026                     _display_info:
 20427                           	opt callstack 23
 20428                           
 20429                           ;mconfig.c: 189:  return V.response.info;
 20430                           
 20431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20432                           ;incstack = 0
 20433  018026  0060  FAC4  F035   	movff	_V+177,btemp	;volatile
 20434                           
 20435                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20436  01802C  0012               	return		;funcret
 20437  01802E                     __end_of_display_info:
 20438                           	opt callstack 0
 20439                           
 20440 ;; *************** function _display_help *****************
 20441 ;; Defined at:
 20442 ;;		line 192 in file "mconfig.c"
 20443 ;; Parameters:    Size  Location     Type
 20444 ;;		None
 20445 ;; Auto vars:     Size  Location     Type
 20446 ;;		None
 20447 ;; Return value:  Size  Location     Type
 20448 ;;                  1  [STACK] enum E16501
 20449 ;; Registers used:
 20450 ;;		btemp
 20451 ;; Tracked objects:
 20452 ;;		On entry : 3F/2
 20453 ;;		On exit  : 0/0
 20454 ;;		Unchanged: 0/0
 20455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20460 ;;Total ram usage:        0 bytes
 20461 ;; Hardware stack levels used:    1
 20462 ;; Hardware stack levels required when called:    6
 20463 ;; This function calls:
 20464 ;;		Nothing
 20465 ;; This function is called by:
 20466 ;;		_check_help
 20467 ;; This function uses a reentrant model
 20468 ;;
 20469                           
 20470                           	psect	text79
 20471  01802E                     __ptext79:
 20472                           	opt callstack 0
 20473  01802E                     _display_help:
 20474                           	opt callstack 23
 20475                           
 20476                           ;mconfig.c: 194:  return V.response.help_temp;
 20477                           
 20478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20479                           ;incstack = 0
 20480  01802E  0060  FAC8  F035   	movff	_V+178,btemp	;volatile
 20481                           
 20482                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20483  018034  0012               	return		;funcret
 20484  018036                     __end_of_display_help:
 20485                           	opt callstack 0
 20486                           
 20487 ;; *************** function _check_adc_scan *****************
 20488 ;; Defined at:
 20489 ;;		line 47 in file "daq.c"
 20490 ;; Parameters:    Size  Location     Type
 20491 ;;		None
 20492 ;; Auto vars:     Size  Location     Type
 20493 ;;		None
 20494 ;; Return value:  Size  Location     Type
 20495 ;;                  1  [STACK] _Bool 
 20496 ;; Registers used:
 20497 ;;		btemp
 20498 ;; Tracked objects:
 20499 ;;		On entry : 0/4
 20500 ;;		On exit  : 0/0
 20501 ;;		Unchanged: 0/0
 20502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20507 ;;Total ram usage:        0 bytes
 20508 ;; Hardware stack levels used:    1
 20509 ;; Hardware stack levels required when called:    6
 20510 ;; This function calls:
 20511 ;;		Nothing
 20512 ;; This function is called by:
 20513 ;;		_main
 20514 ;; This function uses a reentrant model
 20515 ;;
 20516                           
 20517                           	psect	text80
 20518  018036                     __ptext80:
 20519                           	opt callstack 0
 20520  018036                     _check_adc_scan:
 20521                           	opt callstack 24
 20522                           
 20523                           ;daq.c: 49:  return R.done;
 20524                           
 20525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20526                           ;incstack = 0
 20527  018036  0060  F204  F035   	movff	_R+33,btemp	;volatile
 20528                           
 20529                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20530  01803C  0012               	return		;funcret
 20531  01803E                     __end_of_check_adc_scan:
 20532                           	opt callstack 0
 20533                           
 20534 ;; *************** function _SYSTEM_Initialize *****************
 20535 ;; Defined at:
 20536 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20537 ;; Parameters:    Size  Location     Type
 20538 ;;		None
 20539 ;; Auto vars:     Size  Location     Type
 20540 ;;		None
 20541 ;; Return value:  Size  Location     Type
 20542 ;;                  1  [STACK] void 
 20543 ;; Registers used:
 20544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 20545 ;; Tracked objects:
 20546 ;;		On entry : 0/0
 20547 ;;		On exit  : 3F/3C
 20548 ;;		Unchanged: 0/0
 20549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20554 ;;Total ram usage:        0 bytes
 20555 ;; Hardware stack levels used:    1
 20556 ;; Hardware stack levels required when called:    8
 20557 ;; This function calls:
 20558 ;;		_ADCC_Initialize
 20559 ;;		_CLKREF_Initialize
 20560 ;;		_DMA1_Initialize
 20561 ;;		_DMA2_Initialize
 20562 ;;		_EXT_INT_Initialize
 20563 ;;		_FVR_Initialize
 20564 ;;		_INTERRUPT_Initialize
 20565 ;;		_OSCILLATOR_Initialize
 20566 ;;		_PIN_MANAGER_Initialize
 20567 ;;		_PMD_Initialize
 20568 ;;		_PWM8_Initialize
 20569 ;;		_SPI1_Initialize
 20570 ;;		_TMR2_Initialize
 20571 ;;		_TMR5_Initialize
 20572 ;;		_TMR6_Initialize
 20573 ;;		_UART1_Initialize
 20574 ;;		_UART2_Initialize
 20575 ;; This function is called by:
 20576 ;;		_main
 20577 ;; This function uses a reentrant model
 20578 ;;
 20579                           
 20580                           	psect	text81
 20581  017608                     __ptext81:
 20582                           	opt callstack 0
 20583  017608                     _SYSTEM_Initialize:
 20584                           	opt callstack 22
 20585                           
 20586                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 20587                           
 20588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20589                           ;incstack = 0
 20590  017608  ECC8  F0B8         	call	_INTERRUPT_Initialize	;wreg free
 20591                           
 20592                           ; BSR set to: 57
 20593                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 20594  01760C  ECBC  F0BF         	call	_PMD_Initialize	;wreg free
 20595                           
 20596                           ; BSR set to: 57
 20597                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 20598  017610  EC1B  F0B7         	call	_PIN_MANAGER_Initialize	;wreg free
 20599                           
 20600                           ; BSR set to: 58
 20601                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 20602  017614  ECB1  F0BF         	call	_OSCILLATOR_Initialize	;wreg free
 20603                           
 20604                           ; BSR set to: 57
 20605                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 20606  017618  EC1F  F0C0         	call	_FVR_Initialize	;wreg free
 20607                           
 20608                           ; BSR set to: 62
 20609                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 20610  01761C  EC60  F0B8         	call	_ADCC_Initialize	;wreg free
 20611                           
 20612                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 20613  017620  ECA6  F0BF         	call	_PWM8_Initialize	;wreg free
 20614                           
 20615                           ; BSR set to: 63
 20616                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 20617  017624  EC83  F0BF         	call	_TMR2_Initialize	;wreg free
 20618                           
 20619                           ; BSR set to: 57
 20620                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 20621  017628  EC76  F0BC         	call	_EXT_INT_Initialize	;wreg free
 20622                           
 20623                           ; BSR set to: 57
 20624                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 20625  01762C  EC1B  F0BD         	call	_TMR6_Initialize	;wreg free
 20626                           
 20627                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 20628  017630  EC27  F0BB         	call	_TMR5_Initialize	;wreg free
 20629                           
 20630                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 20631  017634  EC2D  F0B9         	call	_UART1_Initialize	;wreg free
 20632                           
 20633                           ; BSR set to: 57
 20634                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 20635  017638  EC90  F0B9         	call	_UART2_Initialize	;wreg free
 20636                           
 20637                           ; BSR set to: 57
 20638                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 20639  01763C  EC9B  F0BF         	call	_SPI1_Initialize	;wreg free
 20640                           
 20641                           ; BSR set to: 61
 20642                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 20643  017640  EC1B  F0BA         	call	_DMA2_Initialize	;wreg free
 20644                           
 20645                           ; BSR set to: 59
 20646                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 20647  017644  EC2B  F0B8         	call	_DMA1_Initialize	;wreg free
 20648                           
 20649                           ; BSR set to: 59
 20650                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 20651  017648  ECFD  F0BF         	call	_CLKREF_Initialize	;wreg free
 20652                           
 20653                           ; BSR set to: 60
 20654                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 20655  01764C  0012               	return		;funcret
 20656  01764E                     __end_of_SYSTEM_Initialize:
 20657                           	opt callstack 0
 20658                           
 20659 ;; *************** function _UART2_Initialize *****************
 20660 ;; Defined at:
 20661 ;;		line 78 in file "mcc_generated_files/uart2.c"
 20662 ;; Parameters:    Size  Location     Type
 20663 ;;		None
 20664 ;; Auto vars:     Size  Location     Type
 20665 ;;		None
 20666 ;; Return value:  Size  Location     Type
 20667 ;;                  1  [STACK] void 
 20668 ;; Registers used:
 20669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20670 ;; Tracked objects:
 20671 ;;		On entry : 3F/39
 20672 ;;		On exit  : 3F/39
 20673 ;;		Unchanged: 0/0
 20674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20679 ;;Total ram usage:        0 bytes
 20680 ;; Hardware stack levels used:    1
 20681 ;; Hardware stack levels required when called:    7
 20682 ;; This function calls:
 20683 ;;		_UART2_SetRxInterruptHandler
 20684 ;;		_UART2_SetTxInterruptHandler
 20685 ;; This function is called by:
 20686 ;;		_SYSTEM_Initialize
 20687 ;; This function uses a reentrant model
 20688 ;;
 20689                           
 20690                           	psect	text82
 20691  017320                     __ptext82:
 20692                           	opt callstack 0
 20693  017320                     _UART2_Initialize:
 20694                           	opt callstack 22
 20695                           
 20696                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 20697                           
 20698                           ; BSR set to: 60
 20699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20700                           ;incstack = 0
 20701  017320  0139               	movlb	57	; () banked
 20702  017322  9596               	bcf	150,2,b	;volatile
 20703                           
 20704                           ; BSR set to: 57
 20705                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 20706  017324  0E4A               	movlw	low _UART2_Receive_ISR
 20707  017326  6EE6               	movwf	postinc1,c
 20708  017328  0E7E               	movlw	high _UART2_Receive_ISR
 20709  01732A  6EE6               	movwf	postinc1,c
 20710  01732C  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 20711  01732E  6EE6               	movwf	postinc1,c
 20712  017330  EC80  F0BD         	call	_UART2_SetRxInterruptHandler	;wreg free
 20713                           
 20714                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 20715  017334  0139               	movlb	57	; () banked
 20716  017336  9796               	bcf	150,3,b	;volatile
 20717                           
 20718                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 20719  017338  0E0A               	movlw	low _UART2_Transmit_ISR
 20720  01733A  6EE6               	movwf	postinc1,c
 20721  01733C  0E7A               	movlw	high _UART2_Transmit_ISR
 20722  01733E  6EE6               	movwf	postinc1,c
 20723  017340  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 20724  017342  6EE6               	movwf	postinc1,c
 20725  017344  EC6C  F0BD         	call	_UART2_SetTxInterruptHandler	;wreg free
 20726                           
 20727                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 20728  017348  013D               	movlb	61	; () banked
 20729  01734A  6BD4               	clrf	212,b	;volatile
 20730                           
 20731                           ; BSR set to: 61
 20732                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 20733  01734C  6BD6               	clrf	214,b	;volatile
 20734                           
 20735                           ; BSR set to: 61
 20736                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 20737  01734E  6BD8               	clrf	216,b	;volatile
 20738                           
 20739                           ; BSR set to: 61
 20740                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 20741  017350  0EB0               	movlw	176
 20742  017352  6FDA               	movwf	218,b	;volatile
 20743                           
 20744                           ; BSR set to: 61
 20745                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 20746  017354  0E80               	movlw	128
 20747  017356  6FDB               	movwf	219,b	;volatile
 20748                           
 20749                           ; BSR set to: 61
 20750                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 20751  017358  6BDC               	clrf	220,b	;volatile
 20752                           
 20753                           ; BSR set to: 61
 20754                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 20755  01735A  0E82               	movlw	130
 20756  01735C  6FDD               	movwf	221,b	;volatile
 20757                           
 20758                           ; BSR set to: 61
 20759                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 20760  01735E  0E06               	movlw	6
 20761  017360  6FDE               	movwf	222,b	;volatile
 20762                           
 20763                           ; BSR set to: 61
 20764                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 20765  017362  6BDF               	clrf	223,b	;volatile
 20766                           
 20767                           ; BSR set to: 61
 20768                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 20769  017364  6BE0               	clrf	224,b	;volatile
 20770                           
 20771                           ; BSR set to: 61
 20772                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 20773  017366  6BE1               	clrf	225,b	;volatile
 20774                           
 20775                           ; BSR set to: 61
 20776                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 20777  017368  6BE2               	clrf	226,b	;volatile
 20778                           
 20779                           ; BSR set to: 61
 20780                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 20781  01736A  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 20782                           
 20783                           ; BSR set to: 61
 20784                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 20785  01736C  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 20786                           
 20787                           ; BSR set to: 61
 20788                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 20789  01736E  0E40               	movlw	64
 20790  017370  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 20791                           
 20792                           ; BSR set to: 61
 20793                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 20794  017372  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 20795                           
 20796                           ; BSR set to: 61
 20797                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 20798  017374  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 20799                           
 20800                           ; BSR set to: 61
 20801                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 20802  017376  6A29               	clrf	_uart2RxCount^0,c	;volatile
 20803                           
 20804                           ; BSR set to: 61
 20805                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 20806  017378  0139               	movlb	57	; () banked
 20807  01737A  8596               	bsf	150,2,b	;volatile
 20808                           
 20809                           ; BSR set to: 57
 20810                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20811  01737C  0012               	return		;funcret
 20812  01737E                     __end_of_UART2_Initialize:
 20813                           	opt callstack 0
 20814                           
 20815 ;; *************** function _UART2_SetTxInterruptHandler *****************
 20816 ;; Defined at:
 20817 ;;		line 252 in file "mcc_generated_files/uart2.c"
 20818 ;; Parameters:    Size  Location     Type
 20819 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20820 ;;		 -> UART2_Transmit_ISR(1), 
 20821 ;; Auto vars:     Size  Location     Type
 20822 ;;		None
 20823 ;; Return value:  Size  Location     Type
 20824 ;;                  1  [STACK] void 
 20825 ;; Registers used:
 20826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20827 ;; Tracked objects:
 20828 ;;		On entry : 3F/39
 20829 ;;		On exit  : 0/0
 20830 ;;		Unchanged: 0/0
 20831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20836 ;;Total ram usage:        0 bytes
 20837 ;; Hardware stack levels used:    1
 20838 ;; Hardware stack levels required when called:    6
 20839 ;; This function calls:
 20840 ;;		Nothing
 20841 ;; This function is called by:
 20842 ;;		_UART2_Initialize
 20843 ;; This function uses a reentrant model
 20844 ;;
 20845                           
 20846                           	psect	text83
 20847  017AD8                     __ptext83:
 20848                           	opt callstack 0
 20849  017AD8                     _UART2_SetTxInterruptHandler:
 20850                           	opt callstack 22
 20851                           
 20852                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 20853                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20854                           
 20855                           ; BSR set to: 57
 20856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20857                           ;incstack = 0
 20858  017AD8  50E1               	movf	fsr1l,w,c
 20859  017ADA  0FFD               	addlw	-3
 20860  017ADC  6ED9               	movwf	fsr2l,c
 20861  017ADE  50E2               	movf	fsr1h,w,c
 20862  017AE0  6EDA               	movwf	fsr2h,c
 20863  017AE2  0EFF               	movlw	255
 20864  017AE4  22DA               	addwfc	fsr2h,f,c
 20865  017AE6  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 20866  017AEC  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 20867  017AF2  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 20868                           
 20869                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20870  017AF8  52E5               	movf	postdec1,f,c
 20871  017AFA  52E5               	movf	postdec1,f,c
 20872  017AFC  52E5               	movf	postdec1,f,c
 20873  017AFE  0012               	return		;funcret
 20874  017B00                     __end_of_UART2_SetTxInterruptHandler:
 20875                           	opt callstack 0
 20876                           
 20877 ;; *************** function _UART2_SetRxInterruptHandler *****************
 20878 ;; Defined at:
 20879 ;;		line 248 in file "mcc_generated_files/uart2.c"
 20880 ;; Parameters:    Size  Location     Type
 20881 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20882 ;;		 -> UART2_Receive_ISR(1), 
 20883 ;; Auto vars:     Size  Location     Type
 20884 ;;		None
 20885 ;; Return value:  Size  Location     Type
 20886 ;;                  1  [STACK] void 
 20887 ;; Registers used:
 20888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20889 ;; Tracked objects:
 20890 ;;		On entry : 3F/39
 20891 ;;		On exit  : 0/0
 20892 ;;		Unchanged: 0/0
 20893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20898 ;;Total ram usage:        0 bytes
 20899 ;; Hardware stack levels used:    1
 20900 ;; Hardware stack levels required when called:    6
 20901 ;; This function calls:
 20902 ;;		Nothing
 20903 ;; This function is called by:
 20904 ;;		_UART2_Initialize
 20905 ;; This function uses a reentrant model
 20906 ;;
 20907                           
 20908                           	psect	text84
 20909  017B00                     __ptext84:
 20910                           	opt callstack 0
 20911  017B00                     _UART2_SetRxInterruptHandler:
 20912                           	opt callstack 22
 20913                           
 20914                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 20915                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20916                           
 20917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20918                           ;incstack = 0
 20919  017B00  50E1               	movf	fsr1l,w,c
 20920  017B02  0FFD               	addlw	-3
 20921  017B04  6ED9               	movwf	fsr2l,c
 20922  017B06  50E2               	movf	fsr1h,w,c
 20923  017B08  6EDA               	movwf	fsr2h,c
 20924  017B0A  0EFF               	movlw	255
 20925  017B0C  22DA               	addwfc	fsr2h,f,c
 20926  017B0E  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 20927  017B14  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 20928  017B1A  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 20929                           
 20930                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20931  017B20  52E5               	movf	postdec1,f,c
 20932  017B22  52E5               	movf	postdec1,f,c
 20933  017B24  52E5               	movf	postdec1,f,c
 20934  017B26  0012               	return		;funcret
 20935  017B28                     __end_of_UART2_SetRxInterruptHandler:
 20936                           	opt callstack 0
 20937                           
 20938 ;; *************** function _UART1_Initialize *****************
 20939 ;; Defined at:
 20940 ;;		line 79 in file "mcc_generated_files/uart1.c"
 20941 ;; Parameters:    Size  Location     Type
 20942 ;;		None
 20943 ;; Auto vars:     Size  Location     Type
 20944 ;;		None
 20945 ;; Return value:  Size  Location     Type
 20946 ;;                  1  [STACK] void 
 20947 ;; Registers used:
 20948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20949 ;; Tracked objects:
 20950 ;;		On entry : 0/39
 20951 ;;		On exit  : 3F/39
 20952 ;;		Unchanged: 0/0
 20953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20958 ;;Total ram usage:        0 bytes
 20959 ;; Hardware stack levels used:    1
 20960 ;; Hardware stack levels required when called:    7
 20961 ;; This function calls:
 20962 ;;		_UART1_SetRxInterruptHandler
 20963 ;;		_UART1_SetTxInterruptHandler
 20964 ;; This function is called by:
 20965 ;;		_SYSTEM_Initialize
 20966 ;; This function uses a reentrant model
 20967 ;;
 20968                           
 20969                           	psect	text85
 20970  01725A                     __ptext85:
 20971                           	opt callstack 0
 20972  01725A                     _UART1_Initialize:
 20973                           	opt callstack 22
 20974                           
 20975                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 20976                           
 20977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20978                           ;incstack = 0
 20979  01725A  0139               	movlb	57	; () banked
 20980  01725C  9793               	bcf	147,3,b	;volatile
 20981                           
 20982                           ; BSR set to: 57
 20983                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 20984  01725E  0E2C               	movlw	low _UART1_Receive_ISR
 20985  017260  6EE6               	movwf	postinc1,c
 20986  017262  0E7E               	movlw	high _UART1_Receive_ISR
 20987  017264  6EE6               	movwf	postinc1,c
 20988  017266  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 20989  017268  6EE6               	movwf	postinc1,c
 20990  01726A  ECA8  F0BD         	call	_UART1_SetRxInterruptHandler	;wreg free
 20991                           
 20992                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 20993  01726E  0139               	movlb	57	; () banked
 20994  017270  9993               	bcf	147,4,b	;volatile
 20995                           
 20996                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 20997  017272  0EDE               	movlw	low _UART1_Transmit_ISR
 20998  017274  6EE6               	movwf	postinc1,c
 20999  017276  0E79               	movlw	high _UART1_Transmit_ISR
 21000  017278  6EE6               	movwf	postinc1,c
 21001  01727A  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21002  01727C  6EE6               	movwf	postinc1,c
 21003  01727E  EC94  F0BD         	call	_UART1_SetTxInterruptHandler	;wreg free
 21004                           
 21005                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21006  017282  013D               	movlb	61	; () banked
 21007  017284  6BEC               	clrf	236,b	;volatile
 21008                           
 21009                           ; BSR set to: 61
 21010                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21011  017286  6BED               	clrf	237,b	;volatile
 21012                           
 21013                           ; BSR set to: 61
 21014                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21015  017288  6BEE               	clrf	238,b	;volatile
 21016                           
 21017                           ; BSR set to: 61
 21018                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21019  01728A  6BEF               	clrf	239,b	;volatile
 21020                           
 21021                           ; BSR set to: 61
 21022                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21023  01728C  6BF0               	clrf	240,b	;volatile
 21024                           
 21025                           ; BSR set to: 61
 21026                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21027  01728E  6BF1               	clrf	241,b	;volatile
 21028                           
 21029                           ; BSR set to: 61
 21030                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21031  017290  0EB0               	movlw	176
 21032  017292  6FF2               	movwf	242,b	;volatile
 21033                           
 21034                           ; BSR set to: 61
 21035                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21036  017294  0E80               	movlw	128
 21037  017296  6FF3               	movwf	243,b	;volatile
 21038                           
 21039                           ; BSR set to: 61
 21040                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21041  017298  6BF4               	clrf	244,b	;volatile
 21042                           
 21043                           ; BSR set to: 61
 21044                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21045  01729A  0E82               	movlw	130
 21046  01729C  6FF5               	movwf	245,b	;volatile
 21047                           
 21048                           ; BSR set to: 61
 21049                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21050  01729E  0E06               	movlw	6
 21051  0172A0  6FF6               	movwf	246,b	;volatile
 21052                           
 21053                           ; BSR set to: 61
 21054                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21055  0172A2  6BF7               	clrf	247,b	;volatile
 21056                           
 21057                           ; BSR set to: 61
 21058                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21059  0172A4  6BF8               	clrf	248,b	;volatile
 21060                           
 21061                           ; BSR set to: 61
 21062                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21063  0172A6  6BF9               	clrf	249,b	;volatile
 21064                           
 21065                           ; BSR set to: 61
 21066                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21067  0172A8  6BFA               	clrf	250,b	;volatile
 21068                           
 21069                           ; BSR set to: 61
 21070                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21071  0172AA  6A34               	clrf	_uart1TxHead^0,c	;volatile
 21072                           
 21073                           ; BSR set to: 61
 21074                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21075  0172AC  6A33               	clrf	_uart1TxTail^0,c	;volatile
 21076                           
 21077                           ; BSR set to: 61
 21078                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21079  0172AE  0E40               	movlw	64
 21080  0172B0  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21081                           
 21082                           ; BSR set to: 61
 21083                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21084  0172B2  6A31               	clrf	_uart1RxHead^0,c	;volatile
 21085                           
 21086                           ; BSR set to: 61
 21087                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21088  0172B4  6A30               	clrf	_uart1RxTail^0,c	;volatile
 21089                           
 21090                           ; BSR set to: 61
 21091                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21092  0172B6  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 21093                           
 21094                           ; BSR set to: 61
 21095                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21096  0172B8  0139               	movlb	57	; () banked
 21097  0172BA  8793               	bsf	147,3,b	;volatile
 21098                           
 21099                           ; BSR set to: 57
 21100                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21101  0172BC  0012               	return		;funcret
 21102  0172BE                     __end_of_UART1_Initialize:
 21103                           	opt callstack 0
 21104                           
 21105 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21106 ;; Defined at:
 21107 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21108 ;; Parameters:    Size  Location     Type
 21109 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21110 ;;		 -> UART1_Transmit_ISR(1), 
 21111 ;; Auto vars:     Size  Location     Type
 21112 ;;		None
 21113 ;; Return value:  Size  Location     Type
 21114 ;;                  1  [STACK] void 
 21115 ;; Registers used:
 21116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21117 ;; Tracked objects:
 21118 ;;		On entry : 3F/39
 21119 ;;		On exit  : 0/0
 21120 ;;		Unchanged: 0/0
 21121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21126 ;;Total ram usage:        0 bytes
 21127 ;; Hardware stack levels used:    1
 21128 ;; Hardware stack levels required when called:    6
 21129 ;; This function calls:
 21130 ;;		Nothing
 21131 ;; This function is called by:
 21132 ;;		_UART1_Initialize
 21133 ;; This function uses a reentrant model
 21134 ;;
 21135                           
 21136                           	psect	text86
 21137  017B28                     __ptext86:
 21138                           	opt callstack 0
 21139  017B28                     _UART1_SetTxInterruptHandler:
 21140                           	opt callstack 22
 21141                           
 21142                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21143                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21144                           
 21145                           ; BSR set to: 57
 21146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21147                           ;incstack = 0
 21148  017B28  50E1               	movf	fsr1l,w,c
 21149  017B2A  0FFD               	addlw	-3
 21150  017B2C  6ED9               	movwf	fsr2l,c
 21151  017B2E  50E2               	movf	fsr1h,w,c
 21152  017B30  6EDA               	movwf	fsr2h,c
 21153  017B32  0EFF               	movlw	255
 21154  017B34  22DA               	addwfc	fsr2h,f,c
 21155  017B36  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 21156  017B3C  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 21157  017B42  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 21158                           
 21159                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21160  017B48  52E5               	movf	postdec1,f,c
 21161  017B4A  52E5               	movf	postdec1,f,c
 21162  017B4C  52E5               	movf	postdec1,f,c
 21163  017B4E  0012               	return		;funcret
 21164  017B50                     __end_of_UART1_SetTxInterruptHandler:
 21165                           	opt callstack 0
 21166                           
 21167 ;; *************** function _UART1_SetRxInterruptHandler *****************
 21168 ;; Defined at:
 21169 ;;		line 241 in file "mcc_generated_files/uart1.c"
 21170 ;; Parameters:    Size  Location     Type
 21171 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21172 ;;		 -> UART1_Receive_ISR(1), 
 21173 ;; Auto vars:     Size  Location     Type
 21174 ;;		None
 21175 ;; Return value:  Size  Location     Type
 21176 ;;                  1  [STACK] void 
 21177 ;; Registers used:
 21178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21179 ;; Tracked objects:
 21180 ;;		On entry : 3F/39
 21181 ;;		On exit  : 0/0
 21182 ;;		Unchanged: 0/0
 21183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21188 ;;Total ram usage:        0 bytes
 21189 ;; Hardware stack levels used:    1
 21190 ;; Hardware stack levels required when called:    6
 21191 ;; This function calls:
 21192 ;;		Nothing
 21193 ;; This function is called by:
 21194 ;;		_UART1_Initialize
 21195 ;; This function uses a reentrant model
 21196 ;;
 21197                           
 21198                           	psect	text87
 21199  017B50                     __ptext87:
 21200                           	opt callstack 0
 21201  017B50                     _UART1_SetRxInterruptHandler:
 21202                           	opt callstack 22
 21203                           
 21204                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 21205                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21206                           
 21207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21208                           ;incstack = 0
 21209  017B50  50E1               	movf	fsr1l,w,c
 21210  017B52  0FFD               	addlw	-3
 21211  017B54  6ED9               	movwf	fsr2l,c
 21212  017B56  50E2               	movf	fsr1h,w,c
 21213  017B58  6EDA               	movwf	fsr2h,c
 21214  017B5A  0EFF               	movlw	255
 21215  017B5C  22DA               	addwfc	fsr2h,f,c
 21216  017B5E  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 21217  017B64  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 21218  017B6A  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 21219                           
 21220                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21221  017B70  52E5               	movf	postdec1,f,c
 21222  017B72  52E5               	movf	postdec1,f,c
 21223  017B74  52E5               	movf	postdec1,f,c
 21224  017B76  0012               	return		;funcret
 21225  017B78                     __end_of_UART1_SetRxInterruptHandler:
 21226                           	opt callstack 0
 21227                           
 21228 ;; *************** function _TMR6_Initialize *****************
 21229 ;; Defined at:
 21230 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 21231 ;; Parameters:    Size  Location     Type
 21232 ;;		None
 21233 ;; Auto vars:     Size  Location     Type
 21234 ;;		None
 21235 ;; Return value:  Size  Location     Type
 21236 ;;                  1  [STACK] void 
 21237 ;; Registers used:
 21238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21239 ;; Tracked objects:
 21240 ;;		On entry : 3F/39
 21241 ;;		On exit  : 0/0
 21242 ;;		Unchanged: 0/0
 21243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21248 ;;Total ram usage:        0 bytes
 21249 ;; Hardware stack levels used:    1
 21250 ;; Hardware stack levels required when called:    7
 21251 ;; This function calls:
 21252 ;;		_TMR6_SetInterruptHandler
 21253 ;; This function is called by:
 21254 ;;		_SYSTEM_Initialize
 21255 ;; This function uses a reentrant model
 21256 ;;
 21257                           
 21258                           	psect	text88
 21259  017A36                     __ptext88:
 21260                           	opt callstack 0
 21261  017A36                     _TMR6_Initialize:
 21262                           	opt callstack 22
 21263                           
 21264                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 21265                           
 21266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21267                           ;incstack = 0
 21268  017A36  0E01               	movlw	1
 21269  017A38  6E96               	movwf	150,c	;volatile
 21270                           
 21271                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 21272  017A3A  6A95               	clrf	149,c	;volatile
 21273                           
 21274                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 21275  017A3C  6A97               	clrf	151,c	;volatile
 21276                           
 21277                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 21278  017A3E  0E7C               	movlw	124
 21279  017A40  6E93               	movwf	147,c	;volatile
 21280                           
 21281                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 21282  017A42  6A92               	clrf	146,c	;volatile
 21283                           
 21284                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 21285  017A44  0139               	movlb	57	; () banked
 21286  017A46  91A9               	bcf	169,0,b	;volatile
 21287                           
 21288                           ; BSR set to: 57
 21289                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 21290  017A48  8199               	bsf	153,0,b	;volatile
 21291                           
 21292                           ; BSR set to: 57
 21293                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 21294  017A4A  0E94               	movlw	low _TMR6_DefaultInterruptHandler
 21295  017A4C  6EE6               	movwf	postinc1,c
 21296  017A4E  0E76               	movlw	high _TMR6_DefaultInterruptHandler
 21297  017A50  6EE6               	movwf	postinc1,c
 21298  017A52  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 21299  017A54  6EE6               	movwf	postinc1,c
 21300  017A56  ECBC  F0BD         	call	_TMR6_SetInterruptHandler	;wreg free
 21301                           
 21302                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 21303  017A5A  0EE0               	movlw	224
 21304  017A5C  6E94               	movwf	148,c	;volatile
 21305                           
 21306                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21307  017A5E  0012               	return		;funcret
 21308  017A60                     __end_of_TMR6_Initialize:
 21309                           	opt callstack 0
 21310                           
 21311 ;; *************** function _TMR6_SetInterruptHandler *****************
 21312 ;; Defined at:
 21313 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 21314 ;; Parameters:    Size  Location     Type
 21315 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21316 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 21317 ;; Auto vars:     Size  Location     Type
 21318 ;;		None
 21319 ;; Return value:  Size  Location     Type
 21320 ;;                  1  [STACK] void 
 21321 ;; Registers used:
 21322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21323 ;; Tracked objects:
 21324 ;;		On entry : 3F/39
 21325 ;;		On exit  : 0/0
 21326 ;;		Unchanged: 0/0
 21327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21332 ;;Total ram usage:        0 bytes
 21333 ;; Hardware stack levels used:    1
 21334 ;; Hardware stack levels required when called:    6
 21335 ;; This function calls:
 21336 ;;		Nothing
 21337 ;; This function is called by:
 21338 ;;		_TMR6_Initialize
 21339 ;; This function uses a reentrant model
 21340 ;;
 21341                           
 21342                           	psect	text89
 21343  017B78                     __ptext89:
 21344                           	opt callstack 0
 21345  017B78                     _TMR6_SetInterruptHandler:
 21346                           	opt callstack 22
 21347                           
 21348                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 21349                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21350                           
 21351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21352                           ;incstack = 0
 21353  017B78  50E1               	movf	fsr1l,w,c
 21354  017B7A  0FFD               	addlw	-3
 21355  017B7C  6ED9               	movwf	fsr2l,c
 21356  017B7E  50E2               	movf	fsr1h,w,c
 21357  017B80  6EDA               	movwf	fsr2h,c
 21358  017B82  0EFF               	movlw	255
 21359  017B84  22DA               	addwfc	fsr2h,f,c
 21360  017B86  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 21361  017B8C  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 21362  017B92  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 21363                           
 21364                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21365  017B98  52E5               	movf	postdec1,f,c
 21366  017B9A  52E5               	movf	postdec1,f,c
 21367  017B9C  52E5               	movf	postdec1,f,c
 21368  017B9E  0012               	return		;funcret
 21369  017BA0                     __end_of_TMR6_SetInterruptHandler:
 21370                           	opt callstack 0
 21371                           
 21372 ;; *************** function _TMR5_Initialize *****************
 21373 ;; Defined at:
 21374 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 21375 ;; Parameters:    Size  Location     Type
 21376 ;;		None
 21377 ;; Auto vars:     Size  Location     Type
 21378 ;;		None
 21379 ;; Return value:  Size  Location     Type
 21380 ;;                  1  [STACK] void 
 21381 ;; Registers used:
 21382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21383 ;; Tracked objects:
 21384 ;;		On entry : 0/39
 21385 ;;		On exit  : 0/0
 21386 ;;		Unchanged: 0/0
 21387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21392 ;;Total ram usage:        0 bytes
 21393 ;; Hardware stack levels used:    1
 21394 ;; Hardware stack levels required when called:    7
 21395 ;; This function calls:
 21396 ;;		_TMR5_SetInterruptHandler
 21397 ;; This function is called by:
 21398 ;;		_SYSTEM_Initialize
 21399 ;; This function uses a reentrant model
 21400 ;;
 21401                           
 21402                           	psect	text90
 21403  01764E                     __ptext90:
 21404                           	opt callstack 0
 21405  01764E                     _TMR5_Initialize:
 21406                           	opt callstack 22
 21407                           
 21408                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 21409                           
 21410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21411                           ;incstack = 0
 21412  01764E  6A9B               	clrf	155,c	;volatile
 21413                           
 21414                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 21415  017650  6A9C               	clrf	156,c	;volatile
 21416                           
 21417                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 21418  017652  0E01               	movlw	1
 21419  017654  6E9D               	movwf	157,c	;volatile
 21420                           
 21421                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 21422  017656  0E63               	movlw	99
 21423  017658  6E99               	movwf	153,c	;volatile
 21424                           
 21425                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 21426  01765A  0EC0               	movlw	192
 21427  01765C  6E98               	movwf	152,c	;volatile
 21428                           
 21429                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 21430  01765E  5098               	movf	152,w,c	;volatile
 21431  017660  006F FE64  F035    	movff	16281,btemp	;volatile
 21432  017666  6A36               	clrf	(btemp+1)^0,c
 21433  017668  0060  F0D4  F036   	movff	btemp,btemp+1
 21434  01766E  6A35               	clrf	btemp^0,c
 21435  017670  1035               	iorwf	btemp^0,w,c
 21436  017672  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 21437  017674  5036               	movf	(btemp+1)^0,w,c
 21438  017676  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 21439                           
 21440                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 21441  017678  0139               	movlb	57	; () banked
 21442  01767A  9DA8               	bcf	168,6,b	;volatile
 21443                           
 21444                           ; BSR set to: 57
 21445                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 21446  01767C  8D98               	bsf	152,6,b	;volatile
 21447                           
 21448                           ; BSR set to: 57
 21449                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 21450  01767E  0EBA               	movlw	low _TMR5_DefaultInterruptHandler
 21451  017680  6EE6               	movwf	postinc1,c
 21452  017682  0E7E               	movlw	high _TMR5_DefaultInterruptHandler
 21453  017684  6EE6               	movwf	postinc1,c
 21454  017686  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 21455  017688  6EE6               	movwf	postinc1,c
 21456  01768A  ECD0  F0BD         	call	_TMR5_SetInterruptHandler	;wreg free
 21457                           
 21458                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 21459  01768E  0E31               	movlw	49
 21460  017690  6E9A               	movwf	154,c	;volatile
 21461                           
 21462                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21463  017692  0012               	return		;funcret
 21464  017694                     __end_of_TMR5_Initialize:
 21465                           	opt callstack 0
 21466                           
 21467 ;; *************** function _TMR5_SetInterruptHandler *****************
 21468 ;; Defined at:
 21469 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 21470 ;; Parameters:    Size  Location     Type
 21471 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21472 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21473 ;; Auto vars:     Size  Location     Type
 21474 ;;		None
 21475 ;; Return value:  Size  Location     Type
 21476 ;;                  1  [STACK] void 
 21477 ;; Registers used:
 21478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21479 ;; Tracked objects:
 21480 ;;		On entry : 3F/39
 21481 ;;		On exit  : 0/0
 21482 ;;		Unchanged: 0/0
 21483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21488 ;;Total ram usage:        0 bytes
 21489 ;; Hardware stack levels used:    1
 21490 ;; Hardware stack levels required when called:    6
 21491 ;; This function calls:
 21492 ;;		Nothing
 21493 ;; This function is called by:
 21494 ;;		_TMR5_Initialize
 21495 ;; This function uses a reentrant model
 21496 ;;
 21497                           
 21498                           	psect	text91
 21499  017BA0                     __ptext91:
 21500                           	opt callstack 0
 21501  017BA0                     _TMR5_SetInterruptHandler:
 21502                           	opt callstack 22
 21503                           
 21504                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 21505                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21506                           
 21507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21508                           ;incstack = 0
 21509  017BA0  50E1               	movf	fsr1l,w,c
 21510  017BA2  0FFD               	addlw	-3
 21511  017BA4  6ED9               	movwf	fsr2l,c
 21512  017BA6  50E2               	movf	fsr1h,w,c
 21513  017BA8  6EDA               	movwf	fsr2h,c
 21514  017BAA  0EFF               	movlw	255
 21515  017BAC  22DA               	addwfc	fsr2h,f,c
 21516  017BAE  006F FF78  F0BA    	movff	postinc2,_TMR5_InterruptHandler
 21517  017BB4  006F FF78  F0BB    	movff	postinc2,_TMR5_InterruptHandler+1
 21518  017BBA  006F FF74  F0BC    	movff	postdec2,_TMR5_InterruptHandler+2
 21519                           
 21520                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21521  017BC0  52E5               	movf	postdec1,f,c
 21522  017BC2  52E5               	movf	postdec1,f,c
 21523  017BC4  52E5               	movf	postdec1,f,c
 21524  017BC6  0012               	return		;funcret
 21525  017BC8                     __end_of_TMR5_SetInterruptHandler:
 21526                           	opt callstack 0
 21527                           
 21528 ;; *************** function _TMR2_Initialize *****************
 21529 ;; Defined at:
 21530 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 21531 ;; Parameters:    Size  Location     Type
 21532 ;;		None
 21533 ;; Auto vars:     Size  Location     Type
 21534 ;;		None
 21535 ;; Return value:  Size  Location     Type
 21536 ;;                  1  [STACK] void 
 21537 ;; Registers used:
 21538 ;;		wreg, status,2
 21539 ;; Tracked objects:
 21540 ;;		On entry : 3F/3F
 21541 ;;		On exit  : 3F/39
 21542 ;;		Unchanged: 0/0
 21543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21548 ;;Total ram usage:        0 bytes
 21549 ;; Hardware stack levels used:    1
 21550 ;; Hardware stack levels required when called:    6
 21551 ;; This function calls:
 21552 ;;		Nothing
 21553 ;; This function is called by:
 21554 ;;		_SYSTEM_Initialize
 21555 ;; This function uses a reentrant model
 21556 ;;
 21557                           
 21558                           	psect	text92
 21559  017F06                     __ptext92:
 21560                           	opt callstack 0
 21561  017F06                     _TMR2_Initialize:
 21562                           	opt callstack 23
 21563                           
 21564                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 21565                           
 21566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21567                           ;incstack = 0
 21568  017F06  0E01               	movlw	1
 21569  017F08  6EAE               	movwf	174,c	;volatile
 21570                           
 21571                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 21572  017F0A  6AAD               	clrf	173,c	;volatile
 21573                           
 21574                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 21575  017F0C  6AAF               	clrf	175,c	;volatile
 21576                           
 21577                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 21578  017F0E  0E63               	movlw	99
 21579  017F10  6EAB               	movwf	171,c	;volatile
 21580                           
 21581                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 21582  017F12  6AAA               	clrf	170,c	;volatile
 21583                           
 21584                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 21585  017F14  0139               	movlb	57	; () banked
 21586  017F16  95A4               	bcf	164,2,b	;volatile
 21587                           
 21588                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 21589  017F18  0EC0               	movlw	192
 21590  017F1A  6EAC               	movwf	172,c	;volatile
 21591                           
 21592                           ; BSR set to: 57
 21593                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21594  017F1C  0012               	return		;funcret
 21595  017F1E                     __end_of_TMR2_Initialize:
 21596                           	opt callstack 0
 21597                           
 21598 ;; *************** function _SPI1_Initialize *****************
 21599 ;; Defined at:
 21600 ;;		line 64 in file "mcc_generated_files/spi1.c"
 21601 ;; Parameters:    Size  Location     Type
 21602 ;;		None
 21603 ;; Auto vars:     Size  Location     Type
 21604 ;;		None
 21605 ;; Return value:  Size  Location     Type
 21606 ;;                  1  [STACK] void 
 21607 ;; Registers used:
 21608 ;;		wreg, status,2
 21609 ;; Tracked objects:
 21610 ;;		On entry : 3F/39
 21611 ;;		On exit  : 3F/3D
 21612 ;;		Unchanged: 0/0
 21613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21618 ;;Total ram usage:        0 bytes
 21619 ;; Hardware stack levels used:    1
 21620 ;; Hardware stack levels required when called:    6
 21621 ;; This function calls:
 21622 ;;		Nothing
 21623 ;; This function is called by:
 21624 ;;		_SYSTEM_Initialize
 21625 ;; This function uses a reentrant model
 21626 ;;
 21627                           
 21628                           	psect	text93
 21629  017F36                     __ptext93:
 21630                           	opt callstack 0
 21631  017F36                     _SPI1_Initialize:
 21632                           	opt callstack 23
 21633                           
 21634                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 21635                           
 21636                           ; BSR set to: 57
 21637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21638                           ;incstack = 0
 21639  017F36  0E40               	movlw	64
 21640  017F38  013D               	movlb	61	; () banked
 21641  017F3A  6F15               	movwf	21,b	;volatile
 21642                           
 21643                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 21644  017F3C  0E03               	movlw	3
 21645  017F3E  6F16               	movwf	22,b	;volatile
 21646                           
 21647                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 21648  017F40  0E4F               	movlw	79
 21649  017F42  6F19               	movwf	25,b	;volatile
 21650                           
 21651                           ; BSR set to: 61
 21652                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 21653  017F44  6B1C               	clrf	28,b	;volatile
 21654                           
 21655                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 21656  017F46  0E83               	movlw	131
 21657  017F48  6F14               	movwf	20,b	;volatile
 21658                           
 21659                           ; BSR set to: 61
 21660                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21661  017F4A  0012               	return		;funcret
 21662  017F4C                     __end_of_SPI1_Initialize:
 21663                           	opt callstack 0
 21664                           
 21665 ;; *************** function _PWM8_Initialize *****************
 21666 ;; Defined at:
 21667 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 21668 ;; Parameters:    Size  Location     Type
 21669 ;;		None
 21670 ;; Auto vars:     Size  Location     Type
 21671 ;;		None
 21672 ;; Return value:  Size  Location     Type
 21673 ;;                  1  [STACK] void 
 21674 ;; Registers used:
 21675 ;;		wreg, status,2
 21676 ;; Tracked objects:
 21677 ;;		On entry : 0/3E
 21678 ;;		On exit  : 3F/3F
 21679 ;;		Unchanged: 0/0
 21680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21685 ;;Total ram usage:        0 bytes
 21686 ;; Hardware stack levels used:    1
 21687 ;; Hardware stack levels required when called:    6
 21688 ;; This function calls:
 21689 ;;		Nothing
 21690 ;; This function is called by:
 21691 ;;		_SYSTEM_Initialize
 21692 ;; This function uses a reentrant model
 21693 ;;
 21694                           
 21695                           	psect	text94
 21696  017F4C                     __ptext94:
 21697                           	opt callstack 0
 21698  017F4C                     _PWM8_Initialize:
 21699                           	opt callstack 23
 21700                           
 21701                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 21702                           
 21703                           ; BSR set to: 61
 21704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21705                           ;incstack = 0
 21706  017F4C  0E80               	movlw	128
 21707  017F4E  6E62               	movwf	98,c	;volatile
 21708                           
 21709                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 21710  017F50  6A61               	clrf	97,c	;volatile
 21711                           
 21712                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 21713  017F52  0E40               	movlw	64
 21714  017F54  6E60               	movwf	96,c	;volatile
 21715                           
 21716                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 21717  017F56  013F               	movlb	63	; () banked
 21718  017F58  515F               	movf	95,w,b	;volatile
 21719  017F5A  0B3F               	andlw	-193
 21720  017F5C  0940               	iorlw	64
 21721  017F5E  6F5F               	movwf	95,b	;volatile
 21722                           
 21723                           ; BSR set to: 63
 21724                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21725  017F60  0012               	return		;funcret
 21726  017F62                     __end_of_PWM8_Initialize:
 21727                           	opt callstack 0
 21728                           
 21729 ;; *************** function _PMD_Initialize *****************
 21730 ;; Defined at:
 21731 ;;		line 89 in file "mcc_generated_files/mcc.c"
 21732 ;; Parameters:    Size  Location     Type
 21733 ;;		None
 21734 ;; Auto vars:     Size  Location     Type
 21735 ;;		None
 21736 ;; Return value:  Size  Location     Type
 21737 ;;                  1  [STACK] void 
 21738 ;; Registers used:
 21739 ;;		None
 21740 ;; Tracked objects:
 21741 ;;		On entry : 3F/39
 21742 ;;		On exit  : 3F/39
 21743 ;;		Unchanged: 0/0
 21744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21749 ;;Total ram usage:        0 bytes
 21750 ;; Hardware stack levels used:    1
 21751 ;; Hardware stack levels required when called:    6
 21752 ;; This function calls:
 21753 ;;		Nothing
 21754 ;; This function is called by:
 21755 ;;		_SYSTEM_Initialize
 21756 ;; This function uses a reentrant model
 21757 ;;
 21758                           
 21759                           	psect	text95
 21760  017F78                     __ptext95:
 21761                           	opt callstack 0
 21762  017F78                     _PMD_Initialize:
 21763                           	opt callstack 23
 21764                           
 21765                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 21766                           
 21767                           ; BSR set to: 63
 21768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21769                           ;incstack = 0
 21770  017F78  0139               	movlb	57	; () banked
 21771  017F7A  6BC0               	clrf	192,b	;volatile
 21772                           
 21773                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 21774  017F7C  6BC1               	clrf	193,b	;volatile
 21775                           
 21776                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 21777  017F7E  6BC2               	clrf	194,b	;volatile
 21778                           
 21779                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 21780  017F80  6BC3               	clrf	195,b	;volatile
 21781                           
 21782                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 21783  017F82  6BC4               	clrf	196,b	;volatile
 21784                           
 21785                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 21786  017F84  6BC5               	clrf	197,b	;volatile
 21787                           
 21788                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 21789  017F86  6BC6               	clrf	198,b	;volatile
 21790                           
 21791                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 21792  017F88  6BC7               	clrf	199,b	;volatile
 21793                           
 21794                           ; BSR set to: 57
 21795                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21796  017F8A  0012               	return		;funcret
 21797  017F8C                     __end_of_PMD_Initialize:
 21798                           	opt callstack 0
 21799                           
 21800 ;; *************** function _PIN_MANAGER_Initialize *****************
 21801 ;; Defined at:
 21802 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 21803 ;; Parameters:    Size  Location     Type
 21804 ;;		None
 21805 ;; Auto vars:     Size  Location     Type
 21806 ;;		None
 21807 ;; Return value:  Size  Location     Type
 21808 ;;                  1  [STACK] void 
 21809 ;; Registers used:
 21810 ;;		wreg, status,2
 21811 ;; Tracked objects:
 21812 ;;		On entry : 3F/39
 21813 ;;		On exit  : 3F/3A
 21814 ;;		Unchanged: 0/0
 21815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21820 ;;Total ram usage:        0 bytes
 21821 ;; Hardware stack levels used:    1
 21822 ;; Hardware stack levels required when called:    6
 21823 ;; This function calls:
 21824 ;;		Nothing
 21825 ;; This function is called by:
 21826 ;;		_SYSTEM_Initialize
 21827 ;; This function uses a reentrant model
 21828 ;;
 21829                           
 21830                           	psect	text96
 21831  016E36                     __ptext96:
 21832                           	opt callstack 0
 21833  016E36                     _PIN_MANAGER_Initialize:
 21834                           	opt callstack 23
 21835                           
 21836                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 21837                           
 21838                           ; BSR set to: 57
 21839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21840                           ;incstack = 0
 21841  016E36  0E07               	movlw	7
 21842  016E38  6EBE               	movwf	190,c	;volatile
 21843                           
 21844                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 21845  016E3A  6ABD               	clrf	189,c	;volatile
 21846                           
 21847                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 21848  016E3C  6ABA               	clrf	186,c	;volatile
 21849                           
 21850                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 21851  016E3E  6ABF               	clrf	191,c	;volatile
 21852                           
 21853                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 21854  016E40  6ABB               	clrf	187,c	;volatile
 21855                           
 21856                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 21857  016E42  0E07               	movlw	7
 21858  016E44  6EBC               	movwf	188,c	;volatile
 21859                           
 21860                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 21861  016E46  6AC6               	clrf	198,c	;volatile
 21862                           
 21863                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 21864  016E48  0E0F               	movlw	15
 21865  016E4A  6EC7               	movwf	199,c	;volatile
 21866                           
 21867                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 21868  016E4C  68C2               	setf	194,c	;volatile
 21869                           
 21870                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 21871  016E4E  0EBF               	movlw	191
 21872  016E50  6EC3               	movwf	195,c	;volatile
 21873                           
 21874                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 21875  016E52  0E90               	movlw	144
 21876  016E54  6EC4               	movwf	196,c	;volatile
 21877                           
 21878                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 21879  016E56  0E0C               	movlw	12
 21880  016E58  6EC5               	movwf	197,c	;volatile
 21881                           
 21882                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 21883  016E5A  013A               	movlb	58	; () banked
 21884  016E5C  6B70               	clrf	112,b	;volatile
 21885                           
 21886                           ; BSR set to: 58
 21887                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 21888  016E5E  6B60               	clrf	96,b	;volatile
 21889                           
 21890                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 21891  016E60  0E3C               	movlw	60
 21892  016E62  6F50               	movwf	80,b	;volatile
 21893                           
 21894                           ; BSR set to: 58
 21895                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 21896  016E64  6B80               	clrf	128,b	;volatile
 21897                           
 21898                           ; BSR set to: 58
 21899                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 21900  016E66  6B90               	clrf	144,b	;volatile
 21901                           
 21902                           ; BSR set to: 58
 21903                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 21904  016E68  6940               	setf	64,b	;volatile
 21905                           
 21906                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 21907  016E6A  0E0C               	movlw	12
 21908  016E6C  6F71               	movwf	113,b	;volatile
 21909                           
 21910                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 21911  016E6E  0E0F               	movlw	15
 21912  016E70  6F91               	movwf	145,b	;volatile
 21913                           
 21914                           ; BSR set to: 58
 21915                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 21916  016E72  6B81               	clrf	129,b	;volatile
 21917                           
 21918                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 21919  016E74  0E87               	movlw	135
 21920  016E76  6F51               	movwf	81,b	;volatile
 21921                           
 21922                           ; BSR set to: 58
 21923                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 21924  016E78  6B41               	clrf	65,b	;volatile
 21925                           
 21926                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 21927  016E7A  0E97               	movlw	151
 21928  016E7C  6F61               	movwf	97,b	;volatile
 21929                           
 21930                           ; BSR set to: 58
 21931                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 21932  016E7E  6B82               	clrf	130,b	;volatile
 21933                           
 21934                           ; BSR set to: 58
 21935                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 21936  016E80  6B92               	clrf	146,b	;volatile
 21937                           
 21938                           ; BSR set to: 58
 21939                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 21940  016E82  6B42               	clrf	66,b	;volatile
 21941                           
 21942                           ; BSR set to: 58
 21943                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 21944  016E84  6B52               	clrf	82,b	;volatile
 21945                           
 21946                           ; BSR set to: 58
 21947                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 21948  016E86  6B62               	clrf	98,b	;volatile
 21949                           
 21950                           ; BSR set to: 58
 21951                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 21952  016E88  6B72               	clrf	114,b	;volatile
 21953                           
 21954                           ; BSR set to: 58
 21955                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 21956  016E8A  6943               	setf	67,b	;volatile
 21957                           
 21958                           ; BSR set to: 58
 21959                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 21960  016E8C  6953               	setf	83,b	;volatile
 21961                           
 21962                           ; BSR set to: 58
 21963                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 21964  016E8E  6963               	setf	99,b	;volatile
 21965                           
 21966                           ; BSR set to: 58
 21967                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 21968  016E90  6973               	setf	115,b	;volatile
 21969                           
 21970                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 21971  016E92  0E07               	movlw	7
 21972  016E94  6F83               	movwf	131,b	;volatile
 21973                           
 21974                           ; BSR set to: 58
 21975                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 21976  016E96  6993               	setf	147,b	;volatile
 21977                           
 21978                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 21979  016E98  0E0F               	movlw	15
 21980  016E9A  6FE8               	movwf	232,b	;volatile
 21981                           
 21982                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 21983  016E9C  0E13               	movlw	19
 21984  016E9E  6FDE               	movwf	222,b	;volatile
 21985                           
 21986                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 21987  016EA0  0E16               	movlw	22
 21988  016EA2  6F0E               	movwf	14,b	;volatile
 21989                           
 21990                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 21991  016EA4  0E1E               	movlw	30
 21992  016EA6  6F13               	movwf	19,b	;volatile
 21993                           
 21994                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 21995  016EA8  0E08               	movlw	8
 21996  016EAA  6FC0               	movwf	192,b	;volatile
 21997                           
 21998                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 21999  016EAC  0E10               	movlw	16
 22000  016EAE  6F19               	movwf	25,b	;volatile
 22001                           
 22002                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22003  016EB0  0E09               	movlw	9
 22004  016EB2  6FC1               	movwf	193,b	;volatile
 22005                           
 22006                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22007  016EB4  0E1F               	movlw	31
 22008  016EB6  6F15               	movwf	21,b	;volatile
 22009                           
 22010                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22011  016EB8  0E13               	movlw	19
 22012  016EBA  6F16               	movwf	22,b	;volatile
 22013                           
 22014                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22015  016EBC  0E17               	movlw	23
 22016  016EBE  6FE5               	movwf	229,b	;volatile
 22017                           
 22018                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22019  016EC0  0E14               	movlw	20
 22020  016EC2  6FDF               	movwf	223,b	;volatile
 22021                           
 22022                           ; BSR set to: 58
 22023                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22024  016EC4  0012               	return		;funcret
 22025  016EC6                     __end_of_PIN_MANAGER_Initialize:
 22026                           	opt callstack 0
 22027                           
 22028 ;; *************** function _OSCILLATOR_Initialize *****************
 22029 ;; Defined at:
 22030 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22031 ;; Parameters:    Size  Location     Type
 22032 ;;		None
 22033 ;; Auto vars:     Size  Location     Type
 22034 ;;		None
 22035 ;; Return value:  Size  Location     Type
 22036 ;;                  1  [STACK] void 
 22037 ;; Registers used:
 22038 ;;		wreg, status,2
 22039 ;; Tracked objects:
 22040 ;;		On entry : 3F/3A
 22041 ;;		On exit  : 3F/39
 22042 ;;		Unchanged: 0/0
 22043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22048 ;;Total ram usage:        0 bytes
 22049 ;; Hardware stack levels used:    1
 22050 ;; Hardware stack levels required when called:    6
 22051 ;; This function calls:
 22052 ;;		Nothing
 22053 ;; This function is called by:
 22054 ;;		_SYSTEM_Initialize
 22055 ;; This function uses a reentrant model
 22056 ;;
 22057                           
 22058                           	psect	text97
 22059  017F62                     __ptext97:
 22060                           	opt callstack 0
 22061  017F62                     _OSCILLATOR_Initialize:
 22062                           	opt callstack 23
 22063                           
 22064                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22065                           
 22066                           ; BSR set to: 58
 22067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22068                           ;incstack = 0
 22069  017F62  0E20               	movlw	32
 22070  017F64  0139               	movlb	57	; () banked
 22071  017F66  6FD9               	movwf	217,b	;volatile
 22072                           
 22073                           ; BSR set to: 57
 22074                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22075  017F68  6BDB               	clrf	219,b	;volatile
 22076                           
 22077                           ; BSR set to: 57
 22078                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22079  017F6A  6BDD               	clrf	221,b	;volatile
 22080                           
 22081                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22082  017F6C  0E02               	movlw	2
 22083  017F6E  6FDF               	movwf	223,b	;volatile
 22084                           
 22085                           ; BSR set to: 57
 22086                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22087  017F70  6BDE               	clrf	222,b	;volatile
 22088  017F72                     l171:
 22089                           
 22090                           ; BSR set to: 57
 22091                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22092  017F72  B1DC               	btfsc	220,0,b	;volatile
 22093  017F74  0012               	return	
 22094  017F76  D7FD               	goto	l171
 22095  017F78                     __end_of_OSCILLATOR_Initialize:
 22096                           	opt callstack 0
 22097                           
 22098 ;; *************** function _INTERRUPT_Initialize *****************
 22099 ;; Defined at:
 22100 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22101 ;; Parameters:    Size  Location     Type
 22102 ;;		None
 22103 ;; Auto vars:     Size  Location     Type
 22104 ;;  state           1  [STACK] _Bool 
 22105 ;; Return value:  Size  Location     Type
 22106 ;;                  1  [STACK] void 
 22107 ;; Registers used:
 22108 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22109 ;; Tracked objects:
 22110 ;;		On entry : 0/0
 22111 ;;		On exit  : 3F/39
 22112 ;;		Unchanged: 0/0
 22113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22118 ;;Total ram usage:        0 bytes
 22119 ;; Hardware stack levels used:    1
 22120 ;; Hardware stack levels required when called:    6
 22121 ;; This function calls:
 22122 ;;		Nothing
 22123 ;; This function is called by:
 22124 ;;		_SYSTEM_Initialize
 22125 ;; This function uses a reentrant model
 22126 ;;
 22127                           
 22128                           	psect	text98
 22129  017190                     __ptext98:
 22130                           	opt callstack 0
 22131  017190                     _INTERRUPT_Initialize:
 22132                           	opt callstack 0
 22133                           
 22134                           ; BSR set to: 57
 22135                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22136  017190  52E6               	movf	postinc1,f,c
 22137                           
 22138                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22139                           
 22140                           ;incstack = 0
 22141  017192  8AD2               	bsf	210,5,c	;volatile
 22142                           
 22143                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22144  017194  AED2               	btfss	16338,7,c	;volatile
 22145  017196  D003               	goto	u7590
 22146  017198  6A40               	clrf	(btemp+11)^0,c
 22147  01719A  2A40               	incf	(btemp+11)^0,f,c
 22148  01719C  D001               	goto	u7608
 22149  01719E                     u7590:
 22150  01719E  6A40               	clrf	(btemp+11)^0,c
 22151  0171A0                     u7608:
 22152                           
 22153                           ;stkvar	_state @ sp[(-1)+0]
 22154  0171A0  0EFF               	movlw	-1
 22155  0171A2  0060  F103  FFE3   	movff	btemp+11,plusw1
 22156                           
 22157                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 22158  0171A8  9ED2               	bcf	16338,7,c	;volatile
 22159                           
 22160                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 22161  0171AA  0E55               	movlw	85
 22162  0171AC  6ED4               	movwf	212,c	;volatile
 22163                           
 22164                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 22165  0171AE  0EAA               	movlw	170
 22166  0171B0  6ED4               	movwf	212,c	;volatile
 22167                           
 22168                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 22169  0171B2  90D4               	bcf	212,0,c	;volatile
 22170                           
 22171                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 22172  0171B4  0138               	movlb	56	; () banked
 22173  0171B6  6B9F               	clrf	159,b	;volatile
 22174                           
 22175                           ; BSR set to: 56
 22176                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 22177  0171B8  6B9E               	clrf	158,b	;volatile
 22178                           
 22179                           ; BSR set to: 56
 22180                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 22181  0171BA  0E08               	movlw	8
 22182  0171BC  6F9D               	movwf	157,b	;volatile
 22183                           
 22184                           ; BSR set to: 56
 22185                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 22186  0171BE  0E55               	movlw	85
 22187  0171C0  6ED4               	movwf	212,c	;volatile
 22188                           
 22189                           ; BSR set to: 56
 22190                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 22191  0171C2  0EAA               	movlw	170
 22192  0171C4  6ED4               	movwf	212,c	;volatile
 22193                           
 22194                           ; BSR set to: 56
 22195                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 22196  0171C6  80D4               	bsf	212,0,c	;volatile
 22197                           
 22198                           ; BSR set to: 56
 22199                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 22200                           ;stkvar	_state @ sp[(-1)+0]
 22201  0171C8  0EFF               	movlw	-1
 22202  0171CA  B0E3               	btfsc	plusw1,0,c
 22203  0171CC  D002               	bra	u7615
 22204  0171CE  9ED2               	bcf	16338,7,c	;volatile
 22205  0171D0  D001               	bra	u7616
 22206  0171D2                     u7615:
 22207  0171D2  8ED2               	bsf	16338,7,c	;volatile
 22208  0171D4                     u7616:
 22209                           
 22210                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 22211  0171D4  0139               	movlb	57	; () banked
 22212  0171D6  8782               	bsf	130,3,b	;volatile
 22213                           
 22214                           ; BSR set to: 57
 22215                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 22216  0171D8  8382               	bsf	130,1,b	;volatile
 22217                           
 22218                           ; BSR set to: 57
 22219                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 22220  0171DA  8182               	bsf	130,0,b	;volatile
 22221                           
 22222                           ; BSR set to: 57
 22223                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 22224  0171DC  8582               	bsf	130,2,b	;volatile
 22225                           
 22226                           ; BSR set to: 57
 22227                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 22228  0171DE  8786               	bsf	134,3,b	;volatile
 22229                           
 22230                           ; BSR set to: 57
 22231                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 22232  0171E0  8586               	bsf	134,2,b	;volatile
 22233                           
 22234                           ; BSR set to: 57
 22235                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 22236  0171E2  8983               	bsf	131,4,b	;volatile
 22237                           
 22238                           ; BSR set to: 57
 22239                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 22240  0171E4  8783               	bsf	131,3,b	;volatile
 22241                           
 22242                           ; BSR set to: 57
 22243                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 22244  0171E6  8181               	bsf	129,0,b	;volatile
 22245                           
 22246                           ; BSR set to: 57
 22247                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 22248  0171E8  8185               	bsf	133,0,b	;volatile
 22249                           
 22250                           ; BSR set to: 57
 22251                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 22252  0171EA  8189               	bsf	137,0,b	;volatile
 22253                           
 22254                           ; BSR set to: 57
 22255                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 22256  0171EC  9D88               	bcf	136,6,b	;volatile
 22257                           
 22258                           ; BSR set to: 57
 22259                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 22260  0171EE  8581               	bsf	129,2,b	;volatile
 22261                           
 22262                           ; BSR set to: 57
 22263                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 22264  0171F0  8781               	bsf	129,3,b	;volatile
 22265                           
 22266                           ; BSR set to: 57
 22267                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 22268  0171F2  52E5               	movf	postdec1,f,c
 22269  0171F4  0012               	return		;funcret
 22270  0171F6                     __end_of_INTERRUPT_Initialize:
 22271                           	opt callstack 0
 22272                           
 22273 ;; *************** function _FVR_Initialize *****************
 22274 ;; Defined at:
 22275 ;;		line 58 in file "mcc_generated_files/fvr.c"
 22276 ;; Parameters:    Size  Location     Type
 22277 ;;		None
 22278 ;; Auto vars:     Size  Location     Type
 22279 ;;		None
 22280 ;; Return value:  Size  Location     Type
 22281 ;;                  1  [STACK] void 
 22282 ;; Registers used:
 22283 ;;		wreg, status,2
 22284 ;; Tracked objects:
 22285 ;;		On entry : 3F/39
 22286 ;;		On exit  : 3F/3E
 22287 ;;		Unchanged: 0/0
 22288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22293 ;;Total ram usage:        0 bytes
 22294 ;; Hardware stack levels used:    1
 22295 ;; Hardware stack levels required when called:    6
 22296 ;; This function calls:
 22297 ;;		Nothing
 22298 ;; This function is called by:
 22299 ;;		_SYSTEM_Initialize
 22300 ;; This function uses a reentrant model
 22301 ;;
 22302                           
 22303                           	psect	text99
 22304  01803E                     __ptext99:
 22305                           	opt callstack 0
 22306  01803E                     _FVR_Initialize:
 22307                           	opt callstack 23
 22308                           
 22309                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 22310                           
 22311                           ; BSR set to: 57
 22312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22313                           ;incstack = 0
 22314  01803E  0EAF               	movlw	175
 22315  018040  013E               	movlb	62	; () banked
 22316  018042  6FC1               	movwf	193,b	;volatile
 22317                           
 22318                           ; BSR set to: 62
 22319                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22320  018044  0012               	return		;funcret
 22321  018046                     __end_of_FVR_Initialize:
 22322                           	opt callstack 0
 22323                           
 22324 ;; *************** function _EXT_INT_Initialize *****************
 22325 ;; Defined at:
 22326 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 22327 ;; Parameters:    Size  Location     Type
 22328 ;;		None
 22329 ;; Auto vars:     Size  Location     Type
 22330 ;;		None
 22331 ;; Return value:  Size  Location     Type
 22332 ;;                  1  [STACK] void 
 22333 ;; Registers used:
 22334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22335 ;; Tracked objects:
 22336 ;;		On entry : 3F/39
 22337 ;;		On exit  : 3F/39
 22338 ;;		Unchanged: 0/0
 22339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22344 ;;Total ram usage:        0 bytes
 22345 ;; Hardware stack levels used:    1
 22346 ;; Hardware stack levels required when called:    7
 22347 ;; This function calls:
 22348 ;;		_INT0_SetInterruptHandler
 22349 ;;		_INT1_SetInterruptHandler
 22350 ;; This function is called by:
 22351 ;;		_SYSTEM_Initialize
 22352 ;; This function uses a reentrant model
 22353 ;;
 22354                           
 22355                           	psect	text100
 22356  0178EC                     __ptext100:
 22357                           	opt callstack 0
 22358  0178EC                     _EXT_INT_Initialize:
 22359                           	opt callstack 22
 22360                           
 22361                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 22362                           
 22363                           ; BSR set to: 62
 22364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22365                           ;incstack = 0
 22366  0178EC  0139               	movlb	57	; () banked
 22367  0178EE  91A1               	bcf	161,0,b	;volatile
 22368                           
 22369                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 22370  0178F0  90D2               	bcf	210,0,c	;volatile
 22371                           
 22372                           ; BSR set to: 57
 22373                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 22374  0178F2  0E5E               	movlw	low _INT0_DefaultInterruptHandler
 22375  0178F4  6EE6               	movwf	postinc1,c
 22376  0178F6  0E80               	movlw	high _INT0_DefaultInterruptHandler
 22377  0178F8  6EE6               	movwf	postinc1,c
 22378  0178FA  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 22379  0178FC  6EE6               	movwf	postinc1,c
 22380  0178FE  ECF8  F0BD         	call	_INT0_SetInterruptHandler	;wreg free
 22381                           
 22382                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 22383  017902  0139               	movlb	57	; () banked
 22384  017904  8191               	bsf	145,0,b	;volatile
 22385                           
 22386                           ; BSR set to: 57
 22387                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 22388  017906  91A5               	bcf	165,0,b	;volatile
 22389                           
 22390                           ; BSR set to: 57
 22391                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 22392  017908  92D2               	bcf	210,1,c	;volatile
 22393                           
 22394                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 22395  01790A  0E60               	movlw	low _INT1_DefaultInterruptHandler
 22396  01790C  6EE6               	movwf	postinc1,c
 22397  01790E  0E80               	movlw	high _INT1_DefaultInterruptHandler
 22398  017910  6EE6               	movwf	postinc1,c
 22399  017912  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 22400  017914  6EE6               	movwf	postinc1,c
 22401  017916  ECE4  F0BD         	call	_INT1_SetInterruptHandler	;wreg free
 22402                           
 22403                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 22404  01791A  0139               	movlb	57	; () banked
 22405  01791C  8195               	bsf	149,0,b	;volatile
 22406                           
 22407                           ; BSR set to: 57
 22408                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 22409  01791E  0012               	return		;funcret
 22410  017920                     __end_of_EXT_INT_Initialize:
 22411                           	opt callstack 0
 22412                           
 22413 ;; *************** function _INT1_SetInterruptHandler *****************
 22414 ;; Defined at:
 22415 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 22416 ;; Parameters:    Size  Location     Type
 22417 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22418 ;;		 -> INT1_DefaultInterruptHandler(1), 
 22419 ;; Auto vars:     Size  Location     Type
 22420 ;;		None
 22421 ;; Return value:  Size  Location     Type
 22422 ;;                  1  [STACK] void 
 22423 ;; Registers used:
 22424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22425 ;; Tracked objects:
 22426 ;;		On entry : 3F/39
 22427 ;;		On exit  : 0/0
 22428 ;;		Unchanged: 0/0
 22429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22434 ;;Total ram usage:        0 bytes
 22435 ;; Hardware stack levels used:    1
 22436 ;; Hardware stack levels required when called:    6
 22437 ;; This function calls:
 22438 ;;		Nothing
 22439 ;; This function is called by:
 22440 ;;		_EXT_INT_Initialize
 22441 ;; This function uses a reentrant model
 22442 ;;
 22443                           
 22444                           	psect	text101
 22445  017BC8                     __ptext101:
 22446                           	opt callstack 0
 22447  017BC8                     _INT1_SetInterruptHandler:
 22448                           	opt callstack 22
 22449                           
 22450                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 22451                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22452                           
 22453                           ; BSR set to: 57
 22454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22455                           ;incstack = 0
 22456  017BC8  50E1               	movf	fsr1l,w,c
 22457  017BCA  0FFD               	addlw	-3
 22458  017BCC  6ED9               	movwf	fsr2l,c
 22459  017BCE  50E2               	movf	fsr1h,w,c
 22460  017BD0  6EDA               	movwf	fsr2h,c
 22461  017BD2  0EFF               	movlw	255
 22462  017BD4  22DA               	addwfc	fsr2h,f,c
 22463  017BD6  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 22464  017BDC  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 22465  017BE2  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 22466                           
 22467                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22468  017BE8  52E5               	movf	postdec1,f,c
 22469  017BEA  52E5               	movf	postdec1,f,c
 22470  017BEC  52E5               	movf	postdec1,f,c
 22471  017BEE  0012               	return		;funcret
 22472  017BF0                     __end_of_INT1_SetInterruptHandler:
 22473                           	opt callstack 0
 22474                           
 22475 ;; *************** function _INT0_SetInterruptHandler *****************
 22476 ;; Defined at:
 22477 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 22478 ;; Parameters:    Size  Location     Type
 22479 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22480 ;;		 -> INT0_DefaultInterruptHandler(1), 
 22481 ;; Auto vars:     Size  Location     Type
 22482 ;;		None
 22483 ;; Return value:  Size  Location     Type
 22484 ;;                  1  [STACK] void 
 22485 ;; Registers used:
 22486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22487 ;; Tracked objects:
 22488 ;;		On entry : 3F/39
 22489 ;;		On exit  : 0/0
 22490 ;;		Unchanged: 0/0
 22491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22496 ;;Total ram usage:        0 bytes
 22497 ;; Hardware stack levels used:    1
 22498 ;; Hardware stack levels required when called:    6
 22499 ;; This function calls:
 22500 ;;		Nothing
 22501 ;; This function is called by:
 22502 ;;		_EXT_INT_Initialize
 22503 ;; This function uses a reentrant model
 22504 ;;
 22505                           
 22506                           	psect	text102
 22507  017BF0                     __ptext102:
 22508                           	opt callstack 0
 22509  017BF0                     _INT0_SetInterruptHandler:
 22510                           	opt callstack 22
 22511                           
 22512                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 22513                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22514                           
 22515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22516                           ;incstack = 0
 22517  017BF0  50E1               	movf	fsr1l,w,c
 22518  017BF2  0FFD               	addlw	-3
 22519  017BF4  6ED9               	movwf	fsr2l,c
 22520  017BF6  50E2               	movf	fsr1h,w,c
 22521  017BF8  6EDA               	movwf	fsr2h,c
 22522  017BFA  0EFF               	movlw	255
 22523  017BFC  22DA               	addwfc	fsr2h,f,c
 22524  017BFE  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 22525  017C04  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 22526  017C0A  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 22527                           
 22528                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22529  017C10  52E5               	movf	postdec1,f,c
 22530  017C12  52E5               	movf	postdec1,f,c
 22531  017C14  52E5               	movf	postdec1,f,c
 22532  017C16  0012               	return		;funcret
 22533  017C18                     __end_of_INT0_SetInterruptHandler:
 22534                           	opt callstack 0
 22535                           
 22536 ;; *************** function _DMA2_Initialize *****************
 22537 ;; Defined at:
 22538 ;;		line 61 in file "mcc_generated_files/dma2.c"
 22539 ;; Parameters:    Size  Location     Type
 22540 ;;		None
 22541 ;; Auto vars:     Size  Location     Type
 22542 ;;		None
 22543 ;; Return value:  Size  Location     Type
 22544 ;;                  1  [STACK] void 
 22545 ;; Registers used:
 22546 ;;		wreg, status,2
 22547 ;; Tracked objects:
 22548 ;;		On entry : 3F/3D
 22549 ;;		On exit  : 3F/3B
 22550 ;;		Unchanged: 0/0
 22551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22556 ;;Total ram usage:        0 bytes
 22557 ;; Hardware stack levels used:    1
 22558 ;; Hardware stack levels required when called:    6
 22559 ;; This function calls:
 22560 ;;		Nothing
 22561 ;; This function is called by:
 22562 ;;		_SYSTEM_Initialize
 22563 ;; This function uses a reentrant model
 22564 ;;
 22565                           
 22566                           	psect	text103
 22567  017436                     __ptext103:
 22568                           	opt callstack 0
 22569  017436                     _DMA2_Initialize:
 22570                           	opt callstack 23
 22571                           
 22572                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 22573                           
 22574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22575                           ;incstack = 0
 22576  017436  0E00               	movlw	0
 22577  017438  013B               	movlb	59	; () banked
 22578  01743A  6FD9               	movwf	217,b	;volatile
 22579  01743C  0E10               	movlw	16
 22580  01743E  6FDA               	movwf	218,b	;volatile
 22581  017440  0E00               	movlw	0
 22582  017442  6FDB               	movwf	219,b	;volatile
 22583                           
 22584                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 22585  017444  0E3F               	movlw	63
 22586  017446  6FD1               	movwf	209,b	;volatile
 22587  017448  0EBB               	movlw	187
 22588  01744A  6FD0               	movwf	208,b	;volatile
 22589                           
 22590                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 22591  01744C  0E03               	movlw	3
 22592  01744E  6FDD               	movwf	221,b	;volatile
 22593                           
 22594                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 22595  017450  0E00               	movlw	0
 22596  017452  6FD8               	movwf	216,b	;volatile
 22597  017454  0E01               	movlw	1
 22598  017456  6FD7               	movwf	215,b	;volatile
 22599                           
 22600                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 22601  017458  0E00               	movlw	0
 22602  01745A  6FCF               	movwf	207,b	;volatile
 22603  01745C  0E01               	movlw	1
 22604  01745E  6FCE               	movwf	206,b	;volatile
 22605                           
 22606                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 22607  017460  0E46               	movlw	70
 22608  017462  6FDF               	movwf	223,b	;volatile
 22609                           
 22610                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 22611  017464  0E3D               	movlw	61
 22612  017466  6FDE               	movwf	222,b	;volatile
 22613                           
 22614                           ; BSR set to: 59
 22615                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 22616  017468  0139               	movlb	57	; () banked
 22617  01746A  97A5               	bcf	165,3,b	;volatile
 22618                           
 22619                           ; BSR set to: 57
 22620                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 22621  01746C  95A5               	bcf	165,2,b	;volatile
 22622                           
 22623                           ; BSR set to: 57
 22624                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 22625  01746E  9BA5               	bcf	165,5,b	;volatile
 22626                           
 22627                           ; BSR set to: 57
 22628                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 22629  017470  99A5               	bcf	165,4,b	;volatile
 22630                           
 22631                           ; BSR set to: 57
 22632                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 22633  017472  9795               	bcf	149,3,b	;volatile
 22634                           
 22635                           ; BSR set to: 57
 22636                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 22637  017474  9595               	bcf	149,2,b	;volatile
 22638                           
 22639                           ; BSR set to: 57
 22640                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 22641  017476  9B95               	bcf	149,5,b	;volatile
 22642                           
 22643                           ; BSR set to: 57
 22644                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 22645  017478  9995               	bcf	149,4,b	;volatile
 22646  01747A  9ED2               	bcf	16338,7,c	;# 
 22647  01747C  0139               	banksel	14831	;# 
 22648  01747E  0E55               	movlw	85	;# 
 22649  017480  6FEF               	movwf	14831,b	;# 
 22650  017482  0EAA               	movlw	170	;# 
 22651  017484  6FEF               	movwf	14831,b	;# 
 22652  017486  81EF               	bsf	14831,0,b	;# 
 22653  017488  8ED2               	bsf	16338,7,c	;# 
 22654                           
 22655                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 22656  01748A  013B               	movlb	59	; () banked
 22657  01748C  6BDC               	clrf	220,b	;volatile
 22658                           
 22659                           ; BSR set to: 59
 22660                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22661  01748E  0012               	return		;funcret
 22662  017490                     __end_of_DMA2_Initialize:
 22663                           	opt callstack 0
 22664                           
 22665 ;; *************** function _DMA1_Initialize *****************
 22666 ;; Defined at:
 22667 ;;		line 86 in file "mcc_generated_files/dma1.c"
 22668 ;; Parameters:    Size  Location     Type
 22669 ;;		None
 22670 ;; Auto vars:     Size  Location     Type
 22671 ;;		None
 22672 ;; Return value:  Size  Location     Type
 22673 ;;                  1  [STACK] void 
 22674 ;; Registers used:
 22675 ;;		wreg, status,2
 22676 ;; Tracked objects:
 22677 ;;		On entry : 3F/3B
 22678 ;;		On exit  : 3F/3B
 22679 ;;		Unchanged: 0/0
 22680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22685 ;;Total ram usage:        0 bytes
 22686 ;; Hardware stack levels used:    1
 22687 ;; Hardware stack levels required when called:    6
 22688 ;; This function calls:
 22689 ;;		Nothing
 22690 ;; This function is called by:
 22691 ;;		_SYSTEM_Initialize
 22692 ;; This function uses a reentrant model
 22693 ;;
 22694                           
 22695                           	psect	text104
 22696  017056                     __ptext104:
 22697                           	opt callstack 0
 22698  017056                     _DMA1_Initialize:
 22699                           	opt callstack 23
 22700                           
 22701                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 22702                           
 22703                           ; BSR set to: 59
 22704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22705                           ;incstack = 0
 22706  017056  0E00               	movlw	0
 22707  017058  013B               	movlb	59	; () banked
 22708  01705A  6FF9               	movwf	249,b	;volatile
 22709  01705C  0E10               	movlw	16
 22710  01705E  6FFA               	movwf	250,b	;volatile
 22711  017060  0E00               	movlw	0
 22712  017062  6FFB               	movwf	251,b	;volatile
 22713                           
 22714                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 22715  017064  0E3D               	movlw	61
 22716  017066  6FF1               	movwf	241,b	;volatile
 22717  017068  0E11               	movlw	17
 22718  01706A  6FF0               	movwf	240,b	;volatile
 22719                           
 22720                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 22721  01706C  0E03               	movlw	3
 22722  01706E  6FFD               	movwf	253,b	;volatile
 22723                           
 22724                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 22725  017070  0E00               	movlw	0
 22726  017072  6FF8               	movwf	248,b	;volatile
 22727  017074  0E01               	movlw	1
 22728  017076  6FF7               	movwf	247,b	;volatile
 22729                           
 22730                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 22731  017078  0E00               	movlw	0
 22732  01707A  6FEF               	movwf	239,b	;volatile
 22733  01707C  0E01               	movlw	1
 22734  01707E  6FEE               	movwf	238,b	;volatile
 22735                           
 22736                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 22737  017080  0E15               	movlw	21
 22738  017082  6FFF               	movwf	255,b	;volatile
 22739                           
 22740                           ; BSR set to: 59
 22741                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 22742  017084  6BFE               	clrf	254,b	;volatile
 22743                           
 22744                           ; BSR set to: 59
 22745                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 22746  017086  0139               	movlb	57	; () banked
 22747  017088  93A2               	bcf	162,1,b	;volatile
 22748                           
 22749                           ; BSR set to: 57
 22750                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 22751  01708A  91A2               	bcf	162,0,b	;volatile
 22752                           
 22753                           ; BSR set to: 57
 22754                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 22755  01708C  97A2               	bcf	162,3,b	;volatile
 22756                           
 22757                           ; BSR set to: 57
 22758                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 22759  01708E  95A2               	bcf	162,2,b	;volatile
 22760                           
 22761                           ; BSR set to: 57
 22762                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 22763  017090  8392               	bsf	146,1,b	;volatile
 22764                           
 22765                           ; BSR set to: 57
 22766                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 22767  017092  8192               	bsf	146,0,b	;volatile
 22768                           
 22769                           ; BSR set to: 57
 22770                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 22771  017094  8792               	bsf	146,3,b	;volatile
 22772                           
 22773                           ; BSR set to: 57
 22774                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 22775  017096  8592               	bsf	146,2,b	;volatile
 22776                           
 22777                           ; BSR set to: 57
 22778                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 22779  017098  6BF1               	clrf	241,b	;volatile
 22780                           
 22781                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 22782  01709A  0E01               	movlw	1
 22783  01709C  6FF2               	movwf	242,b	;volatile
 22784                           
 22785                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 22786  01709E  0E04               	movlw	4
 22787  0170A0  6FF3               	movwf	243,b	;volatile
 22788                           
 22789                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 22790  0170A2  0E02               	movlw	2
 22791  0170A4  6FF4               	movwf	244,b	;volatile
 22792                           
 22793                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 22794  0170A6  0E03               	movlw	3
 22795  0170A8  6FF7               	movwf	247,b	;volatile
 22796  0170AA  9ED2               	bcf	16338,7,c	;# 
 22797  0170AC  0139               	banksel	14831	;# 
 22798  0170AE  0E55               	movlw	85	;# 
 22799  0170B0  6FEF               	movwf	14831,b	;# 
 22800  0170B2  0EAA               	movlw	170	;# 
 22801  0170B4  6FEF               	movwf	14831,b	;# 
 22802  0170B6  81EF               	bsf	14831,0,b	;# 
 22803  0170B8  8ED2               	bsf	16338,7,c	;# 
 22804                           
 22805                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 22806  0170BA  013B               	movlb	59	; () banked
 22807  0170BC  6BFC               	clrf	252,b	;volatile
 22808                           
 22809                           ; BSR set to: 59
 22810                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22811  0170BE  0012               	return		;funcret
 22812  0170C0                     __end_of_DMA1_Initialize:
 22813                           	opt callstack 0
 22814                           
 22815 ;; *************** function _CLKREF_Initialize *****************
 22816 ;; Defined at:
 22817 ;;		line 58 in file "mcc_generated_files/clkref.c"
 22818 ;; Parameters:    Size  Location     Type
 22819 ;;		None
 22820 ;; Auto vars:     Size  Location     Type
 22821 ;;		None
 22822 ;; Return value:  Size  Location     Type
 22823 ;;                  1  [STACK] void 
 22824 ;; Registers used:
 22825 ;;		wreg, status,2
 22826 ;; Tracked objects:
 22827 ;;		On entry : 3F/3B
 22828 ;;		On exit  : 3F/3C
 22829 ;;		Unchanged: 0/0
 22830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22835 ;;Total ram usage:        0 bytes
 22836 ;; Hardware stack levels used:    1
 22837 ;; Hardware stack levels required when called:    6
 22838 ;; This function calls:
 22839 ;;		Nothing
 22840 ;; This function is called by:
 22841 ;;		_SYSTEM_Initialize
 22842 ;; This function uses a reentrant model
 22843 ;;
 22844                           
 22845                           	psect	text105
 22846  017FFA                     __ptext105:
 22847                           	opt callstack 0
 22848  017FFA                     _CLKREF_Initialize:
 22849                           	opt callstack 23
 22850                           
 22851                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 22852                           
 22853                           ; BSR set to: 59
 22854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22855                           ;incstack = 0
 22856  017FFA  013C               	movlb	60	; () banked
 22857  017FFC  6BE6               	clrf	230,b	;volatile
 22858                           
 22859                           ; BSR set to: 60
 22860                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 22861  017FFE  0E94               	movlw	148
 22862  018000  6FE5               	movwf	229,b	;volatile
 22863                           
 22864                           ; BSR set to: 60
 22865                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22866  018002  0012               	return		;funcret
 22867  018004                     __end_of_CLKREF_Initialize:
 22868                           	opt callstack 0
 22869                           
 22870 ;; *************** function _ADCC_Initialize *****************
 22871 ;; Defined at:
 22872 ;;		line 65 in file "mcc_generated_files/adcc.c"
 22873 ;; Parameters:    Size  Location     Type
 22874 ;;		None
 22875 ;; Auto vars:     Size  Location     Type
 22876 ;;		None
 22877 ;; Return value:  Size  Location     Type
 22878 ;;                  1  [STACK] void 
 22879 ;; Registers used:
 22880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22881 ;; Tracked objects:
 22882 ;;		On entry : 3F/3E
 22883 ;;		On exit  : 0/0
 22884 ;;		Unchanged: 0/0
 22885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22890 ;;Total ram usage:        0 bytes
 22891 ;; Hardware stack levels used:    1
 22892 ;; Hardware stack levels required when called:    7
 22893 ;; This function calls:
 22894 ;;		_ADCC_SetADIInterruptHandler
 22895 ;;		_ADCC_SetADTIInterruptHandler
 22896 ;; This function is called by:
 22897 ;;		_SYSTEM_Initialize
 22898 ;; This function uses a reentrant model
 22899 ;;
 22900                           
 22901                           	psect	text106
 22902  0170C0                     __ptext106:
 22903                           	opt callstack 0
 22904  0170C0                     _ADCC_Initialize:
 22905                           	opt callstack 22
 22906                           
 22907                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 22908                           
 22909                           ; BSR set to: 60
 22910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22911                           ;incstack = 0
 22912  0170C0  013E               	movlb	62	; () banked
 22913  0170C2  6BDE               	clrf	222,b	;volatile
 22914                           
 22915                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 22916  0170C4  6BDF               	clrf	223,b	;volatile
 22917                           
 22918                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 22919  0170C6  6BE0               	clrf	224,b	;volatile
 22920                           
 22921                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 22922  0170C8  6BE1               	clrf	225,b	;volatile
 22923                           
 22924                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 22925  0170CA  6BE4               	clrf	228,b	;volatile
 22926                           
 22927                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 22928  0170CC  6BE5               	clrf	229,b	;volatile
 22929                           
 22930                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 22931  0170CE  6BEA               	clrf	234,b	;volatile
 22932                           
 22933                           ; BSR set to: 62
 22934                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 22935  0170D0  0E40               	movlw	64
 22936  0170D2  6FEC               	movwf	236,b	;volatile
 22937                           
 22938                           ; BSR set to: 62
 22939                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 22940  0170D4  6BF1               	clrf	241,b	;volatile
 22941                           
 22942                           ; BSR set to: 62
 22943                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x00;
 22944  0170D6  6BF3               	clrf	243,b	;volatile
 22945                           
 22946                           ; BSR set to: 62
 22947                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 22948  0170D8  6BF4               	clrf	244,b	;volatile
 22949                           
 22950                           ; BSR set to: 62
 22951                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 22952  0170DA  6BF5               	clrf	245,b	;volatile
 22953                           
 22954                           ; BSR set to: 62
 22955                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 22956  0170DC  6BF6               	clrf	246,b	;volatile
 22957                           
 22958                           ; BSR set to: 62
 22959                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 22960  0170DE  6BF7               	clrf	247,b	;volatile
 22961                           
 22962                           ; BSR set to: 62
 22963                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 22964  0170E0  6BF9               	clrf	249,b	;volatile
 22965                           
 22966                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 22967  0170E2  0E6B               	movlw	107
 22968  0170E4  6FFA               	movwf	250,b	;volatile
 22969                           
 22970                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 22971  0170E6  0E27               	movlw	39
 22972  0170E8  6FFB               	movwf	251,b	;volatile
 22973                           
 22974                           ; BSR set to: 62
 22975                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 22976  0170EA  6BFC               	clrf	252,b	;volatile
 22977                           
 22978                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 22979  0170EC  0E02               	movlw	2
 22980  0170EE  6FFD               	movwf	253,b	;volatile
 22981                           
 22982                           ; BSR set to: 62
 22983                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 22984  0170F0  6BFE               	clrf	254,b	;volatile
 22985                           
 22986                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 22987  0170F2  0E02               	movlw	2
 22988  0170F4  6FFF               	movwf	255,b	;volatile
 22989                           
 22990                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x94;
 22991  0170F6  0E94               	movlw	148
 22992  0170F8  6FF8               	movwf	248,b	;volatile
 22993                           
 22994                           ; BSR set to: 62
 22995                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 22996  0170FA  0139               	movlb	57	; () banked
 22997  0170FC  95A1               	bcf	161,2,b	;volatile
 22998                           
 22999                           ; BSR set to: 57
 23000                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23001  0170FE  8591               	bsf	145,2,b	;volatile
 23002                           
 23003                           ; BSR set to: 57
 23004                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23005  017100  0E62               	movlw	low _ADCC_DefaultInterruptHandler
 23006  017102  6EE6               	movwf	postinc1,c
 23007  017104  0E80               	movlw	high _ADCC_DefaultInterruptHandler
 23008  017106  6EE6               	movwf	postinc1,c
 23009  017108  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23010  01710A  6EE6               	movwf	postinc1,c
 23011  01710C  EC20  F0BE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23012                           
 23013                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23014  017110  0139               	movlb	57	; () banked
 23015  017112  97A1               	bcf	161,3,b	;volatile
 23016                           
 23017                           ; BSR set to: 57
 23018                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23019  017114  8791               	bsf	145,3,b	;volatile
 23020                           
 23021                           ; BSR set to: 57
 23022                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23023  017116  0E62               	movlw	low _ADCC_DefaultInterruptHandler
 23024  017118  6EE6               	movwf	postinc1,c
 23025  01711A  0E80               	movlw	high _ADCC_DefaultInterruptHandler
 23026  01711C  6EE6               	movwf	postinc1,c
 23027  01711E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23028  017120  6EE6               	movwf	postinc1,c
 23029  017122  EC0C  F0BE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23030                           
 23031                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23032  017126  0012               	return		;funcret
 23033  017128                     __end_of_ADCC_Initialize:
 23034                           	opt callstack 0
 23035                           
 23036 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23037 ;; Defined at:
 23038 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23039 ;; Parameters:    Size  Location     Type
 23040 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23041 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;		None
 23044 ;; Return value:  Size  Location     Type
 23045 ;;                  1  [STACK] void 
 23046 ;; Registers used:
 23047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23048 ;; Tracked objects:
 23049 ;;		On entry : 0/0
 23050 ;;		On exit  : 0/0
 23051 ;;		Unchanged: 0/0
 23052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23057 ;;Total ram usage:        0 bytes
 23058 ;; Hardware stack levels used:    1
 23059 ;; Hardware stack levels required when called:    6
 23060 ;; This function calls:
 23061 ;;		Nothing
 23062 ;; This function is called by:
 23063 ;;		_ADCC_Initialize
 23064 ;;		_start_adc_scan
 23065 ;; This function uses a reentrant model
 23066 ;;
 23067                           
 23068                           	psect	text107
 23069  017C18                     __ptext107:
 23070                           	opt callstack 0
 23071  017C18                     _ADCC_SetADTIInterruptHandler:
 23072                           	opt callstack 23
 23073                           
 23074                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23075                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23076                           
 23077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23078                           ;incstack = 0
 23079  017C18  50E1               	movf	fsr1l,w,c
 23080  017C1A  0FFD               	addlw	-3
 23081  017C1C  6ED9               	movwf	fsr2l,c
 23082  017C1E  50E2               	movf	fsr1h,w,c
 23083  017C20  6EDA               	movwf	fsr2h,c
 23084  017C22  0EFF               	movlw	255
 23085  017C24  22DA               	addwfc	fsr2h,f,c
 23086  017C26  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23087  017C2C  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23088  017C32  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23089                           
 23090                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23091  017C38  52E5               	movf	postdec1,f,c
 23092  017C3A  52E5               	movf	postdec1,f,c
 23093  017C3C  52E5               	movf	postdec1,f,c
 23094  017C3E  0012               	return		;funcret
 23095  017C40                     __end_of_ADCC_SetADTIInterruptHandler:
 23096                           	opt callstack 0
 23097                           
 23098 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23099 ;; Defined at:
 23100 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23101 ;; Parameters:    Size  Location     Type
 23102 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23103 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23104 ;; Auto vars:     Size  Location     Type
 23105 ;;		None
 23106 ;; Return value:  Size  Location     Type
 23107 ;;                  1  [STACK] void 
 23108 ;; Registers used:
 23109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23110 ;; Tracked objects:
 23111 ;;		On entry : 6/0
 23112 ;;		On exit  : 0/0
 23113 ;;		Unchanged: 0/0
 23114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;Total ram usage:        0 bytes
 23120 ;; Hardware stack levels used:    1
 23121 ;; Hardware stack levels required when called:    6
 23122 ;; This function calls:
 23123 ;;		Nothing
 23124 ;; This function is called by:
 23125 ;;		_ADCC_Initialize
 23126 ;;		_start_adc_scan
 23127 ;; This function uses a reentrant model
 23128 ;;
 23129                           
 23130                           	psect	text108
 23131  017C40                     __ptext108:
 23132                           	opt callstack 0
 23133  017C40                     _ADCC_SetADIInterruptHandler:
 23134                           	opt callstack 23
 23135                           
 23136                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23137                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23138                           
 23139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23140                           ;incstack = 0
 23141  017C40  50E1               	movf	fsr1l,w,c
 23142  017C42  0FFD               	addlw	-3
 23143  017C44  6ED9               	movwf	fsr2l,c
 23144  017C46  50E2               	movf	fsr1h,w,c
 23145  017C48  6EDA               	movwf	fsr2h,c
 23146  017C4A  0EFF               	movlw	255
 23147  017C4C  22DA               	addwfc	fsr2h,f,c
 23148  017C4E  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23149  017C54  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23150  017C5A  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23151                           
 23152                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23153  017C60  52E5               	movf	postdec1,f,c
 23154  017C62  52E5               	movf	postdec1,f,c
 23155  017C64  52E5               	movf	postdec1,f,c
 23156  017C66  0012               	return		;funcret
 23157  017C68                     __end_of_ADCC_SetADIInterruptHandler:
 23158                           	opt callstack 0
 23159                           
 23160 ;; *************** function _TMR5_ISR *****************
 23161 ;; Defined at:
 23162 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 23163 ;; Parameters:    Size  Location     Type
 23164 ;;		None
 23165 ;; Auto vars:     Size  Location     Type
 23166 ;;		None
 23167 ;; Return value:  Size  Location     Type
 23168 ;;                  1    wreg      void 
 23169 ;; Registers used:
 23170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 23171 ;; Tracked objects:
 23172 ;;		On entry : 0/0
 23173 ;;		On exit  : 0/0
 23174 ;;		Unchanged: 0/0
 23175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23178 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23179 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23180 ;;Total ram usage:        4 bytes
 23181 ;; Hardware stack levels used:    1
 23182 ;; Hardware stack levels required when called:    5
 23183 ;; This function calls:
 23184 ;;		_TMR5_CallBack
 23185 ;;		_TMR5_WriteTimer
 23186 ;; This function is called by:
 23187 ;;		Interrupt level 1
 23188 ;; This function uses a non-reentrant model
 23189 ;;
 23190                           
 23191                           	psect	text109
 23192  017380                     __ptext109:
 23193                           	opt callstack 0
 23194  017380                     _TMR5_ISR:
 23195                           	opt callstack 12
 23196                           
 23197                           ;incstack = 0
 23198  017380  006F FF60  F0DF    	movff	status,??_TMR5_ISR+2
 23199  017386  0060  F100  F0E0   	movff	btemp+11,??_TMR5_ISR+3
 23200  01738C  EE15  F3AB         	lfsr	1,___intlo_sp
 23201                           
 23202                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 23203  017390  0139               	movlb	57	; () banked
 23204  017392  9DA8               	bcf	168,6,b	;volatile
 23205                           
 23206                           ; BSR set to: 57
 23207                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 23208  017394  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 23209  01739A  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 23210  0173A0  ECB0  F0BB         	call	_TMR5_WriteTimer	;wreg free
 23211                           
 23212                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 23213  0173A4  0102               	movlb	2	; () banked
 23214  0173A6  51BB               	movf	(_V+187)& (0+255),w,b	;volatile
 23215  0173A8  0100               	movlb	0	; () banked
 23216  0173AA  6FDD               	movwf	??_TMR5_ISR& (0+255),b
 23217  0173AC  6BDE               	clrf	(??_TMR5_ISR+1)& (0+255),b
 23218  0173AE  0E05               	movlw	5
 23219  0173B0  27DD               	addwf	??_TMR5_ISR& (0+255),f,b
 23220  0173B2  0E00               	movlw	0
 23221  0173B4  23DE               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 23222  0173B6  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 23223  0173B8  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 23224  0173BA  51DD               	movf	??_TMR5_ISR& (0+255),w,b
 23225  0173BC  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 23226  0173BE  51DE               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 23227  0173C0  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 23228  0173C2  A0D8               	btfss	status,0,c
 23229  0173C4  D004               	goto	i1l1045
 23230                           
 23231                           ; BSR set to: 0
 23232                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 23233  0173C6  EC95  F0BE         	call	_TMR5_CallBack	;wreg free
 23234                           
 23235                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 23236  0173CA  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 23237  0173CC  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 23238  0173CE                     i1l1045:
 23239  0173CE  0060  F380  F040   	movff	??_TMR5_ISR+3,btemp+11
 23240  0173D4  0060  F37F  FFD8   	movff	??_TMR5_ISR+2,status
 23241  0173DA  0011               	retfie		f
 23242  0173DC                     __end_of_TMR5_ISR:
 23243                           	opt callstack 0
 23244                           
 23245 ;; *************** function _TMR5_WriteTimer *****************
 23246 ;; Defined at:
 23247 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 23248 ;; Parameters:    Size  Location     Type
 23249 ;;  timerVal        2  [STACK] unsigned short 
 23250 ;; Auto vars:     Size  Location     Type
 23251 ;;		None
 23252 ;; Return value:  Size  Location     Type
 23253 ;;                  1  [STACK] void 
 23254 ;; Registers used:
 23255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23256 ;; Tracked objects:
 23257 ;;		On entry : 3F/39
 23258 ;;		On exit  : 0/0
 23259 ;;		Unchanged: 0/0
 23260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23265 ;;Total ram usage:        0 bytes
 23266 ;; Hardware stack levels used:    1
 23267 ;; Hardware stack levels required when called:    3
 23268 ;; This function calls:
 23269 ;;		Nothing
 23270 ;; This function is called by:
 23271 ;;		_TMR5_ISR
 23272 ;; This function uses a reentrant model
 23273 ;;
 23274                           
 23275                           	psect	text110
 23276  017760                     __ptext110:
 23277                           	opt callstack 0
 23278  017760                     _TMR5_WriteTimer:
 23279                           	opt callstack 13
 23280                           
 23281                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 23282                           
 23283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23284                           ;incstack = 0
 23285  017760  A49A               	btfss	154,2,c	;volatile
 23286  017762  D00F               	goto	l8409
 23287                           
 23288                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 23289  017764  909A               	bcf	154,0,c	;volatile
 23290                           
 23291                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 23292                           ;stkvar	_timerVal @ sp[(0)+-2]
 23293  017766  0EFF               	movlw	255
 23294  017768  24E1               	addwf	fsr1l,w,c
 23295  01776A  6ED9               	movwf	fsr2l,c
 23296  01776C  0EFF               	movlw	255
 23297  01776E  20E2               	addwfc	fsr1h,w,c
 23298  017770  6EDA               	movwf	fsr2h,c
 23299  017772  50DF               	movf	indf2,w,c
 23300  017774  6E99               	movwf	153,c	;volatile
 23301                           
 23302                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 23303                           ;stkvar	_timerVal @ sp[(0)+-2]
 23304  017776  0EFE               	movlw	-2
 23305  017778  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23306                           
 23307                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 23308  01777E  809A               	bsf	154,0,c	;volatile
 23309                           
 23310                           ;mcc_generated_files/tmr5.c: 142:  } else {
 23311  017780  D00C               	goto	l1028
 23312  017782                     l8409:
 23313                           
 23314                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 23315                           ;stkvar	_timerVal @ sp[(0)+-2]
 23316  017782  0EFF               	movlw	255
 23317  017784  24E1               	addwf	fsr1l,w,c
 23318  017786  6ED9               	movwf	fsr2l,c
 23319  017788  0EFF               	movlw	255
 23320  01778A  20E2               	addwfc	fsr1h,w,c
 23321  01778C  6EDA               	movwf	fsr2h,c
 23322  01778E  50DF               	movf	indf2,w,c
 23323  017790  6E99               	movwf	153,c	;volatile
 23324                           
 23325                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 23326                           ;stkvar	_timerVal @ sp[(0)+-2]
 23327  017792  0EFE               	movlw	-2
 23328  017794  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23329  01779A                     l1028:
 23330                           
 23331                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23332  01779A  52E5               	movf	postdec1,f,c
 23333  01779C  52E5               	movf	postdec1,f,c
 23334  01779E  0012               	return		;funcret
 23335  0177A0                     __end_of_TMR5_WriteTimer:
 23336                           	opt callstack 0
 23337                           
 23338 ;; *************** function _TMR5_CallBack *****************
 23339 ;; Defined at:
 23340 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 23341 ;; Parameters:    Size  Location     Type
 23342 ;;		None
 23343 ;; Auto vars:     Size  Location     Type
 23344 ;;		None
 23345 ;; Return value:  Size  Location     Type
 23346 ;;                  1  [STACK] void 
 23347 ;; Registers used:
 23348 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23349 ;; Tracked objects:
 23350 ;;		On entry : 3F/0
 23351 ;;		On exit  : 0/0
 23352 ;;		Unchanged: 0/0
 23353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;Total ram usage:        0 bytes
 23359 ;; Hardware stack levels used:    1
 23360 ;; Hardware stack levels required when called:    4
 23361 ;; This function calls:
 23362 ;;		Absolute function
 23363 ;;		_TMR5_DefaultInterruptHandler
 23364 ;; This function is called by:
 23365 ;;		_TMR5_ISR
 23366 ;; This function uses a reentrant model
 23367 ;;
 23368                           
 23369                           	psect	text111
 23370  017D2A                     __ptext111:
 23371                           	opt callstack 0
 23372  017D2A                     _TMR5_CallBack:
 23373                           	opt callstack 12
 23374                           
 23375                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 23376                           
 23377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23378                           ;incstack = 0
 23379  017D2A  0100               	movlb	0	; () banked
 23380  017D2C  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23381  017D2E  11BB               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23382  017D30  11BC               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23383  017D32  B4D8               	btfsc	status,2,c
 23384  017D34  0012               	return	
 23385                           
 23386                           ; BSR set to: 0
 23387                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 23388  017D36  D801               	call	u792_28
 23389  017D38  0012               	return	
 23390  017D3A                     u792_28:
 23391  017D3A  0005               	push	
 23392  017D3C  6EFA               	movwf	pclath,c
 23393  017D3E  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23394  017D40  6EFD               	movwf	tosl,c
 23395  017D42  51BB               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23396  017D44  6EFE               	movwf	tosh,c
 23397  017D46  51BC               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23398  017D48  6EFF               	movwf	tosu,c
 23399  017D4A  50FA               	movf	pclath,w,c
 23400  017D4C  0012               	return		;indir
 23401  017D4E                     __end_of_TMR5_CallBack:
 23402                           	opt callstack 0
 23403                           
 23404 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 23405 ;; Defined at:
 23406 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 23407 ;; Parameters:    Size  Location     Type
 23408 ;;		None
 23409 ;; Auto vars:     Size  Location     Type
 23410 ;;		None
 23411 ;; Return value:  Size  Location     Type
 23412 ;;                  1  [STACK] void 
 23413 ;; Registers used:
 23414 ;;		wreg, status,2, status,0, btemp+11
 23415 ;; Tracked objects:
 23416 ;;		On entry : 3F/0
 23417 ;;		On exit  : 0/0
 23418 ;;		Unchanged: 0/0
 23419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23424 ;;Total ram usage:        0 bytes
 23425 ;; Hardware stack levels used:    1
 23426 ;; Hardware stack levels required when called:    3
 23427 ;; This function calls:
 23428 ;;		Nothing
 23429 ;; This function is called by:
 23430 ;;		_TMR5_Initialize
 23431 ;;		_TMR5_CallBack
 23432 ;; This function uses a reentrant model
 23433 ;;
 23434                           
 23435                           	psect	text112
 23436  017EBA                     __ptext112:
 23437                           	opt callstack 0
 23438  017EBA                     _TMR5_DefaultInterruptHandler:
 23439                           	opt callstack 12
 23440                           
 23441                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 23442                           
 23443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23444                           ;incstack = 0
 23445  017EBA  A0BE               	btfss	190,0,c	;volatile
 23446  017EBC  D002               	goto	u765_20
 23447  017EBE  0E01               	movlw	1
 23448  017EC0  D001               	goto	u765_26
 23449  017EC2                     u765_20:
 23450  017EC2  0E00               	movlw	0
 23451  017EC4                     u765_26:
 23452  017EC4  0AFF               	xorlw	255
 23453  017EC6  6E40               	movwf	(btemp+11)^0,c
 23454  017EC8  50BE               	movf	190,w,c	;volatile
 23455  017ECA  1840               	xorwf	(btemp+11)^0,w,c
 23456  017ECC  0BFE               	andlw	-2
 23457  017ECE  1840               	xorwf	(btemp+11)^0,w,c
 23458  017ED0  6EBE               	movwf	190,c	;volatile
 23459                           
 23460                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23461  017ED2  0012               	return		;funcret
 23462  017ED4                     __end_of_TMR5_DefaultInterruptHandler:
 23463                           	opt callstack 0
 23464                           
 23465 ;; *************** function _INT0_ISR *****************
 23466 ;; Defined at:
 23467 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 23468 ;; Parameters:    Size  Location     Type
 23469 ;;		None
 23470 ;; Auto vars:     Size  Location     Type
 23471 ;;		None
 23472 ;; Return value:  Size  Location     Type
 23473 ;;                  1    wreg      void 
 23474 ;; Registers used:
 23475 ;;		wreg, status,2, status,0, pclath, tosl
 23476 ;; Tracked objects:
 23477 ;;		On entry : 0/0
 23478 ;;		On exit  : 0/0
 23479 ;;		Unchanged: 0/0
 23480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23485 ;;Total ram usage:        0 bytes
 23486 ;; Hardware stack levels used:    1
 23487 ;; Hardware stack levels required when called:    2
 23488 ;; This function calls:
 23489 ;;		_INT0_CallBack
 23490 ;; This function is called by:
 23491 ;;		Interrupt level 2
 23492 ;; This function uses a non-reentrant model
 23493 ;;
 23494                           
 23495                           	psect	text113
 23496  017FCC                     __ptext113:
 23497                           	opt callstack 0
 23498  017FCC                     _INT0_ISR:
 23499                           	opt callstack 12
 23500                           
 23501                           ;incstack = 0
 23502  017FCC  EE13  F356         	lfsr	1,___inthi_sp
 23503                           
 23504                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 23505  017FD0  0139               	movlb	57	; () banked
 23506  017FD2  91A1               	bcf	161,0,b	;volatile
 23507                           
 23508                           ; BSR set to: 57
 23509                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 23510  017FD4  ECA7  F0BE         	call	_INT0_CallBack	;wreg free
 23511  017FD8  0011               	retfie		f
 23512  017FDA                     __end_of_INT0_ISR:
 23513                           	opt callstack 0
 23514                           
 23515 ;; *************** function _INT0_CallBack *****************
 23516 ;; Defined at:
 23517 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 23518 ;; Parameters:    Size  Location     Type
 23519 ;;		None
 23520 ;; Auto vars:     Size  Location     Type
 23521 ;;		None
 23522 ;; Return value:  Size  Location     Type
 23523 ;;                  1  [STACK] void 
 23524 ;; Registers used:
 23525 ;;		wreg, status,2, status,0, pclath, tosl
 23526 ;; Tracked objects:
 23527 ;;		On entry : 3F/39
 23528 ;;		On exit  : 0/0
 23529 ;;		Unchanged: 0/0
 23530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23535 ;;Total ram usage:        0 bytes
 23536 ;; Hardware stack levels used:    1
 23537 ;; Hardware stack levels required when called:    1
 23538 ;; This function calls:
 23539 ;;		Absolute function
 23540 ;;		_INT0_DefaultInterruptHandler
 23541 ;; This function is called by:
 23542 ;;		_INT0_ISR
 23543 ;; This function uses a reentrant model
 23544 ;;
 23545                           
 23546                           	psect	text114
 23547  017D4E                     __ptext114:
 23548                           	opt callstack 0
 23549  017D4E                     _INT0_CallBack:
 23550                           	opt callstack 12
 23551                           
 23552                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 23553                           
 23554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23555                           ;incstack = 0
 23556  017D4E  5019               	movf	_INT0_InterruptHandler^0,w,c
 23557  017D50  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 23558  017D52  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 23559  017D54  B4D8               	btfsc	status,2,c
 23560  017D56  0012               	return	
 23561                           
 23562                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 23563  017D58  D801               	call	u366_48
 23564  017D5A  0012               	return	
 23565  017D5C                     u366_48:
 23566  017D5C  0005               	push	
 23567  017D5E  6EFA               	movwf	pclath,c
 23568  017D60  5019               	movf	_INT0_InterruptHandler^0,w,c
 23569  017D62  6EFD               	movwf	tosl,c
 23570  017D64  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 23571  017D66  6EFE               	movwf	tosh,c
 23572  017D68  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 23573  017D6A  6EFF               	movwf	tosu,c
 23574  017D6C  50FA               	movf	pclath,w,c
 23575  017D6E  0012               	return		;indir
 23576  017D70                     __end_of_INT0_CallBack:
 23577                           	opt callstack 0
 23578                           
 23579 ;; *************** function _INT0_DefaultInterruptHandler *****************
 23580 ;; Defined at:
 23581 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 23582 ;; Parameters:    Size  Location     Type
 23583 ;;		None
 23584 ;; Auto vars:     Size  Location     Type
 23585 ;;		None
 23586 ;; Return value:  Size  Location     Type
 23587 ;;                  1  [STACK] void 
 23588 ;; Registers used:
 23589 ;;		None
 23590 ;; Tracked objects:
 23591 ;;		On entry : 0/39
 23592 ;;		On exit  : 0/0
 23593 ;;		Unchanged: 0/0
 23594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23599 ;;Total ram usage:        0 bytes
 23600 ;; Hardware stack levels used:    1
 23601 ;; This function calls:
 23602 ;;		Nothing
 23603 ;; This function is called by:
 23604 ;;		_EXT_INT_Initialize
 23605 ;;		_INT0_CallBack
 23606 ;; This function uses a reentrant model
 23607 ;;
 23608                           
 23609                           	psect	text115
 23610  01805E                     __ptext115:
 23611                           	opt callstack 0
 23612  01805E                     _INT0_DefaultInterruptHandler:
 23613                           	opt callstack 12
 23614                           
 23615                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23616                           
 23617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23618                           ;incstack = 0
 23619  01805E  0012               	return		;funcret
 23620  018060                     __end_of_INT0_DefaultInterruptHandler:
 23621                           	opt callstack 0
 23622                           
 23623 ;; *************** function _INT1_ISR *****************
 23624 ;; Defined at:
 23625 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 23626 ;; Parameters:    Size  Location     Type
 23627 ;;		None
 23628 ;; Auto vars:     Size  Location     Type
 23629 ;;		None
 23630 ;; Return value:  Size  Location     Type
 23631 ;;                  1    wreg      void 
 23632 ;; Registers used:
 23633 ;;		wreg, status,2, status,0, pclath, tosl
 23634 ;; Tracked objects:
 23635 ;;		On entry : 0/0
 23636 ;;		On exit  : 0/0
 23637 ;;		Unchanged: 0/0
 23638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23643 ;;Total ram usage:        0 bytes
 23644 ;; Hardware stack levels used:    1
 23645 ;; Hardware stack levels required when called:    2
 23646 ;; This function calls:
 23647 ;;		_INT1_CallBack
 23648 ;; This function is called by:
 23649 ;;		Interrupt level 2
 23650 ;; This function uses a non-reentrant model
 23651 ;;
 23652                           
 23653                           	psect	text116
 23654  017FDC                     __ptext116:
 23655                           	opt callstack 0
 23656  017FDC                     _INT1_ISR:
 23657                           	opt callstack 12
 23658                           
 23659                           ;incstack = 0
 23660  017FDC  EE13  F356         	lfsr	1,___inthi_sp
 23661                           
 23662                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 23663  017FE0  0139               	movlb	57	; () banked
 23664  017FE2  91A5               	bcf	165,0,b	;volatile
 23665                           
 23666                           ; BSR set to: 57
 23667                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 23668  017FE4  ECB8  F0BE         	call	_INT1_CallBack	;wreg free
 23669  017FE8  0011               	retfie		f
 23670  017FEA                     __end_of_INT1_ISR:
 23671                           	opt callstack 0
 23672                           
 23673 ;; *************** function _INT1_CallBack *****************
 23674 ;; Defined at:
 23675 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 23676 ;; Parameters:    Size  Location     Type
 23677 ;;		None
 23678 ;; Auto vars:     Size  Location     Type
 23679 ;;		None
 23680 ;; Return value:  Size  Location     Type
 23681 ;;                  1  [STACK] void 
 23682 ;; Registers used:
 23683 ;;		wreg, status,2, status,0, pclath, tosl
 23684 ;; Tracked objects:
 23685 ;;		On entry : 3F/39
 23686 ;;		On exit  : 0/0
 23687 ;;		Unchanged: 0/0
 23688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23693 ;;Total ram usage:        0 bytes
 23694 ;; Hardware stack levels used:    1
 23695 ;; Hardware stack levels required when called:    1
 23696 ;; This function calls:
 23697 ;;		Absolute function
 23698 ;;		_INT1_DefaultInterruptHandler
 23699 ;; This function is called by:
 23700 ;;		_INT1_ISR
 23701 ;; This function uses a reentrant model
 23702 ;;
 23703                           
 23704                           	psect	text117
 23705  017D70                     __ptext117:
 23706                           	opt callstack 0
 23707  017D70                     _INT1_CallBack:
 23708                           	opt callstack 12
 23709                           
 23710                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 23711                           
 23712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23713                           ;incstack = 0
 23714  017D70  5016               	movf	_INT1_InterruptHandler^0,w,c
 23715  017D72  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 23716  017D74  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 23717  017D76  B4D8               	btfsc	status,2,c
 23718  017D78  0012               	return	
 23719                           
 23720                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 23721  017D7A  D801               	call	u368_48
 23722  017D7C  0012               	return	
 23723  017D7E                     u368_48:
 23724  017D7E  0005               	push	
 23725  017D80  6EFA               	movwf	pclath,c
 23726  017D82  5016               	movf	_INT1_InterruptHandler^0,w,c
 23727  017D84  6EFD               	movwf	tosl,c
 23728  017D86  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 23729  017D88  6EFE               	movwf	tosh,c
 23730  017D8A  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 23731  017D8C  6EFF               	movwf	tosu,c
 23732  017D8E  50FA               	movf	pclath,w,c
 23733  017D90  0012               	return		;indir
 23734  017D92                     __end_of_INT1_CallBack:
 23735                           	opt callstack 0
 23736                           
 23737 ;; *************** function _INT1_DefaultInterruptHandler *****************
 23738 ;; Defined at:
 23739 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 23740 ;; Parameters:    Size  Location     Type
 23741 ;;		None
 23742 ;; Auto vars:     Size  Location     Type
 23743 ;;		None
 23744 ;; Return value:  Size  Location     Type
 23745 ;;                  1  [STACK] void 
 23746 ;; Registers used:
 23747 ;;		None
 23748 ;; Tracked objects:
 23749 ;;		On entry : 0/39
 23750 ;;		On exit  : 0/0
 23751 ;;		Unchanged: 0/0
 23752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23757 ;;Total ram usage:        0 bytes
 23758 ;; Hardware stack levels used:    1
 23759 ;; This function calls:
 23760 ;;		Nothing
 23761 ;; This function is called by:
 23762 ;;		_EXT_INT_Initialize
 23763 ;;		_INT1_CallBack
 23764 ;; This function uses a reentrant model
 23765 ;;
 23766                           
 23767                           	psect	text118
 23768  018060                     __ptext118:
 23769                           	opt callstack 0
 23770  018060                     _INT1_DefaultInterruptHandler:
 23771                           	opt callstack 12
 23772                           
 23773                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23774                           
 23775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23776                           ;incstack = 0
 23777  018060  0012               	return		;funcret
 23778  018062                     __end_of_INT1_DefaultInterruptHandler:
 23779                           	opt callstack 0
 23780                           
 23781 ;; *************** function _Default_ISR *****************
 23782 ;; Defined at:
 23783 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 23784 ;; Parameters:    Size  Location     Type
 23785 ;;		None
 23786 ;; Auto vars:     Size  Location     Type
 23787 ;;		None
 23788 ;; Return value:  Size  Location     Type
 23789 ;;                  1    wreg      void 
 23790 ;; Registers used:
 23791 ;;		None
 23792 ;; Tracked objects:
 23793 ;;		On entry : 0/0
 23794 ;;		On exit  : 0/0
 23795 ;;		Unchanged: 0/0
 23796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23801 ;;Total ram usage:        0 bytes
 23802 ;; Hardware stack levels used:    1
 23803 ;; This function calls:
 23804 ;;		Nothing
 23805 ;; This function is called by:
 23806 ;;		Interrupt level 2
 23807 ;; This function uses a non-reentrant model
 23808 ;;
 23809                           
 23810                           	psect	text119
 23811  018058                     __ptext119:
 23812                           	opt callstack 0
 23813  018058                     _Default_ISR:
 23814                           	opt callstack 14
 23815                           
 23816                           ;incstack = 0
 23817  018058  EE13  F356         	lfsr	1,___inthi_sp
 23818  01805C  0011               	retfie		f
 23819  01805E                     __end_of_Default_ISR:
 23820                           	opt callstack 0
 23821                           
 23822 ;; *************** function _ADCC_ISR *****************
 23823 ;; Defined at:
 23824 ;;		line 314 in file "mcc_generated_files/adcc.c"
 23825 ;; Parameters:    Size  Location     Type
 23826 ;;		None
 23827 ;; Auto vars:     Size  Location     Type
 23828 ;;		None
 23829 ;; Return value:  Size  Location     Type
 23830 ;;                  1    wreg      void 
 23831 ;; Registers used:
 23832 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23833 ;; Tracked objects:
 23834 ;;		On entry : 0/0
 23835 ;;		On exit  : 0/0
 23836 ;;		Unchanged: 0/0
 23837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23842 ;;Total ram usage:        1 bytes
 23843 ;; Hardware stack levels used:    1
 23844 ;; Hardware stack levels required when called:    1
 23845 ;; This function calls:
 23846 ;;		Absolute function
 23847 ;;		_ADCC_DefaultInterruptHandler
 23848 ;;		_adc_int_handler
 23849 ;; This function is called by:
 23850 ;;		Interrupt level 2
 23851 ;; This function uses a non-reentrant model
 23852 ;;
 23853                           
 23854                           	psect	text120
 23855  017814                     __ptext120:
 23856                           	opt callstack 0
 23857  017814                     _ADCC_ISR:
 23858                           	opt callstack 13
 23859                           
 23860                           ;incstack = 0
 23861  017814  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 23862  01781A  EE13  F356         	lfsr	1,___inthi_sp
 23863                           
 23864                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 23865  01781E  0139               	movlb	57	; () banked
 23866  017820  95A1               	bcf	161,2,b	;volatile
 23867                           
 23868                           ; BSR set to: 57
 23869                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 23870  017822  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 23871  017824  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 23872  017826  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 23873  017828  B4D8               	btfsc	status,2,c
 23874  01782A  D00C               	goto	i2u398_49
 23875                           
 23876                           ; BSR set to: 57
 23877                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 23878  01782C  D801               	call	i2u398_48
 23879  01782E  D00A               	goto	i2u398_49
 23880  017830                     i2u398_48:
 23881  017830  0005               	push	
 23882  017832  6EFA               	movwf	pclath,c
 23883  017834  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 23884  017836  6EFD               	movwf	tosl,c
 23885  017838  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 23886  01783A  6EFE               	movwf	tosh,c
 23887  01783C  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 23888  01783E  6EFF               	movwf	tosu,c
 23889  017840  50FA               	movf	pclath,w,c
 23890  017842  0012               	return		;indir
 23891  017844                     i2u398_49:
 23892  017844  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 23893  01784A  0011               	retfie		f
 23894  01784C                     __end_of_ADCC_ISR:
 23895                           	opt callstack 0
 23896                           
 23897 ;; *************** function _adc_int_t_handler *****************
 23898 ;; Defined at:
 23899 ;;		line 101 in file "daq.c"
 23900 ;; Parameters:    Size  Location     Type
 23901 ;;		None
 23902 ;; Auto vars:     Size  Location     Type
 23903 ;;		None
 23904 ;; Return value:  Size  Location     Type
 23905 ;;                  1  [STACK] void 
 23906 ;; Registers used:
 23907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 23908 ;; Tracked objects:
 23909 ;;		On entry : 3F/39
 23910 ;;		On exit  : 1/0
 23911 ;;		Unchanged: 0/0
 23912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23917 ;;Total ram usage:        0 bytes
 23918 ;; Hardware stack levels used:    1
 23919 ;; Hardware stack levels required when called:    1
 23920 ;; This function calls:
 23921 ;;		_ADCC_StartConversion
 23922 ;; This function is called by:
 23923 ;;		_start_adc_scan
 23924 ;;		_ADCC_ThresholdISR
 23925 ;; This function uses a reentrant model
 23926 ;;
 23927                           
 23928                           	psect	text121
 23929  016D0E                     __ptext121:
 23930                           	opt callstack 0
 23931  016D0E                     _adc_int_t_handler:
 23932                           	opt callstack 12
 23933                           
 23934                           ;daq.c: 106:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 23935                           
 23936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23937                           ;incstack = 0
 23938  016D0E  013E               	movlb	62	; () banked
 23939  016D10  51E6               	movf	230,w,b	;volatile
 23940  016D12  006F FB9C  F035    	movff	16103,btemp	;volatile
 23941  016D18  6A36               	clrf	(btemp+1)^0,c
 23942  016D1A  0060  F0D4  F036   	movff	btemp,btemp+1
 23943  016D20  6A35               	clrf	btemp^0,c
 23944  016D22  2635               	addwf	btemp^0,f,c
 23945  016D24  0E00               	movlw	0
 23946  016D26  2236               	addwfc	(btemp+1)^0,f,c
 23947  016D28  0100               	movlb	0	; () banked
 23948  016D2A  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 23949  016D2C  0D02               	mullw	2
 23950  016D2E  50F3               	movf	243,w,c
 23951  016D30  0F60               	addlw	low _R
 23952  016D32  6ED9               	movwf	fsr2l,c
 23953  016D34  6ADA               	clrf	fsr2h,c
 23954  016D36  0060  F0D7  FFDE   	movff	btemp,postinc2
 23955  016D3C  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 23956  016D42                     l8621:
 23957                           
 23958                           ;daq.c: 108:   if (++R.scan_index > 0XD) {
 23959  016D42  0100               	movlb	0	; () banked
 23960  016D44  2B7E               	incf	(_R+30)& (0+255),f,b	;volatile
 23961  016D46  0E0D               	movlw	13
 23962  016D48  657E               	cpfsgt	(_R+30)& (0+255),b	;volatile
 23963  016D4A  D004               	goto	l8629
 23964                           
 23965                           ; BSR set to: 0
 23966                           ;daq.c: 109:    R.done = 1;
 23967  016D4C  0E01               	movlw	1
 23968  016D4E  6F81               	movwf	(_R+33)& (0+255),b	;volatile
 23969                           
 23970                           ; BSR set to: 0
 23971  016D50  92BE               	bcf	190,1,c	;volatile
 23972  016D52  0012               	return	
 23973  016D54                     l8629:
 23974                           
 23975                           ; BSR set to: 0
 23976                           ;daq.c: 113:  } while (!((R.scan_select >> R.scan_index) &0x01));
 23977  016D54  0060  F1F8  F040   	movff	_R+30,btemp+11	;volatile
 23978  016D5A  EE20  F07F         	lfsr	2,_R+31	;volatile
 23979  016D5E  006F FF78  F03D    	movff	postinc2,btemp+8
 23980  016D64  006F FF74  F03E    	movff	postdec2,btemp+9
 23981  016D6A  2A40               	incf	(btemp+11)^0,f,c
 23982  016D6C  D003               	goto	u806_44
 23983  016D6E                     u806_45:
 23984  016D6E  90D8               	bcf	status,0,c
 23985  016D70  323E               	rrcf	(btemp+9)^0,f,c
 23986  016D72  323D               	rrcf	(btemp+8)^0,f,c
 23987  016D74                     u806_44:
 23988  016D74  2E40               	decfsz	(btemp+11)^0,f,c
 23989  016D76  D7FB               	goto	u806_45
 23990  016D78  A03D               	btfss	(btemp+8)^0,0,c
 23991  016D7A  D7E3               	goto	l8621
 23992                           
 23993                           ;daq.c: 114:  ADCC_StartConversion(R.scan_index & 0xf);
 23994  016D7C  0100               	movlb	0	; () banked
 23995  016D7E  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 23996  016D80  0B0F               	andlw	15
 23997  016D82  6EE6               	movwf	postinc1,c
 23998  016D84  ECC6  F0BF         	call	_ADCC_StartConversion	;wreg free
 23999                           
 24000                           ; BSR set to: 62
 24001  016D88  A2BE               	btfss	190,1,c	;volatile
 24002  016D8A  D002               	goto	u808_40
 24003  016D8C  0E01               	movlw	1
 24004  016D8E  D001               	goto	u808_46
 24005  016D90                     u808_40:
 24006  016D90  0E00               	movlw	0
 24007  016D92                     u808_46:
 24008  016D92  0AFF               	xorlw	255
 24009  016D94  6E40               	movwf	(btemp+11)^0,c
 24010  016D96  4640               	rlncf	(btemp+11)^0,f,c
 24011  016D98  50BE               	movf	190,w,c	;volatile
 24012  016D9A  1840               	xorwf	(btemp+11)^0,w,c
 24013  016D9C  0BFD               	andlw	-3
 24014  016D9E  1840               	xorwf	(btemp+11)^0,w,c
 24015  016DA0  6EBE               	movwf	190,c	;volatile
 24016                           
 24017                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24018  016DA2  0012               	return		;funcret
 24019  016DA4                     __end_of_adc_int_t_handler:
 24020                           	opt callstack 0
 24021                           
 24022 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24023 ;; Defined at:
 24024 ;;		line 339 in file "mcc_generated_files/adcc.c"
 24025 ;; Parameters:    Size  Location     Type
 24026 ;;		None
 24027 ;; Auto vars:     Size  Location     Type
 24028 ;;		None
 24029 ;; Return value:  Size  Location     Type
 24030 ;;                  1  [STACK] void 
 24031 ;; Registers used:
 24032 ;;		None
 24033 ;; Tracked objects:
 24034 ;;		On entry : 3F/39
 24035 ;;		On exit  : 0/0
 24036 ;;		Unchanged: 0/0
 24037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24042 ;;Total ram usage:        0 bytes
 24043 ;; Hardware stack levels used:    1
 24044 ;; This function calls:
 24045 ;;		Nothing
 24046 ;; This function is called by:
 24047 ;;		_ADCC_Initialize
 24048 ;;		_ADCC_ISR
 24049 ;;		_ADCC_ThresholdISR
 24050 ;; This function uses a reentrant model
 24051 ;;
 24052                           
 24053                           	psect	text122
 24054  018062                     __ptext122:
 24055                           	opt callstack 0
 24056  018062                     _ADCC_DefaultInterruptHandler:
 24057                           	opt callstack 13
 24058                           
 24059                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24060                           
 24061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24062                           ;incstack = 0
 24063  018062  0012               	return		;funcret
 24064  018064                     __end_of_ADCC_DefaultInterruptHandler:
 24065                           	opt callstack 0
 24066                           
 24067 ;; *************** function _adc_int_handler *****************
 24068 ;; Defined at:
 24069 ;;		line 93 in file "daq.c"
 24070 ;; Parameters:    Size  Location     Type
 24071 ;;		None
 24072 ;; Auto vars:     Size  Location     Type
 24073 ;;		None
 24074 ;; Return value:  Size  Location     Type
 24075 ;;                  1  [STACK] void 
 24076 ;; Registers used:
 24077 ;;		wreg, status,2, status,0, btemp+11
 24078 ;; Tracked objects:
 24079 ;;		On entry : 3F/39
 24080 ;;		On exit  : 0/0
 24081 ;;		Unchanged: 0/0
 24082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24087 ;;Total ram usage:        0 bytes
 24088 ;; Hardware stack levels used:    1
 24089 ;; This function calls:
 24090 ;;		Nothing
 24091 ;; This function is called by:
 24092 ;;		_start_adc_scan
 24093 ;;		_ADCC_ISR
 24094 ;; This function uses a reentrant model
 24095 ;;
 24096                           
 24097                           	psect	text123
 24098  017E0E                     __ptext123:
 24099                           	opt callstack 0
 24100  017E0E                     _adc_int_handler:
 24101                           	opt callstack 13
 24102                           
 24103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24104                           ;incstack = 0
 24105                           ;daq.c: 95:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 24106  017E0E  A4BE               	btfss	190,2,c	;volatile
 24107  017E10  D002               	goto	u392_40
 24108  017E12  0E01               	movlw	1
 24109  017E14  D001               	goto	u392_46
 24110  017E16                     u392_40:
 24111  017E16  0E00               	movlw	0
 24112  017E18                     u392_46:
 24113  017E18  0AFF               	xorlw	255
 24114  017E1A  6E40               	movwf	(btemp+11)^0,c
 24115  017E1C  4640               	rlncf	(btemp+11)^0,f,c
 24116  017E1E  4640               	rlncf	(btemp+11)^0,f,c
 24117  017E20  50BE               	movf	190,w,c	;volatile
 24118  017E22  1840               	xorwf	(btemp+11)^0,w,c
 24119  017E24  0BFB               	andlw	-5
 24120  017E26  1840               	xorwf	(btemp+11)^0,w,c
 24121  017E28  6EBE               	movwf	190,c	;volatile
 24122                           
 24123                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24124  017E2A  0012               	return		;funcret
 24125  017E2C                     __end_of_adc_int_handler:
 24126                           	opt callstack 0
 24127                           
 24128 ;; *************** function _ADCC_ThresholdISR *****************
 24129 ;; Defined at:
 24130 ;;		line 327 in file "mcc_generated_files/adcc.c"
 24131 ;; Parameters:    Size  Location     Type
 24132 ;;		None
 24133 ;; Auto vars:     Size  Location     Type
 24134 ;;		None
 24135 ;; Return value:  Size  Location     Type
 24136 ;;                  1    wreg      void 
 24137 ;; Registers used:
 24138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 24139 ;; Tracked objects:
 24140 ;;		On entry : 0/0
 24141 ;;		On exit  : 0/0
 24142 ;;		Unchanged: 0/0
 24143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24146 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24147 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24148 ;;Total ram usage:        5 bytes
 24149 ;; Hardware stack levels used:    1
 24150 ;; Hardware stack levels required when called:    2
 24151 ;; This function calls:
 24152 ;;		Absolute function
 24153 ;;		_ADCC_DefaultInterruptHandler
 24154 ;;		_adc_int_t_handler
 24155 ;; This function is called by:
 24156 ;;		Interrupt level 2
 24157 ;; This function uses a non-reentrant model
 24158 ;;
 24159                           
 24160                           	psect	text124
 24161  017128                     __ptext124:
 24162                           	opt callstack 0
 24163  017128                     _ADCC_ThresholdISR:
 24164                           	opt callstack 12
 24165                           
 24166                           ;incstack = 0
 24167  017128  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 24168  01712E  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 24169  017134  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 24170  01713A  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 24171  017140  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 24172  017146  EE13  F356         	lfsr	1,___inthi_sp
 24173                           
 24174                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 24175  01714A  0139               	movlb	57	; () banked
 24176  01714C  97A1               	bcf	161,3,b	;volatile
 24177                           
 24178                           ; BSR set to: 57
 24179                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 24180  01714E  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24181  017150  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24182  017152  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24183  017154  B4D8               	btfsc	status,2,c
 24184  017156  D00C               	goto	i2u810_49
 24185                           
 24186                           ; BSR set to: 57
 24187                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 24188  017158  D801               	call	i2u810_48
 24189  01715A  D00A               	goto	i2u810_49
 24190  01715C                     i2u810_48:
 24191  01715C  0005               	push	
 24192  01715E  6EFA               	movwf	pclath,c
 24193  017160  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24194  017162  6EFD               	movwf	tosl,c
 24195  017164  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24196  017166  6EFE               	movwf	tosh,c
 24197  017168  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24198  01716A  6EFF               	movwf	tosu,c
 24199  01716C  50FA               	movf	pclath,w,c
 24200  01716E  0012               	return		;indir
 24201  017170                     i2u810_49:
 24202  017170  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 24203  017176  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 24204  01717C  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 24205  017182  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 24206  017188  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 24207  01718E  0011               	retfie		f
 24208  017190                     __end_of_ADCC_ThresholdISR:
 24209                           	opt callstack 0
 24210                           
 24211 ;; *************** function _UART1_tx_vect_isr *****************
 24212 ;; Defined at:
 24213 ;;		line 199 in file "mcc_generated_files/uart1.c"
 24214 ;; Parameters:    Size  Location     Type
 24215 ;;		None
 24216 ;; Auto vars:     Size  Location     Type
 24217 ;;		None
 24218 ;; Return value:  Size  Location     Type
 24219 ;;                  1    wreg      void 
 24220 ;; Registers used:
 24221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24222 ;; Tracked objects:
 24223 ;;		On entry : 0/0
 24224 ;;		On exit  : 0/0
 24225 ;;		Unchanged: 0/0
 24226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24231 ;;Total ram usage:        0 bytes
 24232 ;; Hardware stack levels used:    1
 24233 ;; Hardware stack levels required when called:    1
 24234 ;; This function calls:
 24235 ;;		Absolute function
 24236 ;;		_UART1_Transmit_ISR
 24237 ;; This function is called by:
 24238 ;;		Interrupt level 2
 24239 ;; This function uses a non-reentrant model
 24240 ;;
 24241                           
 24242                           	psect	text125
 24243  017C68                     __ptext125:
 24244                           	opt callstack 0
 24245  017C68                     _UART1_tx_vect_isr:
 24246                           	opt callstack 13
 24247                           
 24248                           ;incstack = 0
 24249  017C68  EE13  F356         	lfsr	1,___inthi_sp
 24250                           
 24251                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 24252  017C6C  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24253  017C6E  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 24254  017C70  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 24255  017C72  B4D8               	btfsc	status,2,c
 24256  017C74  0011               	retfie		f
 24257                           
 24258                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 24259  017C76  D801               	call	i2u982_48
 24260  017C78  0011               	retfie		f
 24261  017C7A                     i2u982_48:
 24262  017C7A  0005               	push	
 24263  017C7C  6EFA               	movwf	pclath,c
 24264  017C7E  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24265  017C80  6EFD               	movwf	tosl,c
 24266  017C82  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 24267  017C84  6EFE               	movwf	tosh,c
 24268  017C86  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 24269  017C88  6EFF               	movwf	tosu,c
 24270  017C8A  50FA               	movf	pclath,w,c
 24271  017C8C  0012               	return		;indir
 24272  017C8E                     __end_of_UART1_tx_vect_isr:
 24273                           	opt callstack 0
 24274                           
 24275 ;; *************** function _UART1_Transmit_ISR *****************
 24276 ;; Defined at:
 24277 ;;		line 213 in file "mcc_generated_files/uart1.c"
 24278 ;; Parameters:    Size  Location     Type
 24279 ;;		None
 24280 ;; Auto vars:     Size  Location     Type
 24281 ;;		None
 24282 ;; Return value:  Size  Location     Type
 24283 ;;                  1  [STACK] void 
 24284 ;; Registers used:
 24285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24286 ;; Tracked objects:
 24287 ;;		On entry : 0/0
 24288 ;;		On exit  : 3B/39
 24289 ;;		Unchanged: 0/0
 24290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24295 ;;Total ram usage:        0 bytes
 24296 ;; Hardware stack levels used:    1
 24297 ;; This function calls:
 24298 ;;		Nothing
 24299 ;; This function is called by:
 24300 ;;		_UART1_Initialize
 24301 ;;		_UART1_tx_vect_isr
 24302 ;; This function uses a reentrant model
 24303 ;;
 24304                           
 24305                           	psect	text126
 24306  0179DE                     __ptext126:
 24307                           	opt callstack 0
 24308  0179DE                     _UART1_Transmit_ISR:
 24309                           	opt callstack 13
 24310                           
 24311                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 24312                           
 24313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24314                           ;incstack = 0
 24315  0179DE  0E40               	movlw	64
 24316  0179E0  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 24317  0179E2  D010               	goto	l581
 24318                           
 24319                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 24320  0179E4  0EBD               	movlw	low _uart1TxBuffer
 24321  0179E6  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 24322  0179E8  6ED9               	movwf	fsr2l,c
 24323  0179EA  6ADA               	clrf	fsr2h,c
 24324  0179EC  0E02               	movlw	high _uart1TxBuffer
 24325  0179EE  22DA               	addwfc	fsr2h,f,c
 24326  0179F0  50DF               	movf	indf2,w,c
 24327  0179F2  013D               	movlb	61	; () banked
 24328  0179F4  6FEA               	movwf	234,b	;volatile
 24329                           
 24330                           ; BSR set to: 61
 24331  0179F6  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 24332                           
 24333                           ; BSR set to: 61
 24334                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 24335  0179F8  0E3F               	movlw	63
 24336  0179FA  6433               	cpfsgt	_uart1TxTail^0,c
 24337  0179FC  D001               	goto	l8361
 24338                           
 24339                           ; BSR set to: 61
 24340                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 24341  0179FE  6A33               	clrf	_uart1TxTail^0,c	;volatile
 24342  017A00                     l8361:
 24343                           
 24344                           ; BSR set to: 61
 24345                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 24346  017A00  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 24347                           
 24348                           ;mcc_generated_files/uart1.c: 222:  } else {
 24349  017A02  0012               	return	
 24350  017A04                     l581:
 24351                           
 24352                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 24353  017A04  0139               	movlb	57	; () banked
 24354  017A06  9993               	bcf	147,4,b	;volatile
 24355                           
 24356                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24357  017A08  0012               	return		;funcret
 24358  017A0A                     __end_of_UART1_Transmit_ISR:
 24359                           	opt callstack 0
 24360                           
 24361 ;; *************** function _UART1_rx_vect_isr *****************
 24362 ;; Defined at:
 24363 ;;		line 206 in file "mcc_generated_files/uart1.c"
 24364 ;; Parameters:    Size  Location     Type
 24365 ;;		None
 24366 ;; Auto vars:     Size  Location     Type
 24367 ;;		None
 24368 ;; Return value:  Size  Location     Type
 24369 ;;                  1    wreg      void 
 24370 ;; Registers used:
 24371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24372 ;; Tracked objects:
 24373 ;;		On entry : 0/0
 24374 ;;		On exit  : 0/0
 24375 ;;		Unchanged: 0/0
 24376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24381 ;;Total ram usage:        0 bytes
 24382 ;; Hardware stack levels used:    1
 24383 ;; Hardware stack levels required when called:    1
 24384 ;; This function calls:
 24385 ;;		Absolute function
 24386 ;;		_UART1_Receive_ISR
 24387 ;; This function is called by:
 24388 ;;		Interrupt level 2
 24389 ;; This function uses a non-reentrant model
 24390 ;;
 24391                           
 24392                           	psect	text127
 24393  017C90                     __ptext127:
 24394                           	opt callstack 0
 24395  017C90                     _UART1_rx_vect_isr:
 24396                           	opt callstack 13
 24397                           
 24398                           ;incstack = 0
 24399  017C90  EE13  F356         	lfsr	1,___inthi_sp
 24400                           
 24401                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 24402  017C94  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24403  017C96  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 24404  017C98  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 24405  017C9A  B4D8               	btfsc	status,2,c
 24406  017C9C  0011               	retfie		f
 24407                           
 24408                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 24409  017C9E  D801               	call	i2u984_48
 24410  017CA0  0011               	retfie		f
 24411  017CA2                     i2u984_48:
 24412  017CA2  0005               	push	
 24413  017CA4  6EFA               	movwf	pclath,c
 24414  017CA6  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24415  017CA8  6EFD               	movwf	tosl,c
 24416  017CAA  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 24417  017CAC  6EFE               	movwf	tosh,c
 24418  017CAE  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 24419  017CB0  6EFF               	movwf	tosu,c
 24420  017CB2  50FA               	movf	pclath,w,c
 24421  017CB4  0012               	return		;indir
 24422  017CB6                     __end_of_UART1_rx_vect_isr:
 24423                           	opt callstack 0
 24424                           
 24425 ;; *************** function _UART1_Receive_ISR *****************
 24426 ;; Defined at:
 24427 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24428 ;; Parameters:    Size  Location     Type
 24429 ;;		None
 24430 ;; Auto vars:     Size  Location     Type
 24431 ;;		None
 24432 ;; Return value:  Size  Location     Type
 24433 ;;                  1  [STACK] void 
 24434 ;; Registers used:
 24435 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24436 ;; Tracked objects:
 24437 ;;		On entry : 0/0
 24438 ;;		On exit  : 0/0
 24439 ;;		Unchanged: 0/0
 24440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24445 ;;Total ram usage:        0 bytes
 24446 ;; Hardware stack levels used:    1
 24447 ;; This function calls:
 24448 ;;		Nothing
 24449 ;; This function is called by:
 24450 ;;		_UART1_Initialize
 24451 ;;		_UART1_rx_vect_isr
 24452 ;; This function uses a reentrant model
 24453 ;;
 24454                           
 24455                           	psect	text128
 24456  017E2C                     __ptext128:
 24457                           	opt callstack 0
 24458  017E2C                     _UART1_Receive_ISR:
 24459                           	opt callstack 13
 24460                           
 24461                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 24462                           
 24463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24464                           ;incstack = 0
 24465  017E2C  0E00               	movlw	low _uart1RxBuffer
 24466  017E2E  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 24467  017E30  6ED9               	movwf	fsr2l,c
 24468  017E32  6ADA               	clrf	fsr2h,c
 24469  017E34  0E05               	movlw	high _uart1RxBuffer
 24470  017E36  22DA               	addwfc	fsr2h,f,c
 24471  017E38  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 24472  017E3E  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 24473                           
 24474                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 24475  017E40  2831               	incf	_uart1RxHead^0,w,c
 24476  017E42  B4D8               	btfsc	status,2,c
 24477                           
 24478                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 24479  017E44  6A31               	clrf	_uart1RxHead^0,c	;volatile
 24480                           
 24481                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 24482  017E46  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 24483                           
 24484                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24485  017E48  0012               	return		;funcret
 24486  017E4A                     __end_of_UART1_Receive_ISR:
 24487                           	opt callstack 0
 24488                           
 24489 ;; *************** function _UART2_tx_vect_isr *****************
 24490 ;; Defined at:
 24491 ;;		line 195 in file "mcc_generated_files/uart2.c"
 24492 ;; Parameters:    Size  Location     Type
 24493 ;;		None
 24494 ;; Auto vars:     Size  Location     Type
 24495 ;;		None
 24496 ;; Return value:  Size  Location     Type
 24497 ;;                  1    wreg      void 
 24498 ;; Registers used:
 24499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24500 ;; Tracked objects:
 24501 ;;		On entry : 0/0
 24502 ;;		On exit  : 0/0
 24503 ;;		Unchanged: 0/0
 24504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24509 ;;Total ram usage:        0 bytes
 24510 ;; Hardware stack levels used:    1
 24511 ;; Hardware stack levels required when called:    1
 24512 ;; This function calls:
 24513 ;;		Absolute function
 24514 ;;		_UART2_Transmit_ISR
 24515 ;; This function is called by:
 24516 ;;		Interrupt level 2
 24517 ;; This function uses a non-reentrant model
 24518 ;;
 24519                           
 24520                           	psect	text129
 24521  017CB8                     __ptext129:
 24522                           	opt callstack 0
 24523  017CB8                     _UART2_tx_vect_isr:
 24524                           	opt callstack 13
 24525                           
 24526                           ;incstack = 0
 24527  017CB8  EE13  F356         	lfsr	1,___inthi_sp
 24528                           
 24529                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 24530  017CBC  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24531  017CBE  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 24532  017CC0  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 24533  017CC2  B4D8               	btfsc	status,2,c
 24534  017CC4  0011               	retfie		f
 24535                           
 24536                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 24537  017CC6  D801               	call	i2u986_48
 24538  017CC8  0011               	retfie		f
 24539  017CCA                     i2u986_48:
 24540  017CCA  0005               	push	
 24541  017CCC  6EFA               	movwf	pclath,c
 24542  017CCE  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24543  017CD0  6EFD               	movwf	tosl,c
 24544  017CD2  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 24545  017CD4  6EFE               	movwf	tosh,c
 24546  017CD6  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 24547  017CD8  6EFF               	movwf	tosu,c
 24548  017CDA  50FA               	movf	pclath,w,c
 24549  017CDC  0012               	return		;indir
 24550  017CDE                     __end_of_UART2_tx_vect_isr:
 24551                           	opt callstack 0
 24552                           
 24553 ;; *************** function _UART2_Transmit_ISR *****************
 24554 ;; Defined at:
 24555 ;;		line 213 in file "mcc_generated_files/uart2.c"
 24556 ;; Parameters:    Size  Location     Type
 24557 ;;		None
 24558 ;; Auto vars:     Size  Location     Type
 24559 ;;		None
 24560 ;; Return value:  Size  Location     Type
 24561 ;;                  1  [STACK] void 
 24562 ;; Registers used:
 24563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24564 ;; Tracked objects:
 24565 ;;		On entry : 0/0
 24566 ;;		On exit  : 3B/39
 24567 ;;		Unchanged: 0/0
 24568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24573 ;;Total ram usage:        0 bytes
 24574 ;; Hardware stack levels used:    1
 24575 ;; This function calls:
 24576 ;;		Nothing
 24577 ;; This function is called by:
 24578 ;;		_UART2_Initialize
 24579 ;;		_UART2_tx_vect_isr
 24580 ;; This function uses a reentrant model
 24581 ;;
 24582                           
 24583                           	psect	text130
 24584  017A0A                     __ptext130:
 24585                           	opt callstack 0
 24586  017A0A                     _UART2_Transmit_ISR:
 24587                           	opt callstack 13
 24588                           
 24589                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 24590                           
 24591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24592                           ;incstack = 0
 24593  017A0A  0E40               	movlw	64
 24594  017A0C  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 24595  017A0E  D010               	goto	l701
 24596                           
 24597                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 24598  017A10  0E00               	movlw	low _uart2TxBuffer
 24599  017A12  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 24600  017A14  6ED9               	movwf	fsr2l,c
 24601  017A16  6ADA               	clrf	fsr2h,c
 24602  017A18  0E03               	movlw	high _uart2TxBuffer
 24603  017A1A  22DA               	addwfc	fsr2h,f,c
 24604  017A1C  50DF               	movf	indf2,w,c
 24605  017A1E  013D               	movlb	61	; () banked
 24606  017A20  6FD2               	movwf	210,b	;volatile
 24607                           
 24608                           ; BSR set to: 61
 24609  017A22  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 24610                           
 24611                           ; BSR set to: 61
 24612                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 24613  017A24  0E3F               	movlw	63
 24614  017A26  642D               	cpfsgt	_uart2TxTail^0,c
 24615  017A28  D001               	goto	l8383
 24616                           
 24617                           ; BSR set to: 61
 24618                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 24619  017A2A  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 24620  017A2C                     l8383:
 24621                           
 24622                           ; BSR set to: 61
 24623                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 24624  017A2C  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 24625                           
 24626                           ;mcc_generated_files/uart2.c: 224:     }
 24627  017A2E  0012               	return	
 24628  017A30                     l701:
 24629                           
 24630                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 24631  017A30  0139               	movlb	57	; () banked
 24632  017A32  9796               	bcf	150,3,b	;volatile
 24633                           
 24634                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24635  017A34  0012               	return		;funcret
 24636  017A36                     __end_of_UART2_Transmit_ISR:
 24637                           	opt callstack 0
 24638                           
 24639 ;; *************** function _UART2_rx_vect_isr *****************
 24640 ;; Defined at:
 24641 ;;		line 203 in file "mcc_generated_files/uart2.c"
 24642 ;; Parameters:    Size  Location     Type
 24643 ;;		None
 24644 ;; Auto vars:     Size  Location     Type
 24645 ;;		None
 24646 ;; Return value:  Size  Location     Type
 24647 ;;                  1    wreg      void 
 24648 ;; Registers used:
 24649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24650 ;; Tracked objects:
 24651 ;;		On entry : 0/0
 24652 ;;		On exit  : 0/0
 24653 ;;		Unchanged: 0/0
 24654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24659 ;;Total ram usage:        0 bytes
 24660 ;; Hardware stack levels used:    1
 24661 ;; Hardware stack levels required when called:    1
 24662 ;; This function calls:
 24663 ;;		Absolute function
 24664 ;;		_UART2_Receive_ISR
 24665 ;; This function is called by:
 24666 ;;		Interrupt level 2
 24667 ;; This function uses a non-reentrant model
 24668 ;;
 24669                           
 24670                           	psect	text131
 24671  017CE0                     __ptext131:
 24672                           	opt callstack 0
 24673  017CE0                     _UART2_rx_vect_isr:
 24674                           	opt callstack 13
 24675                           
 24676                           ;incstack = 0
 24677  017CE0  EE13  F356         	lfsr	1,___inthi_sp
 24678                           
 24679                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 24680  017CE4  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24681  017CE6  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 24682  017CE8  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 24683  017CEA  B4D8               	btfsc	status,2,c
 24684  017CEC  0011               	retfie		f
 24685                           
 24686                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 24687  017CEE  D801               	call	i2u988_48
 24688  017CF0  0011               	retfie		f
 24689  017CF2                     i2u988_48:
 24690  017CF2  0005               	push	
 24691  017CF4  6EFA               	movwf	pclath,c
 24692  017CF6  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24693  017CF8  6EFD               	movwf	tosl,c
 24694  017CFA  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 24695  017CFC  6EFE               	movwf	tosh,c
 24696  017CFE  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 24697  017D00  6EFF               	movwf	tosu,c
 24698  017D02  50FA               	movf	pclath,w,c
 24699  017D04  0012               	return		;indir
 24700  017D06                     __end_of_UART2_rx_vect_isr:
 24701                           	opt callstack 0
 24702                           
 24703 ;; *************** function _UART2_Receive_ISR *****************
 24704 ;; Defined at:
 24705 ;;		line 233 in file "mcc_generated_files/uart2.c"
 24706 ;; Parameters:    Size  Location     Type
 24707 ;;		None
 24708 ;; Auto vars:     Size  Location     Type
 24709 ;;		None
 24710 ;; Return value:  Size  Location     Type
 24711 ;;                  1  [STACK] void 
 24712 ;; Registers used:
 24713 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24714 ;; Tracked objects:
 24715 ;;		On entry : 0/0
 24716 ;;		On exit  : 0/0
 24717 ;;		Unchanged: 0/0
 24718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24723 ;;Total ram usage:        0 bytes
 24724 ;; Hardware stack levels used:    1
 24725 ;; This function calls:
 24726 ;;		Nothing
 24727 ;; This function is called by:
 24728 ;;		_UART2_Initialize
 24729 ;;		_UART2_rx_vect_isr
 24730 ;; This function uses a reentrant model
 24731 ;;
 24732                           
 24733                           	psect	text132
 24734  017E4A                     __ptext132:
 24735                           	opt callstack 0
 24736  017E4A                     _UART2_Receive_ISR:
 24737                           	opt callstack 13
 24738                           
 24739                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 24740                           
 24741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24742                           ;incstack = 0
 24743  017E4A  0E00               	movlw	low _uart2RxBuffer
 24744  017E4C  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 24745  017E4E  6ED9               	movwf	fsr2l,c
 24746  017E50  6ADA               	clrf	fsr2h,c
 24747  017E52  0E06               	movlw	high _uart2RxBuffer
 24748  017E54  22DA               	addwfc	fsr2h,f,c
 24749  017E56  006F F743 FFDF     	movff	15824,indf2	;volatile
 24750  017E5C  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 24751                           
 24752                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 24753  017E5E  282B               	incf	_uart2RxHead^0,w,c
 24754  017E60  B4D8               	btfsc	status,2,c
 24755                           
 24756                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 24757  017E62  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 24758                           
 24759                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 24760  017E64  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 24761                           
 24762                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24763  017E66  0012               	return		;funcret
 24764  017E68                     __end_of_UART2_Receive_ISR:
 24765                           	opt callstack 0
 24766                           
 24767 ;; *************** function _TMR6_ISR *****************
 24768 ;; Defined at:
 24769 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 24770 ;; Parameters:    Size  Location     Type
 24771 ;;		None
 24772 ;; Auto vars:     Size  Location     Type
 24773 ;;		None
 24774 ;; Return value:  Size  Location     Type
 24775 ;;                  1    wreg      void 
 24776 ;; Registers used:
 24777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 24778 ;; Tracked objects:
 24779 ;;		On entry : 0/0
 24780 ;;		On exit  : 0/0
 24781 ;;		Unchanged: 0/0
 24782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24785 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24786 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24787 ;;Total ram usage:        1 bytes
 24788 ;; Hardware stack levels used:    1
 24789 ;; Hardware stack levels required when called:    2
 24790 ;; This function calls:
 24791 ;;		_TMR6_CallBack
 24792 ;; This function is called by:
 24793 ;;		Interrupt level 2
 24794 ;; This function uses a non-reentrant model
 24795 ;;
 24796                           
 24797                           	psect	text133
 24798  017ED4                     __ptext133:
 24799                           	opt callstack 0
 24800  017ED4                     _TMR6_ISR:
 24801                           	opt callstack 12
 24802                           
 24803                           ;incstack = 0
 24804  017ED4  0060  F0D4  F0DC   	movff	btemp,??_TMR6_ISR
 24805  017EDA  EE13  F356         	lfsr	1,___inthi_sp
 24806                           
 24807                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 24808  017EDE  0139               	movlb	57	; () banked
 24809  017EE0  91A9               	bcf	169,0,b	;volatile
 24810                           
 24811                           ; BSR set to: 57
 24812                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 24813  017EE2  ECC9  F0BE         	call	_TMR6_CallBack	;wreg free
 24814  017EE6  0060  F370  F035   	movff	??_TMR6_ISR,btemp
 24815  017EEC  0011               	retfie		f
 24816  017EEE                     __end_of_TMR6_ISR:
 24817                           	opt callstack 0
 24818                           
 24819 ;; *************** function _TMR6_CallBack *****************
 24820 ;; Defined at:
 24821 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 24822 ;; Parameters:    Size  Location     Type
 24823 ;;		None
 24824 ;; Auto vars:     Size  Location     Type
 24825 ;;		None
 24826 ;; Return value:  Size  Location     Type
 24827 ;;                  1  [STACK] void 
 24828 ;; Registers used:
 24829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 24830 ;; Tracked objects:
 24831 ;;		On entry : 3F/39
 24832 ;;		On exit  : 0/0
 24833 ;;		Unchanged: 0/0
 24834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24839 ;;Total ram usage:        0 bytes
 24840 ;; Hardware stack levels used:    1
 24841 ;; Hardware stack levels required when called:    1
 24842 ;; This function calls:
 24843 ;;		Absolute function
 24844 ;;		_TMR6_DefaultInterruptHandler
 24845 ;; This function is called by:
 24846 ;;		_TMR6_ISR
 24847 ;; This function uses a reentrant model
 24848 ;;
 24849                           
 24850                           	psect	text134
 24851  017D92                     __ptext134:
 24852                           	opt callstack 0
 24853  017D92                     _TMR6_CallBack:
 24854                           	opt callstack 12
 24855                           
 24856                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 24857                           
 24858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24859                           ;incstack = 0
 24860  017D92  5001               	movf	_TMR6_InterruptHandler^0,w,c
 24861  017D94  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 24862  017D96  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 24863  017D98  B4D8               	btfsc	status,2,c
 24864  017D9A  0012               	return	
 24865                           
 24866                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 24867  017D9C  D801               	call	u789_48
 24868  017D9E  0012               	return	
 24869  017DA0                     u789_48:
 24870  017DA0  0005               	push	
 24871  017DA2  6EFA               	movwf	pclath,c
 24872  017DA4  5001               	movf	_TMR6_InterruptHandler^0,w,c
 24873  017DA6  6EFD               	movwf	tosl,c
 24874  017DA8  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 24875  017DAA  6EFE               	movwf	tosh,c
 24876  017DAC  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 24877  017DAE  6EFF               	movwf	tosu,c
 24878  017DB0  50FA               	movf	pclath,w,c
 24879  017DB2  0012               	return		;indir
 24880  017DB4                     __end_of_TMR6_CallBack:
 24881                           	opt callstack 0
 24882                           
 24883 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 24884 ;; Defined at:
 24885 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 24886 ;; Parameters:    Size  Location     Type
 24887 ;;		None
 24888 ;; Auto vars:     Size  Location     Type
 24889 ;;  i               1  [STACK] unsigned char 
 24890 ;; Return value:  Size  Location     Type
 24891 ;;                  1  [STACK] void 
 24892 ;; Registers used:
 24893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24894 ;; Tracked objects:
 24895 ;;		On entry : 0/39
 24896 ;;		On exit  : 0/0
 24897 ;;		Unchanged: 0/0
 24898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24903 ;;Total ram usage:        0 bytes
 24904 ;; Hardware stack levels used:    1
 24905 ;; This function calls:
 24906 ;;		Nothing
 24907 ;; This function is called by:
 24908 ;;		_TMR6_Initialize
 24909 ;;		_TMR6_CallBack
 24910 ;; This function uses a reentrant model
 24911 ;;
 24912                           
 24913                           	psect	text135
 24914  017694                     __ptext135:
 24915                           	opt callstack 0
 24916  017694                     _TMR6_DefaultInterruptHandler:
 24917                           	opt callstack 0
 24918                           
 24919                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24920  017694  52E6               	movf	postinc1,f,c
 24921                           
 24922                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 24923                           ;stkvar	_i @ sp[(-1)+0]
 24924                           
 24925                           ;incstack = 0
 24926  017696  0EFF               	movlw	-1
 24927  017698  6AE3               	clrf	plusw1,c
 24928  01769A                     l8151:
 24929                           
 24930                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 24931                           ;stkvar	_i @ sp[(-1)+0]
 24932  01769A  0EFF               	movlw	-1
 24933  01769C  50E3               	movf	plusw1,w,c
 24934  01769E  0D02               	mullw	2
 24935  0176A0  50F3               	movf	243,w,c
 24936  0176A2  0F82               	addlw	low _tickCount
 24937  0176A4  6ED9               	movwf	fsr2l,c
 24938  0176A6  6ADA               	clrf	fsr2h,c
 24939  0176A8  50DE               	movf	postinc2,w,c
 24940  0176AA  10DE               	iorwf	postinc2,w,c
 24941  0176AC  B4D8               	btfsc	status,2,c
 24942  0176AE  D00A               	goto	l8155
 24943                           
 24944                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 24945                           ;stkvar	_i @ sp[(-1)+0]
 24946  0176B0  0EFF               	movlw	-1
 24947  0176B2  50E3               	movf	plusw1,w,c
 24948  0176B4  0D02               	mullw	2
 24949  0176B6  50F3               	movf	243,w,c
 24950  0176B8  0F82               	addlw	low _tickCount
 24951  0176BA  6ED9               	movwf	fsr2l,c
 24952  0176BC  6ADA               	clrf	fsr2h,c
 24953  0176BE  06DE               	decf	postinc2,f,c
 24954  0176C0  0E00               	movlw	0
 24955  0176C2  5ADD               	subwfb	postdec2,f,c
 24956  0176C4                     l8155:
 24957                           
 24958                           ;mcc_generated_files/tmr6.c: 207:  }
 24959                           ;stkvar	_i @ sp[(-1)+0]
 24960  0176C4  0EFF               	movlw	-1
 24961  0176C6  2AE3               	incf	plusw1,f,c
 24962                           
 24963                           ;stkvar	_i @ sp[(-1)+0]
 24964  0176C8  0EFF               	movlw	-1
 24965  0176CA  006F FF8C  F035    	movff	plusw1,btemp
 24966  0176D0  0E0B               	movlw	11
 24967  0176D2  6435               	cpfsgt	btemp^0,c
 24968  0176D4  D7E2               	goto	l8151
 24969                           
 24970                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24971  0176D6  52E5               	movf	postdec1,f,c
 24972  0176D8  0012               	return		;funcret
 24973  0176DA                     __end_of_TMR6_DefaultInterruptHandler:
 24974                           	opt callstack 0
 24975                           
 24976 ;; *************** function _DMA1_DMASCNT_ISR *****************
 24977 ;; Defined at:
 24978 ;;		line 126 in file "mcc_generated_files/dma1.c"
 24979 ;; Parameters:    Size  Location     Type
 24980 ;;		None
 24981 ;; Auto vars:     Size  Location     Type
 24982 ;;		None
 24983 ;; Return value:  Size  Location     Type
 24984 ;;                  1    wreg      void 
 24985 ;; Registers used:
 24986 ;;		None
 24987 ;; Tracked objects:
 24988 ;;		On entry : 0/0
 24989 ;;		On exit  : 3F/0
 24990 ;;		Unchanged: 0/0
 24991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24996 ;;Total ram usage:        0 bytes
 24997 ;; Hardware stack levels used:    1
 24998 ;; This function calls:
 24999 ;;		Nothing
 25000 ;; This function is called by:
 25001 ;;		Interrupt level 2
 25002 ;; This function uses a non-reentrant model
 25003 ;;
 25004                           
 25005                           	psect	text136
 25006  017FEC                     __ptext136:
 25007                           	opt callstack 0
 25008  017FEC                     _DMA1_DMASCNT_ISR:
 25009                           	opt callstack 14
 25010                           
 25011                           ;incstack = 0
 25012  017FEC  EE13  F356         	lfsr	1,___inthi_sp
 25013                           
 25014                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 25015  017FF0  0139               	movlb	57	; () banked
 25016  017FF2  91A2               	bcf	162,0,b	;volatile
 25017                           
 25018                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 25019  017FF4  0100               	movlb	0	; () banked
 25020  017FF6  979A               	bcf	_spi_link& (0+255),3,b	;volatile
 25021                           
 25022                           ; BSR set to: 0
 25023  017FF8  0011               	retfie		f
 25024  017FFA                     __end_of_DMA1_DMASCNT_ISR:
 25025                           	opt callstack 0
 25026                           
 25027 ;; *************** function _DMA1_DMADCNT_ISR *****************
 25028 ;; Defined at:
 25029 ;;		line 134 in file "mcc_generated_files/dma1.c"
 25030 ;; Parameters:    Size  Location     Type
 25031 ;;		None
 25032 ;; Auto vars:     Size  Location     Type
 25033 ;;		None
 25034 ;; Return value:  Size  Location     Type
 25035 ;;                  1    wreg      void 
 25036 ;; Registers used:
 25037 ;;		None
 25038 ;; Tracked objects:
 25039 ;;		On entry : 0/0
 25040 ;;		On exit  : 3F/39
 25041 ;;		Unchanged: 0/0
 25042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25047 ;;Total ram usage:        0 bytes
 25048 ;; Hardware stack levels used:    1
 25049 ;; This function calls:
 25050 ;;		Nothing
 25051 ;; This function is called by:
 25052 ;;		Interrupt level 2
 25053 ;; This function uses a non-reentrant model
 25054 ;;
 25055                           
 25056                           	psect	text137
 25057  018004                     __ptext137:
 25058                           	opt callstack 0
 25059  018004                     _DMA1_DMADCNT_ISR:
 25060                           	opt callstack 14
 25061                           
 25062                           ; BSR set to: 0
 25063                           ;incstack = 0
 25064  018004  EE13  F356         	lfsr	1,___inthi_sp
 25065                           
 25066                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 25067  018008  0139               	movlb	57	; () banked
 25068  01800A  93A2               	bcf	162,1,b	;volatile
 25069                           
 25070                           ; BSR set to: 57
 25071  01800C  0011               	retfie		f
 25072  01800E                     __end_of_DMA1_DMADCNT_ISR:
 25073                           	opt callstack 0
 25074                           
 25075 ;; *************** function _DMA1_DMAA_ISR *****************
 25076 ;; Defined at:
 25077 ;;		line 144 in file "mcc_generated_files/dma1.c"
 25078 ;; Parameters:    Size  Location     Type
 25079 ;;		None
 25080 ;; Auto vars:     Size  Location     Type
 25081 ;;		None
 25082 ;; Return value:  Size  Location     Type
 25083 ;;                  1    wreg      void 
 25084 ;; Registers used:
 25085 ;;		None
 25086 ;; Tracked objects:
 25087 ;;		On entry : 0/0
 25088 ;;		On exit  : 3F/39
 25089 ;;		Unchanged: 0/0
 25090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;Total ram usage:        0 bytes
 25096 ;; Hardware stack levels used:    1
 25097 ;; This function calls:
 25098 ;;		Nothing
 25099 ;; This function is called by:
 25100 ;;		Interrupt level 2
 25101 ;; This function uses a non-reentrant model
 25102 ;;
 25103                           
 25104                           	psect	text138
 25105  018010                     __ptext138:
 25106                           	opt callstack 0
 25107  018010                     _DMA1_DMAA_ISR:
 25108                           	opt callstack 14
 25109                           
 25110                           ; BSR set to: 57
 25111                           ;incstack = 0
 25112  018010  EE13  F356         	lfsr	1,___inthi_sp
 25113                           
 25114                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 25115  018014  0139               	movlb	57	; () banked
 25116  018016  97A2               	bcf	162,3,b	;volatile
 25117                           
 25118                           ; BSR set to: 57
 25119  018018  0011               	retfie		f
 25120  01801A                     __end_of_DMA1_DMAA_ISR:
 25121                           	opt callstack 0
 25122                           
 25123 ;; *************** function _DMA1_DMAOR_ISR *****************
 25124 ;; Defined at:
 25125 ;;		line 155 in file "mcc_generated_files/dma1.c"
 25126 ;; Parameters:    Size  Location     Type
 25127 ;;		None
 25128 ;; Auto vars:     Size  Location     Type
 25129 ;;		None
 25130 ;; Return value:  Size  Location     Type
 25131 ;;                  1    wreg      void 
 25132 ;; Registers used:
 25133 ;;		None
 25134 ;; Tracked objects:
 25135 ;;		On entry : 0/0
 25136 ;;		On exit  : 3F/39
 25137 ;;		Unchanged: 0/0
 25138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25143 ;;Total ram usage:        0 bytes
 25144 ;; Hardware stack levels used:    1
 25145 ;; This function calls:
 25146 ;;		Nothing
 25147 ;; This function is called by:
 25148 ;;		Interrupt level 2
 25149 ;; This function uses a non-reentrant model
 25150 ;;
 25151                           
 25152                           	psect	text139
 25153  01801C                     __ptext139:
 25154                           	opt callstack 0
 25155  01801C                     _DMA1_DMAOR_ISR:
 25156                           	opt callstack 14
 25157                           
 25158                           ; BSR set to: 57
 25159                           ;incstack = 0
 25160  01801C  EE13  F356         	lfsr	1,___inthi_sp
 25161                           
 25162                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 25163  018020  0139               	movlb	57	; () banked
 25164  018022  95A2               	bcf	162,2,b	;volatile
 25165                           
 25166                           ; BSR set to: 57
 25167  018024  0011               	retfie		f
 25168  018026                     __end_of_DMA1_DMAOR_ISR:
 25169                           	opt callstack 0
 25170                           
 25171                           ;
 25172                           ; Interrupt Vector Table @ 0x8
 25173                           ;
 25174                           
 25175                           	psect	ivt0x8
 25176  000008                     __pivt0x8:
 25177                           	opt callstack 0
 25178  000008                     ivt0x8_base:
 25179                           	opt callstack 0
 25180                           
 25181                           ; Vector 0 : SWINT
 25182  000008  6016               	dw	_Default_ISR shr (0+2)
 25183                           
 25184                           ; Vector 1 : HLVD
 25185  00000A  6016               	dw	_Default_ISR shr (0+2)
 25186                           
 25187                           ; Vector 2 : OSF
 25188  00000C  6016               	dw	_Default_ISR shr (0+2)
 25189                           
 25190                           ; Vector 3 : CSW
 25191  00000E  6016               	dw	_Default_ISR shr (0+2)
 25192                           
 25193                           ; Vector 4 : NVM
 25194  000010  6016               	dw	_Default_ISR shr (0+2)
 25195                           
 25196                           ; Vector 5 : SCAN
 25197  000012  6016               	dw	_Default_ISR shr (0+2)
 25198                           
 25199                           ; Vector 6 : CRC
 25200  000014  6016               	dw	_Default_ISR shr (0+2)
 25201                           
 25202                           ; Vector 7 : IOC
 25203  000016  6016               	dw	_Default_ISR shr (0+2)
 25204                           
 25205                           ; Vector 8 : INT0
 25206  000018  5FF3               	dw	_INT0_ISR shr (0+2)
 25207                           
 25208                           ; Vector 9 : ZCD
 25209  00001A  6016               	dw	_Default_ISR shr (0+2)
 25210                           
 25211                           ; Vector 10 : AD
 25212  00001C  5E05               	dw	_ADCC_ISR shr (0+2)
 25213                           
 25214                           ; Vector 11 : ADT
 25215  00001E  5C4A               	dw	_ADCC_ThresholdISR shr (0+2)
 25216                           
 25217                           ; Vector 12 : CMP1
 25218  000020  6016               	dw	_Default_ISR shr (0+2)
 25219                           
 25220                           ; Vector 13 : SMT1
 25221  000022  6016               	dw	_Default_ISR shr (0+2)
 25222                           
 25223                           ; Vector 14 : SMT1PRA
 25224  000024  6016               	dw	_Default_ISR shr (0+2)
 25225                           
 25226                           ; Vector 15 : SMT1PRW
 25227  000026  6016               	dw	_Default_ISR shr (0+2)
 25228                           
 25229                           ; Vector 16 : DMA1SCNT
 25230  000028  5FFB               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 25231                           
 25232                           ; Vector 17 : DMA1DCNT
 25233  00002A  6001               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 25234                           
 25235                           ; Vector 18 : DMA1OR
 25236  00002C  6007               	dw	_DMA1_DMAOR_ISR shr (0+2)
 25237                           
 25238                           ; Vector 19 : DMA1A
 25239  00002E  6004               	dw	_DMA1_DMAA_ISR shr (0+2)
 25240                           
 25241                           ; Vector 20 : SPI1RX
 25242  000030  6016               	dw	_Default_ISR shr (0+2)
 25243                           
 25244                           ; Vector 21 : SPI1TX
 25245  000032  6016               	dw	_Default_ISR shr (0+2)
 25246                           
 25247                           ; Vector 22 : SPI1
 25248  000034  6016               	dw	_Default_ISR shr (0+2)
 25249                           
 25250                           ; Vector 23 : I2C1RX
 25251  000036  6016               	dw	_Default_ISR shr (0+2)
 25252                           
 25253                           ; Vector 24 : I2C1TX
 25254  000038  6016               	dw	_Default_ISR shr (0+2)
 25255                           
 25256                           ; Vector 25 : I2C1
 25257  00003A  6016               	dw	_Default_ISR shr (0+2)
 25258                           
 25259                           ; Vector 26 : I2C1E
 25260  00003C  6016               	dw	_Default_ISR shr (0+2)
 25261                           
 25262                           ; Vector 27 : U1RX
 25263  00003E  5F24               	dw	_UART1_rx_vect_isr shr (0+2)
 25264                           
 25265                           ; Vector 28 : U1TX
 25266  000040  5F1A               	dw	_UART1_tx_vect_isr shr (0+2)
 25267                           
 25268                           ; Vector 29 : U1E
 25269  000042  6016               	dw	_Default_ISR shr (0+2)
 25270                           
 25271                           ; Vector 30 : U1
 25272  000044  6016               	dw	_Default_ISR shr (0+2)
 25273                           
 25274                           ; Vector 31 : TMR0
 25275  000046  6016               	dw	_Default_ISR shr (0+2)
 25276                           
 25277                           ; Vector 32 : TMR1
 25278  000048  6016               	dw	_Default_ISR shr (0+2)
 25279                           
 25280                           ; Vector 33 : TMR1G
 25281  00004A  6016               	dw	_Default_ISR shr (0+2)
 25282                           
 25283                           ; Vector 34 : TMR2
 25284  00004C  6016               	dw	_Default_ISR shr (0+2)
 25285                           
 25286                           ; Vector 35 : CCP1
 25287  00004E  6016               	dw	_Default_ISR shr (0+2)
 25288                           
 25289                           ; Vector 36 : Undefined
 25290  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 25291                           
 25292                           ; Vector 37 : NCO1
 25293  000052  6016               	dw	_Default_ISR shr (0+2)
 25294                           
 25295                           ; Vector 38 : CWG1
 25296  000054  6016               	dw	_Default_ISR shr (0+2)
 25297                           
 25298                           ; Vector 39 : CLC1
 25299  000056  6016               	dw	_Default_ISR shr (0+2)
 25300                           
 25301                           ; Vector 40 : INT1
 25302  000058  5FF7               	dw	_INT1_ISR shr (0+2)
 25303                           
 25304                           ; Vector 41 : CMP2
 25305  00005A  6016               	dw	_Default_ISR shr (0+2)
 25306                           
 25307                           ; Vector 42 : DMA2SCNT
 25308  00005C  6016               	dw	_Default_ISR shr (0+2)
 25309                           
 25310                           ; Vector 43 : DMA2DCNT
 25311  00005E  6016               	dw	_Default_ISR shr (0+2)
 25312                           
 25313                           ; Vector 44 : DMA2OR
 25314  000060  6016               	dw	_Default_ISR shr (0+2)
 25315                           
 25316                           ; Vector 45 : DMA2A
 25317  000062  6016               	dw	_Default_ISR shr (0+2)
 25318                           
 25319                           ; Vector 46 : I2C2RX
 25320  000064  6016               	dw	_Default_ISR shr (0+2)
 25321                           
 25322                           ; Vector 47 : I2C2TX
 25323  000066  6016               	dw	_Default_ISR shr (0+2)
 25324                           
 25325                           ; Vector 48 : I2C2
 25326  000068  6016               	dw	_Default_ISR shr (0+2)
 25327                           
 25328                           ; Vector 49 : I2C2E
 25329  00006A  6016               	dw	_Default_ISR shr (0+2)
 25330                           
 25331                           ; Vector 50 : U2RX
 25332  00006C  5F38               	dw	_UART2_rx_vect_isr shr (0+2)
 25333                           
 25334                           ; Vector 51 : U2TX
 25335  00006E  5F2E               	dw	_UART2_tx_vect_isr shr (0+2)
 25336                           
 25337                           ; Vector 52 : U2E
 25338  000070  6016               	dw	_Default_ISR shr (0+2)
 25339                           
 25340                           ; Vector 53 : U2
 25341  000072  6016               	dw	_Default_ISR shr (0+2)
 25342                           
 25343                           ; Vector 54 : TMR3
 25344  000074  6016               	dw	_Default_ISR shr (0+2)
 25345                           
 25346                           ; Vector 55 : TMR3G
 25347  000076  6016               	dw	_Default_ISR shr (0+2)
 25348                           
 25349                           ; Vector 56 : TMR4
 25350  000078  6016               	dw	_Default_ISR shr (0+2)
 25351                           
 25352                           ; Vector 57 : CCP2
 25353  00007A  6016               	dw	_Default_ISR shr (0+2)
 25354                           
 25355                           ; Vector 58 : Undefined
 25356  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 25357                           
 25358                           ; Vector 59 : CWG2
 25359  00007E  6016               	dw	_Default_ISR shr (0+2)
 25360                           
 25361                           ; Vector 60 : CLC2
 25362  000080  6016               	dw	_Default_ISR shr (0+2)
 25363                           
 25364                           ; Vector 61 : INT2
 25365  000082  6016               	dw	_Default_ISR shr (0+2)
 25366                           
 25367                           ; Vector 62 : Undefined
 25368  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 25369                           
 25370                           ; Vector 63 : Undefined
 25371  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 25372                           
 25373                           ; Vector 64 : Undefined
 25374  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 25375                           
 25376                           ; Vector 65 : Undefined
 25377  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 25378                           
 25379                           ; Vector 66 : Undefined
 25380  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 25381                           
 25382                           ; Vector 67 : Undefined
 25383  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 25384                           
 25385                           ; Vector 68 : Undefined
 25386  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 25387                           
 25388                           ; Vector 69 : Undefined
 25389  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 25390                           
 25391                           ; Vector 70 : TMR5
 25392  000094  5CE0               	dw	_TMR5_ISR shr (0+2)
 25393                           
 25394                           ; Vector 71 : TMR5G
 25395  000096  6016               	dw	_Default_ISR shr (0+2)
 25396                           
 25397                           ; Vector 72 : TMR6
 25398  000098  5FB5               	dw	_TMR6_ISR shr (0+2)
 25399                           
 25400                           ; Vector 73 : CCP3
 25401  00009A  6016               	dw	_Default_ISR shr (0+2)
 25402                           
 25403                           ; Vector 74 : CWG3
 25404  00009C  6016               	dw	_Default_ISR shr (0+2)
 25405                           
 25406                           ; Vector 75 : CLC3
 25407  00009E  6016               	dw	_Default_ISR shr (0+2)
 25408                           
 25409                           ; Vector 76 : Undefined
 25410  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 25411                           
 25412                           ; Vector 77 : Undefined
 25413  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 25414                           
 25415                           ; Vector 78 : Undefined
 25416  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 25417                           
 25418                           ; Vector 79 : Undefined
 25419  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 25420                           
 25421                           ; Vector 80 : CCP4
 25422  0000A8  6016               	dw	_Default_ISR shr (0+2)
 25423                           
 25424                           ; Vector 81 : CLC4
 25425  0000AA  6016               	dw	_Default_ISR shr (0+2)
 25426  0000AC                     ivt0x8_undefint:
 25427                           	opt callstack 0
 25428  0000AC  00FF               	reset	
 25429                           
 25430                           	psect	text140
 25431  000000                     __ptext140:
 25432                           	opt callstack 0
 25433                           
 25434                           	psect	param0
 25435  0000                     
 25436                           	psect	temp
 25437  000035                     btemp:
 25438                           	opt callstack 0
 25439  000035                     	ds	32
 25440  0000                     wtemp0	set	btemp
 25441  0000                     wtemp1	set	btemp+2
 25442  0000                     wtemp2	set	btemp+4
 25443  0000                     wtemp3	set	btemp+6
 25444  0000                     wtemp4	set	btemp+8
 25445  0000                     wtemp5	set	btemp+10
 25446  0000                     wtemp8	set	btemp+1
 25447  0000                     ttemp0	set	btemp
 25448  0000                     ttemp1	set	btemp+3
 25449  0000                     ttemp2	set	btemp+6
 25450  0000                     ttemp3	set	btemp+9
 25451  0000                     ttemp5	set	btemp+1
 25452  0000                     ttemp6	set	btemp+4
 25453  0000                     ttemp7	set	btemp+8
 25454  0000                     ltemp0	set	btemp
 25455  0000                     ltemp1	set	btemp+4
 25456  0000                     ltemp2	set	btemp+8
 25457  0000                     lltemp0	set	btemp
 25458  0000                     lltemp1	set	btemp+8
 25459  0000                     lltemp2	set	btemp+16
 25460  0000                     lltemp3	set	btemp+24
 25461                           tosu	equ	0x3FFF
 25462                           tosh	equ	0x3FFE
 25463                           tosl	equ	0x3FFD
 25464                           stkptr	equ	0x3FFC
 25465                           pclatu	equ	0x3FFB
 25466                           pclath	equ	0x3FFA
 25467                           pcl	equ	0x3FF9
 25468                           tblptru	equ	0x3FF8
 25469                           tblptrh	equ	0x3FF7
 25470                           tblptrl	equ	0x3FF6
 25471                           tablat	equ	0x3FF5
 25472                           prodh	equ	0x3FF4
 25473                           prodl	equ	0x3FF3
 25474                           indf0	equ	0x3FEF
 25475                           postinc0	equ	0x3FEE
 25476                           postdec0	equ	0x3FED
 25477                           preinc0	equ	0x3FEC
 25478                           plusw0	equ	0x3FEB
 25479                           fsr0h	equ	0x3FEA
 25480                           fsr0l	equ	0x3FE9
 25481                           wreg	equ	0x3FE8
 25482                           indf1	equ	0x3FE7
 25483                           postinc1	equ	0x3FE6
 25484                           postdec1	equ	0x3FE5
 25485                           preinc1	equ	0x3FE4
 25486                           plusw1	equ	0x3FE3
 25487                           fsr1h	equ	0x3FE2
 25488                           fsr1l	equ	0x3FE1
 25489                           bsr	equ	0x3FE0
 25490                           indf2	equ	0x3FDF
 25491                           postinc2	equ	0x3FDE
 25492                           postdec2	equ	0x3FDD
 25493                           preinc2	equ	0x3FDC
 25494                           plusw2	equ	0x3FDB
 25495                           fsr2h	equ	0x3FDA
 25496                           fsr2l	equ	0x3FD9
 25497                           status	equ	0x3FD8


Data Sizes:
    Strings     252
    Constant    144
    Data        212
    BSS         1387
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     129
    BANK1           256      0     244
    BANK2           256      0     253
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4691_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_15(CODE[9]), 
		 -> STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  291888
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                    _conv_raw_result
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                            6     0      6    6733
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _conv_raw_result                                      2     0      2    4916
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                     _get_raw_result
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  166935
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
     _get_raw_result
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F4       7       95.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      81       5       80.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     64A      58        0.0%
DATA                 0      0     64A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov  6 02:47:01 2019

                    _SPI1_Exchange8bit 7DB4               __end_of_set_display_info 7E0E  
                                    _C 0100                                      _D 0400  
                                    _R 0060                                      _T FE73  
                                    _V 0200       __end_of_TMR5_SetInterruptHandler 7BC8  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
               __end_of_FVR_Initialize 8046                            __CFG_LVP$ON 000000  
                                  l171 7F72                                    l701 7A30  
                                  l581 7A04                                    l835 7DC2  
                                  _GIE 01FE97                                    _abs 75C2  
                                  _pad 62AA                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 7F06                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 7D4E                     _UART1_Transmit_ISR 79DE  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 7D70  
                         __CFG_ZCD$OFF 000000                                   l1028 779A  
                                 l1242 37A6                                   l1251 3952  
                                 l2222 6914                                   l1328 73E6  
                                 l1601 7E0A                                   l2233 5DE8  
                                 l2226 5D14                                   l2500 2D5E  
                                 l2260 5C86                                   l1544 77F8  
                                 l1464 6A7E                                   l2512 2BEE  
                                 l1561 64C8                                   l1553 527C  
                                 l1650 57BA                                   l1483 7864  
                                 l1468 6E2E                                   l1557 53D8  
                                 l2621 55D6                                   l1814 066A  
                                 l1729 6306                                   l2545 32D8  
                                 l6001 294A                                   l6011 2986  
                                 l2652 7602                                   l2644 5B14  
                                 l1749 33C0                                   l2581 25A2  
                                 l6005 296A                                   l2805 704C  
                                 l1829 0B1A                   _ADCC_StartConversion 7F8C  
                                 l6007 297C                                   l6015 29B6  
                                 l1679 4F80                                   l2744 6188  
                                 l6121 2D0E                                   l6105 2CBA  
                                 l6033 2A52                                   l1785 123A  
                                 l2818 6FC8                                   l1938 1D78  
                                 l2683 4D22                                   l6115 2CE6  
                                 l6035 2A64                                   l6043 2AA0  
                                 l6203 703C                                   l1867 4664  
                                 l2790 597E                                   l6127 2D3E  
                                 l6119 2CFE                                   l6055 2B78  
                                 l6039 2A6E                                   l6231 415E  
                                 l1888 3BAC                                   l6161 75F2  
                                 l6073 2C10                                   l6065 2BD2  
                                 l6057 2B9E                                   l6241 4264  
                                 l6233 41AE                                   l6217 4040  
                                 l6075 2C22                                   l6093 2C5C  
                                 l6237 41F6                                   l6335 511C  
                                 l6327 5070                                   l6319 4FE8  
                                 l6407 2FB4                                   l6511 1DD8  
                                 l6079 2C2E                                   l6175 5AB2  
                                 l6281 48EE                                   l6441 3112  
                                 l6433 30E0                                   l6425 307A  
                                 l6417 3044                                   l6361 2DFE  
                                 l6521 1E4E                                   l6089 2C56  
                                 l6185 5B0C                                   l6275 489A  
                                 l6451 3154                                   l6427 308C  
                                 l6435 30E4                                   l6355 2DBE  
                                 l6179 5AB6                                   l6259 6FB8  
                                 l6461 319E                                   l6381 2EDC  
                                 l6365 2E14                                   l6605 23B2  
                                 l6517 1E18                                   l9101 05F6  
                                 l8151 769A                                   l8231 780E  
                                 l6287 4934                                   l6447 312E  
                                 l6375 2E9C                                   l6367 2E44  
                                 l6623 2428                                   l6535 1EE6  
                                 l6519 1E1E                                   l9103 0602  
                                 l9007 00F0                                   l9015 0146  
                                 l7415 5848                                   l8303 5554  
                                 l6481 3254                                   l6465 31A4  
                                 l6393 2F60                                   l6385 2EF2  
                                 l6633 249C                                   l6609 23D8  
                                 l6537 1EEC                                   l6529 1EA6  
                                 l9025 01EA                                   l9033 0258  
                                 l7417 58B4                                   l8313 55B6  
                                 l8155 76C4                                   l7363 4AD2  
                                 l6299 4A06                                   l6707 5F26  
                                 l6723 61C4                                   l6475 3218  
                                 l6387 2F22                                   l6651 2550  
                                 l6643 250C                                   l6619 2422  
                                 l6547 1F3E                                   l6539 1F1C  
                                 l5931 2688                                   l9123 06F0  
                                 l9043 02FC                                   l9051 032A  
                                 l9027 0216                                   l7381 4BAC  
                                 l7373 4B68                                   l7365 4AF4  
                                 l6493 32AC                                   l6653 256A  
                                 l6637 24E2                                   l5925 2642  
                                 l6821 5BF2                                   l6805 5B70  
                                 l9205 0D90                                   l9213 0EA2  
                                 l9029 022C                                   l7383 4BD0  
                                 l6727 61DC                                   l6719 61B2  
                                 l6495 32BC                                   l6487 3284  
                                 l6399 2F9A                                   l5943 26F2  
                                 l5919 2602                                   l6831 5C34  
                                 l6823 5C0E                                   l9119 06B8  
                                 l9063 0406                                   l8271 5426  
                                 l8511 55F2                                   l8361 7A00  
                                 l8409 7782                                   l7385 4C0E  
                                 l6673 5E16                                   l6745 6290  
                                 l6737 625C                                   l6761 6912  
                                 l6753 689C                                   l5961 279A  
                                 l5953 2748                                   l5937 26C0  
                                 l5929 2658                                   l9241 0FF0  
                                 l9225 0F3A                                   l9161 0B12  
                                 l9153 0A48                                   l9129 077A  
                                 l9081 0554                                   l9065 0470  
                                 l9321 4706                                   l9313 469A  
                                 l8281 54A0                                   l8505 55E2  
                                 l7379 4B94                                   l5891 6BFA  
                                 l5955 2778                                   l9251 1092  
                                 l9163 0B34                                   l9139 0926  
                                 l9059 0396                                   l9331 47BC  
                                 l8291 5502                                   l8283 54B6  
                                 l8523 5782                                   l8531 5794  
                                 l8621 6D42                                   l7389 4C76  
                                 l5893 6C1C                                   l6685 5E4C  
                                 l6757 68DE                                   l5949 2732  
                                 l6829 5C1E                                   l9261 10E2  
                                 l9093 0594                                   l9085 057C  
                                 l9069 04D2                                   l9317 46D6  
                                 l8293 5520                                   l8285 54D4  
                                 l8517 56E6                                   l8383 7A2C  
                                 l7399 4D12                                   l6679 5E2C  
                                 l6775 5D62                                   l6599 2396  
                                 l5991 28D8                                   l9239 0FD6  
                                 l9087 058E                                   l9335 47F8  
                                 l9327 4790                                   l9503 18E8  
                                 l9431 1326                                   l8295 5536  
                                 l8279 5492                                   l6849 7524  
                                 l6769 5CD2                                   l9177 0C32  
                                 l9409 3ED8                                   l9361 3C12  
                                 l9433 1360                                   l9601 444E  
                                 l6699 5EF2                                   l6787 5DE6  
                                 l6779 5DB0                                   l6795 7552  
                                 l9355 3BD6                                   l9507 191C  
                                 l9435 1376                                   l8555 4D88  
                                 l8547 4D5C                                   l8629 6D54  
                                 l7685 7D22                                   l9277 119A  
                                 l9189 0CBA                                   l9197 0D24  
                                 l9349 3B9C                                   l9453 14A8  
                                 l9621 6AB0                                   l7765 786E  
                                 l8911 6F10                                   l8903 6708  
                                 l9551 1CA6                                   l9527 1A7C  
                                 l9455 14E2                                   l9623 6AF0  
                                 l8559 4DA2                                   l9297 45E6  
                                 l9385 3D68                                   l9369 3C72  
                                 l9393 3DEE                                   l9561 1D04  
                                 l9537 1B2A                                   l9473 165C  
                                 l9457 14F8                                   l9609 44FC  
                                 l9483 16F2                                   l9707 63E0  
                                 l8861 609E                                   l8909 6EE4  
                                 l9557 1D00                                   l8943 33FA  
                                 l8935 33B0                                   l9495 1830  
                                 l9567 1D24                                   l9823 524C  
                                 l9911 37C0                                   l9903 3788  
                                 l8873 6C86                                   l9673 6B86  
                                 l9905 3790                                   l8883 62D6  
                                 l8947 3418                                   l9595 43E4  
                                 l9835 5374                                   l8877 6CC4  
                                 l8893 634C                                   l8981 3718  
                                 l8957 362A                                   l9589 4326  
                                 l9909 37AE                                   l8887 62FE  
                                 l9951 3956                                   STR_1 FF76  
                                 STR_2 FFA7                                   l8897 6396  
                                 l8889 6310                                   l8977 36DC  
                                 l9953 397E                                   STR_3 FFF2  
                                 STR_4 FF65                                   l8995 00AC  
                                 STR_5 FF87                                   STR_6 FFA7  
                                 l9973 3A62                                   l9981 3B22  
                                 l9965 3A3E                                   STR_7 FFF2  
                                 STR_8 FF54                                   STR_9 FFB6  
                                 l9993 3B56                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u5000 7714  
                                 u5010 6F76                                   _T2PR 003FAB  
                                 u5020 6F78                                   u5101 48F4  
                                 u4230 6C4A                                   u5110 492E  
                                 u5040 79A4                                   u5120 4960  
                                 u6000 5B9E                                   u5050 79A6  
                                 u5210 5038                                   u5140 4A3E  
                                 u5220 506A                                   u4420 29AE  
                                 u4260 7974                                   u4237 6C3C  
                                 u6005 5B94                                   u5070 4894  
                                 u5230 509C                                   u4430 29CE  
                                 u4270 7976                                   u5160 4A90  
                                 u4425 299E                                   u5090 48EA  
                                 u5250 5154                                   u5410 310C  
                                 u4530 2BC0                                   u4370 28FE  
                                 u6050 5C3C                                   _T6PR 003F93  
                                 u5500 322C                                   u4380 291E  
                                 u4700 7944                                   _PMD0 0039C0  
                                 u4381 2918                                   _PMD1 0039C1  
                                 u7110 4CBC                                   u5270 51A6  
                                 u5190 4FE2                                   u5510 3268  
                                 u4630 2CAA                                   u6070 5C66  
                                 u4710 7946                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   u6080 7500  
                                 u7120 4CBE                                   u5600 1F2C  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u6090 7520                                   u5450 3196  
                                 u4570 2C34                                   u4490 2A96  
                                 _PMD6 0039C6                                   u4635 2C9A  
                                 _PMD7 0039C7                                   u4660 2CCA  
                                 u4820 5B04                                   u4900 4024  
                                 u5710 2476                                   u4590 2C4E  
                                 u4398 2920                                   u4830 5B06  
                                 u5615 20C0                                   u4495 2A86  
                                 u4815 5AE6                                   u4760 75D6  
                                 u5800 5F12                                   u5720 24B0  
                                 u5625 2188                                   u7090 4B64  
                                 u5490 31F2                                   u5730 24F6  
                                 u4770 5A36                                   u5715 2466  
                                 u5635 2350                                   u8300 6092  
                                 u4940 4104                                   u4860 6FFA  
                                 u4925 405E                                   u5910 690E  
                                 u5670 241A                                   u4926 4064  
                                 u4870 6FFC                                   u7190 5940  
                                 u5495 31E2                                   u4775 5A2C  
                                 u4927 4072                                   u8320 610E  
                                 u4960 41DC                                   u4945 40FA  
                                 u5850 6208                                   u4890 3FD8  
                                 u9050 10B8                                   u9210 3B82  
                                 u8500 363E                                   u8420 3312  
                                 u5780 5E78                                   u4965 41D2  
                                 u8430 3314                                   u5870 627C  
                                 u9070 116E                                   u9150 46FC  
                                 u4990 7712                                   u9310 3DEA  
                                 u7615 71D2                                   u8511 366E  
                                 u4895 3FCE                                   u7616 71D4  
                                 u7608 71A0                                   u8520 3684  
                                 u9080 1170                                   u8600 00DA  
                                 u9160 4742                                   u9320 3E0A  
                                 u9240 3C6A                                   u8521 3682  
                                 u8530 3698                                   u8450 3384  
                                 u5970 754E                                   u9250 3CBE  
                                 u9410 13BE                                   u9331 3E3A  
                                 u9315 3DCC                                   u8540 369C  
                                 u5980 5B50                                   u8380 6782  
                                 u9340 3E50                                   u9260 3CC0  
                                 u9420 13C0                                   u9341 3E4E  
                                 u7590 719E                                   u8470 3396  
                                 u5990 5B64                                   u8630 0194  
                                 u9190 481E                                   u9350 3E64  
                                 u9430 13E6                                   u7575 774E  
                                 u9167 4734                                   u8560 36B2  
                                 u8720 050E                                   u8640 0196  
                                 u9360 3E68                                   u9280 3D1E  
                                 u5985 5B46                                   u8490 33E6  
                                 u9290 3D20                                   u9610 1B7E  
                                 u9530 1746                                   u8387 6774  
                                 u8820 0648                                   u9460 1540  
                                 u9700 6B66                                   u7780 554A  
                                 u7940 4D3A                                   u8750 0562  
                                 u8670 02A6                                   u9470 1542  
                                 u8680 02A8                                   u9560 19D6  
                                 u9480 1568                                   u9800 53C6  
                                 u9570 19D8                                   _PLLR 01CEE0  
                                 u8780 05C6                                   u9670 4570  
                                 u8890 0A18                                   u8990 0EE4  
                                 u9790 53C4                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                       __end_of_ADCC_ISR 784C  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01A4  
                                 _atoi 4AB8                                   _ctoa 6EC6  
                                 _main 3762                                   _dtoa 32E2  
                                 _seed 00BD                                   _prec 0020  
                                 _nout 001C                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 457A                                   btemp 0035  
                                 _xtoa 3B68                 __end_of_check_adc_scan 803E  
                        ___fpclassifyf 5988                                   prodh 003FF4  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0026              __end_of_SPI1_Exchange8bit 7DD2  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 7C90  
                         ___param_bank 000000                     ?_UART1_rx_vect_isr 0055  
                     __end_of_INT0_ISR 7FDA                       __end_of_INT1_ISR 7FEA  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 6A86  
        __end_of_OSCILLATOR_Initialize 7F78                                  PRLOCK 0039EF  
                      __end_of___aodiv 4AB8                                  _ADCAP 003EF5  
                                _ADACT 003EFE                        __end_of___fladd 2D68  
                                _ADCLK 003EFF                        __end_of___aomod 51CA  
                                _ADPCH 003EF1                        __end_of___fldiv 32E2  
                                _ADREF 003EFD                        __end_of___awdiv 5F40  
                      __end_of___flneg 757C                                  STR_10 FFB6  
                                STR_11 FFFC                                  STR_12 FFF9  
                                STR_20 FF98                                  STR_21 FF98  
                                STR_22 FF98                                  STR_14 FFC3  
                                STR_15 FFD9                                  STR_23 FF03  
                                STR_40 FFF6                                  STR_32 FFE2  
                                STR_16 FF2E                                  STR_17 FF2E  
                                STR_33 FFEA                                  STR_25 FF41  
                        __CFG_WDTE$OFF 000000                                  STR_42 FFF6  
                                STR_18 FFCF                                  STR_26 FF1B  
                                STR_19 FFCF                                  STR_36 FFE6  
                      __end_of___awmod 62AA                                  STR_37 FFEE  
                                _ADRPT 003EEC                        __end_of___flmul 25AC  
                      __end_of___flsub 75C2                        __end_of___fltol 5C90  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _T2CON 003FAC                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T2HLT 003FAD  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
           _ADCC_ADTI_InterruptHandler 0004                                  _T2TMR 003FAA  
                                _U1UIR 003DF8                                  _T2RST 003FAF  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 00DC  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 8058                __size_of_clear_adc_scan 0006  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 7C68  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 73DC  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 7EEE  
                         _DMA1CON1bits 003BFD                                  _flags 0022  
                                _fputc 606E             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 771E                                  _fputs 6C76  
                      __end_of_isdigit 79B0                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 0055                                  _srand 78B8  
                                _width 001E                                  _putch 7EA0  
                      __end_of_islower 7950                        __end_of_isspace 7534  
             _INT1_SetInterruptHandler 7BC8                        __end_of_isupper 7980  
                                pclath 003FFA                                  tablat 003FF5  
                                ltemp0 0035                                  ltemp1 0039  
                                ltemp2 003D               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 0035                                  ttemp1 0038  
                                ttemp2 003B                                  ttemp3 003E  
                                ttemp5 0036                                  ttemp6 0039  
                                ttemp7 003D                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 7B78            _UART1_SetRxInterruptHandler 7B50  
                                wtemp0 0035                                  wtemp1 0037  
                                wtemp2 0039                                  wtemp3 003B  
                                wtemp4 003D                                  wtemp5 003F  
                                wtemp8 0036                        __end_of_sprintf 65D6  
                      __end_of_tolower 7056                        __end_of_strncmp 5988  
                      __end_of_toupper 6FD2                    ??_UART1_tx_vect_isr 00DC  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 7CB6  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 764E  
                __end_of_ringBufS_init 7AD8                        __initialization 6794  
                    _UART2_rx_vect_isr 7CE0                           __end_of_atoi 4D2C  
                         __end_of_ctoa 6F4E                           __end_of_main 3B68  
                         __end_of_dtoa 3762                           __end_of_stoa 4838  
                         __end_of_xtoa 3F22                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 0055                __end_of_TMR2_Initialize 7F1E  
             __size_of_DMA2_Initialize 005A               _TMR5_SetInterruptHandler 7BA0  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 00DC  
            __end_of_UART1_tx_vect_isr 7C8E                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 7A36                        _PWM8_Initialize 7F4C  
                     _UART1_Initialize 725A                      _UART2_tx_vect_isr 7CB8  
                   _UART2_Transmit_ISR 7A0A                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                       _start_adc_scan 71F6                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                   _PWM8_LoadDutyValue 771E                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 0055  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RC3PPS 003A13  
                               _RD1PPS 003A19                                 _RB6PPS 003A0E  
                               i1l1045 73CE                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                         __CFG_WDTCCS$SC 000000  
                               _FVRCON 003EC1                       _mode_lamp_bright 7FBC  
                               _SCANPR 0039F7                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
                               u366_48 7D5C                                 u392_40 7E16  
         __size_of_eaDogM_WriteCommand 000E                                 u392_46 7E18  
                               u368_48 7D7E                                 _OSCFRQ 0039DF  
                               u806_44 6D74                                 u806_45 6D6E  
                               u808_40 6D90                                 u808_46 6D92  
                               u765_20 7EC2                                 u765_26 7EC4  
                               u792_28 7D3A                                 u789_48 7DA0  
                     __end_of___xxtofl 55E0               __end_of_send_lcd_cmd_dma 74E2  
                  ??_UART2_tx_vect_isr 00DC              __end_of_UART2_rx_vect_isr 7D06  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 7FFA  
                     _UART2_Initialize 7320                                 _WaitMs 784C  
                      _conv_raw_result 55E0                           _CCPTMRS1bits 003F5F  
 __size_of_ADCC_SetADIInterruptHandler 0028                                 ___flge 5C90  
                               ___fleq 685A                      _ADCC_ThresholdISR 7128  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 6DA4  
                               _efgtoa 0000                                 _floorf 3F22  
                   ?_ADCC_ThresholdISR 0055                                 _memset 428E  
                 __size_of_help_button 0038                                 clear_0 67E0  
                               clear_1 67F4                                 clear_2 6806  
                               clear_3 6812                                 clear_4 681E  
                               clear_5 682A                                 clear_6 6836  
                               clear_7 6842                                 _printf 72BE  
                   _eaDogM_WriteString 6B2E                                 _strcpy 66C0  
                            ?_ADCC_ISR 0055                                 _strlen 6BD4  
                   __size_of_TimerDone 0024                        _ADCC_Initialize 70C0  
                       _PMD_Initialize 7F78              __end_of_UART2_tx_vect_isr 7CDE  
                               lltemp0 0035                                 lltemp1 003D  
                               lltemp2 0045                                 lltemp3 004D  
                  ??_ADCC_ThresholdISR 0056                 __end_of_start_adc_scan 725A  
                         __mediumconst FE72                                 preinc2 003FDC  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 7436  
                     __end_of_vfprintf 6B2E                             _StartTimer 77A0  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 7694  
                    _SYSTEM_Initialize 7608                             __accesstop 0060  
              __end_of__initialization 6854                              ?_INT0_ISR 0055  
                            ?_INT1_ISR 0055                   __end_of_display_help 8036  
                 __end_of_display_info 802E              __end_of_CLKREF_Initialize 8004  
                        ___rparam_used 000000             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 7760                  _set_temp_display_help 7F9E  
            __end_of_ADCC_ThresholdISR 7190                 __end_of_ringBufS_flush 6E36  
                       __pcstackCOMRAM 0055                             ___inthi_sp 0F56  
                           ___intlo_sp 17AB                           __pidataBANK0 7F1E  
                         __pidataBANK2 691E                              ?_TMR5_ISR 0055  
                            ?_TMR6_ISR 0055                         ivt0x8_undefint 00AC  
                        __end_of_fputc 6192                          __end_of_fputs 6D0E  
                        __end_of_srand 78EC                  __end_of_TMR5_CallBack 7D4E  
                        __end_of_putch 7EBA                __end_of_PWM8_Initialize 7F62  
              __end_of_TMR6_Initialize 7A60                      _adc_int_t_handler 6D0E  
               __end_of_PMD_Initialize 7F8C                             ??_ADCC_ISR 0055  
                __end_of_TMR6_CallBack 7DB4                      lp_filter@lp_speed 00B2  
          __size_of_EXT_INT_Initialize 0034             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 8010                         _clear_adc_scan 8046  
               __size_of_mode_lamp_dim 0018               _UART2_RxInterruptHandler 0013  
            __end_of_SYSTEM_Initialize 764E                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                             __pbssBANK0 0060  
                           __pbssBANK1 0100                             __pbssBANK2 02BD  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                           __pbssBANK5 0500                             __pbssBANK6 0600  
                           _check_help 51CA                __end_of_conv_raw_result 57C0  
                _INT0_InterruptHandler 0019                             ??_INT0_ISR 0055  
                           ??_INT1_ISR 0055                      __end_of_TimerDone 7D2A  
                     _DMA1_DMADCNT_ISR 8004             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                     __size_of_lp_filter 025E  
                __end_of_wait_lcd_done 7E84                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 7BA0                __end_of_ADCC_Initialize 7128  
                           ??_TMR5_ISR 00DD              __end_of_adc_int_t_handler 6DA4  
                           ??_TMR6_ISR 00DC                                _ADFLTRH 003EE7  
                              _ADFLTRL 003EE6                                _DMA1DSA 003BF0  
                              _DMA2DSA 003BD0                                _DMA1DSZ 003BEE  
                              _DMA2DSZ 003BCE                                _DMA1SSA 003BF9  
                              _DMA2SSA 003BD9   __end_of_ADCC_SetADTIInterruptHandler 7C40  
__size_of_ADCC_SetADTIInterruptHandler 0028           _ADCC_SetADTIInterruptHandler 7C18  
                              _DMA1SSZ 003BF7                                _DMA2SSZ 003BD7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                    _UART1_Receive_ISR 7E2C                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                 __end_of_clear_adc_scan 804C  
                       ?_DMA1_DMAA_ISR 0055                       _DMA1_DMASCNT_ISR 7FEC  
                              _U1ERRIE 003DFA                     __size_of_set_vterm 001C  
                              _U1ERRIR 003DF9                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                         ?_Default_ISR 0055             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 0B3E  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
                              _PWM8DCH 003F61                                _PWM8DCL 003F60  
                              _PWM8CON 003F62                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 77A0      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000             __size_of_ADCC_ThresholdISR 0068  
                        _mode_lamp_dim 7EEE                                __Lparam 0000  
             __end_of_UART1_Initialize 72BE                        __size_of_WaitMs 0036  
                      __size_of___flge 0162                        __size_of___fleq 00C4  
                              ___aodiv 4838                                ___fladd 25AC  
                              ___aomod 4F8A                                ___fldiv 2D68  
                              ___awdiv 5DF2                                ___flneg 7534  
                              ___awmod 6192                                ___flmul 1D82  
                              ___flsub 757C                                ___fltol 5B1E  
            __end_of_UART1_Receive_ISR 7E4A                        __size_of_efgtoa 1244  
                      __size_of_floorf 036C                   __end_of_init_display 66C0  
                              __pcinit 6794               __end_of_mode_lamp_bright 7FCA  
                      __size_of_memset 02EC               __size_of_adc_int_handler 001E  
                  _eaDogM_WriteCommand 7FAE                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C                                __ptext0 3762  
                              __ptext1 71F6                                __ptext2 7F8C  
                              __ptext3 78B8                                __ptext4 4D2C  
                              __ptext5 65D6                                __ptext6 7A60  
                              __ptext7 7A88                                __ptext8 7DB4  
                              __ptext9 7AB0                      _UART2_Receive_ISR 7E4A  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strcpy 00D4                        __size_of_strlen 00A2  
                _OSCILLATOR_Initialize 7F62                                us517999 4AA2  
                         __size_of_abs 0046                                us528999 51B8  
                         __size_of_pad 0114                                us910999 458C  
                              _isalpha 76DA                                _isdigit 7980  
                              us841999 32FC                                us923999 3BE8  
                              _mode_sw 0028                      __end_of_lp_filter 4F8A  
                              _islower 7920                                _isspace 74E2  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 737E                                _isupper 7950  
           __size_of_SYSTEM_Initialize 0046                                _sprintf 64CC  
                              _tolower 6FD2                  __size_of_display_help 0008  
                __size_of_display_info 0008                                _strncmp 57C0  
                              _toupper 6F4E                   end_of_initialization 6854  
  __end_of_UART1_SetTxInterruptHandler 7B50            _UART1_SetTxInterruptHandler 7B28  
  __end_of_UART2_SetRxInterruptHandler 7B28            _UART2_SetRxInterruptHandler 7B00  
                    __end_of_set_vterm 7EA0                      __end_of_vfpfcnvrt 1D82  
                            _SPI1TCNTL 003D12                                postdec0 003FED  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE             __size_of_adc_int_t_handler 0096  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 8058  
            __end_of_UART2_Receive_ISR 7E68                         wdtdelay@dcount 00B6  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 00DD  
                _INT1_InterruptHandler 0016                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 7B78                           _display_help 802E  
                _TMR5_InterruptHandler 00BA                           _display_info 8026  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 0038  
  __end_of_ADCC_SetADIInterruptHandler 7C68            _ADCC_SetADIInterruptHandler 7C40  
                           _update_lcd 63BE                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 7056  
                      _SPI1_Initialize 7F36                  __end_of_get_vterm_ptr 79DE  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                       __end_of_WaitMs 7882           __end_of_INTERRUPT_Initialize 71F6  
                           _vterm_dump 5F40                         __end_of___flge 5DF2  
                       __end_of___fleq 691E   __end_of_INT0_DefaultInterruptHandler 8060  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 805E  
           __size_of_UART1_Receive_ISR 001E                        _DMA2_Initialize 7436  
                       __end_of_efgtoa 1244                      __size_of_TMR5_ISR 005C  
                    __size_of_TMR6_ISR 001A                    __size_of_check_help 0212  
                       __end_of_floorf 428E            __size_of_UART2_Transmit_ISR 002C  
                           floorf@F524 00A6                         __end_of_memset 457A  
                       __end_of_printf 7320               __end_of_DMA1_DMADCNT_ISR 800E  
          __size_of_PWM8_LoadDutyValue 0042                  __end_of_INT0_CallBack 7D70  
                       __end_of_strcpy 6794                         __end_of_strlen 6C76  
                  start_initialization 6794   __end_of_TMR5_DefaultInterruptHandler 7ED4  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 7EBA  
      __size_of_PIN_MANAGER_Initialize 0090                            __end_of_abs 7608  
                __end_of_INT1_CallBack 7D92              __size_of_set_display_info 001E  
                          __end_of_pad 63BE                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 7AB0          __size_of_ADCC_StartConversion 0012  
                           ivt0x8_base 0008                          _uart1RxBuffer 0500  
                __end_of___fpclassifyf 5B1E                          _uart2RxBuffer 0600  
                        _uart1TxBuffer 02BD               __end_of_DMA1_DMASCNT_ISR 7FFA  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 801C  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A6                              _TimerDone 7D06  
                        _ringBufS_init 7AB0                            __pdataBANK0 00C5  
                          __pdataBANK2 0200             __size_of_UART2_Receive_ISR 001E  
           __end_of_EXT_INT_Initialize 7920                    __end_of_help_button 7814  
      __end_of_eaDogM_WriteStringAtPos 78B8                __end_of_DMA1_Initialize 70C0  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 7C18  
                        __pcstackBANK0 00DC               __size_of_TMR2_Initialize 0018  
                    __size_of___xxtofl 0204                __end_of_SPI1_Initialize 7F4C  
             _UART1_RxInterruptHandler 000D               _UART2_TxInterruptHandler 0010  
                            __end_of_T FF03              __size_of_ringBufS_put_dma 00AA  
                         _init_display 65D6                 __end_of_DMA1_DMAOR_ISR 8026  
               __size_of_TMR5_CallBack 0024                  _TMR6_InterruptHandler 0001  
               __size_of_TMR6_CallBack 0022                __end_of_DMA2_Initialize 7490  
               _PIN_MANAGER_Initialize 6E36                   __end_of_wait_lcd_set 8052  
                        __pmediumconst FE72                              __ptext100 78EC  
                            __ptext101 7BC8                              __ptext110 7760  
                            __ptext102 7BF0                              __ptext111 7D2A  
                            __ptext103 7436                              __ptext120 7814  
                            __ptext112 7EBA                              __ptext104 7056  
                            __ptext121 6D0E                              __ptext113 7FCC  
                            __ptext105 7FFA                              __ptext130 7A0A  
                            __ptext122 8062                              __ptext114 7D4E  
                            __ptext106 70C0                              __ptext131 7CE0  
                            __ptext123 7E0E                              __ptext115 805E  
                            __ptext107 7C18                              __ptext140 0000  
                            __ptext132 7E4A                              __ptext124 7128  
                            __ptext116 7FDC                              __ptext108 7C40  
                            __ptext133 7ED4                              __ptext125 7C68  
                            __ptext117 7D70                              __ptext109 7380  
                            __ptext134 7D92                              __ptext126 79DE  
                            __ptext118 8060                              __ptext135 7694  
                            __ptext127 7C90                              __ptext119 8058  
                            __ptext136 7FEC                              __ptext128 7E2C  
                            __ptext137 8004                              __ptext129 7CB8  
                            __ptext138 8010                              __ptext139 801C  
                   __end_of_StartTimer 77DC                      __size_of_wdtdelay 005A  
                    __size_of_vfprintf 00A8                               _ADCC_ISR 7814  
               __CFG_BBSIZE$BBSIZE_512 000000                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA2CON0 003BDC                               _DMA2CON1 003BDD  
                             _DMA2AIRQ 003BDE                               _DMA1SIRQ 003BFF  
                             _DMA2SIRQ 003BDF                __size_of_get_raw_result 001E  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 0124  
                             _T2CLKCON 003FAE                         __size_of_fputs 0098  
                            _lp_filter 4D2C                         __size_of_srand 0034  
                       __size_of_putch 001A                   _INTERRUPT_Initialize 7190  
                             _T6CLKCON 003F96                        ?_DMA1_DMAOR_ISR 0055  
                             _INT0_ISR 7FCC                               _INT1_ISR 7FDC  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0082  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0383                              _ring_buf2 0340  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               _PIR4bits 0039A4  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             i2u810_48 715C                               i2u810_49 7170  
                             i2u398_48 7830                               i2u398_49 7844  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046                               i2u982_48 7C7A  
                             i2u984_48 7CA2                               i2u986_48 7CCA  
                             i2u988_48 7CF2                              _set_vterm 7E84  
                  __size_of_update_lcd 010E                            _help_button 77DC  
           __end_of_UART1_Transmit_ISR 7A0A                               _TMR5_ISR 7380  
                             _TMR6_ISR 7ED4                              _port_data 00CC  
                            _vfpfcnvrt 1244                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 7D2A                             _ADCON0bits 003EF8  
                   __end_of_check_help 53DC                              _start_lcd 8052  
              __size_of_FVR_Initialize 0008              __size_of_send_lcd_cmd_dma 0052  
                        _TMR6_CallBack 7D92                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                       _set_display_info 7DF0  
             __size_of_PWM8_Initialize 0016               __size_of_TMR6_Initialize 002A  
                          _INTCON0bits 003FD2                              copy_data0 67A8  
                            copy_data1 67CA               _INT0_SetInterruptHandler 7BF0  
                  __size_of_vterm_dump 012E                 _uart1TxBufferRemaining 0032  
  __end_of_UART2_SetTxInterruptHandler 7B00            _UART2_SetTxInterruptHandler 7AD8  
                             __Hparam0 0000                           _uart1RxCount 002F  
                         _uart2RxCount 0029                               __Lparam0 0000  
     __size_of_eaDogM_WriteStringAtPos 0036                __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_check_adc_scan 0008                     __CFG_BOREN$SBORDIS 000000  
             __size_of_conv_raw_result 01E0                          _wait_lcd_done 7E68  
                         _send_lcd_cmd 7A88                       __size_of___aodiv 0280  
                     __size_of___fladd 07BC                       __size_of___aomod 0240  
                      _adc_int_handler 7E0E                       __size_of___fldiv 057A  
                     __size_of___awdiv 014E                       __size_of___flneg 0048  
                     __size_of___awmod 0118                       __size_of___flmul 082A  
                     __size_of___flsub 0046                       __size_of___fltol 0172  
                __end_of_DMA1_DMAA_ISR 801A                     ___fpclassifyf@F463 00AA  
 __size_of_UART1_SetRxInterruptHandler 0028                        lp_filter@smooth 0168  
                             ___xxtofl 53DC                      ?_DMA1_DMADCNT_ISR 0055  
             __size_of_ADCC_Initialize 0068            __end_of_eaDogM_WriteCommand 7FBC  
                     __size_of_isalpha 0044                       __size_of_isdigit 0030  
                             __pivt0x8 0008                       __size_of_islower 0030  
                     __size_of_isspace 0052                     ??_DMA1_DMADCNT_ISR 00DD  
                             __ptext10 7FAE                               __ptext11 55E0  
                             __ptext20 63BE                               __ptext12 7DD2  
                             __ptext21 7882                               __ptext13 53DC  
                             __ptext30 72BE                               __ptext22 7490  
                             __ptext14 8046                               __ptext31 6A86  
                             __ptext23 7E68                               __ptext15 51CA  
                             __ptext40 6FD2                               __ptext32 1244  
                             __ptext24 73DC                               __ptext16 5F40  
                             __ptext41 7950                               __ptext33 3B68  
                             __ptext25 6B2E                               __ptext17 64CC  
                             __ptext50 5C90                               __ptext42 66C0  
                             __ptext34 6F4E                               __ptext26 804C  
                             __ptext18 79B0                               __ptext51 685A  
                             __ptext43 3F22                               __ptext35 7920  
                             __ptext27 8052                               __ptext19 784C  
                             __ptext60 62AA                               __ptext52 2D68  
                             __ptext44 5988                               __ptext36 76DA  
                             __ptext28 6DA4                               __ptext61 6BD4  
                             __ptext53 6192                               __ptext45 5B1E  
                             __ptext37 57C0                               __ptext29 428E  
                             __ptext70 7F9E                               __ptext62 6C76  
                             __ptext54 5DF2                               __ptext46 757C  
                             __ptext38 457A                               __ptext71 7DF0  
                             __ptext63 606E                               __ptext55 32E2  
                             __ptext47 25AC                               __ptext39 0000  
                             __ptext80 8036                               __ptext72 7EEE  
                             __ptext64 7EA0                               __ptext56 75C2  
                             __ptext48 7534                               __ptext81 7608  
                             __ptext73 7FBC                               __ptext65 69DC  
                             __ptext57 4F8A                               __ptext49 1D82  
                             __ptext90 764E                               __ptext82 7320  
                             __ptext74 771E                               __ptext66 4AB8  
                             __ptext58 4838                               __ptext91 7BA0  
                             __ptext83 7AD8                               __ptext75 77DC  
                             __ptext67 74E2                               __ptext59 6EC6  
                             __ptext92 7F06                               __ptext84 7B00  
                             __ptext76 7D06                               __ptext68 7980  
                             __ptext93 7F36                               __ptext85 725A  
                             __ptext77 77A0                               __ptext69 7E84  
                             __ptext94 7F4C                               __ptext86 7B28  
                             __ptext78 8026                               __ptext95 7F78  
                             __ptext87 7B50                               __ptext79 802E  
                             __ptext96 6E36                               __ptext88 7A36  
                             __ptext97 7F62                               __ptext89 7B78  
                             __ptext98 7190                               __ptext99 803E  
                     __size_of_isupper 0030                       __size_of_sprintf 010A  
                     __size_of_tolower 0084                       __size_of_strncmp 01C8  
                     __size_of_toupper 0084                       _ringBufS_put_dma 69DC  
                        __size_of_atoi 0274                          __size_of_ctoa 0088  
                        __size_of_main 0406                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                        __size_of_xtoa 03BA                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 0055                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 0007  
                            stoa@F1166 00C5                     ??_DMA1_DMASCNT_ISR 00DD  
         __end_of_ADCC_StartConversion 7F9E                               _spi_link 009A  
                             _wdtdelay 73DC             __end_of_UART2_Transmit_ISR 7A36  
                             _vfprintf 6A86             __end_of_PWM8_LoadDutyValue 7760  
 __end_of_INT1_DefaultInterruptHandler 8062  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 8060                          ??_Default_ISR 0055  
                          _uart1RxHead 0031                 __size_of_get_vterm_ptr 002E  
                          _uart1TxHead 0034                            _uart2RxHead 002B  
                          _uart1RxTail 0030                         _get_raw_result 7DD2  
                          _uart2TxHead 002E                            _uart1TxTail 0033  
                          _uart2RxTail 002A                            _uart2TxTail 002D  
                         _wait_lcd_set 804C                     _EXT_INT_Initialize 78EC  
 __end_of_TMR6_DefaultInterruptHandler 76DA  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 7694   __end_of_ADCC_DefaultInterruptHandler 8064  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 8062  
                             intlevel1 0000                               intlevel2 0000  
                    _send_lcd_cmd_long 7A60         __size_of_set_temp_display_help 0010  
        __end_of_set_temp_display_help 7FAE                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 6BD4                  __end_of_mode_lamp_dim 7F06  
              __end_of_adc_int_handler 7E2C                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
               __size_of_INT1_CallBack 0022                     __end_of_update_lcd 64CC  
               _uart2TxBufferRemaining 002C                         _FVR_Initialize 803E  
                        lp_filter@lp_x 00AE                 __end_of_get_raw_result 7DF0  
                     _send_lcd_cmd_dma 7490                 __size_of___fpclassifyf 0196  
                TMR5_ISR@CountCallBack 0024       __end_of_INT1_SetInterruptHandler 7BF0  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 00DD  
             _UART1_TxInterruptHandler 000A              __end_of_send_lcd_cmd_long 7A88  
              __size_of_start_adc_scan 0064                    __end_of_Default_ISR 805E  
       __end_of_PIN_MANAGER_Initialize 6EC6              __size_of_mode_lamp_bright 000E  
                   __end_of_vterm_dump 606E                _eaDogM_WriteStringAtPos 7882  
                        _get_vterm_ptr 79B0                         _check_adc_scan 8036  
            __size_of_UART2_Initialize 005E  
