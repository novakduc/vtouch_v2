

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar  8 18:28:55 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=4,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=4,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=4,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=4,class=CODE,delta=1
   111                           	psect	text91,global,reloc=4,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=4,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=4,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=4,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=4,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=4,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=4,class=CODE,delta=1
   125                           	psect	text105,global,reloc=4,class=CODE,delta=1
   126                           	psect	text106,global,reloc=4,class=CODE,delta=1
   127                           	psect	text107,global,reloc=4,class=CODE,delta=1
   128                           	psect	text108,global,reloc=4,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   133                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   136                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   137  0000                     
   138                           ; Version 2.05
   139                           ; Generated 20/12/2018 GMT
   140                           ; 
   141                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   142                           ; All rights reserved.
   143                           ; 
   144                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   145                           ; 
   146                           ; Redistribution and use in source and binary forms, with or without modification, are
   147                           ; permitted provided that the following conditions are met:
   148                           ; 
   149                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   150                           ;        conditions and the following disclaimer.
   151                           ; 
   152                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   153                           ;        of conditions and the following disclaimer in the documentation and/or other
   154                           ;        materials provided with the distribution.
   155                           ; 
   156                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   157                           ;        software without specific prior written permission.
   158                           ; 
   159                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   160                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   161                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   162                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   163                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   164                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   165                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   166                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   167                           ; 
   168                           ; 
   169                           ; Code-generator required, PIC18F57K42 Definitions
   170                           ; 
   171                           ; SFR Addresses
   172  0000                     
   173 ;;_sum	offset	0
   174 ;;_mode	offset	2
   175 ;;_block	offset	0
   176 ;;_rxData	offset	3
   177 ;;_t_link	offset=-1 (param)
   178 ;;_stream	offset=-1 (param)
   179 ;;_function	offset=-2 (param)
   180 ;;_f	offset	0
   181 ;;_ap	offset	5
   182 ;;_s	offset=-2 (param)
   183 ;;_fmt	offset=-3 (param)
   184 ;;_rxData	offset	0
   185 ;;_r_link	offset=-1 (param)
   186 ;;_k	offset	0
   187 ;;_checksum	offset	2
   188 ;;_i	offset	4
   189 ;;_byte_block	offset=-2 (param)
   190 ;;_length	offset=-3 (param)
   191 ;;_fake	offset=-4 (param)
   192 ;;_i	offset	0
   193 ;;_sum	offset	2
   194 ;;_byte_block	offset=-2 (param)
   195 ;;_byte_count	offset=-4 (param)
   196 ;;_bufData	offset=-1 (param)
   197 ;;_txData	offset=-1 (param)
   198 ;;_byte_block	offset=-1 (param)
   199 ;;_clear	offset=-2 (param)
   200 ;;_numMilliseconds	offset=-2 (param)
   201 ;;_timer	offset=-1 (param)
   202 ;;_timer	offset=-1 (param)
   203 ;;_count	offset=-3 (param)
   204 ;;_readValue	offset	0
   205 ;;_cmd	offset=-1 (param)
   206 ;;_cmd	offset=-1 (param)
   207 ;;_data	offset=-1 (param)
   208 ;;__this	offset=-2 (param)
   209 ;;_r	offset=-1 (param)
   210 ;;_c	offset=-2 (param)
   211 ;;_strPtr	offset=-3 (param)
   212 ;;_strPtr	offset=-1 (param)
   213 ;;_cmd	offset=-1 (param)
   214 ;;_strPtr	offset=-1 (param)
   215 ;;_delay	offset=-4 (param)
   216 ;;__this	offset=-2 (param)
   217 ;;_clearBuffer	offset=-3 (param)
   218 ;;_s	offset	0
   219 ;;_k	offset	2
   220 ;;_dest	offset=-2 (param)
   221 ;;_c	offset=-4 (param)
   222 ;;_n	offset=-6 (param)
   223 ;;_ap	offset	0
   224 ;;_fmt	offset=-2 (param)
   225 ;;_cfmt	offset	0
   226 ;;_fp	offset=-2 (param)
   227 ;;_fmt	offset=-3 (param)
   228 ;;_ap	offset=-5 (param)
   229 ;;_vfpfcnvrt$3757	offset	0
   230 ;;_llu	offset	2
   231 ;;_ll	offset	10
   232 ;;_done	offset	18
   233 ;;_cp	offset	20
   234 ;;_c	offset	22
   235 ;;_fp	offset=-2 (param)
   236 ;;_fmt	offset=-4 (param)
   237 ;;_ap	offset=-6 (param)
   238 ;;_xtoa$3743	offset	0
   239 ;;_xtoa$3742	offset	2
   240 ;;_n	offset	4
   241 ;;_c	offset	12
   242 ;;_i	offset	14
   243 ;;_w	offset	16
   244 ;;_p	offset	18
   245 ;;_fp	offset=-2 (param)
   246 ;;_d	offset=-10 (param)
   247 ;;_x	offset=-11 (param)
   248 ;;_toupper$4332	offset	0
   249 ;;_c	offset=-2 (param)
   250 ;;_c	offset=-2 (param)
   251 ;;_c	offset=-2 (param)
   252 ;;_c	offset=-2 (param)
   253 ;;_nuls	offset	0
   254 ;;_l	offset	7
   255 ;;_p	offset	9
   256 ;;_cp	offset	11
   257 ;;_w	offset	13
   258 ;;_i	offset	15
   259 ;;_fp	offset=-2 (param)
   260 ;;_s	offset=-4 (param)
   261 ;;_dtoa$3722	offset	0
   262 ;;_n	offset	2
   263 ;;_i	offset	10
   264 ;;_s	offset	12
   265 ;;_w	offset	14
   266 ;;_p	offset	16
   267 ;;_fp	offset=-2 (param)
   268 ;;_d	offset=-10 (param)
   269 ;;_a	offset=-2 (param)
   270 ;;_sign	offset	0
   271 ;;_counter	offset	1
   272 ;;_dividend	offset=-8 (param)
   273 ;;_divisor	offset=-16 (param)
   274 ;;_quotient	offset	0
   275 ;;_sign	offset	8
   276 ;;_counter	offset	9
   277 ;;_dividend	offset=-8 (param)
   278 ;;_divisor	offset=-16 (param)
   279 ;;_w	offset	0
   280 ;;_fp	offset=-2 (param)
   281 ;;_c	offset=-3 (param)
   282 ;;_w	offset	0
   283 ;;_i	offset	2
   284 ;;_fp	offset=-2 (param)
   285 ;;_buf	offset=-3 (param)
   286 ;;_p	offset=-5 (param)
   287 ;;_a	offset	0
   288 ;;_s	offset=-2 (param)
   289 ;;_i	offset	0
   290 ;;_c	offset	2
   291 ;;_s	offset=-1 (param)
   292 ;;_fp	offset=-3 (param)
   293 ;;_c	offset=-2 (param)
   294 ;;_fp	offset=-4 (param)
   295 ;;_c	offset=-1 (param)
   296 ;;__this	offset=-2 (param)
   297 ;;_c	offset=-3 (param)
   298 ;;_atoi$4219	offset	0
   299 ;;_atoi$4217	offset	2
   300 ;;_atoi$4218	offset	4
   301 ;;_n	offset	5
   302 ;;_neg	offset	7
   303 ;;_s	offset=-1 (param)
   304 ;;_isspace$4244	offset	0
   305 ;;_c	offset=-2 (param)
   306 ;;_c	offset=-2 (param)
   307 ;;_InterruptHandler	offset=-3 (param)
   308 ;;_InterruptHandler	offset=-3 (param)
   309 ;;_InterruptHandler	offset=-3 (param)
   310 ;;_InterruptHandler	offset=-3 (param)
   311 ;;_InterruptHandler	offset=-3 (param)
   312 ;;_InterruptHandler	offset=-3 (param)
   313 ;;_state	offset	0
   314 ;;_InterruptHandler	offset=-3 (param)
   315 ;;_InterruptHandler	offset=-3 (param)
   316 ;;_InterruptHandler	offset=-3 (param)
   317 ;;_InterruptHandler	offset=-3 (param)
   318 ;;_i	offset	0
   319 ;;_timerVal	offset=-2 (param)
   320                           
   321                           	psect	idataBANK0
   322  005E8A                     __pidataBANK0:
   323                           	opt callstack 0
   324                           
   325                           ;initializer for stoa@F1144
   326  005E8A  28                 	db	40
   327  005E8B  6E                 	db	110
   328  005E8C  75                 	db	117
   329  005E8D  6C                 	db	108
   330  005E8E  6C                 	db	108
   331  005E8F  29                 	db	41
   332  005E90  00                 	db	0
   333                           
   334                           	psect	idataBANK1
   335  004C50                     __pidataBANK1:
   336                           	opt callstack 0
   337                           
   338                           ;initializer for _H10
   339  004C50  0000               	dw	0
   340  004C52  9F75               	dw	40821
   341  004C54  000C               	dw	12
   342  004C56  01                 	db	1
   343  004C57  80                 	db	128
   344  004C58  01                 	db	1
   345  004C59  81                 	db	129
   346  004C5A  00                 	db	0
   347  004C5B  00                 	db	0
   348  004C5C  0A                 	db	10
   349  004C5D  0000               	dw	0
   350  004C5F  00                 	db	0
   351  004C60  00                 	db	0
   352  004C61  00                 	db	0
   353  004C62  00                 	db	0
   354  004C63  00                 	db	0
   355  004C64  00                 	db	0
   356  004C65  00                 	db	0
   357  004C66  00                 	db	0
   358  004C67  00                 	db	0
   359  004C68  00                 	db	0
   360  004C69  0A                 	db	10
   361  004C6A  0000               	dw	0
   362  004C6C  0001               	dw	1
   363  004C6E  0000               	dw	0
   364  004C70  01                 	db	1
   365  004C71  80                 	db	128
   366  004C72  00                 	db	0
   367  004C73  01                 	db	1
   368  004C74  00                 	db	0
   369  004C75  00                 	db	0
   370  004C76  0A                 	db	10
   371  004C77  0000               	dw	0
   372  004C79  0D89               	dw	3465
   373  004C7B  0000               	dw	0
   374  004C7D  01                 	db	1
   375  004C7E  80                 	db	128
   376  004C7F  01                 	db	1
   377  004C80  81                 	db	129
   378  004C81  00                 	db	0
   379  004C82  80                 	db	128
   380  004C83  0A                 	db	10
   381  004C84  0000               	dw	0
   382  004C86  0D89               	dw	3465
   383  004C88  0000               	dw	0
   384  004C8A  01                 	db	1
   385  004C8B  80                 	db	128
   386  004C8C  11                 	db	17
   387  004C8D  82                 	db	130
   388  004C8E  00                 	db	0
   389  004C8F  00                 	db	0
   390  004C90  0A                 	db	10
   391                           
   392                           ;initializer for _H24
   393  004C91  0000               	dw	0
   394  004C93  30                 	db	48
   395  004C94  31                 	db	49
   396  004C95  30                 	db	48
   397  004C96  39                 	db	57
   398  004C97  31                 	db	49
   399  004C98  31                 	db	49
   400  004C99  30                 	db	48
   401  004C9A  38                 	db	56
   402  004C9B  34                 	db	52
   403  004C9C  36                 	db	54
   404  004C9D  30                 	db	48
   405  004C9E  30                 	db	48
   406  004C9F  00                 	db	0
   407  004CA0  00                 	db	0
   408  004CA1  0001               	dw	1
   409  004CA3  0000               	dw	0
   410  004CA5  01                 	db	1
   411  004CA6  80                 	db	128
   412  004CA7  12                 	db	18
   413  004CA8  82                 	db	130
   414  004CA9  00                 	db	0
   415  004CAA  00                 	db	0
   416  004CAB  18                 	db	24
   417                           
   418                           ;initializer for _H18
   419  004CAC  0000               	dw	0
   420  004CAE  00                 	db	0
   421  004CAF  00                 	db	0
   422  004CB0  00                 	db	0
   423  004CB1  00                 	db	0
   424  004CB2  00                 	db	0
   425  004CB3  00                 	db	0
   426  004CB4  00                 	db	0
   427  004CB5  00                 	db	0
   428  004CB6  0001               	dw	1
   429  004CB8  0000               	dw	0
   430  004CBA  01                 	db	1
   431  004CBB  80                 	db	128
   432  004CBC  03                 	db	3
   433  004CBD  81                 	db	129
   434  004CBE  00                 	db	0
   435  004CBF  00                 	db	0
   436  004CC0  12                 	db	18
   437                           
   438                           ;initializer for _H14
   439  004CC1  0000               	dw	0
   440  004CC3  00                 	db	0
   441  004CC4  41                 	db	65
   442  004CC5  11                 	db	17
   443  004CC6  01                 	db	1
   444  004CC7  0001               	dw	1
   445  004CC9  0000               	dw	0
   446  004CCB  01                 	db	1
   447  004CCC  80                 	db	128
   448  004CCD  04                 	db	4
   449  004CCE  81                 	db	129
   450  004CCF  00                 	db	0
   451  004CD0  00                 	db	0
   452  004CD1  0E                 	db	14
   453                           
   454                           ;initializer for _H13
   455  004CD2  0000               	dw	0
   456  004CD4  00                 	db	0
   457  004CD5  01                 	db	1
   458  004CD6  21                 	db	33
   459  004CD7  0001               	dw	1
   460  004CD9  0000               	dw	0
   461  004CDB  01                 	db	1
   462  004CDC  80                 	db	128
   463  004CDD  0C                 	db	12
   464  004CDE  86                 	db	134
   465  004CDF  00                 	db	0
   466  004CE0  00                 	db	0
   467  004CE1  0D                 	db	13
   468                           
   469                           ;initializer for _H12
   470  004CE2  0000               	dw	0
   471  004CE4  00                 	db	0
   472  004CE5  01                 	db	1
   473  004CE6  0001               	dw	1
   474  004CE8  0000               	dw	0
   475  004CEA  01                 	db	1
   476  004CEB  80                 	db	128
   477  004CEC  02                 	db	2
   478  004CED  81                 	db	129
   479  004CEE  00                 	db	0
   480  004CEF  00                 	db	0
   481  004CF0  0C                 	db	12
   482                           
   483                           	psect	idataBANK3
   484  0050BC                     __pidataBANK3:
   485                           	opt callstack 0
   486                           
   487                           ;initializer for _H53
   488  0050BC  0000               	dw	0
   489  0050BE  00                 	db	0
   490  0050BF  00                 	db	0
   491  0050C0  00                 	db	0
   492  0050C1  00                 	db	0
   493  0050C2  00                 	db	0
   494  0050C3  00                 	db	0
   495  0050C4  00                 	db	0
   496  0050C5  00                 	db	0
   497  0050C6  00                 	db	0
   498  0050C7  00                 	db	0
   499  0050C8  00                 	db	0
   500  0050C9  00                 	db	0
   501  0050CA  00                 	db	0
   502  0050CB  00                 	db	0
   503  0050CC  00                 	db	0
   504  0050CD  00                 	db	0
   505  0050CE  00                 	db	0
   506  0050CF  00                 	db	0
   507  0050D0  00                 	db	0
   508  0050D1  00                 	db	0
   509  0050D2  00                 	db	0
   510  0050D3  00                 	db	0
   511  0050D4  00                 	db	0
   512  0050D5  00                 	db	0
   513  0050D6  00                 	db	0
   514  0050D7  00                 	db	0
   515  0050D8  00                 	db	0
   516  0050D9  00                 	db	0
   517  0050DA  00                 	db	0
   518  0050DB  00                 	db	0
   519  0050DC  00                 	db	0
   520  0050DD  00                 	db	0
   521  0050DE  00                 	db	0
   522  0050DF  00                 	db	0
   523  0050E0  00                 	db	0
   524  0050E1  00                 	db	0
   525  0050E2  00                 	db	0
   526  0050E3  00                 	db	0
   527  0050E4  00                 	db	0
   528  0050E5  00                 	db	0
   529  0050E6  00                 	db	0
   530  0050E7  00                 	db	0
   531  0050E8  00                 	db	0
   532  0050E9  0001               	dw	1
   533  0050EB  0000               	dw	0
   534  0050ED  01                 	db	1
   535  0050EE  80                 	db	128
   536  0050EF  0B                 	db	11
   537  0050F0  81                 	db	129
   538  0050F1  00                 	db	0
   539  0050F2  00                 	db	0
   540  0050F3  35                 	db	53
   541  0050F4  0000               	dw	0
   542  0050F6  00                 	db	0
   543  0050F7  16                 	db	22
   544  0050F8  20                 	db	32
   545  0050F9  4E                 	db	78
   546  0050FA  6F                 	db	111
   547  0050FB  77                 	db	119
   548  0050FC  20                 	db	32
   549  0050FD  57                 	db	87
   550  0050FE  65                 	db	101
   551  0050FF  20                 	db	32
   552  005100  41                 	db	65
   553  005101  72                 	db	114
   554  005102  65                 	db	101
   555  005103  20                 	db	32
   556  005104  54                 	db	84
   557  005105  61                 	db	97
   558  005106  6C                 	db	108
   559  005107  6B                 	db	107
   560  005108  69                 	db	105
   561  005109  6E                 	db	110
   562  00510A  67                 	db	103
   563  00510B  2E                 	db	46
   564  00510C  2E                 	db	46
   565  00510D  2E                 	db	46
   566  00510E  00                 	db	0
   567  00510F  00                 	db	0
   568  005110  00                 	db	0
   569  005111  00                 	db	0
   570  005112  00                 	db	0
   571  005113  00                 	db	0
   572  005114  00                 	db	0
   573  005115  00                 	db	0
   574  005116  00                 	db	0
   575  005117  00                 	db	0
   576  005118  00                 	db	0
   577  005119  00                 	db	0
   578  00511A  00                 	db	0
   579  00511B  00                 	db	0
   580  00511C  00                 	db	0
   581  00511D  00                 	db	0
   582  00511E  00                 	db	0
   583  00511F  00                 	db	0
   584  005120  00                 	db	0
   585  005121  0001               	dw	1
   586  005123  0000               	dw	0
   587  005125  01                 	db	1
   588  005126  80                 	db	128
   589  005127  03                 	db	3
   590  005128  8A                 	db	138
   591  005129  00                 	db	0
   592  00512A  00                 	db	0
   593  00512B  35                 	db	53
   594  0000                     _IVTADL	set	14493
   595  0000                     _IVTADH	set	14494
   596  0000                     _IVTADU	set	14495
   597  0000                     _PIE8bits	set	14744
   598  0000                     _PIR8bits	set	14760
   599  0000                     _SCANPR	set	14839
   600  0000                     _DMA2PR	set	14836
   601  0000                     _DMA1PR	set	14835
   602  0000                     _MAINPR	set	14834
   603  0000                     _ISRPR	set	14833
   604  0000                     _PIE2bits	set	14738
   605  0000                     _PIR2bits	set	14754
   606  0000                     _PIE9bits	set	14745
   607  0000                     _PIR9bits	set	14761
   608  0000                     _PIE6bits	set	14742
   609  0000                     _PIE3bits	set	14739
   610  0000                     _PMD7	set	14791
   611  0000                     _PMD6	set	14790
   612  0000                     _PMD5	set	14789
   613  0000                     _PMD4	set	14788
   614  0000                     _PMD3	set	14787
   615  0000                     _PMD2	set	14786
   616  0000                     _PMD1	set	14785
   617  0000                     _PMD0	set	14784
   618  0000                     _OSCTUNE	set	14814
   619  0000                     _OSCFRQ	set	14815
   620  0000                     _OSCEN	set	14813
   621  0000                     _OSCCON3	set	14811
   622  0000                     _OSCCON1	set	14809
   623  0000                     _IPR8bits	set	14728
   624  0000                     _IPR9bits	set	14729
   625  0000                     _IPR7bits	set	14727
   626  0000                     _IPR5bits	set	14725
   627  0000                     _IPR1bits	set	14721
   628  0000                     _IPR3bits	set	14723
   629  0000                     _IPR6bits	set	14726
   630  0000                     _IPR2bits	set	14722
   631  0000                     _PIE7bits	set	14743
   632  0000                     _PIE5bits	set	14741
   633  0000                     _PIE1bits	set	14737
   634  0000                     _PIR7bits	set	14759
   635  0000                     _PIR5bits	set	14757
   636  0000                     _PIR1bits	set	14753
   637  0000                     _PLLR	set	118496
   638  0000                     _SPI1SDIPPS	set	15071
   639  0000                     _RC6PPS	set	14870
   640  0000                     _RC5PPS	set	14869
   641  0000                     _RA6PPS	set	14854
   642  0000                     _RA5PPS	set	14853
   643  0000                     _RA4PPS	set	14852
   644  0000                     _SPI1SCKPPS	set	15070
   645  0000                     _U1RXPPS	set	15077
   646  0000                     _INT1PPS	set	15041
   647  0000                     _INT2PPS	set	15042
   648  0000                     _INT0PPS	set	15040
   649  0000                     _RC3PPS	set	14867
   650  0000                     _RB6PPS	set	14862
   651  0000                     _U2RXPPS	set	15080
   652  0000                     _SLRCONF	set	14995
   653  0000                     _SLRCONE	set	14979
   654  0000                     _SLRCOND	set	14963
   655  0000                     _SLRCONC	set	14947
   656  0000                     _SLRCONB	set	14931
   657  0000                     _SLRCONA	set	14915
   658  0000                     _ODCOND	set	14962
   659  0000                     _ODCONC	set	14946
   660  0000                     _ODCONB	set	14930
   661  0000                     _ODCONA	set	14914
   662  0000                     _ODCONF	set	14994
   663  0000                     _ODCONE	set	14978
   664  0000                     _WPUC	set	14945
   665  0000                     _WPUA	set	14913
   666  0000                     _WPUB	set	14929
   667  0000                     _WPUE	set	14977
   668  0000                     _WPUF	set	14993
   669  0000                     _WPUD	set	14961
   670  0000                     _ANSELA	set	14912
   671  0000                     _ANSELF	set	14992
   672  0000                     _ANSELE	set	14976
   673  0000                     _ANSELB	set	14928
   674  0000                     _ANSELC	set	14944
   675  0000                     _ANSELD	set	14960
   676  0000                     _DMA1SSA	set	15353
   677  0000                     _DMA1DSZ	set	15342
   678  0000                     _DMA1SSZ	set	15351
   679  0000                     _DMA1DSA	set	15344
   680  0000                     _DMA1CON0bits	set	15356
   681  0000                     _DMA1CON1bits	set	15357
   682  0000                     _DMA1CON0	set	15356
   683  0000                     _DMA1AIRQ	set	15358
   684  0000                     _DMA1SIRQ	set	15359
   685  0000                     _DMA1CON1	set	15357
   686  0000                     _CLC1CON	set	15476
   687  0000                     _CLC1GLS3	set	15485
   688  0000                     _CLC1GLS2	set	15484
   689  0000                     _CLC1GLS1	set	15483
   690  0000                     _CLC1GLS0	set	15482
   691  0000                     _CLC1SEL3	set	15481
   692  0000                     _CLC1SEL2	set	15480
   693  0000                     _CLC1SEL1	set	15479
   694  0000                     _CLC1SEL0	set	15478
   695  0000                     _CLC1POL	set	15477
   696  0000                     _CLKRCON	set	15589
   697  0000                     _CLKRCLK	set	15590
   698  0000                     _MD1CARL	set	15613
   699  0000                     _MD1CARH	set	15614
   700  0000                     _MD1SRC	set	15612
   701  0000                     _MD1CON1bits	set	15611
   702  0000                     _MD1CON0bits	set	15610
   703  0000                     _SPI1INTFbits	set	15642
   704  0000                     _SPI1RXB	set	15632
   705  0000                     _SPI1TXB	set	15633
   706  0000                     _SPI1TCNTL	set	15634
   707  0000                     _SPI1CON0	set	15636
   708  0000                     _SPI1CLK	set	15644
   709  0000                     _SPI1BAUD	set	15641
   710  0000                     _SPI1CON2	set	15638
   711  0000                     _SPI1CON1	set	15637
   712  0000                     _U2RXB	set	15824
   713  0000                     _U2TXB	set	15826
   714  0000                     _U2ERRIE	set	15842
   715  0000                     _U2ERRIR	set	15841
   716  0000                     _U2UIR	set	15840
   717  0000                     _U2FIFO	set	15839
   718  0000                     _U2BRGH	set	15838
   719  0000                     _U2BRGL	set	15837
   720  0000                     _U2CON2	set	15836
   721  0000                     _U2CON1	set	15835
   722  0000                     _U2CON0	set	15834
   723  0000                     _U2P3L	set	15832
   724  0000                     _U2P2L	set	15830
   725  0000                     _U2P1L	set	15828
   726  0000                     _U1RXB	set	15848
   727  0000                     _U1TXB	set	15850
   728  0000                     _U1ERRIE	set	15866
   729  0000                     _U1ERRIR	set	15865
   730  0000                     _U1UIR	set	15864
   731  0000                     _U1FIFO	set	15863
   732  0000                     _U1BRGH	set	15862
   733  0000                     _U1BRGL	set	15861
   734  0000                     _U1CON2	set	15860
   735  0000                     _U1CON1	set	15859
   736  0000                     _U1CON0	set	15858
   737  0000                     _U1P3H	set	15857
   738  0000                     _U1P3L	set	15856
   739  0000                     _U1P2H	set	15855
   740  0000                     _U1P2L	set	15854
   741  0000                     _U1P1H	set	15853
   742  0000                     _U1P1L	set	15852
   743  0000                     _ADCON0	set	16120
   744  0000                     _ADCLK	set	16127
   745  0000                     _ADACT	set	16126
   746  0000                     _ADREF	set	16125
   747  0000                     _ADSTAT	set	16124
   748  0000                     _ADCON3	set	16123
   749  0000                     _ADCON2	set	16122
   750  0000                     _ADCON1	set	16121
   751  0000                     _ADPREH	set	16119
   752  0000                     _ADPREL	set	16118
   753  0000                     _ADCAP	set	16117
   754  0000                     _ADACQH	set	16116
   755  0000                     _ADACQL	set	16115
   756  0000                     _ADPCH	set	16113
   757  0000                     _ADRPT	set	16108
   758  0000                     _ADACCU	set	16106
   759  0000                     _ADSTPTH	set	16101
   760  0000                     _ADSTPTL	set	16100
   761  0000                     _ADUTHH	set	16097
   762  0000                     _ADUTHL	set	16096
   763  0000                     _ADLTHH	set	16095
   764  0000                     _ADLTHL	set	16094
   765  0000                     _NCO1CONbits	set	16190
   766  0000                     _NCO1INCL	set	16187
   767  0000                     _NCO1INCH	set	16188
   768  0000                     _NCO1INCU	set	16189
   769  0000                     _NCO1ACCL	set	16184
   770  0000                     _NCO1ACCH	set	16185
   771  0000                     _NCO1ACCU	set	16186
   772  0000                     _NCO1CLK	set	16191
   773  0000                     _NCO1CON	set	16190
   774  0000                     _LATCbits	set	16316
   775  0000                     _T5CONbits	set	16282
   776  0000                     _T5CON	set	16282
   777  0000                     _TMR5L	set	16280
   778  0000                     _TMR5H	set	16281
   779  0000                     _T5CLK	set	16285
   780  0000                     _T5GATE	set	16284
   781  0000                     _T5GCON	set	16283
   782  0000                     _LATEbits	set	16318
   783  0000                     _T6CON	set	16276
   784  0000                     _T6TMR	set	16274
   785  0000                     _T6PR	set	16275
   786  0000                     _T6RST	set	16279
   787  0000                     _T6HLT	set	16277
   788  0000                     _T6CLKCON	set	16278
   789  0000                     _TRISD	set	16325
   790  0000                     _TRISC	set	16324
   791  0000                     _TRISB	set	16323
   792  0000                     _TRISA	set	16322
   793  0000                     _TRISF	set	16327
   794  0000                     _TRISE	set	16326
   795  0000                     _LATC	set	16316
   796  0000                     _LATB	set	16315
   797  0000                     _LATF	set	16319
   798  0000                     _LATA	set	16314
   799  0000                     _LATD	set	16317
   800  0000                     _LATE	set	16318
   801  0000                     _IVTLOCKbits	set	16340
   802  0000                     _IVTLOCK	set	16340
   803  0000                     _INTCON0bits	set	16338
   804  0000                     _GIE	set	130711
   805                           
   806                           	psect	smallconst
   807  002000                     __psmallconst:
   808                           	opt callstack 0
   809  002000  00                 	db	0
   810  002001                     STR_1:
   811  002001  4D                 	db	77	;'M'
   812  002002  20                 	db	32
   813  002003  25                 	db	37
   814  002004  64                 	db	100	;'d'
   815  002005  2C                 	db	44
   816  002006  20                 	db	32
   817  002007  48                 	db	72	;'H'
   818  002008  20                 	db	32
   819  002009  25                 	db	37
   820  00200A  30                 	db	48	;'0'
   821  00200B  32                 	db	50	;'2'
   822  00200C  78                 	db	120	;'x'
   823  00200D  25                 	db	37
   824  00200E  30                 	db	48	;'0'
   825  00200F  32                 	db	50	;'2'
   826  002010  78                 	db	120	;'x'
   827  002011  25                 	db	37
   828  002012  30                 	db	48	;'0'
   829  002013  32                 	db	50	;'2'
   830  002014  78                 	db	120	;'x'
   831  002015  25                 	db	37
   832  002016  30                 	db	48	;'0'
   833  002017  32                 	db	50	;'2'
   834  002018  78                 	db	120	;'x'
   835  002019  25                 	db	37
   836  00201A  30                 	db	48	;'0'
   837  00201B  32                 	db	50	;'2'
   838  00201C  78                 	db	120	;'x'
   839  00201D  25                 	db	37
   840  00201E  30                 	db	48	;'0'
   841  00201F  32                 	db	50	;'2'
   842  002020  78                 	db	120	;'x'
   843  002021  25                 	db	37
   844  002022  30                 	db	48	;'0'
   845  002023  32                 	db	50	;'2'
   846  002024  78                 	db	120	;'x'
   847  002025  25                 	db	37
   848  002026  30                 	db	48	;'0'
   849  002027  32                 	db	50	;'2'
   850  002028  78                 	db	120	;'x'
   851  002029  25                 	db	37
   852  00202A  30                 	db	48	;'0'
   853  00202B  32                 	db	50	;'2'
   854  00202C  78                 	db	120	;'x'
   855  00202D  25                 	db	37
   856  00202E  30                 	db	48	;'0'
   857  00202F  32                 	db	50	;'2'
   858  002030  78                 	db	120	;'x'
   859  002031  2C                 	db	44
   860  002032  20                 	db	32
   861  002033  43                 	db	67	;'C'
   862  002034  20                 	db	32
   863  002035  30                 	db	48	;'0'
   864  002036  78                 	db	120	;'x'
   865  002037  25                 	db	37
   866  002038  30                 	db	48	;'0'
   867  002039  34                 	db	52	;'4'
   868  00203A  78                 	db	120	;'x'
   869  00203B  20                 	db	32
   870  00203C  23                 	db	35
   871  00203D  00                 	db	0
   872  00203E                     STR_5:
   873  00203E  20                 	db	32
   874  00203F  45                 	db	69	;'E'
   875  002040  52                 	db	82	;'R'
   876  002041  52                 	db	82	;'R'
   877  002042  20                 	db	32
   878  002043  52                 	db	82	;'R'
   879  002044  25                 	db	37
   880  002045  64                 	db	100	;'d'
   881  002046  20                 	db	32
   882  002047  54                 	db	84	;'T'
   883  002048  25                 	db	37
   884  002049  64                 	db	100	;'d'
   885  00204A  20                 	db	32
   886  00204B  45                 	db	69	;'E'
   887  00204C  25                 	db	37
   888  00204D  64                 	db	100	;'d'
   889  00204E  20                 	db	32
   890  00204F  41                 	db	65	;'A'
   891  002050  25                 	db	37
   892  002051  64                 	db	100	;'d'
   893  002052  20                 	db	32
   894  002053  23                 	db	35
   895  002054  00                 	db	0
   896  002055                     STR_3:
   897  002055  20                 	db	32
   898  002056  53                 	db	83	;'S'
   899  002057  25                 	db	37
   900  002058  64                 	db	100	;'d'
   901  002059  46                 	db	70	;'F'
   902  00205A  25                 	db	37
   903  00205B  64                 	db	100	;'d'
   904  00205C  20                 	db	32
   905  00205D  23                 	db	35
   906  00205E  20                 	db	32
   907  00205F  20                 	db	32
   908  002060  20                 	db	32
   909  002061  20                 	db	32
   910  002062  00                 	db	0
   911  002063                     STR_4:
   912  002063  20                 	db	32
   913  002064  4F                 	db	79	;'O'
   914  002065  4B                 	db	75	;'K'
   915  002066  20                 	db	32
   916  002067  23                 	db	35
   917  002068  00                 	db	0
   918  002069                     STR_7:
   919  002069  25                 	db	37
   920  00206A  63                 	db	99	;'c'
   921  00206B  00                 	db	0
   922  00206C                     STR_6:
   923  00206C  25                 	db	37
   924  00206D  73                 	db	115	;'s'
   925  00206E  00                 	db	0
   926  0000                     
   927                           ; #config settings
   928  00206F  00                 	db	0	; dummy byte at the end
   929  0000                     
   930                           	psect	cinit
   931  004A46                     __pcinit:
   932                           	opt callstack 0
   933  004A46                     start_initialization:
   934                           	opt callstack 0
   935  004A46                     __initialization:
   936                           	opt callstack 0
   937                           
   938                           ; Initialize objects allocated to BANK3 (112 bytes)
   939                           ; load TBLPTR registers with __pidataBANK3
   940  004A46  0EBC               	movlw	low __pidataBANK3
   941  004A48  6EF6               	movwf	tblptrl,c
   942  004A4A  0E50               	movlw	high __pidataBANK3
   943  004A4C  6EF7               	movwf	tblptrh,c
   944  004A4E  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   945  004A50  6EF8               	movwf	tblptru,c
   946  004A52  EE00  F386         	lfsr	0,__pdataBANK3
   947  004A56  EE20 F070          	lfsr	2,112
   948  004A5A                     copy_data0:
   949  004A5A  0009               	tblrd		*+
   950  004A5C  006F FFD7 FFEE     	movff	tablat,postinc0
   951  004A62  50DD               	movf	postdec2,w,c
   952  004A64  50D9               	movf	fsr2l,w,c
   953  004A66  E1F9               	bnz	copy_data0
   954                           
   955                           ; Initialize objects allocated to BANK1 (161 bytes)
   956                           ; load TBLPTR registers with __pidataBANK1
   957  004A68  0E50               	movlw	low __pidataBANK1
   958  004A6A  6EF6               	movwf	tblptrl,c
   959  004A6C  0E4C               	movlw	high __pidataBANK1
   960  004A6E  6EF7               	movwf	tblptrh,c
   961  004A70  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   962  004A72  6EF8               	movwf	tblptru,c
   963  004A74  EE00  F100         	lfsr	0,__pdataBANK1
   964  004A78  EE20 F0A1          	lfsr	2,161
   965  004A7C                     copy_data1:
   966  004A7C  0009               	tblrd		*+
   967  004A7E  006F FFD7 FFEE     	movff	tablat,postinc0
   968  004A84  50DD               	movf	postdec2,w,c
   969  004A86  50D9               	movf	fsr2l,w,c
   970  004A88  E1F9               	bnz	copy_data1
   971                           
   972                           ; Initialize objects allocated to BANK0 (7 bytes)
   973                           ; load TBLPTR registers with __pidataBANK0
   974  004A8A  0E8A               	movlw	low __pidataBANK0
   975  004A8C  6EF6               	movwf	tblptrl,c
   976  004A8E  0E5E               	movlw	high __pidataBANK0
   977  004A90  6EF7               	movwf	tblptrh,c
   978  004A92  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   979  004A94  6EF8               	movwf	tblptru,c
   980  004A96  EE00  F0F9         	lfsr	0,__pdataBANK0
   981  004A9A  EE20 F007          	lfsr	2,7
   982  004A9E                     copy_data2:
   983  004A9E  0009               	tblrd		*+
   984  004AA0  006F FFD7 FFEE     	movff	tablat,postinc0
   985  004AA6  50DD               	movf	postdec2,w,c
   986  004AA8  50D9               	movf	fsr2l,w,c
   987  004AAA  E1F9               	bnz	copy_data2
   988                           
   989                           ; Clear objects allocated to BANK3 (134 bytes)
   990  004AAC  EE00  F300         	lfsr	0,__pbssBANK3
   991  004AB0  0E86               	movlw	134
   992  004AB2                     clear_0:
   993  004AB2  6AEE               	clrf	postinc0,c
   994  004AB4  06E8               	decf	wreg,f,c
   995  004AB6  E1FD               	bnz	clear_0
   996                           
   997                           ; Clear objects allocated to BANK2 (192 bytes)
   998  004AB8  EE00  F200         	lfsr	0,__pbssBANK2
   999  004ABC  0EC0               	movlw	192
  1000  004ABE                     clear_1:
  1001  004ABE  6AEE               	clrf	postinc0,c
  1002  004AC0  06E8               	decf	wreg,f,c
  1003  004AC2  E1FD               	bnz	clear_1
  1004                           
  1005                           ; Clear objects allocated to BANK1 (64 bytes)
  1006  004AC4  EE00  F1A1         	lfsr	0,__pbssBANK1
  1007  004AC8  0E40               	movlw	64
  1008  004ACA                     clear_2:
  1009  004ACA  6AEE               	clrf	postinc0,c
  1010  004ACC  06E8               	decf	wreg,f,c
  1011  004ACE  E1FD               	bnz	clear_2
  1012                           
  1013                           ; Clear objects allocated to BANK0 (153 bytes)
  1014  004AD0  EE00  F060         	lfsr	0,__pbssBANK0
  1015  004AD4  0E99               	movlw	153
  1016  004AD6                     clear_3:
  1017  004AD6  6AEE               	clrf	postinc0,c
  1018  004AD8  06E8               	decf	wreg,f,c
  1019  004ADA  E1FD               	bnz	clear_3
  1020                           
  1021                           ; Clear objects allocated to COMRAM (60 bytes)
  1022  004ADC  EE00  F001         	lfsr	0,__pbssCOMRAM
  1023  004AE0  0E3C               	movlw	60
  1024  004AE2                     clear_4:
  1025  004AE2  6AEE               	clrf	postinc0,c
  1026  004AE4  06E8               	decf	wreg,f,c
  1027  004AE6  E1FD               	bnz	clear_4
  1028                           
  1029                           ;
  1030                           ; Setup IVTBASE
  1031                           ;
  1032  004AE8  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1033  004AEA  6ED5               	movwf	213,c
  1034  004AEC  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1035  004AEE  6ED6               	movwf	214,c
  1036  004AF0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1037  004AF2  6ED7               	movwf	215,c
  1038  004AF4                     end_of_initialization:
  1039                           	opt callstack 0
  1040  004AF4                     __end_of__initialization:
  1041                           	opt callstack 0
  1042  004AF4  0100               	movlb	0
  1043  004AF6  EF06  F019         	goto	_main	;jump to C main() function
  1044                           
  1045                           	psect	bssCOMRAM
  1046  000001                     __pbssCOMRAM:
  1047                           	opt callstack 0
  1048  000001                     secs_II_message@block:
  1049                           	opt callstack 0
  1050  000001                     	ds	3
  1051  000004                     _TMR5_InterruptHandler:
  1052                           	opt callstack 0
  1053  000004                     	ds	3
  1054  000007                     _TMR6_InterruptHandler:
  1055                           	opt callstack 0
  1056  000007                     	ds	3
  1057  00000A                     _ADCC_ADI_InterruptHandler:
  1058                           	opt callstack 0
  1059  00000A                     	ds	3
  1060  00000D                     _UART1_TxInterruptHandler:
  1061                           	opt callstack 0
  1062  00000D                     	ds	3
  1063  000010                     _UART1_RxInterruptHandler:
  1064                           	opt callstack 0
  1065  000010                     	ds	3
  1066  000013                     _UART2_TxInterruptHandler:
  1067                           	opt callstack 0
  1068  000013                     	ds	3
  1069  000016                     _UART2_RxInterruptHandler:
  1070                           	opt callstack 0
  1071  000016                     	ds	3
  1072  000019                     _INT2_InterruptHandler:
  1073                           	opt callstack 0
  1074  000019                     	ds	3
  1075  00001C                     _INT1_InterruptHandler:
  1076                           	opt callstack 0
  1077  00001C                     	ds	3
  1078  00001F                     _INT0_InterruptHandler:
  1079                           	opt callstack 0
  1080  00001F                     	ds	3
  1081  000022                     _nout:
  1082                           	opt callstack 0
  1083  000022                     	ds	2
  1084  000024                     _width:
  1085                           	opt callstack 0
  1086  000024                     	ds	2
  1087  000026                     _prec:
  1088                           	opt callstack 0
  1089  000026                     	ds	2
  1090  000028                     _flags:
  1091                           	opt callstack 0
  1092  000028                     	ds	2
  1093  00002A                     run_checksum@sum:
  1094                           	opt callstack 0
  1095  00002A                     	ds	2
  1096  00002C                     TMR5_ISR@CountCallBack:
  1097                           	opt callstack 0
  1098  00002C                     	ds	2
  1099  00002E                     _timer5ReloadVal:
  1100                           	opt callstack 0
  1101  00002E                     	ds	2
  1102  000030                     r_protocol@rxData_l:
  1103                           	opt callstack 0
  1104  000030                     	ds	1
  1105  000031                     _uart2RxCount:
  1106                           	opt callstack 0
  1107  000031                     	ds	1
  1108  000032                     _uart2RxTail:
  1109                           	opt callstack 0
  1110  000032                     	ds	1
  1111  000033                     _uart2RxHead:
  1112                           	opt callstack 0
  1113  000033                     	ds	1
  1114  000034                     _uart2TxBufferRemaining:
  1115                           	opt callstack 0
  1116  000034                     	ds	1
  1117  000035                     _uart2TxTail:
  1118                           	opt callstack 0
  1119  000035                     	ds	1
  1120  000036                     _uart2TxHead:
  1121                           	opt callstack 0
  1122  000036                     	ds	1
  1123  000037                     _uart1RxCount:
  1124                           	opt callstack 0
  1125  000037                     	ds	1
  1126  000038                     _uart1RxTail:
  1127                           	opt callstack 0
  1128  000038                     	ds	1
  1129  000039                     _uart1RxHead:
  1130                           	opt callstack 0
  1131  000039                     	ds	1
  1132  00003A                     _uart1TxBufferRemaining:
  1133                           	opt callstack 0
  1134  00003A                     	ds	1
  1135  00003B                     _uart1TxTail:
  1136                           	opt callstack 0
  1137  00003B                     	ds	1
  1138  00003C                     _uart1TxHead:
  1139                           	opt callstack 0
  1140  00003C                     	ds	1
  1141                           
  1142                           	psect	bssBANK0
  1143  000060                     __pbssBANK0:
  1144                           	opt callstack 0
  1145  000060                     _r_block:
  1146                           	opt callstack 0
  1147  000060                     	ds	13
  1148  00006D                     _spi_link:
  1149                           	opt callstack 0
  1150  00006D                     	ds	12
  1151  000079                     _tickCount:
  1152                           	opt callstack 0
  1153  000079                     	ds	12
  1154  000085                     wdtdelay@dcount:
  1155                           	opt callstack 0
  1156  000085                     	ds	4
  1157  000089                     _V:
  1158                           	opt callstack 0
  1159  000089                     	ds	80
  1160  0000D9                     _dbuf:
  1161                           	opt callstack 0
  1162  0000D9                     	ds	32
  1163                           
  1164                           	psect	dataBANK0
  1165  0000F9                     __pdataBANK0:
  1166                           	opt callstack 0
  1167  0000F9                     stoa@F1144:
  1168                           	opt callstack 0
  1169  0000F9                     	ds	7
  1170                           
  1171                           	psect	bssBANK1
  1172  0001A1                     __pbssBANK1:
  1173                           	opt callstack 0
  1174  0001A1                     _uart1RxBuffer:
  1175                           	opt callstack 0
  1176  0001A1                     	ds	64
  1177                           
  1178                           	psect	dataBANK1
  1179  000100                     __pdataBANK1:
  1180                           	opt callstack 0
  1181  000100                     _H10:
  1182                           	opt callstack 0
  1183  000100                     	ds	65
  1184  000141                     _H24:
  1185                           	opt callstack 0
  1186  000141                     	ds	27
  1187  00015C                     _H18:
  1188                           	opt callstack 0
  1189  00015C                     	ds	21
  1190  000171                     _H14:
  1191                           	opt callstack 0
  1192  000171                     	ds	17
  1193  000182                     _H13:
  1194                           	opt callstack 0
  1195  000182                     	ds	16
  1196  000192                     _H12:
  1197                           	opt callstack 0
  1198  000192                     	ds	15
  1199                           
  1200                           	psect	bssBANK2
  1201  000200                     __pbssBANK2:
  1202                           	opt callstack 0
  1203  000200                     _uart2RxBuffer:
  1204                           	opt callstack 0
  1205  000200                     	ds	64
  1206  000240                     _uart2TxBuffer:
  1207                           	opt callstack 0
  1208  000240                     	ds	64
  1209  000280                     _uart1TxBuffer:
  1210                           	opt callstack 0
  1211  000280                     	ds	64
  1212                           
  1213                           	psect	bssBANK3
  1214  000300                     __pbssBANK3:
  1215                           	opt callstack 0
  1216  000300                     _ring_buf2:
  1217                           	opt callstack 0
  1218  000300                     	ds	67
  1219  000343                     _ring_buf1:
  1220                           	opt callstack 0
  1221  000343                     	ds	67
  1222                           
  1223                           	psect	dataBANK3
  1224  000386                     __pdataBANK3:
  1225                           	opt callstack 0
  1226  000386                     _H53:
  1227                           	opt callstack 0
  1228  000386                     	ds	112
  1229                           
  1230                           	psect	cstackBANK0
  1231  000000                     __pcstackBANK0:
  1232                           	opt callstack 0
  1233  000000                     
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236                           	psect	cstackCOMRAM
  1237  00005D                     __pcstackCOMRAM:
  1238                           	opt callstack 0
  1239  00005D                     ??_TMR6_ISR:
  1240  00005D                     
  1241                           ; 1 bytes @ 0x0
  1242  00005D                     	ds	2
  1243                           
  1244 ;;
  1245 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
  1246 ;;
  1247 ;; *************** function _main *****************
  1248 ;; Defined at:
  1249 ;;		line 246 in file "main.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  j               1    0        unsigned char 
  1254 ;;  sum             2  [STACK] unsigned short 
  1255 ;;  mode            1  [STACK] enum E16894
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1  [STACK] void 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl
      +, tblptrh, tblptru, prodl, prodh
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 3F/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1269 ;;Total ram usage:        0 bytes
  1270 ;; Hardware stack levels required when called:   14
  1271 ;; This function calls:
  1272 ;;		_SYSTEM_Initialize
  1273 ;;		_UART1_Write
  1274 ;;		_UART1_put_buffer
  1275 ;;		_WaitMs
  1276 ;;		_block_checksum
  1277 ;;		_eaDogM_WriteCommand
  1278 ;;		_eaDogM_WriteString
  1279 ;;		_eaDogM_WriteStringAtPos
  1280 ;;		_init_display
  1281 ;;		_r_protocol
  1282 ;;		_secs_send
  1283 ;;		_sprintf
  1284 ;;		_t_protocol
  1285 ;;		_wait_lcd_done
  1286 ;; This function is called by:
  1287 ;;		Startup code after reset
  1288 ;; This function uses a reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text0
  1292  00320C                     __ptext0:
  1293                           	opt callstack 0
  1294  00320C                     _main:
  1295                           	opt callstack 0
  1296                           
  1297                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1298  00320C  52E6               	movf	postinc1,f,c
  1299  00320E  52E6               	movf	postinc1,f,c
  1300  003210  52E6               	movf	postinc1,f,c
  1301                           
  1302                           ;main.c: 248:  uint16_t sum;;main.c: 249:  UI_STATES mode = UI_STATE_HOST;
  1303                           ;stkvar	_mode @ sp[(-3)+2]
  1304                           
  1305                           ;incstack = 0
  1306  003212  0EFF               	movlw	-1
  1307  003214  6AE3               	clrf	plusw1,c
  1308  003216  2AE3               	incf	plusw1,f,c
  1309                           
  1310                           ;main.c: 252:  SYSTEM_Initialize();
  1311  003218  ECF1  F02A         	call	_SYSTEM_Initialize	;wreg free
  1312                           
  1313                           ; BSR set to: 60
  1314                           ;main.c: 255:  (INTCON0bits.GIEH = 1);
  1315  00321C  8ED2               	bsf	16338,7,c	;volatile
  1316                           
  1317                           ; BSR set to: 60
  1318                           ;main.c: 258:  (INTCON0bits.GIEL = 1);
  1319  00321E  8CD2               	bsf	16338,6,c	;volatile
  1320  003220                     l7773:
  1321                           
  1322                           ;main.c: 260:  V.ui_state = UI_STATE_INIT;
  1323  003220  0100               	movlb	0	; () banked
  1324  003222  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1325  003224  D138               	goto	l1213
  1326  003226                     l7775:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 265:    init_display();
  1330  003226  ECE1  F023         	call	_init_display	;wreg free
  1331                           
  1332                           ; BSR set to: 61
  1333                           ;main.c: 266:    eaDogM_WriteCommand(0b00001100);
  1334  00322A  0E0C               	movlw	12
  1335  00322C  6EE6               	movwf	postinc1,c
  1336  00322E  ECFE  F02E         	call	_eaDogM_WriteCommand	;wreg free
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;main.c: 267:    V.ui_state = mode;
  1340                           ;stkvar	_mode @ sp[(-3)+2]
  1341  003232  0EFF               	movlw	-1
  1342  003234  006F FF8C  F08A    	movff	plusw1,_V+1	;volatile
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;main.c: 268:    V.s_state = SEQ_STATE_INIT;
  1346  00323A  6B89               	clrf	_V& (0+255),b	;volatile
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;main.c: 273:    sum = block_checksum((uint8_t*) & H10[j].block.block, sizeof(block10));
  1350                           
  1351                           ; BSR set to: 0
  1352  00323C  0E0A               	movlw	10
  1353  00323E  6EE6               	movwf	postinc1,c
  1354  003240  0E00               	movlw	0
  1355  003242  6EE6               	movwf	postinc1,c
  1356  003244  0E29               	movlw	low (_H10+41)
  1357  003246  6EE6               	movwf	postinc1,c
  1358  003248  0E01               	movlw	high (_H10+41)
  1359  00324A  6EE6               	movwf	postinc1,c
  1360  00324C  EC56  F024         	call	_block_checksum	;wreg free
  1361                           
  1362                           ;stkvar	_sum @ sp[(-3)+0]
  1363  003250  0EFD               	movlw	-3
  1364  003252  0060  F0F7  FFE3   	movff	btemp,plusw1
  1365  003258  0EFE               	movlw	-2
  1366  00325A  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  1367                           
  1368                           ;main.c: 274:    H10[j].checksum = sum;
  1369                           ;stkvar	_sum @ sp[(-3)+0]
  1370  003260  0EFD               	movlw	-3
  1371  003262  006F FF8C  F127    	movff	plusw1,_H10+39
  1372  003268  0EFE               	movlw	-2
  1373  00326A  006F FF8C  F128    	movff	plusw1,_H10+40
  1374                           
  1375                           ;main.c: 275:    sprintf(V.buf, "M %d, H %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x, C 0x%
      +                          04x #",
  1376                           ;stkvar	_sum @ sp[(-3)+0]
  1377  003270  0EFD               	movlw	-3
  1378  003272  006F FF8F FFE6     	movff	plusw1,postinc1
  1379  003278  006F FF8F FFE6     	movff	plusw1,postinc1
  1380  00327E  0101               	movlb	1	; () banked
  1381  003280  5129               	movf	(_H10+41)& (0+255),w,b
  1382  003282  6EE6               	movwf	postinc1,c
  1383  003284  0E00               	movlw	0
  1384  003286  6EE6               	movwf	postinc1,c
  1385  003288  512A               	movf	(_H10+42)& (0+255),w,b
  1386  00328A  6EE6               	movwf	postinc1,c
  1387  00328C  0E00               	movlw	0
  1388  00328E  6EE6               	movwf	postinc1,c
  1389  003290  512B               	movf	(_H10+43)& (0+255),w,b
  1390  003292  6EE6               	movwf	postinc1,c
  1391  003294  0E00               	movlw	0
  1392  003296  6EE6               	movwf	postinc1,c
  1393  003298  512C               	movf	(_H10+44)& (0+255),w,b
  1394  00329A  6EE6               	movwf	postinc1,c
  1395  00329C  0E00               	movlw	0
  1396  00329E  6EE6               	movwf	postinc1,c
  1397  0032A0  512D               	movf	(_H10+45)& (0+255),w,b
  1398  0032A2  6EE6               	movwf	postinc1,c
  1399  0032A4  0E00               	movlw	0
  1400  0032A6  6EE6               	movwf	postinc1,c
  1401  0032A8  512E               	movf	(_H10+46)& (0+255),w,b
  1402  0032AA  6EE6               	movwf	postinc1,c
  1403  0032AC  0E00               	movlw	0
  1404  0032AE  6EE6               	movwf	postinc1,c
  1405  0032B0  512F               	movf	(_H10+47)& (0+255),w,b
  1406  0032B2  6EE6               	movwf	postinc1,c
  1407  0032B4  0E00               	movlw	0
  1408  0032B6  6EE6               	movwf	postinc1,c
  1409  0032B8  5130               	movf	(_H10+48)& (0+255),w,b
  1410  0032BA  6EE6               	movwf	postinc1,c
  1411  0032BC  0E00               	movlw	0
  1412  0032BE  6EE6               	movwf	postinc1,c
  1413  0032C0  5131               	movf	(_H10+49)& (0+255),w,b
  1414  0032C2  6EE6               	movwf	postinc1,c
  1415  0032C4  0E00               	movlw	0
  1416  0032C6  6EE6               	movwf	postinc1,c
  1417  0032C8  5132               	movf	(_H10+50)& (0+255),w,b
  1418  0032CA  6EE6               	movwf	postinc1,c
  1419  0032CC  0E00               	movlw	0
  1420  0032CE  6EE6               	movwf	postinc1,c
  1421                           
  1422                           ;stkvar	_mode @ sp[(-25)+2]
  1423  0032D0  0EE9               	movlw	-23
  1424  0032D2  50E3               	movf	plusw1,w,c
  1425  0032D4  6EE6               	movwf	postinc1,c
  1426  0032D6  0E00               	movlw	0
  1427  0032D8  6EE6               	movwf	postinc1,c
  1428  0032DA  0E01               	movlw	STR_1& (0+255)
  1429  0032DC  6EE6               	movwf	postinc1,c
  1430  0032DE  0E89               	movlw	_V& (0+255)
  1431  0032E0  0F04               	addlw	4
  1432  0032E2  6EE6               	movwf	postinc1,c
  1433  0032E4  0E1A               	movlw	26
  1434  0032E6  6EE6               	movwf	postinc1,c
  1435  0032E8  ECBF  F024         	call	_sprintf	;wreg free
  1436                           
  1437                           ;main.c: 288:    wait_lcd_done();
  1438  0032EC  ECA7  F02E         	call	_wait_lcd_done	;wreg free
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;main.c: 289:    eaDogM_WriteString(V.buf);
  1442  0032F0  0E89               	movlw	_V& (0+255)
  1443  0032F2  0F04               	addlw	4
  1444  0032F4  6EE6               	movwf	postinc1,c
  1445  0032F6  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;main.c: 291:    secs_send((uint8_t*) & H10[j], sizeof(header10), 0);
  1449  0032FA  0E00               	movlw	0
  1450  0032FC  6EE6               	movwf	postinc1,c
  1451  0032FE  0E0D               	movlw	13
  1452  003300  6EE6               	movwf	postinc1,c
  1453  003302  0E27               	movlw	low (_H10+39)
  1454  003304  6EE6               	movwf	postinc1,c
  1455  003306  0E01               	movlw	high (_H10+39)
  1456  003308  6EE6               	movwf	postinc1,c
  1457  00330A  EC72  F021         	call	_secs_send	;wreg free
  1458                           
  1459                           ;main.c: 292:    sprintf(V.buf, " C 0x%04x #", V.t_checksum);
  1460  00330E  0060  F35F  FFE6   	movff	_V+78,postinc1
  1461  003314  0060  F363  FFE6   	movff	_V+79,postinc1
  1462  00331A  0E32               	movlw	(STR_1+49)& (0+255)
  1463  00331C  6EE6               	movwf	postinc1,c
  1464  00331E  0E89               	movlw	_V& (0+255)
  1465  003320  0F04               	addlw	4
  1466  003322  6EE6               	movwf	postinc1,c
  1467  003324  0E04               	movlw	4
  1468  003326  6EE6               	movwf	postinc1,c
  1469  003328  ECBF  F024         	call	_sprintf	;wreg free
  1470                           
  1471                           ;main.c: 293:    wait_lcd_done();
  1472  00332C  ECA7  F02E         	call	_wait_lcd_done	;wreg free
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;main.c: 294:    eaDogM_WriteString(V.buf);
  1476  003330  0E89               	movlw	_V& (0+255)
  1477  003332  0F04               	addlw	4
  1478  003334  6EE6               	movwf	postinc1,c
  1479  003336  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  1480                           
  1481                           ;main.c: 297:    break;
  1482  00333A  D0AD               	goto	l1213
  1483  00333C                     l1218:
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;main.c: 301:     V.r_l_state = LINK_STATE_IDLE;
  1487  00333C  6B8B               	clrf	(_V+2)& (0+255),b	;volatile
  1488                           
  1489                           ;main.c: 302:     V.t_l_state = LINK_STATE_IDLE;
  1490  00333E  6B8C               	clrf	(_V+3)& (0+255),b	;volatile
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;main.c: 303:     V.s_state = SEQ_STATE_RX;
  1494  003340  0E01               	movlw	1
  1495  003342  6F89               	movwf	_V& (0+255),b	;volatile
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;main.c: 305:     WaitMs(75);
  1499  003344  0E4B               	movlw	75
  1500  003346  6EE6               	movwf	postinc1,c
  1501  003348  0E00               	movlw	0
  1502  00334A  6EE6               	movwf	postinc1,c
  1503  00334C  EC46  F02C         	call	_WaitMs	;wreg free
  1504                           
  1505                           ;main.c: 306:     UART1_put_buffer(0x05);
  1506  003350  0E05               	movlw	5
  1507  003352  6EE6               	movwf	postinc1,c
  1508  003354  EC31  F02C         	call	_UART1_put_buffer	;wreg free
  1509                           
  1510                           ;main.c: 308:     break;
  1511  003358  D09E               	goto	l1213
  1512  00335A                     l7809:
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;main.c: 313:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1516  00335A  0E89               	movlw	_V& (0+255)
  1517  00335C  0F02               	addlw	2
  1518  00335E  6EE6               	movwf	postinc1,c
  1519  003360  ECED  F01C         	call	_r_protocol	;wreg free
  1520  003364  0E04               	movlw	4
  1521  003366  183D               	xorwf	btemp,w,c
  1522  003368  A4D8               	btfss	status,2,c
  1523  00336A  D028               	goto	l7823
  1524                           
  1525                           ;main.c: 314:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1526  00336C  0100               	movlb	0	; () banked
  1527  00336E  51D2               	movf	(_V+73)& (0+255),w,b	;volatile
  1528  003370  6EE6               	movwf	postinc1,c
  1529  003372  0E00               	movlw	0
  1530  003374  6EE6               	movwf	postinc1,c
  1531  003376  51D1               	movf	(_V+72)& (0+255),w,b	;volatile
  1532  003378  6EE6               	movwf	postinc1,c
  1533  00337A  0E00               	movlw	0
  1534  00337C  6EE6               	movwf	postinc1,c
  1535  00337E  0E55               	movlw	STR_3& (0+255)
  1536  003380  6EE6               	movwf	postinc1,c
  1537  003382  0E89               	movlw	_V& (0+255)
  1538  003384  0F04               	addlw	4
  1539  003386  6EE6               	movwf	postinc1,c
  1540  003388  0E06               	movlw	6
  1541  00338A  6EE6               	movwf	postinc1,c
  1542  00338C  ECBF  F024         	call	_sprintf	;wreg free
  1543                           
  1544                           ;main.c: 315:      V.buf[11]=0;
  1545  003390  0100               	movlb	0	; () banked
  1546  003392  6B98               	clrf	(_V+15)& (0+255),b	;volatile
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;main.c: 316:      wait_lcd_done();
  1550  003394  ECA7  F02E         	call	_wait_lcd_done	;wreg free
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;main.c: 317:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1554  003398  0E89               	movlw	_V& (0+255)
  1555  00339A  0F04               	addlw	4
  1556  00339C  6EE6               	movwf	postinc1,c
  1557  00339E  0E00               	movlw	0
  1558  0033A0  6EE6               	movwf	postinc1,c
  1559  0033A2  0E00               	movlw	0
  1560  0033A4  6EE6               	movwf	postinc1,c
  1561  0033A6  ECEF  F02B         	call	_eaDogM_WriteStringAtPos	;wreg free
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;main.c: 319:      WaitMs(5);
  1565  0033AA  0E05               	movlw	5
  1566  0033AC  6EE6               	movwf	postinc1,c
  1567  0033AE  0E00               	movlw	0
  1568  0033B0  6EE6               	movwf	postinc1,c
  1569  0033B2  EC46  F02C         	call	_WaitMs	;wreg free
  1570                           
  1571                           ;main.c: 321:      V.s_state = SEQ_STATE_TX;
  1572  0033B6  0E02               	movlw	2
  1573  0033B8  0100               	movlb	0	; () banked
  1574  0033BA  6F89               	movwf	_V& (0+255),b	;volatile
  1575  0033BC                     l7823:
  1576                           
  1577                           ;main.c: 323:     if (V.r_l_state == LINK_STATE_ERROR)
  1578  0033BC  0E06               	movlw	6
  1579  0033BE  0100               	movlb	0	; () banked
  1580  0033C0  198B               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1581  0033C2  D00F               	goto	L24
  1582  0033C4                     l7827:
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;main.c: 330:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1586  0033C4  0E89               	movlw	_V& (0+255)
  1587  0033C6  0F03               	addlw	3
  1588  0033C8  6EE6               	movwf	postinc1,c
  1589  0033CA  EC63  F020         	call	_t_protocol	;wreg free
  1590  0033CE  0E04               	movlw	4
  1591  0033D0  183D               	xorwf	btemp,w,c
  1592  0033D2  A4D8               	btfss	status,2,c
  1593  0033D4  D003               	goto	l7831
  1594                           
  1595                           ;main.c: 331:      V.s_state = SEQ_STATE_TRIGGER;
  1596  0033D6  0E03               	movlw	3
  1597  0033D8  0100               	movlb	0	; () banked
  1598  0033DA  6F89               	movwf	_V& (0+255),b	;volatile
  1599  0033DC                     l7831:
  1600                           
  1601                           ;main.c: 333:     if (V.t_l_state == LINK_STATE_ERROR)
  1602  0033DC  0E06               	movlw	6
  1603  0033DE  0100               	movlb	0	; () banked
  1604  0033E0  198C               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1605  0033E2                     L24:
  1606  0033E2  A4D8               	btfss	status,2,c
  1607  0033E4  D058               	goto	l1213
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;main.c: 334:      V.s_state = SEQ_STATE_ERROR;
  1611  0033E6  0E05               	movlw	5
  1612  0033E8  6F89               	movwf	_V& (0+255),b	;volatile
  1613  0033EA  D055               	goto	l1213
  1614  0033EC                     l1227:
  1615                           
  1616                           ; BSR set to: 0
  1617  0033EC  82BE               	bsf	16318,1,c	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;main.c: 338:     sprintf(V.buf, " OK #");
  1621  0033EE  0E63               	movlw	STR_4& (0+255)
  1622  0033F0  6EE6               	movwf	postinc1,c
  1623  0033F2  0E89               	movlw	_V& (0+255)
  1624  0033F4  0F04               	addlw	4
  1625  0033F6  6EE6               	movwf	postinc1,c
  1626  0033F8  0E02               	movlw	2
  1627  0033FA  6EE6               	movwf	postinc1,c
  1628  0033FC  ECBF  F024         	call	_sprintf	;wreg free
  1629                           
  1630                           ;main.c: 339:     wait_lcd_done();
  1631  003400  ECA7  F02E         	call	_wait_lcd_done	;wreg free
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;main.c: 340:     eaDogM_WriteString(V.buf);
  1635  003404  0E89               	movlw	_V& (0+255)
  1636  003406  0F04               	addlw	4
  1637  003408  6EE6               	movwf	postinc1,c
  1638  00340A  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;main.c: 341:     V.s_state = SEQ_STATE_DONE;
  1642  00340E  0E04               	movlw	4
  1643  003410  6F89               	movwf	_V& (0+255),b	;volatile
  1644                           
  1645                           ; BSR set to: 0
  1646  003412  92BE               	bcf	16318,1,c	;volatile
  1647  003414  D040               	goto	l1213
  1648  003416                     l7845:
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;main.c: 349:     UART1_Write(0x15);
  1652  003416  0E15               	movlw	21
  1653  003418  6EE6               	movwf	postinc1,c
  1654  00341A  EC32  F02B         	call	_UART1_Write	;wreg free
  1655                           
  1656                           ; BSR set to: 57
  1657                           ;main.c: 350:     sprintf(V.buf, " ERR R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort);
  1658  00341E  0100               	movlb	0	; () banked
  1659  003420  51D4               	movf	(_V+75)& (0+255),w,b	;volatile
  1660  003422  6EE6               	movwf	postinc1,c
  1661  003424  0E00               	movlw	0
  1662  003426  6EE6               	movwf	postinc1,c
  1663  003428  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  1664  00342A  6EE6               	movwf	postinc1,c
  1665  00342C  0E00               	movlw	0
  1666  00342E  6EE6               	movwf	postinc1,c
  1667  003430  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1668  003432  6EE6               	movwf	postinc1,c
  1669  003434  0E00               	movlw	0
  1670  003436  6EE6               	movwf	postinc1,c
  1671  003438  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1672  00343A  6EE6               	movwf	postinc1,c
  1673  00343C  0E00               	movlw	0
  1674  00343E  6EE6               	movwf	postinc1,c
  1675  003440  0E3E               	movlw	STR_5& (0+255)
  1676  003442  6EE6               	movwf	postinc1,c
  1677  003444  0E89               	movlw	_V& (0+255)
  1678  003446  0F04               	addlw	4
  1679  003448  6EE6               	movwf	postinc1,c
  1680  00344A  0E0A               	movlw	10
  1681  00344C  6EE6               	movwf	postinc1,c
  1682  00344E  ECBF  F024         	call	_sprintf	;wreg free
  1683                           
  1684                           ;main.c: 351:     wait_lcd_done();
  1685  003452  ECA7  F02E         	call	_wait_lcd_done	;wreg free
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 352:     eaDogM_WriteString(V.buf);
  1689  003456  0E89               	movlw	_V& (0+255)
  1690  003458  0F04               	addlw	4
  1691  00345A  6EE6               	movwf	postinc1,c
  1692  00345C  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  1693  003460                     l7853:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;main.c: 353:     V.s_state = SEQ_STATE_INIT;
  1697  003460  6B89               	clrf	_V& (0+255),b	;volatile
  1698                           
  1699                           ;main.c: 354:     break;
  1700  003462  D019               	goto	l1213
  1701  003464                     l7857:
  1702                           
  1703                           ; BSR set to: 0
  1704  003464  5189               	movf	_V& (0+255),w,b	;volatile
  1705  003466  6E47               	movwf	btemp+10,c
  1706  003468  6A48               	clrf	btemp+11,c
  1707                           
  1708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1709                           ; Switch size 1, requested type "simple"
  1710                           ; Number of cases is 1, Range of values is 0 to 0
  1711                           ; switch strategies available:
  1712                           ; Name         Instructions Cycles
  1713                           ; simple_byte            4     3 (average)
  1714                           ;	Chosen strategy is simple_byte
  1715  00346A  5048               	movf	btemp+11,w,c
  1716  00346C  0A00               	xorlw	0	; case 0
  1717  00346E  A4D8               	btfss	status,2,c
  1718  003470  D7D2               	goto	l7845
  1719                           
  1720                           ; BSR set to: 0
  1721                           ; Switch size 1, requested type "simple"
  1722                           ; Number of cases is 6, Range of values is 0 to 5
  1723                           ; switch strategies available:
  1724                           ; Name         Instructions Cycles
  1725                           ; simple_byte           19    10 (average)
  1726                           ;	Chosen strategy is simple_byte
  1727  003472  5047               	movf	btemp+10,w,c
  1728  003474  0A00               	xorlw	0	; case 0
  1729  003476  B4D8               	btfsc	status,2,c
  1730  003478  D761               	goto	l1218
  1731  00347A  0A01               	xorlw	1	; case 1
  1732  00347C  B4D8               	btfsc	status,2,c
  1733  00347E  D76D               	goto	l7809
  1734  003480  0A03               	xorlw	3	; case 2
  1735  003482  B4D8               	btfsc	status,2,c
  1736  003484  D79F               	goto	l7827
  1737  003486  0A01               	xorlw	1	; case 3
  1738  003488  B4D8               	btfsc	status,2,c
  1739  00348A  D7B0               	goto	l1227
  1740  00348C  0A07               	xorlw	7	; case 4
  1741  00348E  B4D8               	btfsc	status,2,c
  1742  003490  D7E7               	goto	l7853
  1743  003492  0A01               	xorlw	1	; case 5
  1744  003494  D7C0               	goto	l7845
  1745  003496                     l1213:
  1746                           
  1747                           ; BSR set to: 0
  1748  003496  0100               	movlb	0	; () banked
  1749  003498  518A               	movf	(_V+1)& (0+255),w,b	;volatile
  1750  00349A  6E47               	movwf	btemp+10,c
  1751  00349C  6A48               	clrf	btemp+11,c
  1752                           
  1753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1754                           ; Switch size 1, requested type "simple"
  1755                           ; Number of cases is 1, Range of values is 0 to 0
  1756                           ; switch strategies available:
  1757                           ; Name         Instructions Cycles
  1758                           ; simple_byte            4     3 (average)
  1759                           ;	Chosen strategy is simple_byte
  1760  00349E  5048               	movf	btemp+11,w,c
  1761  0034A0  0A00               	xorlw	0	; case 0
  1762  0034A2  A4D8               	btfss	status,2,c
  1763  0034A4  D6BD               	goto	l7773
  1764                           
  1765                           ; BSR set to: 0
  1766                           ; Switch size 1, requested type "simple"
  1767                           ; Number of cases is 3, Range of values is 0 to 5
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; simple_byte           10     6 (average)
  1771                           ;	Chosen strategy is simple_byte
  1772  0034A6  5047               	movf	btemp+10,w,c
  1773  0034A8  0A00               	xorlw	0	; case 0
  1774  0034AA  B4D8               	btfsc	status,2,c
  1775  0034AC  D6BC               	goto	l7775
  1776  0034AE  0A01               	xorlw	1	; case 1
  1777  0034B0  B4D8               	btfsc	status,2,c
  1778  0034B2  D7D8               	goto	l7857
  1779  0034B4  0A04               	xorlw	4	; case 5
  1780  0034B6  D6B4               	goto	l7773
  1781  0034B8                     __end_of_main:
  1782                           	opt callstack 0
  1783                           
  1784 ;; *************** function _t_protocol *****************
  1785 ;; Defined at:
  1786 ;;		line 126 in file "gemsecs.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  t_link          1  [STACK] PTR enum E16164
  1789 ;;		 -> V(80), 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  block           3  [STACK] struct response_type
  1792 ;;  rxData          1  [STACK] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1  [STACK] enum E16902
  1795 ;; Registers used:
  1796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, prodl, prodh
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    5
  1809 ;; This function calls:
  1810 ;;		_StartTimer
  1811 ;;		_TimerDone
  1812 ;;		_UART1_Read
  1813 ;;		_UART1_Write
  1814 ;;		_UART1_is_rx_ready
  1815 ;;		_UART1_put_buffer
  1816 ;;		_WaitMs
  1817 ;;		_secs_II_message
  1818 ;;		_secs_send
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text1
  1825  0040C6                     __ptext1:
  1826                           	opt callstack 0
  1827  0040C6                     _t_protocol:
  1828                           	opt callstack 0
  1829                           
  1830                           ; BSR set to: 0
  1831                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1832  0040C6  52E6               	movf	postinc1,f,c
  1833  0040C8  52E6               	movf	postinc1,f,c
  1834  0040CA  52E6               	movf	postinc1,f,c
  1835  0040CC  52E6               	movf	postinc1,f,c
  1836                           
  1837                           ;gemsecs.c: 126: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 127: {;gemsecs.
      +                          c: 128:  uint8_t rxData;;gemsecs.c: 129:  response_type block;;gemsecs.c: 131:  switch (
      +                          *t_link) {
  1838                           
  1839                           ;incstack = 0
  1840  0040CE  D0DE               	goto	l7753
  1841  0040D0                     l1530:
  1842                           
  1843                           ;gemsecs.c: 133:   V.error = LINK_ERROR_NONE;
  1844  0040D0  0100               	movlb	0	; () banked
  1845  0040D2  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;gemsecs.c: 134:   UART1_Write(0x05);
  1849  0040D4  0E05               	movlw	5
  1850  0040D6  6EE6               	movwf	postinc1,c
  1851  0040D8  EC32  F02B         	call	_UART1_Write	;wreg free
  1852                           
  1853                           ; BSR set to: 57
  1854                           ;gemsecs.c: 135:   StartTimer(TMR_T2, 2000);
  1855  0040DC  0ED0               	movlw	208
  1856  0040DE  6EE6               	movwf	postinc1,c
  1857  0040E0  0E07               	movlw	7
  1858  0040E2  6EE6               	movwf	postinc1,c
  1859  0040E4  0E02               	movlw	2
  1860  0040E6  6EE6               	movwf	postinc1,c
  1861  0040E8  EC70  F02B         	call	_StartTimer	;wreg free
  1862                           
  1863                           ;gemsecs.c: 136:   *t_link = LINK_STATE_ENQ;
  1864                           ;stkvar	_t_link @ sp[(-4)+-1]
  1865  0040EC  0EFB               	movlw	-5
  1866  0040EE  50E3               	movf	plusw1,w,c
  1867  0040F0  6ED9               	movwf	fsr2l,c
  1868  0040F2  6ADA               	clrf	fsr2h,c
  1869  0040F4  0E01               	movlw	1
  1870  0040F6  6EDF               	movwf	indf2,c
  1871                           
  1872                           ;gemsecs.c: 138:   WaitMs(5);
  1873  0040F8  0E05               	movlw	5
  1874  0040FA  6EE6               	movwf	postinc1,c
  1875  0040FC  0E00               	movlw	0
  1876  0040FE  6EE6               	movwf	postinc1,c
  1877  004100  EC46  F02C         	call	_WaitMs	;wreg free
  1878                           
  1879                           ;gemsecs.c: 139:   UART1_put_buffer(0x04);
  1880  004104  0E04               	movlw	4
  1881  004106  6EE6               	movwf	postinc1,c
  1882  004108  EC31  F02C         	call	_UART1_put_buffer	;wreg free
  1883                           
  1884                           ;gemsecs.c: 141:   break;
  1885  00410C  D0E0               	goto	l7755
  1886  00410E                     l7693:
  1887                           
  1888                           ;gemsecs.c: 143:   if (TimerDone(TMR_T2)) {
  1889  00410E  0E02               	movlw	2
  1890  004110  6EE6               	movwf	postinc1,c
  1891  004112  EC01  F02E         	call	_TimerDone	;wreg free
  1892  004116  503D               	movf	btemp,w,c
  1893  004118  B4D8               	btfsc	status,2,c
  1894  00411A  D009               	goto	l7699
  1895                           
  1896                           ;gemsecs.c: 144:    V.error = LINK_ERROR_T2;
  1897  00411C  0E02               	movlw	2
  1898  00411E  0100               	movlb	0	; () banked
  1899  004120  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;gemsecs.c: 145:    *t_link = LINK_STATE_NAK;
  1903                           ;stkvar	_t_link @ sp[(-4)+-1]
  1904  004122  0EFB               	movlw	-5
  1905  004124  50E3               	movf	plusw1,w,c
  1906  004126  6ED9               	movwf	fsr2l,c
  1907  004128  6ADA               	clrf	fsr2h,c
  1908  00412A  0E05               	movlw	5
  1909  00412C  D0AD               	goto	L5
  1910  00412E                     l7699:
  1911                           
  1912                           ;gemsecs.c: 147:    if (UART1_is_rx_ready()) {
  1913  00412E  EC41  F02F         	call	_UART1_is_rx_ready	;wreg free
  1914  004132  503D               	movf	btemp,w,c
  1915  004134  B4D8               	btfsc	status,2,c
  1916  004136  D0CB               	goto	l7755
  1917                           
  1918                           ;gemsecs.c: 148:     rxData = UART1_Read();
  1919  004138  EC51  F02B         	call	_UART1_Read	;wreg free
  1920                           
  1921                           ;stkvar	_rxData @ sp[(-4)+3]
  1922  00413C  0EFF               	movlw	-1
  1923  00413E  0060  F0F7  FFE3   	movff	btemp,plusw1
  1924                           
  1925                           ; BSR set to: 57
  1926                           ;gemsecs.c: 149:     if (rxData == 0x04) {
  1927                           ;stkvar	_rxData @ sp[(-4)+3]
  1928  004144  0EFF               	movlw	-1
  1929  004146  006F FF8C  F03D    	movff	plusw1,btemp
  1930  00414C  0E04               	movlw	4
  1931  00414E  183D               	xorwf	btemp,w,c
  1932  004150  A4D8               	btfss	status,2,c
  1933  004152  D0BD               	goto	l7755
  1934                           
  1935                           ; BSR set to: 57
  1936                           ;gemsecs.c: 150:      StartTimer(TMR_T3, 5000);
  1937  004154  0E88               	movlw	136
  1938  004156  6EE6               	movwf	postinc1,c
  1939  004158  0E13               	movlw	19
  1940  00415A  6EE6               	movwf	postinc1,c
  1941  00415C  0E03               	movlw	3
  1942  00415E  6EE6               	movwf	postinc1,c
  1943  004160  EC70  F02B         	call	_StartTimer	;wreg free
  1944                           
  1945                           ;gemsecs.c: 151:      *t_link = LINK_STATE_EOT;
  1946                           ;stkvar	_t_link @ sp[(-4)+-1]
  1947  004164  0EFB               	movlw	-5
  1948  004166  50E3               	movf	plusw1,w,c
  1949  004168  6ED9               	movwf	fsr2l,c
  1950  00416A  6ADA               	clrf	fsr2h,c
  1951  00416C  0E02               	movlw	2
  1952  00416E  D08C               	goto	L5
  1953  004170                     l7709:
  1954                           
  1955                           ;gemsecs.c: 157:   block = secs_II_message(V.stream, V.function);
  1956  004170  0100               	movlb	0	; () banked
  1957  004172  51D2               	movf	(_V+73)& (0+255),w,b	;volatile
  1958  004174  6EE6               	movwf	postinc1,c
  1959  004176  51D1               	movf	(_V+72)& (0+255),w,b	;volatile
  1960  004178  6EE6               	movwf	postinc1,c
  1961  00417A  EC4E  F022         	call	_secs_II_message	;wreg free
  1962                           
  1963                           ;stkvar	_block @ sp[(-4)+0]
  1964  00417E  0EFC               	movlw	-4
  1965  004180  0060  F0F7  FFE3   	movff	btemp,plusw1
  1966  004186  0EFD               	movlw	-3
  1967  004188  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  1968  00418E  0EFE               	movlw	-2
  1969  004190  0060  F0FF  FFE3   	movff	btemp+2,plusw1
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;gemsecs.c: 158:   if (V.abort == LINK_ERROR_ABORT) {
  1973  004196  0E07               	movlw	7
  1974  004198  19D4               	xorwf	(_V+75)& (0+255),w,b	;volatile
  1975  00419A  A4D8               	btfss	status,2,c
  1976  00419C  D019               	goto	l7717
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;gemsecs.c: 159:    secs_send((uint8_t*) block.header, block.length, 0);
  1980  00419E  0E00               	movlw	0
  1981  0041A0  6EE6               	movwf	postinc1,c
  1982                           
  1983                           ;stkvar	_block @ sp[(-5)+0]
  1984  0041A2  0EFD               	movlw	253
  1985  0041A4  24E1               	addwf	fsr1l,w,c
  1986  0041A6  6ED9               	movwf	fsr2l,c
  1987  0041A8  0EFF               	movlw	255
  1988  0041AA  20E2               	addwfc	fsr1h,w,c
  1989  0041AC  6EDA               	movwf	fsr2h,c
  1990  0041AE  50DF               	movf	indf2,w,c
  1991  0041B0  6EE6               	movwf	postinc1,c
  1992                           
  1993                           ;stkvar	_block @ sp[(-6)+0]
  1994  0041B2  0EFA               	movlw	-6
  1995  0041B4  006F FF8F FFE6     	movff	plusw1,postinc1
  1996  0041BA  006F FF8F FFE6     	movff	plusw1,postinc1
  1997  0041C0  EC72  F021         	call	_secs_send	;wreg free
  1998  0041C4                     l7715:
  1999                           
  2000                           ;gemsecs.c: 160:    *t_link = LINK_STATE_ERROR;
  2001                           ;stkvar	_t_link @ sp[(-4)+-1]
  2002  0041C4  0EFB               	movlw	-5
  2003  0041C6  50E3               	movf	plusw1,w,c
  2004  0041C8  6ED9               	movwf	fsr2l,c
  2005  0041CA  6ADA               	clrf	fsr2h,c
  2006  0041CC  0E06               	movlw	6
  2007  0041CE  D01C               	goto	L3
  2008  0041D0                     l7717:
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;gemsecs.c: 162:    secs_send((uint8_t*) block.header, block.length, 0);
  2012  0041D0  0E00               	movlw	0
  2013  0041D2  6EE6               	movwf	postinc1,c
  2014                           
  2015                           ;stkvar	_block @ sp[(-5)+0]
  2016  0041D4  0EFD               	movlw	253
  2017  0041D6  24E1               	addwf	fsr1l,w,c
  2018  0041D8  6ED9               	movwf	fsr2l,c
  2019  0041DA  0EFF               	movlw	255
  2020  0041DC  20E2               	addwfc	fsr1h,w,c
  2021  0041DE  6EDA               	movwf	fsr2h,c
  2022  0041E0  50DF               	movf	indf2,w,c
  2023  0041E2  6EE6               	movwf	postinc1,c
  2024                           
  2025                           ;stkvar	_block @ sp[(-6)+0]
  2026  0041E4  0EFA               	movlw	-6
  2027  0041E6  006F FF8F FFE6     	movff	plusw1,postinc1
  2028  0041EC  006F FF8F FFE6     	movff	plusw1,postinc1
  2029  0041F2  EC72  F021         	call	_secs_send	;wreg free
  2030                           
  2031                           ;gemsecs.c: 163:    if (V.error == LINK_ERROR_NONE) {
  2032  0041F6  0100               	movlb	0	; () banked
  2033  0041F8  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  2034  0041FA  A4D8               	btfss	status,2,c
  2035  0041FC  D7E3               	goto	l7715
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;gemsecs.c: 164:     *t_link = LINK_STATE_ACK;
  2039                           ;stkvar	_t_link @ sp[(-4)+-1]
  2040  0041FE  0EFB               	movlw	-5
  2041  004200  50E3               	movf	plusw1,w,c
  2042  004202  6ED9               	movwf	fsr2l,c
  2043  004204  6ADA               	clrf	fsr2h,c
  2044  004206  0E03               	movlw	3
  2045  004208                     L3:
  2046  004208  6EDF               	movwf	indf2,c
  2047                           
  2048                           ;gemsecs.c: 170:   WaitMs(5);
  2049                           
  2050                           ;gemsecs.c: 165:    } else {
  2051  00420A  0E05               	movlw	5
  2052  00420C  6EE6               	movwf	postinc1,c
  2053  00420E  0E00               	movlw	0
  2054  004210  6EE6               	movwf	postinc1,c
  2055  004212  EC46  F02C         	call	_WaitMs	;wreg free
  2056                           
  2057                           ;gemsecs.c: 171:   UART1_put_buffer(0x06);
  2058  004216  0E06               	movlw	6
  2059  004218  6EE6               	movwf	postinc1,c
  2060  00421A  EC31  F02C         	call	_UART1_put_buffer	;wreg free
  2061                           
  2062                           ;gemsecs.c: 173:   break;
  2063  00421E  D057               	goto	l7755
  2064  004220                     l7729:
  2065                           
  2066                           ;gemsecs.c: 175:   if (TimerDone(TMR_T3)) {
  2067  004220  0E03               	movlw	3
  2068  004222  6EE6               	movwf	postinc1,c
  2069  004224  EC01  F02E         	call	_TimerDone	;wreg free
  2070  004228  503D               	movf	btemp,w,c
  2071  00422A  B4D8               	btfsc	status,2,c
  2072  00422C  D002               	goto	l7735
  2073                           
  2074                           ;gemsecs.c: 176:    V.error = LINK_ERROR_T3;
  2075  00422E  0E03               	movlw	3
  2076  004230  D776               	goto	L4
  2077  004232                     l7735:
  2078                           
  2079                           ;gemsecs.c: 179:    if (UART1_is_rx_ready()) {
  2080  004232  EC41  F02F         	call	_UART1_is_rx_ready	;wreg free
  2081  004236  503D               	movf	btemp,w,c
  2082  004238  B4D8               	btfsc	status,2,c
  2083  00423A  D049               	goto	l7755
  2084                           
  2085                           ;gemsecs.c: 180:     rxData = UART1_Read();
  2086  00423C  EC51  F02B         	call	_UART1_Read	;wreg free
  2087                           
  2088                           ;stkvar	_rxData @ sp[(-4)+3]
  2089  004240  0EFF               	movlw	-1
  2090  004242  0060  F0F7  FFE3   	movff	btemp,plusw1
  2091                           
  2092                           ; BSR set to: 57
  2093                           ;gemsecs.c: 181:     if (rxData == 0x06) {
  2094                           ;stkvar	_rxData @ sp[(-4)+3]
  2095  004248  0EFF               	movlw	-1
  2096  00424A  006F FF8C  F03D    	movff	plusw1,btemp
  2097  004250  0E06               	movlw	6
  2098  004252  183D               	xorwf	btemp,w,c
  2099  004254  A4D8               	btfss	status,2,c
  2100  004256  D03B               	goto	l7755
  2101                           
  2102                           ; BSR set to: 57
  2103                           ;gemsecs.c: 182:      *t_link = LINK_STATE_DONE;
  2104                           ;stkvar	_t_link @ sp[(-4)+-1]
  2105  004258  0EFB               	movlw	-5
  2106  00425A  50E3               	movf	plusw1,w,c
  2107  00425C  6ED9               	movwf	fsr2l,c
  2108  00425E  6ADA               	clrf	fsr2h,c
  2109  004260  0E04               	movlw	4
  2110  004262  D012               	goto	L5
  2111  004264                     l7743:
  2112                           
  2113                           ;gemsecs.c: 188:   *t_link = LINK_STATE_ERROR;
  2114                           ;stkvar	_t_link @ sp[(-4)+-1]
  2115  004264  0EFB               	movlw	-5
  2116  004266  50E3               	movf	plusw1,w,c
  2117  004268  6ED9               	movwf	fsr2l,c
  2118  00426A  6ADA               	clrf	fsr2h,c
  2119  00426C  0E06               	movlw	6
  2120  00426E  6EDF               	movwf	indf2,c
  2121                           
  2122                           ;gemsecs.c: 189:   while ((uart1RxCount)) {
  2123  004270  D002               	goto	l7747
  2124  004272                     l7745:
  2125                           
  2126                           ;gemsecs.c: 190:    UART1_Read();
  2127  004272  EC51  F02B         	call	_UART1_Read	;wreg free
  2128  004276                     l7747:
  2129                           
  2130                           ;gemsecs.c: 189:   while ((uart1RxCount)) {
  2131  004276  5037               	movf	_uart1RxCount,w,c	;volatile
  2132  004278  B4D8               	btfsc	status,2,c
  2133  00427A  D029               	goto	l7755
  2134  00427C  D7FA               	goto	l7745
  2135  00427E                     l7749:
  2136                           
  2137                           ;gemsecs.c: 198:   *t_link = LINK_STATE_IDLE;
  2138                           ;stkvar	_t_link @ sp[(-4)+-1]
  2139  00427E  0EFB               	movlw	-5
  2140  004280  50E3               	movf	plusw1,w,c
  2141  004282  6ED9               	movwf	fsr2l,c
  2142  004284  6ADA               	clrf	fsr2h,c
  2143  004286  0E00               	movlw	0
  2144  004288                     L5:
  2145  004288  6EDF               	movwf	indf2,c
  2146                           
  2147                           ;gemsecs.c: 199:   break;
  2148  00428A  D021               	goto	l7755
  2149  00428C                     l7753:
  2150                           
  2151                           ;stkvar	_t_link @ sp[(-4)+-1]
  2152  00428C  0EFB               	movlw	-5
  2153  00428E  50E3               	movf	plusw1,w,c
  2154  004290  6ED9               	movwf	fsr2l,c
  2155  004292  6ADA               	clrf	fsr2h,c
  2156  004294  50DF               	movf	indf2,w,c
  2157  004296  6E47               	movwf	btemp+10,c
  2158  004298  6A48               	clrf	btemp+11,c
  2159                           
  2160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2161                           ; Switch size 1, requested type "simple"
  2162                           ; Number of cases is 1, Range of values is 0 to 0
  2163                           ; switch strategies available:
  2164                           ; Name         Instructions Cycles
  2165                           ; simple_byte            4     3 (average)
  2166                           ;	Chosen strategy is simple_byte
  2167  00429A  5048               	movf	btemp+11,w,c
  2168  00429C  0A00               	xorlw	0	; case 0
  2169  00429E  A4D8               	btfss	status,2,c
  2170  0042A0  D7EE               	goto	l7749
  2171                           
  2172                           ; Switch size 1, requested type "simple"
  2173                           ; Number of cases is 7, Range of values is 0 to 6
  2174                           ; switch strategies available:
  2175                           ; Name         Instructions Cycles
  2176                           ; simple_byte           22    12 (average)
  2177                           ;	Chosen strategy is simple_byte
  2178  0042A2  5047               	movf	btemp+10,w,c
  2179  0042A4  0A00               	xorlw	0	; case 0
  2180  0042A6  B4D8               	btfsc	status,2,c
  2181  0042A8  D713               	goto	l1530
  2182  0042AA  0A01               	xorlw	1	; case 1
  2183  0042AC  B4D8               	btfsc	status,2,c
  2184  0042AE  D72F               	goto	l7693
  2185  0042B0  0A03               	xorlw	3	; case 2
  2186  0042B2  B4D8               	btfsc	status,2,c
  2187  0042B4  D75D               	goto	l7709
  2188  0042B6  0A01               	xorlw	1	; case 3
  2189  0042B8  B4D8               	btfsc	status,2,c
  2190  0042BA  D7B2               	goto	l7729
  2191  0042BC  0A07               	xorlw	7	; case 4
  2192  0042BE  B4D8               	btfsc	status,2,c
  2193  0042C0  D006               	goto	l7755
  2194  0042C2  0A01               	xorlw	1	; case 5
  2195  0042C4  B4D8               	btfsc	status,2,c
  2196  0042C6  D7CE               	goto	l7743
  2197  0042C8  0A03               	xorlw	3	; case 6
  2198  0042CA  A4D8               	btfss	status,2,c
  2199  0042CC  D7D8               	goto	l7749
  2200  0042CE                     l7755:
  2201                           
  2202                           ;gemsecs.c: 202:  return *t_link;
  2203                           ;stkvar	_t_link @ sp[(-4)+-1]
  2204  0042CE  0EFB               	movlw	-5
  2205  0042D0  50E3               	movf	plusw1,w,c
  2206  0042D2  6ED9               	movwf	fsr2l,c
  2207  0042D4  6ADA               	clrf	fsr2h,c
  2208  0042D6  50DF               	movf	indf2,w,c
  2209  0042D8  6E3D               	movwf	btemp,c
  2210                           
  2211                           ; _t_protocol: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2212  0042DA  0EFB               	movlw	251
  2213  0042DC  26E1               	addwf	fsr1l,f,c
  2214  0042DE  0EFF               	movlw	255
  2215  0042E0  22E2               	addwfc	fsr1h,f,c
  2216  0042E2  0012               	return		;funcret
  2217  0042E4                     __end_of_t_protocol:
  2218                           	opt callstack 0
  2219                           
  2220 ;; *************** function _secs_II_message *****************
  2221 ;; Defined at:
  2222 ;;		line 244 in file "gemsecs.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  stream          1  [STACK] unsigned char 
  2225 ;;  function        1  [STACK] unsigned char 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  3  [STACK] struct response_type
  2230 ;; Registers used:
  2231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11
  2232 ;; Tracked objects:
  2233 ;;		On entry : 3F/0
  2234 ;;		On exit  : 3F/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2241 ;;Total ram usage:        0 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    3
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_t_protocol
  2248 ;; This function uses a reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text2
  2252  00449C                     __ptext2:
  2253                           	opt callstack 0
  2254  00449C                     _secs_II_message:
  2255                           	opt callstack 26
  2256                           
  2257                           ;gemsecs.c: 244: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 245: {;gemsecs.c: 246:  static response_type block;;gemsecs.c: 248:  V.abort = LINK_
      +                          ERROR_NONE;
  2258                           
  2259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2260                           ;incstack = 0
  2261  00449C  0100               	movlb	0	; () banked
  2262  00449E  6BD4               	clrf	(_V+75)& (0+255),b	;volatile
  2263                           
  2264                           ;gemsecs.c: 250:  switch (stream) {
  2265  0044A0  D067               	goto	l6119
  2266  0044A2                     l6053:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;gemsecs.c: 254:    block.header = (uint8_t*) & H12[0];
  2270  0044A2  0E92               	movlw	low _H12
  2271  0044A4  6E01               	movwf	secs_II_message@block,c
  2272  0044A6  0E01               	movlw	high _H12
  2273  0044A8  6E02               	movwf	secs_II_message@block+1,c
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;gemsecs.c: 255:    block.length = sizeof(header12);
  2277  0044AA  0E0F               	movlw	15
  2278  0044AC  D04F               	goto	L11
  2279  0044AE                     l6057:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;gemsecs.c: 258:    block.header = (uint8_t*) & H10[0];
  2283  0044AE  0E00               	movlw	low _H10
  2284  0044B0  6E01               	movwf	secs_II_message@block,c
  2285  0044B2  0E01               	movlw	high _H10
  2286  0044B4  6E02               	movwf	secs_II_message@block+1,c
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;gemsecs.c: 259:    block.length = sizeof(header10);
  2290  0044B6  0E0D               	movlw	13
  2291  0044B8  D049               	goto	L11
  2292  0044BA                     l6061:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;gemsecs.c: 262:    block.header = (uint8_t*) & H14[0];
  2296  0044BA  0E71               	movlw	low _H14
  2297  0044BC  6E01               	movwf	secs_II_message@block,c
  2298  0044BE  0E01               	movlw	high _H14
  2299  0044C0  6E02               	movwf	secs_II_message@block+1,c
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;gemsecs.c: 263:    block.length = sizeof(header14);
  2303  0044C2  0E11               	movlw	17
  2304  0044C4  D043               	goto	L11
  2305  0044C6                     l6065:
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;gemsecs.c: 266:    block.header = (uint8_t*) & H18[0];
  2309  0044C6  0E5C               	movlw	low _H18
  2310  0044C8  6E01               	movwf	secs_II_message@block,c
  2311  0044CA  0E01               	movlw	high _H18
  2312  0044CC  6E02               	movwf	secs_II_message@block+1,c
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;gemsecs.c: 267:    block.length = sizeof(header18);
  2316  0044CE  0E15               	movlw	21
  2317  0044D0  D03D               	goto	L11
  2318  0044D2                     l6069:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;gemsecs.c: 270:    block.header = (uint8_t*) & H10[2];
  2322  0044D2  0E1A               	movlw	low (_H10+26)
  2323  0044D4  6E01               	movwf	secs_II_message@block,c
  2324  0044D6  0E01               	movlw	high (_H10+26)
  2325  0044D8  6E02               	movwf	secs_II_message@block+1,c
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;gemsecs.c: 271:    block.length = sizeof(header10);
  2329  0044DA  0E0D               	movlw	13
  2330  0044DC  6E03               	movwf	secs_II_message@block+2,c
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;gemsecs.c: 272:    V.abort = LINK_ERROR_ABORT;
  2334  0044DE  0E07               	movlw	7
  2335  0044E0  6FD4               	movwf	(_V+75)& (0+255),b	;volatile
  2336                           
  2337                           ;gemsecs.c: 273:    break;
  2338  0044E2  D059               	goto	l6121
  2339  0044E4                     l6077:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;stkvar	_function @ sp[(0)+-2]
  2343  0044E4  0EFE               	movlw	-2
  2344  0044E6  50E3               	movf	plusw1,w,c
  2345  0044E8  6E47               	movwf	btemp+10,c
  2346  0044EA  6A48               	clrf	btemp+11,c
  2347                           
  2348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2349                           ; Switch size 1, requested type "simple"
  2350                           ; Number of cases is 1, Range of values is 0 to 0
  2351                           ; switch strategies available:
  2352                           ; Name         Instructions Cycles
  2353                           ; simple_byte            4     3 (average)
  2354                           ;	Chosen strategy is simple_byte
  2355  0044EC  5048               	movf	btemp+11,w,c
  2356  0044EE  0A00               	xorlw	0	; case 0
  2357  0044F0  A4D8               	btfss	status,2,c
  2358  0044F2  D7EF               	goto	l6069
  2359                           
  2360                           ; BSR set to: 0
  2361                           ; Switch size 1, requested type "simple"
  2362                           ; Number of cases is 4, Range of values is 1 to 4
  2363                           ; switch strategies available:
  2364                           ; Name         Instructions Cycles
  2365                           ; simple_byte           13     7 (average)
  2366                           ;	Chosen strategy is simple_byte
  2367  0044F4  5047               	movf	btemp+10,w,c
  2368  0044F6  0A01               	xorlw	1	; case 1
  2369  0044F8  B4D8               	btfsc	status,2,c
  2370  0044FA  D7D3               	goto	l6053
  2371  0044FC  0A03               	xorlw	3	; case 2
  2372  0044FE  B4D8               	btfsc	status,2,c
  2373  004500  D7D6               	goto	l6057
  2374  004502  0A01               	xorlw	1	; case 3
  2375  004504  B4D8               	btfsc	status,2,c
  2376  004506  D7D9               	goto	l6061
  2377  004508  0A07               	xorlw	7	; case 4
  2378  00450A  B4D8               	btfsc	status,2,c
  2379  00450C  D7DC               	goto	l6065
  2380  00450E  D7E1               	goto	l6069
  2381  004510                     l6079:
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;gemsecs.c: 279:    block.header = (uint8_t*) & H24[0];
  2385  004510  0E41               	movlw	low _H24
  2386  004512  6E01               	movwf	secs_II_message@block,c
  2387  004514  0E01               	movlw	high _H24
  2388  004516  6E02               	movwf	secs_II_message@block+1,c
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;gemsecs.c: 280:    block.length = sizeof(header24);
  2392  004518  0E1B               	movlw	27
  2393  00451A  D018               	goto	L11
  2394  00451C                     l6091:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;stkvar	_function @ sp[(0)+-2]
  2398  00451C  0EFE               	movlw	-2
  2399  00451E  50E3               	movf	plusw1,w,c
  2400  004520  6E47               	movwf	btemp+10,c
  2401  004522  6A48               	clrf	btemp+11,c
  2402                           
  2403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2404                           ; Switch size 1, requested type "simple"
  2405                           ; Number of cases is 1, Range of values is 0 to 0
  2406                           ; switch strategies available:
  2407                           ; Name         Instructions Cycles
  2408                           ; simple_byte            4     3 (average)
  2409                           ;	Chosen strategy is simple_byte
  2410  004524  5048               	movf	btemp+11,w,c
  2411  004526  0A00               	xorlw	0	; case 0
  2412  004528  A4D8               	btfss	status,2,c
  2413  00452A  D7D3               	goto	l6069
  2414                           
  2415                           ; BSR set to: 0
  2416                           ; Switch size 1, requested type "simple"
  2417                           ; Number of cases is 1, Range of values is 17 to 17
  2418                           ; switch strategies available:
  2419                           ; Name         Instructions Cycles
  2420                           ; simple_byte            4     3 (average)
  2421                           ;	Chosen strategy is simple_byte
  2422  00452C  5047               	movf	btemp+10,w,c
  2423  00452E  0A11               	xorlw	17	; case 17
  2424  004530  B4D8               	btfsc	status,2,c
  2425  004532  D7EE               	goto	l6079
  2426  004534  D7CE               	goto	l6069
  2427  004536                     l6093:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;gemsecs.c: 292:    block.header = (uint8_t*) & H13[0];
  2431  004536  0E82               	movlw	low _H13
  2432  004538  6E01               	movwf	secs_II_message@block,c
  2433  00453A  0E01               	movlw	high _H13
  2434  00453C  6E02               	movwf	secs_II_message@block+1,c
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;gemsecs.c: 293:    block.length = sizeof(header13);
  2438  00453E  0E10               	movlw	16
  2439  004540  D005               	goto	L11
  2440  004542                     l6097:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;gemsecs.c: 296:    block.header = (uint8_t*) & H53[0];
  2444  004542  0E86               	movlw	low _H53
  2445  004544  6E01               	movwf	secs_II_message@block,c
  2446  004546  0E03               	movlw	high _H53
  2447  004548  6E02               	movwf	secs_II_message@block+1,c
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;gemsecs.c: 297:    block.length = sizeof(header53);
  2451  00454A  0E38               	movlw	56
  2452  00454C                     L11:
  2453  00454C  6E03               	movwf	secs_II_message@block+2,c
  2454                           
  2455                           ;gemsecs.c: 298:    break;
  2456  00454E  D023               	goto	l6121
  2457  004550                     l6109:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;stkvar	_function @ sp[(0)+-2]
  2461  004550  0EFE               	movlw	-2
  2462  004552  50E3               	movf	plusw1,w,c
  2463  004554  6E47               	movwf	btemp+10,c
  2464  004556  6A48               	clrf	btemp+11,c
  2465                           
  2466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2467                           ; Switch size 1, requested type "simple"
  2468                           ; Number of cases is 1, Range of values is 0 to 0
  2469                           ; switch strategies available:
  2470                           ; Name         Instructions Cycles
  2471                           ; simple_byte            4     3 (average)
  2472                           ;	Chosen strategy is simple_byte
  2473  004558  5048               	movf	btemp+11,w,c
  2474  00455A  0A00               	xorlw	0	; case 0
  2475  00455C  A4D8               	btfss	status,2,c
  2476  00455E  D7B9               	goto	l6069
  2477                           
  2478                           ; BSR set to: 0
  2479                           ; Switch size 1, requested type "simple"
  2480                           ; Number of cases is 2, Range of values is 11 to 12
  2481                           ; switch strategies available:
  2482                           ; Name         Instructions Cycles
  2483                           ; simple_byte            7     4 (average)
  2484                           ;	Chosen strategy is simple_byte
  2485  004560  5047               	movf	btemp+10,w,c
  2486  004562  0A0B               	xorlw	11	; case 11
  2487  004564  B4D8               	btfsc	status,2,c
  2488  004566  D7E7               	goto	l6093
  2489  004568  0A07               	xorlw	7	; case 12
  2490  00456A  B4D8               	btfsc	status,2,c
  2491  00456C  D7EA               	goto	l6097
  2492  00456E  D7B1               	goto	l6069
  2493  004570                     l6119:
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;stkvar	_stream @ sp[(0)+-1]
  2497  004570  0EFF               	movlw	-1
  2498  004572  50E3               	movf	plusw1,w,c
  2499  004574  6E47               	movwf	btemp+10,c
  2500  004576  6A48               	clrf	btemp+11,c
  2501                           
  2502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2503                           ; Switch size 1, requested type "simple"
  2504                           ; Number of cases is 1, Range of values is 0 to 0
  2505                           ; switch strategies available:
  2506                           ; Name         Instructions Cycles
  2507                           ; simple_byte            4     3 (average)
  2508                           ;	Chosen strategy is simple_byte
  2509  004578  5048               	movf	btemp+11,w,c
  2510  00457A  0A00               	xorlw	0	; case 0
  2511  00457C  A4D8               	btfss	status,2,c
  2512  00457E  D7A9               	goto	l6069
  2513                           
  2514                           ; BSR set to: 0
  2515                           ; Switch size 1, requested type "simple"
  2516                           ; Number of cases is 3, Range of values is 1 to 6
  2517                           ; switch strategies available:
  2518                           ; Name         Instructions Cycles
  2519                           ; simple_byte           10     6 (average)
  2520                           ;	Chosen strategy is simple_byte
  2521  004580  5047               	movf	btemp+10,w,c
  2522  004582  0A01               	xorlw	1	; case 1
  2523  004584  B4D8               	btfsc	status,2,c
  2524  004586  D7AE               	goto	l6077
  2525  004588  0A03               	xorlw	3	; case 2
  2526  00458A  B4D8               	btfsc	status,2,c
  2527  00458C  D7C7               	goto	l6091
  2528  00458E  0A04               	xorlw	4	; case 6
  2529  004590  B4D8               	btfsc	status,2,c
  2530  004592  D7DE               	goto	l6109
  2531  004594  D79E               	goto	l6069
  2532  004596                     l6121:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;gemsecs.c: 313:  return(block);
  2536  004596  0060  F004  F03D   	movff	secs_II_message@block,btemp
  2537  00459C  0060  F008  F03E   	movff	secs_II_message@block+1,btemp+1
  2538  0045A2  0060  F00C  F03F   	movff	secs_II_message@block+2,btemp+2
  2539                           
  2540                           ; BSR set to: 0
  2541                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2542  0045A8  52E5               	movf	postdec1,f,c
  2543  0045AA  52E5               	movf	postdec1,f,c
  2544  0045AC  0012               	return		;funcret
  2545  0045AE                     __end_of_secs_II_message:
  2546                           	opt callstack 0
  2547                           
  2548 ;; *************** function _sprintf *****************
  2549 ;; Defined at:
  2550 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  s               1  [STACK] PTR unsigned char 
  2553 ;;		 -> V(80), 
  2554 ;;  fmt             1  [STACK] PTR const unsigned char 
  2555 ;;		 -> STR_5(23), STR_4(6), STR_3(14), STR_2(12), 
  2556 ;;		 -> STR_1(61), 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  f               5  [STACK] struct _IO_FILE
  2559 ;;  ap              2  [STACK] PTR void [1]
  2560 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2561 ;;  ret             2    0        int 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  2  [STACK] int 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/1
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:   11
  2578 ;; This function calls:
  2579 ;;		_vfprintf
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text3
  2586  00497E                     __ptext3:
  2587                           	opt callstack 0
  2588  00497E                     _sprintf:
  2589                           	opt callstack 0
  2590                           
  2591                           ; BSR set to: 0
  2592                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  2593  00497E  0E07               	movlw	7
  2594  004980  26E1               	addwf	fsr1l,f,c
  2595  004982  0E00               	movlw	0
  2596  004984  22E2               	addwfc	fsr1h,f,c
  2597                           
  2598                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  2599                           
  2600                           ;incstack = 0
  2601  004986  0EF6               	movlw	246
  2602  004988  24E1               	addwf	fsr1l,w,c
  2603  00498A  6E47               	movwf	btemp+10,c
  2604  00498C  0EFF               	movlw	255
  2605  00498E  20E2               	addwfc	fsr1h,w,c
  2606  004990  6E48               	movwf	btemp+11,c
  2607                           
  2608                           ;stkvar	_ap @ sp[(-7)+5]
  2609  004992  0EFF               	movlw	-1
  2610  004994  0060  F123  FFE3   	movff	btemp+11,plusw1
  2611  00499A  0EFE               	movlw	-2
  2612  00499C  0060  F11F  FFE3   	movff	btemp+10,plusw1
  2613                           
  2614                           ;stkvar	_s @ sp[(-7)+-2]
  2615  0049A2  0EF7               	movlw	-9
  2616  0049A4  006F FF8C  F048    	movff	plusw1,btemp+11
  2617                           
  2618                           ;stkvar	_f @ sp[(-7)+0]
  2619  0049AA  0EF9               	movlw	-7
  2620  0049AC  0060  F123  FFE3   	movff	btemp+11,plusw1
  2621                           
  2622                           ;stkvar	_f @ sp[(-7)+0]
  2623  0049B2  0EFA               	movlw	250
  2624  0049B4  24E1               	addwf	fsr1l,w,c
  2625  0049B6  6ED9               	movwf	fsr2l,c
  2626  0049B8  0EFF               	movlw	255
  2627  0049BA  20E2               	addwfc	fsr1h,w,c
  2628  0049BC  6EDA               	movwf	fsr2h,c
  2629  0049BE  0E00               	movlw	0
  2630  0049C0  6EDE               	movwf	postinc2,c
  2631  0049C2  0E00               	movlw	0
  2632  0049C4  6EDD               	movwf	postdec2,c
  2633                           
  2634                           ;stkvar	_f @ sp[(-7)+0]
  2635  0049C6  0EFC               	movlw	252
  2636  0049C8  24E1               	addwf	fsr1l,w,c
  2637  0049CA  6ED9               	movwf	fsr2l,c
  2638  0049CC  0EFF               	movlw	255
  2639  0049CE  20E2               	addwfc	fsr1h,w,c
  2640  0049D0  6EDA               	movwf	fsr2h,c
  2641  0049D2  0E00               	movlw	0
  2642  0049D4  6EDE               	movwf	postinc2,c
  2643  0049D6  0E00               	movlw	0
  2644  0049D8  6EDD               	movwf	postdec2,c
  2645                           
  2646                           ;stkvar	_ap @ sp[(-7)+5]
  2647  0049DA  0EFE               	movlw	254
  2648  0049DC  24E1               	addwf	fsr1l,w,c
  2649  0049DE  6E3D               	movwf	btemp,c
  2650  0049E0  0EFF               	movlw	255
  2651  0049E2  20E2               	addwfc	fsr1h,w,c
  2652  0049E4  6E3E               	movwf	btemp+1,c
  2653  0049E6  0060  F0F7  FFE6   	movff	btemp,postinc1
  2654  0049EC  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  2655                           
  2656                           ;stkvar	_fmt @ sp[(-9)+-3]
  2657  0049F2  0EF4               	movlw	-12
  2658  0049F4  50E3               	movf	plusw1,w,c
  2659  0049F6  6EE6               	movwf	postinc1,c
  2660                           
  2661                           ;stkvar	_f @ sp[(-10)+0]
  2662  0049F8  0EF6               	movlw	246
  2663  0049FA  24E1               	addwf	fsr1l,w,c
  2664  0049FC  6E3D               	movwf	btemp,c
  2665  0049FE  0EFF               	movlw	255
  2666  004A00  20E2               	addwfc	fsr1h,w,c
  2667  004A02  6E3E               	movwf	btemp+1,c
  2668  004A04  0060  F0F7  FFE6   	movff	btemp,postinc1
  2669  004A0A  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  2670  004A10  ECC6  F026         	call	_vfprintf	;wreg free
  2671                           
  2672                           ;stkvar	_f @ sp[(-7)+0]
  2673  004A14  0EFA               	movlw	250
  2674  004A16  24E1               	addwf	fsr1l,w,c
  2675  004A18  6ED9               	movwf	fsr2l,c
  2676  004A1A  0EFF               	movlw	255
  2677  004A1C  20E2               	addwfc	fsr1h,w,c
  2678  004A1E  6EDA               	movwf	fsr2h,c
  2679  004A20  50DF               	movf	indf2,w,c
  2680  004A22  6E48               	movwf	btemp+11,c
  2681                           
  2682                           ;stkvar	_s @ sp[(-7)+-2]
  2683  004A24  0EF7               	movlw	-9
  2684  004A26  50E3               	movf	plusw1,w,c
  2685  004A28  2448               	addwf	btemp+11,w,c
  2686  004A2A  6ED9               	movwf	fsr2l,c
  2687  004A2C  6ADA               	clrf	fsr2h,c
  2688  004A2E  0E00               	movlw	0
  2689  004A30  6EDF               	movwf	indf2,c
  2690                           
  2691                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, args
      +                          ize = 2, vargsize = 0
  2692  004A32  0EF9               	movlw	249
  2693  004A34  26E1               	addwf	fsr1l,f,c
  2694  004A36  0EFF               	movlw	255
  2695  004A38  22E2               	addwfc	fsr1h,f,c
  2696  004A3A  52E5               	movf	postdec1,f,c
  2697  004A3C  50E7               	movf	indf1,w,c
  2698  004A3E  5EE1               	subwf	fsr1l,f,c
  2699  004A40  0E00               	movlw	0
  2700  004A42  5AE2               	subwfb	fsr1h,f,c
  2701  004A44  0012               	return		;funcret
  2702  004A46                     __end_of_sprintf:
  2703                           	opt callstack 0
  2704                           
  2705 ;; *************** function _r_protocol *****************
  2706 ;; Defined at:
  2707 ;;		line 40 in file "gemsecs.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  r_link          1  [STACK] PTR enum E16164
  2710 ;;		 -> V(80), 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  rxData          1  [STACK] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1  [STACK] enum E16902
  2715 ;; Registers used:
  2716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    5
  2729 ;; This function calls:
  2730 ;;		_StartTimer
  2731 ;;		_TimerDone
  2732 ;;		_UART1_Read
  2733 ;;		_UART1_Write
  2734 ;;		_UART1_is_rx_ready
  2735 ;;		_WaitMs
  2736 ;;		_run_checksum
  2737 ;;		_secs_send
  2738 ;; This function is called by:
  2739 ;;		_main
  2740 ;; This function uses a reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text4
  2744  0039DA                     __ptext4:
  2745                           	opt callstack 0
  2746  0039DA                     _r_protocol:
  2747                           	opt callstack 0
  2748                           
  2749                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2750  0039DA  52E6               	movf	postinc1,f,c
  2751                           
  2752                           ;gemsecs.c: 40: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 41: {;gemsecs.c: 
      +                          42:  uint8_t rxData;;gemsecs.c: 43:  static uint8_t rxData_l = 0;;gemsecs.c: 45:  switch
      +                           (*r_link) {
  2753                           
  2754                           ;incstack = 0
  2755  0039DC  D113               	goto	l7667
  2756  0039DE                     l7583:
  2757                           
  2758                           ;gemsecs.c: 47:   if (UART1_is_rx_ready()) {
  2759  0039DE  EC41  F02F         	call	_UART1_is_rx_ready	;wreg free
  2760  0039E2  503D               	movf	btemp,w,c
  2761  0039E4  B4D8               	btfsc	status,2,c
  2762  0039E6  D12F               	goto	l7669
  2763                           
  2764                           ;gemsecs.c: 48:    rxData = UART1_Read();
  2765  0039E8  EC51  F02B         	call	_UART1_Read	;wreg free
  2766                           
  2767                           ;stkvar	_rxData @ sp[(-1)+0]
  2768  0039EC  0EFF               	movlw	-1
  2769  0039EE  0060  F0F7  FFE3   	movff	btemp,plusw1
  2770                           
  2771                           ; BSR set to: 57
  2772                           ;gemsecs.c: 49:    if (rxData == 0x05) {
  2773                           ;stkvar	_rxData @ sp[(-1)+0]
  2774  0039F4  0EFF               	movlw	-1
  2775  0039F6  006F FF8C  F03D    	movff	plusw1,btemp
  2776  0039FC  0E05               	movlw	5
  2777  0039FE  183D               	xorwf	btemp,w,c
  2778  003A00  A4D8               	btfss	status,2,c
  2779  003A02  D121               	goto	l7669
  2780                           
  2781                           ; BSR set to: 57
  2782                           ;gemsecs.c: 50:     V.error = LINK_ERROR_NONE;
  2783  003A04  0100               	movlb	0	; () banked
  2784  003A06  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;gemsecs.c: 51:     *r_link = LINK_STATE_ENQ;
  2788                           ;stkvar	_r_link @ sp[(-1)+-1]
  2789  003A08  0EFE               	movlw	-2
  2790  003A0A  50E3               	movf	plusw1,w,c
  2791  003A0C  6ED9               	movwf	fsr2l,c
  2792  003A0E  6ADA               	clrf	fsr2h,c
  2793  003A10  0E01               	movlw	1
  2794  003A12  D0F6               	goto	L16
  2795  003A14                     l1504:
  2796                           
  2797                           ;gemsecs.c: 56:   rxData_l = 0;
  2798  003A14  6A30               	clrf	r_protocol@rxData_l,c
  2799                           
  2800                           ;gemsecs.c: 57:   UART1_Write(0x04);
  2801  003A16  0E04               	movlw	4
  2802  003A18  6EE6               	movwf	postinc1,c
  2803  003A1A  EC32  F02B         	call	_UART1_Write	;wreg free
  2804                           
  2805                           ; BSR set to: 57
  2806                           ;gemsecs.c: 58:   StartTimer(TMR_T2, 2000);
  2807  003A1E  0ED0               	movlw	208
  2808  003A20  6EE6               	movwf	postinc1,c
  2809  003A22  0E07               	movlw	7
  2810  003A24  6EE6               	movwf	postinc1,c
  2811  003A26  0E02               	movlw	2
  2812  003A28  6EE6               	movwf	postinc1,c
  2813  003A2A  EC70  F02B         	call	_StartTimer	;wreg free
  2814                           
  2815                           ;gemsecs.c: 59:   *r_link = LINK_STATE_EOT;
  2816                           ;stkvar	_r_link @ sp[(-1)+-1]
  2817  003A2E  0EFE               	movlw	-2
  2818  003A30  50E3               	movf	plusw1,w,c
  2819  003A32  6ED9               	movwf	fsr2l,c
  2820  003A34  6ADA               	clrf	fsr2h,c
  2821  003A36  0E02               	movlw	2
  2822  003A38  6EDF               	movwf	indf2,c
  2823                           
  2824                           ;gemsecs.c: 61:   WaitMs(5);
  2825  003A3A  0E05               	movlw	5
  2826  003A3C  6EE6               	movwf	postinc1,c
  2827  003A3E  0E00               	movlw	0
  2828  003A40  6EE6               	movwf	postinc1,c
  2829  003A42  EC46  F02C         	call	_WaitMs	;wreg free
  2830                           
  2831                           ;gemsecs.c: 62:   secs_send((uint8_t*) & H10[3], sizeof(header10), 1);
  2832  003A46  0E01               	movlw	1
  2833  003A48  6EE6               	movwf	postinc1,c
  2834  003A4A  0E0D               	movlw	13
  2835  003A4C  6EE6               	movwf	postinc1,c
  2836  003A4E  0E27               	movlw	low (_H10+39)
  2837  003A50  6EE6               	movwf	postinc1,c
  2838  003A52  0E01               	movlw	high (_H10+39)
  2839  003A54  6EE6               	movwf	postinc1,c
  2840  003A56  EC72  F021         	call	_secs_send	;wreg free
  2841                           
  2842                           ;gemsecs.c: 64:   break;
  2843  003A5A  D0F5               	goto	l7669
  2844  003A5C                     l7603:
  2845                           
  2846                           ;gemsecs.c: 66:   if (TimerDone(TMR_T2)) {
  2847  003A5C  0E02               	movlw	2
  2848  003A5E  6EE6               	movwf	postinc1,c
  2849  003A60  EC01  F02E         	call	_TimerDone	;wreg free
  2850  003A64  503D               	movf	btemp,w,c
  2851  003A66  B4D8               	btfsc	status,2,c
  2852  003A68  D009               	goto	l7609
  2853                           
  2854                           ;gemsecs.c: 67:    V.error = LINK_ERROR_T2;
  2855  003A6A  0E02               	movlw	2
  2856  003A6C  0100               	movlb	0	; () banked
  2857  003A6E  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;gemsecs.c: 68:    *r_link = LINK_STATE_NAK;
  2861                           ;stkvar	_r_link @ sp[(-1)+-1]
  2862  003A70  0EFE               	movlw	-2
  2863  003A72  50E3               	movf	plusw1,w,c
  2864  003A74  6ED9               	movwf	fsr2l,c
  2865  003A76  6ADA               	clrf	fsr2h,c
  2866  003A78  0E05               	movlw	5
  2867  003A7A  D0C2               	goto	L16
  2868  003A7C                     l7609:
  2869                           
  2870                           ;gemsecs.c: 70:    if (UART1_is_rx_ready()) {
  2871  003A7C  EC41  F02F         	call	_UART1_is_rx_ready	;wreg free
  2872  003A80  503D               	movf	btemp,w,c
  2873  003A82  B4D8               	btfsc	status,2,c
  2874  003A84  D0E0               	goto	l7669
  2875                           
  2876                           ;gemsecs.c: 71:     rxData = UART1_Read();
  2877  003A86  EC51  F02B         	call	_UART1_Read	;wreg free
  2878                           
  2879                           ;stkvar	_rxData @ sp[(-1)+0]
  2880  003A8A  0EFF               	movlw	-1
  2881  003A8C  0060  F0F7  FFE3   	movff	btemp,plusw1
  2882                           
  2883                           ; BSR set to: 57
  2884                           ;gemsecs.c: 72:     if (rxData_l == 0) {
  2885  003A92  5030               	movf	r_protocol@rxData_l,w,c
  2886  003A94  A4D8               	btfss	status,2,c
  2887  003A96  D00C               	goto	l7621
  2888                           
  2889                           ; BSR set to: 57
  2890                           ;gemsecs.c: 73:      r_block.length = rxData;
  2891                           ;stkvar	_rxData @ sp[(-1)+0]
  2892  003A98  0EFF               	movlw	-1
  2893  003A9A  006F FF8C  F06C    	movff	plusw1,_r_block+12
  2894                           
  2895                           ; BSR set to: 57
  2896                           ;gemsecs.c: 74:      run_checksum(0, 1);
  2897  003AA0  0E01               	movlw	1
  2898  003AA2  6EE6               	movwf	postinc1,c
  2899  003AA4  0E00               	movlw	0
  2900  003AA6  6EE6               	movwf	postinc1,c
  2901  003AA8  EC71  F02C         	call	_run_checksum	;wreg free
  2902                           
  2903                           ;gemsecs.c: 75:      rxData_l++;
  2904  003AAC  2A30               	incf	r_protocol@rxData_l,f,c
  2905                           
  2906                           ;gemsecs.c: 76:     } else {
  2907  003AAE  D0CB               	goto	l7669
  2908  003AB0                     l7621:
  2909                           
  2910                           ; BSR set to: 57
  2911                           ;gemsecs.c: 80:      if (rxData_l <= 10)
  2912  003AB0  0E0B               	movlw	11
  2913  003AB2  6030               	cpfslt	r_protocol@rxData_l,c
  2914  003AB4  D018               	goto	l7625
  2915                           
  2916                           ; BSR set to: 57
  2917                           ;gemsecs.c: 81:       H10[1].block.b[r_block.length - rxData_l] = rxData;
  2918                           ;stkvar	_rxData @ sp[(-1)+0]
  2919  003AB6  0E00               	movlw	low _H10
  2920  003AB8  6E47               	movwf	btemp+10,c
  2921  003ABA  0E01               	movlw	high _H10
  2922  003ABC  6E48               	movwf	btemp+11,c
  2923  003ABE  0E0F               	movlw	15
  2924  003AC0  2647               	addwf	btemp+10,f,c
  2925  003AC2  0E00               	movlw	0
  2926  003AC4  2248               	addwfc	btemp+11,f,c
  2927  003AC6  0100               	movlb	0	; () banked
  2928  003AC8  516C               	movf	(_r_block+12)& (0+255),w,b
  2929  003ACA  2647               	addwf	btemp+10,f,c
  2930  003ACC  0E00               	movlw	0
  2931  003ACE  2248               	addwfc	btemp+11,f,c
  2932  003AD0  5030               	movf	r_protocol@rxData_l,w,c
  2933  003AD2  5C47               	subwf	btemp+10,w,c
  2934  003AD4  6ED9               	movwf	fsr2l,c
  2935  003AD6  5048               	movf	btemp+11,w,c
  2936  003AD8  A0D8               	btfss	status,0,c
  2937  003ADA  0448               	decf	btemp+11,w,c
  2938  003ADC  6EDA               	movwf	fsr2h,c
  2939  003ADE  0EFF               	movlw	-1
  2940  003AE0  006F FF8F FFDF     	movff	plusw1,indf2
  2941  003AE6                     l7625:
  2942                           
  2943                           ;gemsecs.c: 82:      if (rxData_l <= r_block.length)
  2944  003AE6  5030               	movf	r_protocol@rxData_l,w,c
  2945  003AE8  0100               	movlb	0	; () banked
  2946  003AEA  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  2947  003AEC  A0D8               	btfss	status,0,c
  2948  003AEE  D00D               	goto	l7629
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;gemsecs.c: 83:       V.r_checksum = run_checksum(rxData, 0);
  2952  003AF0  0E00               	movlw	0
  2953  003AF2  6EE6               	movwf	postinc1,c
  2954                           
  2955                           ;stkvar	_rxData @ sp[(-2)+0]
  2956  003AF4  0EFE               	movlw	-2
  2957  003AF6  50E3               	movf	plusw1,w,c
  2958  003AF8  6EE6               	movwf	postinc1,c
  2959  003AFA  EC71  F02C         	call	_run_checksum	;wreg free
  2960  003AFE  0060  F0F4  F0D5   	movff	btemp,_V+76	;volatile
  2961  003B04  0060  F0F8  F0D6   	movff	btemp+1,_V+77	;volatile
  2962  003B0A                     l7629:
  2963                           
  2964                           ;gemsecs.c: 85:      if (rxData_l == r_block.length + 1)
  2965  003B0A  5030               	movf	r_protocol@rxData_l,w,c
  2966  003B0C  6E47               	movwf	btemp+10,c
  2967  003B0E  6A48               	clrf	btemp+11,c
  2968  003B10  0100               	movlb	0	; () banked
  2969  003B12  516C               	movf	(_r_block+12)& (0+255),w,b
  2970  003B14  6E45               	movwf	btemp+8,c
  2971  003B16  6A46               	clrf	btemp+9,c
  2972  003B18  0E01               	movlw	1
  2973  003B1A  2645               	addwf	btemp+8,f,c
  2974  003B1C  0E00               	movlw	0
  2975  003B1E  2246               	addwfc	btemp+9,f,c
  2976  003B20  5047               	movf	btemp+10,w,c
  2977  003B22  1845               	xorwf	btemp+8,w,c
  2978  003B24  E109               	bnz	l7633
  2979  003B26  5048               	movf	btemp+11,w,c
  2980  003B28  1846               	xorwf	btemp+9,w,c
  2981  003B2A  A4D8               	btfss	status,2,c
  2982  003B2C  D005               	goto	l7633
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;gemsecs.c: 86:       H10[1].checksum = (uint16_t) rxData << 8;
  2986                           ;stkvar	_rxData @ sp[(-1)+0]
  2987  003B2E  0EFF               	movlw	-1
  2988  003B30  50E3               	movf	plusw1,w,c
  2989  003B32  0101               	movlb	1	; () banked
  2990  003B34  6F0E               	movwf	(_H10+14)& (0+255),b
  2991  003B36  6B0D               	clrf	(_H10+13)& (0+255),b
  2992  003B38                     l7633:
  2993                           
  2994                           ;gemsecs.c: 87:      if (rxData_l == r_block.length + 2)
  2995  003B38  5030               	movf	r_protocol@rxData_l,w,c
  2996  003B3A  6E47               	movwf	btemp+10,c
  2997  003B3C  6A48               	clrf	btemp+11,c
  2998  003B3E  0100               	movlb	0	; () banked
  2999  003B40  516C               	movf	(_r_block+12)& (0+255),w,b
  3000  003B42  6E45               	movwf	btemp+8,c
  3001  003B44  6A46               	clrf	btemp+9,c
  3002  003B46  0E02               	movlw	2
  3003  003B48  2645               	addwf	btemp+8,f,c
  3004  003B4A  0E00               	movlw	0
  3005  003B4C  2246               	addwfc	btemp+9,f,c
  3006  003B4E  5047               	movf	btemp+10,w,c
  3007  003B50  1845               	xorwf	btemp+8,w,c
  3008  003B52  E10A               	bnz	l7637
  3009  003B54  5048               	movf	btemp+11,w,c
  3010  003B56  1846               	xorwf	btemp+9,w,c
  3011  003B58  A4D8               	btfss	status,2,c
  3012  003B5A  D006               	goto	l7637
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;gemsecs.c: 88:       H10[1].checksum += rxData;
  3016                           ;stkvar	_rxData @ sp[(-1)+0]
  3017  003B5C  0EFF               	movlw	-1
  3018  003B5E  50E3               	movf	plusw1,w,c
  3019  003B60  0101               	movlb	1	; () banked
  3020  003B62  270D               	addwf	(_H10+13)& (0+255),f,b
  3021  003B64  0E00               	movlw	0
  3022  003B66  230E               	addwfc	(_H10+14)& (0+255),f,b
  3023  003B68                     l7637:
  3024                           
  3025                           ;gemsecs.c: 90:      rxData_l++;
  3026  003B68  2A30               	incf	r_protocol@rxData_l,f,c
  3027                           
  3028                           ;gemsecs.c: 91:      if (rxData_l > (r_block.length + 2)) {
  3029  003B6A  5030               	movf	r_protocol@rxData_l,w,c
  3030  003B6C  6E47               	movwf	btemp+10,c
  3031  003B6E  6A48               	clrf	btemp+11,c
  3032  003B70  0100               	movlb	0	; () banked
  3033  003B72  516C               	movf	(_r_block+12)& (0+255),w,b
  3034  003B74  6E45               	movwf	btemp+8,c
  3035  003B76  6A46               	clrf	btemp+9,c
  3036  003B78  0E02               	movlw	2
  3037  003B7A  2645               	addwf	btemp+8,f,c
  3038  003B7C  0E00               	movlw	0
  3039  003B7E  2246               	addwfc	btemp+9,f,c
  3040  003B80  5047               	movf	btemp+10,w,c
  3041  003B82  5C45               	subwf	btemp+8,w,c
  3042  003B84  5046               	movf	btemp+9,w,c
  3043  003B86  0A80               	xorlw	128
  3044  003B88  6E3D               	movwf	btemp,c
  3045  003B8A  5048               	movf	btemp+11,w,c
  3046  003B8C  0A80               	xorlw	128
  3047  003B8E  583D               	subwfb	btemp,w,c
  3048  003B90  B0D8               	btfsc	status,0,c
  3049  003B92  D059               	goto	l7669
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;gemsecs.c: 92:       if (V.r_checksum == H10[1].checksum) {
  3053  003B94  0101               	movlb	1	; () banked
  3054  003B96  510D               	movf	(_H10+13)& (0+255),w,b
  3055  003B98  0100               	movlb	0	; () banked
  3056  003B9A  19D5               	xorwf	(_V+76)& (0+255),w,b	;volatile
  3057  003B9C  E10C               	bnz	l7645
  3058  003B9E  0101               	movlb	1	; () banked
  3059  003BA0  510E               	movf	(_H10+14)& (0+255),w,b
  3060  003BA2  0100               	movlb	0	; () banked
  3061  003BA4  19D6               	xorwf	(_V+77)& (0+255),w,b	;volatile
  3062  003BA6  A4D8               	btfss	status,2,c
  3063  003BA8  D006               	goto	l7645
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;gemsecs.c: 93:        *r_link = LINK_STATE_ACK;
  3067                           ;stkvar	_r_link @ sp[(-1)+-1]
  3068  003BAA  0EFE               	movlw	-2
  3069  003BAC  50E3               	movf	plusw1,w,c
  3070  003BAE  6ED9               	movwf	fsr2l,c
  3071  003BB0  6ADA               	clrf	fsr2h,c
  3072  003BB2  0E03               	movlw	3
  3073  003BB4  D025               	goto	L16
  3074  003BB6                     l7645:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;gemsecs.c: 95:        V.error = LINK_ERROR_CHECKSUM;
  3078  003BB6  0E05               	movlw	5
  3079  003BB8  D75A               	goto	L15
  3080  003BBA                     l7649:
  3081                           
  3082                           ;gemsecs.c: 104:   V.stream = H10[1].block.block.stream;
  3083  003BBA  0101               	movlb	1	; () banked
  3084  003BBC  5116               	movf	(_H10+22)& (0+255),w,b
  3085  003BBE  0B7F               	andlw	127
  3086  003BC0  0100               	movlb	0	; () banked
  3087  003BC2  6FD1               	movwf	(_V+72)& (0+255),b	;volatile
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;gemsecs.c: 105:   V.function = H10[1].block.block.function;
  3091  003BC4  C115  F0D2         	movff	_H10+21,_V+73	;volatile
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;gemsecs.c: 106:   UART1_Write(0x06);
  3095  003BC8  0E06               	movlw	6
  3096  003BCA  6EE6               	movwf	postinc1,c
  3097  003BCC  EC32  F02B         	call	_UART1_Write	;wreg free
  3098                           
  3099                           ; BSR set to: 57
  3100                           ;gemsecs.c: 107:   *r_link = LINK_STATE_DONE;
  3101                           ;stkvar	_r_link @ sp[(-1)+-1]
  3102  003BD0  0EFE               	movlw	-2
  3103  003BD2  50E3               	movf	plusw1,w,c
  3104  003BD4  6ED9               	movwf	fsr2l,c
  3105  003BD6  6ADA               	clrf	fsr2h,c
  3106  003BD8  0E04               	movlw	4
  3107  003BDA  D012               	goto	L16
  3108  003BDC                     l7657:
  3109                           
  3110                           ;gemsecs.c: 110:   *r_link = LINK_STATE_ERROR;
  3111                           ;stkvar	_r_link @ sp[(-1)+-1]
  3112  003BDC  0EFE               	movlw	-2
  3113  003BDE  50E3               	movf	plusw1,w,c
  3114  003BE0  6ED9               	movwf	fsr2l,c
  3115  003BE2  6ADA               	clrf	fsr2h,c
  3116  003BE4  0E06               	movlw	6
  3117  003BE6  6EDF               	movwf	indf2,c
  3118                           
  3119                           ;gemsecs.c: 111:   while ((uart1RxCount)) {
  3120  003BE8  D002               	goto	l7661
  3121  003BEA                     l7659:
  3122                           
  3123                           ;gemsecs.c: 112:    UART1_Read();
  3124  003BEA  EC51  F02B         	call	_UART1_Read	;wreg free
  3125  003BEE                     l7661:
  3126                           
  3127                           ;gemsecs.c: 111:   while ((uart1RxCount)) {
  3128  003BEE  5037               	movf	_uart1RxCount,w,c	;volatile
  3129  003BF0  B4D8               	btfsc	status,2,c
  3130  003BF2  D029               	goto	l7669
  3131  003BF4  D7FA               	goto	l7659
  3132  003BF6                     l7663:
  3133                           
  3134                           ;gemsecs.c: 119:   *r_link = LINK_STATE_IDLE;
  3135                           ;stkvar	_r_link @ sp[(-1)+-1]
  3136  003BF6  0EFE               	movlw	-2
  3137  003BF8  50E3               	movf	plusw1,w,c
  3138  003BFA  6ED9               	movwf	fsr2l,c
  3139  003BFC  6ADA               	clrf	fsr2h,c
  3140  003BFE  0E00               	movlw	0
  3141  003C00                     L16:
  3142  003C00  6EDF               	movwf	indf2,c
  3143                           
  3144                           ;gemsecs.c: 120:   break;
  3145  003C02  D021               	goto	l7669
  3146  003C04                     l7667:
  3147                           
  3148                           ;stkvar	_r_link @ sp[(-1)+-1]
  3149  003C04  0EFE               	movlw	-2
  3150  003C06  50E3               	movf	plusw1,w,c
  3151  003C08  6ED9               	movwf	fsr2l,c
  3152  003C0A  6ADA               	clrf	fsr2h,c
  3153  003C0C  50DF               	movf	indf2,w,c
  3154  003C0E  6E47               	movwf	btemp+10,c
  3155  003C10  6A48               	clrf	btemp+11,c
  3156                           
  3157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3158                           ; Switch size 1, requested type "simple"
  3159                           ; Number of cases is 1, Range of values is 0 to 0
  3160                           ; switch strategies available:
  3161                           ; Name         Instructions Cycles
  3162                           ; simple_byte            4     3 (average)
  3163                           ;	Chosen strategy is simple_byte
  3164  003C12  5048               	movf	btemp+11,w,c
  3165  003C14  0A00               	xorlw	0	; case 0
  3166  003C16  A4D8               	btfss	status,2,c
  3167  003C18  D7EE               	goto	l7663
  3168                           
  3169                           ; Switch size 1, requested type "simple"
  3170                           ; Number of cases is 7, Range of values is 0 to 6
  3171                           ; switch strategies available:
  3172                           ; Name         Instructions Cycles
  3173                           ; simple_byte           22    12 (average)
  3174                           ;	Chosen strategy is simple_byte
  3175  003C1A  5047               	movf	btemp+10,w,c
  3176  003C1C  0A00               	xorlw	0	; case 0
  3177  003C1E  B4D8               	btfsc	status,2,c
  3178  003C20  D6DE               	goto	l7583
  3179  003C22  0A01               	xorlw	1	; case 1
  3180  003C24  B4D8               	btfsc	status,2,c
  3181  003C26  D6F6               	goto	l1504
  3182  003C28  0A03               	xorlw	3	; case 2
  3183  003C2A  B4D8               	btfsc	status,2,c
  3184  003C2C  D717               	goto	l7603
  3185  003C2E  0A01               	xorlw	1	; case 3
  3186  003C30  B4D8               	btfsc	status,2,c
  3187  003C32  D7C3               	goto	l7649
  3188  003C34  0A07               	xorlw	7	; case 4
  3189  003C36  B4D8               	btfsc	status,2,c
  3190  003C38  D7DE               	goto	l7663
  3191  003C3A  0A01               	xorlw	1	; case 5
  3192  003C3C  B4D8               	btfsc	status,2,c
  3193  003C3E  D7CE               	goto	l7657
  3194  003C40  0A03               	xorlw	3	; case 6
  3195  003C42  A4D8               	btfss	status,2,c
  3196  003C44  D7D8               	goto	l7663
  3197  003C46                     l7669:
  3198                           
  3199                           ;gemsecs.c: 123:  return *r_link;
  3200                           ;stkvar	_r_link @ sp[(-1)+-1]
  3201  003C46  0EFE               	movlw	-2
  3202  003C48  50E3               	movf	plusw1,w,c
  3203  003C4A  6ED9               	movwf	fsr2l,c
  3204  003C4C  6ADA               	clrf	fsr2h,c
  3205  003C4E  50DF               	movf	indf2,w,c
  3206  003C50  6E3D               	movwf	btemp,c
  3207                           
  3208                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3209  003C52  52E5               	movf	postdec1,f,c
  3210  003C54  52E5               	movf	postdec1,f,c
  3211  003C56  0012               	return		;funcret
  3212  003C58                     __end_of_r_protocol:
  3213                           	opt callstack 0
  3214                           
  3215 ;; *************** function _secs_send *****************
  3216 ;; Defined at:
  3217 ;;		line 206 in file "gemsecs.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  byte_block      2  [STACK] PTR unsigned char 
  3220 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3221 ;;		 -> H13(16), H12(15), H10(65), 
  3222 ;;  length          1  [STACK] unsigned char 
  3223 ;;  fake            1  [STACK] _Bool 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  k               2  [STACK] PTR unsigned char 
  3226 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3227 ;;		 -> H13(16), H12(15), H10(65), 
  3228 ;;  checksum        2  [STACK] unsigned short 
  3229 ;;  i               1  [STACK] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1  [STACK] _Bool 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    4
  3246 ;; This function calls:
  3247 ;;		_UART1_Write
  3248 ;;		_UART1_is_tx_ready
  3249 ;;		_UART1_put_buffer
  3250 ;;		_block_checksum
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;;		_r_protocol
  3254 ;;		_t_protocol
  3255 ;; This function uses a reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text5
  3259  0042E4                     __ptext5:
  3260                           	opt callstack 0
  3261  0042E4                     _secs_send:
  3262                           	opt callstack 0
  3263                           
  3264                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3265  0042E4  0E05               	movlw	5
  3266  0042E6  26E1               	addwf	fsr1l,f,c
  3267  0042E8  0E00               	movlw	0
  3268  0042EA  22E2               	addwfc	fsr1h,f,c
  3269                           
  3270                           ;gemsecs.c: 206: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 207: {;gemsecs.c: 208:  uint8_t i, *k;;gemsecs.c: 209:  uint16_t checksum;;gemsecs.
      +                          c: 211:  k = (uint8_t *) byte_block;
  3271                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3272                           
  3273                           ;incstack = 0
  3274  0042EC  0EF9               	movlw	-7
  3275  0042EE  006F FF8C  F047    	movff	plusw1,btemp+10
  3276  0042F4  0EFA               	movlw	-6
  3277  0042F6  006F FF8C  F048    	movff	plusw1,btemp+11
  3278                           
  3279                           ;stkvar	_k @ sp[(-5)+0]
  3280  0042FC  0EFC               	movlw	-4
  3281  0042FE  0060  F123  FFE3   	movff	btemp+11,plusw1
  3282  004304  0EFB               	movlw	-5
  3283  004306  0060  F11F  FFE3   	movff	btemp+10,plusw1
  3284                           
  3285                           ;gemsecs.c: 213:  V.error = LINK_ERROR_NONE;
  3286  00430C  0100               	movlb	0	; () banked
  3287  00430E  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;gemsecs.c: 214:  if ((length - 3) != k[length - 1]) {
  3291                           ;stkvar	_length @ sp[(-5)+-3]
  3292  004310  0EF8               	movlw	-8
  3293  004312  50E3               	movf	plusw1,w,c
  3294  004314  6E47               	movwf	btemp+10,c
  3295  004316  6A48               	clrf	btemp+11,c
  3296                           
  3297                           ;stkvar	_k @ sp[(-5)+0]
  3298  004318  0EFB               	movlw	-5
  3299  00431A  50E3               	movf	plusw1,w,c
  3300  00431C  2647               	addwf	btemp+10,f,c
  3301  00431E  0EFC               	movlw	-4
  3302  004320  50E3               	movf	plusw1,w,c
  3303  004322  2248               	addwfc	btemp+11,f,c
  3304  004324  0EFF               	movlw	255
  3305  004326  2447               	addwf	btemp+10,w,c
  3306  004328  6ED9               	movwf	fsr2l,c
  3307  00432A  0EFF               	movlw	255
  3308  00432C  2048               	addwfc	btemp+11,w,c
  3309  00432E  6EDA               	movwf	fsr2h,c
  3310  004330  50DF               	movf	indf2,w,c
  3311  004332  6E47               	movwf	btemp+10,c
  3312  004334  6A48               	clrf	btemp+11,c
  3313  004336  0EFD               	movlw	253
  3314  004338  6E45               	movwf	btemp+8,c
  3315  00433A  0EFF               	movlw	255
  3316  00433C  6E46               	movwf	btemp+9,c
  3317                           
  3318                           ;stkvar	_length @ sp[(-5)+-3]
  3319  00433E  0EF8               	movlw	-8
  3320  004340  50E3               	movf	plusw1,w,c
  3321  004342  6E43               	movwf	btemp+6,c
  3322  004344  6A44               	clrf	btemp+7,c
  3323  004346  5045               	movf	btemp+8,w,c
  3324  004348  2643               	addwf	btemp+6,f,c
  3325  00434A  5046               	movf	btemp+9,w,c
  3326  00434C  2244               	addwfc	btemp+7,f,c
  3327  00434E  5047               	movf	btemp+10,w,c
  3328  004350  1843               	xorwf	btemp+6,w,c
  3329  004352  E104               	bnz	u4680
  3330  004354  5048               	movf	btemp+11,w,c
  3331  004356  1844               	xorwf	btemp+7,w,c
  3332  004358  B4D8               	btfsc	status,2,c
  3333  00435A  D003               	goto	l7453
  3334  00435C                     u4680:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;gemsecs.c: 215:   V.error = LINK_ERROR_SEND;
  3338  00435C  0E08               	movlw	8
  3339  00435E  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  3340  004360  D098               	goto	l1558
  3341  004362                     l7453:
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;gemsecs.c: 224:  checksum = block_checksum(&k[2], length - 3);
  3345  004362  0EFD               	movlw	253
  3346  004364  6E47               	movwf	btemp+10,c
  3347  004366  0EFF               	movlw	255
  3348  004368  6E48               	movwf	btemp+11,c
  3349                           
  3350                           ;stkvar	_length @ sp[(-5)+-3]
  3351  00436A  0EF8               	movlw	-8
  3352  00436C  50E3               	movf	plusw1,w,c
  3353  00436E  6E45               	movwf	btemp+8,c
  3354  004370  6A46               	clrf	btemp+9,c
  3355  004372  5047               	movf	btemp+10,w,c
  3356  004374  2645               	addwf	btemp+8,f,c
  3357  004376  5048               	movf	btemp+11,w,c
  3358  004378  2246               	addwfc	btemp+9,f,c
  3359  00437A  0060  F117  FFE6   	movff	btemp+8,postinc1
  3360  004380  0060  F11B  FFE6   	movff	btemp+9,postinc1
  3361                           
  3362                           ;stkvar	_k @ sp[(-7)+0]
  3363  004386  0EF9               	movlw	-7
  3364  004388  50E3               	movf	plusw1,w,c
  3365  00438A  0F02               	addlw	2
  3366  00438C  6E47               	movwf	btemp+10,c
  3367  00438E  0EFA               	movlw	-6
  3368  004390  006F FF8C  F048    	movff	plusw1,btemp+11
  3369  004396  0E00               	movlw	0
  3370  004398  2248               	addwfc	btemp+11,f,c
  3371  00439A  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3372  0043A0  0060  F123  FFE6   	movff	btemp+11,postinc1
  3373  0043A6  EC56  F024         	call	_block_checksum	;wreg free
  3374                           
  3375                           ;stkvar	_checksum @ sp[(-5)+2]
  3376  0043AA  0EFD               	movlw	-3
  3377  0043AC  0060  F0F7  FFE3   	movff	btemp,plusw1
  3378  0043B2  0EFE               	movlw	-2
  3379  0043B4  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  3380                           
  3381                           ;gemsecs.c: 225:  k[0] = checksum & 0xff;
  3382                           ;stkvar	_checksum @ sp[(-5)+2]
  3383                           ;stkvar	_k @ sp[(-5)+0]
  3384  0043BA  0EFB               	movlw	-5
  3385  0043BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  3386  0043C2  0EFC               	movlw	-4
  3387  0043C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  3388  0043CA  0EFD               	movlw	-3
  3389  0043CC  006F FF8F FFDF     	movff	plusw1,indf2
  3390                           
  3391                           ;gemsecs.c: 226:  k[1] = (checksum >> 8)&0xff;
  3392                           ;stkvar	_checksum @ sp[(-5)+2]
  3393  0043D2  0EFE               	movlw	254
  3394  0043D4  24E1               	addwf	fsr1l,w,c
  3395  0043D6  6ED9               	movwf	fsr2l,c
  3396  0043D8  0EFF               	movlw	255
  3397  0043DA  20E2               	addwfc	fsr1h,w,c
  3398  0043DC  6EDA               	movwf	fsr2h,c
  3399                           
  3400                           ;stkvar	_k @ sp[(-5)+0]
  3401  0043DE  0EFB               	movlw	-5
  3402  0043E0  006F FF8C  F047    	movff	plusw1,btemp+10
  3403  0043E6  0EFC               	movlw	-4
  3404  0043E8  006F FF8C  F048    	movff	plusw1,btemp+11
  3405  0043EE  0E01               	movlw	1
  3406  0043F0  2447               	addwf	btemp+10,w,c
  3407  0043F2  6EE9               	movwf	fsr0l,c
  3408  0043F4  0E00               	movlw	0
  3409  0043F6  2048               	addwfc	btemp+11,w,c
  3410  0043F8  6EEA               	movwf	fsr0h,c
  3411  0043FA  006F FF7F FFEF     	movff	indf2,indf0
  3412                           
  3413                           ;gemsecs.c: 227:  V.t_checksum = checksum;
  3414                           ;stkvar	_checksum @ sp[(-5)+2]
  3415  004400  0EFD               	movlw	-3
  3416  004402  006F FF8C  F0D7    	movff	plusw1,_V+78	;volatile
  3417  004408  0EFE               	movlw	-2
  3418  00440A  006F FF8C  F0D8    	movff	plusw1,_V+79	;volatile
  3419  004410                     l7461:
  3420  004410  EC3D  F02F         	call	_UART1_is_tx_ready	;wreg free
  3421  004414  0E3F               	movlw	63
  3422  004416  643D               	cpfsgt	btemp,c
  3423  004418  D7FB               	goto	l7461
  3424                           
  3425                           ;gemsecs.c: 230:  for (i = length; i > 0; i--) {
  3426                           ;stkvar	_length @ sp[(-5)+-3]
  3427                           ;stkvar	_i @ sp[(-5)+4]
  3428  00441A  0EF8               	movlw	-8
  3429  00441C  006F FF8C  F03D    	movff	plusw1,btemp
  3430  004422  0EFF               	movlw	-1
  3431  004424  0060  F0F7  FFE3   	movff	btemp,plusw1
  3432  00442A                     l7465:
  3433                           
  3434                           ;stkvar	_i @ sp[(-5)+4]
  3435  00442A  0EFF               	movlw	-1
  3436  00442C  50E3               	movf	plusw1,w,c
  3437  00442E  B4D8               	btfsc	status,2,c
  3438  004430  D030               	goto	l1558
  3439                           
  3440                           ;gemsecs.c: 231:   if (fake) {
  3441                           ;stkvar	_fake @ sp[(-5)+-4]
  3442  004432  0EF7               	movlw	-9
  3443  004434  50E3               	movf	plusw1,w,c
  3444  004436  B4D8               	btfsc	status,2,c
  3445  004438  D015               	goto	l7473
  3446                           
  3447                           ;gemsecs.c: 232:    UART1_put_buffer(k[i - 1]);
  3448                           ;stkvar	_i @ sp[(-5)+4]
  3449  00443A  0EFF               	movlw	-1
  3450  00443C  50E3               	movf	plusw1,w,c
  3451  00443E  6E47               	movwf	btemp+10,c
  3452  004440  6A48               	clrf	btemp+11,c
  3453                           
  3454                           ;stkvar	_k @ sp[(-5)+0]
  3455  004442  0EFB               	movlw	-5
  3456  004444  50E3               	movf	plusw1,w,c
  3457  004446  2647               	addwf	btemp+10,f,c
  3458  004448  0EFC               	movlw	-4
  3459  00444A  50E3               	movf	plusw1,w,c
  3460  00444C  2248               	addwfc	btemp+11,f,c
  3461  00444E  0EFF               	movlw	255
  3462  004450  2447               	addwf	btemp+10,w,c
  3463  004452  6ED9               	movwf	fsr2l,c
  3464  004454  0EFF               	movlw	255
  3465  004456  2048               	addwfc	btemp+11,w,c
  3466  004458  6EDA               	movwf	fsr2h,c
  3467  00445A  50DF               	movf	indf2,w,c
  3468  00445C  6EE6               	movwf	postinc1,c
  3469  00445E  EC31  F02C         	call	_UART1_put_buffer	;wreg free
  3470                           
  3471                           ;gemsecs.c: 233:   } else {
  3472  004462  D014               	goto	l7475
  3473  004464                     l7473:
  3474                           
  3475                           ;gemsecs.c: 234:    UART1_Write(k[i - 1]);
  3476                           ;stkvar	_i @ sp[(-5)+4]
  3477  004464  0EFF               	movlw	-1
  3478  004466  50E3               	movf	plusw1,w,c
  3479  004468  6E47               	movwf	btemp+10,c
  3480  00446A  6A48               	clrf	btemp+11,c
  3481                           
  3482                           ;stkvar	_k @ sp[(-5)+0]
  3483  00446C  0EFB               	movlw	-5
  3484  00446E  50E3               	movf	plusw1,w,c
  3485  004470  2647               	addwf	btemp+10,f,c
  3486  004472  0EFC               	movlw	-4
  3487  004474  50E3               	movf	plusw1,w,c
  3488  004476  2248               	addwfc	btemp+11,f,c
  3489  004478  0EFF               	movlw	255
  3490  00447A  2447               	addwf	btemp+10,w,c
  3491  00447C  6ED9               	movwf	fsr2l,c
  3492  00447E  0EFF               	movlw	255
  3493  004480  2048               	addwfc	btemp+11,w,c
  3494  004482  6EDA               	movwf	fsr2h,c
  3495  004484  50DF               	movf	indf2,w,c
  3496  004486  6EE6               	movwf	postinc1,c
  3497  004488  EC32  F02B         	call	_UART1_Write	;wreg free
  3498  00448C                     l7475:
  3499                           
  3500                           ; BSR set to: 57
  3501                           ;gemsecs.c: 236:  }
  3502                           ;stkvar	_i @ sp[(-5)+4]
  3503  00448C  0EFF               	movlw	-1
  3504  00448E  06E3               	decf	plusw1,f,c
  3505  004490  D7CC               	goto	l7465
  3506  004492                     l1558:
  3507                           
  3508                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3509  004492  0EF7               	movlw	247
  3510  004494  26E1               	addwf	fsr1l,f,c
  3511  004496  0EFF               	movlw	255
  3512  004498  22E2               	addwfc	fsr1h,f,c
  3513  00449A  0012               	return		;funcret
  3514  00449C                     __end_of_secs_send:
  3515                           	opt callstack 0
  3516                           
  3517 ;; *************** function _block_checksum *****************
  3518 ;; Defined at:
  3519 ;;		line 16 in file "gemsecs.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  byte_block      2  [STACK] PTR unsigned char 
  3522 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3523 ;;		 -> H13(16), H12(15), H10.block(10), H10(65), 
  3524 ;;  byte_count      2  [STACK] unsigned short 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  i               2  [STACK] unsigned short 
  3527 ;;  sum             2  [STACK] unsigned short 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  2  [STACK] unsigned short 
  3530 ;; Registers used:
  3531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3532 ;; Tracked objects:
  3533 ;;		On entry : 3F/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    3
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;;		_secs_send
  3549 ;; This function uses a reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text6
  3553  0048AC                     __ptext6:
  3554                           	opt callstack 0
  3555  0048AC                     _block_checksum:
  3556                           	opt callstack 0
  3557                           
  3558                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3559  0048AC  52E6               	movf	postinc1,f,c
  3560  0048AE  52E6               	movf	postinc1,f,c
  3561  0048B0  52E6               	movf	postinc1,f,c
  3562  0048B2  52E6               	movf	postinc1,f,c
  3563                           
  3564                           ;gemsecs.c: 16: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 17: {;gemsecs.c: 18:  uint16_t sum = 0, i;
  3565                           ;stkvar	_sum @ sp[(-4)+2]
  3566                           
  3567                           ;incstack = 0
  3568  0048B4  0EFE               	movlw	-2
  3569  0048B6  6AE3               	clrf	plusw1,c
  3570  0048B8  0EFF               	movlw	-1
  3571  0048BA  6AE3               	clrf	plusw1,c
  3572                           
  3573                           ;gemsecs.c: 20:  for (i = 0; i < byte_count; i++) {
  3574                           ;stkvar	_i @ sp[(-4)+0]
  3575  0048BC  0EFC               	movlw	-4
  3576  0048BE  6AE3               	clrf	plusw1,c
  3577  0048C0  0EFD               	movlw	-3
  3578  0048C2  6AE3               	clrf	plusw1,c
  3579  0048C4  D039               	goto	l7401
  3580  0048C6                     l7397:
  3581                           
  3582                           ;gemsecs.c: 21:   sum += byte_block[i];
  3583                           ;stkvar	_i @ sp[(-4)+0]
  3584  0048C6  0EFC               	movlw	-4
  3585  0048C8  006F FF8C  F047    	movff	plusw1,btemp+10
  3586  0048CE  0EFD               	movlw	-3
  3587  0048D0  006F FF8C  F048    	movff	plusw1,btemp+11
  3588                           
  3589                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3590  0048D6  0EFA               	movlw	-6
  3591  0048D8  006F FF8C  F045    	movff	plusw1,btemp+8
  3592  0048DE  0EFB               	movlw	-5
  3593  0048E0  006F FF8C  F046    	movff	plusw1,btemp+9
  3594  0048E6  5047               	movf	btemp+10,w,c
  3595  0048E8  2445               	addwf	btemp+8,w,c
  3596  0048EA  6ED9               	movwf	fsr2l,c
  3597  0048EC  5048               	movf	btemp+11,w,c
  3598  0048EE  2046               	addwfc	btemp+9,w,c
  3599  0048F0  6EDA               	movwf	fsr2h,c
  3600  0048F2  50DF               	movf	indf2,w,c
  3601  0048F4  6E48               	movwf	btemp+11,c
  3602                           
  3603                           ;stkvar	_sum @ sp[(-4)+2]
  3604  0048F6  0EFE               	movlw	-2
  3605  0048F8  50E3               	movf	plusw1,w,c
  3606  0048FA  2448               	addwf	btemp+11,w,c
  3607  0048FC  6E3D               	movwf	btemp,c
  3608  0048FE  0EFE               	movlw	-2
  3609  004900  0060  F0F7  FFE3   	movff	btemp,plusw1
  3610  004906  6A3D               	clrf	btemp,c
  3611  004908  0EFF               	movlw	-1
  3612  00490A  50E3               	movf	plusw1,w,c
  3613  00490C  223D               	addwfc	btemp,f,c
  3614  00490E  0EFF               	movlw	-1
  3615  004910  0060  F0F7  FFE3   	movff	btemp,plusw1
  3616                           
  3617                           ;gemsecs.c: 22:  }
  3618                           ;stkvar	_i @ sp[(-4)+0]
  3619  004916  0EFC               	movlw	-4
  3620  004918  50E3               	movf	plusw1,w,c
  3621  00491A  0F01               	addlw	1
  3622  00491C  6E3D               	movwf	btemp,c
  3623  00491E  0EFC               	movlw	-4
  3624  004920  0060  F0F7  FFE3   	movff	btemp,plusw1
  3625  004926  6A3D               	clrf	btemp,c
  3626  004928  0EFD               	movlw	-3
  3627  00492A  50E3               	movf	plusw1,w,c
  3628  00492C  203D               	addwfc	btemp,w,c
  3629  00492E  6E3D               	movwf	btemp,c
  3630  004930  0EFD               	movlw	-3
  3631  004932  0060  F0F7  FFE3   	movff	btemp,plusw1
  3632  004938                     l7401:
  3633                           
  3634                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3635  004938  0EF8               	movlw	-8
  3636  00493A  006F FF8C  F047    	movff	plusw1,btemp+10
  3637  004940  0EF9               	movlw	-7
  3638  004942  006F FF8C  F048    	movff	plusw1,btemp+11
  3639                           
  3640                           ;stkvar	_i @ sp[(-4)+0]
  3641  004948  0EFC               	movlw	-4
  3642  00494A  006F FF8C  F045    	movff	plusw1,btemp+8
  3643  004950  0EFD               	movlw	-3
  3644  004952  006F FF8C  F046    	movff	plusw1,btemp+9
  3645  004958  5047               	movf	btemp+10,w,c
  3646  00495A  5C45               	subwf	btemp+8,w,c
  3647  00495C  5048               	movf	btemp+11,w,c
  3648  00495E  5846               	subwfb	btemp+9,w,c
  3649  004960  A0D8               	btfss	status,0,c
  3650  004962  D7B1               	goto	l7397
  3651                           
  3652                           ;gemsecs.c: 23:  return sum;
  3653                           ;stkvar	_sum @ sp[(-4)+2]
  3654  004964  0EFE               	movlw	-2
  3655  004966  006F FF8C  F03D    	movff	plusw1,btemp
  3656  00496C  0EFF               	movlw	-1
  3657  00496E  006F FF8C  F03E    	movff	plusw1,btemp+1
  3658                           
  3659                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3660  004974  0EF8               	movlw	248
  3661  004976  26E1               	addwf	fsr1l,f,c
  3662  004978  0EFF               	movlw	255
  3663  00497A  22E2               	addwfc	fsr1h,f,c
  3664  00497C  0012               	return		;funcret
  3665  00497E                     __end_of_block_checksum:
  3666                           	opt callstack 0
  3667                           
  3668 ;; *************** function _UART1_put_buffer *****************
  3669 ;; Defined at:
  3670 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  bufData         1  [STACK] unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1  [STACK] void 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 3F/39
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    3
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;;		_t_protocol
  3696 ;;		_secs_send
  3697 ;; This function uses a reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text7
  3701  005862                     __ptext7:
  3702                           	opt callstack 0
  3703  005862                     _UART1_put_buffer:
  3704                           	opt callstack 25
  3705                           
  3706                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3707                           
  3708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3709                           ;incstack = 0
  3710  005862  0139               	movlb	57	; () banked
  3711  005864  9793               	bcf	147,3,b	;volatile
  3712                           
  3713                           ; BSR set to: 57
  3714                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3715                           ;stkvar	_bufData @ sp[(0)+-1]
  3716  005866  0EA1               	movlw	low _uart1RxBuffer
  3717  005868  2439               	addwf	_uart1RxHead,w,c	;volatile
  3718  00586A  6ED9               	movwf	fsr2l,c
  3719  00586C  6ADA               	clrf	fsr2h,c
  3720  00586E  0E01               	movlw	high _uart1RxBuffer
  3721  005870  22DA               	addwfc	fsr2h,f,c
  3722  005872  0EFF               	movlw	-1
  3723  005874  006F FF8F FFDF     	movff	plusw1,indf2
  3724                           
  3725                           ; BSR set to: 57
  3726  00587A  2A39               	incf	_uart1RxHead,f,c	;volatile
  3727                           
  3728                           ; BSR set to: 57
  3729                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3730  00587C  0E3F               	movlw	63
  3731  00587E  6439               	cpfsgt	_uart1RxHead,c
  3732  005880  D001               	goto	l5507
  3733                           
  3734                           ; BSR set to: 57
  3735                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3736  005882  6A39               	clrf	_uart1RxHead,c	;volatile
  3737  005884                     l5507:
  3738                           
  3739                           ; BSR set to: 57
  3740                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3741  005884  2A37               	incf	_uart1RxCount,f,c	;volatile
  3742                           
  3743                           ; BSR set to: 57
  3744                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3745  005886  8793               	bsf	147,3,b	;volatile
  3746                           
  3747                           ; BSR set to: 57
  3748                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3749  005888  52E5               	movf	postdec1,f,c
  3750  00588A  0012               	return		;funcret
  3751  00588C                     __end_of_UART1_put_buffer:
  3752                           	opt callstack 0
  3753                           
  3754 ;; *************** function _UART1_is_tx_ready *****************
  3755 ;; Defined at:
  3756 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1  [STACK] unsigned char 
  3763 ;; Registers used:
  3764 ;;		btemp
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3774 ;;Total ram usage:        0 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    3
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_secs_send
  3781 ;; This function uses a reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text8
  3785  005E7A                     __ptext8:
  3786                           	opt callstack 0
  3787  005E7A                     _UART1_is_tx_ready:
  3788                           	opt callstack 25
  3789                           
  3790                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3791                           
  3792                           ; BSR set to: 57
  3793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3794                           ;incstack = 0
  3795  005E7A  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3796                           
  3797                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3798  005E80  0012               	return		;funcret
  3799  005E82                     __end_of_UART1_is_tx_ready:
  3800                           	opt callstack 0
  3801                           
  3802 ;; *************** function _UART1_Write *****************
  3803 ;; Defined at:
  3804 ;;		line 179 in file "mcc_generated_files/uart1.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  txData          1  [STACK] unsigned char 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1  [STACK] void 
  3811 ;; Registers used:
  3812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 3F/39
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3822 ;;Total ram usage:        0 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:    3
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_main
  3829 ;;		_r_protocol
  3830 ;;		_t_protocol
  3831 ;;		_secs_send
  3832 ;; This function uses a reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text9
  3836  005664                     __ptext9:
  3837                           	opt callstack 0
  3838  005664                     _UART1_Write:
  3839                           	opt callstack 25
  3840                           
  3841                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  3842                           
  3843                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  3844                           
  3845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3846                           ;incstack = 0
  3847  005664  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  3848  005666  B4D8               	btfsc	status,2,c
  3849  005668  D7FD               	goto	_UART1_Write
  3850                           
  3851                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  3852  00566A  0139               	movlb	57	; () banked
  3853  00566C  B993               	btfsc	147,4,b	;volatile
  3854  00566E  D005               	goto	l579
  3855                           
  3856                           ; BSR set to: 57
  3857                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  3858                           ;stkvar	_txData @ sp[(0)+-1]
  3859  005670  0EFF               	movlw	-1
  3860  005672  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  3861                           
  3862                           ;mcc_generated_files/uart1.c: 186:  } else {
  3863  005678  D011               	goto	l5495
  3864  00567A                     l579:
  3865                           
  3866                           ; BSR set to: 57
  3867                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  3868  00567A  9993               	bcf	147,4,b	;volatile
  3869                           
  3870                           ; BSR set to: 57
  3871                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  3872                           ;stkvar	_txData @ sp[(0)+-1]
  3873  00567C  0E80               	movlw	low _uart1TxBuffer
  3874  00567E  243C               	addwf	_uart1TxHead,w,c	;volatile
  3875  005680  6ED9               	movwf	fsr2l,c
  3876  005682  6ADA               	clrf	fsr2h,c
  3877  005684  0E02               	movlw	high _uart1TxBuffer
  3878  005686  22DA               	addwfc	fsr2h,f,c
  3879  005688  0EFF               	movlw	-1
  3880  00568A  006F FF8F FFDF     	movff	plusw1,indf2
  3881                           
  3882                           ; BSR set to: 57
  3883  005690  2A3C               	incf	_uart1TxHead,f,c	;volatile
  3884                           
  3885                           ; BSR set to: 57
  3886                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  3887  005692  0E3F               	movlw	63
  3888  005694  643C               	cpfsgt	_uart1TxHead,c
  3889  005696  D001               	goto	l5493
  3890                           
  3891                           ; BSR set to: 57
  3892                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  3893  005698  6A3C               	clrf	_uart1TxHead,c	;volatile
  3894  00569A                     l5493:
  3895                           
  3896                           ; BSR set to: 57
  3897                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  3898  00569A  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  3899  00569C                     l5495:
  3900                           
  3901                           ; BSR set to: 57
  3902                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  3903  00569C  8993               	bsf	147,4,b	;volatile
  3904                           
  3905                           ; BSR set to: 57
  3906                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3907  00569E  52E5               	movf	postdec1,f,c
  3908  0056A0  0012               	return		;funcret
  3909  0056A2                     __end_of_UART1_Write:
  3910                           	opt callstack 0
  3911                           
  3912 ;; *************** function _run_checksum *****************
  3913 ;; Defined at:
  3914 ;;		line 29 in file "gemsecs.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  byte_block      1  [STACK] unsigned char 
  3917 ;;  clear           1  [STACK] _Bool 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2  [STACK] unsigned short 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  3924 ;; Tracked objects:
  3925 ;;		On entry : 6/39
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    3
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_r_protocol
  3940 ;; This function uses a reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text10
  3944  0058E2                     __ptext10:
  3945                           	opt callstack 0
  3946  0058E2                     _run_checksum:
  3947                           	opt callstack 26
  3948                           
  3949                           ;gemsecs.c: 29: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 30: {;
      +                          gemsecs.c: 31:  static uint16_t sum = 0;;gemsecs.c: 33:  if (clear)
  3950                           ;stkvar	_clear @ sp[(0)+-2]
  3951                           
  3952                           ; BSR set to: 57
  3953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3954                           ;incstack = 0
  3955  0058E2  0EFE               	movlw	-2
  3956  0058E4  50E3               	movf	plusw1,w,c
  3957  0058E6  B4D8               	btfsc	status,2,c
  3958  0058E8  D002               	goto	l6045
  3959                           
  3960                           ;gemsecs.c: 34:   sum = 0;
  3961  0058EA  6A2A               	clrf	run_checksum@sum,c
  3962  0058EC  6A2B               	clrf	run_checksum@sum+1,c
  3963  0058EE                     l6045:
  3964                           
  3965                           ;gemsecs.c: 36:  sum += byte_block;
  3966                           ;stkvar	_byte_block @ sp[(0)+-1]
  3967  0058EE  0EFF               	movlw	-1
  3968  0058F0  50E3               	movf	plusw1,w,c
  3969  0058F2  262A               	addwf	run_checksum@sum,f,c
  3970  0058F4  0E00               	movlw	0
  3971  0058F6  222B               	addwfc	run_checksum@sum+1,f,c
  3972                           
  3973                           ;gemsecs.c: 37:  return sum;
  3974  0058F8  0060  F0A8  F03D   	movff	run_checksum@sum,btemp
  3975  0058FE  0060  F0AC  F03E   	movff	run_checksum@sum+1,btemp+1
  3976                           
  3977                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  3978  005904  52E5               	movf	postdec1,f,c
  3979  005906  52E5               	movf	postdec1,f,c
  3980  005908  0012               	return		;funcret
  3981  00590A                     __end_of_run_checksum:
  3982                           	opt callstack 0
  3983                           
  3984 ;; *************** function _WaitMs *****************
  3985 ;; Defined at:
  3986 ;;		line 31 in file "timers.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  numMilliseco    2  [STACK] unsigned short 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1  [STACK] void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    4
  4007 ;; This function calls:
  4008 ;;		_StartTimer
  4009 ;;		_TimerDone
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;;		_r_protocol
  4013 ;;		_t_protocol
  4014 ;; This function uses a reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text11
  4018  00588C                     __ptext11:
  4019                           	opt callstack 0
  4020  00588C                     _WaitMs:
  4021                           	opt callstack 25
  4022                           
  4023                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4024                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4025                           
  4026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4027                           ;incstack = 0
  4028  00588C  0EFE               	movlw	-2
  4029  00588E  006F FF8F FFE6     	movff	plusw1,postinc1
  4030  005894  006F FF8F FFE6     	movff	plusw1,postinc1
  4031  00589A  0E00               	movlw	0
  4032  00589C  6EE6               	movwf	postinc1,c
  4033  00589E  EC70  F02B         	call	_StartTimer	;wreg free
  4034  0058A2                     l6001:
  4035                           
  4036                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4037  0058A2  0E00               	movlw	0
  4038  0058A4  6EE6               	movwf	postinc1,c
  4039  0058A6  EC01  F02E         	call	_TimerDone	;wreg free
  4040  0058AA  503D               	movf	btemp,w,c
  4041  0058AC  B4D8               	btfsc	status,2,c
  4042  0058AE  D7F9               	goto	l6001
  4043                           
  4044                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4045  0058B0  52E5               	movf	postdec1,f,c
  4046  0058B2  52E5               	movf	postdec1,f,c
  4047  0058B4  0012               	return		;funcret
  4048  0058B6                     __end_of_WaitMs:
  4049                           	opt callstack 0
  4050                           
  4051 ;; *************** function _TimerDone *****************
  4052 ;; Defined at:
  4053 ;;		line 20 in file "timers.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  timer           1  [STACK] unsigned char 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1  [STACK] _Bool 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    3
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_r_protocol
  4078 ;;		_t_protocol
  4079 ;;		_WaitMs
  4080 ;; This function uses a reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text12
  4084  005C02                     __ptext12:
  4085                           	opt callstack 0
  4086  005C02                     _TimerDone:
  4087                           	opt callstack 25
  4088                           
  4089                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4090                           ;stkvar	_timer @ sp[(0)+-1]
  4091                           
  4092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4093                           ;incstack = 0
  4094  005C02  0EFF               	movlw	-1
  4095  005C04  50E3               	movf	plusw1,w,c
  4096  005C06  0D02               	mullw	2
  4097  005C08  50F3               	movf	prodl,w,c
  4098  005C0A  0F79               	addlw	low _tickCount
  4099  005C0C  6ED9               	movwf	fsr2l,c
  4100  005C0E  6ADA               	clrf	fsr2h,c
  4101  005C10  50DE               	movf	postinc2,w,c
  4102  005C12  10DE               	iorwf	postinc2,w,c
  4103  005C14  A4D8               	btfss	status,2,c
  4104  005C16  D002               	goto	l5567
  4105                           
  4106                           ;timers.c: 23:   return 1;
  4107  005C18  0E01               	movlw	1
  4108  005C1A  D001               	goto	L17
  4109  005C1C                     l5567:
  4110                           
  4111                           ;timers.c: 25:  return 0;
  4112  005C1C  0E00               	movlw	0
  4113  005C1E                     L17:
  4114  005C1E  6E3D               	movwf	btemp,c
  4115                           
  4116                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4117  005C20  52E5               	movf	postdec1,f,c
  4118  005C22  0012               	return		;funcret
  4119  005C24                     __end_of_TimerDone:
  4120                           	opt callstack 0
  4121                           
  4122 ;; *************** function _StartTimer *****************
  4123 ;; Defined at:
  4124 ;;		line 12 in file "timers.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  timer           1  [STACK] unsigned char 
  4127 ;;  count           2  [STACK] unsigned short 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1  [STACK] void 
  4132 ;; Registers used:
  4133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/39
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4143 ;;Total ram usage:        0 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    3
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_r_protocol
  4150 ;;		_t_protocol
  4151 ;;		_WaitMs
  4152 ;; This function uses a reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text13
  4156  0056E0                     __ptext13:
  4157                           	opt callstack 0
  4158  0056E0                     _StartTimer:
  4159                           	opt callstack 25
  4160                           
  4161                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4162                           ;stkvar	_count @ sp[(0)+-3]
  4163                           
  4164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4165                           ;incstack = 0
  4166  0056E0  0EFD               	movlw	-3
  4167  0056E2  006F FF8C  F047    	movff	plusw1,btemp+10
  4168  0056E8  0EFE               	movlw	-2
  4169  0056EA  006F FF8C  F048    	movff	plusw1,btemp+11
  4170  0056F0  90D8               	bcf	status,0,c
  4171  0056F2  3447               	rlcf	btemp+10,w,c
  4172  0056F4  6E45               	movwf	btemp+8,c
  4173  0056F6  3448               	rlcf	btemp+11,w,c
  4174  0056F8  6E46               	movwf	btemp+9,c
  4175                           
  4176                           ;stkvar	_timer @ sp[(0)+-1]
  4177  0056FA  0EFF               	movlw	-1
  4178  0056FC  50E3               	movf	plusw1,w,c
  4179  0056FE  0D02               	mullw	2
  4180  005700  50F3               	movf	prodl,w,c
  4181  005702  0F79               	addlw	low _tickCount
  4182  005704  6ED9               	movwf	fsr2l,c
  4183  005706  6ADA               	clrf	fsr2h,c
  4184  005708  0060  F117  FFDE   	movff	btemp+8,postinc2
  4185  00570E  0060  F11B  FFDD   	movff	btemp+9,postdec2
  4186                           
  4187                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4188  005714  52E5               	movf	postdec1,f,c
  4189  005716  52E5               	movf	postdec1,f,c
  4190  005718  52E5               	movf	postdec1,f,c
  4191  00571A  0012               	return		;funcret
  4192  00571C                     __end_of_StartTimer:
  4193                           	opt callstack 0
  4194                           
  4195 ;; *************** function _UART1_is_rx_ready *****************
  4196 ;; Defined at:
  4197 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1  [STACK] unsigned char 
  4204 ;; Registers used:
  4205 ;;		btemp
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4215 ;;Total ram usage:        0 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    3
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_r_protocol
  4222 ;;		_t_protocol
  4223 ;; This function uses a reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text14
  4227  005E82                     __ptext14:
  4228                           	opt callstack 0
  4229  005E82                     _UART1_is_rx_ready:
  4230                           	opt callstack 26
  4231                           
  4232                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4233                           
  4234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4235                           ;incstack = 0
  4236  005E82  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  4237                           
  4238                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4239  005E88  0012               	return		;funcret
  4240  005E8A                     __end_of_UART1_is_rx_ready:
  4241                           	opt callstack 0
  4242                           
  4243 ;; *************** function _UART1_Read *****************
  4244 ;; Defined at:
  4245 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  readValue       1  [STACK] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1  [STACK] unsigned char 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 3F/39
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    3
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_r_protocol
  4270 ;;		_t_protocol
  4271 ;; This function uses a reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text15
  4275  0056A2                     __ptext15:
  4276                           	opt callstack 0
  4277  0056A2                     _UART1_Read:
  4278                           	opt callstack 0
  4279                           
  4280                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4281  0056A2  52E6               	movf	postinc1,f,c
  4282  0056A4                     
  4283                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4284                           
  4285                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4286  0056A4  5037               	movf	_uart1RxCount,w,c	;volatile
  4287  0056A6  B4D8               	btfsc	status,2,c
  4288  0056A8  D7FD               	goto	l5903
  4289                           
  4290                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4291  0056AA  0EA1               	movlw	low _uart1RxBuffer
  4292  0056AC  2438               	addwf	_uart1RxTail,w,c	;volatile
  4293  0056AE  6ED9               	movwf	fsr2l,c
  4294  0056B0  6ADA               	clrf	fsr2h,c
  4295  0056B2  0E01               	movlw	high _uart1RxBuffer
  4296  0056B4  22DA               	addwfc	fsr2h,f,c
  4297  0056B6  50DF               	movf	indf2,w,c
  4298  0056B8  6E48               	movwf	btemp+11,c
  4299                           
  4300                           ;stkvar	_readValue @ sp[(-1)+0]
  4301  0056BA  0EFF               	movlw	-1
  4302  0056BC  0060  F123  FFE3   	movff	btemp+11,plusw1
  4303  0056C2  2A38               	incf	_uart1RxTail,f,c	;volatile
  4304                           
  4305                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4306  0056C4  0E3F               	movlw	63
  4307  0056C6  6438               	cpfsgt	_uart1RxTail,c
  4308  0056C8  D001               	goto	l572
  4309                           
  4310                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4311  0056CA  6A38               	clrf	_uart1RxTail,c	;volatile
  4312  0056CC                     l572:
  4313                           
  4314                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4315  0056CC  0139               	movlb	57	; () banked
  4316  0056CE  9793               	bcf	147,3,b	;volatile
  4317                           
  4318                           ; BSR set to: 57
  4319                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4320  0056D0  0637               	decf	_uart1RxCount,f,c	;volatile
  4321                           
  4322                           ; BSR set to: 57
  4323                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4324  0056D2  8793               	bsf	147,3,b	;volatile
  4325                           
  4326                           ; BSR set to: 57
  4327                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4328                           ;stkvar	_readValue @ sp[(-1)+0]
  4329  0056D4  0EFF               	movlw	-1
  4330  0056D6  006F FF8C  F03D    	movff	plusw1,btemp
  4331                           
  4332                           ; BSR set to: 57
  4333                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4334  0056DC  52E5               	movf	postdec1,f,c
  4335  0056DE  0012               	return		;funcret
  4336  0056E0                     __end_of_UART1_Read:
  4337                           	opt callstack 0
  4338                           
  4339 ;; *************** function _init_display *****************
  4340 ;; Defined at:
  4341 ;;		line 35 in file "eadog.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1  [STACK] void 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 3F/3D
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    5
  4362 ;; This function calls:
  4363 ;;		_ringBufS_init
  4364 ;;		_send_lcd_cmd
  4365 ;;		_send_lcd_cmd_long
  4366 ;;		_wdtdelay
  4367 ;; This function is called by:
  4368 ;;		_main
  4369 ;; This function uses a reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text16
  4373  0047C2                     __ptext16:
  4374                           	opt callstack 0
  4375  0047C2                     _init_display:
  4376                           	opt callstack 25
  4377                           
  4378                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  4379                           
  4380                           ; BSR set to: 57
  4381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4382                           ;incstack = 0
  4383  0047C2  0E43               	movlw	low _ring_buf1
  4384  0047C4  0100               	movlb	0	; () banked
  4385  0047C6  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4386  0047C8  0E03               	movlw	high _ring_buf1
  4387  0047CA  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4388                           
  4389                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  4390  0047CC  0E00               	movlw	low _ring_buf2
  4391  0047CE  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4392  0047D0  0E03               	movlw	high _ring_buf2
  4393  0047D2  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  4397  0047D4  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4398  0047DA  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4399  0047E0  ECAD  F02C         	call	_ringBufS_init	;wreg free
  4400                           
  4401                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  4402  0047E4  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  4403  0047EA  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  4404  0047F0  ECAD  F02C         	call	_ringBufS_init	;wreg free
  4405                           
  4406                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4407  0047F4  80BE               	bsf	16318,0,c	;volatile
  4408  0047F6  84BC               	bsf	16316,2,c	;volatile
  4409                           
  4410                           ;eadog.c: 44:  wdtdelay(350000);
  4411  0047F8  0E30               	movlw	48
  4412  0047FA  6EE6               	movwf	postinc1,c
  4413  0047FC  0E57               	movlw	87
  4414  0047FE  6EE6               	movwf	postinc1,c
  4415  004800  0E05               	movlw	5
  4416  004802  6EE6               	movwf	postinc1,c
  4417  004804  0E00               	movlw	0
  4418  004806  6EE6               	movwf	postinc1,c
  4419  004808  ECBF  F029         	call	_wdtdelay	;wreg free
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4423  00480C  0E39               	movlw	57
  4424  00480E  6EE6               	movwf	postinc1,c
  4425  004810  EC99  F02C         	call	_send_lcd_cmd	;wreg free
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4429  004814  0E1D               	movlw	29
  4430  004816  6EE6               	movwf	postinc1,c
  4431  004818  EC99  F02C         	call	_send_lcd_cmd	;wreg free
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4435  00481C  0E50               	movlw	80
  4436  00481E  6EE6               	movwf	postinc1,c
  4437  004820  EC99  F02C         	call	_send_lcd_cmd	;wreg free
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4441  004824  0E6C               	movlw	108
  4442  004826  6EE6               	movwf	postinc1,c
  4443  004828  EC99  F02C         	call	_send_lcd_cmd	;wreg free
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4447  00482C  0E76               	movlw	118
  4448  00482E  6EE6               	movwf	postinc1,c
  4449  004830  EC99  F02C         	call	_send_lcd_cmd	;wreg free
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  4453  004834  0E38               	movlw	56
  4454  004836  6EE6               	movwf	postinc1,c
  4455  004838  EC85  F02C         	call	_send_lcd_cmd_long	;wreg free
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  4459  00483C  0E0F               	movlw	15
  4460  00483E  6EE6               	movwf	postinc1,c
  4461  004840  EC99  F02C         	call	_send_lcd_cmd	;wreg free
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  4465  004844  0E01               	movlw	1
  4466  004846  6EE6               	movwf	postinc1,c
  4467  004848  EC85  F02C         	call	_send_lcd_cmd_long	;wreg free
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  4471  00484C  0E02               	movlw	2
  4472  00484E  6EE6               	movwf	postinc1,c
  4473  004850  EC99  F02C         	call	_send_lcd_cmd	;wreg free
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  4477  004854  0E06               	movlw	6
  4478  004856  6EE6               	movwf	postinc1,c
  4479  004858  EC99  F02C         	call	_send_lcd_cmd	;wreg free
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;eadog.c: 55:  wdtdelay(30);
  4483  00485C  0E1E               	movlw	30
  4484  00485E  6EE6               	movwf	postinc1,c
  4485  004860  0E00               	movlw	0
  4486  004862  6EE6               	movwf	postinc1,c
  4487  004864  0E00               	movlw	0
  4488  004866  6EE6               	movwf	postinc1,c
  4489  004868  0E00               	movlw	0
  4490  00486A  6EE6               	movwf	postinc1,c
  4491  00486C  ECBF  F029         	call	_wdtdelay	;wreg free
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  4495  004870  0E02               	movlw	2
  4496  004872  013D               	movlb	61	; () banked
  4497  004874  6F16               	movwf	22,b	;volatile
  4498                           
  4499                           ; BSR set to: 61
  4500                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  4501  004876  0E40               	movlw	64
  4502  004878  6F15               	movwf	21,b	;volatile
  4503                           
  4504                           ; BSR set to: 61
  4505                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  4506  00487A  0E83               	movlw	131
  4507  00487C  6F14               	movwf	20,b	;volatile
  4508                           
  4509                           ; BSR set to: 61
  4510                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  4511  00487E  931A               	bcf	26,1,b	;volatile
  4512                           
  4513                           ; BSR set to: 61
  4514                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  4515  004880  0E3F               	movlw	-193
  4516  004882  013B               	movlb	59	; () banked
  4517  004884  17FD               	andwf	253,f,b	;volatile
  4518                           
  4519                           ; BSR set to: 59
  4520                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  4521  004886  9BFD               	bcf	253,5,b	;volatile
  4522                           
  4523                           ; BSR set to: 59
  4524                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  4525  004888  51FD               	movf	253,w,b	;volatile
  4526  00488A  0BF9               	andlw	-7
  4527  00488C  0902               	iorlw	2
  4528  00488E  6FFD               	movwf	253,b	;volatile
  4529                           
  4530                           ; BSR set to: 59
  4531                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  4532  004890  0EE7               	movlw	-25
  4533  004892  17FD               	andwf	253,f,b	;volatile
  4534                           
  4535                           ; BSR set to: 59
  4536                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  4537  004894  81FD               	bsf	253,0,b	;volatile
  4538                           
  4539                           ; BSR set to: 59
  4540                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  4541  004896  0E43               	movlw	low _ring_buf1
  4542  004898  6FF9               	movwf	249,b	;volatile
  4543  00489A  0E03               	movlw	high _ring_buf1
  4544  00489C  6FFA               	movwf	250,b	;volatile
  4545  00489E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4546  0048A0  6FFB               	movwf	251,b	;volatile
  4547                           
  4548                           ; BSR set to: 59
  4549                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  4550  0048A2  9BFC               	bcf	252,5,b	;volatile
  4551                           
  4552                           ; BSR set to: 59
  4553                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  4554  0048A4  013D               	movlb	61	; () banked
  4555  0048A6  831A               	bsf	26,1,b	;volatile
  4556                           
  4557                           ; BSR set to: 61
  4558                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  4559  0048A8  90BE               	bcf	16318,0,c	;volatile
  4560                           
  4561                           ; BSR set to: 61
  4562                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4563  0048AA  0012               	return		;funcret
  4564  0048AC                     __end_of_init_display:
  4565                           	opt callstack 0
  4566                           
  4567 ;; *************** function _send_lcd_cmd_long *****************
  4568 ;; Defined at:
  4569 ;;		line 97 in file "eadog.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  cmd             1  [STACK] unsigned char 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1  [STACK] void 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4578 ;; Tracked objects:
  4579 ;;		On entry : 3F/0
  4580 ;;		On exit  : 3F/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4587 ;;Total ram usage:        0 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    4
  4590 ;; This function calls:
  4591 ;;		_SPI1_Exchange8bit
  4592 ;;		_wdtdelay
  4593 ;; This function is called by:
  4594 ;;		_init_display
  4595 ;; This function uses a reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text17
  4599  00590A                     __ptext17:
  4600                           	opt callstack 0
  4601  00590A                     _send_lcd_cmd_long:
  4602                           	opt callstack 25
  4603                           
  4604                           ; BSR set to: 61
  4605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4606                           ;incstack = 0
  4607                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  4608  00590A  92BC               	bcf	16316,1,c	;volatile
  4609                           
  4610                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  4611  00590C  94BC               	bcf	16316,2,c	;volatile
  4612                           
  4613                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  4614                           ;stkvar	_cmd @ sp[(0)+-1]
  4615  00590E  0EFF               	movlw	-1
  4616  005910  50E3               	movf	plusw1,w,c
  4617  005912  6EE6               	movwf	postinc1,c
  4618  005914  EC98  F02E         	call	_SPI1_Exchange8bit	;wreg free
  4619                           
  4620                           ; BSR set to: 57
  4621                           ;eadog.c: 102:  wdtdelay(800);
  4622  005918  0E20               	movlw	32
  4623  00591A  6EE6               	movwf	postinc1,c
  4624  00591C  0E03               	movlw	3
  4625  00591E  6EE6               	movwf	postinc1,c
  4626  005920  0E00               	movlw	0
  4627  005922  6EE6               	movwf	postinc1,c
  4628  005924  0E00               	movlw	0
  4629  005926  6EE6               	movwf	postinc1,c
  4630  005928  ECBF  F029         	call	_wdtdelay	;wreg free
  4631                           
  4632                           ; BSR set to: 0
  4633  00592C  82BC               	bsf	16316,1,c	;volatile
  4634                           
  4635                           ; BSR set to: 0
  4636                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4637  00592E  52E5               	movf	postdec1,f,c
  4638  005930  0012               	return		;funcret
  4639  005932                     __end_of_send_lcd_cmd_long:
  4640                           	opt callstack 0
  4641                           
  4642 ;; *************** function _send_lcd_cmd *****************
  4643 ;; Defined at:
  4644 ;;		line 85 in file "eadog.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  cmd             1  [STACK] unsigned char 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1  [STACK] void 
  4651 ;; Registers used:
  4652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4653 ;; Tracked objects:
  4654 ;;		On entry : 3F/0
  4655 ;;		On exit  : 3F/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4662 ;;Total ram usage:        0 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    4
  4665 ;; This function calls:
  4666 ;;		_SPI1_Exchange8bit
  4667 ;;		_wdtdelay
  4668 ;; This function is called by:
  4669 ;;		_init_display
  4670 ;; This function uses a reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text18
  4674  005932                     __ptext18:
  4675                           	opt callstack 0
  4676  005932                     _send_lcd_cmd:
  4677                           	opt callstack 25
  4678                           
  4679                           ; BSR set to: 0
  4680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4681                           ;incstack = 0
  4682                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  4683  005932  92BC               	bcf	16316,1,c	;volatile
  4684                           
  4685                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  4686  005934  94BC               	bcf	16316,2,c	;volatile
  4687                           
  4688                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  4689                           ;stkvar	_cmd @ sp[(0)+-1]
  4690  005936  0EFF               	movlw	-1
  4691  005938  50E3               	movf	plusw1,w,c
  4692  00593A  6EE6               	movwf	postinc1,c
  4693  00593C  EC98  F02E         	call	_SPI1_Exchange8bit	;wreg free
  4694                           
  4695                           ; BSR set to: 57
  4696                           ;eadog.c: 90:  wdtdelay(30);
  4697  005940  0E1E               	movlw	30
  4698  005942  6EE6               	movwf	postinc1,c
  4699  005944  0E00               	movlw	0
  4700  005946  6EE6               	movwf	postinc1,c
  4701  005948  0E00               	movlw	0
  4702  00594A  6EE6               	movwf	postinc1,c
  4703  00594C  0E00               	movlw	0
  4704  00594E  6EE6               	movwf	postinc1,c
  4705  005950  ECBF  F029         	call	_wdtdelay	;wreg free
  4706                           
  4707                           ; BSR set to: 0
  4708  005954  82BC               	bsf	16316,1,c	;volatile
  4709                           
  4710                           ; BSR set to: 0
  4711                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4712  005956  52E5               	movf	postdec1,f,c
  4713  005958  0012               	return		;funcret
  4714  00595A                     __end_of_send_lcd_cmd:
  4715                           	opt callstack 0
  4716                           
  4717 ;; *************** function _SPI1_Exchange8bit *****************
  4718 ;; Defined at:
  4719 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  data            1  [STACK] unsigned char 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;		None
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1  [STACK] unsigned char 
  4726 ;; Registers used:
  4727 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 3F/39
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4737 ;;Total ram usage:        0 bytes
  4738 ;; Hardware stack levels used:    1
  4739 ;; Hardware stack levels required when called:    3
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		_send_lcd_cmd
  4744 ;;		_send_lcd_cmd_long
  4745 ;; This function uses a reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text19
  4749  005D30                     __ptext19:
  4750                           	opt callstack 0
  4751  005D30                     _SPI1_Exchange8bit:
  4752                           	opt callstack 25
  4753                           
  4754                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4755                           
  4756                           ; BSR set to: 0
  4757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4758                           ;incstack = 0
  4759  005D30  0E01               	movlw	1
  4760  005D32  013D               	movlb	61	; () banked
  4761  005D34  6F12               	movwf	18,b	;volatile
  4762                           
  4763                           ; BSR set to: 61
  4764                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4765                           ;stkvar	_data @ sp[(0)+-1]
  4766  005D36  0EFF               	movlw	-1
  4767  005D38  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4768  005D3E                     l849:
  4769                           
  4770                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4771  005D3E  0139               	movlb	57	; () banked
  4772  005D40  A9A2               	btfss	162,4,b	;volatile
  4773  005D42  D7FD               	goto	l849
  4774                           
  4775                           ; BSR set to: 57
  4776                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4777  005D44  006F F440  F03D    	movff	15632,btemp	;volatile
  4778                           
  4779                           ; BSR set to: 57
  4780                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4781  005D4A  52E5               	movf	postdec1,f,c
  4782  005D4C  0012               	return		;funcret
  4783  005D4E                     __end_of_SPI1_Exchange8bit:
  4784                           	opt callstack 0
  4785                           
  4786 ;; *************** function _ringBufS_init *****************
  4787 ;; Defined at:
  4788 ;;		line 22 in file "ringbufs.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  _this           2  [STACK] PTR volatile struct ring
  4791 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1  [STACK] void 
  4796 ;; Registers used:
  4797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    4
  4810 ;; This function calls:
  4811 ;;		_memset
  4812 ;; This function is called by:
  4813 ;;		_init_display
  4814 ;; This function uses a reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text20
  4818  00595A                     __ptext20:
  4819                           	opt callstack 0
  4820  00595A                     _ringBufS_init:
  4821                           	opt callstack 25
  4822                           
  4823                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4824                           
  4825                           ; BSR set to: 57
  4826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4827                           ;incstack = 0
  4828  00595A  0E43               	movlw	67
  4829  00595C  6EE6               	movwf	postinc1,c
  4830  00595E  0E00               	movlw	0
  4831  005960  6EE6               	movwf	postinc1,c
  4832  005962  0E00               	movlw	0
  4833  005964  6EE6               	movwf	postinc1,c
  4834  005966  0E00               	movlw	0
  4835  005968  6EE6               	movwf	postinc1,c
  4836                           
  4837                           ;stkvar	__this @ sp[(-4)+-2]
  4838  00596A  0EFA               	movlw	-6
  4839  00596C  006F FF8F FFE6     	movff	plusw1,postinc1
  4840  005972  006F FF8F FFE6     	movff	plusw1,postinc1
  4841  005978  EC90  F017         	call	_memset	;wreg free
  4842                           
  4843                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4844  00597C  52E5               	movf	postdec1,f,c
  4845  00597E  52E5               	movf	postdec1,f,c
  4846  005980  0012               	return		;funcret
  4847  005982                     __end_of_ringBufS_init:
  4848                           	opt callstack 0
  4849                           
  4850 ;; *************** function _eaDogM_WriteStringAtPos *****************
  4851 ;; Defined at:
  4852 ;;		line 222 in file "eadog.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  r               1  [STACK] unsigned char 
  4855 ;;  c               1  [STACK] unsigned char 
  4856 ;;  strPtr          1  [STACK] PTR unsigned char 
  4857 ;;		 -> V(80), 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1  [STACK] void 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  4864 ;; Tracked objects:
  4865 ;;		On entry : 3F/0
  4866 ;;		On exit  : 3F/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:   13
  4876 ;; This function calls:
  4877 ;;		_eaDogM_WriteString
  4878 ;;		_send_lcd_cmd_dma
  4879 ;; This function is called by:
  4880 ;;		_main
  4881 ;; This function uses a reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text21
  4885  0057DE                     __ptext21:
  4886                           	opt callstack 0
  4887  0057DE                     _eaDogM_WriteStringAtPos:
  4888                           	opt callstack 17
  4889                           
  4890                           ;eadog.c: 222: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           223: {;eadog.c: 224:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  4891                           ;stkvar	_c @ sp[(0)+-2]
  4892                           
  4893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4894                           ;incstack = 0
  4895  0057DE  0EFE               	movlw	-2
  4896  0057E0  006F FF8C  F048    	movff	plusw1,btemp+11
  4897                           
  4898                           ;stkvar	_r @ sp[(0)+-1]
  4899  0057E6  0EFF               	movlw	-1
  4900  0057E8  50E3               	movf	plusw1,w,c
  4901  0057EA  0D10               	mullw	16
  4902  0057EC  50F3               	movf	prodl,w,c
  4903  0057EE  2448               	addwf	btemp+11,w,c
  4904  0057F0  0F80               	addlw	128
  4905  0057F2  6EE6               	movwf	postinc1,c
  4906  0057F4  EC16  F02A         	call	_send_lcd_cmd_dma	;wreg free
  4907                           
  4908                           ;eadog.c: 225:  eaDogM_WriteString(strPtr);
  4909                           ;stkvar	_strPtr @ sp[(0)+-3]
  4910  0057F8  0EFD               	movlw	-3
  4911  0057FA  50E3               	movf	plusw1,w,c
  4912  0057FC  6EE6               	movwf	postinc1,c
  4913  0057FE  EC7D  F025         	call	_eaDogM_WriteString	;wreg free
  4914                           
  4915                           ; BSR set to: 0
  4916                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  4917  005802  52E5               	movf	postdec1,f,c
  4918  005804  52E5               	movf	postdec1,f,c
  4919  005806  52E5               	movf	postdec1,f,c
  4920  005808  0012               	return		;funcret
  4921  00580A                     __end_of_eaDogM_WriteStringAtPos:
  4922                           	opt callstack 0
  4923                           
  4924 ;; *************** function _eaDogM_WriteString *****************
  4925 ;; Defined at:
  4926 ;;		line 167 in file "eadog.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  strPtr          1  [STACK] PTR unsigned char 
  4929 ;;		 -> V(80), 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1  [STACK] void 
  4934 ;; Registers used:
  4935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  4936 ;; Tracked objects:
  4937 ;;		On entry : 3F/0
  4938 ;;		On exit  : 3F/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4945 ;;Total ram usage:        0 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:   12
  4948 ;; This function calls:
  4949 ;;		_printf
  4950 ;;		_ringBufS_flush
  4951 ;;		_start_lcd
  4952 ;;		_strlen
  4953 ;;		_wait_lcd_set
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;;		_eaDogM_WriteStringAtPos
  4957 ;; This function uses a reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text22
  4961  004AFA                     __ptext22:
  4962                           	opt callstack 0
  4963  004AFA                     _eaDogM_WriteString:
  4964                           	opt callstack 17
  4965                           
  4966                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  4967                           
  4968                           ; BSR set to: 0
  4969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4970                           ;incstack = 0
  4971  004AFA  EC49  F02F         	call	_wait_lcd_set	;wreg free
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  4975  004AFE  0E00               	movlw	0
  4976  004B00  6EE6               	movwf	postinc1,c
  4977  004B02  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4978  004B08  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4979  004B0E  EC10  F027         	call	_ringBufS_flush	;wreg free
  4980  004B12  94BC               	bcf	16316,2,c	;volatile
  4981                           
  4982                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  4983                           ;stkvar	_strPtr @ sp[(0)+-1]
  4984  004B14  0EFF               	movlw	-1
  4985  004B16  006F FF8C  F048    	movff	plusw1,btemp+11
  4986  004B1C  0060  F123  FFE6   	movff	btemp+11,postinc1
  4987  004B22  0E00               	movlw	0
  4988  004B24  6EE6               	movwf	postinc1,c
  4989  004B26  ECDD  F027         	call	_strlen	;wreg free
  4990  004B2A  503E               	movf	btemp+1,w,c
  4991  004B2C  E104               	bnz	u4670
  4992  004B2E  0E41               	movlw	65
  4993  004B30  5C3D               	subwf	btemp,w,c
  4994  004B32  A0D8               	btfss	status,0,c
  4995  004B34  D008               	goto	l7429
  4996  004B36                     u4670:
  4997                           
  4998                           ;stkvar	_strPtr @ sp[(0)+-1]
  4999  004B36  0EFF               	movlw	-1
  5000  004B38  50E3               	movf	plusw1,w,c
  5001  004B3A  6ED9               	movwf	fsr2l,c
  5002  004B3C  6ADA               	clrf	fsr2h,c
  5003  004B3E  0E40               	movlw	64
  5004  004B40  26D9               	addwf	fsr2l,f,c
  5005  004B42  0E00               	movlw	0
  5006  004B44  6EDF               	movwf	indf2,c
  5007  004B46                     l7429:
  5008                           
  5009                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5010  004B46  013B               	movlb	59	; () banked
  5011  004B48  9FFC               	bcf	252,7,b	;volatile
  5012                           
  5013                           ; BSR set to: 59
  5014                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5015                           ;stkvar	_strPtr @ sp[(0)+-1]
  5016  004B4A  0EFF               	movlw	-1
  5017  004B4C  006F FF8C  F048    	movff	plusw1,btemp+11
  5018  004B52  0060  F123  FFE6   	movff	btemp+11,postinc1
  5019  004B58  0E00               	movlw	0
  5020  004B5A  6EE6               	movwf	postinc1,c
  5021  004B5C  ECDD  F027         	call	_strlen	;wreg free
  5022  004B60  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  5023  004B66  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  5024                           
  5025                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5026  004B6C  013B               	movlb	59	; () banked
  5027  004B6E  8FFC               	bsf	252,7,b	;volatile
  5028                           
  5029                           ; BSR set to: 59
  5030                           ;eadog.c: 177:  printf("%s", strPtr);
  5031                           ;stkvar	_strPtr @ sp[(0)+-1]
  5032  004B70  0EFF               	movlw	-1
  5033  004B72  006F FF8C  F048    	movff	plusw1,btemp+11
  5034  004B78  0060  F123  FFE6   	movff	btemp+11,postinc1
  5035  004B7E  0E00               	movlw	0
  5036  004B80  6EE6               	movwf	postinc1,c
  5037  004B82  0E6C               	movlw	STR_6& (0+255)
  5038  004B84  6EE6               	movwf	postinc1,c
  5039  004B86  0E03               	movlw	3
  5040  004B88  6EE6               	movwf	postinc1,c
  5041  004B8A  EC30  F029         	call	_printf	;wreg free
  5042  004B8E  94BE               	bcf	16318,2,c	;volatile
  5043                           
  5044                           ;eadog.c: 179:  start_lcd();
  5045  004B90  EC4C  F02F         	call	_start_lcd	;wreg free
  5046                           
  5047                           ; BSR set to: 59
  5048                           ;eadog.c: 180:  ++V.ticks;
  5049  004B94  0E01               	movlw	1
  5050  004B96  0100               	movlb	0	; () banked
  5051  004B98  27CD               	addwf	(_V+68)& (0+255),f,b	;volatile
  5052  004B9A  0E00               	movlw	0
  5053  004B9C  23CE               	addwfc	(_V+69)& (0+255),f,b	;volatile
  5054  004B9E  23CF               	addwfc	(_V+70)& (0+255),f,b	;volatile
  5055  004BA0  23D0               	addwfc	(_V+71)& (0+255),f,b	;volatile
  5056                           
  5057                           ; BSR set to: 0
  5058                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5059  004BA2  52E5               	movf	postdec1,f,c
  5060  004BA4  0012               	return		;funcret
  5061  004BA6                     __end_of_eaDogM_WriteString:
  5062                           	opt callstack 0
  5063                           
  5064 ;; *************** function _eaDogM_WriteCommand *****************
  5065 ;; Defined at:
  5066 ;;		line 143 in file "eadog.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  cmd             1  [STACK] unsigned char 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1  [STACK] void 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5075 ;; Tracked objects:
  5076 ;;		On entry : 3F/3D
  5077 ;;		On exit  : 3F/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5084 ;;Total ram usage:        0 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:   13
  5087 ;; This function calls:
  5088 ;;		_send_lcd_cmd_dma
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;; This function uses a reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text23
  5095  005DFC                     __ptext23:
  5096                           	opt callstack 0
  5097  005DFC                     _eaDogM_WriteCommand:
  5098                           	opt callstack 17
  5099                           
  5100                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5101                           ;stkvar	_cmd @ sp[(0)+-1]
  5102                           
  5103                           ; BSR set to: 0
  5104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5105                           ;incstack = 0
  5106  005DFC  0EFF               	movlw	-1
  5107  005DFE  50E3               	movf	plusw1,w,c
  5108  005E00  6EE6               	movwf	postinc1,c
  5109  005E02  EC16  F02A         	call	_send_lcd_cmd_dma	;wreg free
  5110                           
  5111                           ; BSR set to: 0
  5112                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5113  005E06  52E5               	movf	postdec1,f,c
  5114  005E08  0012               	return		;funcret
  5115  005E0A                     __end_of_eaDogM_WriteCommand:
  5116                           	opt callstack 0
  5117                           
  5118 ;; *************** function _send_lcd_cmd_dma *****************
  5119 ;; Defined at:
  5120 ;;		line 186 in file "eadog.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  strPtr          1  [STACK] unsigned char 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1  [STACK] void 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 3F/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5138 ;;Total ram usage:        0 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:   12
  5141 ;; This function calls:
  5142 ;;		_printf
  5143 ;;		_ringBufS_flush
  5144 ;;		_start_lcd
  5145 ;;		_wait_lcd_done
  5146 ;;		_wait_lcd_set
  5147 ;; This function is called by:
  5148 ;;		_eaDogM_WriteCommand
  5149 ;;		_eaDogM_WriteStringAtPos
  5150 ;; This function uses a reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text24
  5154  00542C                     __ptext24:
  5155                           	opt callstack 0
  5156  00542C                     _send_lcd_cmd_dma:
  5157                           	opt callstack 17
  5158                           
  5159                           ;eadog.c: 186: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 187: {;eadog.c: 188:  wait
      +                          _lcd_set();
  5160                           
  5161                           ; BSR set to: 0
  5162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5163                           ;incstack = 0
  5164  00542C  EC49  F02F         	call	_wait_lcd_set	;wreg free
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;eadog.c: 190:  ringBufS_flush(spi_link.tx1a, 0);
  5168  005430  0E00               	movlw	0
  5169  005432  6EE6               	movwf	postinc1,c
  5170  005434  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5171  00543A  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5172  005440  EC10  F027         	call	_ringBufS_flush	;wreg free
  5173  005444  92BC               	bcf	16316,1,c	;volatile
  5174  005446  94BC               	bcf	16316,2,c	;volatile
  5175                           
  5176                           ;eadog.c: 193:  DMA1CON0bits.EN = 0;
  5177  005448  013B               	movlb	59	; () banked
  5178  00544A  9FFC               	bcf	252,7,b	;volatile
  5179                           
  5180                           ; BSR set to: 59
  5181                           ;eadog.c: 194:  DMA1SSZ = 1;
  5182  00544C  0E00               	movlw	0
  5183  00544E  6FF8               	movwf	248,b	;volatile
  5184  005450  0E01               	movlw	1
  5185  005452  6FF7               	movwf	247,b	;volatile
  5186                           
  5187                           ; BSR set to: 59
  5188                           ;eadog.c: 195:  DMA1CON0bits.EN = 1;
  5189  005454  8FFC               	bsf	252,7,b	;volatile
  5190                           
  5191                           ; BSR set to: 59
  5192                           ;eadog.c: 196:  printf("%c", strPtr);
  5193                           ;stkvar	_strPtr @ sp[(0)+-1]
  5194  005456  0EFF               	movlw	-1
  5195  005458  50E3               	movf	plusw1,w,c
  5196  00545A  6EE6               	movwf	postinc1,c
  5197  00545C  0E00               	movlw	0
  5198  00545E  6EE6               	movwf	postinc1,c
  5199  005460  0E69               	movlw	STR_7& (0+255)
  5200  005462  6EE6               	movwf	postinc1,c
  5201  005464  0E03               	movlw	3
  5202  005466  6EE6               	movwf	postinc1,c
  5203  005468  EC30  F029         	call	_printf	;wreg free
  5204  00546C  94BE               	bcf	16318,2,c	;volatile
  5205                           
  5206                           ;eadog.c: 198:  start_lcd();
  5207  00546E  EC4C  F02F         	call	_start_lcd	;wreg free
  5208                           
  5209                           ; BSR set to: 59
  5210                           ;eadog.c: 199:  wait_lcd_done();
  5211  005472  ECA7  F02E         	call	_wait_lcd_done	;wreg free
  5212                           
  5213                           ; BSR set to: 0
  5214  005476  82BC               	bsf	16316,1,c	;volatile
  5215                           
  5216                           ; BSR set to: 0
  5217                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5218  005478  52E5               	movf	postdec1,f,c
  5219  00547A  0012               	return		;funcret
  5220  00547C                     __end_of_send_lcd_cmd_dma:
  5221                           	opt callstack 0
  5222                           
  5223 ;; *************** function _wait_lcd_set *****************
  5224 ;; Defined at:
  5225 ;;		line 114 in file "eadog.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1  [STACK] void 
  5232 ;; Registers used:
  5233 ;;		None
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 3F/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5243 ;;Total ram usage:        0 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    3
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_eaDogM_WriteString
  5250 ;;		_send_lcd_cmd_dma
  5251 ;; This function uses a reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text25
  5255  005E92                     __ptext25:
  5256                           	opt callstack 0
  5257  005E92                     _wait_lcd_set:
  5258                           	opt callstack 25
  5259                           
  5260                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5261                           
  5262                           ; BSR set to: 0
  5263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5264                           ;incstack = 0
  5265  005E92  0100               	movlb	0	; () banked
  5266  005E94  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5267                           
  5268                           ; BSR set to: 0
  5269                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5270  005E96  0012               	return		;funcret
  5271  005E98                     __end_of_wait_lcd_set:
  5272                           	opt callstack 0
  5273                           
  5274 ;; *************** function _wait_lcd_done *****************
  5275 ;; Defined at:
  5276 ;;		line 124 in file "eadog.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1  [STACK] void 
  5283 ;; Registers used:
  5284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 3F/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    4
  5297 ;; This function calls:
  5298 ;;		_wdtdelay
  5299 ;; This function is called by:
  5300 ;;		_main
  5301 ;;		_send_lcd_cmd_dma
  5302 ;; This function uses a reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text26
  5306  005D4E                     __ptext26:
  5307                           	opt callstack 0
  5308  005D4E                     _wait_lcd_done:
  5309                           	opt callstack 26
  5310                           
  5311                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5312                           
  5313                           ; BSR set to: 0
  5314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5315                           ;incstack = 0
  5316  005D4E  0100               	movlb	0	; () banked
  5317  005D50  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5318  005D52  D7FD               	goto	_wait_lcd_done
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;eadog.c: 127:  wdtdelay(50);
  5322  005D54  0E32               	movlw	50
  5323  005D56  6EE6               	movwf	postinc1,c
  5324  005D58  0E00               	movlw	0
  5325  005D5A  6EE6               	movwf	postinc1,c
  5326  005D5C  0E00               	movlw	0
  5327  005D5E  6EE6               	movwf	postinc1,c
  5328  005D60  0E00               	movlw	0
  5329  005D62  6EE6               	movwf	postinc1,c
  5330  005D64  ECBF  F029         	call	_wdtdelay	;wreg free
  5331                           
  5332                           ; BSR set to: 0
  5333                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5334  005D68  0012               	return		;funcret
  5335  005D6A                     __end_of_wait_lcd_done:
  5336                           	opt callstack 0
  5337                           
  5338 ;; *************** function _wdtdelay *****************
  5339 ;; Defined at:
  5340 ;;		line 21 in file "eadog.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  delay           4  [STACK] unsigned long 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1  [STACK] void 
  5347 ;; Registers used:
  5348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 3F/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    3
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_init_display
  5365 ;;		_send_lcd_cmd
  5366 ;;		_send_lcd_cmd_long
  5367 ;;		_wait_lcd_done
  5368 ;; This function uses a reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text27
  5372  00537E                     __ptext27:
  5373                           	opt callstack 0
  5374  00537E                     _wdtdelay:
  5375                           	opt callstack 26
  5376                           
  5377                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  5378                           
  5379                           ; BSR set to: 0
  5380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5381                           ;incstack = 0
  5382  00537E  0100               	movlb	0	; () banked
  5383  005380  6B85               	clrf	wdtdelay@dcount& (0+255),b
  5384  005382  6B86               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5385  005384  6B87               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5386  005386  6B88               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5387  005388  D009               	goto	l5407
  5388  00538A                     l1294:
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;eadog.c: 26:   __nop();
  5392  00538A  F000               	nop	
  5393  00538C  0004               	clrwdt		;# 
  5394                           
  5395                           ;eadog.c: 28:  };
  5396  00538E  0E01               	movlw	1
  5397  005390  0100               	movlb	0	; () banked
  5398  005392  2785               	addwf	wdtdelay@dcount& (0+255),f,b
  5399  005394  0E00               	movlw	0
  5400  005396  2386               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5401  005398  2387               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5402  00539A  2388               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5403  00539C                     l5407:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;stkvar	_delay @ sp[(0)+-4]
  5407  00539C  0EFC               	movlw	-4
  5408  00539E  006F FF8C  F03D    	movff	plusw1,btemp
  5409  0053A4  5185               	movf	wdtdelay@dcount& (0+255),w,b
  5410  0053A6  5C3D               	subwf	btemp,w,c
  5411  0053A8  0EFD               	movlw	-3
  5412  0053AA  006F FF8C  F03D    	movff	plusw1,btemp
  5413  0053B0  5186               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5414  0053B2  583D               	subwfb	btemp,w,c
  5415  0053B4  0EFE               	movlw	-2
  5416  0053B6  006F FF8C  F03D    	movff	plusw1,btemp
  5417  0053BC  5187               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5418  0053BE  583D               	subwfb	btemp,w,c
  5419  0053C0  0EFF               	movlw	-1
  5420  0053C2  006F FF8C  F03D    	movff	plusw1,btemp
  5421  0053C8  5188               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5422  0053CA  583D               	subwfb	btemp,w,c
  5423  0053CC  B0D8               	btfsc	status,0,c
  5424  0053CE  D7DD               	goto	l1294
  5425                           
  5426                           ; BSR set to: 0
  5427                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5428  0053D0  52E5               	movf	postdec1,f,c
  5429  0053D2  52E5               	movf	postdec1,f,c
  5430  0053D4  52E5               	movf	postdec1,f,c
  5431  0053D6  52E5               	movf	postdec1,f,c
  5432  0053D8  0012               	return		;funcret
  5433  0053DA                     __end_of_wdtdelay:
  5434                           	opt callstack 0
  5435                           
  5436 ;; *************** function _start_lcd *****************
  5437 ;; Defined at:
  5438 ;;		line 109 in file "eadog.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;		None
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  1  [STACK] void 
  5445 ;; Registers used:
  5446 ;;		None
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/3B
  5449 ;;		On exit  : 3F/3B
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5456 ;;Total ram usage:        0 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    3
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_eaDogM_WriteString
  5463 ;;		_send_lcd_cmd_dma
  5464 ;; This function uses a reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text28
  5468  005E98                     __ptext28:
  5469                           	opt callstack 0
  5470  005E98                     _start_lcd:
  5471                           	opt callstack 25
  5472                           
  5473                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  5474                           
  5475                           ; BSR set to: 0
  5476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5477                           ;incstack = 0
  5478  005E98  013B               	movlb	59	; () banked
  5479  005E9A  8DFC               	bsf	252,6,b	;volatile
  5480                           
  5481                           ; BSR set to: 59
  5482                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5483  005E9C  0012               	return		;funcret
  5484  005E9E                     __end_of_start_lcd:
  5485                           	opt callstack 0
  5486                           
  5487 ;; *************** function _ringBufS_flush *****************
  5488 ;; Defined at:
  5489 ;;		line 76 in file "ringbufs.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5492 ;;		 -> ring_buf1(67), 
  5493 ;;  clearBuffer     1  [STACK] const char 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1  [STACK] void 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5500 ;; Tracked objects:
  5501 ;;		On entry : 3F/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5509 ;;Total ram usage:        0 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    4
  5512 ;; This function calls:
  5513 ;;		_memset
  5514 ;; This function is called by:
  5515 ;;		_eaDogM_WriteString
  5516 ;;		_send_lcd_cmd_dma
  5517 ;; This function uses a reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text29
  5521  004E20                     __ptext29:
  5522                           	opt callstack 0
  5523  004E20                     _ringBufS_flush:
  5524                           	opt callstack 24
  5525                           
  5526                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5527                           ;stkvar	__this @ sp[(0)+-2]
  5528                           
  5529                           ; BSR set to: 59
  5530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5531                           ;incstack = 0
  5532  004E20  0EFE               	movlw	-2
  5533  004E22  006F FF8C  F047    	movff	plusw1,btemp+10
  5534  004E28  0EFF               	movlw	-1
  5535  004E2A  006F FF8C  F048    	movff	plusw1,btemp+11
  5536  004E30  0E42               	movlw	66
  5537  004E32  2447               	addwf	btemp+10,w,c
  5538  004E34  6ED9               	movwf	fsr2l,c
  5539  004E36  0E00               	movlw	0
  5540  004E38  2048               	addwfc	btemp+11,w,c
  5541  004E3A  6EDA               	movwf	fsr2h,c
  5542  004E3C  0E00               	movlw	0
  5543  004E3E  6EDF               	movwf	indf2,c
  5544                           
  5545                           ;ringbufs.c: 79:  _this->head = 0;
  5546                           ;stkvar	__this @ sp[(0)+-2]
  5547  004E40  0EFE               	movlw	-2
  5548  004E42  006F FF8C  F047    	movff	plusw1,btemp+10
  5549  004E48  0EFF               	movlw	-1
  5550  004E4A  006F FF8C  F048    	movff	plusw1,btemp+11
  5551  004E50  0E40               	movlw	64
  5552  004E52  2447               	addwf	btemp+10,w,c
  5553  004E54  6ED9               	movwf	fsr2l,c
  5554  004E56  0E00               	movlw	0
  5555  004E58  2048               	addwfc	btemp+11,w,c
  5556  004E5A  6EDA               	movwf	fsr2h,c
  5557  004E5C  0E00               	movlw	0
  5558  004E5E  6EDF               	movwf	indf2,c
  5559                           
  5560                           ;ringbufs.c: 80:  _this->tail = 0;
  5561                           ;stkvar	__this @ sp[(0)+-2]
  5562  004E60  0EFE               	movlw	-2
  5563  004E62  006F FF8C  F047    	movff	plusw1,btemp+10
  5564  004E68  0EFF               	movlw	-1
  5565  004E6A  006F FF8C  F048    	movff	plusw1,btemp+11
  5566  004E70  0E41               	movlw	65
  5567  004E72  2447               	addwf	btemp+10,w,c
  5568  004E74  6ED9               	movwf	fsr2l,c
  5569  004E76  0E00               	movlw	0
  5570  004E78  2048               	addwfc	btemp+11,w,c
  5571  004E7A  6EDA               	movwf	fsr2h,c
  5572  004E7C  0E00               	movlw	0
  5573  004E7E  6EDF               	movwf	indf2,c
  5574                           
  5575                           ;ringbufs.c: 81:  if (clearBuffer) {
  5576                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  5577  004E80  0EFD               	movlw	-3
  5578  004E82  50E3               	movf	plusw1,w,c
  5579  004E84  B4D8               	btfsc	status,2,c
  5580  004E86  D011               	goto	l1434
  5581                           
  5582                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  5583  004E88  0E40               	movlw	64
  5584  004E8A  6EE6               	movwf	postinc1,c
  5585  004E8C  0E00               	movlw	0
  5586  004E8E  6EE6               	movwf	postinc1,c
  5587  004E90  0E00               	movlw	0
  5588  004E92  6EE6               	movwf	postinc1,c
  5589  004E94  0E00               	movlw	0
  5590  004E96  6EE6               	movwf	postinc1,c
  5591                           
  5592                           ;stkvar	__this @ sp[(-4)+-2]
  5593  004E98  0EFA               	movlw	-6
  5594  004E9A  006F FF8F FFE6     	movff	plusw1,postinc1
  5595  004EA0  006F FF8F FFE6     	movff	plusw1,postinc1
  5596  004EA6  EC90  F017         	call	_memset	;wreg free
  5597  004EAA                     l1434:
  5598                           
  5599                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  5600  004EAA  52E5               	movf	postdec1,f,c
  5601  004EAC  52E5               	movf	postdec1,f,c
  5602  004EAE  52E5               	movf	postdec1,f,c
  5603  004EB0  0012               	return		;funcret
  5604  004EB2                     __end_of_ringBufS_flush:
  5605                           	opt callstack 0
  5606                           
  5607 ;; *************** function _memset *****************
  5608 ;; Defined at:
  5609 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  dest            2  [STACK] PTR void 
  5612 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5613 ;;  c               2  [STACK] int 
  5614 ;;  n               2  [STACK] unsigned int 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  s               2  [STACK] PTR unsigned char 
  5617 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5618 ;;  k               2  [STACK] unsigned int 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  2  [STACK] PTR void 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5632 ;;Total ram usage:        0 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    3
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_ringBufS_init
  5639 ;;		_ringBufS_flush
  5640 ;; This function uses a reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text30
  5644  002F20                     __ptext30:
  5645                           	opt callstack 0
  5646  002F20                     _memset:
  5647                           	opt callstack 0
  5648                           
  5649                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5650  002F20  52E6               	movf	postinc1,f,c
  5651  002F22  52E6               	movf	postinc1,f,c
  5652  002F24  52E6               	movf	postinc1,f,c
  5653  002F26  52E6               	movf	postinc1,f,c
  5654                           
  5655                           ;stkvar	_dest @ sp[(-4)+-2]
  5656                           
  5657                           ;incstack = 0
  5658  002F28  0EFA               	movlw	-6
  5659  002F2A  006F FF8C  F047    	movff	plusw1,btemp+10
  5660  002F30  0EFB               	movlw	-5
  5661  002F32  006F FF8C  F048    	movff	plusw1,btemp+11
  5662                           
  5663                           ;stkvar	_s @ sp[(-4)+0]
  5664  002F38  0EFD               	movlw	-3
  5665  002F3A  0060  F123  FFE3   	movff	btemp+11,plusw1
  5666  002F40  0EFC               	movlw	-4
  5667  002F42  0060  F11F  FFE3   	movff	btemp+10,plusw1
  5668                           
  5669                           ;stkvar	_n @ sp[(-4)+-6]
  5670  002F48  0EF6               	movlw	-10
  5671  002F4A  006F FF8C  F03D    	movff	plusw1,btemp
  5672  002F50  0EF7               	movlw	-9
  5673  002F52  50E3               	movf	plusw1,w,c
  5674  002F54  103D               	iorwf	btemp,w,c
  5675  002F56  B4D8               	btfsc	status,2,c
  5676  002F58  D154               	goto	u4630
  5677                           
  5678                           ;stkvar	_c @ sp[(-4)+-4]
  5679                           ;stkvar	_s @ sp[(-4)+0]
  5680  002F5A  0EFC               	movlw	-4
  5681  002F5C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5682  002F62  0EFD               	movlw	-3
  5683  002F64  006F FF8F FFDA     	movff	plusw1,fsr2h
  5684  002F6A  0EF8               	movlw	-8
  5685  002F6C  006F FF8F FFDF     	movff	plusw1,indf2
  5686                           
  5687                           ;stkvar	_c @ sp[(-4)+-4]
  5688                           ;stkvar	_n @ sp[(-4)+-6]
  5689                           ;stkvar	_s @ sp[(-4)+0]
  5690  002F72  0EFC               	movlw	-4
  5691  002F74  006F FF8C  F047    	movff	plusw1,btemp+10
  5692  002F7A  0EFD               	movlw	-3
  5693  002F7C  006F FF8C  F048    	movff	plusw1,btemp+11
  5694  002F82  0EF6               	movlw	-10
  5695  002F84  50E3               	movf	plusw1,w,c
  5696  002F86  2647               	addwf	btemp+10,f,c
  5697  002F88  0EF7               	movlw	-9
  5698  002F8A  50E3               	movf	plusw1,w,c
  5699  002F8C  2248               	addwfc	btemp+11,f,c
  5700  002F8E  0EFF               	movlw	255
  5701  002F90  2447               	addwf	btemp+10,w,c
  5702  002F92  6ED9               	movwf	fsr2l,c
  5703  002F94  0EFF               	movlw	255
  5704  002F96  2048               	addwfc	btemp+11,w,c
  5705  002F98  6EDA               	movwf	fsr2h,c
  5706  002F9A  0EF8               	movlw	-8
  5707  002F9C  006F FF8F FFDF     	movff	plusw1,indf2
  5708                           
  5709                           ;stkvar	_n @ sp[(-4)+-6]
  5710  002FA2  0EF7               	movlw	-9
  5711  002FA4  50E3               	movf	plusw1,w,c
  5712  002FA6  E108               	bnz	l7355
  5713  002FA8  0EF6               	movlw	-10
  5714  002FAA  006F FF8C  F03D    	movff	plusw1,btemp
  5715  002FB0  0E03               	movlw	3
  5716  002FB2  5E3D               	subwf	btemp,f,c
  5717  002FB4  A0D8               	btfss	status,0,c
  5718  002FB6  D125               	goto	u4630
  5719  002FB8                     l7355:
  5720                           
  5721                           ;stkvar	_c @ sp[(-4)+-4]
  5722                           ;stkvar	_s @ sp[(-4)+0]
  5723  002FB8  0EFC               	movlw	-4
  5724  002FBA  006F FF8C  F047    	movff	plusw1,btemp+10
  5725  002FC0  0EFD               	movlw	-3
  5726  002FC2  006F FF8C  F048    	movff	plusw1,btemp+11
  5727  002FC8  0E01               	movlw	1
  5728  002FCA  2447               	addwf	btemp+10,w,c
  5729  002FCC  6ED9               	movwf	fsr2l,c
  5730  002FCE  0E00               	movlw	0
  5731  002FD0  2048               	addwfc	btemp+11,w,c
  5732  002FD2  6EDA               	movwf	fsr2h,c
  5733  002FD4  0EF8               	movlw	-8
  5734  002FD6  006F FF8F FFDF     	movff	plusw1,indf2
  5735                           
  5736                           ;stkvar	_c @ sp[(-4)+-4]
  5737                           ;stkvar	_s @ sp[(-4)+0]
  5738  002FDC  0EFC               	movlw	-4
  5739  002FDE  006F FF8C  F047    	movff	plusw1,btemp+10
  5740  002FE4  0EFD               	movlw	-3
  5741  002FE6  006F FF8C  F048    	movff	plusw1,btemp+11
  5742  002FEC  0E02               	movlw	2
  5743  002FEE  2447               	addwf	btemp+10,w,c
  5744  002FF0  6ED9               	movwf	fsr2l,c
  5745  002FF2  0E00               	movlw	0
  5746  002FF4  2048               	addwfc	btemp+11,w,c
  5747  002FF6  6EDA               	movwf	fsr2h,c
  5748  002FF8  0EF8               	movlw	-8
  5749  002FFA  006F FF8F FFDF     	movff	plusw1,indf2
  5750                           
  5751                           ;stkvar	_c @ sp[(-4)+-4]
  5752                           ;stkvar	_n @ sp[(-4)+-6]
  5753                           ;stkvar	_s @ sp[(-4)+0]
  5754  003000  0EFC               	movlw	-4
  5755  003002  006F FF8C  F047    	movff	plusw1,btemp+10
  5756  003008  0EFD               	movlw	-3
  5757  00300A  006F FF8C  F048    	movff	plusw1,btemp+11
  5758  003010  0EF6               	movlw	-10
  5759  003012  50E3               	movf	plusw1,w,c
  5760  003014  2647               	addwf	btemp+10,f,c
  5761  003016  0EF7               	movlw	-9
  5762  003018  50E3               	movf	plusw1,w,c
  5763  00301A  2248               	addwfc	btemp+11,f,c
  5764  00301C  0EFE               	movlw	254
  5765  00301E  2447               	addwf	btemp+10,w,c
  5766  003020  6ED9               	movwf	fsr2l,c
  5767  003022  0EFF               	movlw	255
  5768  003024  2048               	addwfc	btemp+11,w,c
  5769  003026  6EDA               	movwf	fsr2h,c
  5770  003028  0EF8               	movlw	-8
  5771  00302A  006F FF8F FFDF     	movff	plusw1,indf2
  5772                           
  5773                           ;stkvar	_c @ sp[(-4)+-4]
  5774                           ;stkvar	_n @ sp[(-4)+-6]
  5775                           ;stkvar	_s @ sp[(-4)+0]
  5776  003030  0EFC               	movlw	-4
  5777  003032  006F FF8C  F047    	movff	plusw1,btemp+10
  5778  003038  0EFD               	movlw	-3
  5779  00303A  006F FF8C  F048    	movff	plusw1,btemp+11
  5780  003040  0EF6               	movlw	-10
  5781  003042  50E3               	movf	plusw1,w,c
  5782  003044  2647               	addwf	btemp+10,f,c
  5783  003046  0EF7               	movlw	-9
  5784  003048  50E3               	movf	plusw1,w,c
  5785  00304A  2248               	addwfc	btemp+11,f,c
  5786  00304C  0EFD               	movlw	253
  5787  00304E  2447               	addwf	btemp+10,w,c
  5788  003050  6ED9               	movwf	fsr2l,c
  5789  003052  0EFF               	movlw	255
  5790  003054  2048               	addwfc	btemp+11,w,c
  5791  003056  6EDA               	movwf	fsr2h,c
  5792  003058  0EF8               	movlw	-8
  5793  00305A  006F FF8F FFDF     	movff	plusw1,indf2
  5794                           
  5795                           ;stkvar	_n @ sp[(-4)+-6]
  5796  003060  0EF7               	movlw	-9
  5797  003062  50E3               	movf	plusw1,w,c
  5798  003064  E108               	bnz	l7361
  5799  003066  0EF6               	movlw	-10
  5800  003068  006F FF8C  F03D    	movff	plusw1,btemp
  5801  00306E  0E07               	movlw	7
  5802  003070  5E3D               	subwf	btemp,f,c
  5803  003072  A0D8               	btfss	status,0,c
  5804  003074  D0C6               	goto	u4630
  5805  003076                     l7361:
  5806                           
  5807                           ;stkvar	_c @ sp[(-4)+-4]
  5808                           ;stkvar	_s @ sp[(-4)+0]
  5809  003076  0EFC               	movlw	-4
  5810  003078  006F FF8C  F047    	movff	plusw1,btemp+10
  5811  00307E  0EFD               	movlw	-3
  5812  003080  006F FF8C  F048    	movff	plusw1,btemp+11
  5813  003086  0E03               	movlw	3
  5814  003088  2447               	addwf	btemp+10,w,c
  5815  00308A  6ED9               	movwf	fsr2l,c
  5816  00308C  0E00               	movlw	0
  5817  00308E  2048               	addwfc	btemp+11,w,c
  5818  003090  6EDA               	movwf	fsr2h,c
  5819  003092  0EF8               	movlw	-8
  5820  003094  006F FF8F FFDF     	movff	plusw1,indf2
  5821                           
  5822                           ;stkvar	_c @ sp[(-4)+-4]
  5823                           ;stkvar	_n @ sp[(-4)+-6]
  5824                           ;stkvar	_s @ sp[(-4)+0]
  5825  00309A  0EFC               	movlw	-4
  5826  00309C  006F FF8C  F047    	movff	plusw1,btemp+10
  5827  0030A2  0EFD               	movlw	-3
  5828  0030A4  006F FF8C  F048    	movff	plusw1,btemp+11
  5829  0030AA  0EF6               	movlw	-10
  5830  0030AC  50E3               	movf	plusw1,w,c
  5831  0030AE  2647               	addwf	btemp+10,f,c
  5832  0030B0  0EF7               	movlw	-9
  5833  0030B2  50E3               	movf	plusw1,w,c
  5834  0030B4  2248               	addwfc	btemp+11,f,c
  5835  0030B6  0EFC               	movlw	252
  5836  0030B8  2447               	addwf	btemp+10,w,c
  5837  0030BA  6ED9               	movwf	fsr2l,c
  5838  0030BC  0EFF               	movlw	255
  5839  0030BE  2048               	addwfc	btemp+11,w,c
  5840  0030C0  6EDA               	movwf	fsr2h,c
  5841  0030C2  0EF8               	movlw	-8
  5842  0030C4  006F FF8F FFDF     	movff	plusw1,indf2
  5843                           
  5844                           ;stkvar	_n @ sp[(-4)+-6]
  5845  0030CA  0EF7               	movlw	-9
  5846  0030CC  50E3               	movf	plusw1,w,c
  5847  0030CE  E108               	bnz	l7367
  5848  0030D0  0EF6               	movlw	-10
  5849  0030D2  006F FF8C  F03D    	movff	plusw1,btemp
  5850  0030D8  0E09               	movlw	9
  5851  0030DA  5E3D               	subwf	btemp,f,c
  5852  0030DC  A0D8               	btfss	status,0,c
  5853  0030DE  D091               	goto	u4630
  5854  0030E0                     l7367:
  5855                           
  5856                           ;stkvar	_s @ sp[(-4)+0]
  5857  0030E0  0EFC               	movlw	-4
  5858  0030E2  006F FF8C  F047    	movff	plusw1,btemp+10
  5859  0030E8  1E47               	comf	btemp+10,f,c
  5860  0030EA  0EFD               	movlw	-3
  5861  0030EC  006F FF8C  F048    	movff	plusw1,btemp+11
  5862  0030F2  1E48               	comf	btemp+11,f,c
  5863  0030F4  2A47               	incf	btemp+10,f,c
  5864  0030F6  B4D8               	btfsc	status,2,c
  5865  0030F8  2A48               	incf	btemp+11,f,c
  5866  0030FA  0E03               	movlw	3
  5867  0030FC  1647               	andwf	btemp+10,f,c
  5868  0030FE  0E00               	movlw	0
  5869  003100  1648               	andwf	btemp+11,f,c
  5870                           
  5871                           ;stkvar	_k @ sp[(-4)+2]
  5872  003102  0EFE               	movlw	-2
  5873  003104  0060  F11F  FFE3   	movff	btemp+10,plusw1
  5874  00310A  0EFF               	movlw	-1
  5875  00310C  0060  F123  FFE3   	movff	btemp+11,plusw1
  5876                           
  5877                           ;stkvar	_k @ sp[(-4)+2]
  5878                           ;stkvar	_s @ sp[(-4)+0]
  5879  003112  0EFC               	movlw	-4
  5880  003114  50E3               	movf	plusw1,w,c
  5881  003116  6E3D               	movwf	btemp,c
  5882  003118  0EFE               	movlw	-2
  5883  00311A  50E3               	movf	plusw1,w,c
  5884  00311C  263D               	addwf	btemp,f,c
  5885  00311E  0EFC               	movlw	-4
  5886  003120  0060  F0F7  FFE3   	movff	btemp,plusw1
  5887  003126  0EFD               	movlw	-3
  5888  003128  50E3               	movf	plusw1,w,c
  5889  00312A  6E3D               	movwf	btemp,c
  5890  00312C  0EFF               	movlw	-1
  5891  00312E  50E3               	movf	plusw1,w,c
  5892  003130  223D               	addwfc	btemp,f,c
  5893  003132  0EFD               	movlw	-3
  5894  003134  0060  F0F7  FFE3   	movff	btemp,plusw1
  5895                           
  5896                           ;stkvar	_k @ sp[(-4)+2]
  5897                           ;stkvar	_n @ sp[(-4)+-6]
  5898  00313A  0EF6               	movlw	-10
  5899  00313C  50E3               	movf	plusw1,w,c
  5900  00313E  6E3D               	movwf	btemp,c
  5901  003140  0EFE               	movlw	-2
  5902  003142  50E3               	movf	plusw1,w,c
  5903  003144  5E3D               	subwf	btemp,f,c
  5904  003146  0EF6               	movlw	-10
  5905  003148  0060  F0F7  FFE3   	movff	btemp,plusw1
  5906  00314E  0EF7               	movlw	-9
  5907  003150  50E3               	movf	plusw1,w,c
  5908  003152  6E3D               	movwf	btemp,c
  5909  003154  0EFF               	movlw	-1
  5910  003156  50E3               	movf	plusw1,w,c
  5911  003158  5A3D               	subwfb	btemp,f,c
  5912  00315A  0EF7               	movlw	-9
  5913  00315C  0060  F0F7  FFE3   	movff	btemp,plusw1
  5914  003162  0EFC               	movlw	252
  5915  003164  6E47               	movwf	btemp+10,c
  5916  003166  0EFF               	movlw	255
  5917  003168  6E48               	movwf	btemp+11,c
  5918                           
  5919                           ;stkvar	_n @ sp[(-4)+-6]
  5920  00316A  0EF6               	movlw	-10
  5921  00316C  006F FF8C  F03D    	movff	plusw1,btemp
  5922  003172  5047               	movf	btemp+10,w,c
  5923  003174  163D               	andwf	btemp,f,c
  5924  003176  0EF6               	movlw	-10
  5925  003178  0060  F0F7  FFE3   	movff	btemp,plusw1
  5926  00317E  0EF7               	movlw	-9
  5927  003180  006F FF8C  F03D    	movff	plusw1,btemp
  5928  003186  5048               	movf	btemp+11,w,c
  5929  003188  163D               	andwf	btemp,f,c
  5930  00318A  0EF7               	movlw	-9
  5931  00318C  D02E               	goto	L18
  5932  00318E                     l7375:
  5933                           
  5934                           ;stkvar	_c @ sp[(-4)+-4]
  5935                           ;stkvar	_s @ sp[(-4)+0]
  5936  00318E  0EFC               	movlw	-4
  5937  003190  006F FF8F FFD9     	movff	plusw1,fsr2l
  5938  003196  0EFD               	movlw	-3
  5939  003198  006F FF8F FFDA     	movff	plusw1,fsr2h
  5940  00319E  0EF8               	movlw	-8
  5941  0031A0  006F FF8F FFDF     	movff	plusw1,indf2
  5942                           
  5943                           ;stkvar	_n @ sp[(-4)+-6]
  5944  0031A6  0EF6               	movlw	-10
  5945  0031A8  006F FF8C  F03D    	movff	plusw1,btemp
  5946  0031AE  0E01               	movlw	1
  5947  0031B0  5E3D               	subwf	btemp,f,c
  5948  0031B2  0EF6               	movlw	-10
  5949  0031B4  0060  F0F7  FFE3   	movff	btemp,plusw1
  5950  0031BA  0EF7               	movlw	-9
  5951  0031BC  006F FF8C  F03D    	movff	plusw1,btemp
  5952  0031C2  0E00               	movlw	0
  5953  0031C4  5A3D               	subwfb	btemp,f,c
  5954  0031C6  0EF7               	movlw	-9
  5955  0031C8  0060  F0F7  FFE3   	movff	btemp,plusw1
  5956                           
  5957                           ;stkvar	_s @ sp[(-4)+0]
  5958  0031CE  0EFC               	movlw	-4
  5959  0031D0  50E3               	movf	plusw1,w,c
  5960  0031D2  0F01               	addlw	1
  5961  0031D4  6E3D               	movwf	btemp,c
  5962  0031D6  0EFC               	movlw	-4
  5963  0031D8  0060  F0F7  FFE3   	movff	btemp,plusw1
  5964  0031DE  6A3D               	clrf	btemp,c
  5965  0031E0  0EFD               	movlw	-3
  5966  0031E2  50E3               	movf	plusw1,w,c
  5967  0031E4  203D               	addwfc	btemp,w,c
  5968  0031E6  6E3D               	movwf	btemp,c
  5969  0031E8  0EFD               	movlw	-3
  5970  0031EA                     L18:
  5971  0031EA  0060  F0F7  FFE3   	movff	btemp,plusw1
  5972                           
  5973                           ;stkvar	_n @ sp[(-4)+-6]
  5974  0031F0  0EF6               	movlw	-10
  5975  0031F2  006F FF8C  F03D    	movff	plusw1,btemp
  5976  0031F8  0EF7               	movlw	-9
  5977  0031FA  50E3               	movf	plusw1,w,c
  5978  0031FC  103D               	iorwf	btemp,w,c
  5979  0031FE  A4D8               	btfss	status,2,c
  5980  003200  D7C6               	goto	l7375
  5981  003202                     u4630:
  5982                           
  5983                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  5984  003202  0EF6               	movlw	246
  5985  003204  26E1               	addwf	fsr1l,f,c
  5986  003206  0EFF               	movlw	255
  5987  003208  22E2               	addwfc	fsr1h,f,c
  5988  00320A  0012               	return		;funcret
  5989  00320C                     __end_of_memset:
  5990                           	opt callstack 0
  5991                           
  5992 ;; *************** function _printf *****************
  5993 ;; Defined at:
  5994 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  fmt             1  [STACK] PTR const unsigned char 
  5997 ;;		 -> STR_8(3), STR_7(3), STR_6(3), 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  ap              2  [STACK] PTR void [1]
  6000 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6001 ;;  ret             2    0        int 
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  2  [STACK] int 
  6004 ;; Registers used:
  6005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6006 ;; Tracked objects:
  6007 ;;		On entry : 3F/3B
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6015 ;;Total ram usage:        0 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:   11
  6018 ;; This function calls:
  6019 ;;		_vfprintf
  6020 ;; This function is called by:
  6021 ;;		_eaDogM_WriteString
  6022 ;;		_send_lcd_cmd_dma
  6023 ;; This function uses a reentrant model
  6024 ;;
  6025                           
  6026                           	psect	text31
  6027  005260                     __ptext31:
  6028                           	opt callstack 0
  6029  005260                     _printf:
  6030                           	opt callstack 0
  6031                           
  6032                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6033  005260  52E6               	movf	postinc1,f,c
  6034  005262  52E6               	movf	postinc1,f,c
  6035                           
  6036                           ;stkvar	?_printf @ sp[(-2)+-3]
  6037                           
  6038                           ;incstack = 0
  6039  005264  0EFB               	movlw	251
  6040  005266  24E1               	addwf	fsr1l,w,c
  6041  005268  6E47               	movwf	btemp+10,c
  6042  00526A  0EFF               	movlw	255
  6043  00526C  20E2               	addwfc	fsr1h,w,c
  6044  00526E  6E48               	movwf	btemp+11,c
  6045  005270  0E01               	movlw	1
  6046  005272  2647               	addwf	btemp+10,f,c
  6047  005274  0E00               	movlw	0
  6048  005276  2248               	addwfc	btemp+11,f,c
  6049                           
  6050                           ;stkvar	_ap @ sp[(-2)+0]
  6051  005278  0EFF               	movlw	-1
  6052  00527A  0060  F123  FFE3   	movff	btemp+11,plusw1
  6053  005280  0EFE               	movlw	-2
  6054  005282  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6055                           
  6056                           ;stkvar	_ap @ sp[(-2)+0]
  6057  005288  0EFE               	movlw	254
  6058  00528A  24E1               	addwf	fsr1l,w,c
  6059  00528C  6E3D               	movwf	btemp,c
  6060  00528E  0EFF               	movlw	255
  6061  005290  20E2               	addwfc	fsr1h,w,c
  6062  005292  6E3E               	movwf	btemp+1,c
  6063  005294  0060  F0F7  FFE6   	movff	btemp,postinc1
  6064  00529A  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  6065                           
  6066                           ;stkvar	_fmt @ sp[(-4)+-2]
  6067  0052A0  0EFA               	movlw	-6
  6068  0052A2  50E3               	movf	plusw1,w,c
  6069  0052A4  6EE6               	movwf	postinc1,c
  6070  0052A6  0E00               	movlw	0
  6071  0052A8  6EE6               	movwf	postinc1,c
  6072  0052AA  0E00               	movlw	0
  6073  0052AC  6EE6               	movwf	postinc1,c
  6074  0052AE  ECC6  F026         	call	_vfprintf	;wreg free
  6075                           
  6076                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6077  0052B2  52E5               	movf	postdec1,f,c
  6078  0052B4  52E5               	movf	postdec1,f,c
  6079  0052B6  52E5               	movf	postdec1,f,c
  6080  0052B8  50E7               	movf	indf1,w,c
  6081  0052BA  5EE1               	subwf	fsr1l,f,c
  6082  0052BC  0E00               	movlw	0
  6083  0052BE  5AE2               	subwfb	fsr1h,f,c
  6084  0052C0  0012               	return		;funcret
  6085  0052C2                     __end_of_printf:
  6086                           	opt callstack 0
  6087                           
  6088 ;; *************** function _vfprintf *****************
  6089 ;; Defined at:
  6090 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6093 ;;		 -> f(5), NULL(0), 
  6094 ;;  fmt             1  [STACK] PTR const unsigned char 
  6095 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(23), 
  6096 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
  6097 ;;  ap              2  [STACK] PTR PTR void 
  6098 ;;		 -> ap(2), ap(2), 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  cfmt            1  [STACK] PTR unsigned char 
  6101 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(23), 
  6102 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  2  [STACK] int 
  6105 ;; Registers used:
  6106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/1
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:   10
  6119 ;; This function calls:
  6120 ;;		_vfpfcnvrt
  6121 ;; This function is called by:
  6122 ;;		_sprintf
  6123 ;;		_printf
  6124 ;; This function uses a reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text32
  6128  004D8C                     __ptext32:
  6129                           	opt callstack 0
  6130  004D8C                     _vfprintf:
  6131                           	opt callstack 0
  6132                           
  6133                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6134  004D8C  52E6               	movf	postinc1,f,c
  6135                           
  6136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6137                           ;stkvar	_fmt @ sp[(-1)+-3]
  6138                           
  6139                           ;incstack = 0
  6140  004D8E  0EFC               	movlw	-4
  6141  004D90  006F FF8C  F048    	movff	plusw1,btemp+11
  6142                           
  6143                           ;stkvar	_cfmt @ sp[(-1)+0]
  6144  004D96  0EFF               	movlw	-1
  6145  004D98  0060  F123  FFE3   	movff	btemp+11,plusw1
  6146                           
  6147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6148  004D9E  6A22               	clrf	_nout,c
  6149  004DA0  6A23               	clrf	_nout+1,c
  6150                           
  6151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6152  004DA2  D020               	goto	l7389
  6153  004DA4                     l7387:
  6154                           
  6155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6156                           ;stkvar	_ap @ sp[(-1)+-5]
  6157  004DA4  0EFA               	movlw	-6
  6158  004DA6  006F FF8F FFE6     	movff	plusw1,postinc1
  6159  004DAC  006F FF8F FFE6     	movff	plusw1,postinc1
  6160                           
  6161                           ;stkvar	_cfmt @ sp[(-3)+0]
  6162  004DB2  0EFD               	movlw	253
  6163  004DB4  24E1               	addwf	fsr1l,w,c
  6164  004DB6  6E3D               	movwf	btemp,c
  6165  004DB8  0EFF               	movlw	255
  6166  004DBA  20E2               	addwfc	fsr1h,w,c
  6167  004DBC  6E3E               	movwf	btemp+1,c
  6168  004DBE  0060  F0F7  FFE6   	movff	btemp,postinc1
  6169  004DC4  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  6170                           
  6171                           ;stkvar	_fp @ sp[(-5)+-2]
  6172  004DCA  0EF9               	movlw	-7
  6173  004DCC  006F FF8F FFE6     	movff	plusw1,postinc1
  6174  004DD2  006F FF8F FFE6     	movff	plusw1,postinc1
  6175  004DD8  EC38  F010         	call	_vfpfcnvrt	;wreg free
  6176  004DDC  503D               	movf	btemp,w,c
  6177  004DDE  2622               	addwf	_nout,f,c
  6178  004DE0  503E               	movf	btemp+1,w,c
  6179  004DE2  2223               	addwfc	_nout+1,f,c
  6180  004DE4                     l7389:
  6181                           
  6182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6183                           ;stkvar	_cfmt @ sp[(-1)+0]
  6184  004DE4  50E1               	movf	fsr1l,w,c
  6185  004DE6  0FFF               	addlw	-1
  6186  004DE8  6ED9               	movwf	fsr2l,c
  6187  004DEA  50E2               	movf	fsr1h,w,c
  6188  004DEC  6EDA               	movwf	fsr2h,c
  6189  004DEE  0EFF               	movlw	255
  6190  004DF0  22DA               	addwfc	fsr2h,f,c
  6191  004DF2  006F FF7F FFF6     	movff	indf2,tblptrl
  6192  004DF8                     	if	1	;There is more than 1 active tblptr byte
  6193  004DF8  0E20               	movlw	high __smallconst
  6194  004DFA  6EF7               	movwf	tblptrh,c
  6195  004DFC                     	endif
  6196  004DFC                     	if	0	;tblptru may be non-zero
  6197  004DFC                     	endif
  6198  004DFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6199  004DFC  0E00               	movlw	low (__smallconst shr (0+16))
  6200  004DFE  6EF8               	movwf	tblptru,c
  6201  004E00                     	endif
  6202  004E00  0008               	tblrd		*
  6203  004E02  50F5               	movf	tablat,w,c
  6204  004E04  0900               	iorlw	0
  6205  004E06  A4D8               	btfss	status,2,c
  6206  004E08  D7CD               	goto	l7387
  6207                           
  6208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6209  004E0A  0060  F088  F03D   	movff	_nout,btemp
  6210  004E10  0060  F08C  F03E   	movff	_nout+1,btemp+1
  6211                           
  6212                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6213  004E16  0EFA               	movlw	250
  6214  004E18  26E1               	addwf	fsr1l,f,c
  6215  004E1A  0EFF               	movlw	255
  6216  004E1C  22E2               	addwfc	fsr1h,f,c
  6217  004E1E  0012               	return		;funcret
  6218  004E20                     __end_of_vfprintf:
  6219                           	opt callstack 0
  6220                           
  6221 ;; *************** function _vfpfcnvrt *****************
  6222 ;; Defined at:
  6223 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6226 ;;		 -> f(5), NULL(0), 
  6227 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6228 ;;		 -> cfmt(1), 
  6229 ;;  ap              2  [STACK] PTR PTR void 
  6230 ;;		 -> ap(2), ap(2), 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  llu             8  [STACK] unsigned long long 
  6233 ;;  ll              8  [STACK] long long 
  6234 ;;  f               4    0        long long 
  6235 ;;  vp              3    0        PTR void 
  6236 ;;  ct              3    0        unsigned char [3]
  6237 ;;  done            2  [STACK] int 
  6238 ;;  cp              2  [STACK] PTR unsigned char 
  6239 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  6240 ;;  i               2    0        int 
  6241 ;;  c               1  [STACK] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  2  [STACK] int 
  6244 ;; Registers used:
  6245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/1
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6255 ;;Total ram usage:        0 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    9
  6258 ;; This function calls:
  6259 ;;		_atoi
  6260 ;;		_ctoa
  6261 ;;		_dtoa
  6262 ;;		_fputc
  6263 ;;		_isdigit
  6264 ;;		_stoa
  6265 ;;		_xtoa
  6266 ;; This function is called by:
  6267 ;;		_vfprintf
  6268 ;; This function uses a reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text33
  6272  002070                     __ptext33:
  6273                           	opt callstack 0
  6274  002070                     _vfpfcnvrt:
  6275                           	opt callstack 0
  6276                           
  6277                           ; autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6278  002070  0E17               	movlw	23
  6279  002072  26E1               	addwf	fsr1l,f,c
  6280  002074  0E00               	movlw	0
  6281  002076  22E2               	addwfc	fsr1h,f,c
  6282                           
  6283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6284                           ;stkvar	_fmt @ sp[(-23)+-4]
  6285                           
  6286                           ;incstack = 0
  6287  002078  0EE5               	movlw	-27
  6288  00207A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6289  002080  0EE6               	movlw	-26
  6290  002082  006F FF8F FFDA     	movff	plusw1,fsr2h
  6291  002088  006F FF7F FFF6     	movff	indf2,tblptrl
  6292  00208E                     	if	1	;There is more than 1 active tblptr byte
  6293  00208E  0E20               	movlw	high __smallconst
  6294  002090  6EF7               	movwf	tblptrh,c
  6295  002092                     	endif
  6296  002092                     	if	0	;tblptru may be non-zero
  6297  002092                     	endif
  6298  002092                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6299  002092  0E00               	movlw	low (__smallconst shr (0+16))
  6300  002094  6EF8               	movwf	tblptru,c
  6301  002096                     	endif
  6302  002096  0008               	tblrd		*
  6303  002098  50F5               	movf	tablat,w,c
  6304  00209A  0A25               	xorlw	37
  6305  00209C  A4D8               	btfss	status,2,c
  6306  00209E  D327               	goto	l7329
  6307                           
  6308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6309                           ;stkvar	_fmt @ sp[(-23)+-4]
  6310  0020A0  0EE5               	movlw	-27
  6311  0020A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6312  0020A8  0EE6               	movlw	-26
  6313  0020AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6314  0020B0  2ADF               	incf	indf2,f,c
  6315                           
  6316                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6317  0020B2  6A24               	clrf	_width,c
  6318  0020B4  6A25               	clrf	_width+1,c
  6319  0020B6  6A28               	clrf	_flags,c
  6320  0020B8  6A29               	clrf	_flags+1,c
  6321                           
  6322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6323  0020BA  6826               	setf	_prec,c
  6324  0020BC  6827               	setf	_prec+1,c
  6325                           
  6326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  6327                           ;stkvar	_done @ sp[(-23)+18]
  6328  0020BE  0EFB               	movlw	-5
  6329  0020C0  6AE3               	clrf	plusw1,c
  6330  0020C2  0EFC               	movlw	-4
  6331  0020C4  6AE3               	clrf	plusw1,c
  6332                           
  6333                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  6334  0020C6  D048               	goto	l7243
  6335  0020C8                     l7217:
  6336                           
  6337                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  6338  0020C8  8028               	bsf	_flags,0,c
  6339  0020CA                     l7219:
  6340                           
  6341                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  6342                           ;stkvar	_fmt @ sp[(-23)+-4]
  6343  0020CA  0EE5               	movlw	-27
  6344  0020CC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6345  0020D2  0EE6               	movlw	-26
  6346  0020D4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6347  0020DA  2ADF               	incf	indf2,f,c
  6348                           
  6349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  6350  0020DC  D03D               	goto	l7243
  6351  0020DE                     l7221:
  6352                           
  6353                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  6354  0020DE  8228               	bsf	_flags,1,c
  6355  0020E0  D7F4               	goto	l7219
  6356  0020E2                     l7225:
  6357                           
  6358                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  6359  0020E2  8428               	bsf	_flags,2,c
  6360  0020E4  D7F2               	goto	l7219
  6361  0020E6                     l7229:
  6362                           
  6363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  6364  0020E6  8628               	bsf	_flags,3,c
  6365  0020E8  D7F0               	goto	l7219
  6366  0020EA                     l7233:
  6367                           
  6368                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  6369  0020EA  8828               	bsf	_flags,4,c
  6370  0020EC  D7EE               	goto	l7219
  6371  0020EE                     l7237:
  6372                           
  6373                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  6374  0020EE  0E01               	movlw	1
  6375  0020F0  6E47               	movwf	btemp+10,c
  6376  0020F2  0E00               	movlw	0
  6377  0020F4  6E48               	movwf	btemp+11,c
  6378                           
  6379                           ;stkvar	_done @ sp[(-23)+18]
  6380  0020F6  0EFB               	movlw	-5
  6381  0020F8  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6382  0020FE  0EFC               	movlw	-4
  6383  002100  0060  F123  FFE3   	movff	btemp+11,plusw1
  6384                           
  6385                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  6386  002106  D028               	goto	l7243
  6387  002108                     l7241:
  6388                           
  6389                           ;stkvar	_fmt @ sp[(-23)+-4]
  6390  002108  0EE5               	movlw	-27
  6391  00210A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6392  002110  0EE6               	movlw	-26
  6393  002112  006F FF8F FFDA     	movff	plusw1,fsr2h
  6394  002118  006F FF7F FFF6     	movff	indf2,tblptrl
  6395  00211E                     	if	1	;There is more than 1 active tblptr byte
  6396  00211E  0E20               	movlw	high __smallconst
  6397  002120  6EF7               	movwf	tblptrh,c
  6398  002122                     	endif
  6399  002122                     	if	0	;tblptru may be non-zero
  6400  002122                     	endif
  6401  002122                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6402  002122  0E00               	movlw	low (__smallconst shr (0+16))
  6403  002124  6EF8               	movwf	tblptru,c
  6404  002126                     	endif
  6405  002126  0008               	tblrd		*
  6406  002128  50F5               	movf	tablat,w,c
  6407  00212A  6E47               	movwf	btemp+10,c
  6408  00212C  6A48               	clrf	btemp+11,c
  6409                           
  6410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6411                           ; Switch size 1, requested type "simple"
  6412                           ; Number of cases is 1, Range of values is 0 to 0
  6413                           ; switch strategies available:
  6414                           ; Name         Instructions Cycles
  6415                           ; simple_byte            4     3 (average)
  6416                           ;	Chosen strategy is simple_byte
  6417  00212E  5048               	movf	btemp+11,w,c
  6418  002130  0A00               	xorlw	0	; case 0
  6419  002132  A4D8               	btfss	status,2,c
  6420  002134  D7DC               	goto	l7237
  6421                           
  6422                           ; Switch size 1, requested type "simple"
  6423                           ; Number of cases is 5, Range of values is 32 to 48
  6424                           ; switch strategies available:
  6425                           ; Name         Instructions Cycles
  6426                           ; simple_byte           16     9 (average)
  6427                           ;	Chosen strategy is simple_byte
  6428  002136  5047               	movf	btemp+10,w,c
  6429  002138  0A20               	xorlw	32	; case 32
  6430  00213A  B4D8               	btfsc	status,2,c
  6431  00213C  D7D4               	goto	l7229
  6432  00213E  0A03               	xorlw	3	; case 35
  6433  002140  B4D8               	btfsc	status,2,c
  6434  002142  D7D3               	goto	l7233
  6435  002144  0A08               	xorlw	8	; case 43
  6436  002146  B4D8               	btfsc	status,2,c
  6437  002148  D7CC               	goto	l7225
  6438  00214A  0A06               	xorlw	6	; case 45
  6439  00214C  B4D8               	btfsc	status,2,c
  6440  00214E  D7BC               	goto	l7217
  6441  002150  0A1D               	xorlw	29	; case 48
  6442  002152  B4D8               	btfsc	status,2,c
  6443  002154  D7C4               	goto	l7221
  6444  002156  D7CB               	goto	l7237
  6445  002158                     l7243:
  6446                           
  6447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  6448                           ;stkvar	_done @ sp[(-23)+18]
  6449  002158  0EFB               	movlw	-5
  6450  00215A  006F FF8C  F03D    	movff	plusw1,btemp
  6451  002160  0EFC               	movlw	-4
  6452  002162  50E3               	movf	plusw1,w,c
  6453  002164  103D               	iorwf	btemp,w,c
  6454  002166  B4D8               	btfsc	status,2,c
  6455  002168  D7CF               	goto	l7241
  6456                           
  6457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  6458  00216A  B028               	btfsc	_flags,0,c
  6459                           
  6460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  6461  00216C  9228               	bcf	_flags,1,c
  6462                           
  6463                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6464                           ;stkvar	_fmt @ sp[(-23)+-4]
  6465  00216E  0EE5               	movlw	-27
  6466  002170  006F FF8F FFD9     	movff	plusw1,fsr2l
  6467  002176  0EE6               	movlw	-26
  6468  002178  006F FF8F FFDA     	movff	plusw1,fsr2h
  6469  00217E  006F FF7F FFF6     	movff	indf2,tblptrl
  6470  002184                     	if	1	;There is more than 1 active tblptr byte
  6471  002184  0E20               	movlw	high __smallconst
  6472  002186  6EF7               	movwf	tblptrh,c
  6473  002188                     	endif
  6474  002188                     	if	0	;tblptru may be non-zero
  6475  002188                     	endif
  6476  002188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6477  002188  0E00               	movlw	low (__smallconst shr (0+16))
  6478  00218A  6EF8               	movwf	tblptru,c
  6479  00218C                     	endif
  6480  00218C  0008               	tblrd		*
  6481  00218E  50F5               	movf	tablat,w,c
  6482  002190  0A2A               	xorlw	42
  6483  002192  A4D8               	btfss	status,2,c
  6484  002194  D02F               	goto	l7257
  6485                           
  6486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6487                           ;stkvar	_fmt @ sp[(-23)+-4]
  6488  002196  0EE5               	movlw	-27
  6489  002198  006F FF8F FFD9     	movff	plusw1,fsr2l
  6490  00219E  0EE6               	movlw	-26
  6491  0021A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6492  0021A6  2ADF               	incf	indf2,f,c
  6493                           
  6494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6495                           ;stkvar	_ap @ sp[(-23)+-6]
  6496  0021A8  0EE3               	movlw	-29
  6497  0021AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6498  0021B0  0EE4               	movlw	-28
  6499  0021B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6500  0021B8  0E02               	movlw	2
  6501  0021BA  5EDE               	subwf	postinc2,f,c
  6502  0021BC  0E00               	movlw	0
  6503  0021BE  5ADD               	subwfb	postdec2,f,c
  6504  0021C0  006F FF78  F047    	movff	postinc2,btemp+10
  6505  0021C6  006F FF74  F048    	movff	postdec2,btemp+11
  6506  0021CC  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6507  0021D2  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6508  0021D8  006F FF78  F024    	movff	postinc2,_width
  6509  0021DE  006F FF74  F025    	movff	postdec2,_width+1
  6510                           
  6511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6512  0021E4  AE25               	btfss	_width+1,7,c
  6513  0021E6  D059               	goto	u4510
  6514                           
  6515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6516  0021E8  8028               	bsf	_flags,0,c
  6517                           
  6518                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6519  0021EA  6C24               	negf	_width,c
  6520  0021EC  1E25               	comf	_width+1,f,c
  6521  0021EE  B0D8               	btfsc	status,0,c
  6522  0021F0  2A25               	incf	_width+1,f,c
  6523  0021F2  D053               	goto	u4510
  6524  0021F4                     l7257:
  6525                           
  6526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6527                           ;stkvar	_fmt @ sp[(-23)+-4]
  6528  0021F4  0EE5               	movlw	-27
  6529  0021F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6530  0021FC  0EE6               	movlw	-26
  6531  0021FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6532  002204  50DF               	movf	indf2,w,c
  6533  002206  6EE6               	movwf	postinc1,c
  6534  002208  EC4C  F01F         	call	_atoi	;wreg free
  6535  00220C  0060  F0F4  F024   	movff	btemp,_width
  6536  002212  0060  F0F8  F025   	movff	btemp+1,_width+1
  6537                           
  6538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6539  002218  D009               	goto	l7261
  6540  00221A                     l7259:
  6541                           
  6542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6543                           ;stkvar	_fmt @ sp[(-23)+-4]
  6544  00221A  0EE5               	movlw	-27
  6545  00221C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6546  002222  0EE6               	movlw	-26
  6547  002224  006F FF8F FFDA     	movff	plusw1,fsr2h
  6548  00222A  2ADF               	incf	indf2,f,c
  6549  00222C                     l7261:
  6550  00222C  0ED0               	movlw	208
  6551  00222E  6E47               	movwf	btemp+10,c
  6552  002230  0EFF               	movlw	255
  6553  002232  6E48               	movwf	btemp+11,c
  6554                           
  6555                           ;stkvar	_fmt @ sp[(-23)+-4]
  6556  002234  0EE5               	movlw	-27
  6557  002236  006F FF8F FFD9     	movff	plusw1,fsr2l
  6558  00223C  0EE6               	movlw	-26
  6559  00223E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6560  002244  006F FF7F FFF6     	movff	indf2,tblptrl
  6561  00224A                     	if	1	;There is more than 1 active tblptr byte
  6562  00224A  0E20               	movlw	high __smallconst
  6563  00224C  6EF7               	movwf	tblptrh,c
  6564  00224E                     	endif
  6565  00224E                     	if	0	;tblptru may be non-zero
  6566  00224E                     	endif
  6567  00224E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6568  00224E  0E00               	movlw	low (__smallconst shr (0+16))
  6569  002250  6EF8               	movwf	tblptru,c
  6570  002252                     	endif
  6571  002252  0008               	tblrd		*
  6572  002254  50F5               	movf	tablat,w,c
  6573  002256  6E45               	movwf	btemp+8,c
  6574  002258  6A46               	clrf	btemp+9,c
  6575  00225A  5047               	movf	btemp+10,w,c
  6576  00225C  2645               	addwf	btemp+8,f,c
  6577  00225E  5048               	movf	btemp+11,w,c
  6578  002260  2246               	addwfc	btemp+9,f,c
  6579  002262  5046               	movf	btemp+9,w,c
  6580  002264  E106               	bnz	u4490
  6581  002266  0E0A               	movlw	10
  6582  002268  5C45               	subwf	btemp+8,w,c
  6583  00226A  B0D8               	btfsc	status,0,c
  6584  00226C  D002               	goto	u4490
  6585  00226E  0E01               	movlw	1
  6586  002270  D001               	goto	u4500
  6587  002272                     u4490:
  6588  002272  0E00               	movlw	0
  6589  002274                     u4500:
  6590  002274  6E47               	movwf	btemp+10,c
  6591  002276  6A48               	clrf	btemp+11,c
  6592                           
  6593                           ;stkvar	_vfpfcnvrt$3757 @ sp[(-23)+0]
  6594  002278  0EE9               	movlw	-23
  6595  00227A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6596  002280  0EEA               	movlw	-22
  6597  002282  0060  F123  FFE3   	movff	btemp+11,plusw1
  6598                           
  6599                           ;stkvar	_vfpfcnvrt$3757 @ sp[(-23)+0]
  6600  002288  0EE9               	movlw	-23
  6601  00228A  006F FF8C  F03D    	movff	plusw1,btemp
  6602  002290  0EEA               	movlw	-22
  6603  002292  50E3               	movf	plusw1,w,c
  6604  002294  103D               	iorwf	btemp,w,c
  6605  002296  A4D8               	btfss	status,2,c
  6606  002298  D7C0               	goto	l7259
  6607  00229A                     u4510:
  6608                           
  6609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6610                           ;stkvar	_fmt @ sp[(-23)+-4]
  6611  00229A  0EE5               	movlw	-27
  6612  00229C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6613  0022A2  0EE6               	movlw	-26
  6614  0022A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6615  0022AA  006F FF7F FFF6     	movff	indf2,tblptrl
  6616  0022B0                     	if	1	;There is more than 1 active tblptr byte
  6617  0022B0  0E20               	movlw	high __smallconst
  6618  0022B2  6EF7               	movwf	tblptrh,c
  6619  0022B4                     	endif
  6620  0022B4                     	if	0	;tblptru may be non-zero
  6621  0022B4                     	endif
  6622  0022B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6623  0022B4  0E00               	movlw	low (__smallconst shr (0+16))
  6624  0022B6  6EF8               	movwf	tblptru,c
  6625  0022B8                     	endif
  6626  0022B8  0008               	tblrd		*
  6627  0022BA  50F5               	movf	tablat,w,c
  6628  0022BC  0A63               	xorlw	99
  6629  0022BE  A4D8               	btfss	status,2,c
  6630  0022C0  D034               	goto	l7277
  6631                           
  6632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6633                           ;stkvar	_fmt @ sp[(-23)+-4]
  6634  0022C2  0EE5               	movlw	-27
  6635  0022C4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6636  0022CA  0EE6               	movlw	-26
  6637  0022CC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6638  0022D2  2ADF               	incf	indf2,f,c
  6639                           
  6640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6641                           ;stkvar	_ap @ sp[(-23)+-6]
  6642  0022D4  0EE3               	movlw	-29
  6643  0022D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6644  0022DC  0EE4               	movlw	-28
  6645  0022DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6646  0022E4  0E02               	movlw	2
  6647  0022E6  5EDE               	subwf	postinc2,f,c
  6648  0022E8  0E00               	movlw	0
  6649  0022EA  5ADD               	subwfb	postdec2,f,c
  6650  0022EC  006F FF78  F047    	movff	postinc2,btemp+10
  6651  0022F2  006F FF74  F048    	movff	postdec2,btemp+11
  6652  0022F8  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6653  0022FE  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6654  002304  50DF               	movf	indf2,w,c
  6655  002306  6E48               	movwf	btemp+11,c
  6656                           
  6657                           ;stkvar	_c @ sp[(-23)+22]
  6658  002308  0EFF               	movlw	-1
  6659  00230A  0060  F123  FFE3   	movff	btemp+11,plusw1
  6660                           
  6661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6662                           ;stkvar	_c @ sp[(-23)+22]
  6663  002310  0EFF               	movlw	-1
  6664  002312  50E3               	movf	plusw1,w,c
  6665  002314  6EE6               	movwf	postinc1,c
  6666                           
  6667                           ;stkvar	_fp @ sp[(-24)+-2]
  6668  002316  0EE6               	movlw	-26
  6669  002318  006F FF8F FFE6     	movff	plusw1,postinc1
  6670  00231E  006F FF8F FFE6     	movff	plusw1,postinc1
  6671  002324  EC9B  F027         	call	_ctoa	;wreg free
  6672  002328  D209               	goto	l1762
  6673  00232A                     l7277:
  6674                           
  6675                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6676                           ;stkvar	_fmt @ sp[(-23)+-4]
  6677  00232A  0EE5               	movlw	-27
  6678  00232C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6679  002332  0EE6               	movlw	-26
  6680  002334  006F FF8F FFDA     	movff	plusw1,fsr2h
  6681  00233A  006F FF7F FFF6     	movff	indf2,tblptrl
  6682  002340                     	if	1	;There is more than 1 active tblptr byte
  6683  002340  0E20               	movlw	high __smallconst
  6684  002342  6EF7               	movwf	tblptrh,c
  6685  002344                     	endif
  6686  002344                     	if	0	;tblptru may be non-zero
  6687  002344                     	endif
  6688  002344                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6689  002344  0E00               	movlw	low (__smallconst shr (0+16))
  6690  002346  6EF8               	movwf	tblptru,c
  6691  002348                     	endif
  6692  002348  0008               	tblrd		*
  6693  00234A  50F5               	movf	tablat,w,c
  6694  00234C  0A64               	xorlw	100
  6695  00234E  B4D8               	btfsc	status,2,c
  6696  002350  D014               	goto	u4540
  6697                           
  6698                           ;stkvar	_fmt @ sp[(-23)+-4]
  6699  002352  0EE5               	movlw	-27
  6700  002354  006F FF8F FFD9     	movff	plusw1,fsr2l
  6701  00235A  0EE6               	movlw	-26
  6702  00235C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6703  002362  006F FF7F FFF6     	movff	indf2,tblptrl
  6704  002368                     	if	1	;There is more than 1 active tblptr byte
  6705  002368  0E20               	movlw	high __smallconst
  6706  00236A  6EF7               	movwf	tblptrh,c
  6707  00236C                     	endif
  6708  00236C                     	if	0	;tblptru may be non-zero
  6709  00236C                     	endif
  6710  00236C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6711  00236C  0E00               	movlw	low (__smallconst shr (0+16))
  6712  00236E  6EF8               	movwf	tblptru,c
  6713  002370                     	endif
  6714  002370  0008               	tblrd		*
  6715  002372  50F5               	movf	tablat,w,c
  6716  002374  0A69               	xorlw	105
  6717  002376  A4D8               	btfss	status,2,c
  6718  002378  D073               	goto	l7289
  6719  00237A                     u4540:
  6720                           
  6721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6722                           ;stkvar	_fmt @ sp[(-23)+-4]
  6723  00237A  0EE5               	movlw	-27
  6724  00237C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6725  002382  0EE6               	movlw	-26
  6726  002384  006F FF8F FFDA     	movff	plusw1,fsr2h
  6727  00238A  2ADF               	incf	indf2,f,c
  6728                           
  6729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6730                           ;stkvar	_ap @ sp[(-23)+-6]
  6731  00238C  0EE3               	movlw	-29
  6732  00238E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6733  002394  0EE4               	movlw	-28
  6734  002396  006F FF8F FFDA     	movff	plusw1,fsr2h
  6735  00239C  0E02               	movlw	2
  6736  00239E  5EDE               	subwf	postinc2,f,c
  6737  0023A0  0E00               	movlw	0
  6738  0023A2  5ADD               	subwfb	postdec2,f,c
  6739  0023A4  006F FF78  F047    	movff	postinc2,btemp+10
  6740  0023AA  006F FF74  F048    	movff	postdec2,btemp+11
  6741  0023B0  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6742  0023B6  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6743  0023BC  006F FF78  F047    	movff	postinc2,btemp+10
  6744  0023C2  006F FF74  F048    	movff	postdec2,btemp+11
  6745                           
  6746                           ;stkvar	_ll @ sp[(-23)+10]
  6747  0023C8  0EF3               	movlw	-13
  6748  0023CA  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6749  0023D0  0EF4               	movlw	-12
  6750  0023D2  0060  F123  FFE3   	movff	btemp+11,plusw1
  6751  0023D8  6A3D               	clrf	btemp,c
  6752  0023DA  BEE3               	btfsc	plusw1,7,c
  6753  0023DC  683D               	setf	btemp,c
  6754  0023DE  0EF5               	movlw	-11
  6755  0023E0  0060  F0F7  FFE3   	movff	btemp,plusw1
  6756  0023E6  0EF6               	movlw	-10
  6757  0023E8  0060  F0F7  FFE3   	movff	btemp,plusw1
  6758  0023EE  0EF7               	movlw	-9
  6759  0023F0  0060  F0F7  FFE3   	movff	btemp,plusw1
  6760  0023F6  0EF8               	movlw	-8
  6761  0023F8  0060  F0F7  FFE3   	movff	btemp,plusw1
  6762  0023FE  0EF9               	movlw	-7
  6763  002400  0060  F0F7  FFE3   	movff	btemp,plusw1
  6764  002406  0EFA               	movlw	-6
  6765  002408  0060  F0F7  FFE3   	movff	btemp,plusw1
  6766                           
  6767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6768                           ;stkvar	_ll @ sp[(-23)+10]
  6769  00240E  50E1               	movf	fsr1l,w,c
  6770  002410  0FF3               	addlw	-13
  6771  002412  6ED9               	movwf	fsr2l,c
  6772  002414  50E2               	movf	fsr1h,w,c
  6773  002416  6EDA               	movwf	fsr2h,c
  6774  002418  0EFF               	movlw	255
  6775  00241A  22DA               	addwfc	fsr2h,f,c
  6776  00241C  006F FF7B FFE6     	movff	postinc2,postinc1
  6777  002422  006F FF7B FFE6     	movff	postinc2,postinc1
  6778  002428  006F FF7B FFE6     	movff	postinc2,postinc1
  6779  00242E  006F FF7B FFE6     	movff	postinc2,postinc1
  6780  002434  006F FF7B FFE6     	movff	postinc2,postinc1
  6781  00243A  006F FF7B FFE6     	movff	postinc2,postinc1
  6782  002440  006F FF7B FFE6     	movff	postinc2,postinc1
  6783  002446  006F FF7B FFE6     	movff	postinc2,postinc1
  6784                           
  6785                           ;stkvar	_fp @ sp[(-31)+-2]
  6786  00244C  0EDF               	movlw	-33
  6787  00244E  006F FF8F FFE6     	movff	plusw1,postinc1
  6788  002454  006F FF8F FFE6     	movff	plusw1,postinc1
  6789  00245A  ECA3  F013         	call	_dtoa	;wreg free
  6790  00245E  D16E               	goto	l1762
  6791  002460                     l7289:
  6792                           
  6793                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  6794                           ;stkvar	_fmt @ sp[(-23)+-4]
  6795  002460  0EE5               	movlw	-27
  6796  002462  006F FF8F FFD9     	movff	plusw1,fsr2l
  6797  002468  0EE6               	movlw	-26
  6798  00246A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6799  002470  006F FF7F FFF6     	movff	indf2,tblptrl
  6800  002476                     	if	1	;There is more than 1 active tblptr byte
  6801  002476  0E20               	movlw	high __smallconst
  6802  002478  6EF7               	movwf	tblptrh,c
  6803  00247A                     	endif
  6804  00247A                     	if	0	;tblptru may be non-zero
  6805  00247A                     	endif
  6806  00247A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6807  00247A  0E00               	movlw	low (__smallconst shr (0+16))
  6808  00247C  6EF8               	movwf	tblptru,c
  6809  00247E                     	endif
  6810  00247E  0008               	tblrd		*
  6811  002480  50F5               	movf	tablat,w,c
  6812  002482  0A73               	xorlw	115
  6813  002484  A4D8               	btfss	status,2,c
  6814  002486  D040               	goto	l7299
  6815                           
  6816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6817                           ;stkvar	_fmt @ sp[(-23)+-4]
  6818  002488  0EE5               	movlw	-27
  6819  00248A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6820  002490  0EE6               	movlw	-26
  6821  002492  006F FF8F FFDA     	movff	plusw1,fsr2h
  6822  002498  2ADF               	incf	indf2,f,c
  6823                           
  6824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6825                           ;stkvar	_ap @ sp[(-23)+-6]
  6826  00249A  0EE3               	movlw	-29
  6827  00249C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6828  0024A2  0EE4               	movlw	-28
  6829  0024A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6830  0024AA  0E02               	movlw	2
  6831  0024AC  5EDE               	subwf	postinc2,f,c
  6832  0024AE  0E00               	movlw	0
  6833  0024B0  5ADD               	subwfb	postdec2,f,c
  6834  0024B2  006F FF78  F047    	movff	postinc2,btemp+10
  6835  0024B8  006F FF74  F048    	movff	postdec2,btemp+11
  6836  0024BE  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6837  0024C4  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6838  0024CA  006F FF78  F047    	movff	postinc2,btemp+10
  6839  0024D0  006F FF74  F048    	movff	postdec2,btemp+11
  6840                           
  6841                           ;stkvar	_cp @ sp[(-23)+20]
  6842  0024D6  0EFE               	movlw	-2
  6843  0024D8  0060  F123  FFE3   	movff	btemp+11,plusw1
  6844  0024DE  0EFD               	movlw	-3
  6845  0024E0  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6846                           
  6847                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6848                           ;stkvar	_cp @ sp[(-23)+20]
  6849  0024E6  0EFD               	movlw	-3
  6850  0024E8  006F FF8F FFE6     	movff	plusw1,postinc1
  6851  0024EE  006F FF8F FFE6     	movff	plusw1,postinc1
  6852                           
  6853                           ;stkvar	_fp @ sp[(-25)+-2]
  6854  0024F4  0EE5               	movlw	-27
  6855  0024F6  006F FF8F FFE6     	movff	plusw1,postinc1
  6856  0024FC  006F FF8F FFE6     	movff	plusw1,postinc1
  6857  002502  EC5C  F01A         	call	_stoa	;wreg free
  6858  002506  D11A               	goto	l1762
  6859  002508                     l7299:
  6860                           
  6861                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  6862                           ;stkvar	_fmt @ sp[(-23)+-4]
  6863  002508  0EE5               	movlw	-27
  6864  00250A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6865  002510  0EE6               	movlw	-26
  6866  002512  006F FF8F FFDA     	movff	plusw1,fsr2h
  6867  002518  006F FF7F FFF6     	movff	indf2,tblptrl
  6868  00251E                     	if	1	;There is more than 1 active tblptr byte
  6869  00251E  0E20               	movlw	high __smallconst
  6870  002520  6EF7               	movwf	tblptrh,c
  6871  002522                     	endif
  6872  002522                     	if	0	;tblptru may be non-zero
  6873  002522                     	endif
  6874  002522                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6875  002522  0E00               	movlw	low (__smallconst shr (0+16))
  6876  002524  6EF8               	movwf	tblptru,c
  6877  002526                     	endif
  6878  002526  0008               	tblrd		*
  6879  002528  50F5               	movf	tablat,w,c
  6880  00252A  0A78               	xorlw	120
  6881  00252C  B4D8               	btfsc	status,2,c
  6882  00252E  D014               	goto	u4570
  6883                           
  6884                           ;stkvar	_fmt @ sp[(-23)+-4]
  6885  002530  0EE5               	movlw	-27
  6886  002532  006F FF8F FFD9     	movff	plusw1,fsr2l
  6887  002538  0EE6               	movlw	-26
  6888  00253A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6889  002540  006F FF7F FFF6     	movff	indf2,tblptrl
  6890  002546                     	if	1	;There is more than 1 active tblptr byte
  6891  002546  0E20               	movlw	high __smallconst
  6892  002548  6EF7               	movwf	tblptrh,c
  6893  00254A                     	endif
  6894  00254A                     	if	0	;tblptru may be non-zero
  6895  00254A                     	endif
  6896  00254A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6897  00254A  0E00               	movlw	low (__smallconst shr (0+16))
  6898  00254C  6EF8               	movwf	tblptru,c
  6899  00254E                     	endif
  6900  00254E  0008               	tblrd		*
  6901  002550  50F5               	movf	tablat,w,c
  6902  002552  0A58               	xorlw	88
  6903  002554  A4D8               	btfss	status,2,c
  6904  002556  D091               	goto	l7313
  6905  002558                     u4570:
  6906                           
  6907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  6908                           ;stkvar	_fmt @ sp[(-23)+-4]
  6909  002558  0EE5               	movlw	-27
  6910  00255A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6911  002560  0EE6               	movlw	-26
  6912  002562  006F FF8F FFDA     	movff	plusw1,fsr2h
  6913  002568  006F FF7F FFF6     	movff	indf2,tblptrl
  6914  00256E                     	if	1	;There is more than 1 active tblptr byte
  6915  00256E  0E20               	movlw	high __smallconst
  6916  002570  6EF7               	movwf	tblptrh,c
  6917  002572                     	endif
  6918  002572                     	if	0	;tblptru may be non-zero
  6919  002572                     	endif
  6920  002572                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6921  002572  0E00               	movlw	low (__smallconst shr (0+16))
  6922  002574  6EF8               	movwf	tblptru,c
  6923  002576                     	endif
  6924                           
  6925                           ;stkvar	_c @ sp[(-23)+22]
  6926  002576  0008               	tblrd		*
  6927  002578  0EFF               	movlw	-1
  6928  00257A  006F FFD7 FFE3     	movff	tablat,plusw1
  6929                           
  6930                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  6931                           ;stkvar	_fmt @ sp[(-23)+-4]
  6932  002580  0EE5               	movlw	-27
  6933  002582  006F FF8F FFD9     	movff	plusw1,fsr2l
  6934  002588  0EE6               	movlw	-26
  6935  00258A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6936  002590  2ADF               	incf	indf2,f,c
  6937                           
  6938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  6939                           ;stkvar	_ap @ sp[(-23)+-6]
  6940  002592  0EE3               	movlw	-29
  6941  002594  006F FF8F FFD9     	movff	plusw1,fsr2l
  6942  00259A  0EE4               	movlw	-28
  6943  00259C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6944  0025A2  0E02               	movlw	2
  6945  0025A4  5EDE               	subwf	postinc2,f,c
  6946  0025A6  0E00               	movlw	0
  6947  0025A8  5ADD               	subwfb	postdec2,f,c
  6948  0025AA  006F FF78  F047    	movff	postinc2,btemp+10
  6949  0025B0  006F FF74  F048    	movff	postdec2,btemp+11
  6950  0025B6  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6951  0025BC  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6952  0025C2  006F FF78  F047    	movff	postinc2,btemp+10
  6953  0025C8  006F FF74  F048    	movff	postdec2,btemp+11
  6954  0025CE  5047               	movf	btemp+10,w,c
  6955  0025D0  6E4D               	movwf	btemp+16,c
  6956  0025D2  5048               	movf	btemp+11,w,c
  6957  0025D4  6E4E               	movwf	btemp+17,c
  6958  0025D6  6A4F               	clrf	btemp+18,c
  6959  0025D8  6A50               	clrf	btemp+19,c
  6960  0025DA  6A51               	clrf	btemp+20,c
  6961  0025DC  6A52               	clrf	btemp+21,c
  6962  0025DE  6A53               	clrf	btemp+22,c
  6963  0025E0  6A54               	clrf	btemp+23,c
  6964                           
  6965                           ;stkvar	_llu @ sp[(-23)+2]
  6966  0025E2  0EEB               	movlw	-21
  6967  0025E4  0060  F137  FFE3   	movff	btemp+16,plusw1
  6968  0025EA  0EEC               	movlw	-20
  6969  0025EC  0060  F13B  FFE3   	movff	btemp+17,plusw1
  6970  0025F2  0EED               	movlw	-19
  6971  0025F4  0060  F13F  FFE3   	movff	btemp+18,plusw1
  6972  0025FA  0EEE               	movlw	-18
  6973  0025FC  0060  F143  FFE3   	movff	btemp+19,plusw1
  6974  002602  0EEF               	movlw	-17
  6975  002604  0060  F147  FFE3   	movff	btemp+20,plusw1
  6976  00260A  0EF0               	movlw	-16
  6977  00260C  0060  F14B  FFE3   	movff	btemp+21,plusw1
  6978  002612  0EF1               	movlw	-15
  6979  002614  0060  F14F  FFE3   	movff	btemp+22,plusw1
  6980  00261A  0EF2               	movlw	-14
  6981  00261C  0060  F153  FFE3   	movff	btemp+23,plusw1
  6982                           
  6983                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  6984                           ;stkvar	_c @ sp[(-23)+22]
  6985  002622  0EFF               	movlw	-1
  6986  002624  50E3               	movf	plusw1,w,c
  6987  002626  6EE6               	movwf	postinc1,c
  6988                           
  6989                           ;stkvar	_llu @ sp[(-24)+2]
  6990  002628  50E1               	movf	fsr1l,w,c
  6991  00262A  0FEA               	addlw	-22
  6992  00262C  6ED9               	movwf	fsr2l,c
  6993  00262E  50E2               	movf	fsr1h,w,c
  6994  002630  6EDA               	movwf	fsr2h,c
  6995  002632  0EFF               	movlw	255
  6996  002634  22DA               	addwfc	fsr2h,f,c
  6997  002636  006F FF7B FFE6     	movff	postinc2,postinc1
  6998  00263C  006F FF7B FFE6     	movff	postinc2,postinc1
  6999  002642  006F FF7B FFE6     	movff	postinc2,postinc1
  7000  002648  006F FF7B FFE6     	movff	postinc2,postinc1
  7001  00264E  006F FF7B FFE6     	movff	postinc2,postinc1
  7002  002654  006F FF7B FFE6     	movff	postinc2,postinc1
  7003  00265A  006F FF7B FFE6     	movff	postinc2,postinc1
  7004  002660  006F FF7B FFE6     	movff	postinc2,postinc1
  7005                           
  7006                           ;stkvar	_fp @ sp[(-32)+-2]
  7007  002666  0EDE               	movlw	-34
  7008  002668  006F FF8F FFE6     	movff	plusw1,postinc1
  7009  00266E  006F FF8F FFE6     	movff	plusw1,postinc1
  7010  002674  ECCE  F015         	call	_xtoa	;wreg free
  7011  002678  D061               	goto	l1762
  7012  00267A                     l7313:
  7013                           
  7014                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7015                           ;stkvar	_fmt @ sp[(-23)+-4]
  7016  00267A  0EE5               	movlw	-27
  7017  00267C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7018  002682  0EE6               	movlw	-26
  7019  002684  006F FF8F FFDA     	movff	plusw1,fsr2h
  7020  00268A  006F FF7F FFF6     	movff	indf2,tblptrl
  7021  002690                     	if	1	;There is more than 1 active tblptr byte
  7022  002690  0E20               	movlw	high __smallconst
  7023  002692  6EF7               	movwf	tblptrh,c
  7024  002694                     	endif
  7025  002694                     	if	0	;tblptru may be non-zero
  7026  002694                     	endif
  7027  002694                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7028  002694  0E00               	movlw	low (__smallconst shr (0+16))
  7029  002696  6EF8               	movwf	tblptru,c
  7030  002698                     	endif
  7031  002698  0008               	tblrd		*
  7032  00269A  50F5               	movf	tablat,w,c
  7033  00269C  0A25               	xorlw	37
  7034  00269E  A4D8               	btfss	status,2,c
  7035  0026A0  D018               	goto	l7323
  7036                           
  7037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7038                           ;stkvar	_fmt @ sp[(-23)+-4]
  7039  0026A2  0EE5               	movlw	-27
  7040  0026A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7041  0026AA  0EE6               	movlw	-26
  7042  0026AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7043  0026B2  2ADF               	incf	indf2,f,c
  7044                           
  7045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7046                           ;stkvar	_fp @ sp[(-23)+-2]
  7047  0026B4  0EE7               	movlw	-25
  7048  0026B6  006F FF8F FFE6     	movff	plusw1,postinc1
  7049  0026BC  006F FF8F FFE6     	movff	plusw1,postinc1
  7050  0026C2  0E25               	movlw	37
  7051  0026C4  6EE6               	movwf	postinc1,c
  7052  0026C6  0E00               	movlw	0
  7053  0026C8  6EE6               	movwf	postinc1,c
  7054  0026CA  ECD7  F022         	call	_fputc	;wreg free
  7055  0026CE                     l7319:
  7056                           
  7057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7058  0026CE  0E01               	movlw	1
  7059  0026D0  D00A               	goto	L19
  7060  0026D2                     l7323:
  7061                           
  7062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7063                           ;stkvar	_fmt @ sp[(-23)+-4]
  7064  0026D2  0EE5               	movlw	-27
  7065  0026D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7066  0026DA  0EE6               	movlw	-26
  7067  0026DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7068  0026E2  2ADF               	incf	indf2,f,c
  7069                           
  7070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7071  0026E4  0E00               	movlw	0
  7072  0026E6                     L19:
  7073  0026E6  6E3D               	movwf	btemp,c
  7074  0026E8  0E00               	movlw	0
  7075  0026EA  6E3E               	movwf	btemp+1,c
  7076  0026EC  D027               	goto	l1762
  7077  0026EE                     l7329:
  7078                           
  7079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7080                           ;stkvar	_fp @ sp[(-23)+-2]
  7081  0026EE  0EE7               	movlw	-25
  7082  0026F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7083  0026F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7084                           
  7085                           ;stkvar	_fmt @ sp[(-25)+-4]
  7086  0026FC  0EE3               	movlw	-29
  7087  0026FE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7088  002704  0EE4               	movlw	-28
  7089  002706  006F FF8F FFDA     	movff	plusw1,fsr2h
  7090  00270C  006F FF7F FFF6     	movff	indf2,tblptrl
  7091  002712                     	if	1	;There is more than 1 active tblptr byte
  7092  002712  0E20               	movlw	high __smallconst
  7093  002714  6EF7               	movwf	tblptrh,c
  7094  002716                     	endif
  7095  002716                     	if	0	;tblptru may be non-zero
  7096  002716                     	endif
  7097  002716                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7098  002716  0E00               	movlw	low (__smallconst shr (0+16))
  7099  002718  6EF8               	movwf	tblptru,c
  7100  00271A                     	endif
  7101  00271A  0008               	tblrd		*
  7102  00271C  50F5               	movf	tablat,w,c
  7103  00271E  6EE6               	movwf	postinc1,c
  7104  002720  0E00               	movlw	0
  7105  002722  6EE6               	movwf	postinc1,c
  7106  002724  ECD7  F022         	call	_fputc	;wreg free
  7107                           
  7108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7109                           ;stkvar	_fmt @ sp[(-23)+-4]
  7110  002728  0EE5               	movlw	-27
  7111  00272A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7112  002730  0EE6               	movlw	-26
  7113  002732  006F FF8F FFDA     	movff	plusw1,fsr2h
  7114  002738  2ADF               	incf	indf2,f,c
  7115  00273A  D7C9               	goto	l7319
  7116  00273C                     l1762:
  7117                           
  7118                           ; _vfpfcnvrt: autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7119  00273C  0EE3               	movlw	227
  7120  00273E  26E1               	addwf	fsr1l,f,c
  7121  002740  0EFF               	movlw	255
  7122  002742  22E2               	addwfc	fsr1h,f,c
  7123  002744  0012               	return		;funcret
  7124  002746                     __end_of_vfpfcnvrt:
  7125                           	opt callstack 0
  7126                           
  7127 ;; *************** function _xtoa *****************
  7128 ;; Defined at:
  7129 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7132 ;;		 -> f(5), NULL(0), 
  7133 ;;  d               8  [STACK] unsigned long long 
  7134 ;;  x               1  [STACK] unsigned char 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  n               8  [STACK] unsigned long long 
  7137 ;;  c               2  [STACK] int 
  7138 ;;  i               2  [STACK] int 
  7139 ;;  w               2  [STACK] int 
  7140 ;;  p               2  [STACK] int 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  2  [STACK] int 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/1
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    8
  7157 ;; This function calls:
  7158 ;;		_isalpha
  7159 ;;		_isupper
  7160 ;;		_pad
  7161 ;;		_toupper
  7162 ;; This function is called by:
  7163 ;;		_vfpfcnvrt
  7164 ;; This function uses a reentrant model
  7165 ;;
  7166                           
  7167                           	psect	text34
  7168  002B9C                     __ptext34:
  7169                           	opt callstack 0
  7170  002B9C                     _xtoa:
  7171                           	opt callstack 0
  7172                           
  7173                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7174  002B9C  0E14               	movlw	20
  7175  002B9E  26E1               	addwf	fsr1l,f,c
  7176  002BA0  0E00               	movlw	0
  7177  002BA2  22E2               	addwfc	fsr1h,f,c
  7178                           
  7179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  7180                           
  7181                           ;incstack = 0
  7182  002BA4  AE27               	btfss	_prec+1,7,c
  7183                           
  7184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  7185  002BA6  9228               	bcf	_flags,1,c
  7186                           
  7187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  7188  002BA8  BE27               	btfsc	_prec+1,7,c
  7189  002BAA  D005               	goto	u4270
  7190  002BAC  5027               	movf	_prec+1,w,c
  7191  002BAE  E110               	bnz	l7143
  7192  002BB0  0426               	decf	_prec,w,c
  7193  002BB2  B0D8               	btfsc	status,0,c
  7194  002BB4  D00D               	goto	l7143
  7195  002BB6                     u4270:
  7196  002BB6  0E01               	movlw	1
  7197  002BB8  6E47               	movwf	btemp+10,c
  7198  002BBA  0E00               	movlw	0
  7199  002BBC  6E48               	movwf	btemp+11,c
  7200                           
  7201                           ;stkvar	_p @ sp[(-20)+18]
  7202  002BBE  0EFE               	movlw	-2
  7203  002BC0  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7204  002BC6  0EFF               	movlw	-1
  7205  002BC8  0060  F123  FFE3   	movff	btemp+11,plusw1
  7206  002BCE  D008               	goto	l1712
  7207  002BD0                     l7143:
  7208                           
  7209                           ;stkvar	_p @ sp[(-20)+18]
  7210  002BD0  0EFE               	movlw	-2
  7211  002BD2  0060  F09B  FFE3   	movff	_prec,plusw1
  7212  002BD8  0EFF               	movlw	-1
  7213  002BDA  0060  F09F  FFE3   	movff	_prec+1,plusw1
  7214  002BE0                     l1712:
  7215                           
  7216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  7217                           ;stkvar	_w @ sp[(-20)+16]
  7218  002BE0  0EFC               	movlw	-4
  7219  002BE2  0060  F093  FFE3   	movff	_width,plusw1
  7220  002BE8  0EFD               	movlw	-3
  7221  002BEA  0060  F097  FFE3   	movff	_width+1,plusw1
  7222                           
  7223                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  7224  002BF0  A828               	btfss	_flags,4,c
  7225  002BF2  D00B               	goto	l7149
  7226                           
  7227                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  7228                           ;stkvar	_w @ sp[(-20)+16]
  7229  002BF4  50E1               	movf	fsr1l,w,c
  7230  002BF6  0FFC               	addlw	-4
  7231  002BF8  6ED9               	movwf	fsr2l,c
  7232  002BFA  50E2               	movf	fsr1h,w,c
  7233  002BFC  6EDA               	movwf	fsr2h,c
  7234  002BFE  0EFF               	movlw	255
  7235  002C00  22DA               	addwfc	fsr2h,f,c
  7236  002C02  0EFE               	movlw	254
  7237  002C04  26DE               	addwf	postinc2,f,c
  7238  002C06  0EFF               	movlw	255
  7239  002C08  22DD               	addwfc	postdec2,f,c
  7240  002C0A                     l7149:
  7241                           
  7242                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  7243                           ;stkvar	_d @ sp[(-20)+-10]
  7244  002C0A  0EE2               	movlw	226
  7245  002C0C  24E1               	addwf	fsr1l,w,c
  7246  002C0E  6ED9               	movwf	fsr2l,c
  7247  002C10  0EFF               	movlw	255
  7248  002C12  20E2               	addwfc	fsr1h,w,c
  7249  002C14  6EDA               	movwf	fsr2h,c
  7250                           
  7251                           ;stkvar	_n @ sp[(-20)+4]
  7252  002C16  0E08               	movlw	8
  7253  002C18  6E3D               	movwf	btemp,c
  7254  002C1A  0EF0               	movlw	-16
  7255  002C1C                     us429999:
  7256  002C1C  006F FF7B FFE3     	movff	postinc2,plusw1
  7257  002C22  28E8               	incf	wreg,w,c
  7258  002C24  2E3D               	decfsz	btemp,f,c
  7259  002C26  D7FA               	bra	us429999
  7260                           
  7261                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  7262  002C28  0E1F               	movlw	31
  7263  002C2A  6E47               	movwf	btemp+10,c
  7264  002C2C  0E00               	movlw	0
  7265  002C2E  6E48               	movwf	btemp+11,c
  7266                           
  7267                           ;stkvar	_i @ sp[(-20)+14]
  7268  002C30  0EFA               	movlw	-6
  7269  002C32  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7270  002C38  0EFB               	movlw	-5
  7271  002C3A  0060  F123  FFE3   	movff	btemp+11,plusw1
  7272                           
  7273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  7274  002C40  0100               	movlb	0	; () banked
  7275  002C42  6BF8               	clrf	(_dbuf+31)& (0+255),b
  7276                           
  7277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7278  002C44  D0E8               	goto	l7187
  7279  002C46                     l7155:
  7280                           
  7281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  7282                           ;stkvar	_i @ sp[(-20)+14]
  7283  002C46  50E1               	movf	fsr1l,w,c
  7284  002C48  0FFA               	addlw	-6
  7285  002C4A  6ED9               	movwf	fsr2l,c
  7286  002C4C  50E2               	movf	fsr1h,w,c
  7287  002C4E  6EDA               	movwf	fsr2h,c
  7288  002C50  0EFF               	movlw	255
  7289  002C52  22DA               	addwfc	fsr2h,f,c
  7290  002C54  06DE               	decf	postinc2,f,c
  7291  002C56  0E00               	movlw	0
  7292  002C58  5ADD               	subwfb	postdec2,f,c
  7293                           
  7294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  7295                           ;stkvar	_n @ sp[(-20)+4]
  7296  002C5A  0EF0               	movlw	-16
  7297  002C5C  006F FF8C  F047    	movff	plusw1,btemp+10
  7298  002C62  0EF1               	movlw	-15
  7299  002C64  006F FF8C  F048    	movff	plusw1,btemp+11
  7300  002C6A  0E0F               	movlw	15
  7301  002C6C  1647               	andwf	btemp+10,f,c
  7302  002C6E  0E00               	movlw	0
  7303  002C70  1648               	andwf	btemp+11,f,c
  7304                           
  7305                           ;stkvar	_c @ sp[(-20)+12]
  7306  002C72  0EF8               	movlw	-8
  7307  002C74  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7308  002C7A  0EF9               	movlw	-7
  7309  002C7C  0060  F123  FFE3   	movff	btemp+11,plusw1
  7310                           
  7311                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  7312                           ;stkvar	_c @ sp[(-20)+12]
  7313  002C82  0EF9               	movlw	-7
  7314  002C84  BEE3               	btfsc	plusw1,7,c
  7315  002C86  D00F               	goto	l7163
  7316  002C88  0EF9               	movlw	-7
  7317  002C8A  50E3               	movf	plusw1,w,c
  7318  002C8C  E108               	bnz	u4300
  7319  002C8E  0EF8               	movlw	-8
  7320  002C90  006F FF8C  F03D    	movff	plusw1,btemp
  7321  002C96  0E0A               	movlw	10
  7322  002C98  5E3D               	subwf	btemp,f,c
  7323  002C9A  A0D8               	btfss	status,0,c
  7324  002C9C  D004               	goto	l7163
  7325  002C9E                     u4300:
  7326                           
  7327                           ;stkvar	_c @ sp[(-20)+12]
  7328  002C9E  0EF8               	movlw	-8
  7329  002CA0  50E3               	movf	plusw1,w,c
  7330  002CA2  0F57               	addlw	87
  7331  002CA4  D003               	goto	L20
  7332  002CA6                     l7163:
  7333                           
  7334                           ;stkvar	_c @ sp[(-20)+12]
  7335  002CA6  0EF8               	movlw	-8
  7336  002CA8  50E3               	movf	plusw1,w,c
  7337  002CAA  0F30               	addlw	48
  7338  002CAC                     L20:
  7339  002CAC  6E47               	movwf	btemp+10,c
  7340  002CAE  0EF9               	movlw	-7
  7341  002CB0  006F FF8C  F048    	movff	plusw1,btemp+11
  7342  002CB6  0E00               	movlw	0
  7343  002CB8  2248               	addwfc	btemp+11,f,c
  7344                           
  7345                           ;stkvar	_c @ sp[(-20)+12]
  7346  002CBA  0EF8               	movlw	-8
  7347  002CBC  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7348  002CC2  0EF9               	movlw	-7
  7349  002CC4  0060  F123  FFE3   	movff	btemp+11,plusw1
  7350  002CCA  0EBF               	movlw	191
  7351  002CCC  6E47               	movwf	btemp+10,c
  7352  002CCE  0EFF               	movlw	255
  7353  002CD0  6E48               	movwf	btemp+11,c
  7354                           
  7355                           ;stkvar	_x @ sp[(-20)+-11]
  7356  002CD2  0EE1               	movlw	-31
  7357  002CD4  50E3               	movf	plusw1,w,c
  7358  002CD6  6E45               	movwf	btemp+8,c
  7359  002CD8  6A46               	clrf	btemp+9,c
  7360  002CDA  5047               	movf	btemp+10,w,c
  7361  002CDC  2645               	addwf	btemp+8,f,c
  7362  002CDE  5048               	movf	btemp+11,w,c
  7363  002CE0  2246               	addwfc	btemp+9,f,c
  7364  002CE2  5046               	movf	btemp+9,w,c
  7365  002CE4  E106               	bnz	u4310
  7366  002CE6  0E1A               	movlw	26
  7367  002CE8  5C45               	subwf	btemp+8,w,c
  7368  002CEA  B0D8               	btfsc	status,0,c
  7369  002CEC  D002               	goto	u4310
  7370  002CEE  0E01               	movlw	1
  7371  002CF0  D001               	goto	u4320
  7372  002CF2                     u4310:
  7373  002CF2  0E00               	movlw	0
  7374  002CF4                     u4320:
  7375  002CF4  6E47               	movwf	btemp+10,c
  7376  002CF6  6A48               	clrf	btemp+11,c
  7377                           
  7378                           ;stkvar	_xtoa$3742 @ sp[(-20)+2]
  7379  002CF8  0EEE               	movlw	-18
  7380  002CFA  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7381  002D00  0EEF               	movlw	-17
  7382  002D02  0060  F123  FFE3   	movff	btemp+11,plusw1
  7383                           
  7384                           ;stkvar	_xtoa$3742 @ sp[(-20)+2]
  7385  002D08  0EEE               	movlw	-18
  7386  002D0A  006F FF8C  F03D    	movff	plusw1,btemp
  7387  002D10  0EEF               	movlw	-17
  7388  002D12  50E3               	movf	plusw1,w,c
  7389  002D14  103D               	iorwf	btemp,w,c
  7390  002D16  B4D8               	btfsc	status,2,c
  7391  002D18  D041               	goto	l7179
  7392  002D1A  0E9F               	movlw	159
  7393  002D1C  6E47               	movwf	btemp+10,c
  7394  002D1E  0EFF               	movlw	255
  7395  002D20  6E48               	movwf	btemp+11,c
  7396                           
  7397                           ;stkvar	_c @ sp[(-20)+12]
  7398  002D22  0EF8               	movlw	-8
  7399  002D24  006F FF8C  F045    	movff	plusw1,btemp+8
  7400  002D2A  0EF9               	movlw	-7
  7401  002D2C  006F FF8C  F046    	movff	plusw1,btemp+9
  7402  002D32  0E20               	movlw	32
  7403  002D34  1245               	iorwf	btemp+8,f,c
  7404  002D36  0E00               	movlw	0
  7405  002D38  1246               	iorwf	btemp+9,f,c
  7406  002D3A  5047               	movf	btemp+10,w,c
  7407  002D3C  2645               	addwf	btemp+8,f,c
  7408  002D3E  5048               	movf	btemp+11,w,c
  7409  002D40  2246               	addwfc	btemp+9,f,c
  7410  002D42  5046               	movf	btemp+9,w,c
  7411  002D44  E106               	bnz	u4340
  7412  002D46  0E1A               	movlw	26
  7413  002D48  5C45               	subwf	btemp+8,w,c
  7414  002D4A  B0D8               	btfsc	status,0,c
  7415  002D4C  D002               	goto	u4340
  7416  002D4E  0E01               	movlw	1
  7417  002D50  D001               	goto	u4350
  7418  002D52                     u4340:
  7419  002D52  0E00               	movlw	0
  7420  002D54                     u4350:
  7421  002D54  6E47               	movwf	btemp+10,c
  7422  002D56  6A48               	clrf	btemp+11,c
  7423                           
  7424                           ;stkvar	_xtoa$3743 @ sp[(-20)+0]
  7425  002D58  0EEC               	movlw	-20
  7426  002D5A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7427  002D60  0EED               	movlw	-19
  7428  002D62  0060  F123  FFE3   	movff	btemp+11,plusw1
  7429                           
  7430                           ;stkvar	_xtoa$3743 @ sp[(-20)+0]
  7431  002D68  0EEC               	movlw	-20
  7432  002D6A  006F FF8C  F03D    	movff	plusw1,btemp
  7433  002D70  0EED               	movlw	-19
  7434  002D72  50E3               	movf	plusw1,w,c
  7435  002D74  103D               	iorwf	btemp,w,c
  7436  002D76  B4D8               	btfsc	status,2,c
  7437  002D78  D011               	goto	l7179
  7438                           
  7439                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7440                           ;stkvar	_c @ sp[(-20)+12]
  7441  002D7A  0EF8               	movlw	-8
  7442  002D7C  006F FF8F FFE6     	movff	plusw1,postinc1
  7443  002D82  006F FF8F FFE6     	movff	plusw1,postinc1
  7444  002D88  EC59  F027         	call	_toupper	;wreg free
  7445                           
  7446                           ;stkvar	_c @ sp[(-20)+12]
  7447  002D8C  0EF8               	movlw	-8
  7448  002D8E  0060  F0F7  FFE3   	movff	btemp,plusw1
  7449  002D94  0EF9               	movlw	-7
  7450  002D96  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  7451  002D9C                     l7179:
  7452                           
  7453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  7454                           ;stkvar	_c @ sp[(-20)+12]
  7455                           ;stkvar	_i @ sp[(-20)+14]
  7456  002D9C  0EFA               	movlw	-6
  7457  002D9E  006F FF8C  F048    	movff	plusw1,btemp+11
  7458  002DA4  5048               	movf	btemp+11,w,c
  7459  002DA6  0FD9               	addlw	low _dbuf
  7460  002DA8  6ED9               	movwf	fsr2l,c
  7461  002DAA  6ADA               	clrf	fsr2h,c
  7462  002DAC  0EF8               	movlw	-8
  7463  002DAE  006F FF8F FFDF     	movff	plusw1,indf2
  7464                           
  7465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  7466                           ;stkvar	_p @ sp[(-20)+18]
  7467  002DB4  50E1               	movf	fsr1l,w,c
  7468  002DB6  0FFE               	addlw	-2
  7469  002DB8  6ED9               	movwf	fsr2l,c
  7470  002DBA  50E2               	movf	fsr1h,w,c
  7471  002DBC  6EDA               	movwf	fsr2h,c
  7472  002DBE  0EFF               	movlw	255
  7473  002DC0  22DA               	addwfc	fsr2h,f,c
  7474  002DC2  06DE               	decf	postinc2,f,c
  7475  002DC4  0E00               	movlw	0
  7476  002DC6  5ADD               	subwfb	postdec2,f,c
  7477                           
  7478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  7479                           ;stkvar	_w @ sp[(-20)+16]
  7480  002DC8  50E1               	movf	fsr1l,w,c
  7481  002DCA  0FFC               	addlw	-4
  7482  002DCC  6ED9               	movwf	fsr2l,c
  7483  002DCE  50E2               	movf	fsr1h,w,c
  7484  002DD0  6EDA               	movwf	fsr2h,c
  7485  002DD2  0EFF               	movlw	255
  7486  002DD4  22DA               	addwfc	fsr2h,f,c
  7487  002DD6  06DE               	decf	postinc2,f,c
  7488  002DD8  0E00               	movlw	0
  7489  002DDA  5ADD               	subwfb	postdec2,f,c
  7490                           
  7491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  7492  002DDC  0E04               	movlw	4
  7493  002DDE  6E48               	movwf	btemp+11,c
  7494                           
  7495                           ;stkvar	_n @ sp[(-20)+4]
  7496  002DE0  50E1               	movf	fsr1l,w,c
  7497  002DE2  0FF0               	addlw	-16
  7498  002DE4  6ED9               	movwf	fsr2l,c
  7499  002DE6  50E2               	movf	fsr1h,w,c
  7500  002DE8  6EDA               	movwf	fsr2h,c
  7501  002DEA  0EFF               	movlw	255
  7502  002DEC  22DA               	addwfc	fsr2h,f,c
  7503  002DEE  2848               	incf	btemp+11,w,c
  7504  002DF0  52DE               	movf	postinc2,f,c
  7505  002DF2  D00F               	goto	u4370
  7506  002DF4                     u4375:
  7507  002DF4  52DE               	movf	postinc2,f,c
  7508  002DF6  52DE               	movf	postinc2,f,c
  7509  002DF8  52DE               	movf	postinc2,f,c
  7510  002DFA  52DE               	movf	postinc2,f,c
  7511  002DFC  52DE               	movf	postinc2,f,c
  7512  002DFE  52DE               	movf	postinc2,f,c
  7513  002E00  90D8               	bcf	status,0,c
  7514  002E02  32DD               	rrcf	postdec2,f,c
  7515  002E04  32DD               	rrcf	postdec2,f,c
  7516  002E06  32DD               	rrcf	postdec2,f,c
  7517  002E08  32DD               	rrcf	postdec2,f,c
  7518  002E0A  32DD               	rrcf	postdec2,f,c
  7519  002E0C  32DD               	rrcf	postdec2,f,c
  7520  002E0E  32DD               	rrcf	postdec2,f,c
  7521  002E10  32DE               	rrcf	postinc2,f,c
  7522  002E12                     u4370:
  7523  002E12  2EE8               	decfsz	wreg,f,c
  7524  002E14  D7EF               	goto	u4375
  7525  002E16                     l7187:
  7526                           
  7527                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7528                           ;stkvar	_i @ sp[(-20)+14]
  7529  002E16  0EFB               	movlw	-5
  7530  002E18  BEE3               	btfsc	plusw1,7,c
  7531  002E1A  D03A               	goto	u4420
  7532  002E1C  0EFB               	movlw	-5
  7533  002E1E  50E3               	movf	plusw1,w,c
  7534  002E20  E108               	bnz	u4380
  7535  002E22  0EFA               	movlw	-6
  7536  002E24  006F FF8C  F03D    	movff	plusw1,btemp
  7537  002E2A  0E02               	movlw	2
  7538  002E2C  5E3D               	subwf	btemp,f,c
  7539  002E2E  A0D8               	btfss	status,0,c
  7540  002E30  D02F               	goto	u4420
  7541  002E32                     u4380:
  7542                           
  7543                           ;stkvar	_n @ sp[(-20)+4]
  7544  002E32  0EF0               	movlw	-16
  7545  002E34  50E3               	movf	plusw1,w,c
  7546  002E36  E115               	bnz	u4391
  7547  002E38  0EF1               	movlw	-15
  7548  002E3A  50E3               	movf	plusw1,w,c
  7549  002E3C  E112               	bnz	u4391
  7550  002E3E  0EF2               	movlw	-14
  7551  002E40  50E3               	movf	plusw1,w,c
  7552  002E42  E10F               	bnz	u4391
  7553  002E44  0EF3               	movlw	-13
  7554  002E46  50E3               	movf	plusw1,w,c
  7555  002E48  E10C               	bnz	u4391
  7556  002E4A  0EF4               	movlw	-12
  7557  002E4C  50E3               	movf	plusw1,w,c
  7558  002E4E  E109               	bnz	u4391
  7559  002E50  0EF5               	movlw	-11
  7560  002E52  50E3               	movf	plusw1,w,c
  7561  002E54  E106               	bnz	u4391
  7562  002E56  0EF6               	movlw	-10
  7563  002E58  50E3               	movf	plusw1,w,c
  7564  002E5A  E103               	bnz	u4391
  7565  002E5C  0EF7               	movlw	-9
  7566  002E5E  50E3               	movf	plusw1,w,c
  7567  002E60  A4D8               	btfss	status,2,c
  7568  002E62                     u4391:
  7569  002E62  D6F1               	goto	l7155
  7570                           
  7571                           ;stkvar	_p @ sp[(-20)+18]
  7572  002E64  0EFF               	movlw	-1
  7573  002E66  BEE3               	btfsc	plusw1,7,c
  7574  002E68  D007               	goto	u4400
  7575  002E6A  0EFF               	movlw	-1
  7576  002E6C  50E3               	movf	plusw1,w,c
  7577  002E6E  E103               	bnz	u4401
  7578  002E70  0EFE               	movlw	-2
  7579  002E72  04E3               	decf	plusw1,w,c
  7580  002E74  B0D8               	btfsc	status,0,c
  7581  002E76                     u4401:
  7582  002E76  D6E7               	goto	l7155
  7583  002E78                     u4400:
  7584                           
  7585                           ;stkvar	_w @ sp[(-20)+16]
  7586  002E78  0EFD               	movlw	-3
  7587  002E7A  BEE3               	btfsc	plusw1,7,c
  7588  002E7C  D009               	goto	u4420
  7589  002E7E  0EFD               	movlw	-3
  7590  002E80  50E3               	movf	plusw1,w,c
  7591  002E82  E104               	bnz	u4410
  7592  002E84  0EFC               	movlw	-4
  7593  002E86  04E3               	decf	plusw1,w,c
  7594  002E88  A0D8               	btfss	status,0,c
  7595  002E8A  D002               	goto	u4420
  7596  002E8C                     u4410:
  7597  002E8C  B228               	btfsc	_flags,1,c
  7598  002E8E  D6DB               	goto	l7155
  7599  002E90                     u4420:
  7600                           
  7601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7602  002E90  A828               	btfss	_flags,4,c
  7603  002E92  D02A               	goto	l7203
  7604                           
  7605                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7606                           ;stkvar	_i @ sp[(-20)+14]
  7607  002E94  50E1               	movf	fsr1l,w,c
  7608  002E96  0FFA               	addlw	-6
  7609  002E98  6ED9               	movwf	fsr2l,c
  7610  002E9A  50E2               	movf	fsr1h,w,c
  7611  002E9C  6EDA               	movwf	fsr2h,c
  7612  002E9E  0EFF               	movlw	255
  7613  002EA0  22DA               	addwfc	fsr2h,f,c
  7614  002EA2  06DE               	decf	postinc2,f,c
  7615  002EA4  0E00               	movlw	0
  7616  002EA6  5ADD               	subwfb	postdec2,f,c
  7617                           
  7618                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7619                           ;stkvar	_x @ sp[(-20)+-11]
  7620                           ;stkvar	_i @ sp[(-20)+14]
  7621  002EA8  0EFA               	movlw	-6
  7622  002EAA  006F FF8C  F048    	movff	plusw1,btemp+11
  7623  002EB0  5048               	movf	btemp+11,w,c
  7624  002EB2  0FD9               	addlw	low _dbuf
  7625  002EB4  6ED9               	movwf	fsr2l,c
  7626  002EB6  6ADA               	clrf	fsr2h,c
  7627  002EB8  0EE1               	movlw	-31
  7628  002EBA  006F FF8F FFDF     	movff	plusw1,indf2
  7629                           
  7630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7631                           ;stkvar	_i @ sp[(-20)+14]
  7632  002EC0  50E1               	movf	fsr1l,w,c
  7633  002EC2  0FFA               	addlw	-6
  7634  002EC4  6ED9               	movwf	fsr2l,c
  7635  002EC6  50E2               	movf	fsr1h,w,c
  7636  002EC8  6EDA               	movwf	fsr2h,c
  7637  002ECA  0EFF               	movlw	255
  7638  002ECC  22DA               	addwfc	fsr2h,f,c
  7639  002ECE  06DE               	decf	postinc2,f,c
  7640  002ED0  0E00               	movlw	0
  7641  002ED2  5ADD               	subwfb	postdec2,f,c
  7642                           
  7643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7644                           ;stkvar	_i @ sp[(-20)+14]
  7645  002ED4  0EFA               	movlw	-6
  7646  002ED6  006F FF8C  F048    	movff	plusw1,btemp+11
  7647  002EDC  5048               	movf	btemp+11,w,c
  7648  002EDE  0FD9               	addlw	low _dbuf
  7649  002EE0  6ED9               	movwf	fsr2l,c
  7650  002EE2  6ADA               	clrf	fsr2h,c
  7651  002EE4  0E30               	movlw	48
  7652  002EE6  6EDF               	movwf	indf2,c
  7653  002EE8                     l7203:
  7654                           
  7655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7656                           ;stkvar	_w @ sp[(-20)+16]
  7657  002EE8  0EFC               	movlw	-4
  7658  002EEA  006F FF8F FFE6     	movff	plusw1,postinc1
  7659  002EF0  006F FF8F FFE6     	movff	plusw1,postinc1
  7660                           
  7661                           ;stkvar	_i @ sp[(-22)+14]
  7662  002EF6  0EF8               	movlw	-8
  7663  002EF8  006F FF8C  F048    	movff	plusw1,btemp+11
  7664  002EFE  5048               	movf	btemp+11,w,c
  7665  002F00  0FD9               	addlw	low _dbuf
  7666  002F02  6EE6               	movwf	postinc1,c
  7667                           
  7668                           ;stkvar	_fp @ sp[(-23)+-2]
  7669  002F04  0EE7               	movlw	-25
  7670  002F06  006F FF8F FFE6     	movff	plusw1,postinc1
  7671  002F0C  006F FF8F FFE6     	movff	plusw1,postinc1
  7672  002F12  EC5D  F023         	call	_pad	;wreg free
  7673                           
  7674                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  7675  002F16  0EE1               	movlw	225
  7676  002F18  26E1               	addwf	fsr1l,f,c
  7677  002F1A  0EFF               	movlw	255
  7678  002F1C  22E2               	addwfc	fsr1h,f,c
  7679  002F1E  0012               	return		;funcret
  7680  002F20                     __end_of_xtoa:
  7681                           	opt callstack 0
  7682                           
  7683 ;; *************** function _toupper *****************
  7684 ;; Defined at:
  7685 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;  c               2  [STACK] int 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;		None
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  2  [STACK] int 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7703 ;;Total ram usage:        0 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    4
  7706 ;; This function calls:
  7707 ;;		_islower
  7708 ;; This function is called by:
  7709 ;;		_xtoa
  7710 ;; This function uses a reentrant model
  7711 ;;
  7712                           
  7713                           	psect	text35
  7714  004EB2                     __ptext35:
  7715                           	opt callstack 0
  7716  004EB2                     _toupper:
  7717                           	opt callstack 0
  7718                           
  7719                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7720  004EB2  52E6               	movf	postinc1,f,c
  7721  004EB4  52E6               	movf	postinc1,f,c
  7722                           
  7723                           ;stkvar	_c @ sp[(-2)+-2]
  7724                           
  7725                           ;incstack = 0
  7726  004EB6  0EFC               	movlw	-4
  7727  004EB8  50E3               	movf	plusw1,w,c
  7728  004EBA  0F9F               	addlw	159
  7729  004EBC  6E47               	movwf	btemp+10,c
  7730  004EBE  0EFD               	movlw	-3
  7731  004EC0  006F FF8C  F048    	movff	plusw1,btemp+11
  7732  004EC6  0EFF               	movlw	255
  7733  004EC8  2248               	addwfc	btemp+11,f,c
  7734  004ECA  5048               	movf	btemp+11,w,c
  7735  004ECC  E106               	bnz	u2190
  7736  004ECE  0E1A               	movlw	26
  7737  004ED0  5C47               	subwf	btemp+10,w,c
  7738  004ED2  B0D8               	btfsc	status,0,c
  7739  004ED4  D002               	goto	u2190
  7740  004ED6  0E01               	movlw	1
  7741  004ED8  D001               	goto	u2200
  7742  004EDA                     u2190:
  7743  004EDA  0E00               	movlw	0
  7744  004EDC                     u2200:
  7745  004EDC  6E47               	movwf	btemp+10,c
  7746  004EDE  6A48               	clrf	btemp+11,c
  7747                           
  7748                           ;stkvar	_toupper$4332 @ sp[(-2)+0]
  7749  004EE0  0EFE               	movlw	-2
  7750  004EE2  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7751  004EE8  0EFF               	movlw	-1
  7752  004EEA  0060  F123  FFE3   	movff	btemp+11,plusw1
  7753                           
  7754                           ;stkvar	_toupper$4332 @ sp[(-2)+0]
  7755  004EF0  0EFE               	movlw	-2
  7756  004EF2  006F FF8C  F03D    	movff	plusw1,btemp
  7757  004EF8  0EFF               	movlw	-1
  7758  004EFA  50E3               	movf	plusw1,w,c
  7759  004EFC  103D               	iorwf	btemp,w,c
  7760  004EFE  B4D8               	btfsc	status,2,c
  7761  004F00  D00D               	goto	l4921
  7762                           
  7763                           ;stkvar	_c @ sp[(-2)+-2]
  7764  004F02  0EFC               	movlw	-4
  7765  004F04  006F FF8C  F03D    	movff	plusw1,btemp
  7766  004F0A  0EFD               	movlw	-3
  7767  004F0C  006F FF8C  F03E    	movff	plusw1,btemp+1
  7768  004F12  0E5F               	movlw	95
  7769  004F14  163D               	andwf	btemp,f,c
  7770  004F16  0E00               	movlw	0
  7771  004F18  163E               	andwf	btemp+1,f,c
  7772  004F1A  D008               	goto	l2574
  7773  004F1C                     l4921:
  7774                           
  7775                           ;stkvar	_c @ sp[(-2)+-2]
  7776  004F1C  0EFC               	movlw	-4
  7777  004F1E  006F FF8C  F03D    	movff	plusw1,btemp
  7778  004F24  0EFD               	movlw	-3
  7779  004F26  006F FF8C  F03E    	movff	plusw1,btemp+1
  7780  004F2C                     l2574:
  7781                           
  7782                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7783  004F2C  52E5               	movf	postdec1,f,c
  7784  004F2E  52E5               	movf	postdec1,f,c
  7785  004F30  52E5               	movf	postdec1,f,c
  7786  004F32  52E5               	movf	postdec1,f,c
  7787  004F34  0012               	return		;funcret
  7788  004F36                     __end_of_toupper:
  7789                           	opt callstack 0
  7790                           
  7791 ;; *************** function _islower *****************
  7792 ;; Defined at:
  7793 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  c               2  [STACK] int 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  2  [STACK] int 
  7800 ;; Registers used:
  7801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7811 ;;Total ram usage:        0 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:    3
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_toupper
  7818 ;; This function uses a reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text36
  7822  00574E                     __ptext36:
  7823                           	opt callstack 0
  7824  00574E                     _islower:
  7825                           	opt callstack 22
  7826                           
  7827                           ;stkvar	_c @ sp[(0)+-2]
  7828                           
  7829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7830                           ;incstack = 0
  7831  00574E  0EFE               	movlw	-2
  7832  005750  50E3               	movf	plusw1,w,c
  7833  005752  0F9F               	addlw	159
  7834  005754  6E47               	movwf	btemp+10,c
  7835  005756  0EFF               	movlw	-1
  7836  005758  006F FF8C  F048    	movff	plusw1,btemp+11
  7837  00575E  0EFF               	movlw	255
  7838  005760  2248               	addwfc	btemp+11,f,c
  7839  005762  5048               	movf	btemp+11,w,c
  7840  005764  E106               	bnz	u2080
  7841  005766  0E1A               	movlw	26
  7842  005768  5C47               	subwf	btemp+10,w,c
  7843  00576A  B0D8               	btfsc	status,0,c
  7844  00576C  D002               	goto	u2080
  7845  00576E  0E01               	movlw	1
  7846  005770  D001               	goto	u2090
  7847  005772                     u2080:
  7848  005772  0E00               	movlw	0
  7849  005774                     u2090:
  7850  005774  6E3D               	movwf	btemp,c
  7851  005776  6A3E               	clrf	btemp+1,c
  7852                           
  7853                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7854  005778  52E5               	movf	postdec1,f,c
  7855  00577A  52E5               	movf	postdec1,f,c
  7856  00577C  0012               	return		;funcret
  7857  00577E                     __end_of_islower:
  7858                           	opt callstack 0
  7859                           
  7860 ;; *************** function _isupper *****************
  7861 ;; Defined at:
  7862 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  c               2  [STACK] int 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  2  [STACK] int 
  7869 ;; Registers used:
  7870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;Total ram usage:        0 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    3
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_xtoa
  7887 ;; This function uses a reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text37
  7891  00577E                     __ptext37:
  7892                           	opt callstack 0
  7893  00577E                     _isupper:
  7894                           	opt callstack 23
  7895                           
  7896                           ;stkvar	_c @ sp[(0)+-2]
  7897                           
  7898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7899                           ;incstack = 0
  7900  00577E  0EFE               	movlw	-2
  7901  005780  50E3               	movf	plusw1,w,c
  7902  005782  0FBF               	addlw	191
  7903  005784  6E47               	movwf	btemp+10,c
  7904  005786  0EFF               	movlw	-1
  7905  005788  006F FF8C  F048    	movff	plusw1,btemp+11
  7906  00578E  0EFF               	movlw	255
  7907  005790  2248               	addwfc	btemp+11,f,c
  7908  005792  5048               	movf	btemp+11,w,c
  7909  005794  E106               	bnz	u2150
  7910  005796  0E1A               	movlw	26
  7911  005798  5C47               	subwf	btemp+10,w,c
  7912  00579A  B0D8               	btfsc	status,0,c
  7913  00579C  D002               	goto	u2150
  7914  00579E  0E01               	movlw	1
  7915  0057A0  D001               	goto	u2160
  7916  0057A2                     u2150:
  7917  0057A2  0E00               	movlw	0
  7918  0057A4                     u2160:
  7919  0057A4  6E3D               	movwf	btemp,c
  7920  0057A6  6A3E               	clrf	btemp+1,c
  7921                           
  7922                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7923  0057A8  52E5               	movf	postdec1,f,c
  7924  0057AA  52E5               	movf	postdec1,f,c
  7925  0057AC  0012               	return		;funcret
  7926  0057AE                     __end_of_isupper:
  7927                           	opt callstack 0
  7928                           
  7929 ;; *************** function _isalpha *****************
  7930 ;; Defined at:
  7931 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  c               2  [STACK] int 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;		None
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  2  [STACK] int 
  7938 ;; Registers used:
  7939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7949 ;;Total ram usage:        0 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    3
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_xtoa
  7956 ;; This function uses a reentrant model
  7957 ;;
  7958                           
  7959                           	psect	text38
  7960  00559E                     __ptext38:
  7961                           	opt callstack 0
  7962  00559E                     _isalpha:
  7963                           	opt callstack 23
  7964                           
  7965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7966                           ;incstack = 0
  7967  00559E  0E9F               	movlw	159
  7968  0055A0  6E47               	movwf	btemp+10,c
  7969  0055A2  0EFF               	movlw	255
  7970  0055A4  6E48               	movwf	btemp+11,c
  7971                           
  7972                           ;stkvar	_c @ sp[(0)+-2]
  7973  0055A6  0EFE               	movlw	-2
  7974  0055A8  006F FF8C  F045    	movff	plusw1,btemp+8
  7975  0055AE  0EFF               	movlw	-1
  7976  0055B0  006F FF8C  F046    	movff	plusw1,btemp+9
  7977  0055B6  0E20               	movlw	32
  7978  0055B8  1245               	iorwf	btemp+8,f,c
  7979  0055BA  0E00               	movlw	0
  7980  0055BC  1246               	iorwf	btemp+9,f,c
  7981  0055BE  5047               	movf	btemp+10,w,c
  7982  0055C0  2645               	addwf	btemp+8,f,c
  7983  0055C2  5048               	movf	btemp+11,w,c
  7984  0055C4  2246               	addwfc	btemp+9,f,c
  7985  0055C6  5046               	movf	btemp+9,w,c
  7986  0055C8  E106               	bnz	u2170
  7987  0055CA  0E1A               	movlw	26
  7988  0055CC  5C45               	subwf	btemp+8,w,c
  7989  0055CE  B0D8               	btfsc	status,0,c
  7990  0055D0  D002               	goto	u2170
  7991  0055D2  0E01               	movlw	1
  7992  0055D4  D001               	goto	u2180
  7993  0055D6                     u2170:
  7994  0055D6  0E00               	movlw	0
  7995  0055D8                     u2180:
  7996  0055D8  6E3D               	movwf	btemp,c
  7997  0055DA  6A3E               	clrf	btemp+1,c
  7998                           
  7999                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8000  0055DC  52E5               	movf	postdec1,f,c
  8001  0055DE  52E5               	movf	postdec1,f,c
  8002  0055E0  0012               	return		;funcret
  8003  0055E2                     __end_of_isalpha:
  8004                           	opt callstack 0
  8005                           
  8006 ;; *************** function _stoa *****************
  8007 ;; Defined at:
  8008 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8011 ;;		 -> f(5), NULL(0), 
  8012 ;;  s               2  [STACK] PTR unsigned char 
  8013 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;  nuls            7  [STACK] unsigned char [7]
  8016 ;;  l               2  [STACK] int 
  8017 ;;  p               2  [STACK] int 
  8018 ;;  cp              2  [STACK] PTR unsigned char 
  8019 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), V(80), 
  8020 ;;  w               2  [STACK] int 
  8021 ;;  i               2  [STACK] int 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  2  [STACK] int 
  8024 ;; Registers used:
  8025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/1
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8035 ;;Total ram usage:        0 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; Hardware stack levels required when called:    6
  8038 ;; This function calls:
  8039 ;;		_fputc
  8040 ;;		_strlen
  8041 ;; This function is called by:
  8042 ;;		_vfpfcnvrt
  8043 ;; This function uses a reentrant model
  8044 ;;
  8045                           
  8046                           	psect	text39
  8047  0034B8                     __ptext39:
  8048                           	opt callstack 0
  8049  0034B8                     _stoa:
  8050                           	opt callstack 0
  8051                           
  8052                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8053  0034B8  0E11               	movlw	17
  8054  0034BA  26E1               	addwf	fsr1l,f,c
  8055  0034BC  0E00               	movlw	0
  8056  0034BE  22E2               	addwfc	fsr1h,f,c
  8057                           
  8058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8059                           
  8060                           ;incstack = 0
  8061  0034C0  EE20  F0F9         	lfsr	2,stoa@F1144
  8062                           
  8063                           ;stkvar	_nuls @ sp[(-17)+0]
  8064  0034C4  0E07               	movlw	7
  8065  0034C6  6E3D               	movwf	btemp,c
  8066  0034C8  0EEF               	movlw	-17
  8067  0034CA                     us417999:
  8068  0034CA  006F FF7B FFE3     	movff	postinc2,plusw1
  8069  0034D0  28E8               	incf	wreg,w,c
  8070  0034D2  2E3D               	decfsz	btemp,f,c
  8071  0034D4  D7FA               	bra	us417999
  8072                           
  8073                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8074                           ;stkvar	_s @ sp[(-17)+-4]
  8075  0034D6  0EEB               	movlw	-21
  8076  0034D8  006F FF8C  F047    	movff	plusw1,btemp+10
  8077  0034DE  0EEC               	movlw	-20
  8078  0034E0  006F FF8C  F048    	movff	plusw1,btemp+11
  8079                           
  8080                           ;stkvar	_cp @ sp[(-17)+11]
  8081  0034E6  0EFB               	movlw	-5
  8082  0034E8  0060  F123  FFE3   	movff	btemp+11,plusw1
  8083  0034EE  0EFA               	movlw	-6
  8084  0034F0  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8085                           
  8086                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8087                           ;stkvar	_cp @ sp[(-17)+11]
  8088  0034F6  0EFA               	movlw	-6
  8089  0034F8  006F FF8C  F03D    	movff	plusw1,btemp
  8090  0034FE  0EFB               	movlw	-5
  8091  003500  50E3               	movf	plusw1,w,c
  8092  003502  103D               	iorwf	btemp,w,c
  8093  003504  A4D8               	btfss	status,2,c
  8094  003506  D00E               	goto	l7091
  8095                           
  8096                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8097                           ;stkvar	_nuls @ sp[(-17)+0]
  8098  003508  0EEF               	movlw	239
  8099  00350A  24E1               	addwf	fsr1l,w,c
  8100  00350C  6E47               	movwf	btemp+10,c
  8101  00350E  0EFF               	movlw	255
  8102  003510  20E2               	addwfc	fsr1h,w,c
  8103  003512  6E48               	movwf	btemp+11,c
  8104                           
  8105                           ;stkvar	_cp @ sp[(-17)+11]
  8106  003514  0EFB               	movlw	-5
  8107  003516  0060  F123  FFE3   	movff	btemp+11,plusw1
  8108  00351C  0EFA               	movlw	-6
  8109  00351E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8110  003524                     l7091:
  8111                           
  8112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8113                           ;stkvar	_cp @ sp[(-17)+11]
  8114  003524  0EFA               	movlw	-6
  8115  003526  006F FF8F FFE6     	movff	plusw1,postinc1
  8116  00352C  006F FF8F FFE6     	movff	plusw1,postinc1
  8117  003532  ECDD  F027         	call	_strlen	;wreg free
  8118                           
  8119                           ;stkvar	_l @ sp[(-17)+7]
  8120  003536  0EF6               	movlw	-10
  8121  003538  0060  F0F7  FFE3   	movff	btemp,plusw1
  8122  00353E  0EF7               	movlw	-9
  8123  003540  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  8124                           
  8125                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8126                           ;stkvar	_p @ sp[(-17)+9]
  8127  003546  0EF8               	movlw	-8
  8128  003548  0060  F09B  FFE3   	movff	_prec,plusw1
  8129  00354E  0EF9               	movlw	-7
  8130  003550  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8131                           
  8132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8133                           ;stkvar	_p @ sp[(-17)+9]
  8134  003556  0EF9               	movlw	-7
  8135  003558  BEE3               	btfsc	plusw1,7,c
  8136  00355A  D023               	goto	l1691
  8137                           
  8138                           ;stkvar	_l @ sp[(-17)+7]
  8139                           ;stkvar	_p @ sp[(-17)+9]
  8140  00355C  50E1               	movf	fsr1l,w,c
  8141  00355E  0FF8               	addlw	-8
  8142  003560  6ED9               	movwf	fsr2l,c
  8143  003562  50E2               	movf	fsr1h,w,c
  8144  003564  6EDA               	movwf	fsr2h,c
  8145  003566  0EFF               	movlw	255
  8146  003568  22DA               	addwfc	fsr2h,f,c
  8147  00356A  0EF6               	movlw	-10
  8148  00356C  50E3               	movf	plusw1,w,c
  8149  00356E  5CDE               	subwf	postinc2,w,c
  8150  003570  50DE               	movf	postinc2,w,c
  8151  003572  0A80               	xorlw	128
  8152  003574  6E3D               	movwf	btemp,c
  8153  003576  0EF7               	movlw	-9
  8154  003578  50E3               	movf	plusw1,w,c
  8155  00357A  0A80               	xorlw	128
  8156  00357C  583D               	subwfb	btemp,w,c
  8157  00357E  B0D8               	btfsc	status,0,c
  8158  003580  D010               	goto	l1691
  8159                           
  8160                           ;stkvar	_p @ sp[(-17)+9]
  8161                           ;stkvar	_l @ sp[(-17)+7]
  8162  003582  0EF8               	movlw	-8
  8163  003584  006F FF8C  F03D    	movff	plusw1,btemp
  8164  00358A  0EF6               	movlw	-10
  8165  00358C  0060  F0F7  FFE3   	movff	btemp,plusw1
  8166  003592  0EF9               	movlw	-7
  8167  003594  006F FF8C  F03D    	movff	plusw1,btemp
  8168  00359A  0EF7               	movlw	-9
  8169  00359C  0060  F0F7  FFE3   	movff	btemp,plusw1
  8170  0035A2                     l1691:
  8171                           
  8172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8173                           ;stkvar	_l @ sp[(-17)+7]
  8174                           ;stkvar	_p @ sp[(-17)+9]
  8175  0035A2  0EF6               	movlw	-10
  8176  0035A4  006F FF8C  F03D    	movff	plusw1,btemp
  8177  0035AA  0EF8               	movlw	-8
  8178  0035AC  0060  F0F7  FFE3   	movff	btemp,plusw1
  8179  0035B2  0EF7               	movlw	-9
  8180  0035B4  006F FF8C  F03D    	movff	plusw1,btemp
  8181  0035BA  0EF9               	movlw	-7
  8182  0035BC  0060  F0F7  FFE3   	movff	btemp,plusw1
  8183                           
  8184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8185                           ;stkvar	_w @ sp[(-17)+13]
  8186  0035C2  0EFC               	movlw	-4
  8187  0035C4  0060  F093  FFE3   	movff	_width,plusw1
  8188  0035CA  0EFD               	movlw	-3
  8189  0035CC  0060  F097  FFE3   	movff	_width+1,plusw1
  8190                           
  8191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8192  0035D2  A028               	btfss	_flags,0,c
  8193  0035D4  D01F               	goto	l7111
  8194  0035D6  D031               	goto	u4220
  8195  0035D8                     l7107:
  8196                           
  8197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8198                           ;stkvar	_fp @ sp[(-17)+-2]
  8199  0035D8  0EED               	movlw	-19
  8200  0035DA  006F FF8F FFE6     	movff	plusw1,postinc1
  8201  0035E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8202  0035E6  0E20               	movlw	32
  8203  0035E8  6EE6               	movwf	postinc1,c
  8204  0035EA  0E00               	movlw	0
  8205  0035EC  6EE6               	movwf	postinc1,c
  8206  0035EE  ECD7  F022         	call	_fputc	;wreg free
  8207                           
  8208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8209                           ;stkvar	_l @ sp[(-17)+7]
  8210  0035F2  0EF6               	movlw	-10
  8211  0035F4  50E3               	movf	plusw1,w,c
  8212  0035F6  0F01               	addlw	1
  8213  0035F8  6E3D               	movwf	btemp,c
  8214  0035FA  0EF6               	movlw	-10
  8215  0035FC  0060  F0F7  FFE3   	movff	btemp,plusw1
  8216  003602  6A3D               	clrf	btemp,c
  8217  003604  0EF7               	movlw	-9
  8218  003606  50E3               	movf	plusw1,w,c
  8219  003608  203D               	addwfc	btemp,w,c
  8220  00360A  6E3D               	movwf	btemp,c
  8221  00360C  0EF7               	movlw	-9
  8222  00360E  0060  F0F7  FFE3   	movff	btemp,plusw1
  8223  003614                     l7111:
  8224                           
  8225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8226                           ;stkvar	_w @ sp[(-17)+13]
  8227                           ;stkvar	_l @ sp[(-17)+7]
  8228  003614  50E1               	movf	fsr1l,w,c
  8229  003616  0FF6               	addlw	-10
  8230  003618  6ED9               	movwf	fsr2l,c
  8231  00361A  50E2               	movf	fsr1h,w,c
  8232  00361C  6EDA               	movwf	fsr2h,c
  8233  00361E  0EFF               	movlw	255
  8234  003620  22DA               	addwfc	fsr2h,f,c
  8235  003622  0EFC               	movlw	-4
  8236  003624  50E3               	movf	plusw1,w,c
  8237  003626  5CDE               	subwf	postinc2,w,c
  8238  003628  50DE               	movf	postinc2,w,c
  8239  00362A  0A80               	xorlw	128
  8240  00362C  6E3D               	movwf	btemp,c
  8241  00362E  0EFD               	movlw	-3
  8242  003630  50E3               	movf	plusw1,w,c
  8243  003632  0A80               	xorlw	128
  8244  003634  583D               	subwfb	btemp,w,c
  8245  003636  A0D8               	btfss	status,0,c
  8246  003638  D7CF               	goto	l7107
  8247  00363A                     u4220:
  8248                           
  8249                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8250                           ;stkvar	_i @ sp[(-17)+15]
  8251  00363A  0EFE               	movlw	-2
  8252  00363C  6AE3               	clrf	plusw1,c
  8253  00363E  0EFF               	movlw	-1
  8254  003640  6AE3               	clrf	plusw1,c
  8255                           
  8256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8257  003642  D037               	goto	l7121
  8258  003644                     l7115:
  8259                           
  8260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8261                           ;stkvar	_fp @ sp[(-17)+-2]
  8262  003644  0EED               	movlw	-19
  8263  003646  006F FF8F FFE6     	movff	plusw1,postinc1
  8264  00364C  006F FF8F FFE6     	movff	plusw1,postinc1
  8265                           
  8266                           ;stkvar	_cp @ sp[(-19)+11]
  8267  003652  0EF8               	movlw	-8
  8268  003654  006F FF8F FFD9     	movff	plusw1,fsr2l
  8269  00365A  0EF9               	movlw	-7
  8270  00365C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8271  003662  50DF               	movf	indf2,w,c
  8272  003664  6EE6               	movwf	postinc1,c
  8273  003666  0E00               	movlw	0
  8274  003668  6EE6               	movwf	postinc1,c
  8275  00366A  ECD7  F022         	call	_fputc	;wreg free
  8276                           
  8277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8278                           ;stkvar	_cp @ sp[(-17)+11]
  8279  00366E  0EFA               	movlw	-6
  8280  003670  50E3               	movf	plusw1,w,c
  8281  003672  0F01               	addlw	1
  8282  003674  6E3D               	movwf	btemp,c
  8283  003676  0EFA               	movlw	-6
  8284  003678  0060  F0F7  FFE3   	movff	btemp,plusw1
  8285  00367E  6A3D               	clrf	btemp,c
  8286  003680  0EFB               	movlw	-5
  8287  003682  50E3               	movf	plusw1,w,c
  8288  003684  203D               	addwfc	btemp,w,c
  8289  003686  6E3D               	movwf	btemp,c
  8290  003688  0EFB               	movlw	-5
  8291  00368A  0060  F0F7  FFE3   	movff	btemp,plusw1
  8292                           
  8293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8294                           ;stkvar	_i @ sp[(-17)+15]
  8295  003690  0EFE               	movlw	-2
  8296  003692  50E3               	movf	plusw1,w,c
  8297  003694  0F01               	addlw	1
  8298  003696  6E3D               	movwf	btemp,c
  8299  003698  0EFE               	movlw	-2
  8300  00369A  0060  F0F7  FFE3   	movff	btemp,plusw1
  8301  0036A0  6A3D               	clrf	btemp,c
  8302  0036A2  0EFF               	movlw	-1
  8303  0036A4  50E3               	movf	plusw1,w,c
  8304  0036A6  203D               	addwfc	btemp,w,c
  8305  0036A8  6E3D               	movwf	btemp,c
  8306  0036AA  0EFF               	movlw	-1
  8307  0036AC  0060  F0F7  FFE3   	movff	btemp,plusw1
  8308  0036B2                     l7121:
  8309                           
  8310                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8311                           ;stkvar	_p @ sp[(-17)+9]
  8312                           ;stkvar	_i @ sp[(-17)+15]
  8313  0036B2  50E1               	movf	fsr1l,w,c
  8314  0036B4  0FFE               	addlw	-2
  8315  0036B6  6ED9               	movwf	fsr2l,c
  8316  0036B8  50E2               	movf	fsr1h,w,c
  8317  0036BA  6EDA               	movwf	fsr2h,c
  8318  0036BC  0EFF               	movlw	255
  8319  0036BE  22DA               	addwfc	fsr2h,f,c
  8320  0036C0  0EF8               	movlw	-8
  8321  0036C2  50E3               	movf	plusw1,w,c
  8322  0036C4  5CDE               	subwf	postinc2,w,c
  8323  0036C6  50DE               	movf	postinc2,w,c
  8324  0036C8  0A80               	xorlw	128
  8325  0036CA  6E3D               	movwf	btemp,c
  8326  0036CC  0EF9               	movlw	-7
  8327  0036CE  50E3               	movf	plusw1,w,c
  8328  0036D0  0A80               	xorlw	128
  8329  0036D2  583D               	subwfb	btemp,w,c
  8330  0036D4  A0D8               	btfss	status,0,c
  8331  0036D6  D7B6               	goto	l7115
  8332                           
  8333                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8334  0036D8  B028               	btfsc	_flags,0,c
  8335  0036DA  D01F               	goto	l7129
  8336  0036DC  D031               	goto	u4250
  8337  0036DE                     l7125:
  8338                           
  8339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8340                           ;stkvar	_fp @ sp[(-17)+-2]
  8341  0036DE  0EED               	movlw	-19
  8342  0036E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8343  0036E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8344  0036EC  0E20               	movlw	32
  8345  0036EE  6EE6               	movwf	postinc1,c
  8346  0036F0  0E00               	movlw	0
  8347  0036F2  6EE6               	movwf	postinc1,c
  8348  0036F4  ECD7  F022         	call	_fputc	;wreg free
  8349                           
  8350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8351                           ;stkvar	_l @ sp[(-17)+7]
  8352  0036F8  0EF6               	movlw	-10
  8353  0036FA  50E3               	movf	plusw1,w,c
  8354  0036FC  0F01               	addlw	1
  8355  0036FE  6E3D               	movwf	btemp,c
  8356  003700  0EF6               	movlw	-10
  8357  003702  0060  F0F7  FFE3   	movff	btemp,plusw1
  8358  003708  6A3D               	clrf	btemp,c
  8359  00370A  0EF7               	movlw	-9
  8360  00370C  50E3               	movf	plusw1,w,c
  8361  00370E  203D               	addwfc	btemp,w,c
  8362  003710  6E3D               	movwf	btemp,c
  8363  003712  0EF7               	movlw	-9
  8364  003714  0060  F0F7  FFE3   	movff	btemp,plusw1
  8365  00371A                     l7129:
  8366                           
  8367                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8368                           ;stkvar	_w @ sp[(-17)+13]
  8369                           ;stkvar	_l @ sp[(-17)+7]
  8370  00371A  50E1               	movf	fsr1l,w,c
  8371  00371C  0FF6               	addlw	-10
  8372  00371E  6ED9               	movwf	fsr2l,c
  8373  003720  50E2               	movf	fsr1h,w,c
  8374  003722  6EDA               	movwf	fsr2h,c
  8375  003724  0EFF               	movlw	255
  8376  003726  22DA               	addwfc	fsr2h,f,c
  8377  003728  0EFC               	movlw	-4
  8378  00372A  50E3               	movf	plusw1,w,c
  8379  00372C  5CDE               	subwf	postinc2,w,c
  8380  00372E  50DE               	movf	postinc2,w,c
  8381  003730  0A80               	xorlw	128
  8382  003732  6E3D               	movwf	btemp,c
  8383  003734  0EFD               	movlw	-3
  8384  003736  50E3               	movf	plusw1,w,c
  8385  003738  0A80               	xorlw	128
  8386  00373A  583D               	subwfb	btemp,w,c
  8387  00373C  A0D8               	btfss	status,0,c
  8388  00373E  D7CF               	goto	l7125
  8389  003740                     u4250:
  8390                           
  8391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8392                           ;stkvar	_l @ sp[(-17)+7]
  8393  003740  0EF6               	movlw	-10
  8394  003742  006F FF8C  F03D    	movff	plusw1,btemp
  8395  003748  0EF7               	movlw	-9
  8396  00374A  006F FF8C  F03E    	movff	plusw1,btemp+1
  8397                           
  8398                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8399  003750  0EEB               	movlw	235
  8400  003752  26E1               	addwf	fsr1l,f,c
  8401  003754  0EFF               	movlw	255
  8402  003756  22E2               	addwfc	fsr1h,f,c
  8403  003758  0012               	return		;funcret
  8404  00375A                     __end_of_stoa:
  8405                           	opt callstack 0
  8406                           
  8407 ;; *************** function _dtoa *****************
  8408 ;; Defined at:
  8409 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8412 ;;		 -> f(5), NULL(0), 
  8413 ;;  d               8  [STACK] long long 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;  n               8  [STACK] long long 
  8416 ;;  i               2  [STACK] int 
  8417 ;;  s               2  [STACK] int 
  8418 ;;  w               2  [STACK] int 
  8419 ;;  p               2  [STACK] int 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  2  [STACK] int 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, prodl
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/1
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8433 ;;Total ram usage:        0 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    8
  8436 ;; This function calls:
  8437 ;;		___aodiv
  8438 ;;		___aomod
  8439 ;;		_abs
  8440 ;;		_pad
  8441 ;; This function is called by:
  8442 ;;		_vfpfcnvrt
  8443 ;; This function uses a reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text40
  8447  002746                     __ptext40:
  8448                           	opt callstack 0
  8449  002746                     _dtoa:
  8450                           	opt callstack 0
  8451                           
  8452                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8453  002746  0E12               	movlw	18
  8454  002748  26E1               	addwf	fsr1l,f,c
  8455  00274A  0E00               	movlw	0
  8456  00274C  22E2               	addwfc	fsr1h,f,c
  8457                           
  8458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8459                           ;stkvar	_d @ sp[(-18)+-10]
  8460                           
  8461                           ;incstack = 0
  8462  00274E  0EE4               	movlw	228
  8463  002750  24E1               	addwf	fsr1l,w,c
  8464  002752  6ED9               	movwf	fsr2l,c
  8465  002754  0EFF               	movlw	255
  8466  002756  20E2               	addwfc	fsr1h,w,c
  8467  002758  6EDA               	movwf	fsr2h,c
  8468                           
  8469                           ;stkvar	_n @ sp[(-18)+2]
  8470  00275A  0E08               	movlw	8
  8471  00275C  6E3D               	movwf	btemp,c
  8472  00275E  0EF0               	movlw	-16
  8473  002760                     us400999:
  8474  002760  006F FF7B FFE3     	movff	postinc2,plusw1
  8475  002766  28E8               	incf	wreg,w,c
  8476  002768  2E3D               	decfsz	btemp,f,c
  8477  00276A  D7FA               	bra	us400999
  8478                           
  8479                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8480                           ;stkvar	_n @ sp[(-18)+2]
  8481  00276C  0EF7               	movlw	-9
  8482  00276E  AEE3               	btfss	plusw1,7,c
  8483  002770  D002               	goto	u4010
  8484  002772  0E01               	movlw	1
  8485  002774  D001               	goto	u4020
  8486  002776                     u4010:
  8487  002776  0E00               	movlw	0
  8488  002778                     u4020:
  8489  002778  6E47               	movwf	btemp+10,c
  8490  00277A  6A48               	clrf	btemp+11,c
  8491                           
  8492                           ;stkvar	_s @ sp[(-18)+12]
  8493  00277C  0EFA               	movlw	-6
  8494  00277E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8495  002784  0EFB               	movlw	-5
  8496  002786  0060  F123  FFE3   	movff	btemp+11,plusw1
  8497                           
  8498                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8499                           ;stkvar	_s @ sp[(-18)+12]
  8500  00278C  0EFA               	movlw	-6
  8501  00278E  006F FF8C  F03D    	movff	plusw1,btemp
  8502  002794  0EFB               	movlw	-5
  8503  002796  50E3               	movf	plusw1,w,c
  8504  002798  103D               	iorwf	btemp,w,c
  8505  00279A  B4D8               	btfsc	status,2,c
  8506  00279C  D025               	goto	u4040
  8507                           
  8508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8509                           ;stkvar	_n @ sp[(-18)+2]
  8510                           ;stkvar	_n @ sp[(-18)+2]
  8511  00279E  0EF0               	movlw	-16
  8512  0027A0  6CE3               	negf	plusw1,c
  8513  0027A2  0EF1               	movlw	-15
  8514  0027A4  1EE3               	comf	plusw1,f,c
  8515  0027A6  0EF2               	movlw	-14
  8516  0027A8  1EE3               	comf	plusw1,f,c
  8517  0027AA  0EF3               	movlw	-13
  8518  0027AC  1EE3               	comf	plusw1,f,c
  8519  0027AE  0EF4               	movlw	-12
  8520  0027B0  1EE3               	comf	plusw1,f,c
  8521  0027B2  0EF5               	movlw	-11
  8522  0027B4  1EE3               	comf	plusw1,f,c
  8523  0027B6  0EF6               	movlw	-10
  8524  0027B8  1EE3               	comf	plusw1,f,c
  8525  0027BA  0EF7               	movlw	-9
  8526  0027BC  1EE3               	comf	plusw1,f,c
  8527  0027BE  E314               	bnc	u4040
  8528  0027C0  0EF1               	movlw	-15
  8529  0027C2  2AE3               	incf	plusw1,f,c
  8530  0027C4  E311               	bnc	u4040
  8531  0027C6  0EF2               	movlw	-14
  8532  0027C8  2AE3               	incf	plusw1,f,c
  8533  0027CA  E30E               	bnc	u4040
  8534  0027CC  0EF3               	movlw	-13
  8535  0027CE  2AE3               	incf	plusw1,f,c
  8536  0027D0  E30B               	bnc	u4040
  8537  0027D2  0EF4               	movlw	-12
  8538  0027D4  2AE3               	incf	plusw1,f,c
  8539  0027D6  E308               	bnc	u4040
  8540  0027D8  0EF5               	movlw	-11
  8541  0027DA  2AE3               	incf	plusw1,f,c
  8542  0027DC  E305               	bnc	u4040
  8543  0027DE  0EF6               	movlw	-10
  8544  0027E0  2AE3               	incf	plusw1,f,c
  8545  0027E2  E302               	bnc	u4040
  8546  0027E4  0EF7               	movlw	-9
  8547  0027E6  2AE3               	incf	plusw1,f,c
  8548  0027E8                     u4040:
  8549                           
  8550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8551  0027E8  AE27               	btfss	_prec+1,7,c
  8552                           
  8553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8554  0027EA  9228               	bcf	_flags,1,c
  8555                           
  8556                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8557  0027EC  BE27               	btfsc	_prec+1,7,c
  8558  0027EE  D005               	goto	u4060
  8559  0027F0  5027               	movf	_prec+1,w,c
  8560  0027F2  E110               	bnz	l7033
  8561  0027F4  0426               	decf	_prec,w,c
  8562  0027F6  B0D8               	btfsc	status,0,c
  8563  0027F8  D00D               	goto	l7033
  8564  0027FA                     u4060:
  8565  0027FA  0E01               	movlw	1
  8566  0027FC  6E47               	movwf	btemp+10,c
  8567  0027FE  0E00               	movlw	0
  8568  002800  6E48               	movwf	btemp+11,c
  8569                           
  8570                           ;stkvar	_p @ sp[(-18)+16]
  8571  002802  0EFE               	movlw	-2
  8572  002804  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8573  00280A  0EFF               	movlw	-1
  8574  00280C  0060  F123  FFE3   	movff	btemp+11,plusw1
  8575  002812  D008               	goto	l1664
  8576  002814                     l7033:
  8577                           
  8578                           ;stkvar	_p @ sp[(-18)+16]
  8579  002814  0EFE               	movlw	-2
  8580  002816  0060  F09B  FFE3   	movff	_prec,plusw1
  8581  00281C  0EFF               	movlw	-1
  8582  00281E  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8583  002824                     l1664:
  8584                           
  8585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8586                           ;stkvar	_w @ sp[(-18)+14]
  8587  002824  0EFC               	movlw	-4
  8588  002826  0060  F093  FFE3   	movff	_width,plusw1
  8589  00282C  0EFD               	movlw	-3
  8590  00282E  0060  F097  FFE3   	movff	_width+1,plusw1
  8591                           
  8592                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8593                           ;stkvar	_s @ sp[(-18)+12]
  8594  002834  0EFA               	movlw	-6
  8595  002836  006F FF8C  F03D    	movff	plusw1,btemp
  8596  00283C  0EFB               	movlw	-5
  8597  00283E  50E3               	movf	plusw1,w,c
  8598  002840  103D               	iorwf	btemp,w,c
  8599  002842  A4D8               	btfss	status,2,c
  8600  002844  D002               	goto	u4080
  8601  002846  A428               	btfss	_flags,2,c
  8602  002848  D00A               	goto	l7041
  8603  00284A                     u4080:
  8604                           
  8605                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8606                           ;stkvar	_w @ sp[(-18)+14]
  8607  00284A  50E1               	movf	fsr1l,w,c
  8608  00284C  0FFC               	addlw	-4
  8609  00284E  6ED9               	movwf	fsr2l,c
  8610  002850  50E2               	movf	fsr1h,w,c
  8611  002852  6EDA               	movwf	fsr2h,c
  8612  002854  0EFF               	movlw	255
  8613  002856  22DA               	addwfc	fsr2h,f,c
  8614  002858  06DE               	decf	postinc2,f,c
  8615  00285A  0E00               	movlw	0
  8616  00285C  5ADD               	subwfb	postdec2,f,c
  8617  00285E                     l7041:
  8618                           
  8619                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8620  00285E  0E1F               	movlw	31
  8621  002860  6E47               	movwf	btemp+10,c
  8622  002862  0E00               	movlw	0
  8623  002864  6E48               	movwf	btemp+11,c
  8624                           
  8625                           ;stkvar	_i @ sp[(-18)+10]
  8626  002866  0EF8               	movlw	-8
  8627  002868  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8628  00286E  0EF9               	movlw	-7
  8629  002870  0060  F123  FFE3   	movff	btemp+11,plusw1
  8630                           
  8631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8632  002876  0100               	movlb	0	; () banked
  8633  002878  6BF8               	clrf	(_dbuf+31)& (0+255),b
  8634                           
  8635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8636  00287A  D103               	goto	l7055
  8637  00287C                     l7045:
  8638                           
  8639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8640                           ;stkvar	_i @ sp[(-18)+10]
  8641  00287C  50E1               	movf	fsr1l,w,c
  8642  00287E  0FF8               	addlw	-8
  8643  002880  6ED9               	movwf	fsr2l,c
  8644  002882  50E2               	movf	fsr1h,w,c
  8645  002884  6EDA               	movwf	fsr2h,c
  8646  002886  0EFF               	movlw	255
  8647  002888  22DA               	addwfc	fsr2h,f,c
  8648  00288A  06DE               	decf	postinc2,f,c
  8649  00288C  0E00               	movlw	0
  8650  00288E  5ADD               	subwfb	postdec2,f,c
  8651                           
  8652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8653  002890  0E0A               	movlw	10
  8654  002892  6EE6               	movwf	postinc1,c
  8655  002894  0E00               	movlw	0
  8656  002896  6EE6               	movwf	postinc1,c
  8657  002898  0E00               	movlw	0
  8658  00289A  6EE6               	movwf	postinc1,c
  8659  00289C  0E00               	movlw	0
  8660  00289E  6EE6               	movwf	postinc1,c
  8661  0028A0  0E00               	movlw	0
  8662  0028A2  6EE6               	movwf	postinc1,c
  8663  0028A4  0E00               	movlw	0
  8664  0028A6  6EE6               	movwf	postinc1,c
  8665  0028A8  0E00               	movlw	0
  8666  0028AA  6EE6               	movwf	postinc1,c
  8667  0028AC  0E00               	movlw	0
  8668  0028AE  6EE6               	movwf	postinc1,c
  8669                           
  8670                           ;stkvar	_n @ sp[(-26)+2]
  8671  0028B0  50E1               	movf	fsr1l,w,c
  8672  0028B2  0FE8               	addlw	-24
  8673  0028B4  6ED9               	movwf	fsr2l,c
  8674  0028B6  50E2               	movf	fsr1h,w,c
  8675  0028B8  6EDA               	movwf	fsr2h,c
  8676  0028BA  0EFF               	movlw	255
  8677  0028BC  22DA               	addwfc	fsr2h,f,c
  8678  0028BE  006F FF7B FFE6     	movff	postinc2,postinc1
  8679  0028C4  006F FF7B FFE6     	movff	postinc2,postinc1
  8680  0028CA  006F FF7B FFE6     	movff	postinc2,postinc1
  8681  0028D0  006F FF7B FFE6     	movff	postinc2,postinc1
  8682  0028D6  006F FF7B FFE6     	movff	postinc2,postinc1
  8683  0028DC  006F FF7B FFE6     	movff	postinc2,postinc1
  8684  0028E2  006F FF7B FFE6     	movff	postinc2,postinc1
  8685  0028E8  006F FF7B FFE6     	movff	postinc2,postinc1
  8686  0028EE  EC2C  F01E         	call	___aomod	;wreg free
  8687  0028F2  52E5               	movf	postdec1,f,c
  8688  0028F4  006F FF9C  F054    	movff	indf1,btemp+23
  8689  0028FA  52E5               	movf	postdec1,f,c
  8690  0028FC  006F FF9C  F053    	movff	indf1,btemp+22
  8691  002902  52E5               	movf	postdec1,f,c
  8692  002904  006F FF9C  F052    	movff	indf1,btemp+21
  8693  00290A  52E5               	movf	postdec1,f,c
  8694  00290C  006F FF9C  F051    	movff	indf1,btemp+20
  8695  002912  52E5               	movf	postdec1,f,c
  8696  002914  006F FF9C  F050    	movff	indf1,btemp+19
  8697  00291A  52E5               	movf	postdec1,f,c
  8698  00291C  006F FF9C  F04F    	movff	indf1,btemp+18
  8699  002922  52E5               	movf	postdec1,f,c
  8700  002924  006F FF9C  F04E    	movff	indf1,btemp+17
  8701  00292A  52E5               	movf	postdec1,f,c
  8702  00292C  006F FF9C  F04D    	movff	indf1,btemp+16
  8703  002932  0EF8               	movlw	248
  8704  002934  26E1               	addwf	fsr1l,f,c
  8705  002936  0EFF               	movlw	255
  8706  002938  22E2               	addwfc	fsr1h,f,c
  8707  00293A  0060  F134  F047   	movff	btemp+16,btemp+10
  8708  002940  0060  F138  F048   	movff	btemp+17,btemp+11
  8709  002946  0060  F11F  FFE6   	movff	btemp+10,postinc1
  8710  00294C  0060  F123  FFE6   	movff	btemp+11,postinc1
  8711  002952  EC89  F02A         	call	_abs	;wreg free
  8712  002956  0E30               	movlw	48
  8713  002958  263D               	addwf	btemp,f,c
  8714                           
  8715                           ;stkvar	_i @ sp[(-18)+10]
  8716  00295A  0EF8               	movlw	-8
  8717  00295C  006F FF8C  F048    	movff	plusw1,btemp+11
  8718  002962  5048               	movf	btemp+11,w,c
  8719  002964  0FD9               	addlw	low _dbuf
  8720  002966  6ED9               	movwf	fsr2l,c
  8721  002968  6ADA               	clrf	fsr2h,c
  8722  00296A  0060  F0F7  FFDF   	movff	btemp,indf2
  8723                           
  8724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8725                           ;stkvar	_p @ sp[(-18)+16]
  8726  002970  50E1               	movf	fsr1l,w,c
  8727  002972  0FFE               	addlw	-2
  8728  002974  6ED9               	movwf	fsr2l,c
  8729  002976  50E2               	movf	fsr1h,w,c
  8730  002978  6EDA               	movwf	fsr2h,c
  8731  00297A  0EFF               	movlw	255
  8732  00297C  22DA               	addwfc	fsr2h,f,c
  8733  00297E  06DE               	decf	postinc2,f,c
  8734  002980  0E00               	movlw	0
  8735  002982  5ADD               	subwfb	postdec2,f,c
  8736                           
  8737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8738                           ;stkvar	_w @ sp[(-18)+14]
  8739  002984  50E1               	movf	fsr1l,w,c
  8740  002986  0FFC               	addlw	-4
  8741  002988  6ED9               	movwf	fsr2l,c
  8742  00298A  50E2               	movf	fsr1h,w,c
  8743  00298C  6EDA               	movwf	fsr2h,c
  8744  00298E  0EFF               	movlw	255
  8745  002990  22DA               	addwfc	fsr2h,f,c
  8746  002992  06DE               	decf	postinc2,f,c
  8747  002994  0E00               	movlw	0
  8748  002996  5ADD               	subwfb	postdec2,f,c
  8749                           
  8750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8751  002998  0E0A               	movlw	10
  8752  00299A  6EE6               	movwf	postinc1,c
  8753  00299C  0E00               	movlw	0
  8754  00299E  6EE6               	movwf	postinc1,c
  8755  0029A0  0E00               	movlw	0
  8756  0029A2  6EE6               	movwf	postinc1,c
  8757  0029A4  0E00               	movlw	0
  8758  0029A6  6EE6               	movwf	postinc1,c
  8759  0029A8  0E00               	movlw	0
  8760  0029AA  6EE6               	movwf	postinc1,c
  8761  0029AC  0E00               	movlw	0
  8762  0029AE  6EE6               	movwf	postinc1,c
  8763  0029B0  0E00               	movlw	0
  8764  0029B2  6EE6               	movwf	postinc1,c
  8765  0029B4  0E00               	movlw	0
  8766  0029B6  6EE6               	movwf	postinc1,c
  8767                           
  8768                           ;stkvar	_n @ sp[(-26)+2]
  8769  0029B8  50E1               	movf	fsr1l,w,c
  8770  0029BA  0FE8               	addlw	-24
  8771  0029BC  6ED9               	movwf	fsr2l,c
  8772  0029BE  50E2               	movf	fsr1h,w,c
  8773  0029C0  6EDA               	movwf	fsr2h,c
  8774  0029C2  0EFF               	movlw	255
  8775  0029C4  22DA               	addwfc	fsr2h,f,c
  8776  0029C6  006F FF7B FFE6     	movff	postinc2,postinc1
  8777  0029CC  006F FF7B FFE6     	movff	postinc2,postinc1
  8778  0029D2  006F FF7B FFE6     	movff	postinc2,postinc1
  8779  0029D8  006F FF7B FFE6     	movff	postinc2,postinc1
  8780  0029DE  006F FF7B FFE6     	movff	postinc2,postinc1
  8781  0029E4  006F FF7B FFE6     	movff	postinc2,postinc1
  8782  0029EA  006F FF7B FFE6     	movff	postinc2,postinc1
  8783  0029F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8784  0029F6  ECAD  F01B         	call	___aodiv	;wreg free
  8785  0029FA  52E5               	movf	postdec1,f,c
  8786  0029FC  006F FF9C  F054    	movff	indf1,btemp+23
  8787  002A02  52E5               	movf	postdec1,f,c
  8788  002A04  006F FF9C  F053    	movff	indf1,btemp+22
  8789  002A0A  52E5               	movf	postdec1,f,c
  8790  002A0C  006F FF9C  F052    	movff	indf1,btemp+21
  8791  002A12  52E5               	movf	postdec1,f,c
  8792  002A14  006F FF9C  F051    	movff	indf1,btemp+20
  8793  002A1A  52E5               	movf	postdec1,f,c
  8794  002A1C  006F FF9C  F050    	movff	indf1,btemp+19
  8795  002A22  52E5               	movf	postdec1,f,c
  8796  002A24  006F FF9C  F04F    	movff	indf1,btemp+18
  8797  002A2A  52E5               	movf	postdec1,f,c
  8798  002A2C  006F FF9C  F04E    	movff	indf1,btemp+17
  8799  002A32  52E5               	movf	postdec1,f,c
  8800  002A34  006F FF9C  F04D    	movff	indf1,btemp+16
  8801  002A3A  0EF8               	movlw	248
  8802  002A3C  26E1               	addwf	fsr1l,f,c
  8803  002A3E  0EFF               	movlw	255
  8804  002A40  22E2               	addwfc	fsr1h,f,c
  8805                           
  8806                           ;stkvar	_n @ sp[(-18)+2]
  8807  002A42  0EF0               	movlw	-16
  8808  002A44  0060  F137  FFE3   	movff	btemp+16,plusw1
  8809  002A4A  0EF1               	movlw	-15
  8810  002A4C  0060  F13B  FFE3   	movff	btemp+17,plusw1
  8811  002A52  0EF2               	movlw	-14
  8812  002A54  0060  F13F  FFE3   	movff	btemp+18,plusw1
  8813  002A5A  0EF3               	movlw	-13
  8814  002A5C  0060  F143  FFE3   	movff	btemp+19,plusw1
  8815  002A62  0EF4               	movlw	-12
  8816  002A64  0060  F147  FFE3   	movff	btemp+20,plusw1
  8817  002A6A  0EF5               	movlw	-11
  8818  002A6C  0060  F14B  FFE3   	movff	btemp+21,plusw1
  8819  002A72  0EF6               	movlw	-10
  8820  002A74  0060  F14F  FFE3   	movff	btemp+22,plusw1
  8821  002A7A  0EF7               	movlw	-9
  8822  002A7C  0060  F153  FFE3   	movff	btemp+23,plusw1
  8823  002A82                     l7055:
  8824                           
  8825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8826                           ;stkvar	_i @ sp[(-18)+10]
  8827  002A82  0EF9               	movlw	-7
  8828  002A84  BEE3               	btfsc	plusw1,7,c
  8829  002A86  D036               	goto	u4130
  8830  002A88  0EF9               	movlw	-7
  8831  002A8A  50E3               	movf	plusw1,w,c
  8832  002A8C  E104               	bnz	u4090
  8833  002A8E  0EF8               	movlw	-8
  8834  002A90  04E3               	decf	plusw1,w,c
  8835  002A92  A0D8               	btfss	status,0,c
  8836  002A94  D02F               	goto	u4130
  8837  002A96                     u4090:
  8838                           
  8839                           ;stkvar	_n @ sp[(-18)+2]
  8840  002A96  0EF0               	movlw	-16
  8841  002A98  50E3               	movf	plusw1,w,c
  8842  002A9A  E115               	bnz	u4101
  8843  002A9C  0EF1               	movlw	-15
  8844  002A9E  50E3               	movf	plusw1,w,c
  8845  002AA0  E112               	bnz	u4101
  8846  002AA2  0EF2               	movlw	-14
  8847  002AA4  50E3               	movf	plusw1,w,c
  8848  002AA6  E10F               	bnz	u4101
  8849  002AA8  0EF3               	movlw	-13
  8850  002AAA  50E3               	movf	plusw1,w,c
  8851  002AAC  E10C               	bnz	u4101
  8852  002AAE  0EF4               	movlw	-12
  8853  002AB0  50E3               	movf	plusw1,w,c
  8854  002AB2  E109               	bnz	u4101
  8855  002AB4  0EF5               	movlw	-11
  8856  002AB6  50E3               	movf	plusw1,w,c
  8857  002AB8  E106               	bnz	u4101
  8858  002ABA  0EF6               	movlw	-10
  8859  002ABC  50E3               	movf	plusw1,w,c
  8860  002ABE  E103               	bnz	u4101
  8861  002AC0  0EF7               	movlw	-9
  8862  002AC2  50E3               	movf	plusw1,w,c
  8863  002AC4  A4D8               	btfss	status,2,c
  8864  002AC6                     u4101:
  8865  002AC6  D6DA               	goto	l7045
  8866                           
  8867                           ;stkvar	_p @ sp[(-18)+16]
  8868  002AC8  0EFF               	movlw	-1
  8869  002ACA  BEE3               	btfsc	plusw1,7,c
  8870  002ACC  D007               	goto	u4110
  8871  002ACE  0EFF               	movlw	-1
  8872  002AD0  50E3               	movf	plusw1,w,c
  8873  002AD2  E103               	bnz	u4111
  8874  002AD4  0EFE               	movlw	-2
  8875  002AD6  04E3               	decf	plusw1,w,c
  8876  002AD8  B0D8               	btfsc	status,0,c
  8877  002ADA                     u4111:
  8878  002ADA  D6D0               	goto	l7045
  8879  002ADC                     u4110:
  8880                           
  8881                           ;stkvar	_w @ sp[(-18)+14]
  8882  002ADC  0EFD               	movlw	-3
  8883  002ADE  BEE3               	btfsc	plusw1,7,c
  8884  002AE0  D009               	goto	u4130
  8885  002AE2  0EFD               	movlw	-3
  8886  002AE4  50E3               	movf	plusw1,w,c
  8887  002AE6  E104               	bnz	u4120
  8888  002AE8  0EFC               	movlw	-4
  8889  002AEA  04E3               	decf	plusw1,w,c
  8890  002AEC  A0D8               	btfss	status,0,c
  8891  002AEE  D002               	goto	u4130
  8892  002AF0                     u4120:
  8893  002AF0  B228               	btfsc	_flags,1,c
  8894  002AF2  D6C4               	goto	l7045
  8895  002AF4                     u4130:
  8896                           
  8897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8898                           ;stkvar	_s @ sp[(-18)+12]
  8899  002AF4  0EFA               	movlw	-6
  8900  002AF6  006F FF8C  F03D    	movff	plusw1,btemp
  8901  002AFC  0EFB               	movlw	-5
  8902  002AFE  50E3               	movf	plusw1,w,c
  8903  002B00  103D               	iorwf	btemp,w,c
  8904  002B02  A4D8               	btfss	status,2,c
  8905  002B04  D002               	goto	u4150
  8906  002B06  A428               	btfss	_flags,2,c
  8907  002B08  D02D               	goto	l7079
  8908  002B0A                     u4150:
  8909                           
  8910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8911                           ;stkvar	_i @ sp[(-18)+10]
  8912  002B0A  50E1               	movf	fsr1l,w,c
  8913  002B0C  0FF8               	addlw	-8
  8914  002B0E  6ED9               	movwf	fsr2l,c
  8915  002B10  50E2               	movf	fsr1h,w,c
  8916  002B12  6EDA               	movwf	fsr2h,c
  8917  002B14  0EFF               	movlw	255
  8918  002B16  22DA               	addwfc	fsr2h,f,c
  8919  002B18  06DE               	decf	postinc2,f,c
  8920  002B1A  0E00               	movlw	0
  8921  002B1C  5ADD               	subwfb	postdec2,f,c
  8922                           
  8923                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8924                           ;stkvar	_s @ sp[(-18)+12]
  8925  002B1E  0EFA               	movlw	-6
  8926  002B20  006F FF8C  F03D    	movff	plusw1,btemp
  8927  002B26  0EFB               	movlw	-5
  8928  002B28  50E3               	movf	plusw1,w,c
  8929  002B2A  103D               	iorwf	btemp,w,c
  8930  002B2C  A4D8               	btfss	status,2,c
  8931  002B2E  D002               	goto	l7075
  8932  002B30  0E2B               	movlw	43
  8933  002B32  D001               	goto	L21
  8934  002B34                     l7075:
  8935  002B34  0E2D               	movlw	45
  8936  002B36                     L21:
  8937  002B36  6E47               	movwf	btemp+10,c
  8938  002B38  0E00               	movlw	0
  8939  002B3A  6E48               	movwf	btemp+11,c
  8940                           
  8941                           ;stkvar	_dtoa$3722 @ sp[(-18)+0]
  8942  002B3C  0EEE               	movlw	-18
  8943  002B3E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8944  002B44  0EEF               	movlw	-17
  8945  002B46  0060  F123  FFE3   	movff	btemp+11,plusw1
  8946                           
  8947                           ;stkvar	_dtoa$3722 @ sp[(-18)+0]
  8948                           ;stkvar	_i @ sp[(-18)+10]
  8949  002B4C  0EF8               	movlw	-8
  8950  002B4E  006F FF8C  F048    	movff	plusw1,btemp+11
  8951  002B54  5048               	movf	btemp+11,w,c
  8952  002B56  0FD9               	addlw	low _dbuf
  8953  002B58  6ED9               	movwf	fsr2l,c
  8954  002B5A  6ADA               	clrf	fsr2h,c
  8955  002B5C  0EEE               	movlw	-18
  8956  002B5E  006F FF8F FFDF     	movff	plusw1,indf2
  8957  002B64                     l7079:
  8958                           
  8959                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8960                           ;stkvar	_w @ sp[(-18)+14]
  8961  002B64  0EFC               	movlw	-4
  8962  002B66  006F FF8F FFE6     	movff	plusw1,postinc1
  8963  002B6C  006F FF8F FFE6     	movff	plusw1,postinc1
  8964                           
  8965                           ;stkvar	_i @ sp[(-20)+10]
  8966  002B72  0EF6               	movlw	-10
  8967  002B74  006F FF8C  F048    	movff	plusw1,btemp+11
  8968  002B7A  5048               	movf	btemp+11,w,c
  8969  002B7C  0FD9               	addlw	low _dbuf
  8970  002B7E  6EE6               	movwf	postinc1,c
  8971                           
  8972                           ;stkvar	_fp @ sp[(-21)+-2]
  8973  002B80  0EE9               	movlw	-23
  8974  002B82  006F FF8F FFE6     	movff	plusw1,postinc1
  8975  002B88  006F FF8F FFE6     	movff	plusw1,postinc1
  8976  002B8E  EC5D  F023         	call	_pad	;wreg free
  8977                           
  8978                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  8979  002B92  0EE4               	movlw	228
  8980  002B94  26E1               	addwf	fsr1l,f,c
  8981  002B96  0EFF               	movlw	255
  8982  002B98  22E2               	addwfc	fsr1h,f,c
  8983  002B9A  0012               	return		;funcret
  8984  002B9C                     __end_of_dtoa:
  8985                           	opt callstack 0
  8986                           
  8987 ;; *************** function _abs *****************
  8988 ;; Defined at:
  8989 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  a               2  [STACK] int 
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;		None
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  2  [STACK] int 
  8996 ;; Registers used:
  8997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9007 ;;Total ram usage:        0 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    3
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_dtoa
  9014 ;; This function uses a reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text41
  9018  005512                     __ptext41:
  9019                           	opt callstack 0
  9020  005512                     _abs:
  9021                           	opt callstack 23
  9022                           
  9023                           ;stkvar	_a @ sp[(0)+-2]
  9024                           
  9025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9026                           ;incstack = 0
  9027  005512  0EFF               	movlw	-1
  9028  005514  BEE3               	btfsc	plusw1,7,c
  9029  005516  D007               	goto	u2140
  9030  005518  0EFF               	movlw	-1
  9031  00551A  50E3               	movf	plusw1,w,c
  9032  00551C  E112               	bnz	l4899
  9033  00551E  0EFE               	movlw	-2
  9034  005520  04E3               	decf	plusw1,w,c
  9035  005522  B0D8               	btfsc	status,0,c
  9036  005524  D00E               	goto	l4899
  9037  005526                     u2140:
  9038                           
  9039                           ;stkvar	_a @ sp[(0)+-2]
  9040  005526  0EFE               	movlw	-2
  9041  005528  006F FF8C  F03D    	movff	plusw1,btemp
  9042  00552E  1E3D               	comf	btemp,f,c
  9043  005530  0EFF               	movlw	-1
  9044  005532  006F FF8C  F03E    	movff	plusw1,btemp+1
  9045  005538  1E3E               	comf	btemp+1,f,c
  9046  00553A  2A3D               	incf	btemp,f,c
  9047  00553C  B4D8               	btfsc	status,2,c
  9048  00553E  2A3E               	incf	btemp+1,f,c
  9049  005540  D008               	goto	l2457
  9050  005542                     l4899:
  9051                           
  9052                           ;stkvar	_a @ sp[(0)+-2]
  9053  005542  0EFE               	movlw	-2
  9054  005544  006F FF8C  F03D    	movff	plusw1,btemp
  9055  00554A  0EFF               	movlw	-1
  9056  00554C  006F FF8C  F03E    	movff	plusw1,btemp+1
  9057  005552                     l2457:
  9058                           
  9059                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  9060  005552  52E5               	movf	postdec1,f,c
  9061  005554  52E5               	movf	postdec1,f,c
  9062  005556  0012               	return		;funcret
  9063  005558                     __end_of_abs:
  9064                           	opt callstack 0
  9065                           
  9066 ;; *************** function ___aomod *****************
  9067 ;; Defined at:
  9068 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  dividend        8  [STACK] long long 
  9071 ;;  divisor         8  [STACK] long long 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  sign            1  [STACK] unsigned char 
  9074 ;;  counter         1  [STACK] unsigned char 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  8  [STACK] long long 
  9077 ;; Registers used:
  9078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9079 ;; Tracked objects:
  9080 ;;		On entry : 0/0
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9088 ;;Total ram usage:        0 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:    3
  9091 ;; This function calls:
  9092 ;;		Nothing
  9093 ;; This function is called by:
  9094 ;;		_dtoa
  9095 ;; This function uses a reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text42
  9099  003C58                     __ptext42:
  9100                           	opt callstack 0
  9101  003C58                     ___aomod:
  9102                           	opt callstack 0
  9103                           
  9104                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  9105  003C58  52E6               	movf	postinc1,f,c
  9106  003C5A  52E6               	movf	postinc1,f,c
  9107                           
  9108                           ;stkvar	_sign @ sp[(-2)+0]
  9109                           
  9110                           ;incstack = 0
  9111  003C5C  0EFE               	movlw	-2
  9112  003C5E  6AE3               	clrf	plusw1,c
  9113                           
  9114                           ;stkvar	_dividend @ sp[(-2)+-8]
  9115  003C60  0EFD               	movlw	-3
  9116  003C62  AEE3               	btfss	plusw1,7,c
  9117  003C64  D028               	goto	l4981
  9118                           
  9119                           ;stkvar	_dividend @ sp[(-2)+-8]
  9120                           ;stkvar	_dividend @ sp[(-2)+-8]
  9121  003C66  0EF6               	movlw	-10
  9122  003C68  6CE3               	negf	plusw1,c
  9123  003C6A  0EF7               	movlw	-9
  9124  003C6C  1EE3               	comf	plusw1,f,c
  9125  003C6E  0EF8               	movlw	-8
  9126  003C70  1EE3               	comf	plusw1,f,c
  9127  003C72  0EF9               	movlw	-7
  9128  003C74  1EE3               	comf	plusw1,f,c
  9129  003C76  0EFA               	movlw	-6
  9130  003C78  1EE3               	comf	plusw1,f,c
  9131  003C7A  0EFB               	movlw	-5
  9132  003C7C  1EE3               	comf	plusw1,f,c
  9133  003C7E  0EFC               	movlw	-4
  9134  003C80  1EE3               	comf	plusw1,f,c
  9135  003C82  0EFD               	movlw	-3
  9136  003C84  1EE3               	comf	plusw1,f,c
  9137  003C86  E314               	bnc	u2370
  9138  003C88  0EF7               	movlw	-9
  9139  003C8A  2AE3               	incf	plusw1,f,c
  9140  003C8C  E311               	bnc	u2370
  9141  003C8E  0EF8               	movlw	-8
  9142  003C90  2AE3               	incf	plusw1,f,c
  9143  003C92  E30E               	bnc	u2370
  9144  003C94  0EF9               	movlw	-7
  9145  003C96  2AE3               	incf	plusw1,f,c
  9146  003C98  E30B               	bnc	u2370
  9147  003C9A  0EFA               	movlw	-6
  9148  003C9C  2AE3               	incf	plusw1,f,c
  9149  003C9E  E308               	bnc	u2370
  9150  003CA0  0EFB               	movlw	-5
  9151  003CA2  2AE3               	incf	plusw1,f,c
  9152  003CA4  E305               	bnc	u2370
  9153  003CA6  0EFC               	movlw	-4
  9154  003CA8  2AE3               	incf	plusw1,f,c
  9155  003CAA  E302               	bnc	u2370
  9156  003CAC  0EFD               	movlw	-3
  9157  003CAE  2AE3               	incf	plusw1,f,c
  9158  003CB0                     u2370:
  9159                           
  9160                           ;stkvar	_sign @ sp[(-2)+0]
  9161  003CB0  0EFE               	movlw	-2
  9162  003CB2  6AE3               	clrf	plusw1,c
  9163  003CB4  2AE3               	incf	plusw1,f,c
  9164  003CB6                     l4981:
  9165                           
  9166                           ;stkvar	_divisor @ sp[(-2)+-16]
  9167  003CB6  0EF5               	movlw	-11
  9168  003CB8  AEE3               	btfss	plusw1,7,c
  9169  003CBA  D025               	goto	u2390
  9170                           
  9171                           ;stkvar	_divisor @ sp[(-2)+-16]
  9172                           ;stkvar	_divisor @ sp[(-2)+-16]
  9173  003CBC  0EEE               	movlw	-18
  9174  003CBE  6CE3               	negf	plusw1,c
  9175  003CC0  0EEF               	movlw	-17
  9176  003CC2  1EE3               	comf	plusw1,f,c
  9177  003CC4  0EF0               	movlw	-16
  9178  003CC6  1EE3               	comf	plusw1,f,c
  9179  003CC8  0EF1               	movlw	-15
  9180  003CCA  1EE3               	comf	plusw1,f,c
  9181  003CCC  0EF2               	movlw	-14
  9182  003CCE  1EE3               	comf	plusw1,f,c
  9183  003CD0  0EF3               	movlw	-13
  9184  003CD2  1EE3               	comf	plusw1,f,c
  9185  003CD4  0EF4               	movlw	-12
  9186  003CD6  1EE3               	comf	plusw1,f,c
  9187  003CD8  0EF5               	movlw	-11
  9188  003CDA  1EE3               	comf	plusw1,f,c
  9189  003CDC  E314               	bnc	u2390
  9190  003CDE  0EEF               	movlw	-17
  9191  003CE0  2AE3               	incf	plusw1,f,c
  9192  003CE2  E311               	bnc	u2390
  9193  003CE4  0EF0               	movlw	-16
  9194  003CE6  2AE3               	incf	plusw1,f,c
  9195  003CE8  E30E               	bnc	u2390
  9196  003CEA  0EF1               	movlw	-15
  9197  003CEC  2AE3               	incf	plusw1,f,c
  9198  003CEE  E30B               	bnc	u2390
  9199  003CF0  0EF2               	movlw	-14
  9200  003CF2  2AE3               	incf	plusw1,f,c
  9201  003CF4  E308               	bnc	u2390
  9202  003CF6  0EF3               	movlw	-13
  9203  003CF8  2AE3               	incf	plusw1,f,c
  9204  003CFA  E305               	bnc	u2390
  9205  003CFC  0EF4               	movlw	-12
  9206  003CFE  2AE3               	incf	plusw1,f,c
  9207  003D00  E302               	bnc	u2390
  9208  003D02  0EF5               	movlw	-11
  9209  003D04  2AE3               	incf	plusw1,f,c
  9210  003D06                     u2390:
  9211                           
  9212                           ;stkvar	_divisor @ sp[(-2)+-16]
  9213  003D06  0EEE               	movlw	-18
  9214  003D08  50E3               	movf	plusw1,w,c
  9215  003D0A  E116               	bnz	u2400
  9216  003D0C  0EEF               	movlw	-17
  9217  003D0E  50E3               	movf	plusw1,w,c
  9218  003D10  E113               	bnz	u2400
  9219  003D12  0EF0               	movlw	-16
  9220  003D14  50E3               	movf	plusw1,w,c
  9221  003D16  E110               	bnz	u2400
  9222  003D18  0EF1               	movlw	-15
  9223  003D1A  50E3               	movf	plusw1,w,c
  9224  003D1C  E10D               	bnz	u2400
  9225  003D1E  0EF2               	movlw	-14
  9226  003D20  50E3               	movf	plusw1,w,c
  9227  003D22  E10A               	bnz	u2400
  9228  003D24  0EF3               	movlw	-13
  9229  003D26  50E3               	movf	plusw1,w,c
  9230  003D28  E107               	bnz	u2400
  9231  003D2A  0EF4               	movlw	-12
  9232  003D2C  50E3               	movf	plusw1,w,c
  9233  003D2E  E104               	bnz	u2400
  9234  003D30  0EF5               	movlw	-11
  9235  003D32  50E3               	movf	plusw1,w,c
  9236  003D34  B4D8               	btfsc	status,2,c
  9237  003D36  D075               	goto	u2430
  9238  003D38                     u2400:
  9239                           
  9240                           ;stkvar	_counter @ sp[(-2)+1]
  9241  003D38  0EFF               	movlw	-1
  9242  003D3A  6AE3               	clrf	plusw1,c
  9243  003D3C  D012               	goto	L22
  9244  003D3E                     l4989:
  9245                           
  9246                           ;stkvar	_divisor @ sp[(-2)+-16]
  9247  003D3E  90D8               	bcf	status,0,c
  9248  003D40  0EEE               	movlw	-18
  9249  003D42  36E3               	rlcf	plusw1,f,c
  9250  003D44  0EEF               	movlw	-17
  9251  003D46  36E3               	rlcf	plusw1,f,c
  9252  003D48  0EF0               	movlw	-16
  9253  003D4A  36E3               	rlcf	plusw1,f,c
  9254  003D4C  0EF1               	movlw	-15
  9255  003D4E  36E3               	rlcf	plusw1,f,c
  9256  003D50  0EF2               	movlw	-14
  9257  003D52  36E3               	rlcf	plusw1,f,c
  9258  003D54  0EF3               	movlw	-13
  9259  003D56  36E3               	rlcf	plusw1,f,c
  9260  003D58  0EF4               	movlw	-12
  9261  003D5A  36E3               	rlcf	plusw1,f,c
  9262  003D5C  0EF5               	movlw	-11
  9263  003D5E  36E3               	rlcf	plusw1,f,c
  9264                           
  9265                           ;stkvar	_counter @ sp[(-2)+1]
  9266  003D60  0EFF               	movlw	-1
  9267  003D62                     L22:
  9268  003D62  2AE3               	incf	plusw1,f,c
  9269                           
  9270                           ;stkvar	_divisor @ sp[(-2)+-16]
  9271  003D64  0EF5               	movlw	-11
  9272  003D66  AEE3               	btfss	plusw1,7,c
  9273  003D68  D7EA               	goto	l4989
  9274  003D6A                     u2410:
  9275                           
  9276                           ;stkvar	_divisor @ sp[(-2)+-16]
  9277                           ;stkvar	_dividend @ sp[(-2)+-8]
  9278  003D6A  50E1               	movf	fsr1l,w,c
  9279  003D6C  0FF6               	addlw	-10
  9280  003D6E  6ED9               	movwf	fsr2l,c
  9281  003D70  50E2               	movf	fsr1h,w,c
  9282  003D72  6EDA               	movwf	fsr2h,c
  9283  003D74  0EFF               	movlw	255
  9284  003D76  22DA               	addwfc	fsr2h,f,c
  9285  003D78  0EEE               	movlw	-18
  9286  003D7A  50E3               	movf	plusw1,w,c
  9287  003D7C  5CDE               	subwf	postinc2,w,c
  9288  003D7E  0EEF               	movlw	-17
  9289  003D80  50E3               	movf	plusw1,w,c
  9290  003D82  58DE               	subwfb	postinc2,w,c
  9291  003D84  0EF0               	movlw	-16
  9292  003D86  50E3               	movf	plusw1,w,c
  9293  003D88  58DE               	subwfb	postinc2,w,c
  9294  003D8A  0EF1               	movlw	-15
  9295  003D8C  50E3               	movf	plusw1,w,c
  9296  003D8E  58DE               	subwfb	postinc2,w,c
  9297  003D90  0EF2               	movlw	-14
  9298  003D92  50E3               	movf	plusw1,w,c
  9299  003D94  58DE               	subwfb	postinc2,w,c
  9300  003D96  0EF3               	movlw	-13
  9301  003D98  50E3               	movf	plusw1,w,c
  9302  003D9A  58DE               	subwfb	postinc2,w,c
  9303  003D9C  0EF4               	movlw	-12
  9304  003D9E  50E3               	movf	plusw1,w,c
  9305  003DA0  58DE               	subwfb	postinc2,w,c
  9306  003DA2  0EF5               	movlw	-11
  9307  003DA4  50E3               	movf	plusw1,w,c
  9308  003DA6  58DE               	subwfb	postinc2,w,c
  9309  003DA8  A0D8               	btfss	status,0,c
  9310  003DAA  D01F               	goto	l4997
  9311                           
  9312                           ;stkvar	_divisor @ sp[(-2)+-16]
  9313                           ;stkvar	_dividend @ sp[(-2)+-8]
  9314  003DAC  50E1               	movf	fsr1l,w,c
  9315  003DAE  0FF6               	addlw	-10
  9316  003DB0  6ED9               	movwf	fsr2l,c
  9317  003DB2  50E2               	movf	fsr1h,w,c
  9318  003DB4  6EDA               	movwf	fsr2h,c
  9319  003DB6  0EFF               	movlw	255
  9320  003DB8  22DA               	addwfc	fsr2h,f,c
  9321  003DBA  0EEE               	movlw	-18
  9322  003DBC  50E3               	movf	plusw1,w,c
  9323  003DBE  5EDE               	subwf	postinc2,f,c
  9324  003DC0  0EEF               	movlw	-17
  9325  003DC2  50E3               	movf	plusw1,w,c
  9326  003DC4  5ADE               	subwfb	postinc2,f,c
  9327  003DC6  0EF0               	movlw	-16
  9328  003DC8  50E3               	movf	plusw1,w,c
  9329  003DCA  5ADE               	subwfb	postinc2,f,c
  9330  003DCC  0EF1               	movlw	-15
  9331  003DCE  50E3               	movf	plusw1,w,c
  9332  003DD0  5ADE               	subwfb	postinc2,f,c
  9333  003DD2  0EF2               	movlw	-14
  9334  003DD4  50E3               	movf	plusw1,w,c
  9335  003DD6  5ADE               	subwfb	postinc2,f,c
  9336  003DD8  0EF3               	movlw	-13
  9337  003DDA  50E3               	movf	plusw1,w,c
  9338  003DDC  5ADE               	subwfb	postinc2,f,c
  9339  003DDE  0EF4               	movlw	-12
  9340  003DE0  50E3               	movf	plusw1,w,c
  9341  003DE2  5ADE               	subwfb	postinc2,f,c
  9342  003DE4  0EF5               	movlw	-11
  9343  003DE6  50E3               	movf	plusw1,w,c
  9344  003DE8  5ADE               	subwfb	postinc2,f,c
  9345  003DEA                     l4997:
  9346                           
  9347                           ;stkvar	_divisor @ sp[(-2)+-16]
  9348  003DEA  90D8               	bcf	status,0,c
  9349  003DEC  0EF5               	movlw	-11
  9350  003DEE  32E3               	rrcf	plusw1,f,c
  9351  003DF0  0EF4               	movlw	-12
  9352  003DF2  32E3               	rrcf	plusw1,f,c
  9353  003DF4  0EF3               	movlw	-13
  9354  003DF6  32E3               	rrcf	plusw1,f,c
  9355  003DF8  0EF2               	movlw	-14
  9356  003DFA  32E3               	rrcf	plusw1,f,c
  9357  003DFC  0EF1               	movlw	-15
  9358  003DFE  32E3               	rrcf	plusw1,f,c
  9359  003E00  0EF0               	movlw	-16
  9360  003E02  32E3               	rrcf	plusw1,f,c
  9361  003E04  0EEF               	movlw	-17
  9362  003E06  32E3               	rrcf	plusw1,f,c
  9363  003E08  0EEE               	movlw	-18
  9364  003E0A  32E3               	rrcf	plusw1,f,c
  9365                           
  9366                           ;stkvar	_counter @ sp[(-2)+1]
  9367  003E0C  0EFF               	movlw	-1
  9368  003E0E  50E3               	movf	plusw1,w,c
  9369  003E10  6E3D               	movwf	btemp,c
  9370  003E12  0E01               	movlw	1
  9371  003E14  5E3D               	subwf	btemp,f,c
  9372  003E16  0EFF               	movlw	-1
  9373  003E18  0060  F0F7  FFE3   	movff	btemp,plusw1
  9374  003E1E  A4D8               	btfss	status,2,c
  9375  003E20  D7A4               	goto	u2410
  9376  003E22                     u2430:
  9377                           
  9378                           ;stkvar	_sign @ sp[(-2)+0]
  9379  003E22  0EFE               	movlw	-2
  9380  003E24  50E3               	movf	plusw1,w,c
  9381  003E26  B4D8               	btfsc	status,2,c
  9382  003E28  D025               	goto	u2450
  9383                           
  9384                           ;stkvar	_dividend @ sp[(-2)+-8]
  9385                           ;stkvar	_dividend @ sp[(-2)+-8]
  9386  003E2A  0EF6               	movlw	-10
  9387  003E2C  6CE3               	negf	plusw1,c
  9388  003E2E  0EF7               	movlw	-9
  9389  003E30  1EE3               	comf	plusw1,f,c
  9390  003E32  0EF8               	movlw	-8
  9391  003E34  1EE3               	comf	plusw1,f,c
  9392  003E36  0EF9               	movlw	-7
  9393  003E38  1EE3               	comf	plusw1,f,c
  9394  003E3A  0EFA               	movlw	-6
  9395  003E3C  1EE3               	comf	plusw1,f,c
  9396  003E3E  0EFB               	movlw	-5
  9397  003E40  1EE3               	comf	plusw1,f,c
  9398  003E42  0EFC               	movlw	-4
  9399  003E44  1EE3               	comf	plusw1,f,c
  9400  003E46  0EFD               	movlw	-3
  9401  003E48  1EE3               	comf	plusw1,f,c
  9402  003E4A  E314               	bnc	u2450
  9403  003E4C  0EF7               	movlw	-9
  9404  003E4E  2AE3               	incf	plusw1,f,c
  9405  003E50  E311               	bnc	u2450
  9406  003E52  0EF8               	movlw	-8
  9407  003E54  2AE3               	incf	plusw1,f,c
  9408  003E56  E30E               	bnc	u2450
  9409  003E58  0EF9               	movlw	-7
  9410  003E5A  2AE3               	incf	plusw1,f,c
  9411  003E5C  E30B               	bnc	u2450
  9412  003E5E  0EFA               	movlw	-6
  9413  003E60  2AE3               	incf	plusw1,f,c
  9414  003E62  E308               	bnc	u2450
  9415  003E64  0EFB               	movlw	-5
  9416  003E66  2AE3               	incf	plusw1,f,c
  9417  003E68  E305               	bnc	u2450
  9418  003E6A  0EFC               	movlw	-4
  9419  003E6C  2AE3               	incf	plusw1,f,c
  9420  003E6E  E302               	bnc	u2450
  9421  003E70  0EFD               	movlw	-3
  9422  003E72  2AE3               	incf	plusw1,f,c
  9423  003E74                     u2450:
  9424                           
  9425                           ;stkvar	_dividend @ sp[(-2)+-8]
  9426  003E74  0EF6               	movlw	246
  9427  003E76  24E1               	addwf	fsr1l,w,c
  9428  003E78  6ED9               	movwf	fsr2l,c
  9429  003E7A  0EFF               	movlw	255
  9430  003E7C  20E2               	addwfc	fsr1h,w,c
  9431  003E7E  6EDA               	movwf	fsr2h,c
  9432                           
  9433                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9434  003E80  0E08               	movlw	8
  9435  003E82  6E3D               	movwf	btemp,c
  9436  003E84  0EF6               	movlw	-10
  9437  003E86                     us246999:
  9438  003E86  006F FF7B FFE3     	movff	postinc2,plusw1
  9439  003E8C  28E8               	incf	wreg,w,c
  9440  003E8E  2E3D               	decfsz	btemp,f,c
  9441  003E90  D7FA               	bra	us246999
  9442                           
  9443                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9444  003E92  52E5               	movf	postdec1,f,c
  9445  003E94  52E5               	movf	postdec1,f,c
  9446  003E96  0012               	return		;funcret
  9447  003E98                     __end_of___aomod:
  9448                           	opt callstack 0
  9449                           
  9450 ;; *************** function ___aodiv *****************
  9451 ;; Defined at:
  9452 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  dividend        8  [STACK] long long 
  9455 ;;  divisor         8  [STACK] long long 
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;  quotient        8  [STACK] long long 
  9458 ;;  sign            1  [STACK] unsigned char 
  9459 ;;  counter         1  [STACK] unsigned char 
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  8  [STACK] long long 
  9462 ;; Registers used:
  9463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9473 ;;Total ram usage:        0 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    3
  9476 ;; This function calls:
  9477 ;;		Nothing
  9478 ;; This function is called by:
  9479 ;;		_dtoa
  9480 ;; This function uses a reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text43
  9484  00375A                     __ptext43:
  9485                           	opt callstack 0
  9486  00375A                     ___aodiv:
  9487                           	opt callstack 0
  9488                           
  9489                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9490  00375A  0E0A               	movlw	10
  9491  00375C  26E1               	addwf	fsr1l,f,c
  9492  00375E  0E00               	movlw	0
  9493  003760  22E2               	addwfc	fsr1h,f,c
  9494                           
  9495                           ;stkvar	_sign @ sp[(-10)+8]
  9496                           
  9497                           ;incstack = 0
  9498  003762  0EFE               	movlw	-2
  9499  003764  6AE3               	clrf	plusw1,c
  9500                           
  9501                           ;stkvar	_divisor @ sp[(-10)+-16]
  9502  003766  0EED               	movlw	-19
  9503  003768  AEE3               	btfss	plusw1,7,c
  9504  00376A  D028               	goto	l4937
  9505                           
  9506                           ;stkvar	_divisor @ sp[(-10)+-16]
  9507                           ;stkvar	_divisor @ sp[(-10)+-16]
  9508  00376C  0EE6               	movlw	-26
  9509  00376E  6CE3               	negf	plusw1,c
  9510  003770  0EE7               	movlw	-25
  9511  003772  1EE3               	comf	plusw1,f,c
  9512  003774  0EE8               	movlw	-24
  9513  003776  1EE3               	comf	plusw1,f,c
  9514  003778  0EE9               	movlw	-23
  9515  00377A  1EE3               	comf	plusw1,f,c
  9516  00377C  0EEA               	movlw	-22
  9517  00377E  1EE3               	comf	plusw1,f,c
  9518  003780  0EEB               	movlw	-21
  9519  003782  1EE3               	comf	plusw1,f,c
  9520  003784  0EEC               	movlw	-20
  9521  003786  1EE3               	comf	plusw1,f,c
  9522  003788  0EED               	movlw	-19
  9523  00378A  1EE3               	comf	plusw1,f,c
  9524  00378C  E314               	bnc	u2250
  9525  00378E  0EE7               	movlw	-25
  9526  003790  2AE3               	incf	plusw1,f,c
  9527  003792  E311               	bnc	u2250
  9528  003794  0EE8               	movlw	-24
  9529  003796  2AE3               	incf	plusw1,f,c
  9530  003798  E30E               	bnc	u2250
  9531  00379A  0EE9               	movlw	-23
  9532  00379C  2AE3               	incf	plusw1,f,c
  9533  00379E  E30B               	bnc	u2250
  9534  0037A0  0EEA               	movlw	-22
  9535  0037A2  2AE3               	incf	plusw1,f,c
  9536  0037A4  E308               	bnc	u2250
  9537  0037A6  0EEB               	movlw	-21
  9538  0037A8  2AE3               	incf	plusw1,f,c
  9539  0037AA  E305               	bnc	u2250
  9540  0037AC  0EEC               	movlw	-20
  9541  0037AE  2AE3               	incf	plusw1,f,c
  9542  0037B0  E302               	bnc	u2250
  9543  0037B2  0EED               	movlw	-19
  9544  0037B4  2AE3               	incf	plusw1,f,c
  9545  0037B6                     u2250:
  9546                           
  9547                           ;stkvar	_sign @ sp[(-10)+8]
  9548  0037B6  0EFE               	movlw	-2
  9549  0037B8  6AE3               	clrf	plusw1,c
  9550  0037BA  2AE3               	incf	plusw1,f,c
  9551  0037BC                     l4937:
  9552                           
  9553                           ;stkvar	_dividend @ sp[(-10)+-8]
  9554  0037BC  0EF5               	movlw	-11
  9555  0037BE  AEE3               	btfss	plusw1,7,c
  9556  0037C0  D027               	goto	l4943
  9557                           
  9558                           ;stkvar	_dividend @ sp[(-10)+-8]
  9559                           ;stkvar	_dividend @ sp[(-10)+-8]
  9560  0037C2  0EEE               	movlw	-18
  9561  0037C4  6CE3               	negf	plusw1,c
  9562  0037C6  0EEF               	movlw	-17
  9563  0037C8  1EE3               	comf	plusw1,f,c
  9564  0037CA  0EF0               	movlw	-16
  9565  0037CC  1EE3               	comf	plusw1,f,c
  9566  0037CE  0EF1               	movlw	-15
  9567  0037D0  1EE3               	comf	plusw1,f,c
  9568  0037D2  0EF2               	movlw	-14
  9569  0037D4  1EE3               	comf	plusw1,f,c
  9570  0037D6  0EF3               	movlw	-13
  9571  0037D8  1EE3               	comf	plusw1,f,c
  9572  0037DA  0EF4               	movlw	-12
  9573  0037DC  1EE3               	comf	plusw1,f,c
  9574  0037DE  0EF5               	movlw	-11
  9575  0037E0  1EE3               	comf	plusw1,f,c
  9576  0037E2  E314               	bnc	u2270
  9577  0037E4  0EEF               	movlw	-17
  9578  0037E6  2AE3               	incf	plusw1,f,c
  9579  0037E8  E311               	bnc	u2270
  9580  0037EA  0EF0               	movlw	-16
  9581  0037EC  2AE3               	incf	plusw1,f,c
  9582  0037EE  E30E               	bnc	u2270
  9583  0037F0  0EF1               	movlw	-15
  9584  0037F2  2AE3               	incf	plusw1,f,c
  9585  0037F4  E30B               	bnc	u2270
  9586  0037F6  0EF2               	movlw	-14
  9587  0037F8  2AE3               	incf	plusw1,f,c
  9588  0037FA  E308               	bnc	u2270
  9589  0037FC  0EF3               	movlw	-13
  9590  0037FE  2AE3               	incf	plusw1,f,c
  9591  003800  E305               	bnc	u2270
  9592  003802  0EF4               	movlw	-12
  9593  003804  2AE3               	incf	plusw1,f,c
  9594  003806  E302               	bnc	u2270
  9595  003808  0EF5               	movlw	-11
  9596  00380A  2AE3               	incf	plusw1,f,c
  9597  00380C                     u2270:
  9598                           
  9599                           ;stkvar	_sign @ sp[(-10)+8]
  9600  00380C  0EFE               	movlw	-2
  9601  00380E  70E3               	btg	plusw1,0,c
  9602  003810                     l4943:
  9603                           
  9604                           ;stkvar	_quotient @ sp[(-10)+0]
  9605  003810  0E07               	movlw	7
  9606  003812  6E3D               	movwf	btemp,c
  9607  003814  0EF6               	movlw	-10
  9608  003816                     u2281:
  9609  003816  6AE3               	clrf	plusw1,c
  9610  003818  2AE8               	incf	wreg,f,c
  9611  00381A  063D               	decf	btemp,f,c
  9612  00381C  E2FC               	bc	u2281
  9613                           
  9614                           ;stkvar	_divisor @ sp[(-10)+-16]
  9615  00381E  0EE6               	movlw	-26
  9616  003820  50E3               	movf	plusw1,w,c
  9617  003822  E116               	bnz	u2290
  9618  003824  0EE7               	movlw	-25
  9619  003826  50E3               	movf	plusw1,w,c
  9620  003828  E113               	bnz	u2290
  9621  00382A  0EE8               	movlw	-24
  9622  00382C  50E3               	movf	plusw1,w,c
  9623  00382E  E110               	bnz	u2290
  9624  003830  0EE9               	movlw	-23
  9625  003832  50E3               	movf	plusw1,w,c
  9626  003834  E10D               	bnz	u2290
  9627  003836  0EEA               	movlw	-22
  9628  003838  50E3               	movf	plusw1,w,c
  9629  00383A  E10A               	bnz	u2290
  9630  00383C  0EEB               	movlw	-21
  9631  00383E  50E3               	movf	plusw1,w,c
  9632  003840  E107               	bnz	u2290
  9633  003842  0EEC               	movlw	-20
  9634  003844  50E3               	movf	plusw1,w,c
  9635  003846  E104               	bnz	u2290
  9636  003848  0EED               	movlw	-19
  9637  00384A  50E3               	movf	plusw1,w,c
  9638  00384C  B4D8               	btfsc	status,2,c
  9639  00384E  D088               	goto	u2320
  9640  003850                     u2290:
  9641                           
  9642                           ;stkvar	_counter @ sp[(-10)+9]
  9643  003850  0EFF               	movlw	-1
  9644  003852  6AE3               	clrf	plusw1,c
  9645  003854  D012               	goto	L23
  9646  003856                     l4949:
  9647                           
  9648                           ;stkvar	_divisor @ sp[(-10)+-16]
  9649  003856  90D8               	bcf	status,0,c
  9650  003858  0EE6               	movlw	-26
  9651  00385A  36E3               	rlcf	plusw1,f,c
  9652  00385C  0EE7               	movlw	-25
  9653  00385E  36E3               	rlcf	plusw1,f,c
  9654  003860  0EE8               	movlw	-24
  9655  003862  36E3               	rlcf	plusw1,f,c
  9656  003864  0EE9               	movlw	-23
  9657  003866  36E3               	rlcf	plusw1,f,c
  9658  003868  0EEA               	movlw	-22
  9659  00386A  36E3               	rlcf	plusw1,f,c
  9660  00386C  0EEB               	movlw	-21
  9661  00386E  36E3               	rlcf	plusw1,f,c
  9662  003870  0EEC               	movlw	-20
  9663  003872  36E3               	rlcf	plusw1,f,c
  9664  003874  0EED               	movlw	-19
  9665  003876  36E3               	rlcf	plusw1,f,c
  9666                           
  9667                           ;stkvar	_counter @ sp[(-10)+9]
  9668  003878  0EFF               	movlw	-1
  9669  00387A                     L23:
  9670  00387A  2AE3               	incf	plusw1,f,c
  9671                           
  9672                           ;stkvar	_divisor @ sp[(-10)+-16]
  9673  00387C  0EED               	movlw	-19
  9674  00387E  AEE3               	btfss	plusw1,7,c
  9675  003880  D7EA               	goto	l4949
  9676  003882                     u2300:
  9677                           
  9678                           ;stkvar	_quotient @ sp[(-10)+0]
  9679  003882  90D8               	bcf	status,0,c
  9680  003884  0EF6               	movlw	-10
  9681  003886  36E3               	rlcf	plusw1,f,c
  9682  003888  0EF7               	movlw	-9
  9683  00388A  36E3               	rlcf	plusw1,f,c
  9684  00388C  0EF8               	movlw	-8
  9685  00388E  36E3               	rlcf	plusw1,f,c
  9686  003890  0EF9               	movlw	-7
  9687  003892  36E3               	rlcf	plusw1,f,c
  9688  003894  0EFA               	movlw	-6
  9689  003896  36E3               	rlcf	plusw1,f,c
  9690  003898  0EFB               	movlw	-5
  9691  00389A  36E3               	rlcf	plusw1,f,c
  9692  00389C  0EFC               	movlw	-4
  9693  00389E  36E3               	rlcf	plusw1,f,c
  9694  0038A0  0EFD               	movlw	-3
  9695  0038A2  36E3               	rlcf	plusw1,f,c
  9696                           
  9697                           ;stkvar	_divisor @ sp[(-10)+-16]
  9698                           ;stkvar	_dividend @ sp[(-10)+-8]
  9699  0038A4  50E1               	movf	fsr1l,w,c
  9700  0038A6  0FEE               	addlw	-18
  9701  0038A8  6ED9               	movwf	fsr2l,c
  9702  0038AA  50E2               	movf	fsr1h,w,c
  9703  0038AC  6EDA               	movwf	fsr2h,c
  9704  0038AE  0EFF               	movlw	255
  9705  0038B0  22DA               	addwfc	fsr2h,f,c
  9706  0038B2  0EE6               	movlw	-26
  9707  0038B4  50E3               	movf	plusw1,w,c
  9708  0038B6  5CDE               	subwf	postinc2,w,c
  9709  0038B8  0EE7               	movlw	-25
  9710  0038BA  50E3               	movf	plusw1,w,c
  9711  0038BC  58DE               	subwfb	postinc2,w,c
  9712  0038BE  0EE8               	movlw	-24
  9713  0038C0  50E3               	movf	plusw1,w,c
  9714  0038C2  58DE               	subwfb	postinc2,w,c
  9715  0038C4  0EE9               	movlw	-23
  9716  0038C6  50E3               	movf	plusw1,w,c
  9717  0038C8  58DE               	subwfb	postinc2,w,c
  9718  0038CA  0EEA               	movlw	-22
  9719  0038CC  50E3               	movf	plusw1,w,c
  9720  0038CE  58DE               	subwfb	postinc2,w,c
  9721  0038D0  0EEB               	movlw	-21
  9722  0038D2  50E3               	movf	plusw1,w,c
  9723  0038D4  58DE               	subwfb	postinc2,w,c
  9724  0038D6  0EEC               	movlw	-20
  9725  0038D8  50E3               	movf	plusw1,w,c
  9726  0038DA  58DE               	subwfb	postinc2,w,c
  9727  0038DC  0EED               	movlw	-19
  9728  0038DE  50E3               	movf	plusw1,w,c
  9729  0038E0  58DE               	subwfb	postinc2,w,c
  9730  0038E2  A0D8               	btfss	status,0,c
  9731  0038E4  D021               	goto	l4961
  9732                           
  9733                           ;stkvar	_divisor @ sp[(-10)+-16]
  9734                           ;stkvar	_dividend @ sp[(-10)+-8]
  9735  0038E6  50E1               	movf	fsr1l,w,c
  9736  0038E8  0FEE               	addlw	-18
  9737  0038EA  6ED9               	movwf	fsr2l,c
  9738  0038EC  50E2               	movf	fsr1h,w,c
  9739  0038EE  6EDA               	movwf	fsr2h,c
  9740  0038F0  0EFF               	movlw	255
  9741  0038F2  22DA               	addwfc	fsr2h,f,c
  9742  0038F4  0EE6               	movlw	-26
  9743  0038F6  50E3               	movf	plusw1,w,c
  9744  0038F8  5EDE               	subwf	postinc2,f,c
  9745  0038FA  0EE7               	movlw	-25
  9746  0038FC  50E3               	movf	plusw1,w,c
  9747  0038FE  5ADE               	subwfb	postinc2,f,c
  9748  003900  0EE8               	movlw	-24
  9749  003902  50E3               	movf	plusw1,w,c
  9750  003904  5ADE               	subwfb	postinc2,f,c
  9751  003906  0EE9               	movlw	-23
  9752  003908  50E3               	movf	plusw1,w,c
  9753  00390A  5ADE               	subwfb	postinc2,f,c
  9754  00390C  0EEA               	movlw	-22
  9755  00390E  50E3               	movf	plusw1,w,c
  9756  003910  5ADE               	subwfb	postinc2,f,c
  9757  003912  0EEB               	movlw	-21
  9758  003914  50E3               	movf	plusw1,w,c
  9759  003916  5ADE               	subwfb	postinc2,f,c
  9760  003918  0EEC               	movlw	-20
  9761  00391A  50E3               	movf	plusw1,w,c
  9762  00391C  5ADE               	subwfb	postinc2,f,c
  9763  00391E  0EED               	movlw	-19
  9764  003920  50E3               	movf	plusw1,w,c
  9765  003922  5ADE               	subwfb	postinc2,f,c
  9766                           
  9767                           ;stkvar	_quotient @ sp[(-10)+0]
  9768  003924  0EF6               	movlw	-10
  9769  003926  80E3               	bsf	plusw1,0,c
  9770  003928                     l4961:
  9771                           
  9772                           ;stkvar	_divisor @ sp[(-10)+-16]
  9773  003928  90D8               	bcf	status,0,c
  9774  00392A  0EED               	movlw	-19
  9775  00392C  32E3               	rrcf	plusw1,f,c
  9776  00392E  0EEC               	movlw	-20
  9777  003930  32E3               	rrcf	plusw1,f,c
  9778  003932  0EEB               	movlw	-21
  9779  003934  32E3               	rrcf	plusw1,f,c
  9780  003936  0EEA               	movlw	-22
  9781  003938  32E3               	rrcf	plusw1,f,c
  9782  00393A  0EE9               	movlw	-23
  9783  00393C  32E3               	rrcf	plusw1,f,c
  9784  00393E  0EE8               	movlw	-24
  9785  003940  32E3               	rrcf	plusw1,f,c
  9786  003942  0EE7               	movlw	-25
  9787  003944  32E3               	rrcf	plusw1,f,c
  9788  003946  0EE6               	movlw	-26
  9789  003948  32E3               	rrcf	plusw1,f,c
  9790                           
  9791                           ;stkvar	_counter @ sp[(-10)+9]
  9792  00394A  0EFF               	movlw	-1
  9793  00394C  50E3               	movf	plusw1,w,c
  9794  00394E  6E3D               	movwf	btemp,c
  9795  003950  0E01               	movlw	1
  9796  003952  5E3D               	subwf	btemp,f,c
  9797  003954  0EFF               	movlw	-1
  9798  003956  0060  F0F7  FFE3   	movff	btemp,plusw1
  9799  00395C  A4D8               	btfss	status,2,c
  9800  00395E  D791               	goto	u2300
  9801  003960                     u2320:
  9802                           
  9803                           ;stkvar	_sign @ sp[(-10)+8]
  9804  003960  0EFE               	movlw	-2
  9805  003962  50E3               	movf	plusw1,w,c
  9806  003964  B4D8               	btfsc	status,2,c
  9807  003966  D025               	goto	u2340
  9808                           
  9809                           ;stkvar	_quotient @ sp[(-10)+0]
  9810                           ;stkvar	_quotient @ sp[(-10)+0]
  9811  003968  0EF6               	movlw	-10
  9812  00396A  6CE3               	negf	plusw1,c
  9813  00396C  0EF7               	movlw	-9
  9814  00396E  1EE3               	comf	plusw1,f,c
  9815  003970  0EF8               	movlw	-8
  9816  003972  1EE3               	comf	plusw1,f,c
  9817  003974  0EF9               	movlw	-7
  9818  003976  1EE3               	comf	plusw1,f,c
  9819  003978  0EFA               	movlw	-6
  9820  00397A  1EE3               	comf	plusw1,f,c
  9821  00397C  0EFB               	movlw	-5
  9822  00397E  1EE3               	comf	plusw1,f,c
  9823  003980  0EFC               	movlw	-4
  9824  003982  1EE3               	comf	plusw1,f,c
  9825  003984  0EFD               	movlw	-3
  9826  003986  1EE3               	comf	plusw1,f,c
  9827  003988  E314               	bnc	u2340
  9828  00398A  0EF7               	movlw	-9
  9829  00398C  2AE3               	incf	plusw1,f,c
  9830  00398E  E311               	bnc	u2340
  9831  003990  0EF8               	movlw	-8
  9832  003992  2AE3               	incf	plusw1,f,c
  9833  003994  E30E               	bnc	u2340
  9834  003996  0EF9               	movlw	-7
  9835  003998  2AE3               	incf	plusw1,f,c
  9836  00399A  E30B               	bnc	u2340
  9837  00399C  0EFA               	movlw	-6
  9838  00399E  2AE3               	incf	plusw1,f,c
  9839  0039A0  E308               	bnc	u2340
  9840  0039A2  0EFB               	movlw	-5
  9841  0039A4  2AE3               	incf	plusw1,f,c
  9842  0039A6  E305               	bnc	u2340
  9843  0039A8  0EFC               	movlw	-4
  9844  0039AA  2AE3               	incf	plusw1,f,c
  9845  0039AC  E302               	bnc	u2340
  9846  0039AE  0EFD               	movlw	-3
  9847  0039B0  2AE3               	incf	plusw1,f,c
  9848  0039B2                     u2340:
  9849                           
  9850                           ;stkvar	_quotient @ sp[(-10)+0]
  9851  0039B2  0EF6               	movlw	246
  9852  0039B4  24E1               	addwf	fsr1l,w,c
  9853  0039B6  6ED9               	movwf	fsr2l,c
  9854  0039B8  0EFF               	movlw	255
  9855  0039BA  20E2               	addwfc	fsr1h,w,c
  9856  0039BC  6EDA               	movwf	fsr2h,c
  9857                           
  9858                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9859  0039BE  0E08               	movlw	8
  9860  0039C0  6E3D               	movwf	btemp,c
  9861  0039C2  0EEE               	movlw	-18
  9862  0039C4                     us235999:
  9863  0039C4  006F FF7B FFE3     	movff	postinc2,plusw1
  9864  0039CA  28E8               	incf	wreg,w,c
  9865  0039CC  2E3D               	decfsz	btemp,f,c
  9866  0039CE  D7FA               	bra	us235999
  9867                           
  9868                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9869  0039D0  0EF6               	movlw	246
  9870  0039D2  26E1               	addwf	fsr1l,f,c
  9871  0039D4  0EFF               	movlw	255
  9872  0039D6  22E2               	addwfc	fsr1h,f,c
  9873  0039D8  0012               	return		;funcret
  9874  0039DA                     __end_of___aodiv:
  9875                           	opt callstack 0
  9876                           
  9877 ;; *************** function _ctoa *****************
  9878 ;; Defined at:
  9879 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9882 ;;		 -> f(5), NULL(0), 
  9883 ;;  c               1  [STACK] unsigned char 
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;  w               2  [STACK] int 
  9886 ;;  l               2    0        int 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  2  [STACK] int 
  9889 ;; Registers used:
  9890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/1
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9900 ;;Total ram usage:        0 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    8
  9903 ;; This function calls:
  9904 ;;		_pad
  9905 ;; This function is called by:
  9906 ;;		_vfpfcnvrt
  9907 ;; This function uses a reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text44
  9911  004F36                     __ptext44:
  9912                           	opt callstack 0
  9913  004F36                     _ctoa:
  9914                           	opt callstack 0
  9915                           
  9916                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9917  004F36  52E6               	movf	postinc1,f,c
  9918  004F38  52E6               	movf	postinc1,f,c
  9919                           
  9920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9921                           
  9922                           ;incstack = 0
  9923  004F3A  5024               	movf	_width,w,c
  9924  004F3C  1025               	iorwf	_width+1,w,c
  9925  004F3E  A4D8               	btfss	status,2,c
  9926  004F40  D009               	goto	l7007
  9927                           
  9928                           ;stkvar	_w @ sp[(-2)+0]
  9929  004F42  0EFE               	movlw	-2
  9930  004F44  0060  F093  FFE3   	movff	_width,plusw1
  9931  004F4A  0EFF               	movlw	-1
  9932  004F4C  0060  F097  FFE3   	movff	_width+1,plusw1
  9933  004F52  D016               	goto	l7009
  9934  004F54                     l7007:
  9935  004F54  0EFF               	movlw	255
  9936  004F56  6E47               	movwf	btemp+10,c
  9937  004F58  0EFF               	movlw	255
  9938  004F5A  6E48               	movwf	btemp+11,c
  9939  004F5C  0060  F090  F045   	movff	_width,btemp+8
  9940  004F62  0060  F094  F046   	movff	_width+1,btemp+9
  9941  004F68  5047               	movf	btemp+10,w,c
  9942  004F6A  2645               	addwf	btemp+8,f,c
  9943  004F6C  5048               	movf	btemp+11,w,c
  9944  004F6E  2246               	addwfc	btemp+9,f,c
  9945                           
  9946                           ;stkvar	_w @ sp[(-2)+0]
  9947  004F70  0EFE               	movlw	-2
  9948  004F72  0060  F117  FFE3   	movff	btemp+8,plusw1
  9949  004F78  0EFF               	movlw	-1
  9950  004F7A  0060  F11B  FFE3   	movff	btemp+9,plusw1
  9951  004F80                     l7009:
  9952                           
  9953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9954                           ;stkvar	_c @ sp[(-2)+-3]
  9955  004F80  0EFB               	movlw	-5
  9956  004F82  006F FF8C  F0D9    	movff	plusw1,_dbuf
  9957                           
  9958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9959  004F88  0100               	movlb	0	; () banked
  9960  004F8A  6BDA               	clrf	(_dbuf+1)& (0+255),b
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9964                           ;stkvar	_w @ sp[(-2)+0]
  9965  004F8C  0EFE               	movlw	-2
  9966  004F8E  006F FF8F FFE6     	movff	plusw1,postinc1
  9967  004F94  006F FF8F FFE6     	movff	plusw1,postinc1
  9968  004F9A  0ED9               	movlw	_dbuf& (0+255)
  9969  004F9C  6EE6               	movwf	postinc1,c
  9970                           
  9971                           ;stkvar	_fp @ sp[(-5)+-2]
  9972  004F9E  0EF9               	movlw	-7
  9973  004FA0  006F FF8F FFE6     	movff	plusw1,postinc1
  9974  004FA6  006F FF8F FFE6     	movff	plusw1,postinc1
  9975  004FAC  EC5D  F023         	call	_pad	;wreg free
  9976                           
  9977                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  9978  004FB0  0EFB               	movlw	251
  9979  004FB2  26E1               	addwf	fsr1l,f,c
  9980  004FB4  0EFF               	movlw	255
  9981  004FB6  22E2               	addwfc	fsr1h,f,c
  9982  004FB8  0012               	return		;funcret
  9983  004FBA                     __end_of_ctoa:
  9984                           	opt callstack 0
  9985                           
  9986 ;; *************** function _pad *****************
  9987 ;; Defined at:
  9988 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9991 ;;		 -> f(5), NULL(0), 
  9992 ;;  buf             1  [STACK] PTR unsigned char 
  9993 ;;		 -> dbuf(32), 
  9994 ;;  p               2  [STACK] int 
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;  w               2  [STACK] int 
  9997 ;;  i               2  [STACK] int 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  2  [STACK] int 
 10000 ;; Registers used:
 10001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10011 ;;Total ram usage:        0 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    7
 10014 ;; This function calls:
 10015 ;;		_fputc
 10016 ;;		_fputs
 10017 ;;		_strlen
 10018 ;; This function is called by:
 10019 ;;		_ctoa
 10020 ;;		_dtoa
 10021 ;;		_xtoa
 10022 ;; This function uses a reentrant model
 10023 ;;
 10024                           
 10025                           	psect	text45
 10026  0046BA                     __ptext45:
 10027                           	opt callstack 0
 10028  0046BA                     _pad:
 10029                           	opt callstack 0
 10030                           
 10031                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10032  0046BA  52E6               	movf	postinc1,f,c
 10033  0046BC  52E6               	movf	postinc1,f,c
 10034  0046BE  52E6               	movf	postinc1,f,c
 10035  0046C0  52E6               	movf	postinc1,f,c
 10036                           
 10037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 10038                           
 10039                           ;incstack = 0
 10040  0046C2  A028               	btfss	_flags,0,c
 10041  0046C4  D00C               	goto	l6985
 10042                           
 10043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 10044                           ;stkvar	_fp @ sp[(-4)+-2]
 10045  0046C6  0EFA               	movlw	-6
 10046  0046C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10047  0046CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10048                           
 10049                           ;stkvar	_buf @ sp[(-6)+-3]
 10050  0046D4  0EF7               	movlw	-9
 10051  0046D6  50E3               	movf	plusw1,w,c
 10052  0046D8  6EE6               	movwf	postinc1,c
 10053  0046DA  EC1F  F028         	call	_fputs	;wreg free
 10054  0046DE                     l6985:
 10055                           
 10056                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 10057                           ;stkvar	_p @ sp[(-4)+-5]
 10058  0046DE  0EF8               	movlw	-8
 10059  0046E0  BEE3               	btfsc	plusw1,7,c
 10060  0046E2  D011               	goto	l6989
 10061                           
 10062                           ;stkvar	_p @ sp[(-4)+-5]
 10063                           ;stkvar	_w @ sp[(-4)+0]
 10064  0046E4  0EF7               	movlw	-9
 10065  0046E6  006F FF8C  F03D    	movff	plusw1,btemp
 10066  0046EC  0EFC               	movlw	-4
 10067  0046EE  0060  F0F7  FFE3   	movff	btemp,plusw1
 10068  0046F4  0EF8               	movlw	-8
 10069  0046F6  006F FF8C  F03D    	movff	plusw1,btemp
 10070  0046FC  0EFD               	movlw	-3
 10071  0046FE  0060  F0F7  FFE3   	movff	btemp,plusw1
 10072  004704  D004               	goto	l1644
 10073  004706                     l6989:
 10074                           
 10075                           ;stkvar	_w @ sp[(-4)+0]
 10076  004706  0EFC               	movlw	-4
 10077  004708  6AE3               	clrf	plusw1,c
 10078  00470A  0EFD               	movlw	-3
 10079  00470C  6AE3               	clrf	plusw1,c
 10080  00470E                     l1644:
 10081                           
 10082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10083                           ;stkvar	_i @ sp[(-4)+2]
 10084  00470E  0EFE               	movlw	-2
 10085  004710  6AE3               	clrf	plusw1,c
 10086  004712  0EFF               	movlw	-1
 10087  004714  6AE3               	clrf	plusw1,c
 10088                           
 10089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10090  004716  D01E               	goto	l6995
 10091  004718                     l6991:
 10092                           
 10093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 10094                           ;stkvar	_fp @ sp[(-4)+-2]
 10095  004718  0EFA               	movlw	-6
 10096  00471A  006F FF8F FFE6     	movff	plusw1,postinc1
 10097  004720  006F FF8F FFE6     	movff	plusw1,postinc1
 10098  004726  0E20               	movlw	32
 10099  004728  6EE6               	movwf	postinc1,c
 10100  00472A  0E00               	movlw	0
 10101  00472C  6EE6               	movwf	postinc1,c
 10102  00472E  ECD7  F022         	call	_fputc	;wreg free
 10103                           
 10104                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10105                           ;stkvar	_i @ sp[(-4)+2]
 10106  004732  0EFE               	movlw	-2
 10107  004734  50E3               	movf	plusw1,w,c
 10108  004736  0F01               	addlw	1
 10109  004738  6E3D               	movwf	btemp,c
 10110  00473A  0EFE               	movlw	-2
 10111  00473C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10112  004742  6A3D               	clrf	btemp,c
 10113  004744  0EFF               	movlw	-1
 10114  004746  50E3               	movf	plusw1,w,c
 10115  004748  203D               	addwfc	btemp,w,c
 10116  00474A  6E3D               	movwf	btemp,c
 10117  00474C  0EFF               	movlw	-1
 10118  00474E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10119  004754                     l6995:
 10120                           
 10121                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10122                           ;stkvar	_w @ sp[(-4)+0]
 10123                           ;stkvar	_i @ sp[(-4)+2]
 10124  004754  50E1               	movf	fsr1l,w,c
 10125  004756  0FFE               	addlw	-2
 10126  004758  6ED9               	movwf	fsr2l,c
 10127  00475A  50E2               	movf	fsr1h,w,c
 10128  00475C  6EDA               	movwf	fsr2h,c
 10129  00475E  0EFF               	movlw	255
 10130  004760  22DA               	addwfc	fsr2h,f,c
 10131  004762  0EFC               	movlw	-4
 10132  004764  50E3               	movf	plusw1,w,c
 10133  004766  5CDE               	subwf	postinc2,w,c
 10134  004768  50DE               	movf	postinc2,w,c
 10135  00476A  0A80               	xorlw	128
 10136  00476C  6E3D               	movwf	btemp,c
 10137  00476E  0EFD               	movlw	-3
 10138  004770  50E3               	movf	plusw1,w,c
 10139  004772  0A80               	xorlw	128
 10140  004774  583D               	subwfb	btemp,w,c
 10141  004776  A0D8               	btfss	status,0,c
 10142  004778  D7CF               	goto	l6991
 10143                           
 10144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 10145  00477A  B028               	btfsc	_flags,0,c
 10146  00477C  D00C               	goto	l6999
 10147                           
 10148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 10149                           ;stkvar	_fp @ sp[(-4)+-2]
 10150  00477E  0EFA               	movlw	-6
 10151  004780  006F FF8F FFE6     	movff	plusw1,postinc1
 10152  004786  006F FF8F FFE6     	movff	plusw1,postinc1
 10153                           
 10154                           ;stkvar	_buf @ sp[(-6)+-3]
 10155  00478C  0EF7               	movlw	-9
 10156  00478E  50E3               	movf	plusw1,w,c
 10157  004790  6EE6               	movwf	postinc1,c
 10158  004792  EC1F  F028         	call	_fputs	;wreg free
 10159  004796                     l6999:
 10160                           
 10161                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 10162                           ;stkvar	_w @ sp[(-4)+0]
 10163                           ;stkvar	_buf @ sp[(-4)+-3]
 10164  004796  0EF9               	movlw	-7
 10165  004798  006F FF8C  F048    	movff	plusw1,btemp+11
 10166  00479E  0060  F123  FFE6   	movff	btemp+11,postinc1
 10167  0047A4  0E00               	movlw	0
 10168  0047A6  6EE6               	movwf	postinc1,c
 10169  0047A8  ECDD  F027         	call	_strlen	;wreg free
 10170  0047AC  0EFC               	movlw	-4
 10171  0047AE  50E3               	movf	plusw1,w,c
 10172  0047B0  263D               	addwf	btemp,f,c
 10173  0047B2  0EFD               	movlw	-3
 10174  0047B4  50E3               	movf	plusw1,w,c
 10175  0047B6  223E               	addwfc	btemp+1,f,c
 10176                           
 10177                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize =
      +                           5, vargsize = 0
 10178  0047B8  0EF7               	movlw	247
 10179  0047BA  26E1               	addwf	fsr1l,f,c
 10180  0047BC  0EFF               	movlw	255
 10181  0047BE  22E2               	addwfc	fsr1h,f,c
 10182  0047C0  0012               	return		;funcret
 10183  0047C2                     __end_of_pad:
 10184                           	opt callstack 0
 10185                           
 10186 ;; *************** function _strlen *****************
 10187 ;; Defined at:
 10188 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 10189 ;; Parameters:    Size  Location     Type
 10190 ;;  s               2  [STACK] PTR const unsigned char 
 10191 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 10192 ;;		 -> V(80), 
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;  a               2  [STACK] PTR const unsigned char 
 10195 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 10196 ;;		 -> V(80), 
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  2  [STACK] unsigned int 
 10199 ;; Registers used:
 10200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/0
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10210 ;;Total ram usage:        0 bytes
 10211 ;; Hardware stack levels used:    1
 10212 ;; Hardware stack levels required when called:    3
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_eaDogM_WriteString
 10217 ;;		_pad
 10218 ;;		_stoa
 10219 ;; This function uses a reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text46
 10223  004FBA                     __ptext46:
 10224                           	opt callstack 0
 10225  004FBA                     _strlen:
 10226                           	opt callstack 0
 10227                           
 10228                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10229  004FBA  52E6               	movf	postinc1,f,c
 10230  004FBC  52E6               	movf	postinc1,f,c
 10231                           
 10232                           ;stkvar	_s @ sp[(-2)+-2]
 10233                           
 10234                           ;incstack = 0
 10235  004FBE  0EFC               	movlw	-4
 10236  004FC0  006F FF8C  F047    	movff	plusw1,btemp+10
 10237  004FC6  0EFD               	movlw	-3
 10238  004FC8  006F FF8C  F048    	movff	plusw1,btemp+11
 10239                           
 10240                           ;stkvar	_a @ sp[(-2)+0]
 10241  004FCE  0EFF               	movlw	-1
 10242  004FD0  0060  F123  FFE3   	movff	btemp+11,plusw1
 10243  004FD6  0EFE               	movlw	-2
 10244  004FD8  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10245  004FDE  D011               	goto	l4855
 10246  004FE0                     l4853:
 10247                           
 10248                           ;stkvar	_s @ sp[(-2)+-2]
 10249  004FE0  0EFC               	movlw	-4
 10250  004FE2  50E3               	movf	plusw1,w,c
 10251  004FE4  0F01               	addlw	1
 10252  004FE6  6E3D               	movwf	btemp,c
 10253  004FE8  0EFC               	movlw	-4
 10254  004FEA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10255  004FF0  6A3D               	clrf	btemp,c
 10256  004FF2  0EFD               	movlw	-3
 10257  004FF4  50E3               	movf	plusw1,w,c
 10258  004FF6  203D               	addwfc	btemp,w,c
 10259  004FF8  6E3D               	movwf	btemp,c
 10260  004FFA  0EFD               	movlw	-3
 10261  004FFC  0060  F0F7  FFE3   	movff	btemp,plusw1
 10262  005002                     l4855:
 10263                           
 10264                           ;stkvar	_s @ sp[(-2)+-2]
 10265  005002  0EFC               	movlw	-4
 10266  005004  006F FF8F FFD9     	movff	plusw1,fsr2l
 10267  00500A  0EFD               	movlw	-3
 10268  00500C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10269  005012  50DF               	movf	indf2,w,c
 10270  005014  A4D8               	btfss	status,2,c
 10271  005016  D7E4               	goto	l4853
 10272                           
 10273                           ;stkvar	_a @ sp[(-2)+0]
 10274                           ;stkvar	_s @ sp[(-2)+-2]
 10275  005018  0EFC               	movlw	-4
 10276  00501A  006F FF8C  F03D    	movff	plusw1,btemp
 10277  005020  0EFD               	movlw	-3
 10278  005022  006F FF8C  F03E    	movff	plusw1,btemp+1
 10279  005028  0EFE               	movlw	-2
 10280  00502A  50E3               	movf	plusw1,w,c
 10281  00502C  5E3D               	subwf	btemp,f,c
 10282  00502E  0EFF               	movlw	-1
 10283  005030  50E3               	movf	plusw1,w,c
 10284  005032  5A3E               	subwfb	btemp+1,f,c
 10285                           
 10286                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10287  005034  52E5               	movf	postdec1,f,c
 10288  005036  52E5               	movf	postdec1,f,c
 10289  005038  52E5               	movf	postdec1,f,c
 10290  00503A  52E5               	movf	postdec1,f,c
 10291  00503C  0012               	return		;funcret
 10292  00503E                     __end_of_strlen:
 10293                           	opt callstack 0
 10294                           
 10295 ;; *************** function _fputs *****************
 10296 ;; Defined at:
 10297 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;  s               1  [STACK] PTR const unsigned char 
 10300 ;;		 -> dbuf(32), 
 10301 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10302 ;;		 -> f(5), NULL(0), 
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;  i               2  [STACK] int 
 10305 ;;  c               1  [STACK] unsigned char 
 10306 ;; Return value:  Size  Location     Type
 10307 ;;                  2  [STACK] int 
 10308 ;; Registers used:
 10309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10310 ;; Tracked objects:
 10311 ;;		On entry : 0/0
 10312 ;;		On exit  : 0/0
 10313 ;;		Unchanged: 0/0
 10314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10319 ;;Total ram usage:        0 bytes
 10320 ;; Hardware stack levels used:    1
 10321 ;; Hardware stack levels required when called:    6
 10322 ;; This function calls:
 10323 ;;		_fputc
 10324 ;; This function is called by:
 10325 ;;		_pad
 10326 ;; This function uses a reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text47
 10330  00503E                     __ptext47:
 10331                           	opt callstack 0
 10332  00503E                     _fputs:
 10333                           	opt callstack 0
 10334                           
 10335                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10336  00503E  52E6               	movf	postinc1,f,c
 10337  005040  52E6               	movf	postinc1,f,c
 10338  005042  52E6               	movf	postinc1,f,c
 10339                           
 10340                           ;stkvar	_i @ sp[(-3)+0]
 10341                           
 10342                           ;incstack = 0
 10343  005044  0EFD               	movlw	-3
 10344  005046  6AE3               	clrf	plusw1,c
 10345  005048  0EFE               	movlw	-2
 10346  00504A  6AE3               	clrf	plusw1,c
 10347  00504C  D01F               	goto	l6979
 10348  00504E                     l6975:
 10349                           
 10350                           ;stkvar	_fp @ sp[(-3)+-3]
 10351  00504E  0EFA               	movlw	-6
 10352  005050  006F FF8F FFE6     	movff	plusw1,postinc1
 10353  005056  006F FF8F FFE6     	movff	plusw1,postinc1
 10354                           
 10355                           ;stkvar	_c @ sp[(-5)+2]
 10356  00505C  0EFD               	movlw	-3
 10357  00505E  50E3               	movf	plusw1,w,c
 10358  005060  6EE6               	movwf	postinc1,c
 10359  005062  0E00               	movlw	0
 10360  005064  6EE6               	movwf	postinc1,c
 10361  005066  ECD7  F022         	call	_fputc	;wreg free
 10362                           
 10363                           ;stkvar	_i @ sp[(-3)+0]
 10364  00506A  0EFD               	movlw	-3
 10365  00506C  50E3               	movf	plusw1,w,c
 10366  00506E  0F01               	addlw	1
 10367  005070  6E3D               	movwf	btemp,c
 10368  005072  0EFD               	movlw	-3
 10369  005074  0060  F0F7  FFE3   	movff	btemp,plusw1
 10370  00507A  6A3D               	clrf	btemp,c
 10371  00507C  0EFE               	movlw	-2
 10372  00507E  50E3               	movf	plusw1,w,c
 10373  005080  203D               	addwfc	btemp,w,c
 10374  005082  6E3D               	movwf	btemp,c
 10375  005084  0EFE               	movlw	-2
 10376  005086  0060  F0F7  FFE3   	movff	btemp,plusw1
 10377  00508C                     l6979:
 10378                           
 10379                           ;stkvar	_i @ sp[(-3)+0]
 10380  00508C  0EFD               	movlw	-3
 10381  00508E  006F FF8C  F048    	movff	plusw1,btemp+11
 10382                           
 10383                           ;stkvar	_s @ sp[(-3)+-1]
 10384  005094  0EFC               	movlw	-4
 10385  005096  50E3               	movf	plusw1,w,c
 10386  005098  2448               	addwf	btemp+11,w,c
 10387  00509A  6ED9               	movwf	fsr2l,c
 10388  00509C  6ADA               	clrf	fsr2h,c
 10389  00509E  50DF               	movf	indf2,w,c
 10390  0050A0  6E48               	movwf	btemp+11,c
 10391                           
 10392                           ;stkvar	_c @ sp[(-3)+2]
 10393  0050A2  0EFF               	movlw	-1
 10394  0050A4  0060  F123  FFE3   	movff	btemp+11,plusw1
 10395  0050AA  0EFF               	movlw	-1
 10396  0050AC  50E3               	movf	plusw1,w,c
 10397  0050AE  A4D8               	btfss	status,2,c
 10398  0050B0  D7CE               	goto	l6975
 10399                           
 10400                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
 10401  0050B2  0EFA               	movlw	250
 10402  0050B4  26E1               	addwf	fsr1l,f,c
 10403  0050B6  0EFF               	movlw	255
 10404  0050B8  22E2               	addwfc	fsr1h,f,c
 10405  0050BA  0012               	return		;funcret
 10406  0050BC                     __end_of_fputs:
 10407                           	opt callstack 0
 10408                           
 10409 ;; *************** function _fputc *****************
 10410 ;; Defined at:
 10411 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  c               2  [STACK] int 
 10414 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10415 ;;		 -> f(5), NULL(0), 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;		None
 10418 ;; Return value:  Size  Location     Type
 10419 ;;                  2  [STACK] int 
 10420 ;; Registers used:
 10421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/1
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10431 ;;Total ram usage:        0 bytes
 10432 ;; Hardware stack levels used:    1
 10433 ;; Hardware stack levels required when called:    5
 10434 ;; This function calls:
 10435 ;;		_putch
 10436 ;; This function is called by:
 10437 ;;		_pad
 10438 ;;		_stoa
 10439 ;;		_vfpfcnvrt
 10440 ;;		_fputs
 10441 ;; This function uses a reentrant model
 10442 ;;
 10443                           
 10444                           	psect	text48
 10445  0045AE                     __ptext48:
 10446                           	opt callstack 0
 10447  0045AE                     _fputc:
 10448                           	opt callstack 19
 10449                           
 10450                           ;stkvar	_fp @ sp[(0)+-4]
 10451                           
 10452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10453                           ;incstack = 0
 10454  0045AE  0EFC               	movlw	-4
 10455  0045B0  006F FF8C  F03D    	movff	plusw1,btemp
 10456  0045B6  0EFD               	movlw	-3
 10457  0045B8  50E3               	movf	plusw1,w,c
 10458  0045BA  103D               	iorwf	btemp,w,c
 10459  0045BC  B4D8               	btfsc	status,2,c
 10460  0045BE  D009               	goto	u3910
 10461                           
 10462                           ;stkvar	_fp @ sp[(0)+-4]
 10463  0045C0  0EFC               	movlw	-4
 10464  0045C2  006F FF8C  F03D    	movff	plusw1,btemp
 10465  0045C8  0EFD               	movlw	-3
 10466  0045CA  50E3               	movf	plusw1,w,c
 10467  0045CC  103D               	iorwf	btemp,w,c
 10468  0045CE  A4D8               	btfss	status,2,c
 10469  0045D0  D006               	goto	l6965
 10470  0045D2                     u3910:
 10471                           
 10472                           ;stkvar	_c @ sp[(0)+-2]
 10473  0045D2  0EFE               	movlw	-2
 10474  0045D4  50E3               	movf	plusw1,w,c
 10475  0045D6  6EE6               	movwf	postinc1,c
 10476  0045D8  ECD1  F02E         	call	_putch	;wreg free
 10477  0045DC  D069               	goto	l2536
 10478  0045DE                     l6965:
 10479                           
 10480                           ;stkvar	_fp @ sp[(0)+-4]
 10481  0045DE  0EFC               	movlw	-4
 10482  0045E0  006F FF8C  F047    	movff	plusw1,btemp+10
 10483  0045E6  0EFD               	movlw	-3
 10484  0045E8  006F FF8C  F048    	movff	plusw1,btemp+11
 10485  0045EE  0E03               	movlw	3
 10486  0045F0  2447               	addwf	btemp+10,w,c
 10487  0045F2  6ED9               	movwf	fsr2l,c
 10488  0045F4  0E00               	movlw	0
 10489  0045F6  2048               	addwfc	btemp+11,w,c
 10490  0045F8  6EDA               	movwf	fsr2h,c
 10491  0045FA  50DE               	movf	postinc2,w,c
 10492  0045FC  10DE               	iorwf	postinc2,w,c
 10493  0045FE  B4D8               	btfsc	status,2,c
 10494  004600  D026               	goto	u3930
 10495                           
 10496                           ;stkvar	_fp @ sp[(0)+-4]
 10497  004602  0EFC               	movlw	-4
 10498  004604  006F FF8C  F047    	movff	plusw1,btemp+10
 10499  00460A  0EFD               	movlw	-3
 10500  00460C  006F FF8C  F048    	movff	plusw1,btemp+11
 10501  004612  0E03               	movlw	3
 10502  004614  2447               	addwf	btemp+10,w,c
 10503  004616  6ED9               	movwf	fsr2l,c
 10504  004618  0E00               	movlw	0
 10505  00461A  2048               	addwfc	btemp+11,w,c
 10506  00461C  6EDA               	movwf	fsr2h,c
 10507                           
 10508                           ;stkvar	_fp @ sp[(0)+-4]
 10509  00461E  0EFC               	movlw	-4
 10510  004620  006F FF8C  F047    	movff	plusw1,btemp+10
 10511  004626  0EFD               	movlw	-3
 10512  004628  006F FF8C  F048    	movff	plusw1,btemp+11
 10513  00462E  0E01               	movlw	1
 10514  004630  2447               	addwf	btemp+10,w,c
 10515  004632  6EE9               	movwf	fsr0l,c
 10516  004634  0E00               	movlw	0
 10517  004636  2048               	addwfc	btemp+11,w,c
 10518  004638  6EEA               	movwf	fsr0h,c
 10519  00463A  50DE               	movf	postinc2,w,c
 10520  00463C  5CEE               	subwf	postinc0,w,c
 10521  00463E  50EE               	movf	postinc0,w,c
 10522  004640  0A80               	xorlw	128
 10523  004642  6E3D               	movwf	btemp,c
 10524  004644  50DE               	movf	postinc2,w,c
 10525  004646  0A80               	xorlw	128
 10526  004648  583D               	subwfb	btemp,w,c
 10527  00464A  B0D8               	btfsc	status,0,c
 10528  00464C  D031               	goto	l2536
 10529  00464E                     u3930:
 10530                           
 10531                           ;stkvar	_c @ sp[(0)+-2]
 10532                           ;stkvar	_fp @ sp[(0)+-4]
 10533  00464E  0EFC               	movlw	-4
 10534  004650  006F FF8C  F047    	movff	plusw1,btemp+10
 10535  004656  0EFD               	movlw	-3
 10536  004658  006F FF8C  F048    	movff	plusw1,btemp+11
 10537  00465E  0E01               	movlw	1
 10538  004660  2447               	addwf	btemp+10,w,c
 10539  004662  6ED9               	movwf	fsr2l,c
 10540  004664  0E00               	movlw	0
 10541  004666  2048               	addwfc	btemp+11,w,c
 10542  004668  6EDA               	movwf	fsr2h,c
 10543  00466A  50DF               	movf	indf2,w,c
 10544  00466C  6E48               	movwf	btemp+11,c
 10545                           
 10546                           ;stkvar	_fp @ sp[(0)+-4]
 10547  00466E  0EFC               	movlw	-4
 10548  004670  006F FF8F FFD9     	movff	plusw1,fsr2l
 10549  004676  0EFD               	movlw	-3
 10550  004678  006F FF8F FFDA     	movff	plusw1,fsr2h
 10551  00467E  50DF               	movf	indf2,w,c
 10552  004680  2448               	addwf	btemp+11,w,c
 10553  004682  6ED9               	movwf	fsr2l,c
 10554  004684  6ADA               	clrf	fsr2h,c
 10555  004686  0EFE               	movlw	-2
 10556  004688  006F FF8F FFDF     	movff	plusw1,indf2
 10557                           
 10558                           ;stkvar	_fp @ sp[(0)+-4]
 10559  00468E  0EFC               	movlw	-4
 10560  004690  006F FF8C  F047    	movff	plusw1,btemp+10
 10561  004696  0EFD               	movlw	-3
 10562  004698  006F FF8C  F048    	movff	plusw1,btemp+11
 10563  00469E  0E01               	movlw	1
 10564  0046A0  2447               	addwf	btemp+10,w,c
 10565  0046A2  6ED9               	movwf	fsr2l,c
 10566  0046A4  0E00               	movlw	0
 10567  0046A6  2048               	addwfc	btemp+11,w,c
 10568  0046A8  6EDA               	movwf	fsr2h,c
 10569  0046AA  2ADE               	incf	postinc2,f,c
 10570  0046AC  0E00               	movlw	0
 10571  0046AE  22DD               	addwfc	postdec2,f,c
 10572  0046B0                     l2536:
 10573                           
 10574                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10575  0046B0  52E5               	movf	postdec1,f,c
 10576  0046B2  52E5               	movf	postdec1,f,c
 10577  0046B4  52E5               	movf	postdec1,f,c
 10578  0046B6  52E5               	movf	postdec1,f,c
 10579  0046B8  0012               	return		;funcret
 10580  0046BA                     __end_of_fputc:
 10581                           	opt callstack 0
 10582                           
 10583 ;; *************** function _putch *****************
 10584 ;; Defined at:
 10585 ;;		line 138 in file "eadog.c"
 10586 ;; Parameters:    Size  Location     Type
 10587 ;;  c               1  [STACK] unsigned char 
 10588 ;; Auto vars:     Size  Location     Type
 10589 ;;		None
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  1  [STACK] void 
 10592 ;; Registers used:
 10593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/1
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10603 ;;Total ram usage:        0 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; Hardware stack levels required when called:    4
 10606 ;; This function calls:
 10607 ;;		_ringBufS_put_dma
 10608 ;; This function is called by:
 10609 ;;		_fputc
 10610 ;; This function uses a reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text49
 10614  005DA2                     __ptext49:
 10615                           	opt callstack 0
 10616  005DA2                     _putch:
 10617                           	opt callstack 19
 10618                           
 10619                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10620                           ;stkvar	_c @ sp[(0)+-1]
 10621                           
 10622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10623                           ;incstack = 0
 10624  005DA2  0EFF               	movlw	-1
 10625  005DA4  50E3               	movf	plusw1,w,c
 10626  005DA6  6EE6               	movwf	postinc1,c
 10627  005DA8  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10628  005DAE  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10629  005DB4  ECD3  F025         	call	_ringBufS_put_dma	;wreg free
 10630                           
 10631                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10632  005DB8  52E5               	movf	postdec1,f,c
 10633  005DBA  0012               	return		;funcret
 10634  005DBC                     __end_of_putch:
 10635                           	opt callstack 0
 10636                           
 10637 ;; *************** function _ringBufS_put_dma *****************
 10638 ;; Defined at:
 10639 ;;		line 67 in file "ringbufs.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10642 ;;		 -> ring_buf1(67), 
 10643 ;;  c               1  [STACK] const unsigned char 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;		None
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  1  [STACK] void 
 10648 ;; Registers used:
 10649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/1
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10659 ;;Total ram usage:        0 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    3
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_putch
 10666 ;; This function uses a reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text50
 10670  004BA6                     __ptext50:
 10671                           	opt callstack 0
 10672  004BA6                     _ringBufS_put_dma:
 10673                           	opt callstack 19
 10674                           
 10675                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10676                           ;stkvar	__this @ sp[(0)+-2]
 10677                           
 10678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10679                           ;incstack = 0
 10680  004BA6  0EFE               	movlw	-2
 10681  004BA8  006F FF8C  F047    	movff	plusw1,btemp+10
 10682  004BAE  0EFF               	movlw	-1
 10683  004BB0  006F FF8C  F048    	movff	plusw1,btemp+11
 10684  004BB6  0E42               	movlw	66
 10685  004BB8  2447               	addwf	btemp+10,w,c
 10686  004BBA  6ED9               	movwf	fsr2l,c
 10687  004BBC  0E00               	movlw	0
 10688  004BBE  2048               	addwfc	btemp+11,w,c
 10689  004BC0  6EDA               	movwf	fsr2h,c
 10690  004BC2  0E40               	movlw	64
 10691  004BC4  60DF               	cpfslt	indf2,c
 10692  004BC6  D040               	goto	l1430
 10693                           
 10694                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10695                           ;stkvar	_c @ sp[(0)+-3]
 10696                           ;stkvar	__this @ sp[(0)+-2]
 10697  004BC8  0EFE               	movlw	-2
 10698  004BCA  006F FF8C  F047    	movff	plusw1,btemp+10
 10699  004BD0  0EFF               	movlw	-1
 10700  004BD2  006F FF8C  F048    	movff	plusw1,btemp+11
 10701  004BD8  0E40               	movlw	64
 10702  004BDA  2447               	addwf	btemp+10,w,c
 10703  004BDC  6ED9               	movwf	fsr2l,c
 10704  004BDE  0E00               	movlw	0
 10705  004BE0  2048               	addwfc	btemp+11,w,c
 10706  004BE2  6EDA               	movwf	fsr2h,c
 10707  004BE4  50DF               	movf	indf2,w,c
 10708  004BE6  6E48               	movwf	btemp+11,c
 10709                           
 10710                           ;stkvar	__this @ sp[(0)+-2]
 10711  004BE8  0EFE               	movlw	-2
 10712  004BEA  006F FF8C  F045    	movff	plusw1,btemp+8
 10713  004BF0  0EFF               	movlw	-1
 10714  004BF2  006F FF8C  F046    	movff	plusw1,btemp+9
 10715  004BF8  5048               	movf	btemp+11,w,c
 10716  004BFA  2445               	addwf	btemp+8,w,c
 10717  004BFC  6ED9               	movwf	fsr2l,c
 10718  004BFE  0E00               	movlw	0
 10719  004C00  2046               	addwfc	btemp+9,w,c
 10720  004C02  6EDA               	movwf	fsr2h,c
 10721  004C04  0EFD               	movlw	-3
 10722  004C06  006F FF8F FFDF     	movff	plusw1,indf2
 10723                           
 10724                           ;ringbufs.c: 71:   ++_this->head;
 10725                           ;stkvar	__this @ sp[(0)+-2]
 10726  004C0C  0EFE               	movlw	-2
 10727  004C0E  006F FF8C  F047    	movff	plusw1,btemp+10
 10728  004C14  0EFF               	movlw	-1
 10729  004C16  006F FF8C  F048    	movff	plusw1,btemp+11
 10730  004C1C  0E40               	movlw	64
 10731  004C1E  2447               	addwf	btemp+10,w,c
 10732  004C20  6ED9               	movwf	fsr2l,c
 10733  004C22  0E00               	movlw	0
 10734  004C24  2048               	addwfc	btemp+11,w,c
 10735  004C26  6EDA               	movwf	fsr2h,c
 10736  004C28  2ADF               	incf	indf2,f,c
 10737                           
 10738                           ;ringbufs.c: 72:   ++_this->count;
 10739                           ;stkvar	__this @ sp[(0)+-2]
 10740  004C2A  0EFE               	movlw	-2
 10741  004C2C  006F FF8C  F047    	movff	plusw1,btemp+10
 10742  004C32  0EFF               	movlw	-1
 10743  004C34  006F FF8C  F048    	movff	plusw1,btemp+11
 10744  004C3A  0E42               	movlw	66
 10745  004C3C  2447               	addwf	btemp+10,w,c
 10746  004C3E  6ED9               	movwf	fsr2l,c
 10747  004C40  0E00               	movlw	0
 10748  004C42  2048               	addwfc	btemp+11,w,c
 10749  004C44  6EDA               	movwf	fsr2h,c
 10750  004C46  2ADF               	incf	indf2,f,c
 10751  004C48                     l1430:
 10752                           
 10753                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10754  004C48  52E5               	movf	postdec1,f,c
 10755  004C4A  52E5               	movf	postdec1,f,c
 10756  004C4C  52E5               	movf	postdec1,f,c
 10757  004C4E  0012               	return		;funcret
 10758  004C50                     __end_of_ringBufS_put_dma:
 10759                           	opt callstack 0
 10760                           
 10761 ;; *************** function _atoi *****************
 10762 ;; Defined at:
 10763 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;  s               1  [STACK] PTR const unsigned char 
 10766 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(23), 
 10767 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;  n               2  [STACK] int 
 10770 ;;  neg             2  [STACK] int 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  2  [STACK] int 
 10773 ;; Registers used:
 10774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/1
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10784 ;;Total ram usage:        0 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    4
 10787 ;; This function calls:
 10788 ;;		_isdigit
 10789 ;;		_isspace
 10790 ;; This function is called by:
 10791 ;;		_vfpfcnvrt
 10792 ;; This function uses a reentrant model
 10793 ;;
 10794                           
 10795                           	psect	text51
 10796  003E98                     __ptext51:
 10797                           	opt callstack 0
 10798  003E98                     _atoi:
 10799                           	opt callstack 0
 10800                           
 10801                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10802  003E98  0E09               	movlw	9
 10803  003E9A  26E1               	addwf	fsr1l,f,c
 10804  003E9C  0E00               	movlw	0
 10805  003E9E  22E2               	addwfc	fsr1h,f,c
 10806                           
 10807                           ;stkvar	_n @ sp[(-9)+5]
 10808                           
 10809                           ;incstack = 0
 10810  003EA0  0EFC               	movlw	-4
 10811  003EA2  6AE3               	clrf	plusw1,c
 10812  003EA4  0EFD               	movlw	-3
 10813  003EA6  6AE3               	clrf	plusw1,c
 10814                           
 10815                           ;stkvar	_neg @ sp[(-9)+7]
 10816  003EA8  0EFE               	movlw	-2
 10817  003EAA  6AE3               	clrf	plusw1,c
 10818  003EAC  0EFF               	movlw	-1
 10819  003EAE  6AE3               	clrf	plusw1,c
 10820  003EB0  D002               	goto	l2464
 10821  003EB2                     l5227:
 10822                           
 10823                           ;stkvar	_s @ sp[(-9)+-1]
 10824  003EB2  0EF6               	movlw	-10
 10825  003EB4  2AE3               	incf	plusw1,f,c
 10826  003EB6                     l2464:
 10827                           
 10828                           ;stkvar	_atoi$4218 @ sp[(-9)+4]
 10829  003EB6  0EFB               	movlw	-5
 10830  003EB8  6AE3               	clrf	plusw1,c
 10831  003EBA  2AE3               	incf	plusw1,f,c
 10832                           
 10833                           ;stkvar	_s @ sp[(-9)+-1]
 10834  003EBC  50E1               	movf	fsr1l,w,c
 10835  003EBE  0FF6               	addlw	-10
 10836  003EC0  6ED9               	movwf	fsr2l,c
 10837  003EC2  50E2               	movf	fsr1h,w,c
 10838  003EC4  6EDA               	movwf	fsr2h,c
 10839  003EC6  0EFF               	movlw	255
 10840  003EC8  22DA               	addwfc	fsr2h,f,c
 10841  003ECA  006F FF7F FFF6     	movff	indf2,tblptrl
 10842  003ED0                     	if	1	;There is more than 1 active tblptr byte
 10843  003ED0  0E20               	movlw	high __smallconst
 10844  003ED2  6EF7               	movwf	tblptrh,c
 10845  003ED4                     	endif
 10846  003ED4                     	if	0	;tblptru may be non-zero
 10847  003ED4                     	endif
 10848  003ED4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10849  003ED4  0E00               	movlw	low (__smallconst shr (0+16))
 10850  003ED6  6EF8               	movwf	tblptru,c
 10851  003ED8                     	endif
 10852  003ED8  0008               	tblrd		*
 10853  003EDA  50F5               	movf	tablat,w,c
 10854  003EDC  0A20               	xorlw	32
 10855  003EDE  B4D8               	btfsc	status,2,c
 10856  003EE0  D022               	goto	l5235
 10857  003EE2  0EF7               	movlw	247
 10858  003EE4  6E47               	movwf	btemp+10,c
 10859  003EE6  0EFF               	movlw	255
 10860  003EE8  6E48               	movwf	btemp+11,c
 10861                           
 10862                           ;stkvar	_s @ sp[(-9)+-1]
 10863  003EEA  50E1               	movf	fsr1l,w,c
 10864  003EEC  0FF6               	addlw	-10
 10865  003EEE  6ED9               	movwf	fsr2l,c
 10866  003EF0  50E2               	movf	fsr1h,w,c
 10867  003EF2  6EDA               	movwf	fsr2h,c
 10868  003EF4  0EFF               	movlw	255
 10869  003EF6  22DA               	addwfc	fsr2h,f,c
 10870  003EF8  006F FF7F FFF6     	movff	indf2,tblptrl
 10871  003EFE                     	if	1	;There is more than 1 active tblptr byte
 10872  003EFE  0E20               	movlw	high __smallconst
 10873  003F00  6EF7               	movwf	tblptrh,c
 10874  003F02                     	endif
 10875  003F02                     	if	0	;tblptru may be non-zero
 10876  003F02                     	endif
 10877  003F02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10878  003F02  0E00               	movlw	low (__smallconst shr (0+16))
 10879  003F04  6EF8               	movwf	tblptru,c
 10880  003F06                     	endif
 10881  003F06  0008               	tblrd		*
 10882  003F08  50F5               	movf	tablat,w,c
 10883  003F0A  6E45               	movwf	btemp+8,c
 10884  003F0C  6A46               	clrf	btemp+9,c
 10885  003F0E  5047               	movf	btemp+10,w,c
 10886  003F10  2645               	addwf	btemp+8,f,c
 10887  003F12  5048               	movf	btemp+11,w,c
 10888  003F14  2246               	addwfc	btemp+9,f,c
 10889  003F16  5046               	movf	btemp+9,w,c
 10890  003F18  E104               	bnz	u2950
 10891  003F1A  0E05               	movlw	5
 10892  003F1C  5C45               	subwf	btemp+8,w,c
 10893  003F1E  A0D8               	btfss	status,0,c
 10894  003F20  D002               	goto	l5235
 10895  003F22                     u2950:
 10896                           
 10897                           ;stkvar	_atoi$4218 @ sp[(-9)+4]
 10898  003F22  0EFB               	movlw	-5
 10899  003F24  6AE3               	clrf	plusw1,c
 10900  003F26                     l5235:
 10901                           
 10902                           ;stkvar	_atoi$4218 @ sp[(-9)+4]
 10903  003F26  0EFB               	movlw	-5
 10904  003F28  50E3               	movf	plusw1,w,c
 10905  003F2A  6E47               	movwf	btemp+10,c
 10906  003F2C  6A48               	clrf	btemp+11,c
 10907                           
 10908                           ;stkvar	_atoi$4217 @ sp[(-9)+2]
 10909  003F2E  0EF9               	movlw	-7
 10910  003F30  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10911  003F36  0EFA               	movlw	-6
 10912  003F38  0060  F123  FFE3   	movff	btemp+11,plusw1
 10913                           
 10914                           ;stkvar	_atoi$4217 @ sp[(-9)+2]
 10915  003F3E  0EF9               	movlw	-7
 10916  003F40  006F FF8C  F03D    	movff	plusw1,btemp
 10917  003F46  0EFA               	movlw	-6
 10918  003F48  50E3               	movf	plusw1,w,c
 10919  003F4A  103D               	iorwf	btemp,w,c
 10920  003F4C  B4D8               	btfsc	status,2,c
 10921  003F4E  D010               	goto	l5245
 10922  003F50  D7B0               	goto	l5227
 10923  003F52                     l5241:
 10924  003F52  0E01               	movlw	1
 10925  003F54  6E47               	movwf	btemp+10,c
 10926  003F56  0E00               	movlw	0
 10927  003F58  6E48               	movwf	btemp+11,c
 10928                           
 10929                           ;stkvar	_neg @ sp[(-9)+7]
 10930  003F5A  0EFE               	movlw	-2
 10931  003F5C  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10932  003F62  0EFF               	movlw	-1
 10933  003F64  0060  F123  FFE3   	movff	btemp+11,plusw1
 10934  003F6A                     l5243:
 10935                           
 10936                           ;stkvar	_s @ sp[(-9)+-1]
 10937  003F6A  0EF6               	movlw	-10
 10938  003F6C  2AE3               	incf	plusw1,f,c
 10939  003F6E  D051               	goto	l5251
 10940  003F70                     l5245:
 10941                           
 10942                           ;stkvar	_s @ sp[(-9)+-1]
 10943  003F70  50E1               	movf	fsr1l,w,c
 10944  003F72  0FF6               	addlw	-10
 10945  003F74  6ED9               	movwf	fsr2l,c
 10946  003F76  50E2               	movf	fsr1h,w,c
 10947  003F78  6EDA               	movwf	fsr2h,c
 10948  003F7A  0EFF               	movlw	255
 10949  003F7C  22DA               	addwfc	fsr2h,f,c
 10950  003F7E  006F FF7F FFF6     	movff	indf2,tblptrl
 10951  003F84                     	if	1	;There is more than 1 active tblptr byte
 10952  003F84  0E20               	movlw	high __smallconst
 10953  003F86  6EF7               	movwf	tblptrh,c
 10954  003F88                     	endif
 10955  003F88                     	if	0	;tblptru may be non-zero
 10956  003F88                     	endif
 10957  003F88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10958  003F88  0E00               	movlw	low (__smallconst shr (0+16))
 10959  003F8A  6EF8               	movwf	tblptru,c
 10960  003F8C                     	endif
 10961  003F8C  0008               	tblrd		*
 10962  003F8E  50F5               	movf	tablat,w,c
 10963  003F90  6E47               	movwf	btemp+10,c
 10964  003F92  6A48               	clrf	btemp+11,c
 10965                           
 10966                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10967                           ; Switch size 1, requested type "simple"
 10968                           ; Number of cases is 1, Range of values is 0 to 0
 10969                           ; switch strategies available:
 10970                           ; Name         Instructions Cycles
 10971                           ; simple_byte            4     3 (average)
 10972                           ;	Chosen strategy is simple_byte
 10973  003F94  5048               	movf	btemp+11,w,c
 10974  003F96  0A00               	xorlw	0	; case 0
 10975  003F98  A4D8               	btfss	status,2,c
 10976  003F9A  D03B               	goto	l5251
 10977                           
 10978                           ; Switch size 1, requested type "simple"
 10979                           ; Number of cases is 2, Range of values is 43 to 45
 10980                           ; switch strategies available:
 10981                           ; Name         Instructions Cycles
 10982                           ; simple_byte            7     4 (average)
 10983                           ;	Chosen strategy is simple_byte
 10984  003F9C  5047               	movf	btemp+10,w,c
 10985  003F9E  0A2B               	xorlw	43	; case 43
 10986  003FA0  B4D8               	btfsc	status,2,c
 10987  003FA2  D7E3               	goto	l5243
 10988  003FA4  0A06               	xorlw	6	; case 45
 10989  003FA6  B4D8               	btfsc	status,2,c
 10990  003FA8  D7D4               	goto	l5241
 10991  003FAA  D033               	goto	l5251
 10992  003FAC                     l5247:
 10993                           
 10994                           ;stkvar	_n @ sp[(-9)+5]
 10995  003FAC  0EFC               	movlw	-4
 10996  003FAE  006F FF8C  F047    	movff	plusw1,btemp+10
 10997  003FB4  0EFD               	movlw	-3
 10998  003FB6  006F FF8C  F048    	movff	plusw1,btemp+11
 10999  003FBC  0E0A               	movlw	10
 11000  003FBE  0247               	mulwf	btemp+10,c
 11001  003FC0  006F FFCC  F045    	movff	prodl,btemp+8
 11002  003FC6  006F FFD0  F046    	movff	prodh,btemp+9
 11003  003FCC  0248               	mulwf	btemp+11,c
 11004  003FCE  50F3               	movf	prodl,w,c
 11005  003FD0  2646               	addwf	btemp+9,f,c
 11006                           
 11007                           ;stkvar	_s @ sp[(-9)+-1]
 11008  003FD2  50E1               	movf	fsr1l,w,c
 11009  003FD4  0FF6               	addlw	-10
 11010  003FD6  6ED9               	movwf	fsr2l,c
 11011  003FD8  50E2               	movf	fsr1h,w,c
 11012  003FDA  6EDA               	movwf	fsr2h,c
 11013  003FDC  0EFF               	movlw	255
 11014  003FDE  22DA               	addwfc	fsr2h,f,c
 11015  003FE0  006F FF7F FFF6     	movff	indf2,tblptrl
 11016  003FE6                     	if	1	;There is more than 1 active tblptr byte
 11017  003FE6  0E20               	movlw	high __smallconst
 11018  003FE8  6EF7               	movwf	tblptrh,c
 11019  003FEA                     	endif
 11020  003FEA                     	if	0	;tblptru may be non-zero
 11021  003FEA                     	endif
 11022  003FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11023  003FEA  0E00               	movlw	low (__smallconst shr (0+16))
 11024  003FEC  6EF8               	movwf	tblptru,c
 11025  003FEE                     	endif
 11026  003FEE  0008               	tblrd		*
 11027  003FF0  50F5               	movf	tablat,w,c
 11028  003FF2  5E45               	subwf	btemp+8,f,c
 11029  003FF4  0E00               	movlw	0
 11030  003FF6  5A46               	subwfb	btemp+9,f,c
 11031  003FF8  0E30               	movlw	48
 11032  003FFA  2645               	addwf	btemp+8,f,c
 11033  003FFC  0E00               	movlw	0
 11034  003FFE  2246               	addwfc	btemp+9,f,c
 11035                           
 11036                           ;stkvar	_n @ sp[(-9)+5]
 11037  004000  0EFC               	movlw	-4
 11038  004002  0060  F117  FFE3   	movff	btemp+8,plusw1
 11039  004008  0EFD               	movlw	-3
 11040  00400A  0060  F11B  FFE3   	movff	btemp+9,plusw1
 11041  004010  D7AC               	goto	l5243
 11042  004012                     l5251:
 11043  004012  0ED0               	movlw	208
 11044  004014  6E47               	movwf	btemp+10,c
 11045  004016  0EFF               	movlw	255
 11046  004018  6E48               	movwf	btemp+11,c
 11047                           
 11048                           ;stkvar	_s @ sp[(-9)+-1]
 11049  00401A  50E1               	movf	fsr1l,w,c
 11050  00401C  0FF6               	addlw	-10
 11051  00401E  6ED9               	movwf	fsr2l,c
 11052  004020  50E2               	movf	fsr1h,w,c
 11053  004022  6EDA               	movwf	fsr2h,c
 11054  004024  0EFF               	movlw	255
 11055  004026  22DA               	addwfc	fsr2h,f,c
 11056  004028  006F FF7F FFF6     	movff	indf2,tblptrl
 11057  00402E                     	if	1	;There is more than 1 active tblptr byte
 11058  00402E  0E20               	movlw	high __smallconst
 11059  004030  6EF7               	movwf	tblptrh,c
 11060  004032                     	endif
 11061  004032                     	if	0	;tblptru may be non-zero
 11062  004032                     	endif
 11063  004032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11064  004032  0E00               	movlw	low (__smallconst shr (0+16))
 11065  004034  6EF8               	movwf	tblptru,c
 11066  004036                     	endif
 11067  004036  0008               	tblrd		*
 11068  004038  50F5               	movf	tablat,w,c
 11069  00403A  6E45               	movwf	btemp+8,c
 11070  00403C  6A46               	clrf	btemp+9,c
 11071  00403E  5047               	movf	btemp+10,w,c
 11072  004040  2645               	addwf	btemp+8,f,c
 11073  004042  5048               	movf	btemp+11,w,c
 11074  004044  2246               	addwfc	btemp+9,f,c
 11075  004046  5046               	movf	btemp+9,w,c
 11076  004048  E106               	bnz	u2970
 11077  00404A  0E0A               	movlw	10
 11078  00404C  5C45               	subwf	btemp+8,w,c
 11079  00404E  B0D8               	btfsc	status,0,c
 11080  004050  D002               	goto	u2970
 11081  004052  0E01               	movlw	1
 11082  004054  D001               	goto	u2980
 11083  004056                     u2970:
 11084  004056  0E00               	movlw	0
 11085  004058                     u2980:
 11086  004058  6E47               	movwf	btemp+10,c
 11087  00405A  6A48               	clrf	btemp+11,c
 11088                           
 11089                           ;stkvar	_atoi$4219 @ sp[(-9)+0]
 11090  00405C  0EF7               	movlw	-9
 11091  00405E  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11092  004064  0EF8               	movlw	-8
 11093  004066  0060  F123  FFE3   	movff	btemp+11,plusw1
 11094                           
 11095                           ;stkvar	_atoi$4219 @ sp[(-9)+0]
 11096  00406C  0EF7               	movlw	-9
 11097  00406E  006F FF8C  F03D    	movff	plusw1,btemp
 11098  004074  0EF8               	movlw	-8
 11099  004076  50E3               	movf	plusw1,w,c
 11100  004078  103D               	iorwf	btemp,w,c
 11101  00407A  A4D8               	btfss	status,2,c
 11102  00407C  D797               	goto	l5247
 11103                           
 11104                           ;stkvar	_neg @ sp[(-9)+7]
 11105  00407E  0EFE               	movlw	-2
 11106  004080  006F FF8C  F03D    	movff	plusw1,btemp
 11107  004086  0EFF               	movlw	-1
 11108  004088  50E3               	movf	plusw1,w,c
 11109  00408A  103D               	iorwf	btemp,w,c
 11110  00408C  A4D8               	btfss	status,2,c
 11111  00408E  D00E               	goto	l5261
 11112                           
 11113                           ;stkvar	_n @ sp[(-9)+5]
 11114  004090  0EFC               	movlw	-4
 11115  004092  006F FF8C  F03D    	movff	plusw1,btemp
 11116  004098  1E3D               	comf	btemp,f,c
 11117  00409A  0EFD               	movlw	-3
 11118  00409C  006F FF8C  F03E    	movff	plusw1,btemp+1
 11119  0040A2  1E3E               	comf	btemp+1,f,c
 11120  0040A4  2A3D               	incf	btemp,f,c
 11121  0040A6  B4D8               	btfsc	status,2,c
 11122  0040A8  2A3E               	incf	btemp+1,f,c
 11123  0040AA  D008               	goto	l2488
 11124  0040AC                     l5261:
 11125                           
 11126                           ;stkvar	_n @ sp[(-9)+5]
 11127  0040AC  0EFC               	movlw	-4
 11128  0040AE  006F FF8C  F03D    	movff	plusw1,btemp
 11129  0040B4  0EFD               	movlw	-3
 11130  0040B6  006F FF8C  F03E    	movff	plusw1,btemp+1
 11131  0040BC                     l2488:
 11132                           
 11133                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
 11134  0040BC  0EF6               	movlw	246
 11135  0040BE  26E1               	addwf	fsr1l,f,c
 11136  0040C0  0EFF               	movlw	255
 11137  0040C2  22E2               	addwfc	fsr1h,f,c
 11138  0040C4  0012               	return		;funcret
 11139  0040C6                     __end_of_atoi:
 11140                           	opt callstack 0
 11141                           
 11142 ;; *************** function _isspace *****************
 11143 ;; Defined at:
 11144 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 11145 ;; Parameters:    Size  Location     Type
 11146 ;;  c               2  [STACK] int 
 11147 ;; Auto vars:     Size  Location     Type
 11148 ;;		None
 11149 ;; Return value:  Size  Location     Type
 11150 ;;                  2  [STACK] int 
 11151 ;; Registers used:
 11152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11153 ;; Tracked objects:
 11154 ;;		On entry : 0/0
 11155 ;;		On exit  : 0/0
 11156 ;;		Unchanged: 0/0
 11157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11162 ;;Total ram usage:        0 bytes
 11163 ;; Hardware stack levels used:    1
 11164 ;; Hardware stack levels required when called:    3
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		_atoi
 11169 ;; This function uses a reentrant model
 11170 ;;
 11171                           
 11172                           	psect	text52
 11173  0053DA                     __ptext52:
 11174                           	opt callstack 0
 11175  0053DA                     _isspace:
 11176                           	opt callstack 0
 11177                           
 11178                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11179  0053DA  52E6               	movf	postinc1,f,c
 11180                           
 11181                           ;stkvar	_isspace$4244 @ sp[(-1)+0]
 11182                           
 11183                           ;incstack = 0
 11184  0053DC  0EFF               	movlw	-1
 11185  0053DE  6AE3               	clrf	plusw1,c
 11186  0053E0  2AE3               	incf	plusw1,f,c
 11187                           
 11188                           ;stkvar	_c @ sp[(-1)+-2]
 11189  0053E2  0EFD               	movlw	-3
 11190  0053E4  006F FF8C  F03D    	movff	plusw1,btemp
 11191  0053EA  0E20               	movlw	32
 11192  0053EC  183D               	xorwf	btemp,w,c
 11193  0053EE  E104               	bnz	u2470
 11194  0053F0  0EFE               	movlw	-2
 11195  0053F2  50E3               	movf	plusw1,w,c
 11196  0053F4  B4D8               	btfsc	status,2,c
 11197  0053F6  D012               	goto	l5017
 11198  0053F8                     u2470:
 11199                           
 11200                           ;stkvar	_c @ sp[(-1)+-2]
 11201  0053F8  0EFD               	movlw	-3
 11202  0053FA  50E3               	movf	plusw1,w,c
 11203  0053FC  0FF7               	addlw	247
 11204  0053FE  6E47               	movwf	btemp+10,c
 11205  005400  0EFE               	movlw	-2
 11206  005402  006F FF8C  F048    	movff	plusw1,btemp+11
 11207  005408  0EFF               	movlw	255
 11208  00540A  2248               	addwfc	btemp+11,f,c
 11209  00540C  5048               	movf	btemp+11,w,c
 11210  00540E  E104               	bnz	u2480
 11211  005410  0E05               	movlw	5
 11212  005412  5C47               	subwf	btemp+10,w,c
 11213  005414  A0D8               	btfss	status,0,c
 11214  005416  D002               	goto	l5017
 11215  005418                     u2480:
 11216                           
 11217                           ;stkvar	_isspace$4244 @ sp[(-1)+0]
 11218  005418  0EFF               	movlw	-1
 11219  00541A  6AE3               	clrf	plusw1,c
 11220  00541C                     l5017:
 11221                           
 11222                           ;stkvar	_isspace$4244 @ sp[(-1)+0]
 11223  00541C  0EFF               	movlw	-1
 11224  00541E  50E3               	movf	plusw1,w,c
 11225  005420  6E3D               	movwf	btemp,c
 11226  005422  6A3E               	clrf	btemp+1,c
 11227                           
 11228                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11229  005424  52E5               	movf	postdec1,f,c
 11230  005426  52E5               	movf	postdec1,f,c
 11231  005428  52E5               	movf	postdec1,f,c
 11232  00542A  0012               	return		;funcret
 11233  00542C                     __end_of_isspace:
 11234                           	opt callstack 0
 11235                           
 11236 ;; *************** function _isdigit *****************
 11237 ;; Defined at:
 11238 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;  c               2  [STACK] int 
 11241 ;; Auto vars:     Size  Location     Type
 11242 ;;		None
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  2  [STACK] int 
 11245 ;; Registers used:
 11246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11247 ;; Tracked objects:
 11248 ;;		On entry : 0/0
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11256 ;;Total ram usage:        0 bytes
 11257 ;; Hardware stack levels used:    1
 11258 ;; Hardware stack levels required when called:    3
 11259 ;; This function calls:
 11260 ;;		Nothing
 11261 ;; This function is called by:
 11262 ;;		_vfpfcnvrt
 11263 ;;		_atoi
 11264 ;; This function uses a reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text53
 11268  0057AE                     __ptext53:
 11269                           	opt callstack 0
 11270  0057AE                     _isdigit:
 11271                           	opt callstack 24
 11272                           
 11273                           ;stkvar	_c @ sp[(0)+-2]
 11274                           
 11275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11276                           ;incstack = 0
 11277  0057AE  0EFE               	movlw	-2
 11278  0057B0  50E3               	movf	plusw1,w,c
 11279  0057B2  0FD0               	addlw	208
 11280  0057B4  6E47               	movwf	btemp+10,c
 11281  0057B6  0EFF               	movlw	-1
 11282  0057B8  006F FF8C  F048    	movff	plusw1,btemp+11
 11283  0057BE  0EFF               	movlw	255
 11284  0057C0  2248               	addwfc	btemp+11,f,c
 11285  0057C2  5048               	movf	btemp+11,w,c
 11286  0057C4  E106               	bnz	u2220
 11287  0057C6  0E0A               	movlw	10
 11288  0057C8  5C47               	subwf	btemp+10,w,c
 11289  0057CA  B0D8               	btfsc	status,0,c
 11290  0057CC  D002               	goto	u2220
 11291  0057CE  0E01               	movlw	1
 11292  0057D0  D001               	goto	u2230
 11293  0057D2                     u2220:
 11294  0057D2  0E00               	movlw	0
 11295  0057D4                     u2230:
 11296  0057D4  6E3D               	movwf	btemp,c
 11297  0057D6  6A3E               	clrf	btemp+1,c
 11298                           
 11299                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11300  0057D8  52E5               	movf	postdec1,f,c
 11301  0057DA  52E5               	movf	postdec1,f,c
 11302  0057DC  0012               	return		;funcret
 11303  0057DE                     __end_of_isdigit:
 11304                           	opt callstack 0
 11305                           
 11306 ;; *************** function _SYSTEM_Initialize *****************
 11307 ;; Defined at:
 11308 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;		None
 11311 ;; Auto vars:     Size  Location     Type
 11312 ;;		None
 11313 ;; Return value:  Size  Location     Type
 11314 ;;                  1  [STACK] void 
 11315 ;; Registers used:
 11316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 11317 ;; Tracked objects:
 11318 ;;		On entry : 0/0
 11319 ;;		On exit  : 3F/3C
 11320 ;;		Unchanged: 0/0
 11321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11326 ;;Total ram usage:        0 bytes
 11327 ;; Hardware stack levels used:    1
 11328 ;; Hardware stack levels required when called:    5
 11329 ;; This function calls:
 11330 ;;		_ADCC_Initialize
 11331 ;;		_CLC1_Initialize
 11332 ;;		_CLKREF_Initialize
 11333 ;;		_DMA1_Initialize
 11334 ;;		_DSM_Initialize
 11335 ;;		_EXT_INT_Initialize
 11336 ;;		_INTERRUPT_Initialize
 11337 ;;		_NCO1_Initialize
 11338 ;;		_OSCILLATOR_Initialize
 11339 ;;		_PIN_MANAGER_Initialize
 11340 ;;		_PMD_Initialize
 11341 ;;		_SPI1_Initialize
 11342 ;;		_TMR5_Initialize
 11343 ;;		_TMR6_Initialize
 11344 ;;		_UART1_Initialize
 11345 ;;		_UART2_Initialize
 11346 ;; This function is called by:
 11347 ;;		_main
 11348 ;; This function uses a reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text54
 11352  0055E2                     __ptext54:
 11353                           	opt callstack 0
 11354  0055E2                     _SYSTEM_Initialize:
 11355                           	opt callstack 25
 11356                           
 11357                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 11358                           
 11359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11360                           ;incstack = 0
 11361  0055E2  ECCB  F028         	call	_INTERRUPT_Initialize	;wreg free
 11362                           
 11363                           ; BSR set to: 57
 11364                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 11365  0055E6  ECF4  F02E         	call	_PMD_Initialize	;wreg free
 11366                           
 11367                           ; BSR set to: 57
 11368                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11369  0055EA  EC79  F026         	call	_PIN_MANAGER_Initialize	;wreg free
 11370                           
 11371                           ; BSR set to: 58
 11372                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11373  0055EE  ECE9  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 11374                           
 11375                           ; BSR set to: 57
 11376                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 11377  0055F2  EC64  F02A         	call	_ADCC_Initialize	;wreg free
 11378                           
 11379                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 11380  0055F6  ECB5  F02E         	call	_NCO1_Initialize	;wreg free
 11381                           
 11382                           ; BSR set to: 63
 11383                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 11384  0055FA  EC3E  F02A         	call	_EXT_INT_Initialize	;wreg free
 11385                           
 11386                           ; BSR set to: 57
 11387                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 11388  0055FE  EC11  F02D         	call	_TMR6_Initialize	;wreg free
 11389                           
 11390                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 11391  005602  EC12  F02E         	call	_CLC1_Initialize	;wreg free
 11392                           
 11393                           ; BSR set to: 60
 11394                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 11395  005606  ECAC  F02A         	call	_TMR5_Initialize	;wreg free
 11396                           
 11397                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 11398  00560A  ECC3  F02E         	call	_DSM_Initialize	;wreg free
 11399                           
 11400                           ; BSR set to: 60
 11401                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 11402  00560E  ECFE  F028         	call	_UART1_Initialize	;wreg free
 11403                           
 11404                           ; BSR set to: 57
 11405                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 11406  005612  EC61  F029         	call	_UART2_Initialize	;wreg free
 11407                           
 11408                           ; BSR set to: 57
 11409                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 11410  005616  ECDE  F02E         	call	_SPI1_Initialize	;wreg free
 11411                           
 11412                           ; BSR set to: 61
 11413                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 11414  00561A  EC96  F028         	call	_DMA1_Initialize	;wreg free
 11415                           
 11416                           ; BSR set to: 59
 11417                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 11418  00561E  EC2C  F02F         	call	_CLKREF_Initialize	;wreg free
 11419                           
 11420                           ; BSR set to: 60
 11421                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 11422  005622  0012               	return		;funcret
 11423  005624                     __end_of_SYSTEM_Initialize:
 11424                           	opt callstack 0
 11425                           
 11426 ;; *************** function _UART2_Initialize *****************
 11427 ;; Defined at:
 11428 ;;		line 78 in file "mcc_generated_files/uart2.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;		None
 11431 ;; Auto vars:     Size  Location     Type
 11432 ;;		None
 11433 ;; Return value:  Size  Location     Type
 11434 ;;                  1  [STACK] void 
 11435 ;; Registers used:
 11436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11437 ;; Tracked objects:
 11438 ;;		On entry : 3F/39
 11439 ;;		On exit  : 3F/39
 11440 ;;		Unchanged: 0/0
 11441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11446 ;;Total ram usage:        0 bytes
 11447 ;; Hardware stack levels used:    1
 11448 ;; Hardware stack levels required when called:    4
 11449 ;; This function calls:
 11450 ;;		_UART2_SetRxInterruptHandler
 11451 ;;		_UART2_SetTxInterruptHandler
 11452 ;; This function is called by:
 11453 ;;		_SYSTEM_Initialize
 11454 ;; This function uses a reentrant model
 11455 ;;
 11456                           
 11457                           	psect	text55
 11458  0052C2                     __ptext55:
 11459                           	opt callstack 0
 11460  0052C2                     _UART2_Initialize:
 11461                           	opt callstack 25
 11462                           
 11463                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 11464                           
 11465                           ; BSR set to: 60
 11466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11467                           ;incstack = 0
 11468  0052C2  0139               	movlb	57	; () banked
 11469  0052C4  9596               	bcf	150,2,b	;volatile
 11470                           
 11471                           ; BSR set to: 57
 11472                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 11473  0052C6  0E10               	movlw	low _UART2_Receive_ISR
 11474  0052C8  6EE6               	movwf	postinc1,c
 11475  0052CA  0E5D               	movlw	high _UART2_Receive_ISR
 11476  0052CC  6EE6               	movwf	postinc1,c
 11477  0052CE  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 11478  0052D0  6EE6               	movwf	postinc1,c
 11479  0052D2  ECD5  F02C         	call	_UART2_SetRxInterruptHandler	;wreg free
 11480                           
 11481                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 11482  0052D6  0139               	movlb	57	; () banked
 11483  0052D8  9796               	bcf	150,3,b	;volatile
 11484                           
 11485                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 11486  0052DA  0E36               	movlw	low _UART2_Transmit_ISR
 11487  0052DC  6EE6               	movwf	postinc1,c
 11488  0052DE  0E58               	movlw	high _UART2_Transmit_ISR
 11489  0052E0  6EE6               	movwf	postinc1,c
 11490  0052E2  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 11491  0052E4  6EE6               	movwf	postinc1,c
 11492  0052E6  ECC1  F02C         	call	_UART2_SetTxInterruptHandler	;wreg free
 11493                           
 11494                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 11495  0052EA  013D               	movlb	61	; () banked
 11496  0052EC  6BD4               	clrf	212,b	;volatile
 11497                           
 11498                           ; BSR set to: 61
 11499                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 11500  0052EE  6BD6               	clrf	214,b	;volatile
 11501                           
 11502                           ; BSR set to: 61
 11503                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 11504  0052F0  6BD8               	clrf	216,b	;volatile
 11505                           
 11506                           ; BSR set to: 61
 11507                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 11508  0052F2  0EB0               	movlw	176
 11509  0052F4  6FDA               	movwf	218,b	;volatile
 11510                           
 11511                           ; BSR set to: 61
 11512                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 11513  0052F6  0E80               	movlw	128
 11514  0052F8  6FDB               	movwf	219,b	;volatile
 11515                           
 11516                           ; BSR set to: 61
 11517                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 11518  0052FA  6BDC               	clrf	220,b	;volatile
 11519                           
 11520                           ; BSR set to: 61
 11521                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 11522  0052FC  0E82               	movlw	130
 11523  0052FE  6FDD               	movwf	221,b	;volatile
 11524                           
 11525                           ; BSR set to: 61
 11526                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 11527  005300  0E06               	movlw	6
 11528  005302  6FDE               	movwf	222,b	;volatile
 11529                           
 11530                           ; BSR set to: 61
 11531                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 11532  005304  6BDF               	clrf	223,b	;volatile
 11533                           
 11534                           ; BSR set to: 61
 11535                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 11536  005306  6BE0               	clrf	224,b	;volatile
 11537                           
 11538                           ; BSR set to: 61
 11539                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 11540  005308  6BE1               	clrf	225,b	;volatile
 11541                           
 11542                           ; BSR set to: 61
 11543                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 11544  00530A  6BE2               	clrf	226,b	;volatile
 11545                           
 11546                           ; BSR set to: 61
 11547                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 11548  00530C  6A36               	clrf	_uart2TxHead,c	;volatile
 11549                           
 11550                           ; BSR set to: 61
 11551                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 11552  00530E  6A35               	clrf	_uart2TxTail,c	;volatile
 11553                           
 11554                           ; BSR set to: 61
 11555                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 11556  005310  0E40               	movlw	64
 11557  005312  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 11558                           
 11559                           ; BSR set to: 61
 11560                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 11561  005314  6A33               	clrf	_uart2RxHead,c	;volatile
 11562                           
 11563                           ; BSR set to: 61
 11564                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 11565  005316  6A32               	clrf	_uart2RxTail,c	;volatile
 11566                           
 11567                           ; BSR set to: 61
 11568                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 11569  005318  6A31               	clrf	_uart2RxCount,c	;volatile
 11570                           
 11571                           ; BSR set to: 61
 11572                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 11573  00531A  0139               	movlb	57	; () banked
 11574  00531C  8596               	bsf	150,2,b	;volatile
 11575                           
 11576                           ; BSR set to: 57
 11577                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 11578  00531E  0012               	return		;funcret
 11579  005320                     __end_of_UART2_Initialize:
 11580                           	opt callstack 0
 11581                           
 11582 ;; *************** function _UART2_SetTxInterruptHandler *****************
 11583 ;; Defined at:
 11584 ;;		line 252 in file "mcc_generated_files/uart2.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11587 ;;		 -> UART2_Transmit_ISR(1), 
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  1  [STACK] void 
 11592 ;; Registers used:
 11593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11594 ;; Tracked objects:
 11595 ;;		On entry : 3F/39
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11603 ;;Total ram usage:        0 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    3
 11606 ;; This function calls:
 11607 ;;		Nothing
 11608 ;; This function is called by:
 11609 ;;		_UART2_Initialize
 11610 ;; This function uses a reentrant model
 11611 ;;
 11612                           
 11613                           	psect	text56
 11614  005982                     __ptext56:
 11615                           	opt callstack 0
 11616  005982                     _UART2_SetTxInterruptHandler:
 11617                           	opt callstack 25
 11618                           
 11619                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 11620                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11621                           
 11622                           ; BSR set to: 57
 11623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11624                           ;incstack = 0
 11625  005982  50E1               	movf	fsr1l,w,c
 11626  005984  0FFD               	addlw	-3
 11627  005986  6ED9               	movwf	fsr2l,c
 11628  005988  50E2               	movf	fsr1h,w,c
 11629  00598A  6EDA               	movwf	fsr2h,c
 11630  00598C  0EFF               	movlw	255
 11631  00598E  22DA               	addwfc	fsr2h,f,c
 11632  005990  006F FF78  F013    	movff	postinc2,_UART2_TxInterruptHandler
 11633  005996  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler+1
 11634  00599C  006F FF74  F015    	movff	postdec2,_UART2_TxInterruptHandler+2
 11635                           
 11636                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11637  0059A2  52E5               	movf	postdec1,f,c
 11638  0059A4  52E5               	movf	postdec1,f,c
 11639  0059A6  52E5               	movf	postdec1,f,c
 11640  0059A8  0012               	return		;funcret
 11641  0059AA                     __end_of_UART2_SetTxInterruptHandler:
 11642                           	opt callstack 0
 11643                           
 11644 ;; *************** function _UART2_SetRxInterruptHandler *****************
 11645 ;; Defined at:
 11646 ;;		line 248 in file "mcc_generated_files/uart2.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11649 ;;		 -> UART2_Receive_ISR(1), 
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;		None
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  1  [STACK] void 
 11654 ;; Registers used:
 11655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11656 ;; Tracked objects:
 11657 ;;		On entry : 3F/39
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11665 ;;Total ram usage:        0 bytes
 11666 ;; Hardware stack levels used:    1
 11667 ;; Hardware stack levels required when called:    3
 11668 ;; This function calls:
 11669 ;;		Nothing
 11670 ;; This function is called by:
 11671 ;;		_UART2_Initialize
 11672 ;; This function uses a reentrant model
 11673 ;;
 11674                           
 11675                           	psect	text57
 11676  0059AA                     __ptext57:
 11677                           	opt callstack 0
 11678  0059AA                     _UART2_SetRxInterruptHandler:
 11679                           	opt callstack 25
 11680                           
 11681                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 11682                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11683                           
 11684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11685                           ;incstack = 0
 11686  0059AA  50E1               	movf	fsr1l,w,c
 11687  0059AC  0FFD               	addlw	-3
 11688  0059AE  6ED9               	movwf	fsr2l,c
 11689  0059B0  50E2               	movf	fsr1h,w,c
 11690  0059B2  6EDA               	movwf	fsr2h,c
 11691  0059B4  0EFF               	movlw	255
 11692  0059B6  22DA               	addwfc	fsr2h,f,c
 11693  0059B8  006F FF78  F016    	movff	postinc2,_UART2_RxInterruptHandler
 11694  0059BE  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler+1
 11695  0059C4  006F FF74  F018    	movff	postdec2,_UART2_RxInterruptHandler+2
 11696                           
 11697                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11698  0059CA  52E5               	movf	postdec1,f,c
 11699  0059CC  52E5               	movf	postdec1,f,c
 11700  0059CE  52E5               	movf	postdec1,f,c
 11701  0059D0  0012               	return		;funcret
 11702  0059D2                     __end_of_UART2_SetRxInterruptHandler:
 11703                           	opt callstack 0
 11704                           
 11705 ;; *************** function _UART1_Initialize *****************
 11706 ;; Defined at:
 11707 ;;		line 78 in file "mcc_generated_files/uart1.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;		None
 11710 ;; Auto vars:     Size  Location     Type
 11711 ;;		None
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  1  [STACK] void 
 11714 ;; Registers used:
 11715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11716 ;; Tracked objects:
 11717 ;;		On entry : 3F/3C
 11718 ;;		On exit  : 3F/39
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11725 ;;Total ram usage:        0 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; Hardware stack levels required when called:    4
 11728 ;; This function calls:
 11729 ;;		_UART1_SetRxInterruptHandler
 11730 ;;		_UART1_SetTxInterruptHandler
 11731 ;; This function is called by:
 11732 ;;		_SYSTEM_Initialize
 11733 ;; This function uses a reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text58
 11737  0051FC                     __ptext58:
 11738                           	opt callstack 0
 11739  0051FC                     _UART1_Initialize:
 11740                           	opt callstack 25
 11741                           
 11742                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 11743                           
 11744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11745                           ;incstack = 0
 11746  0051FC  0139               	movlb	57	; () banked
 11747  0051FE  9793               	bcf	147,3,b	;volatile
 11748                           
 11749                           ; BSR set to: 57
 11750                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 11751  005200  0EF0               	movlw	low _UART1_Receive_ISR
 11752  005202  6EE6               	movwf	postinc1,c
 11753  005204  0E5C               	movlw	high _UART1_Receive_ISR
 11754  005206  6EE6               	movwf	postinc1,c
 11755  005208  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 11756  00520A  6EE6               	movwf	postinc1,c
 11757  00520C  ECFD  F02C         	call	_UART1_SetRxInterruptHandler	;wreg free
 11758                           
 11759                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 11760  005210  0139               	movlb	57	; () banked
 11761  005212  9993               	bcf	147,4,b	;volatile
 11762                           
 11763                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 11764  005214  0E0A               	movlw	low _UART1_Transmit_ISR
 11765  005216  6EE6               	movwf	postinc1,c
 11766  005218  0E58               	movlw	high _UART1_Transmit_ISR
 11767  00521A  6EE6               	movwf	postinc1,c
 11768  00521C  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 11769  00521E  6EE6               	movwf	postinc1,c
 11770  005220  ECE9  F02C         	call	_UART1_SetTxInterruptHandler	;wreg free
 11771                           
 11772                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 11773  005224  013D               	movlb	61	; () banked
 11774  005226  6BEC               	clrf	236,b	;volatile
 11775                           
 11776                           ; BSR set to: 61
 11777                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 11778  005228  6BED               	clrf	237,b	;volatile
 11779                           
 11780                           ; BSR set to: 61
 11781                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 11782  00522A  6BEE               	clrf	238,b	;volatile
 11783                           
 11784                           ; BSR set to: 61
 11785                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 11786  00522C  6BEF               	clrf	239,b	;volatile
 11787                           
 11788                           ; BSR set to: 61
 11789                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 11790  00522E  6BF0               	clrf	240,b	;volatile
 11791                           
 11792                           ; BSR set to: 61
 11793                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 11794  005230  6BF1               	clrf	241,b	;volatile
 11795                           
 11796                           ; BSR set to: 61
 11797                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 11798  005232  0EB0               	movlw	176
 11799  005234  6FF2               	movwf	242,b	;volatile
 11800                           
 11801                           ; BSR set to: 61
 11802                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 11803  005236  0E80               	movlw	128
 11804  005238  6FF3               	movwf	243,b	;volatile
 11805                           
 11806                           ; BSR set to: 61
 11807                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 11808  00523A  6BF4               	clrf	244,b	;volatile
 11809                           
 11810                           ; BSR set to: 61
 11811                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 11812  00523C  0E82               	movlw	130
 11813  00523E  6FF5               	movwf	245,b	;volatile
 11814                           
 11815                           ; BSR set to: 61
 11816                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 11817  005240  0E06               	movlw	6
 11818  005242  6FF6               	movwf	246,b	;volatile
 11819                           
 11820                           ; BSR set to: 61
 11821                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 11822  005244  6BF7               	clrf	247,b	;volatile
 11823                           
 11824                           ; BSR set to: 61
 11825                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 11826  005246  6BF8               	clrf	248,b	;volatile
 11827                           
 11828                           ; BSR set to: 61
 11829                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 11830  005248  6BF9               	clrf	249,b	;volatile
 11831                           
 11832                           ; BSR set to: 61
 11833                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 11834  00524A  6BFA               	clrf	250,b	;volatile
 11835                           
 11836                           ; BSR set to: 61
 11837                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 11838  00524C  6A3C               	clrf	_uart1TxHead,c	;volatile
 11839                           
 11840                           ; BSR set to: 61
 11841                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 11842  00524E  6A3B               	clrf	_uart1TxTail,c	;volatile
 11843                           
 11844                           ; BSR set to: 61
 11845                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 11846  005250  0E40               	movlw	64
 11847  005252  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 11848                           
 11849                           ; BSR set to: 61
 11850                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 11851  005254  6A39               	clrf	_uart1RxHead,c	;volatile
 11852                           
 11853                           ; BSR set to: 61
 11854                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 11855  005256  6A38               	clrf	_uart1RxTail,c	;volatile
 11856                           
 11857                           ; BSR set to: 61
 11858                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 11859  005258  6A37               	clrf	_uart1RxCount,c	;volatile
 11860                           
 11861                           ; BSR set to: 61
 11862                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 11863  00525A  0139               	movlb	57	; () banked
 11864  00525C  8793               	bsf	147,3,b	;volatile
 11865                           
 11866                           ; BSR set to: 57
 11867                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 11868  00525E  0012               	return		;funcret
 11869  005260                     __end_of_UART1_Initialize:
 11870                           	opt callstack 0
 11871                           
 11872 ;; *************** function _UART1_SetTxInterruptHandler *****************
 11873 ;; Defined at:
 11874 ;;		line 244 in file "mcc_generated_files/uart1.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11877 ;;		 -> UART1_Transmit_ISR(1), 
 11878 ;; Auto vars:     Size  Location     Type
 11879 ;;		None
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  1  [STACK] void 
 11882 ;; Registers used:
 11883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11884 ;; Tracked objects:
 11885 ;;		On entry : 3F/39
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11893 ;;Total ram usage:        0 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; Hardware stack levels required when called:    3
 11896 ;; This function calls:
 11897 ;;		Nothing
 11898 ;; This function is called by:
 11899 ;;		_UART1_Initialize
 11900 ;; This function uses a reentrant model
 11901 ;;
 11902                           
 11903                           	psect	text59
 11904  0059D2                     __ptext59:
 11905                           	opt callstack 0
 11906  0059D2                     _UART1_SetTxInterruptHandler:
 11907                           	opt callstack 25
 11908                           
 11909                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 11910                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11911                           
 11912                           ; BSR set to: 57
 11913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11914                           ;incstack = 0
 11915  0059D2  50E1               	movf	fsr1l,w,c
 11916  0059D4  0FFD               	addlw	-3
 11917  0059D6  6ED9               	movwf	fsr2l,c
 11918  0059D8  50E2               	movf	fsr1h,w,c
 11919  0059DA  6EDA               	movwf	fsr2h,c
 11920  0059DC  0EFF               	movlw	255
 11921  0059DE  22DA               	addwfc	fsr2h,f,c
 11922  0059E0  006F FF78  F00D    	movff	postinc2,_UART1_TxInterruptHandler
 11923  0059E6  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler+1
 11924  0059EC  006F FF74  F00F    	movff	postdec2,_UART1_TxInterruptHandler+2
 11925                           
 11926                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11927  0059F2  52E5               	movf	postdec1,f,c
 11928  0059F4  52E5               	movf	postdec1,f,c
 11929  0059F6  52E5               	movf	postdec1,f,c
 11930  0059F8  0012               	return		;funcret
 11931  0059FA                     __end_of_UART1_SetTxInterruptHandler:
 11932                           	opt callstack 0
 11933                           
 11934 ;; *************** function _UART1_SetRxInterruptHandler *****************
 11935 ;; Defined at:
 11936 ;;		line 239 in file "mcc_generated_files/uart1.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11939 ;;		 -> UART1_Receive_ISR(1), 
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;		None
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1  [STACK] void 
 11944 ;; Registers used:
 11945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11946 ;; Tracked objects:
 11947 ;;		On entry : 3F/39
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11955 ;;Total ram usage:        0 bytes
 11956 ;; Hardware stack levels used:    1
 11957 ;; Hardware stack levels required when called:    3
 11958 ;; This function calls:
 11959 ;;		Nothing
 11960 ;; This function is called by:
 11961 ;;		_UART1_Initialize
 11962 ;; This function uses a reentrant model
 11963 ;;
 11964                           
 11965                           	psect	text60
 11966  0059FA                     __ptext60:
 11967                           	opt callstack 0
 11968  0059FA                     _UART1_SetRxInterruptHandler:
 11969                           	opt callstack 25
 11970                           
 11971                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 11972                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11973                           
 11974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11975                           ;incstack = 0
 11976  0059FA  50E1               	movf	fsr1l,w,c
 11977  0059FC  0FFD               	addlw	-3
 11978  0059FE  6ED9               	movwf	fsr2l,c
 11979  005A00  50E2               	movf	fsr1h,w,c
 11980  005A02  6EDA               	movwf	fsr2h,c
 11981  005A04  0EFF               	movlw	255
 11982  005A06  22DA               	addwfc	fsr2h,f,c
 11983  005A08  006F FF78  F010    	movff	postinc2,_UART1_RxInterruptHandler
 11984  005A0E  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler+1
 11985  005A14  006F FF74  F012    	movff	postdec2,_UART1_RxInterruptHandler+2
 11986                           
 11987                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11988  005A1A  52E5               	movf	postdec1,f,c
 11989  005A1C  52E5               	movf	postdec1,f,c
 11990  005A1E  52E5               	movf	postdec1,f,c
 11991  005A20  0012               	return		;funcret
 11992  005A22                     __end_of_UART1_SetRxInterruptHandler:
 11993                           	opt callstack 0
 11994                           
 11995 ;; *************** function _TMR6_Initialize *****************
 11996 ;; Defined at:
 11997 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;		None
 12000 ;; Auto vars:     Size  Location     Type
 12001 ;;		None
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  1  [STACK] void 
 12004 ;; Registers used:
 12005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12006 ;; Tracked objects:
 12007 ;;		On entry : 3F/39
 12008 ;;		On exit  : 0/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12015 ;;Total ram usage:        0 bytes
 12016 ;; Hardware stack levels used:    1
 12017 ;; Hardware stack levels required when called:    4
 12018 ;; This function calls:
 12019 ;;		_TMR6_SetInterruptHandler
 12020 ;; This function is called by:
 12021 ;;		_SYSTEM_Initialize
 12022 ;; This function uses a reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text61
 12026  005A22                     __ptext61:
 12027                           	opt callstack 0
 12028  005A22                     _TMR6_Initialize:
 12029                           	opt callstack 25
 12030                           
 12031                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 12032                           
 12033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12034                           ;incstack = 0
 12035  005A22  0E01               	movlw	1
 12036  005A24  6E96               	movwf	16278,c	;volatile
 12037                           
 12038                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 12039  005A26  6A95               	clrf	16277,c	;volatile
 12040                           
 12041                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 12042  005A28  6A97               	clrf	16279,c	;volatile
 12043                           
 12044                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 12045  005A2A  0E03               	movlw	3
 12046  005A2C  6E93               	movwf	16275,c	;volatile
 12047                           
 12048                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 12049  005A2E  6A92               	clrf	16274,c	;volatile
 12050                           
 12051                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 12052  005A30  0139               	movlb	57	; () banked
 12053  005A32  91A9               	bcf	169,0,b	;volatile
 12054                           
 12055                           ; BSR set to: 57
 12056                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 12057  005A34  8199               	bsf	153,0,b	;volatile
 12058                           
 12059                           ; BSR set to: 57
 12060                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 12061  005A36  0E20               	movlw	low _TMR6_DefaultInterruptHandler
 12062  005A38  6EE6               	movwf	postinc1,c
 12063  005A3A  0E53               	movlw	high _TMR6_DefaultInterruptHandler
 12064  005A3C  6EE6               	movwf	postinc1,c
 12065  005A3E  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12066  005A40  6EE6               	movwf	postinc1,c
 12067  005A42  EC25  F02D         	call	_TMR6_SetInterruptHandler	;wreg free
 12068                           
 12069                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 12070  005A46  6894               	setf	16276,c	;volatile
 12071                           
 12072                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12073  005A48  0012               	return		;funcret
 12074  005A4A                     __end_of_TMR6_Initialize:
 12075                           	opt callstack 0
 12076                           
 12077 ;; *************** function _TMR6_SetInterruptHandler *****************
 12078 ;; Defined at:
 12079 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 12080 ;; Parameters:    Size  Location     Type
 12081 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12082 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 12083 ;; Auto vars:     Size  Location     Type
 12084 ;;		None
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  1  [STACK] void 
 12087 ;; Registers used:
 12088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12089 ;; Tracked objects:
 12090 ;;		On entry : 3F/39
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12098 ;;Total ram usage:        0 bytes
 12099 ;; Hardware stack levels used:    1
 12100 ;; Hardware stack levels required when called:    3
 12101 ;; This function calls:
 12102 ;;		Nothing
 12103 ;; This function is called by:
 12104 ;;		_TMR6_Initialize
 12105 ;; This function uses a reentrant model
 12106 ;;
 12107                           
 12108                           	psect	text62
 12109  005A4A                     __ptext62:
 12110                           	opt callstack 0
 12111  005A4A                     _TMR6_SetInterruptHandler:
 12112                           	opt callstack 25
 12113                           
 12114                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 12115                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12116                           
 12117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12118                           ;incstack = 0
 12119  005A4A  50E1               	movf	fsr1l,w,c
 12120  005A4C  0FFD               	addlw	-3
 12121  005A4E  6ED9               	movwf	fsr2l,c
 12122  005A50  50E2               	movf	fsr1h,w,c
 12123  005A52  6EDA               	movwf	fsr2h,c
 12124  005A54  0EFF               	movlw	255
 12125  005A56  22DA               	addwfc	fsr2h,f,c
 12126  005A58  006F FF78  F007    	movff	postinc2,_TMR6_InterruptHandler
 12127  005A5E  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler+1
 12128  005A64  006F FF74  F009    	movff	postdec2,_TMR6_InterruptHandler+2
 12129                           
 12130                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12131  005A6A  52E5               	movf	postdec1,f,c
 12132  005A6C  52E5               	movf	postdec1,f,c
 12133  005A6E  52E5               	movf	postdec1,f,c
 12134  005A70  0012               	return		;funcret
 12135  005A72                     __end_of_TMR6_SetInterruptHandler:
 12136                           	opt callstack 0
 12137                           
 12138 ;; *************** function _TMR5_Initialize *****************
 12139 ;; Defined at:
 12140 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 12141 ;; Parameters:    Size  Location     Type
 12142 ;;		None
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;		None
 12145 ;; Return value:  Size  Location     Type
 12146 ;;                  1  [STACK] void 
 12147 ;; Registers used:
 12148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12149 ;; Tracked objects:
 12150 ;;		On entry : 3F/3C
 12151 ;;		On exit  : 0/0
 12152 ;;		Unchanged: 0/0
 12153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12158 ;;Total ram usage:        0 bytes
 12159 ;; Hardware stack levels used:    1
 12160 ;; Hardware stack levels required when called:    4
 12161 ;; This function calls:
 12162 ;;		_TMR5_SetInterruptHandler
 12163 ;; This function is called by:
 12164 ;;		_SYSTEM_Initialize
 12165 ;; This function uses a reentrant model
 12166 ;;
 12167                           
 12168                           	psect	text63
 12169  005558                     __ptext63:
 12170                           	opt callstack 0
 12171  005558                     _TMR5_Initialize:
 12172                           	opt callstack 25
 12173                           
 12174                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 12175                           
 12176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12177                           ;incstack = 0
 12178  005558  6A9B               	clrf	16283,c	;volatile
 12179                           
 12180                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 12181  00555A  6A9C               	clrf	16284,c	;volatile
 12182                           
 12183                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x01;
 12184  00555C  0E01               	movlw	1
 12185  00555E  6E9D               	movwf	16285,c	;volatile
 12186                           
 12187                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x63;
 12188  005560  0E63               	movlw	99
 12189  005562  6E99               	movwf	16281,c	;volatile
 12190                           
 12191                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0xC0;
 12192  005564  0EC0               	movlw	192
 12193  005566  6E98               	movwf	16280,c	;volatile
 12194                           
 12195                           ;mcc_generated_files/tmr5.c: 85:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 12196  005568  5098               	movf	16280,w,c	;volatile
 12197  00556A  006F FE64  F03D    	movff	16281,btemp	;volatile
 12198  005570  6A3E               	clrf	btemp+1,c
 12199  005572  0060  F0F4  F03E   	movff	btemp,btemp+1
 12200  005578  6A3D               	clrf	btemp,c
 12201  00557A  103D               	iorwf	btemp,w,c
 12202  00557C  6E2E               	movwf	_timer5ReloadVal,c	;volatile
 12203  00557E  503E               	movf	btemp+1,w,c
 12204  005580  6E2F               	movwf	_timer5ReloadVal+1,c	;volatile
 12205                           
 12206                           ;mcc_generated_files/tmr5.c: 88:     PIR8bits.TMR5IF = 0;
 12207  005582  0139               	movlb	57	; () banked
 12208  005584  9DA8               	bcf	168,6,b	;volatile
 12209                           
 12210                           ; BSR set to: 57
 12211                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 12212  005586  8D98               	bsf	152,6,b	;volatile
 12213                           
 12214                           ; BSR set to: 57
 12215                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 12216  005588  0EAE               	movlw	low _TMR5_DefaultInterruptHandler
 12217  00558A  6EE6               	movwf	postinc1,c
 12218  00558C  0E5E               	movlw	high _TMR5_DefaultInterruptHandler
 12219  00558E  6EE6               	movwf	postinc1,c
 12220  005590  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12221  005592  6EE6               	movwf	postinc1,c
 12222  005594  EC39  F02D         	call	_TMR5_SetInterruptHandler	;wreg free
 12223                           
 12224                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x31;
 12225  005598  0E31               	movlw	49
 12226  00559A  6E9A               	movwf	16282,c	;volatile
 12227                           
 12228                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12229  00559C  0012               	return		;funcret
 12230  00559E                     __end_of_TMR5_Initialize:
 12231                           	opt callstack 0
 12232                           
 12233 ;; *************** function _TMR5_SetInterruptHandler *****************
 12234 ;; Defined at:
 12235 ;;		line 193 in file "mcc_generated_files/tmr5.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12238 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;		None
 12241 ;; Return value:  Size  Location     Type
 12242 ;;                  1  [STACK] void 
 12243 ;; Registers used:
 12244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12245 ;; Tracked objects:
 12246 ;;		On entry : 3F/39
 12247 ;;		On exit  : 0/0
 12248 ;;		Unchanged: 0/0
 12249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12254 ;;Total ram usage:        0 bytes
 12255 ;; Hardware stack levels used:    1
 12256 ;; Hardware stack levels required when called:    3
 12257 ;; This function calls:
 12258 ;;		Nothing
 12259 ;; This function is called by:
 12260 ;;		_TMR5_Initialize
 12261 ;; This function uses a reentrant model
 12262 ;;
 12263                           
 12264                           	psect	text64
 12265  005A72                     __ptext64:
 12266                           	opt callstack 0
 12267  005A72                     _TMR5_SetInterruptHandler:
 12268                           	opt callstack 25
 12269                           
 12270                           ;mcc_generated_files/tmr5.c: 194:     TMR5_InterruptHandler = InterruptHandler;
 12271                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12272                           
 12273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12274                           ;incstack = 0
 12275  005A72  50E1               	movf	fsr1l,w,c
 12276  005A74  0FFD               	addlw	-3
 12277  005A76  6ED9               	movwf	fsr2l,c
 12278  005A78  50E2               	movf	fsr1h,w,c
 12279  005A7A  6EDA               	movwf	fsr2h,c
 12280  005A7C  0EFF               	movlw	255
 12281  005A7E  22DA               	addwfc	fsr2h,f,c
 12282  005A80  006F FF78  F004    	movff	postinc2,_TMR5_InterruptHandler
 12283  005A86  006F FF78  F005    	movff	postinc2,_TMR5_InterruptHandler+1
 12284  005A8C  006F FF74  F006    	movff	postdec2,_TMR5_InterruptHandler+2
 12285                           
 12286                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12287  005A92  52E5               	movf	postdec1,f,c
 12288  005A94  52E5               	movf	postdec1,f,c
 12289  005A96  52E5               	movf	postdec1,f,c
 12290  005A98  0012               	return		;funcret
 12291  005A9A                     __end_of_TMR5_SetInterruptHandler:
 12292                           	opt callstack 0
 12293                           
 12294 ;; *************** function _SPI1_Initialize *****************
 12295 ;; Defined at:
 12296 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;		None
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;		None
 12301 ;; Return value:  Size  Location     Type
 12302 ;;                  1  [STACK] void 
 12303 ;; Registers used:
 12304 ;;		wreg, status,2
 12305 ;; Tracked objects:
 12306 ;;		On entry : 3F/39
 12307 ;;		On exit  : 3F/3D
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12314 ;;Total ram usage:        0 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:    3
 12317 ;; This function calls:
 12318 ;;		Nothing
 12319 ;; This function is called by:
 12320 ;;		_SYSTEM_Initialize
 12321 ;; This function uses a reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text65
 12325  005DBC                     __ptext65:
 12326                           	opt callstack 0
 12327  005DBC                     _SPI1_Initialize:
 12328                           	opt callstack 26
 12329                           
 12330                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 12331                           
 12332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12333                           ;incstack = 0
 12334  005DBC  0E40               	movlw	64
 12335  005DBE  013D               	movlb	61	; () banked
 12336  005DC0  6F15               	movwf	21,b	;volatile
 12337                           
 12338                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 12339  005DC2  0E03               	movlw	3
 12340  005DC4  6F16               	movwf	22,b	;volatile
 12341                           
 12342                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 12343  005DC6  0E4F               	movlw	79
 12344  005DC8  6F19               	movwf	25,b	;volatile
 12345                           
 12346                           ; BSR set to: 61
 12347                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 12348  005DCA  6B1C               	clrf	28,b	;volatile
 12349                           
 12350                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 12351  005DCC  0E83               	movlw	131
 12352  005DCE  6F14               	movwf	20,b	;volatile
 12353                           
 12354                           ; BSR set to: 61
 12355                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12356  005DD0  0012               	return		;funcret
 12357  005DD2                     __end_of_SPI1_Initialize:
 12358                           	opt callstack 0
 12359                           
 12360 ;; *************** function _PMD_Initialize *****************
 12361 ;; Defined at:
 12362 ;;		line 88 in file "mcc_generated_files/mcc.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;		None
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  1  [STACK] void 
 12369 ;; Registers used:
 12370 ;;		None
 12371 ;; Tracked objects:
 12372 ;;		On entry : 3F/39
 12373 ;;		On exit  : 3F/39
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12380 ;;Total ram usage:        0 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; Hardware stack levels required when called:    3
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		_SYSTEM_Initialize
 12387 ;; This function uses a reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text66
 12391  005DE8                     __ptext66:
 12392                           	opt callstack 0
 12393  005DE8                     _PMD_Initialize:
 12394                           	opt callstack 26
 12395                           
 12396                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 12397                           
 12398                           ; BSR set to: 61
 12399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12400                           ;incstack = 0
 12401  005DE8  0139               	movlb	57	; () banked
 12402  005DEA  6BC0               	clrf	192,b	;volatile
 12403                           
 12404                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 12405  005DEC  6BC1               	clrf	193,b	;volatile
 12406                           
 12407                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 12408  005DEE  6BC2               	clrf	194,b	;volatile
 12409                           
 12410                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 12411  005DF0  6BC3               	clrf	195,b	;volatile
 12412                           
 12413                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 12414  005DF2  6BC4               	clrf	196,b	;volatile
 12415                           
 12416                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 12417  005DF4  6BC5               	clrf	197,b	;volatile
 12418                           
 12419                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 12420  005DF6  6BC6               	clrf	198,b	;volatile
 12421                           
 12422                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 12423  005DF8  6BC7               	clrf	199,b	;volatile
 12424                           
 12425                           ; BSR set to: 57
 12426                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12427  005DFA  0012               	return		;funcret
 12428  005DFC                     __end_of_PMD_Initialize:
 12429                           	opt callstack 0
 12430                           
 12431 ;; *************** function _PIN_MANAGER_Initialize *****************
 12432 ;; Defined at:
 12433 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;		None
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;		None
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  1  [STACK] void 
 12440 ;; Registers used:
 12441 ;;		wreg, status,2
 12442 ;; Tracked objects:
 12443 ;;		On entry : 3F/39
 12444 ;;		On exit  : 3F/3A
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12451 ;;Total ram usage:        0 bytes
 12452 ;; Hardware stack levels used:    1
 12453 ;; Hardware stack levels required when called:    3
 12454 ;; This function calls:
 12455 ;;		Nothing
 12456 ;; This function is called by:
 12457 ;;		_SYSTEM_Initialize
 12458 ;; This function uses a reentrant model
 12459 ;;
 12460                           
 12461                           	psect	text67
 12462  004CF2                     __ptext67:
 12463                           	opt callstack 0
 12464  004CF2                     _PIN_MANAGER_Initialize:
 12465                           	opt callstack 26
 12466                           
 12467                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 12468                           
 12469                           ; BSR set to: 57
 12470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12471                           ;incstack = 0
 12472  004CF2  0E07               	movlw	7
 12473  004CF4  6EBE               	movwf	16318,c	;volatile
 12474                           
 12475                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 12476  004CF6  6ABD               	clrf	16317,c	;volatile
 12477                           
 12478                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 12479  004CF8  6ABA               	clrf	16314,c	;volatile
 12480                           
 12481                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 12482  004CFA  6ABF               	clrf	16319,c	;volatile
 12483                           
 12484                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 12485  004CFC  6ABB               	clrf	16315,c	;volatile
 12486                           
 12487                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 12488  004CFE  0E06               	movlw	6
 12489  004D00  6EBC               	movwf	16316,c	;volatile
 12490                           
 12491                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 12492  004D02  6AC6               	clrf	16326,c	;volatile
 12493                           
 12494                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 12495  004D04  68C7               	setf	16327,c	;volatile
 12496                           
 12497                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 12498  004D06  0E8F               	movlw	143
 12499  004D08  6EC2               	movwf	16322,c	;volatile
 12500                           
 12501                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 12502  004D0A  0EBF               	movlw	191
 12503  004D0C  6EC3               	movwf	16323,c	;volatile
 12504                           
 12505                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 12506  004D0E  0E91               	movlw	145
 12507  004D10  6EC4               	movwf	16324,c	;volatile
 12508                           
 12509                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFF;
 12510  004D12  68C5               	setf	16325,c	;volatile
 12511                           
 12512                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xFF;
 12513  004D14  013A               	movlb	58	; () banked
 12514  004D16  6970               	setf	112,b	;volatile
 12515                           
 12516                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 12517  004D18  0E01               	movlw	1
 12518  004D1A  6F60               	movwf	96,b	;volatile
 12519                           
 12520                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 12521  004D1C  0E38               	movlw	56
 12522  004D1E  6F50               	movwf	80,b	;volatile
 12523                           
 12524                           ; BSR set to: 58
 12525                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 12526  004D20  6B80               	clrf	128,b	;volatile
 12527                           
 12528                           ; BSR set to: 58
 12529                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 12530  004D22  6990               	setf	144,b	;volatile
 12531                           
 12532                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 12533  004D24  0E8F               	movlw	143
 12534  004D26  6F40               	movwf	64,b	;volatile
 12535                           
 12536                           ; BSR set to: 58
 12537                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x00;
 12538  004D28  6B71               	clrf	113,b	;volatile
 12539                           
 12540                           ; BSR set to: 58
 12541                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 12542  004D2A  6B91               	clrf	145,b	;volatile
 12543                           
 12544                           ; BSR set to: 58
 12545                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 12546  004D2C  6B81               	clrf	129,b	;volatile
 12547                           
 12548                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 12549  004D2E  0E87               	movlw	135
 12550  004D30  6F51               	movwf	81,b	;volatile
 12551                           
 12552                           ; BSR set to: 58
 12553                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 12554  004D32  6B41               	clrf	65,b	;volatile
 12555                           
 12556                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 12557  004D34  0E90               	movlw	144
 12558  004D36  6F61               	movwf	97,b	;volatile
 12559                           
 12560                           ; BSR set to: 58
 12561                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 12562  004D38  6B82               	clrf	130,b	;volatile
 12563                           
 12564                           ; BSR set to: 58
 12565                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 12566  004D3A  6B92               	clrf	146,b	;volatile
 12567                           
 12568                           ; BSR set to: 58
 12569                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 12570  004D3C  6B42               	clrf	66,b	;volatile
 12571                           
 12572                           ; BSR set to: 58
 12573                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 12574  004D3E  6B52               	clrf	82,b	;volatile
 12575                           
 12576                           ; BSR set to: 58
 12577                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 12578  004D40  6B62               	clrf	98,b	;volatile
 12579                           
 12580                           ; BSR set to: 58
 12581                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 12582  004D42  6B72               	clrf	114,b	;volatile
 12583                           
 12584                           ; BSR set to: 58
 12585                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 12586  004D44  6943               	setf	67,b	;volatile
 12587                           
 12588                           ; BSR set to: 58
 12589                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 12590  004D46  6953               	setf	83,b	;volatile
 12591                           
 12592                           ; BSR set to: 58
 12593                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 12594  004D48  6963               	setf	99,b	;volatile
 12595                           
 12596                           ; BSR set to: 58
 12597                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 12598  004D4A  6973               	setf	115,b	;volatile
 12599                           
 12600                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 12601  004D4C  0E07               	movlw	7
 12602  004D4E  6F83               	movwf	131,b	;volatile
 12603                           
 12604                           ; BSR set to: 58
 12605                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 12606  004D50  6993               	setf	147,b	;volatile
 12607                           
 12608                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 12609  004D52  0E0F               	movlw	15
 12610  004D54  6FE8               	movwf	232,b	;volatile
 12611                           
 12612                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 12613  004D56  0E16               	movlw	22
 12614  004D58  6F0E               	movwf	14,b	;volatile
 12615                           
 12616                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 12617  004D5A  0E1E               	movlw	30
 12618  004D5C  6F13               	movwf	19,b	;volatile
 12619                           
 12620                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 12621  004D5E  0E08               	movlw	8
 12622  004D60  6FC0               	movwf	192,b	;volatile
 12623                           
 12624                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 12625  004D62  0E0A               	movlw	10
 12626  004D64  6FC2               	movwf	194,b	;volatile
 12627                           
 12628                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 12629  004D66  0E09               	movlw	9
 12630  004D68  6FC1               	movwf	193,b	;volatile
 12631                           
 12632                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 12633  004D6A  0E17               	movlw	23
 12634  004D6C  6FE5               	movwf	229,b	;volatile
 12635                           
 12636                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 12637  004D6E  0E13               	movlw	19
 12638  004D70  6FDE               	movwf	222,b	;volatile
 12639                           
 12640                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 12641  004D72  0E01               	movlw	1
 12642  004D74  6F04               	movwf	4,b	;volatile
 12643                           
 12644                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 12645  004D76  0E26               	movlw	38
 12646  004D78  6F05               	movwf	5,b	;volatile
 12647                           
 12648                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 12649  004D7A  0E28               	movlw	40
 12650  004D7C  6F06               	movwf	6,b	;volatile
 12651                           
 12652                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 12653  004D7E  0E1F               	movlw	31
 12654  004D80  6F15               	movwf	21,b	;volatile
 12655                           
 12656                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 12657  004D82  0E13               	movlw	19
 12658  004D84  6F16               	movwf	22,b	;volatile
 12659                           
 12660                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 12661  004D86  0E14               	movlw	20
 12662  004D88  6FDF               	movwf	223,b	;volatile
 12663                           
 12664                           ; BSR set to: 58
 12665                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 12666  004D8A  0012               	return		;funcret
 12667  004D8C                     __end_of_PIN_MANAGER_Initialize:
 12668                           	opt callstack 0
 12669                           
 12670 ;; *************** function _OSCILLATOR_Initialize *****************
 12671 ;; Defined at:
 12672 ;;		line 70 in file "mcc_generated_files/mcc.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;		None
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;		None
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  1  [STACK] void 
 12679 ;; Registers used:
 12680 ;;		wreg, status,2
 12681 ;; Tracked objects:
 12682 ;;		On entry : 3F/3A
 12683 ;;		On exit  : 3F/39
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12690 ;;Total ram usage:        0 bytes
 12691 ;; Hardware stack levels used:    1
 12692 ;; Hardware stack levels required when called:    3
 12693 ;; This function calls:
 12694 ;;		Nothing
 12695 ;; This function is called by:
 12696 ;;		_SYSTEM_Initialize
 12697 ;; This function uses a reentrant model
 12698 ;;
 12699                           
 12700                           	psect	text68
 12701  005DD2                     __ptext68:
 12702                           	opt callstack 0
 12703  005DD2                     _OSCILLATOR_Initialize:
 12704                           	opt callstack 26
 12705                           
 12706                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 12707                           
 12708                           ; BSR set to: 58
 12709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12710                           ;incstack = 0
 12711  005DD2  0E20               	movlw	32
 12712  005DD4  0139               	movlb	57	; () banked
 12713  005DD6  6FD9               	movwf	217,b	;volatile
 12714                           
 12715                           ; BSR set to: 57
 12716                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 12717  005DD8  6BDB               	clrf	219,b	;volatile
 12718                           
 12719                           ; BSR set to: 57
 12720                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 12721  005DDA  6BDD               	clrf	221,b	;volatile
 12722                           
 12723                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 12724  005DDC  0E02               	movlw	2
 12725  005DDE  6FDF               	movwf	223,b	;volatile
 12726                           
 12727                           ; BSR set to: 57
 12728                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 12729  005DE0  6BDE               	clrf	222,b	;volatile
 12730  005DE2                     l194:
 12731                           
 12732                           ; BSR set to: 57
 12733                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 12734  005DE2  B1DC               	btfsc	220,0,b	;volatile
 12735  005DE4  0012               	return	
 12736  005DE6  D7FD               	goto	l194
 12737  005DE8                     __end_of_OSCILLATOR_Initialize:
 12738                           	opt callstack 0
 12739                           
 12740 ;; *************** function _NCO1_Initialize *****************
 12741 ;; Defined at:
 12742 ;;		line 58 in file "mcc_generated_files/nco1.c"
 12743 ;; Parameters:    Size  Location     Type
 12744 ;;		None
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;		None
 12747 ;; Return value:  Size  Location     Type
 12748 ;;                  1  [STACK] void 
 12749 ;; Registers used:
 12750 ;;		wreg, status,2
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/39
 12753 ;;		On exit  : 3F/3F
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12760 ;;Total ram usage:        0 bytes
 12761 ;; Hardware stack levels used:    1
 12762 ;; Hardware stack levels required when called:    3
 12763 ;; This function calls:
 12764 ;;		Nothing
 12765 ;; This function is called by:
 12766 ;;		_SYSTEM_Initialize
 12767 ;; This function uses a reentrant model
 12768 ;;
 12769                           
 12770                           	psect	text69
 12771  005D6A                     __ptext69:
 12772                           	opt callstack 0
 12773  005D6A                     _NCO1_Initialize:
 12774                           	opt callstack 26
 12775                           
 12776                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 12777                           
 12778                           ; BSR set to: 57
 12779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12780                           ;incstack = 0
 12781  005D6A  013F               	movlb	63	; () banked
 12782  005D6C  6B3E               	clrf	62,b	;volatile
 12783                           
 12784                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 12785  005D6E  6B3F               	clrf	63,b	;volatile
 12786                           
 12787                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 12788  005D70  6B3A               	clrf	58,b	;volatile
 12789                           
 12790                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 12791  005D72  6B39               	clrf	57,b	;volatile
 12792                           
 12793                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 12794  005D74  6B38               	clrf	56,b	;volatile
 12795                           
 12796                           ; BSR set to: 63
 12797                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 12798  005D76  0E06               	movlw	6
 12799  005D78  6F3D               	movwf	61,b	;volatile
 12800                           
 12801                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 12802  005D7A  0EC7               	movlw	199
 12803  005D7C  6F3C               	movwf	60,b	;volatile
 12804                           
 12805                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 12806  005D7E  0EAE               	movlw	174
 12807  005D80  6F3B               	movwf	59,b	;volatile
 12808                           
 12809                           ; BSR set to: 63
 12810                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 12811  005D82  8F3E               	bsf	62,7,b	;volatile
 12812                           
 12813                           ; BSR set to: 63
 12814                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12815  005D84  0012               	return		;funcret
 12816  005D86                     __end_of_NCO1_Initialize:
 12817                           	opt callstack 0
 12818                           
 12819 ;; *************** function _INTERRUPT_Initialize *****************
 12820 ;; Defined at:
 12821 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;		None
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;  state           1  [STACK] _Bool 
 12826 ;; Return value:  Size  Location     Type
 12827 ;;                  1  [STACK] void 
 12828 ;; Registers used:
 12829 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 12830 ;; Tracked objects:
 12831 ;;		On entry : 0/0
 12832 ;;		On exit  : 3F/39
 12833 ;;		Unchanged: 0/0
 12834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12839 ;;Total ram usage:        0 bytes
 12840 ;; Hardware stack levels used:    1
 12841 ;; Hardware stack levels required when called:    3
 12842 ;; This function calls:
 12843 ;;		Nothing
 12844 ;; This function is called by:
 12845 ;;		_SYSTEM_Initialize
 12846 ;; This function uses a reentrant model
 12847 ;;
 12848                           
 12849                           	psect	text70
 12850  005196                     __ptext70:
 12851                           	opt callstack 0
 12852  005196                     _INTERRUPT_Initialize:
 12853                           	opt callstack 0
 12854                           
 12855                           ; BSR set to: 63
 12856                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12857  005196  52E6               	movf	postinc1,f,c
 12858                           
 12859                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 12860                           
 12861                           ;incstack = 0
 12862  005198  8AD2               	bsf	16338,5,c	;volatile
 12863                           
 12864                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 12865  00519A  AED2               	btfss	16338,7,c	;volatile
 12866  00519C  D003               	goto	u3320
 12867  00519E  6A48               	clrf	btemp+11,c
 12868  0051A0  2A48               	incf	btemp+11,f,c
 12869  0051A2  D001               	goto	u3338
 12870  0051A4                     u3320:
 12871  0051A4  6A48               	clrf	btemp+11,c
 12872  0051A6                     u3338:
 12873                           
 12874                           ;stkvar	_state @ sp[(-1)+0]
 12875  0051A6  0EFF               	movlw	-1
 12876  0051A8  0060  F123  FFE3   	movff	btemp+11,plusw1
 12877                           
 12878                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 12879  0051AE  9ED2               	bcf	16338,7,c	;volatile
 12880                           
 12881                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 12882  0051B0  0E55               	movlw	85
 12883  0051B2  6ED4               	movwf	16340,c	;volatile
 12884                           
 12885                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 12886  0051B4  0EAA               	movlw	170
 12887  0051B6  6ED4               	movwf	16340,c	;volatile
 12888                           
 12889                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 12890  0051B8  90D4               	bcf	16340,0,c	;volatile
 12891                           
 12892                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 12893  0051BA  0138               	movlb	56	; () banked
 12894  0051BC  6B9F               	clrf	159,b	;volatile
 12895                           
 12896                           ; BSR set to: 56
 12897                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 12898  0051BE  6B9E               	clrf	158,b	;volatile
 12899                           
 12900                           ; BSR set to: 56
 12901                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 12902  0051C0  0E08               	movlw	8
 12903  0051C2  6F9D               	movwf	157,b	;volatile
 12904                           
 12905                           ; BSR set to: 56
 12906                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 12907  0051C4  0E55               	movlw	85
 12908  0051C6  6ED4               	movwf	16340,c	;volatile
 12909                           
 12910                           ; BSR set to: 56
 12911                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 12912  0051C8  0EAA               	movlw	170
 12913  0051CA  6ED4               	movwf	16340,c	;volatile
 12914                           
 12915                           ; BSR set to: 56
 12916                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 12917  0051CC  80D4               	bsf	16340,0,c	;volatile
 12918                           
 12919                           ; BSR set to: 56
 12920                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 12921                           ;stkvar	_state @ sp[(-1)+0]
 12922  0051CE  0EFF               	movlw	-1
 12923  0051D0  B0E3               	btfsc	plusw1,0,c
 12924  0051D2  D002               	bra	u3345
 12925  0051D4  9ED2               	bcf	16338,7,c	;volatile
 12926  0051D6  D001               	bra	u3346
 12927  0051D8                     u3345:
 12928  0051D8  8ED2               	bsf	16338,7,c	;volatile
 12929  0051DA                     u3346:
 12930                           
 12931                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 12932  0051DA  0139               	movlb	57	; () banked
 12933  0051DC  8782               	bsf	130,3,b	;volatile
 12934                           
 12935                           ; BSR set to: 57
 12936                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 12937  0051DE  8382               	bsf	130,1,b	;volatile
 12938                           
 12939                           ; BSR set to: 57
 12940                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 12941  0051E0  8182               	bsf	130,0,b	;volatile
 12942                           
 12943                           ; BSR set to: 57
 12944                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 12945  0051E2  8582               	bsf	130,2,b	;volatile
 12946                           
 12947                           ; BSR set to: 57
 12948                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 12949  0051E4  8786               	bsf	134,3,b	;volatile
 12950                           
 12951                           ; BSR set to: 57
 12952                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 12953  0051E6  8586               	bsf	134,2,b	;volatile
 12954                           
 12955                           ; BSR set to: 57
 12956                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 12957  0051E8  8983               	bsf	131,4,b	;volatile
 12958                           
 12959                           ; BSR set to: 57
 12960                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 12961  0051EA  8783               	bsf	131,3,b	;volatile
 12962                           
 12963                           ; BSR set to: 57
 12964                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 12965  0051EC  8181               	bsf	129,0,b	;volatile
 12966                           
 12967                           ; BSR set to: 57
 12968                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 12969  0051EE  8185               	bsf	133,0,b	;volatile
 12970                           
 12971                           ; BSR set to: 57
 12972                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 12973  0051F0  8B87               	bsf	135,5,b	;volatile
 12974                           
 12975                           ; BSR set to: 57
 12976                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 12977  0051F2  8189               	bsf	137,0,b	;volatile
 12978                           
 12979                           ; BSR set to: 57
 12980                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 12981  0051F4  8D88               	bsf	136,6,b	;volatile
 12982                           
 12983                           ; BSR set to: 57
 12984                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 12985  0051F6  8581               	bsf	129,2,b	;volatile
 12986                           
 12987                           ; BSR set to: 57
 12988                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 12989  0051F8  52E5               	movf	postdec1,f,c
 12990  0051FA  0012               	return		;funcret
 12991  0051FC                     __end_of_INTERRUPT_Initialize:
 12992                           	opt callstack 0
 12993                           
 12994 ;; *************** function _EXT_INT_Initialize *****************
 12995 ;; Defined at:
 12996 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;		None
 12999 ;; Auto vars:     Size  Location     Type
 13000 ;;		None
 13001 ;; Return value:  Size  Location     Type
 13002 ;;                  1  [STACK] void 
 13003 ;; Registers used:
 13004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13005 ;; Tracked objects:
 13006 ;;		On entry : 3F/3F
 13007 ;;		On exit  : 3F/39
 13008 ;;		Unchanged: 0/0
 13009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13014 ;;Total ram usage:        0 bytes
 13015 ;; Hardware stack levels used:    1
 13016 ;; Hardware stack levels required when called:    4
 13017 ;; This function calls:
 13018 ;;		_INT0_SetInterruptHandler
 13019 ;;		_INT1_SetInterruptHandler
 13020 ;;		_INT2_SetInterruptHandler
 13021 ;; This function is called by:
 13022 ;;		_SYSTEM_Initialize
 13023 ;; This function uses a reentrant model
 13024 ;;
 13025                           
 13026                           	psect	text71
 13027  00547C                     __ptext71:
 13028                           	opt callstack 0
 13029  00547C                     _EXT_INT_Initialize:
 13030                           	opt callstack 25
 13031                           
 13032                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 13033                           
 13034                           ; BSR set to: 57
 13035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13036                           ;incstack = 0
 13037  00547C  0139               	movlb	57	; () banked
 13038  00547E  91A1               	bcf	161,0,b	;volatile
 13039                           
 13040                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 13041  005480  90D2               	bcf	16338,0,c	;volatile
 13042                           
 13043                           ; BSR set to: 57
 13044                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 13045  005482  0EA6               	movlw	low _INT0_DefaultInterruptHandler
 13046  005484  6EE6               	movwf	postinc1,c
 13047  005486  0E5E               	movlw	high _INT0_DefaultInterruptHandler
 13048  005488  6EE6               	movwf	postinc1,c
 13049  00548A  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 13050  00548C  6EE6               	movwf	postinc1,c
 13051  00548E  EC75  F02D         	call	_INT0_SetInterruptHandler	;wreg free
 13052                           
 13053                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 13054  005492  0139               	movlb	57	; () banked
 13055  005494  8191               	bsf	145,0,b	;volatile
 13056                           
 13057                           ; BSR set to: 57
 13058                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 13059  005496  91A5               	bcf	165,0,b	;volatile
 13060                           
 13061                           ; BSR set to: 57
 13062                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 13063  005498  92D2               	bcf	16338,1,c	;volatile
 13064                           
 13065                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 13066  00549A  0EA8               	movlw	low _INT1_DefaultInterruptHandler
 13067  00549C  6EE6               	movwf	postinc1,c
 13068  00549E  0E5E               	movlw	high _INT1_DefaultInterruptHandler
 13069  0054A0  6EE6               	movwf	postinc1,c
 13070  0054A2  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 13071  0054A4  6EE6               	movwf	postinc1,c
 13072  0054A6  EC61  F02D         	call	_INT1_SetInterruptHandler	;wreg free
 13073                           
 13074                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 13075  0054AA  0139               	movlb	57	; () banked
 13076  0054AC  8195               	bsf	149,0,b	;volatile
 13077                           
 13078                           ; BSR set to: 57
 13079                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 13080  0054AE  9BA7               	bcf	167,5,b	;volatile
 13081                           
 13082                           ; BSR set to: 57
 13083                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 13084  0054B0  94D2               	bcf	16338,2,c	;volatile
 13085                           
 13086                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 13087  0054B2  0EAA               	movlw	low _INT2_DefaultInterruptHandler
 13088  0054B4  6EE6               	movwf	postinc1,c
 13089  0054B6  0E5E               	movlw	high _INT2_DefaultInterruptHandler
 13090  0054B8  6EE6               	movwf	postinc1,c
 13091  0054BA  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 13092  0054BC  6EE6               	movwf	postinc1,c
 13093  0054BE  EC4D  F02D         	call	_INT2_SetInterruptHandler	;wreg free
 13094                           
 13095                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 13096  0054C2  0139               	movlb	57	; () banked
 13097  0054C4  8B97               	bsf	151,5,b	;volatile
 13098                           
 13099                           ; BSR set to: 57
 13100                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13101  0054C6  0012               	return		;funcret
 13102  0054C8                     __end_of_EXT_INT_Initialize:
 13103                           	opt callstack 0
 13104                           
 13105 ;; *************** function _INT2_SetInterruptHandler *****************
 13106 ;; Defined at:
 13107 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 13108 ;; Parameters:    Size  Location     Type
 13109 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13110 ;;		 -> INT2_DefaultInterruptHandler(1), 
 13111 ;; Auto vars:     Size  Location     Type
 13112 ;;		None
 13113 ;; Return value:  Size  Location     Type
 13114 ;;                  1  [STACK] void 
 13115 ;; Registers used:
 13116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13117 ;; Tracked objects:
 13118 ;;		On entry : 3F/39
 13119 ;;		On exit  : 0/0
 13120 ;;		Unchanged: 0/0
 13121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13126 ;;Total ram usage:        0 bytes
 13127 ;; Hardware stack levels used:    1
 13128 ;; Hardware stack levels required when called:    3
 13129 ;; This function calls:
 13130 ;;		Nothing
 13131 ;; This function is called by:
 13132 ;;		_EXT_INT_Initialize
 13133 ;; This function uses a reentrant model
 13134 ;;
 13135                           
 13136                           	psect	text72
 13137  005A9A                     __ptext72:
 13138                           	opt callstack 0
 13139  005A9A                     _INT2_SetInterruptHandler:
 13140                           	opt callstack 25
 13141                           
 13142                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 13143                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13144                           
 13145                           ; BSR set to: 57
 13146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13147                           ;incstack = 0
 13148  005A9A  50E1               	movf	fsr1l,w,c
 13149  005A9C  0FFD               	addlw	-3
 13150  005A9E  6ED9               	movwf	fsr2l,c
 13151  005AA0  50E2               	movf	fsr1h,w,c
 13152  005AA2  6EDA               	movwf	fsr2h,c
 13153  005AA4  0EFF               	movlw	255
 13154  005AA6  22DA               	addwfc	fsr2h,f,c
 13155  005AA8  006F FF78  F019    	movff	postinc2,_INT2_InterruptHandler
 13156  005AAE  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler+1
 13157  005AB4  006F FF74  F01B    	movff	postdec2,_INT2_InterruptHandler+2
 13158                           
 13159                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13160  005ABA  52E5               	movf	postdec1,f,c
 13161  005ABC  52E5               	movf	postdec1,f,c
 13162  005ABE  52E5               	movf	postdec1,f,c
 13163  005AC0  0012               	return		;funcret
 13164  005AC2                     __end_of_INT2_SetInterruptHandler:
 13165                           	opt callstack 0
 13166                           
 13167 ;; *************** function _INT1_SetInterruptHandler *****************
 13168 ;; Defined at:
 13169 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 13170 ;; Parameters:    Size  Location     Type
 13171 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13172 ;;		 -> INT1_DefaultInterruptHandler(1), 
 13173 ;; Auto vars:     Size  Location     Type
 13174 ;;		None
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  1  [STACK] void 
 13177 ;; Registers used:
 13178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13179 ;; Tracked objects:
 13180 ;;		On entry : 3F/39
 13181 ;;		On exit  : 0/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13188 ;;Total ram usage:        0 bytes
 13189 ;; Hardware stack levels used:    1
 13190 ;; Hardware stack levels required when called:    3
 13191 ;; This function calls:
 13192 ;;		Nothing
 13193 ;; This function is called by:
 13194 ;;		_EXT_INT_Initialize
 13195 ;; This function uses a reentrant model
 13196 ;;
 13197                           
 13198                           	psect	text73
 13199  005AC2                     __ptext73:
 13200                           	opt callstack 0
 13201  005AC2                     _INT1_SetInterruptHandler:
 13202                           	opt callstack 25
 13203                           
 13204                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 13205                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13206                           
 13207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13208                           ;incstack = 0
 13209  005AC2  50E1               	movf	fsr1l,w,c
 13210  005AC4  0FFD               	addlw	-3
 13211  005AC6  6ED9               	movwf	fsr2l,c
 13212  005AC8  50E2               	movf	fsr1h,w,c
 13213  005ACA  6EDA               	movwf	fsr2h,c
 13214  005ACC  0EFF               	movlw	255
 13215  005ACE  22DA               	addwfc	fsr2h,f,c
 13216  005AD0  006F FF78  F01C    	movff	postinc2,_INT1_InterruptHandler
 13217  005AD6  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler+1
 13218  005ADC  006F FF74  F01E    	movff	postdec2,_INT1_InterruptHandler+2
 13219                           
 13220                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13221  005AE2  52E5               	movf	postdec1,f,c
 13222  005AE4  52E5               	movf	postdec1,f,c
 13223  005AE6  52E5               	movf	postdec1,f,c
 13224  005AE8  0012               	return		;funcret
 13225  005AEA                     __end_of_INT1_SetInterruptHandler:
 13226                           	opt callstack 0
 13227                           
 13228 ;; *************** function _INT0_SetInterruptHandler *****************
 13229 ;; Defined at:
 13230 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 13231 ;; Parameters:    Size  Location     Type
 13232 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13233 ;;		 -> INT0_DefaultInterruptHandler(1), 
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;		None
 13236 ;; Return value:  Size  Location     Type
 13237 ;;                  1  [STACK] void 
 13238 ;; Registers used:
 13239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13240 ;; Tracked objects:
 13241 ;;		On entry : 3F/39
 13242 ;;		On exit  : 0/0
 13243 ;;		Unchanged: 0/0
 13244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13249 ;;Total ram usage:        0 bytes
 13250 ;; Hardware stack levels used:    1
 13251 ;; Hardware stack levels required when called:    3
 13252 ;; This function calls:
 13253 ;;		Nothing
 13254 ;; This function is called by:
 13255 ;;		_EXT_INT_Initialize
 13256 ;; This function uses a reentrant model
 13257 ;;
 13258                           
 13259                           	psect	text74
 13260  005AEA                     __ptext74:
 13261                           	opt callstack 0
 13262  005AEA                     _INT0_SetInterruptHandler:
 13263                           	opt callstack 25
 13264                           
 13265                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 13266                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13267                           
 13268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13269                           ;incstack = 0
 13270  005AEA  50E1               	movf	fsr1l,w,c
 13271  005AEC  0FFD               	addlw	-3
 13272  005AEE  6ED9               	movwf	fsr2l,c
 13273  005AF0  50E2               	movf	fsr1h,w,c
 13274  005AF2  6EDA               	movwf	fsr2h,c
 13275  005AF4  0EFF               	movlw	255
 13276  005AF6  22DA               	addwfc	fsr2h,f,c
 13277  005AF8  006F FF78  F01F    	movff	postinc2,_INT0_InterruptHandler
 13278  005AFE  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler+1
 13279  005B04  006F FF74  F021    	movff	postdec2,_INT0_InterruptHandler+2
 13280                           
 13281                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13282  005B0A  52E5               	movf	postdec1,f,c
 13283  005B0C  52E5               	movf	postdec1,f,c
 13284  005B0E  52E5               	movf	postdec1,f,c
 13285  005B10  0012               	return		;funcret
 13286  005B12                     __end_of_INT0_SetInterruptHandler:
 13287                           	opt callstack 0
 13288                           
 13289 ;; *************** function _DSM_Initialize *****************
 13290 ;; Defined at:
 13291 ;;		line 58 in file "mcc_generated_files/dsm.c"
 13292 ;; Parameters:    Size  Location     Type
 13293 ;;		None
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;		None
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  1  [STACK] void 
 13298 ;; Registers used:
 13299 ;;		wreg, status,2
 13300 ;; Tracked objects:
 13301 ;;		On entry : 0/3C
 13302 ;;		On exit  : 3F/3C
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13309 ;;Total ram usage:        0 bytes
 13310 ;; Hardware stack levels used:    1
 13311 ;; Hardware stack levels required when called:    3
 13312 ;; This function calls:
 13313 ;;		Nothing
 13314 ;; This function is called by:
 13315 ;;		_SYSTEM_Initialize
 13316 ;; This function uses a reentrant model
 13317 ;;
 13318                           
 13319                           	psect	text75
 13320  005D86                     __ptext75:
 13321                           	opt callstack 0
 13322  005D86                     _DSM_Initialize:
 13323                           	opt callstack 26
 13324                           
 13325                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 13326                           
 13327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13328                           ;incstack = 0
 13329  005D86  013C               	movlb	60	; () banked
 13330  005D88  99FA               	bcf	250,4,b	;volatile
 13331                           
 13332                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 13333  005D8A  81FB               	bsf	251,0,b	;volatile
 13334                           
 13335                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 13336  005D8C  93FB               	bcf	251,1,b	;volatile
 13337                           
 13338                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 13339  005D8E  89FB               	bsf	251,4,b	;volatile
 13340                           
 13341                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 13342  005D90  9BFB               	bcf	251,5,b	;volatile
 13343                           
 13344                           ; BSR set to: 60
 13345                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 13346  005D92  0E13               	movlw	19
 13347  005D94  6FFC               	movwf	252,b	;volatile
 13348                           
 13349                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 13350  005D96  0E0E               	movlw	14
 13351  005D98  6FFE               	movwf	254,b	;volatile
 13352                           
 13353                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 13354  005D9A  0E04               	movlw	4
 13355  005D9C  6FFD               	movwf	253,b	;volatile
 13356                           
 13357                           ; BSR set to: 60
 13358                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 13359  005D9E  8FFA               	bsf	250,7,b	;volatile
 13360                           
 13361                           ; BSR set to: 60
 13362                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13363  005DA0  0012               	return		;funcret
 13364  005DA2                     __end_of_DSM_Initialize:
 13365                           	opt callstack 0
 13366                           
 13367 ;; *************** function _DMA1_Initialize *****************
 13368 ;; Defined at:
 13369 ;;		line 86 in file "mcc_generated_files/dma1.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;		None
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;		None
 13374 ;; Return value:  Size  Location     Type
 13375 ;;                  1  [STACK] void 
 13376 ;; Registers used:
 13377 ;;		wreg, status,2
 13378 ;; Tracked objects:
 13379 ;;		On entry : 3F/3D
 13380 ;;		On exit  : 3F/3B
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13387 ;;Total ram usage:        0 bytes
 13388 ;; Hardware stack levels used:    1
 13389 ;; Hardware stack levels required when called:    3
 13390 ;; This function calls:
 13391 ;;		Nothing
 13392 ;; This function is called by:
 13393 ;;		_SYSTEM_Initialize
 13394 ;; This function uses a reentrant model
 13395 ;;
 13396                           
 13397                           	psect	text76
 13398  00512C                     __ptext76:
 13399                           	opt callstack 0
 13400  00512C                     _DMA1_Initialize:
 13401                           	opt callstack 26
 13402                           
 13403                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 13404                           
 13405                           ; BSR set to: 60
 13406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13407                           ;incstack = 0
 13408  00512C  0E00               	movlw	0
 13409  00512E  013B               	movlb	59	; () banked
 13410  005130  6FF9               	movwf	249,b	;volatile
 13411  005132  0E10               	movlw	16
 13412  005134  6FFA               	movwf	250,b	;volatile
 13413  005136  0E00               	movlw	0
 13414  005138  6FFB               	movwf	251,b	;volatile
 13415                           
 13416                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 13417  00513A  0E3D               	movlw	61
 13418  00513C  6FF1               	movwf	241,b	;volatile
 13419  00513E  0E11               	movlw	17
 13420  005140  6FF0               	movwf	240,b	;volatile
 13421                           
 13422                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 13423  005142  0E03               	movlw	3
 13424  005144  6FFD               	movwf	253,b	;volatile
 13425                           
 13426                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 13427  005146  0E00               	movlw	0
 13428  005148  6FF8               	movwf	248,b	;volatile
 13429  00514A  0E01               	movlw	1
 13430  00514C  6FF7               	movwf	247,b	;volatile
 13431                           
 13432                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 13433  00514E  0E00               	movlw	0
 13434  005150  6FEF               	movwf	239,b	;volatile
 13435  005152  0E01               	movlw	1
 13436  005154  6FEE               	movwf	238,b	;volatile
 13437                           
 13438                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 13439  005156  0E15               	movlw	21
 13440  005158  6FFF               	movwf	255,b	;volatile
 13441                           
 13442                           ; BSR set to: 59
 13443                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 13444  00515A  6BFE               	clrf	254,b	;volatile
 13445                           
 13446                           ; BSR set to: 59
 13447                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 13448  00515C  0139               	movlb	57	; () banked
 13449  00515E  93A2               	bcf	162,1,b	;volatile
 13450                           
 13451                           ; BSR set to: 57
 13452                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 13453  005160  91A2               	bcf	162,0,b	;volatile
 13454                           
 13455                           ; BSR set to: 57
 13456                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 13457  005162  97A2               	bcf	162,3,b	;volatile
 13458                           
 13459                           ; BSR set to: 57
 13460                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 13461  005164  95A2               	bcf	162,2,b	;volatile
 13462                           
 13463                           ; BSR set to: 57
 13464                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 13465  005166  8392               	bsf	146,1,b	;volatile
 13466                           
 13467                           ; BSR set to: 57
 13468                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 13469  005168  8192               	bsf	146,0,b	;volatile
 13470                           
 13471                           ; BSR set to: 57
 13472                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 13473  00516A  8792               	bsf	146,3,b	;volatile
 13474                           
 13475                           ; BSR set to: 57
 13476                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 13477  00516C  8592               	bsf	146,2,b	;volatile
 13478                           
 13479                           ; BSR set to: 57
 13480                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 13481  00516E  6BF1               	clrf	241,b	;volatile
 13482                           
 13483                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 13484  005170  0E01               	movlw	1
 13485  005172  6FF2               	movwf	242,b	;volatile
 13486                           
 13487                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 13488  005174  0E04               	movlw	4
 13489  005176  6FF3               	movwf	243,b	;volatile
 13490                           
 13491                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 13492  005178  0E02               	movlw	2
 13493  00517A  6FF4               	movwf	244,b	;volatile
 13494                           
 13495                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 13496  00517C  0E03               	movlw	3
 13497  00517E  6FF7               	movwf	247,b	;volatile
 13498  005180  9ED2               	bcf	16338,7,c	;# 
 13499  005182  0139               	banksel	14831	;# 
 13500  005184  0E55               	movlw	85	;# 
 13501  005186  6FEF               	movwf	14831,b	;# 
 13502  005188  0EAA               	movlw	170	;# 
 13503  00518A  6FEF               	movwf	14831,b	;# 
 13504  00518C  81EF               	bsf	14831,0,b	;# 
 13505  00518E  8ED2               	bsf	16338,7,c	;# 
 13506                           
 13507                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 13508  005190  013B               	movlb	59	; () banked
 13509  005192  6BFC               	clrf	252,b	;volatile
 13510                           
 13511                           ; BSR set to: 59
 13512                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13513  005194  0012               	return		;funcret
 13514  005196                     __end_of_DMA1_Initialize:
 13515                           	opt callstack 0
 13516                           
 13517 ;; *************** function _CLKREF_Initialize *****************
 13518 ;; Defined at:
 13519 ;;		line 58 in file "mcc_generated_files/clkref.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;		None
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;		None
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  1  [STACK] void 
 13526 ;; Registers used:
 13527 ;;		wreg, status,2
 13528 ;; Tracked objects:
 13529 ;;		On entry : 3F/3B
 13530 ;;		On exit  : 3F/3C
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13537 ;;Total ram usage:        0 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; Hardware stack levels required when called:    3
 13540 ;; This function calls:
 13541 ;;		Nothing
 13542 ;; This function is called by:
 13543 ;;		_SYSTEM_Initialize
 13544 ;; This function uses a reentrant model
 13545 ;;
 13546                           
 13547                           	psect	text77
 13548  005E58                     __ptext77:
 13549                           	opt callstack 0
 13550  005E58                     _CLKREF_Initialize:
 13551                           	opt callstack 26
 13552                           
 13553                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 13554                           
 13555                           ; BSR set to: 59
 13556                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13557                           ;incstack = 0
 13558  005E58  013C               	movlb	60	; () banked
 13559  005E5A  6BE6               	clrf	230,b	;volatile
 13560                           
 13561                           ; BSR set to: 60
 13562                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 13563  005E5C  0E94               	movlw	148
 13564  005E5E  6FE5               	movwf	229,b	;volatile
 13565                           
 13566                           ; BSR set to: 60
 13567                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13568  005E60  0012               	return		;funcret
 13569  005E62                     __end_of_CLKREF_Initialize:
 13570                           	opt callstack 0
 13571                           
 13572 ;; *************** function _CLC1_Initialize *****************
 13573 ;; Defined at:
 13574 ;;		line 58 in file "mcc_generated_files/clc1.c"
 13575 ;; Parameters:    Size  Location     Type
 13576 ;;		None
 13577 ;; Auto vars:     Size  Location     Type
 13578 ;;		None
 13579 ;; Return value:  Size  Location     Type
 13580 ;;                  1  [STACK] void 
 13581 ;; Registers used:
 13582 ;;		wreg, status,2
 13583 ;; Tracked objects:
 13584 ;;		On entry : 0/39
 13585 ;;		On exit  : 3F/3C
 13586 ;;		Unchanged: 0/0
 13587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13592 ;;Total ram usage:        0 bytes
 13593 ;; Hardware stack levels used:    1
 13594 ;; Hardware stack levels required when called:    3
 13595 ;; This function calls:
 13596 ;;		Nothing
 13597 ;; This function is called by:
 13598 ;;		_SYSTEM_Initialize
 13599 ;; This function uses a reentrant model
 13600 ;;
 13601                           
 13602                           	psect	text78
 13603  005C24                     __ptext78:
 13604                           	opt callstack 0
 13605  005C24                     _CLC1_Initialize:
 13606                           	opt callstack 26
 13607                           
 13608                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 13609                           
 13610                           ; BSR set to: 60
 13611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13612                           ;incstack = 0
 13613  005C24  013C               	movlb	60	; () banked
 13614  005C26  6B75               	clrf	117,b	;volatile
 13615                           
 13616                           ; BSR set to: 60
 13617                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 13618  005C28  0E04               	movlw	4
 13619  005C2A  6F76               	movwf	118,b	;volatile
 13620                           
 13621                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 13622  005C2C  0E04               	movlw	4
 13623  005C2E  6F77               	movwf	119,b	;volatile
 13624                           
 13625                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 13626  005C30  0E04               	movlw	4
 13627  005C32  6F78               	movwf	120,b	;volatile
 13628                           
 13629                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 13630  005C34  0E04               	movlw	4
 13631  005C36  6F79               	movwf	121,b	;volatile
 13632                           
 13633                           ; BSR set to: 60
 13634                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 13635  005C38  6B7A               	clrf	122,b	;volatile
 13636                           
 13637                           ; BSR set to: 60
 13638                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 13639  005C3A  6B7B               	clrf	123,b	;volatile
 13640                           
 13641                           ; BSR set to: 60
 13642                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 13643  005C3C  6B7C               	clrf	124,b	;volatile
 13644                           
 13645                           ; BSR set to: 60
 13646                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 13647  005C3E  6B7D               	clrf	125,b	;volatile
 13648                           
 13649                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 13650  005C40  0E81               	movlw	129
 13651  005C42  6F74               	movwf	116,b	;volatile
 13652                           
 13653                           ; BSR set to: 60
 13654                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13655  005C44  0012               	return		;funcret
 13656  005C46                     __end_of_CLC1_Initialize:
 13657                           	opt callstack 0
 13658                           
 13659 ;; *************** function _ADCC_Initialize *****************
 13660 ;; Defined at:
 13661 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13662 ;; Parameters:    Size  Location     Type
 13663 ;;		None
 13664 ;; Auto vars:     Size  Location     Type
 13665 ;;		None
 13666 ;; Return value:  Size  Location     Type
 13667 ;;                  1  [STACK] void 
 13668 ;; Registers used:
 13669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13670 ;; Tracked objects:
 13671 ;;		On entry : 3F/39
 13672 ;;		On exit  : 0/0
 13673 ;;		Unchanged: 0/0
 13674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13679 ;;Total ram usage:        0 bytes
 13680 ;; Hardware stack levels used:    1
 13681 ;; Hardware stack levels required when called:    4
 13682 ;; This function calls:
 13683 ;;		_ADCC_SetADIInterruptHandler
 13684 ;; This function is called by:
 13685 ;;		_SYSTEM_Initialize
 13686 ;; This function uses a reentrant model
 13687 ;;
 13688                           
 13689                           	psect	text79
 13690  0054C8                     __ptext79:
 13691                           	opt callstack 0
 13692  0054C8                     _ADCC_Initialize:
 13693                           	opt callstack 25
 13694                           
 13695                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13696                           
 13697                           ; BSR set to: 60
 13698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13699                           ;incstack = 0
 13700  0054C8  013E               	movlb	62	; () banked
 13701  0054CA  6BDE               	clrf	222,b	;volatile
 13702                           
 13703                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13704  0054CC  6BDF               	clrf	223,b	;volatile
 13705                           
 13706                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13707  0054CE  6BE0               	clrf	224,b	;volatile
 13708                           
 13709                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13710  0054D0  6BE1               	clrf	225,b	;volatile
 13711                           
 13712                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13713  0054D2  6BE4               	clrf	228,b	;volatile
 13714                           
 13715                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13716  0054D4  6BE5               	clrf	229,b	;volatile
 13717                           
 13718                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13719  0054D6  6BEA               	clrf	234,b	;volatile
 13720                           
 13721                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13722  0054D8  6BEC               	clrf	236,b	;volatile
 13723                           
 13724                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13725  0054DA  6BF1               	clrf	241,b	;volatile
 13726                           
 13727                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13728  0054DC  6BF3               	clrf	243,b	;volatile
 13729                           
 13730                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13731  0054DE  6BF4               	clrf	244,b	;volatile
 13732                           
 13733                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13734  0054E0  6BF5               	clrf	245,b	;volatile
 13735                           
 13736                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13737  0054E2  6BF6               	clrf	246,b	;volatile
 13738                           
 13739                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13740  0054E4  6BF7               	clrf	247,b	;volatile
 13741                           
 13742                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13743  0054E6  6BF9               	clrf	249,b	;volatile
 13744                           
 13745                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13746  0054E8  6BFA               	clrf	250,b	;volatile
 13747                           
 13748                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 13749  0054EA  6BFB               	clrf	251,b	;volatile
 13750                           
 13751                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13752  0054EC  6BFC               	clrf	252,b	;volatile
 13753                           
 13754                           ; BSR set to: 62
 13755                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13756  0054EE  0E02               	movlw	2
 13757  0054F0  6FFD               	movwf	253,b	;volatile
 13758                           
 13759                           ; BSR set to: 62
 13760                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13761  0054F2  6BFE               	clrf	254,b	;volatile
 13762                           
 13763                           ; BSR set to: 62
 13764                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13765  0054F4  6BFF               	clrf	255,b	;volatile
 13766                           
 13767                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 13768  0054F6  0E94               	movlw	148
 13769  0054F8  6FF8               	movwf	248,b	;volatile
 13770                           
 13771                           ; BSR set to: 62
 13772                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 13773  0054FA  0139               	movlb	57	; () banked
 13774  0054FC  95A1               	bcf	161,2,b	;volatile
 13775                           
 13776                           ; BSR set to: 57
 13777                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 13778  0054FE  8591               	bsf	145,2,b	;volatile
 13779                           
 13780                           ; BSR set to: 57
 13781                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 13782  005500  0EAC               	movlw	low _ADCC_DefaultInterruptHandler
 13783  005502  6EE6               	movwf	postinc1,c
 13784  005504  0E5E               	movlw	high _ADCC_DefaultInterruptHandler
 13785  005506  6EE6               	movwf	postinc1,c
 13786  005508  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 13787  00550A  6EE6               	movwf	postinc1,c
 13788  00550C  EC89  F02D         	call	_ADCC_SetADIInterruptHandler	;wreg free
 13789                           
 13790                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13791  005510  0012               	return		;funcret
 13792  005512                     __end_of_ADCC_Initialize:
 13793                           	opt callstack 0
 13794                           
 13795 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 13796 ;; Defined at:
 13797 ;;		line 316 in file "mcc_generated_files/adcc.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13800 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;		None
 13803 ;; Return value:  Size  Location     Type
 13804 ;;                  1  [STACK] void 
 13805 ;; Registers used:
 13806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13807 ;; Tracked objects:
 13808 ;;		On entry : 3F/39
 13809 ;;		On exit  : 0/0
 13810 ;;		Unchanged: 0/0
 13811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13816 ;;Total ram usage:        0 bytes
 13817 ;; Hardware stack levels used:    1
 13818 ;; Hardware stack levels required when called:    3
 13819 ;; This function calls:
 13820 ;;		Nothing
 13821 ;; This function is called by:
 13822 ;;		_ADCC_Initialize
 13823 ;; This function uses a reentrant model
 13824 ;;
 13825                           
 13826                           	psect	text80
 13827  005B12                     __ptext80:
 13828                           	opt callstack 0
 13829  005B12                     _ADCC_SetADIInterruptHandler:
 13830                           	opt callstack 25
 13831                           
 13832                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 13833                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13834                           
 13835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13836                           ;incstack = 0
 13837  005B12  50E1               	movf	fsr1l,w,c
 13838  005B14  0FFD               	addlw	-3
 13839  005B16  6ED9               	movwf	fsr2l,c
 13840  005B18  50E2               	movf	fsr1h,w,c
 13841  005B1A  6EDA               	movwf	fsr2h,c
 13842  005B1C  0EFF               	movlw	255
 13843  005B1E  22DA               	addwfc	fsr2h,f,c
 13844  005B20  006F FF78  F00A    	movff	postinc2,_ADCC_ADI_InterruptHandler
 13845  005B26  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 13846  005B2C  006F FF74  F00C    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 13847                           
 13848                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13849  005B32  52E5               	movf	postdec1,f,c
 13850  005B34  52E5               	movf	postdec1,f,c
 13851  005B36  52E5               	movf	postdec1,f,c
 13852  005B38  0012               	return		;funcret
 13853  005B3A                     __end_of_ADCC_SetADIInterruptHandler:
 13854                           	opt callstack 0
 13855                           
 13856 ;; *************** function _INT0_ISR *****************
 13857 ;; Defined at:
 13858 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;		None
 13861 ;; Auto vars:     Size  Location     Type
 13862 ;;		None
 13863 ;; Return value:  Size  Location     Type
 13864 ;;                  1    wreg      void 
 13865 ;; Registers used:
 13866 ;;		wreg, status,2, status,0, pclath, tosl
 13867 ;; Tracked objects:
 13868 ;;		On entry : 0/0
 13869 ;;		On exit  : 0/0
 13870 ;;		Unchanged: 0/0
 13871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13876 ;;Total ram usage:        0 bytes
 13877 ;; Hardware stack levels used:    1
 13878 ;; Hardware stack levels required when called:    2
 13879 ;; This function calls:
 13880 ;;		_INT0_CallBack
 13881 ;; This function is called by:
 13882 ;;		Interrupt level 2
 13883 ;; This function uses a non-reentrant model
 13884 ;;
 13885                           
 13886                           	psect	text81
 13887  005E0C                     __ptext81:
 13888                           	opt callstack 0
 13889  005E0C                     _INT0_ISR:
 13890                           	opt callstack 17
 13891                           
 13892                           ;incstack = 0
 13893  005E0C  EE13  F150         	lfsr	1,___inthi_sp
 13894                           
 13895                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 13896  005E10  0139               	movlb	57	; () banked
 13897  005E12  91A1               	bcf	161,0,b	;volatile
 13898                           
 13899                           ; BSR set to: 57
 13900                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 13901  005E14  EC23  F02E         	call	_INT0_CallBack	;wreg free
 13902  005E18  0011               	retfie		f
 13903  005E1A                     __end_of_INT0_ISR:
 13904                           	opt callstack 0
 13905                           
 13906 ;; *************** function _INT0_CallBack *****************
 13907 ;; Defined at:
 13908 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 13909 ;; Parameters:    Size  Location     Type
 13910 ;;		None
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;		None
 13913 ;; Return value:  Size  Location     Type
 13914 ;;                  1  [STACK] void 
 13915 ;; Registers used:
 13916 ;;		wreg, status,2, status,0, pclath, tosl
 13917 ;; Tracked objects:
 13918 ;;		On entry : 3F/39
 13919 ;;		On exit  : 0/0
 13920 ;;		Unchanged: 0/0
 13921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13926 ;;Total ram usage:        0 bytes
 13927 ;; Hardware stack levels used:    1
 13928 ;; Hardware stack levels required when called:    1
 13929 ;; This function calls:
 13930 ;;		Absolute function
 13931 ;;		_INT0_DefaultInterruptHandler
 13932 ;; This function is called by:
 13933 ;;		_INT0_ISR
 13934 ;; This function uses a reentrant model
 13935 ;;
 13936                           
 13937                           	psect	text82
 13938  005C46                     __ptext82:
 13939                           	opt callstack 0
 13940  005C46                     _INT0_CallBack:
 13941                           	opt callstack 17
 13942                           
 13943                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 13944                           
 13945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13946                           ;incstack = 0
 13947  005C46  501F               	movf	_INT0_InterruptHandler,w,c
 13948  005C48  1020               	iorwf	_INT0_InterruptHandler+1,w,c
 13949  005C4A  1021               	iorwf	_INT0_InterruptHandler+2,w,c
 13950  005C4C  B4D8               	btfsc	status,2,c
 13951  005C4E  0012               	return	
 13952                           
 13953                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 13954  005C50  D801               	call	u149_48
 13955  005C52  0012               	return	
 13956  005C54                     u149_48:
 13957  005C54  0005               	push	
 13958  005C56  6EFA               	movwf	pclath,c
 13959  005C58  501F               	movf	_INT0_InterruptHandler,w,c
 13960  005C5A  6EFD               	movwf	tosl,c
 13961  005C5C  5020               	movf	_INT0_InterruptHandler+1,w,c
 13962  005C5E  6EFE               	movwf	tosh,c
 13963  005C60  5021               	movf	_INT0_InterruptHandler+2,w,c
 13964  005C62  6EFF               	movwf	tosu,c
 13965  005C64  50FA               	movf	pclath,w,c
 13966  005C66  0012               	return		;indir
 13967  005C68                     __end_of_INT0_CallBack:
 13968                           	opt callstack 0
 13969                           
 13970 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13971 ;; Defined at:
 13972 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 13973 ;; Parameters:    Size  Location     Type
 13974 ;;		None
 13975 ;; Auto vars:     Size  Location     Type
 13976 ;;		None
 13977 ;; Return value:  Size  Location     Type
 13978 ;;                  1  [STACK] void 
 13979 ;; Registers used:
 13980 ;;		None
 13981 ;; Tracked objects:
 13982 ;;		On entry : 0/39
 13983 ;;		On exit  : 0/0
 13984 ;;		Unchanged: 0/0
 13985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13990 ;;Total ram usage:        0 bytes
 13991 ;; Hardware stack levels used:    1
 13992 ;; This function calls:
 13993 ;;		Nothing
 13994 ;; This function is called by:
 13995 ;;		_EXT_INT_Initialize
 13996 ;;		_INT0_CallBack
 13997 ;; This function uses a reentrant model
 13998 ;;
 13999                           
 14000                           	psect	text83
 14001  005EA6                     __ptext83:
 14002                           	opt callstack 0
 14003  005EA6                     _INT0_DefaultInterruptHandler:
 14004                           	opt callstack 17
 14005                           
 14006                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14007                           
 14008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14009                           ;incstack = 0
 14010  005EA6  0012               	return		;funcret
 14011  005EA8                     __end_of_INT0_DefaultInterruptHandler:
 14012                           	opt callstack 0
 14013                           
 14014 ;; *************** function _INT1_ISR *****************
 14015 ;; Defined at:
 14016 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;		None
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;		None
 14021 ;; Return value:  Size  Location     Type
 14022 ;;                  1    wreg      void 
 14023 ;; Registers used:
 14024 ;;		wreg, status,2, status,0, pclath, tosl
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14034 ;;Total ram usage:        0 bytes
 14035 ;; Hardware stack levels used:    1
 14036 ;; Hardware stack levels required when called:    2
 14037 ;; This function calls:
 14038 ;;		_INT1_CallBack
 14039 ;; This function is called by:
 14040 ;;		Interrupt level 2
 14041 ;; This function uses a non-reentrant model
 14042 ;;
 14043                           
 14044                           	psect	text84
 14045  005E1C                     __ptext84:
 14046                           	opt callstack 0
 14047  005E1C                     _INT1_ISR:
 14048                           	opt callstack 17
 14049                           
 14050                           ;incstack = 0
 14051  005E1C  EE13  F150         	lfsr	1,___inthi_sp
 14052                           
 14053                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 14054  005E20  0139               	movlb	57	; () banked
 14055  005E22  91A5               	bcf	165,0,b	;volatile
 14056                           
 14057                           ; BSR set to: 57
 14058                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 14059  005E24  EC34  F02E         	call	_INT1_CallBack	;wreg free
 14060  005E28  0011               	retfie		f
 14061  005E2A                     __end_of_INT1_ISR:
 14062                           	opt callstack 0
 14063                           
 14064 ;; *************** function _INT1_CallBack *****************
 14065 ;; Defined at:
 14066 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;		None
 14069 ;; Auto vars:     Size  Location     Type
 14070 ;;		None
 14071 ;; Return value:  Size  Location     Type
 14072 ;;                  1  [STACK] void 
 14073 ;; Registers used:
 14074 ;;		wreg, status,2, status,0, pclath, tosl
 14075 ;; Tracked objects:
 14076 ;;		On entry : 3F/39
 14077 ;;		On exit  : 0/0
 14078 ;;		Unchanged: 0/0
 14079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14084 ;;Total ram usage:        0 bytes
 14085 ;; Hardware stack levels used:    1
 14086 ;; Hardware stack levels required when called:    1
 14087 ;; This function calls:
 14088 ;;		Absolute function
 14089 ;;		_INT1_DefaultInterruptHandler
 14090 ;; This function is called by:
 14091 ;;		_INT1_ISR
 14092 ;; This function uses a reentrant model
 14093 ;;
 14094                           
 14095                           	psect	text85
 14096  005C68                     __ptext85:
 14097                           	opt callstack 0
 14098  005C68                     _INT1_CallBack:
 14099                           	opt callstack 17
 14100                           
 14101                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 14102                           
 14103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14104                           ;incstack = 0
 14105  005C68  501C               	movf	_INT1_InterruptHandler,w,c
 14106  005C6A  101D               	iorwf	_INT1_InterruptHandler+1,w,c
 14107  005C6C  101E               	iorwf	_INT1_InterruptHandler+2,w,c
 14108  005C6E  B4D8               	btfsc	status,2,c
 14109  005C70  0012               	return	
 14110                           
 14111                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 14112  005C72  D801               	call	u151_48
 14113  005C74  0012               	return	
 14114  005C76                     u151_48:
 14115  005C76  0005               	push	
 14116  005C78  6EFA               	movwf	pclath,c
 14117  005C7A  501C               	movf	_INT1_InterruptHandler,w,c
 14118  005C7C  6EFD               	movwf	tosl,c
 14119  005C7E  501D               	movf	_INT1_InterruptHandler+1,w,c
 14120  005C80  6EFE               	movwf	tosh,c
 14121  005C82  501E               	movf	_INT1_InterruptHandler+2,w,c
 14122  005C84  6EFF               	movwf	tosu,c
 14123  005C86  50FA               	movf	pclath,w,c
 14124  005C88  0012               	return		;indir
 14125  005C8A                     __end_of_INT1_CallBack:
 14126                           	opt callstack 0
 14127                           
 14128 ;; *************** function _INT1_DefaultInterruptHandler *****************
 14129 ;; Defined at:
 14130 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 14131 ;; Parameters:    Size  Location     Type
 14132 ;;		None
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;		None
 14135 ;; Return value:  Size  Location     Type
 14136 ;;                  1  [STACK] void 
 14137 ;; Registers used:
 14138 ;;		None
 14139 ;; Tracked objects:
 14140 ;;		On entry : 0/39
 14141 ;;		On exit  : 0/0
 14142 ;;		Unchanged: 0/0
 14143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14148 ;;Total ram usage:        0 bytes
 14149 ;; Hardware stack levels used:    1
 14150 ;; This function calls:
 14151 ;;		Nothing
 14152 ;; This function is called by:
 14153 ;;		_EXT_INT_Initialize
 14154 ;;		_INT1_CallBack
 14155 ;; This function uses a reentrant model
 14156 ;;
 14157                           
 14158                           	psect	text86
 14159  005EA8                     __ptext86:
 14160                           	opt callstack 0
 14161  005EA8                     _INT1_DefaultInterruptHandler:
 14162                           	opt callstack 17
 14163                           
 14164                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14165                           
 14166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14167                           ;incstack = 0
 14168  005EA8  0012               	return		;funcret
 14169  005EAA                     __end_of_INT1_DefaultInterruptHandler:
 14170                           	opt callstack 0
 14171                           
 14172 ;; *************** function _INT2_ISR *****************
 14173 ;; Defined at:
 14174 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 14175 ;; Parameters:    Size  Location     Type
 14176 ;;		None
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;		None
 14179 ;; Return value:  Size  Location     Type
 14180 ;;                  1    wreg      void 
 14181 ;; Registers used:
 14182 ;;		wreg, status,2, status,0, pclath, tosl
 14183 ;; Tracked objects:
 14184 ;;		On entry : 0/0
 14185 ;;		On exit  : 0/0
 14186 ;;		Unchanged: 0/0
 14187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14192 ;;Total ram usage:        0 bytes
 14193 ;; Hardware stack levels used:    1
 14194 ;; Hardware stack levels required when called:    2
 14195 ;; This function calls:
 14196 ;;		_INT2_CallBack
 14197 ;; This function is called by:
 14198 ;;		Interrupt level 2
 14199 ;; This function uses a non-reentrant model
 14200 ;;
 14201                           
 14202                           	psect	text87
 14203  005E2C                     __ptext87:
 14204                           	opt callstack 0
 14205  005E2C                     _INT2_ISR:
 14206                           	opt callstack 17
 14207                           
 14208                           ;incstack = 0
 14209  005E2C  EE13  F150         	lfsr	1,___inthi_sp
 14210                           
 14211                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 14212  005E30  0139               	movlb	57	; () banked
 14213  005E32  9BA7               	bcf	167,5,b	;volatile
 14214                           
 14215                           ; BSR set to: 57
 14216                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 14217  005E34  EC45  F02E         	call	_INT2_CallBack	;wreg free
 14218  005E38  0011               	retfie		f
 14219  005E3A                     __end_of_INT2_ISR:
 14220                           	opt callstack 0
 14221                           
 14222 ;; *************** function _INT2_CallBack *****************
 14223 ;; Defined at:
 14224 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 14225 ;; Parameters:    Size  Location     Type
 14226 ;;		None
 14227 ;; Auto vars:     Size  Location     Type
 14228 ;;		None
 14229 ;; Return value:  Size  Location     Type
 14230 ;;                  1  [STACK] void 
 14231 ;; Registers used:
 14232 ;;		wreg, status,2, status,0, pclath, tosl
 14233 ;; Tracked objects:
 14234 ;;		On entry : 3F/39
 14235 ;;		On exit  : 0/0
 14236 ;;		Unchanged: 0/0
 14237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14242 ;;Total ram usage:        0 bytes
 14243 ;; Hardware stack levels used:    1
 14244 ;; Hardware stack levels required when called:    1
 14245 ;; This function calls:
 14246 ;;		Absolute function
 14247 ;;		_INT2_DefaultInterruptHandler
 14248 ;; This function is called by:
 14249 ;;		_INT2_ISR
 14250 ;; This function uses a reentrant model
 14251 ;;
 14252                           
 14253                           	psect	text88
 14254  005C8A                     __ptext88:
 14255                           	opt callstack 0
 14256  005C8A                     _INT2_CallBack:
 14257                           	opt callstack 17
 14258                           
 14259                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 14260                           
 14261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14262                           ;incstack = 0
 14263  005C8A  5019               	movf	_INT2_InterruptHandler,w,c
 14264  005C8C  101A               	iorwf	_INT2_InterruptHandler+1,w,c
 14265  005C8E  101B               	iorwf	_INT2_InterruptHandler+2,w,c
 14266  005C90  B4D8               	btfsc	status,2,c
 14267  005C92  0012               	return	
 14268                           
 14269                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 14270  005C94  D801               	call	u153_48
 14271  005C96  0012               	return	
 14272  005C98                     u153_48:
 14273  005C98  0005               	push	
 14274  005C9A  6EFA               	movwf	pclath,c
 14275  005C9C  5019               	movf	_INT2_InterruptHandler,w,c
 14276  005C9E  6EFD               	movwf	tosl,c
 14277  005CA0  501A               	movf	_INT2_InterruptHandler+1,w,c
 14278  005CA2  6EFE               	movwf	tosh,c
 14279  005CA4  501B               	movf	_INT2_InterruptHandler+2,w,c
 14280  005CA6  6EFF               	movwf	tosu,c
 14281  005CA8  50FA               	movf	pclath,w,c
 14282  005CAA  0012               	return		;indir
 14283  005CAC                     __end_of_INT2_CallBack:
 14284                           	opt callstack 0
 14285                           
 14286 ;; *************** function _INT2_DefaultInterruptHandler *****************
 14287 ;; Defined at:
 14288 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;		None
 14291 ;; Auto vars:     Size  Location     Type
 14292 ;;		None
 14293 ;; Return value:  Size  Location     Type
 14294 ;;                  1  [STACK] void 
 14295 ;; Registers used:
 14296 ;;		None
 14297 ;; Tracked objects:
 14298 ;;		On entry : 0/39
 14299 ;;		On exit  : 0/0
 14300 ;;		Unchanged: 0/0
 14301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;Total ram usage:        0 bytes
 14307 ;; Hardware stack levels used:    1
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		_EXT_INT_Initialize
 14312 ;;		_INT2_CallBack
 14313 ;; This function uses a reentrant model
 14314 ;;
 14315                           
 14316                           	psect	text89
 14317  005EAA                     __ptext89:
 14318                           	opt callstack 0
 14319  005EAA                     _INT2_DefaultInterruptHandler:
 14320                           	opt callstack 17
 14321                           
 14322                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14323                           
 14324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14325                           ;incstack = 0
 14326  005EAA  0012               	return		;funcret
 14327  005EAC                     __end_of_INT2_DefaultInterruptHandler:
 14328                           	opt callstack 0
 14329                           
 14330 ;; *************** function _Default_ISR *****************
 14331 ;; Defined at:
 14332 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 14333 ;; Parameters:    Size  Location     Type
 14334 ;;		None
 14335 ;; Auto vars:     Size  Location     Type
 14336 ;;		None
 14337 ;; Return value:  Size  Location     Type
 14338 ;;                  1    wreg      void 
 14339 ;; Registers used:
 14340 ;;		None
 14341 ;; Tracked objects:
 14342 ;;		On entry : 0/0
 14343 ;;		On exit  : 0/0
 14344 ;;		Unchanged: 0/0
 14345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14350 ;;Total ram usage:        0 bytes
 14351 ;; Hardware stack levels used:    1
 14352 ;; This function calls:
 14353 ;;		Nothing
 14354 ;; This function is called by:
 14355 ;;		Interrupt level 2
 14356 ;; This function uses a non-reentrant model
 14357 ;;
 14358                           
 14359                           	psect	text90
 14360  005EA0                     __ptext90:
 14361                           	opt callstack 0
 14362  005EA0                     _Default_ISR:
 14363                           	opt callstack 19
 14364                           
 14365                           ;incstack = 0
 14366  005EA0  EE13  F150         	lfsr	1,___inthi_sp
 14367  005EA4  0011               	retfie		f
 14368  005EA6                     __end_of_Default_ISR:
 14369                           	opt callstack 0
 14370                           
 14371 ;; *************** function _ADCC_ISR *****************
 14372 ;; Defined at:
 14373 ;;		line 307 in file "mcc_generated_files/adcc.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;		None
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;		None
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  1    wreg      void 
 14380 ;; Registers used:
 14381 ;;		wreg, status,2, status,0, pclath, tosl
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14391 ;;Total ram usage:        0 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:    1
 14394 ;; This function calls:
 14395 ;;		Absolute function
 14396 ;;		_ADCC_DefaultInterruptHandler
 14397 ;; This function is called by:
 14398 ;;		Interrupt level 2
 14399 ;; This function uses a non-reentrant model
 14400 ;;
 14401                           
 14402                           	psect	text91
 14403  0058B8                     __ptext91:
 14404                           	opt callstack 0
 14405  0058B8                     _ADCC_ISR:
 14406                           	opt callstack 18
 14407                           
 14408                           ;incstack = 0
 14409  0058B8  EE13  F150         	lfsr	1,___inthi_sp
 14410                           
 14411                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 14412  0058BC  0139               	movlb	57	; () banked
 14413  0058BE  95A1               	bcf	161,2,b	;volatile
 14414                           
 14415                           ; BSR set to: 57
 14416                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 14417  0058C0  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 14418  0058C2  100B               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 14419  0058C4  100C               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 14420  0058C6  B4D8               	btfsc	status,2,c
 14421  0058C8  0011               	retfie		f
 14422                           
 14423                           ; BSR set to: 57
 14424                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 14425  0058CA  D801               	call	i2u187_48
 14426  0058CC  0011               	retfie		f
 14427  0058CE                     i2u187_48:
 14428  0058CE  0005               	push	
 14429  0058D0  6EFA               	movwf	pclath,c
 14430  0058D2  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 14431  0058D4  6EFD               	movwf	tosl,c
 14432  0058D6  500B               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 14433  0058D8  6EFE               	movwf	tosh,c
 14434  0058DA  500C               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 14435  0058DC  6EFF               	movwf	tosu,c
 14436  0058DE  50FA               	movf	pclath,w,c
 14437  0058E0  0012               	return		;indir
 14438  0058E2                     __end_of_ADCC_ISR:
 14439                           	opt callstack 0
 14440                           
 14441 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 14442 ;; Defined at:
 14443 ;;		line 320 in file "mcc_generated_files/adcc.c"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;		None
 14446 ;; Auto vars:     Size  Location     Type
 14447 ;;		None
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  1  [STACK] void 
 14450 ;; Registers used:
 14451 ;;		None
 14452 ;; Tracked objects:
 14453 ;;		On entry : 3F/39
 14454 ;;		On exit  : 0/0
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14461 ;;Total ram usage:        0 bytes
 14462 ;; Hardware stack levels used:    1
 14463 ;; This function calls:
 14464 ;;		Nothing
 14465 ;; This function is called by:
 14466 ;;		_ADCC_Initialize
 14467 ;;		_ADCC_ISR
 14468 ;; This function uses a reentrant model
 14469 ;;
 14470                           
 14471                           	psect	text92
 14472  005EAC                     __ptext92:
 14473                           	opt callstack 0
 14474  005EAC                     _ADCC_DefaultInterruptHandler:
 14475                           	opt callstack 18
 14476                           
 14477                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14478                           
 14479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14480                           ;incstack = 0
 14481  005EAC  0012               	return		;funcret
 14482  005EAE                     __end_of_ADCC_DefaultInterruptHandler:
 14483                           	opt callstack 0
 14484                           
 14485 ;; *************** function _UART1_tx_vect_isr *****************
 14486 ;; Defined at:
 14487 ;;		line 197 in file "mcc_generated_files/uart1.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;		None
 14490 ;; Auto vars:     Size  Location     Type
 14491 ;;		None
 14492 ;; Return value:  Size  Location     Type
 14493 ;;                  1    wreg      void 
 14494 ;; Registers used:
 14495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14496 ;; Tracked objects:
 14497 ;;		On entry : 0/0
 14498 ;;		On exit  : 0/0
 14499 ;;		Unchanged: 0/0
 14500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;Total ram usage:        0 bytes
 14506 ;; Hardware stack levels used:    1
 14507 ;; Hardware stack levels required when called:    1
 14508 ;; This function calls:
 14509 ;;		Absolute function
 14510 ;;		_UART1_Transmit_ISR
 14511 ;; This function is called by:
 14512 ;;		Interrupt level 2
 14513 ;; This function uses a non-reentrant model
 14514 ;;
 14515                           
 14516                           	psect	text93
 14517  005B3C                     __ptext93:
 14518                           	opt callstack 0
 14519  005B3C                     _UART1_tx_vect_isr:
 14520                           	opt callstack 18
 14521                           
 14522                           ;incstack = 0
 14523  005B3C  EE13  F150         	lfsr	1,___inthi_sp
 14524                           
 14525                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 14526  005B40  500D               	movf	_UART1_TxInterruptHandler,w,c
 14527  005B42  100E               	iorwf	_UART1_TxInterruptHandler+1,w,c
 14528  005B44  100F               	iorwf	_UART1_TxInterruptHandler+2,w,c
 14529  005B46  B4D8               	btfsc	status,2,c
 14530  005B48  0011               	retfie		f
 14531                           
 14532                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 14533  005B4A  D801               	call	i2u378_48
 14534  005B4C  0011               	retfie		f
 14535  005B4E                     i2u378_48:
 14536  005B4E  0005               	push	
 14537  005B50  6EFA               	movwf	pclath,c
 14538  005B52  500D               	movf	_UART1_TxInterruptHandler,w,c
 14539  005B54  6EFD               	movwf	tosl,c
 14540  005B56  500E               	movf	_UART1_TxInterruptHandler+1,w,c
 14541  005B58  6EFE               	movwf	tosh,c
 14542  005B5A  500F               	movf	_UART1_TxInterruptHandler+2,w,c
 14543  005B5C  6EFF               	movwf	tosu,c
 14544  005B5E  50FA               	movf	pclath,w,c
 14545  005B60  0012               	return		;indir
 14546  005B62                     __end_of_UART1_tx_vect_isr:
 14547                           	opt callstack 0
 14548                           
 14549 ;; *************** function _UART1_Transmit_ISR *****************
 14550 ;; Defined at:
 14551 ;;		line 211 in file "mcc_generated_files/uart1.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;		None
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;		None
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1  [STACK] void 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 3B/39
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14569 ;;Total ram usage:        0 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; This function calls:
 14572 ;;		Nothing
 14573 ;; This function is called by:
 14574 ;;		_UART1_Initialize
 14575 ;;		_UART1_tx_vect_isr
 14576 ;; This function uses a reentrant model
 14577 ;;
 14578                           
 14579                           	psect	text94
 14580  00580A                     __ptext94:
 14581                           	opt callstack 0
 14582  00580A                     _UART1_Transmit_ISR:
 14583                           	opt callstack 18
 14584                           
 14585                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 14586                           
 14587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14588                           ;incstack = 0
 14589  00580A  0E40               	movlw	64
 14590  00580C  603A               	cpfslt	_uart1TxBufferRemaining,c
 14591  00580E  D010               	goto	l597
 14592                           
 14593                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 14594  005810  0E80               	movlw	low _uart1TxBuffer
 14595  005812  243B               	addwf	_uart1TxTail,w,c	;volatile
 14596  005814  6ED9               	movwf	fsr2l,c
 14597  005816  6ADA               	clrf	fsr2h,c
 14598  005818  0E02               	movlw	high _uart1TxBuffer
 14599  00581A  22DA               	addwfc	fsr2h,f,c
 14600  00581C  50DF               	movf	indf2,w,c
 14601  00581E  013D               	movlb	61	; () banked
 14602  005820  6FEA               	movwf	234,b	;volatile
 14603                           
 14604                           ; BSR set to: 61
 14605  005822  2A3B               	incf	_uart1TxTail,f,c	;volatile
 14606                           
 14607                           ; BSR set to: 61
 14608                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 14609  005824  0E3F               	movlw	63
 14610  005826  643B               	cpfsgt	_uart1TxTail,c
 14611  005828  D001               	goto	l6199
 14612                           
 14613                           ; BSR set to: 61
 14614                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 14615  00582A  6A3B               	clrf	_uart1TxTail,c	;volatile
 14616  00582C                     l6199:
 14617                           
 14618                           ; BSR set to: 61
 14619                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 14620  00582C  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 14621                           
 14622                           ;mcc_generated_files/uart1.c: 220:  } else {
 14623  00582E  0012               	return	
 14624  005830                     l597:
 14625                           
 14626                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 14627  005830  0139               	movlb	57	; () banked
 14628  005832  9993               	bcf	147,4,b	;volatile
 14629                           
 14630                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14631  005834  0012               	return		;funcret
 14632  005836                     __end_of_UART1_Transmit_ISR:
 14633                           	opt callstack 0
 14634                           
 14635 ;; *************** function _UART1_rx_vect_isr *****************
 14636 ;; Defined at:
 14637 ;;		line 204 in file "mcc_generated_files/uart1.c"
 14638 ;; Parameters:    Size  Location     Type
 14639 ;;		None
 14640 ;; Auto vars:     Size  Location     Type
 14641 ;;		None
 14642 ;; Return value:  Size  Location     Type
 14643 ;;                  1    wreg      void 
 14644 ;; Registers used:
 14645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14646 ;; Tracked objects:
 14647 ;;		On entry : 0/0
 14648 ;;		On exit  : 0/0
 14649 ;;		Unchanged: 0/0
 14650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14655 ;;Total ram usage:        0 bytes
 14656 ;; Hardware stack levels used:    1
 14657 ;; Hardware stack levels required when called:    1
 14658 ;; This function calls:
 14659 ;;		Absolute function
 14660 ;;		_UART1_Receive_ISR
 14661 ;; This function is called by:
 14662 ;;		Interrupt level 2
 14663 ;; This function uses a non-reentrant model
 14664 ;;
 14665                           
 14666                           	psect	text95
 14667  005B64                     __ptext95:
 14668                           	opt callstack 0
 14669  005B64                     _UART1_rx_vect_isr:
 14670                           	opt callstack 18
 14671                           
 14672                           ;incstack = 0
 14673  005B64  EE13  F150         	lfsr	1,___inthi_sp
 14674                           
 14675                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 14676  005B68  5010               	movf	_UART1_RxInterruptHandler,w,c
 14677  005B6A  1011               	iorwf	_UART1_RxInterruptHandler+1,w,c
 14678  005B6C  1012               	iorwf	_UART1_RxInterruptHandler+2,w,c
 14679  005B6E  B4D8               	btfsc	status,2,c
 14680  005B70  0011               	retfie		f
 14681                           
 14682                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 14683  005B72  D801               	call	i2u380_48
 14684  005B74  0011               	retfie		f
 14685  005B76                     i2u380_48:
 14686  005B76  0005               	push	
 14687  005B78  6EFA               	movwf	pclath,c
 14688  005B7A  5010               	movf	_UART1_RxInterruptHandler,w,c
 14689  005B7C  6EFD               	movwf	tosl,c
 14690  005B7E  5011               	movf	_UART1_RxInterruptHandler+1,w,c
 14691  005B80  6EFE               	movwf	tosh,c
 14692  005B82  5012               	movf	_UART1_RxInterruptHandler+2,w,c
 14693  005B84  6EFF               	movwf	tosu,c
 14694  005B86  50FA               	movf	pclath,w,c
 14695  005B88  0012               	return		;indir
 14696  005B8A                     __end_of_UART1_rx_vect_isr:
 14697                           	opt callstack 0
 14698                           
 14699 ;; *************** function _UART1_Receive_ISR *****************
 14700 ;; Defined at:
 14701 ;;		line 227 in file "mcc_generated_files/uart1.c"
 14702 ;; Parameters:    Size  Location     Type
 14703 ;;		None
 14704 ;; Auto vars:     Size  Location     Type
 14705 ;;		None
 14706 ;; Return value:  Size  Location     Type
 14707 ;;                  1  [STACK] void 
 14708 ;; Registers used:
 14709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14710 ;; Tracked objects:
 14711 ;;		On entry : 0/0
 14712 ;;		On exit  : 0/0
 14713 ;;		Unchanged: 0/0
 14714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14719 ;;Total ram usage:        0 bytes
 14720 ;; Hardware stack levels used:    1
 14721 ;; This function calls:
 14722 ;;		Nothing
 14723 ;; This function is called by:
 14724 ;;		_UART1_Initialize
 14725 ;;		_UART1_rx_vect_isr
 14726 ;; This function uses a reentrant model
 14727 ;;
 14728                           
 14729                           	psect	text96
 14730  005CF0                     __ptext96:
 14731                           	opt callstack 0
 14732  005CF0                     _UART1_Receive_ISR:
 14733                           	opt callstack 18
 14734                           
 14735                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 14736                           
 14737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14738                           ;incstack = 0
 14739  005CF0  0EA1               	movlw	low _uart1RxBuffer
 14740  005CF2  2439               	addwf	_uart1RxHead,w,c	;volatile
 14741  005CF4  6ED9               	movwf	fsr2l,c
 14742  005CF6  6ADA               	clrf	fsr2h,c
 14743  005CF8  0E01               	movlw	high _uart1RxBuffer
 14744  005CFA  22DA               	addwfc	fsr2h,f,c
 14745  005CFC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 14746  005D02  2A39               	incf	_uart1RxHead,f,c	;volatile
 14747                           
 14748                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 14749  005D04  0E3F               	movlw	63
 14750  005D06  6439               	cpfsgt	_uart1RxHead,c
 14751  005D08  D001               	goto	l6209
 14752                           
 14753                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 14754  005D0A  6A39               	clrf	_uart1RxHead,c	;volatile
 14755  005D0C                     l6209:
 14756                           
 14757                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 14758  005D0C  2A37               	incf	_uart1RxCount,f,c	;volatile
 14759                           
 14760                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14761  005D0E  0012               	return		;funcret
 14762  005D10                     __end_of_UART1_Receive_ISR:
 14763                           	opt callstack 0
 14764                           
 14765 ;; *************** function _UART2_tx_vect_isr *****************
 14766 ;; Defined at:
 14767 ;;		line 195 in file "mcc_generated_files/uart2.c"
 14768 ;; Parameters:    Size  Location     Type
 14769 ;;		None
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;		None
 14772 ;; Return value:  Size  Location     Type
 14773 ;;                  1    wreg      void 
 14774 ;; Registers used:
 14775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14776 ;; Tracked objects:
 14777 ;;		On entry : 0/0
 14778 ;;		On exit  : 0/0
 14779 ;;		Unchanged: 0/0
 14780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14785 ;;Total ram usage:        0 bytes
 14786 ;; Hardware stack levels used:    1
 14787 ;; Hardware stack levels required when called:    1
 14788 ;; This function calls:
 14789 ;;		Absolute function
 14790 ;;		_UART2_Transmit_ISR
 14791 ;; This function is called by:
 14792 ;;		Interrupt level 2
 14793 ;; This function uses a non-reentrant model
 14794 ;;
 14795                           
 14796                           	psect	text97
 14797  005B8C                     __ptext97:
 14798                           	opt callstack 0
 14799  005B8C                     _UART2_tx_vect_isr:
 14800                           	opt callstack 18
 14801                           
 14802                           ;incstack = 0
 14803  005B8C  EE13  F150         	lfsr	1,___inthi_sp
 14804                           
 14805                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 14806  005B90  5013               	movf	_UART2_TxInterruptHandler,w,c
 14807  005B92  1014               	iorwf	_UART2_TxInterruptHandler+1,w,c
 14808  005B94  1015               	iorwf	_UART2_TxInterruptHandler+2,w,c
 14809  005B96  B4D8               	btfsc	status,2,c
 14810  005B98  0011               	retfie		f
 14811                           
 14812                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 14813  005B9A  D801               	call	i2u382_48
 14814  005B9C  0011               	retfie		f
 14815  005B9E                     i2u382_48:
 14816  005B9E  0005               	push	
 14817  005BA0  6EFA               	movwf	pclath,c
 14818  005BA2  5013               	movf	_UART2_TxInterruptHandler,w,c
 14819  005BA4  6EFD               	movwf	tosl,c
 14820  005BA6  5014               	movf	_UART2_TxInterruptHandler+1,w,c
 14821  005BA8  6EFE               	movwf	tosh,c
 14822  005BAA  5015               	movf	_UART2_TxInterruptHandler+2,w,c
 14823  005BAC  6EFF               	movwf	tosu,c
 14824  005BAE  50FA               	movf	pclath,w,c
 14825  005BB0  0012               	return		;indir
 14826  005BB2                     __end_of_UART2_tx_vect_isr:
 14827                           	opt callstack 0
 14828                           
 14829 ;; *************** function _UART2_Transmit_ISR *****************
 14830 ;; Defined at:
 14831 ;;		line 213 in file "mcc_generated_files/uart2.c"
 14832 ;; Parameters:    Size  Location     Type
 14833 ;;		None
 14834 ;; Auto vars:     Size  Location     Type
 14835 ;;		None
 14836 ;; Return value:  Size  Location     Type
 14837 ;;                  1  [STACK] void 
 14838 ;; Registers used:
 14839 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14840 ;; Tracked objects:
 14841 ;;		On entry : 0/0
 14842 ;;		On exit  : 3B/39
 14843 ;;		Unchanged: 0/0
 14844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14849 ;;Total ram usage:        0 bytes
 14850 ;; Hardware stack levels used:    1
 14851 ;; This function calls:
 14852 ;;		Nothing
 14853 ;; This function is called by:
 14854 ;;		_UART2_Initialize
 14855 ;;		_UART2_tx_vect_isr
 14856 ;; This function uses a reentrant model
 14857 ;;
 14858                           
 14859                           	psect	text98
 14860  005836                     __ptext98:
 14861                           	opt callstack 0
 14862  005836                     _UART2_Transmit_ISR:
 14863                           	opt callstack 18
 14864                           
 14865                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 14866                           
 14867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14868                           ;incstack = 0
 14869  005836  0E40               	movlw	64
 14870  005838  6034               	cpfslt	_uart2TxBufferRemaining,c
 14871  00583A  D010               	goto	l717
 14872                           
 14873                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 14874  00583C  0E40               	movlw	low _uart2TxBuffer
 14875  00583E  2435               	addwf	_uart2TxTail,w,c	;volatile
 14876  005840  6ED9               	movwf	fsr2l,c
 14877  005842  6ADA               	clrf	fsr2h,c
 14878  005844  0E02               	movlw	high _uart2TxBuffer
 14879  005846  22DA               	addwfc	fsr2h,f,c
 14880  005848  50DF               	movf	indf2,w,c
 14881  00584A  013D               	movlb	61	; () banked
 14882  00584C  6FD2               	movwf	210,b	;volatile
 14883                           
 14884                           ; BSR set to: 61
 14885  00584E  2A35               	incf	_uart2TxTail,f,c	;volatile
 14886                           
 14887                           ; BSR set to: 61
 14888                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 14889  005850  0E3F               	movlw	63
 14890  005852  6435               	cpfsgt	_uart2TxTail,c
 14891  005854  D001               	goto	l6221
 14892                           
 14893                           ; BSR set to: 61
 14894                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 14895  005856  6A35               	clrf	_uart2TxTail,c	;volatile
 14896  005858                     l6221:
 14897                           
 14898                           ; BSR set to: 61
 14899                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 14900  005858  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 14901                           
 14902                           ;mcc_generated_files/uart2.c: 224:     }
 14903  00585A  0012               	return	
 14904  00585C                     l717:
 14905                           
 14906                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 14907  00585C  0139               	movlb	57	; () banked
 14908  00585E  9796               	bcf	150,3,b	;volatile
 14909                           
 14910                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14911  005860  0012               	return		;funcret
 14912  005862                     __end_of_UART2_Transmit_ISR:
 14913                           	opt callstack 0
 14914                           
 14915 ;; *************** function _UART2_rx_vect_isr *****************
 14916 ;; Defined at:
 14917 ;;		line 203 in file "mcc_generated_files/uart2.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;		None
 14920 ;; Auto vars:     Size  Location     Type
 14921 ;;		None
 14922 ;; Return value:  Size  Location     Type
 14923 ;;                  1    wreg      void 
 14924 ;; Registers used:
 14925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14926 ;; Tracked objects:
 14927 ;;		On entry : 0/0
 14928 ;;		On exit  : 0/0
 14929 ;;		Unchanged: 0/0
 14930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14935 ;;Total ram usage:        0 bytes
 14936 ;; Hardware stack levels used:    1
 14937 ;; Hardware stack levels required when called:    1
 14938 ;; This function calls:
 14939 ;;		Absolute function
 14940 ;;		_UART2_Receive_ISR
 14941 ;; This function is called by:
 14942 ;;		Interrupt level 2
 14943 ;; This function uses a non-reentrant model
 14944 ;;
 14945                           
 14946                           	psect	text99
 14947  005BB4                     __ptext99:
 14948                           	opt callstack 0
 14949  005BB4                     _UART2_rx_vect_isr:
 14950                           	opt callstack 18
 14951                           
 14952                           ;incstack = 0
 14953  005BB4  EE13  F150         	lfsr	1,___inthi_sp
 14954                           
 14955                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 14956  005BB8  5016               	movf	_UART2_RxInterruptHandler,w,c
 14957  005BBA  1017               	iorwf	_UART2_RxInterruptHandler+1,w,c
 14958  005BBC  1018               	iorwf	_UART2_RxInterruptHandler+2,w,c
 14959  005BBE  B4D8               	btfsc	status,2,c
 14960  005BC0  0011               	retfie		f
 14961                           
 14962                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 14963  005BC2  D801               	call	i2u384_48
 14964  005BC4  0011               	retfie		f
 14965  005BC6                     i2u384_48:
 14966  005BC6  0005               	push	
 14967  005BC8  6EFA               	movwf	pclath,c
 14968  005BCA  5016               	movf	_UART2_RxInterruptHandler,w,c
 14969  005BCC  6EFD               	movwf	tosl,c
 14970  005BCE  5017               	movf	_UART2_RxInterruptHandler+1,w,c
 14971  005BD0  6EFE               	movwf	tosh,c
 14972  005BD2  5018               	movf	_UART2_RxInterruptHandler+2,w,c
 14973  005BD4  6EFF               	movwf	tosu,c
 14974  005BD6  50FA               	movf	pclath,w,c
 14975  005BD8  0012               	return		;indir
 14976  005BDA                     __end_of_UART2_rx_vect_isr:
 14977                           	opt callstack 0
 14978                           
 14979 ;; *************** function _UART2_Receive_ISR *****************
 14980 ;; Defined at:
 14981 ;;		line 233 in file "mcc_generated_files/uart2.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;		None
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;		None
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  1  [STACK] void 
 14988 ;; Registers used:
 14989 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14999 ;;Total ram usage:        0 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; This function calls:
 15002 ;;		Nothing
 15003 ;; This function is called by:
 15004 ;;		_UART2_Initialize
 15005 ;;		_UART2_rx_vect_isr
 15006 ;; This function uses a reentrant model
 15007 ;;
 15008                           
 15009                           	psect	text100
 15010  005D10                     __ptext100:
 15011                           	opt callstack 0
 15012  005D10                     _UART2_Receive_ISR:
 15013                           	opt callstack 18
 15014                           
 15015                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 15016                           
 15017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15018                           ;incstack = 0
 15019  005D10  0E00               	movlw	low _uart2RxBuffer
 15020  005D12  2433               	addwf	_uart2RxHead,w,c	;volatile
 15021  005D14  6ED9               	movwf	fsr2l,c
 15022  005D16  6ADA               	clrf	fsr2h,c
 15023  005D18  0E02               	movlw	high _uart2RxBuffer
 15024  005D1A  22DA               	addwfc	fsr2h,f,c
 15025  005D1C  006F F743 FFDF     	movff	15824,indf2	;volatile
 15026  005D22  2A33               	incf	_uart2RxHead,f,c	;volatile
 15027                           
 15028                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 15029  005D24  0E3F               	movlw	63
 15030  005D26  6433               	cpfsgt	_uart2RxHead,c
 15031  005D28  D001               	goto	l6231
 15032                           
 15033                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 15034  005D2A  6A33               	clrf	_uart2RxHead,c	;volatile
 15035  005D2C                     l6231:
 15036                           
 15037                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 15038  005D2C  2A31               	incf	_uart2RxCount,f,c	;volatile
 15039                           
 15040                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15041  005D2E  0012               	return		;funcret
 15042  005D30                     __end_of_UART2_Receive_ISR:
 15043                           	opt callstack 0
 15044                           
 15045 ;; *************** function _TMR6_ISR *****************
 15046 ;; Defined at:
 15047 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 15048 ;; Parameters:    Size  Location     Type
 15049 ;;		None
 15050 ;; Auto vars:     Size  Location     Type
 15051 ;;		None
 15052 ;; Return value:  Size  Location     Type
 15053 ;;                  1    wreg      void 
 15054 ;; Registers used:
 15055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+11, tosl, prodl, prodh
 15056 ;; Tracked objects:
 15057 ;;		On entry : 0/0
 15058 ;;		On exit  : 0/0
 15059 ;;		Unchanged: 0/0
 15060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15065 ;;Total ram usage:        2 bytes
 15066 ;; Hardware stack levels used:    1
 15067 ;; Hardware stack levels required when called:    2
 15068 ;; This function calls:
 15069 ;;		_TMR6_CallBack
 15070 ;; This function is called by:
 15071 ;;		Interrupt level 2
 15072 ;; This function uses a non-reentrant model
 15073 ;;
 15074                           
 15075                           	psect	text101
 15076  005BDC                     __ptext101:
 15077                           	opt callstack 0
 15078  005BDC                     _TMR6_ISR:
 15079                           	opt callstack 17
 15080                           
 15081                           ;incstack = 0
 15082  005BDC  0060  F0F4  F05D   	movff	btemp,??_TMR6_ISR
 15083  005BE2  0060  F120  F05E   	movff	btemp+11,??_TMR6_ISR+1
 15084  005BE8  EE13  F150         	lfsr	1,___inthi_sp
 15085                           
 15086                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 15087  005BEC  0139               	movlb	57	; () banked
 15088  005BEE  91A9               	bcf	169,0,b	;volatile
 15089                           
 15090                           ; BSR set to: 57
 15091                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 15092  005BF0  EC56  F02E         	call	_TMR6_CallBack	;wreg free
 15093  005BF4  0060  F178  F048   	movff	??_TMR6_ISR+1,btemp+11
 15094  005BFA  0060  F174  F03D   	movff	??_TMR6_ISR,btemp
 15095  005C00  0011               	retfie		f
 15096  005C02                     __end_of_TMR6_ISR:
 15097                           	opt callstack 0
 15098                           
 15099 ;; *************** function _TMR6_CallBack *****************
 15100 ;; Defined at:
 15101 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;		None
 15104 ;; Auto vars:     Size  Location     Type
 15105 ;;		None
 15106 ;; Return value:  Size  Location     Type
 15107 ;;                  1  [STACK] void 
 15108 ;; Registers used:
 15109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+11, tosl, prodl, prodh
 15110 ;; Tracked objects:
 15111 ;;		On entry : 3F/39
 15112 ;;		On exit  : 0/0
 15113 ;;		Unchanged: 0/0
 15114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15119 ;;Total ram usage:        0 bytes
 15120 ;; Hardware stack levels used:    1
 15121 ;; Hardware stack levels required when called:    1
 15122 ;; This function calls:
 15123 ;;		Absolute function
 15124 ;;		_TMR6_DefaultInterruptHandler
 15125 ;; This function is called by:
 15126 ;;		_TMR6_ISR
 15127 ;; This function uses a reentrant model
 15128 ;;
 15129                           
 15130                           	psect	text102
 15131  005CAC                     __ptext102:
 15132                           	opt callstack 0
 15133  005CAC                     _TMR6_CallBack:
 15134                           	opt callstack 17
 15135                           
 15136                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 15137                           
 15138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15139                           ;incstack = 0
 15140  005CAC  5007               	movf	_TMR6_InterruptHandler,w,c
 15141  005CAE  1008               	iorwf	_TMR6_InterruptHandler+1,w,c
 15142  005CB0  1009               	iorwf	_TMR6_InterruptHandler+2,w,c
 15143  005CB2  B4D8               	btfsc	status,2,c
 15144  005CB4  0012               	return	
 15145                           
 15146                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 15147  005CB6  D801               	call	u355_48
 15148  005CB8  0012               	return	
 15149  005CBA                     u355_48:
 15150  005CBA  0005               	push	
 15151  005CBC  6EFA               	movwf	pclath,c
 15152  005CBE  5007               	movf	_TMR6_InterruptHandler,w,c
 15153  005CC0  6EFD               	movwf	tosl,c
 15154  005CC2  5008               	movf	_TMR6_InterruptHandler+1,w,c
 15155  005CC4  6EFE               	movwf	tosh,c
 15156  005CC6  5009               	movf	_TMR6_InterruptHandler+2,w,c
 15157  005CC8  6EFF               	movwf	tosu,c
 15158  005CCA  50FA               	movf	pclath,w,c
 15159  005CCC  0012               	return		;indir
 15160  005CCE                     __end_of_TMR6_CallBack:
 15161                           	opt callstack 0
 15162                           
 15163 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 15164 ;; Defined at:
 15165 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 15166 ;; Parameters:    Size  Location     Type
 15167 ;;		None
 15168 ;; Auto vars:     Size  Location     Type
 15169 ;;  i               1  [STACK] unsigned char 
 15170 ;; Return value:  Size  Location     Type
 15171 ;;                  1  [STACK] void 
 15172 ;; Registers used:
 15173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
 15174 ;; Tracked objects:
 15175 ;;		On entry : 0/39
 15176 ;;		On exit  : 0/0
 15177 ;;		Unchanged: 0/0
 15178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15183 ;;Total ram usage:        0 bytes
 15184 ;; Hardware stack levels used:    1
 15185 ;; This function calls:
 15186 ;;		Nothing
 15187 ;; This function is called by:
 15188 ;;		_TMR6_Initialize
 15189 ;;		_TMR6_CallBack
 15190 ;; This function uses a reentrant model
 15191 ;;
 15192                           
 15193                           	psect	text103
 15194  005320                     __ptext103:
 15195                           	opt callstack 0
 15196  005320                     _TMR6_DefaultInterruptHandler:
 15197                           	opt callstack 0
 15198                           
 15199                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15200  005320  52E6               	movf	postinc1,f,c
 15201                           
 15202                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 201:  LATEbits
      +                          .LATE0 = (uint8_t) ~LATEbits.LATE0;
 15203                           
 15204                           ;incstack = 0
 15205  005322  A0BE               	btfss	16318,0,c	;volatile
 15206  005324  D002               	goto	u338_40
 15207  005326  0E01               	movlw	1
 15208  005328  D001               	goto	u338_46
 15209  00532A                     u338_40:
 15210  00532A  0E00               	movlw	0
 15211  00532C                     u338_46:
 15212  00532C  0AFF               	xorlw	255
 15213  00532E  6E48               	movwf	btemp+11,c
 15214  005330  50BE               	movf	16318,w,c	;volatile
 15215  005332  1848               	xorwf	btemp+11,w,c
 15216  005334  0BFE               	andlw	-2
 15217  005336  1848               	xorwf	btemp+11,w,c
 15218  005338  6EBE               	movwf	16318,c	;volatile
 15219                           
 15220                           ;mcc_generated_files/tmr6.c: 204:  for (i = 0; i < TMR_COUNT; i++) {
 15221                           ;stkvar	_i @ sp[(-1)+0]
 15222  00533A  0EFF               	movlw	-1
 15223  00533C  6AE3               	clrf	plusw1,c
 15224  00533E                     l5931:
 15225                           
 15226                           ;mcc_generated_files/tmr6.c: 205:   if (tickCount[i] != 0) {
 15227                           ;stkvar	_i @ sp[(-1)+0]
 15228  00533E  0EFF               	movlw	-1
 15229  005340  50E3               	movf	plusw1,w,c
 15230  005342  0D02               	mullw	2
 15231  005344  50F3               	movf	prodl,w,c
 15232  005346  0F79               	addlw	low _tickCount
 15233  005348  6ED9               	movwf	fsr2l,c
 15234  00534A  6ADA               	clrf	fsr2h,c
 15235  00534C  50DE               	movf	postinc2,w,c
 15236  00534E  10DE               	iorwf	postinc2,w,c
 15237  005350  B4D8               	btfsc	status,2,c
 15238  005352  D00A               	goto	l5935
 15239                           
 15240                           ;mcc_generated_files/tmr6.c: 206:    tickCount[i]--;
 15241                           ;stkvar	_i @ sp[(-1)+0]
 15242  005354  0EFF               	movlw	-1
 15243  005356  50E3               	movf	plusw1,w,c
 15244  005358  0D02               	mullw	2
 15245  00535A  50F3               	movf	prodl,w,c
 15246  00535C  0F79               	addlw	low _tickCount
 15247  00535E  6ED9               	movwf	fsr2l,c
 15248  005360  6ADA               	clrf	fsr2h,c
 15249  005362  06DE               	decf	postinc2,f,c
 15250  005364  0E00               	movlw	0
 15251  005366  5ADD               	subwfb	postdec2,f,c
 15252  005368                     l5935:
 15253                           
 15254                           ;mcc_generated_files/tmr6.c: 208:  }
 15255                           ;stkvar	_i @ sp[(-1)+0]
 15256  005368  0EFF               	movlw	-1
 15257  00536A  2AE3               	incf	plusw1,f,c
 15258                           
 15259                           ;stkvar	_i @ sp[(-1)+0]
 15260  00536C  0EFF               	movlw	-1
 15261  00536E  006F FF8C  F03D    	movff	plusw1,btemp
 15262  005374  0E05               	movlw	5
 15263  005376  643D               	cpfsgt	btemp,c
 15264  005378  D7E2               	goto	l5931
 15265                           
 15266                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15267  00537A  52E5               	movf	postdec1,f,c
 15268  00537C  0012               	return		;funcret
 15269  00537E                     __end_of_TMR6_DefaultInterruptHandler:
 15270                           	opt callstack 0
 15271                           
 15272 ;; *************** function _DMA1_DMASCNT_ISR *****************
 15273 ;; Defined at:
 15274 ;;		line 126 in file "mcc_generated_files/dma1.c"
 15275 ;; Parameters:    Size  Location     Type
 15276 ;;		None
 15277 ;; Auto vars:     Size  Location     Type
 15278 ;;		None
 15279 ;; Return value:  Size  Location     Type
 15280 ;;                  1    wreg      void 
 15281 ;; Registers used:
 15282 ;;		None
 15283 ;; Tracked objects:
 15284 ;;		On entry : 0/0
 15285 ;;		On exit  : 3F/0
 15286 ;;		Unchanged: 0/0
 15287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15292 ;;Total ram usage:        0 bytes
 15293 ;; Hardware stack levels used:    1
 15294 ;; This function calls:
 15295 ;;		Nothing
 15296 ;; This function is called by:
 15297 ;;		Interrupt level 2
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           	psect	text104
 15302  005E3C                     __ptext104:
 15303                           	opt callstack 0
 15304  005E3C                     _DMA1_DMASCNT_ISR:
 15305                           	opt callstack 19
 15306                           
 15307                           ;incstack = 0
 15308  005E3C  EE13  F150         	lfsr	1,___inthi_sp
 15309                           
 15310                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 15311  005E40  0139               	movlb	57	; () banked
 15312  005E42  91A2               	bcf	162,0,b	;volatile
 15313                           
 15314                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 15315  005E44  0100               	movlb	0	; () banked
 15316  005E46  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 15317                           
 15318                           ; BSR set to: 0
 15319  005E48  0011               	retfie		f
 15320  005E4A                     __end_of_DMA1_DMASCNT_ISR:
 15321                           	opt callstack 0
 15322                           
 15323 ;; *************** function _DMA1_DMADCNT_ISR *****************
 15324 ;; Defined at:
 15325 ;;		line 133 in file "mcc_generated_files/dma1.c"
 15326 ;; Parameters:    Size  Location     Type
 15327 ;;		None
 15328 ;; Auto vars:     Size  Location     Type
 15329 ;;		None
 15330 ;; Return value:  Size  Location     Type
 15331 ;;                  1    wreg      void 
 15332 ;; Registers used:
 15333 ;;		None
 15334 ;; Tracked objects:
 15335 ;;		On entry : 0/0
 15336 ;;		On exit  : 3F/39
 15337 ;;		Unchanged: 0/0
 15338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15343 ;;Total ram usage:        0 bytes
 15344 ;; Hardware stack levels used:    1
 15345 ;; This function calls:
 15346 ;;		Nothing
 15347 ;; This function is called by:
 15348 ;;		Interrupt level 2
 15349 ;; This function uses a non-reentrant model
 15350 ;;
 15351                           
 15352                           	psect	text105
 15353  005E64                     __ptext105:
 15354                           	opt callstack 0
 15355  005E64                     _DMA1_DMADCNT_ISR:
 15356                           	opt callstack 19
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;incstack = 0
 15360  005E64  EE13  F150         	lfsr	1,___inthi_sp
 15361                           
 15362                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 15363  005E68  0139               	movlb	57	; () banked
 15364  005E6A  93A2               	bcf	162,1,b	;volatile
 15365                           
 15366                           ; BSR set to: 57
 15367  005E6C  0011               	retfie		f
 15368  005E6E                     __end_of_DMA1_DMADCNT_ISR:
 15369                           	opt callstack 0
 15370                           
 15371 ;; *************** function _DMA1_DMAA_ISR *****************
 15372 ;; Defined at:
 15373 ;;		line 143 in file "mcc_generated_files/dma1.c"
 15374 ;; Parameters:    Size  Location     Type
 15375 ;;		None
 15376 ;; Auto vars:     Size  Location     Type
 15377 ;;		None
 15378 ;; Return value:  Size  Location     Type
 15379 ;;                  1    wreg      void 
 15380 ;; Registers used:
 15381 ;;		None
 15382 ;; Tracked objects:
 15383 ;;		On entry : 0/0
 15384 ;;		On exit  : 3F/39
 15385 ;;		Unchanged: 0/0
 15386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15391 ;;Total ram usage:        0 bytes
 15392 ;; Hardware stack levels used:    1
 15393 ;; This function calls:
 15394 ;;		Nothing
 15395 ;; This function is called by:
 15396 ;;		Interrupt level 2
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400                           	psect	text106
 15401  005E70                     __ptext106:
 15402                           	opt callstack 0
 15403  005E70                     _DMA1_DMAA_ISR:
 15404                           	opt callstack 19
 15405                           
 15406                           ; BSR set to: 57
 15407                           ;incstack = 0
 15408  005E70  EE13  F150         	lfsr	1,___inthi_sp
 15409                           
 15410                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 15411  005E74  0139               	movlb	57	; () banked
 15412  005E76  97A2               	bcf	162,3,b	;volatile
 15413                           
 15414                           ; BSR set to: 57
 15415  005E78  0011               	retfie		f
 15416  005E7A                     __end_of_DMA1_DMAA_ISR:
 15417                           	opt callstack 0
 15418                           
 15419 ;; *************** function _DMA1_DMAOR_ISR *****************
 15420 ;; Defined at:
 15421 ;;		line 154 in file "mcc_generated_files/dma1.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;		None
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;		None
 15426 ;; Return value:  Size  Location     Type
 15427 ;;                  1    wreg      void 
 15428 ;; Registers used:
 15429 ;;		None
 15430 ;; Tracked objects:
 15431 ;;		On entry : 0/0
 15432 ;;		On exit  : 3F/39
 15433 ;;		Unchanged: 0/0
 15434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15439 ;;Total ram usage:        0 bytes
 15440 ;; Hardware stack levels used:    1
 15441 ;; This function calls:
 15442 ;;		Nothing
 15443 ;; This function is called by:
 15444 ;;		Interrupt level 2
 15445 ;; This function uses a non-reentrant model
 15446 ;;
 15447                           
 15448                           	psect	text107
 15449  005E4C                     __ptext107:
 15450                           	opt callstack 0
 15451  005E4C                     _DMA1_DMAOR_ISR:
 15452                           	opt callstack 19
 15453                           
 15454                           ; BSR set to: 57
 15455                           ;incstack = 0
 15456  005E4C  EE13  F150         	lfsr	1,___inthi_sp
 15457                           
 15458                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 15459  005E50  0139               	movlb	57	; () banked
 15460  005E52  95A2               	bcf	162,2,b	;volatile
 15461                           
 15462                           ;mcc_generated_files/dma1.c: 159:  LATEbits.LATE1 = 0;
 15463  005E54  92BE               	bcf	16318,1,c	;volatile
 15464                           
 15465                           ; BSR set to: 57
 15466  005E56  0011               	retfie		f
 15467  005E58                     __end_of_DMA1_DMAOR_ISR:
 15468                           	opt callstack 0
 15469                           
 15470 ;; *************** function _TMR5_ISR *****************
 15471 ;; Defined at:
 15472 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 15473 ;; Parameters:    Size  Location     Type
 15474 ;;		None
 15475 ;; Auto vars:     Size  Location     Type
 15476 ;;		None
 15477 ;; Return value:  Size  Location     Type
 15478 ;;                  1    wreg      void 
 15479 ;; Registers used:
 15480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15481 ;; Tracked objects:
 15482 ;;		On entry : 0/0
 15483 ;;		On exit  : 0/0
 15484 ;;		Unchanged: 0/0
 15485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15490 ;;Total ram usage:        0 bytes
 15491 ;; Hardware stack levels used:    1
 15492 ;; Hardware stack levels required when called:    2
 15493 ;; This function calls:
 15494 ;;		_TMR5_CallBack
 15495 ;;		_TMR5_WriteTimer
 15496 ;; This function is called by:
 15497 ;;		Interrupt level 2
 15498 ;; This function uses a non-reentrant model
 15499 ;;
 15500                           
 15501                           	psect	text108
 15502  00571C                     __ptext108:
 15503                           	opt callstack 0
 15504  00571C                     _TMR5_ISR:
 15505                           	opt callstack 17
 15506                           
 15507                           ; BSR set to: 57
 15508                           ;incstack = 0
 15509  00571C  EE13  F150         	lfsr	1,___inthi_sp
 15510                           
 15511                           ;mcc_generated_files/tmr5.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 170:     PIR8bits.TMR5IF = 0;
 15512  005720  0139               	movlb	57	; () banked
 15513  005722  9DA8               	bcf	168,6,b	;volatile
 15514                           
 15515                           ; BSR set to: 57
 15516                           ;mcc_generated_files/tmr5.c: 171:     TMR5_WriteTimer(timer5ReloadVal);
 15517  005724  0060  F0BB  FFE6   	movff	_timer5ReloadVal,postinc1
 15518  00572A  0060  F0BF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 15519  005730  EC12  F02B         	call	_TMR5_WriteTimer	;wreg free
 15520                           
 15521                           ;mcc_generated_files/tmr5.c: 174:     if (++CountCallBack >= 100)
 15522  005734  4A2C               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 15523  005736  2A2D               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 15524  005738  502D               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 15525  00573A  E104               	bnz	i2u497_40
 15526  00573C  0E64               	movlw	100
 15527  00573E  5C2C               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 15528  005740  A0D8               	btfss	status,0,c
 15529  005742  0011               	retfie		f
 15530  005744                     i2u497_40:
 15531                           
 15532                           ;mcc_generated_files/tmr5.c: 175:     {;mcc_generated_files/tmr5.c: 177:         TMR5_Ca
      +                          llBack();
 15533  005744  EC67  F02E         	call	_TMR5_CallBack	;wreg free
 15534                           
 15535                           ;mcc_generated_files/tmr5.c: 180:         CountCallBack = 0;
 15536  005748  6A2C               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 15537  00574A  6A2D               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 15538  00574C  0011               	retfie		f
 15539  00574E                     __end_of_TMR5_ISR:
 15540                           	opt callstack 0
 15541                           
 15542 ;; *************** function _TMR5_WriteTimer *****************
 15543 ;; Defined at:
 15544 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 15545 ;; Parameters:    Size  Location     Type
 15546 ;;  timerVal        2  [STACK] unsigned short 
 15547 ;; Auto vars:     Size  Location     Type
 15548 ;;		None
 15549 ;; Return value:  Size  Location     Type
 15550 ;;                  1  [STACK] void 
 15551 ;; Registers used:
 15552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15553 ;; Tracked objects:
 15554 ;;		On entry : 3F/39
 15555 ;;		On exit  : 0/0
 15556 ;;		Unchanged: 0/0
 15557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15562 ;;Total ram usage:        0 bytes
 15563 ;; Hardware stack levels used:    1
 15564 ;; This function calls:
 15565 ;;		Nothing
 15566 ;; This function is called by:
 15567 ;;		_TMR5_ISR
 15568 ;; This function uses a reentrant model
 15569 ;;
 15570                           
 15571                           	psect	text109
 15572  005624                     __ptext109:
 15573                           	opt callstack 0
 15574  005624                     _TMR5_WriteTimer:
 15575                           	opt callstack 18
 15576                           
 15577                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 15578                           
 15579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15580                           ;incstack = 0
 15581  005624  A49A               	btfss	16282,2,c	;volatile
 15582  005626  D00F               	goto	l4033
 15583                           
 15584                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 15585  005628  909A               	bcf	16282,0,c	;volatile
 15586                           
 15587                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (timerVal >> 8);
 15588                           ;stkvar	_timerVal @ sp[(0)+-2]
 15589  00562A  0EFF               	movlw	255
 15590  00562C  24E1               	addwf	fsr1l,w,c
 15591  00562E  6ED9               	movwf	fsr2l,c
 15592  005630  0EFF               	movlw	255
 15593  005632  20E2               	addwfc	fsr1h,w,c
 15594  005634  6EDA               	movwf	fsr2h,c
 15595  005636  50DF               	movf	indf2,w,c
 15596  005638  6E99               	movwf	16281,c	;volatile
 15597                           
 15598                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = timerVal;
 15599                           ;stkvar	_timerVal @ sp[(0)+-2]
 15600  00563A  0EFE               	movlw	-2
 15601  00563C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 15602                           
 15603                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 15604  005642  809A               	bsf	16282,0,c	;volatile
 15605                           
 15606                           ;mcc_generated_files/tmr5.c: 141:     }
 15607  005644  D00C               	goto	l1120
 15608  005646                     l4033:
 15609                           
 15610                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (timerVal >> 8);
 15611                           ;stkvar	_timerVal @ sp[(0)+-2]
 15612  005646  0EFF               	movlw	255
 15613  005648  24E1               	addwf	fsr1l,w,c
 15614  00564A  6ED9               	movwf	fsr2l,c
 15615  00564C  0EFF               	movlw	255
 15616  00564E  20E2               	addwfc	fsr1h,w,c
 15617  005650  6EDA               	movwf	fsr2h,c
 15618  005652  50DF               	movf	indf2,w,c
 15619  005654  6E99               	movwf	16281,c	;volatile
 15620                           
 15621                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = timerVal;
 15622                           ;stkvar	_timerVal @ sp[(0)+-2]
 15623  005656  0EFE               	movlw	-2
 15624  005658  006F FF8F FF98     	movff	plusw1,16280	;volatile
 15625  00565E                     l1120:
 15626                           
 15627                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 15628  00565E  52E5               	movf	postdec1,f,c
 15629  005660  52E5               	movf	postdec1,f,c
 15630  005662  0012               	return		;funcret
 15631  005664                     __end_of_TMR5_WriteTimer:
 15632                           	opt callstack 0
 15633                           
 15634 ;; *************** function _TMR5_CallBack *****************
 15635 ;; Defined at:
 15636 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 15637 ;; Parameters:    Size  Location     Type
 15638 ;;		None
 15639 ;; Auto vars:     Size  Location     Type
 15640 ;;		None
 15641 ;; Return value:  Size  Location     Type
 15642 ;;                  1  [STACK] void 
 15643 ;; Registers used:
 15644 ;;		wreg, status,2, status,0, pclath, tosl
 15645 ;; Tracked objects:
 15646 ;;		On entry : 0/39
 15647 ;;		On exit  : 0/0
 15648 ;;		Unchanged: 0/0
 15649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15654 ;;Total ram usage:        0 bytes
 15655 ;; Hardware stack levels used:    1
 15656 ;; Hardware stack levels required when called:    1
 15657 ;; This function calls:
 15658 ;;		Absolute function
 15659 ;;		_TMR5_DefaultInterruptHandler
 15660 ;; This function is called by:
 15661 ;;		_TMR5_ISR
 15662 ;; This function uses a reentrant model
 15663 ;;
 15664                           
 15665                           	psect	text110
 15666  005CCE                     __ptext110:
 15667                           	opt callstack 0
 15668  005CCE                     _TMR5_CallBack:
 15669                           	opt callstack 17
 15670                           
 15671                           ;mcc_generated_files/tmr5.c: 187:     if(TMR5_InterruptHandler)
 15672                           
 15673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15674                           ;incstack = 0
 15675  005CCE  5004               	movf	_TMR5_InterruptHandler,w,c
 15676  005CD0  1005               	iorwf	_TMR5_InterruptHandler+1,w,c
 15677  005CD2  1006               	iorwf	_TMR5_InterruptHandler+2,w,c
 15678  005CD4  B4D8               	btfsc	status,2,c
 15679  005CD6  0012               	return	
 15680                           
 15681                           ;mcc_generated_files/tmr5.c: 188:     {;mcc_generated_files/tmr5.c: 189:         TMR5_In
      +                          terruptHandler();
 15682  005CD8  D801               	call	u164_48
 15683  005CDA  0012               	return	
 15684  005CDC                     u164_48:
 15685  005CDC  0005               	push	
 15686  005CDE  6EFA               	movwf	pclath,c
 15687  005CE0  5004               	movf	_TMR5_InterruptHandler,w,c
 15688  005CE2  6EFD               	movwf	tosl,c
 15689  005CE4  5005               	movf	_TMR5_InterruptHandler+1,w,c
 15690  005CE6  6EFE               	movwf	tosh,c
 15691  005CE8  5006               	movf	_TMR5_InterruptHandler+2,w,c
 15692  005CEA  6EFF               	movwf	tosu,c
 15693  005CEC  50FA               	movf	pclath,w,c
 15694  005CEE  0012               	return		;indir
 15695  005CF0                     __end_of_TMR5_CallBack:
 15696                           	opt callstack 0
 15697                           
 15698 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15699 ;; Defined at:
 15700 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1  [STACK] void 
 15707 ;; Registers used:
 15708 ;;		None
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/39
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15718 ;;Total ram usage:        0 bytes
 15719 ;; Hardware stack levels used:    1
 15720 ;; This function calls:
 15721 ;;		Nothing
 15722 ;; This function is called by:
 15723 ;;		_TMR5_Initialize
 15724 ;;		_TMR5_CallBack
 15725 ;; This function uses a reentrant model
 15726 ;;
 15727                           
 15728                           	psect	text111
 15729  005EAE                     __ptext111:
 15730                           	opt callstack 0
 15731  005EAE                     _TMR5_DefaultInterruptHandler:
 15732                           	opt callstack 17
 15733                           
 15734                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15735                           
 15736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15737                           ;incstack = 0
 15738  005EAE  0012               	return		;funcret
 15739  005EB0                     __end_of_TMR5_DefaultInterruptHandler:
 15740                           	opt callstack 0
 15741                           
 15742                           ;
 15743                           ; Interrupt Vector Table @ 0x8
 15744                           ;
 15745                           
 15746                           	psect	ivt0x8
 15747  000008                     __pivt0x8:
 15748                           	opt callstack 0
 15749  000008                     ivt0x8_base:
 15750                           	opt callstack 0
 15751                           
 15752                           ; Vector 0 : SWINT
 15753  000008  17A8               	dw	_Default_ISR shr (0+2)
 15754                           
 15755                           ; Vector 1 : HLVD
 15756  00000A  17A8               	dw	_Default_ISR shr (0+2)
 15757                           
 15758                           ; Vector 2 : OSF
 15759  00000C  17A8               	dw	_Default_ISR shr (0+2)
 15760                           
 15761                           ; Vector 3 : CSW
 15762  00000E  17A8               	dw	_Default_ISR shr (0+2)
 15763                           
 15764                           ; Vector 4 : NVM
 15765  000010  17A8               	dw	_Default_ISR shr (0+2)
 15766                           
 15767                           ; Vector 5 : SCAN
 15768  000012  17A8               	dw	_Default_ISR shr (0+2)
 15769                           
 15770                           ; Vector 6 : CRC
 15771  000014  17A8               	dw	_Default_ISR shr (0+2)
 15772                           
 15773                           ; Vector 7 : IOC
 15774  000016  17A8               	dw	_Default_ISR shr (0+2)
 15775                           
 15776                           ; Vector 8 : INT0
 15777  000018  1783               	dw	_INT0_ISR shr (0+2)
 15778                           
 15779                           ; Vector 9 : ZCD
 15780  00001A  17A8               	dw	_Default_ISR shr (0+2)
 15781                           
 15782                           ; Vector 10 : AD
 15783  00001C  162E               	dw	_ADCC_ISR shr (0+2)
 15784                           
 15785                           ; Vector 11 : ADT
 15786  00001E  17A8               	dw	_Default_ISR shr (0+2)
 15787                           
 15788                           ; Vector 12 : CMP1
 15789  000020  17A8               	dw	_Default_ISR shr (0+2)
 15790                           
 15791                           ; Vector 13 : SMT1
 15792  000022  17A8               	dw	_Default_ISR shr (0+2)
 15793                           
 15794                           ; Vector 14 : SMT1PRA
 15795  000024  17A8               	dw	_Default_ISR shr (0+2)
 15796                           
 15797                           ; Vector 15 : SMT1PRW
 15798  000026  17A8               	dw	_Default_ISR shr (0+2)
 15799                           
 15800                           ; Vector 16 : DMA1SCNT
 15801  000028  178F               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 15802                           
 15803                           ; Vector 17 : DMA1DCNT
 15804  00002A  1799               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 15805                           
 15806                           ; Vector 18 : DMA1OR
 15807  00002C  1793               	dw	_DMA1_DMAOR_ISR shr (0+2)
 15808                           
 15809                           ; Vector 19 : DMA1A
 15810  00002E  179C               	dw	_DMA1_DMAA_ISR shr (0+2)
 15811                           
 15812                           ; Vector 20 : SPI1RX
 15813  000030  17A8               	dw	_Default_ISR shr (0+2)
 15814                           
 15815                           ; Vector 21 : SPI1TX
 15816  000032  17A8               	dw	_Default_ISR shr (0+2)
 15817                           
 15818                           ; Vector 22 : SPI1
 15819  000034  17A8               	dw	_Default_ISR shr (0+2)
 15820                           
 15821                           ; Vector 23 : I2C1RX
 15822  000036  17A8               	dw	_Default_ISR shr (0+2)
 15823                           
 15824                           ; Vector 24 : I2C1TX
 15825  000038  17A8               	dw	_Default_ISR shr (0+2)
 15826                           
 15827                           ; Vector 25 : I2C1
 15828  00003A  17A8               	dw	_Default_ISR shr (0+2)
 15829                           
 15830                           ; Vector 26 : I2C1E
 15831  00003C  17A8               	dw	_Default_ISR shr (0+2)
 15832                           
 15833                           ; Vector 27 : U1RX
 15834  00003E  16D9               	dw	_UART1_rx_vect_isr shr (0+2)
 15835                           
 15836                           ; Vector 28 : U1TX
 15837  000040  16CF               	dw	_UART1_tx_vect_isr shr (0+2)
 15838                           
 15839                           ; Vector 29 : U1E
 15840  000042  17A8               	dw	_Default_ISR shr (0+2)
 15841                           
 15842                           ; Vector 30 : U1
 15843  000044  17A8               	dw	_Default_ISR shr (0+2)
 15844                           
 15845                           ; Vector 31 : TMR0
 15846  000046  17A8               	dw	_Default_ISR shr (0+2)
 15847                           
 15848                           ; Vector 32 : TMR1
 15849  000048  17A8               	dw	_Default_ISR shr (0+2)
 15850                           
 15851                           ; Vector 33 : TMR1G
 15852  00004A  17A8               	dw	_Default_ISR shr (0+2)
 15853                           
 15854                           ; Vector 34 : TMR2
 15855  00004C  17A8               	dw	_Default_ISR shr (0+2)
 15856                           
 15857                           ; Vector 35 : CCP1
 15858  00004E  17A8               	dw	_Default_ISR shr (0+2)
 15859                           
 15860                           ; Vector 36 : Undefined
 15861  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15862                           
 15863                           ; Vector 37 : NCO1
 15864  000052  17A8               	dw	_Default_ISR shr (0+2)
 15865                           
 15866                           ; Vector 38 : CWG1
 15867  000054  17A8               	dw	_Default_ISR shr (0+2)
 15868                           
 15869                           ; Vector 39 : CLC1
 15870  000056  17A8               	dw	_Default_ISR shr (0+2)
 15871                           
 15872                           ; Vector 40 : INT1
 15873  000058  1787               	dw	_INT1_ISR shr (0+2)
 15874                           
 15875                           ; Vector 41 : CMP2
 15876  00005A  17A8               	dw	_Default_ISR shr (0+2)
 15877                           
 15878                           ; Vector 42 : DMA2SCNT
 15879  00005C  17A8               	dw	_Default_ISR shr (0+2)
 15880                           
 15881                           ; Vector 43 : DMA2DCNT
 15882  00005E  17A8               	dw	_Default_ISR shr (0+2)
 15883                           
 15884                           ; Vector 44 : DMA2OR
 15885  000060  17A8               	dw	_Default_ISR shr (0+2)
 15886                           
 15887                           ; Vector 45 : DMA2A
 15888  000062  17A8               	dw	_Default_ISR shr (0+2)
 15889                           
 15890                           ; Vector 46 : I2C2RX
 15891  000064  17A8               	dw	_Default_ISR shr (0+2)
 15892                           
 15893                           ; Vector 47 : I2C2TX
 15894  000066  17A8               	dw	_Default_ISR shr (0+2)
 15895                           
 15896                           ; Vector 48 : I2C2
 15897  000068  17A8               	dw	_Default_ISR shr (0+2)
 15898                           
 15899                           ; Vector 49 : I2C2E
 15900  00006A  17A8               	dw	_Default_ISR shr (0+2)
 15901                           
 15902                           ; Vector 50 : U2RX
 15903  00006C  16ED               	dw	_UART2_rx_vect_isr shr (0+2)
 15904                           
 15905                           ; Vector 51 : U2TX
 15906  00006E  16E3               	dw	_UART2_tx_vect_isr shr (0+2)
 15907                           
 15908                           ; Vector 52 : U2E
 15909  000070  17A8               	dw	_Default_ISR shr (0+2)
 15910                           
 15911                           ; Vector 53 : U2
 15912  000072  17A8               	dw	_Default_ISR shr (0+2)
 15913                           
 15914                           ; Vector 54 : TMR3
 15915  000074  17A8               	dw	_Default_ISR shr (0+2)
 15916                           
 15917                           ; Vector 55 : TMR3G
 15918  000076  17A8               	dw	_Default_ISR shr (0+2)
 15919                           
 15920                           ; Vector 56 : TMR4
 15921  000078  17A8               	dw	_Default_ISR shr (0+2)
 15922                           
 15923                           ; Vector 57 : CCP2
 15924  00007A  17A8               	dw	_Default_ISR shr (0+2)
 15925                           
 15926                           ; Vector 58 : Undefined
 15927  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15928                           
 15929                           ; Vector 59 : CWG2
 15930  00007E  17A8               	dw	_Default_ISR shr (0+2)
 15931                           
 15932                           ; Vector 60 : CLC2
 15933  000080  17A8               	dw	_Default_ISR shr (0+2)
 15934                           
 15935                           ; Vector 61 : INT2
 15936  000082  178B               	dw	_INT2_ISR shr (0+2)
 15937                           
 15938                           ; Vector 62 : Undefined
 15939  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15940                           
 15941                           ; Vector 63 : Undefined
 15942  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15943                           
 15944                           ; Vector 64 : Undefined
 15945  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15946                           
 15947                           ; Vector 65 : Undefined
 15948  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15949                           
 15950                           ; Vector 66 : Undefined
 15951  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15952                           
 15953                           ; Vector 67 : Undefined
 15954  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15955                           
 15956                           ; Vector 68 : Undefined
 15957  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15958                           
 15959                           ; Vector 69 : Undefined
 15960  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15961                           
 15962                           ; Vector 70 : TMR5
 15963  000094  15C7               	dw	_TMR5_ISR shr (0+2)
 15964                           
 15965                           ; Vector 71 : TMR5G
 15966  000096  17A8               	dw	_Default_ISR shr (0+2)
 15967                           
 15968                           ; Vector 72 : TMR6
 15969  000098  16F7               	dw	_TMR6_ISR shr (0+2)
 15970                           
 15971                           ; Vector 73 : CCP3
 15972  00009A  17A8               	dw	_Default_ISR shr (0+2)
 15973                           
 15974                           ; Vector 74 : CWG3
 15975  00009C  17A8               	dw	_Default_ISR shr (0+2)
 15976                           
 15977                           ; Vector 75 : CLC3
 15978  00009E  17A8               	dw	_Default_ISR shr (0+2)
 15979                           
 15980                           ; Vector 76 : Undefined
 15981  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15982                           
 15983                           ; Vector 77 : Undefined
 15984  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15985                           
 15986                           ; Vector 78 : Undefined
 15987  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15988                           
 15989                           ; Vector 79 : Undefined
 15990  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15991                           
 15992                           ; Vector 80 : CCP4
 15993  0000A8  17A8               	dw	_Default_ISR shr (0+2)
 15994                           
 15995                           ; Vector 81 : CLC4
 15996  0000AA  17A8               	dw	_Default_ISR shr (0+2)
 15997  0000AC                     ivt0x8_undefint:
 15998                           	opt callstack 0
 15999  0000AC  00FF               	reset	
 16000                           
 16001                           	psect	text112
 16002  000000                     __ptext112:
 16003                           	opt callstack 0
 16004                           
 16005                           	psect	rparam
 16006  0000                     
 16007                           	psect	temp
 16008  00003D                     btemp:
 16009                           	opt callstack 0
 16010  00003D                     	ds	32
 16011  0000                     wtemp0	set	btemp
 16012  0000                     wtemp1	set	btemp+2
 16013  0000                     wtemp2	set	btemp+4
 16014  0000                     wtemp3	set	btemp+6
 16015  0000                     wtemp4	set	btemp+8
 16016  0000                     wtemp5	set	btemp+10
 16017  0000                     wtemp8	set	btemp+1
 16018  0000                     ttemp0	set	btemp
 16019  0000                     ttemp1	set	btemp+3
 16020  0000                     ttemp2	set	btemp+6
 16021  0000                     ttemp3	set	btemp+9
 16022  0000                     ttemp5	set	btemp+1
 16023  0000                     ttemp6	set	btemp+4
 16024  0000                     ttemp7	set	btemp+8
 16025  0000                     ltemp0	set	btemp
 16026  0000                     ltemp1	set	btemp+4
 16027  0000                     ltemp2	set	btemp+8
 16028  0000                     lltemp0	set	btemp
 16029  0000                     lltemp1	set	btemp+8
 16030  0000                     lltemp2	set	btemp+16
 16031  0000                     lltemp3	set	btemp+24
 16032                           tosu	equ	0x3FFF
 16033                           tosh	equ	0x3FFE
 16034                           tosl	equ	0x3FFD
 16035                           stkptr	equ	0x3FFC
 16036                           pclatu	equ	0x3FFB
 16037                           pclath	equ	0x3FFA
 16038                           pcl	equ	0x3FF9
 16039                           tblptru	equ	0x3FF8
 16040                           tblptrh	equ	0x3FF7
 16041                           tblptrl	equ	0x3FF6
 16042                           tablat	equ	0x3FF5
 16043                           prodh	equ	0x3FF4
 16044                           prodl	equ	0x3FF3
 16045                           indf0	equ	0x3FEF
 16046                           postinc0	equ	0x3FEE
 16047                           postdec0	equ	0x3FED
 16048                           preinc0	equ	0x3FEC
 16049                           plusw0	equ	0x3FEB
 16050                           fsr0h	equ	0x3FEA
 16051                           fsr0l	equ	0x3FE9
 16052                           wreg	equ	0x3FE8
 16053                           indf1	equ	0x3FE7
 16054                           postinc1	equ	0x3FE6
 16055                           postdec1	equ	0x3FE5
 16056                           preinc1	equ	0x3FE4
 16057                           plusw1	equ	0x3FE3
 16058                           fsr1h	equ	0x3FE2
 16059                           fsr1l	equ	0x3FE1
 16060                           bsr	equ	0x3FE0
 16061                           indf2	equ	0x3FDF
 16062                           postinc2	equ	0x3FDE
 16063                           postdec2	equ	0x3FDD
 16064                           preinc2	equ	0x3FDC
 16065                           plusw2	equ	0x3FDB
 16066                           fsr2h	equ	0x3FDA
 16067                           fsr2l	equ	0x3FD9
 16068                           status	equ	0x3FD8


Data Sizes:
    Strings     110
    Constant    0
    Data        280
    BSS         603
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      62
    BANK0           160      0     160
    BANK1           256      0     225
    BANK2           256      0     192
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_5(CODE[23]), STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), 
		 -> STR_1(CODE[61]), 

    s	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4264_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cfmt	PTR unsigned char  size(1) Largest target is 61
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    F16582.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    S3543response_type$header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    block.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10.block(BANK1[10]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    strPtr	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S2007spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S2007spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   69905
                  _SYSTEM_Initialize
                        _UART1_Write
                   _UART1_put_buffer
                             _WaitMs
                     _block_checksum
                _eaDogM_WriteCommand
                 _eaDogM_WriteString
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                          _secs_send
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           5     4      1    1748
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      2     0      2      88
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35     9     26   11789
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1605
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   25832
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1   12950
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   12820
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1   12789
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3   11564
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   11459
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6   11163
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     4      5    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     674
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (9) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     9      1     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            2     2      0      90
                                              0 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            0     0      0      60
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_Write
   _UART1_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _block_checksum
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _ringBufS_flush
       _memset
     _start_lcd
     _strlen
     _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _secs_send
     _UART1_Write
     _UART1_is_tx_ready
     _UART1_put_buffer
     _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E1       7       87.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     375      58        0.0%
DATA                 0      0     375       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar  8 18:28:55 2019

                    _SPI1_Exchange8bit 5D30                                      _V 0089  
     __end_of_TMR5_SetInterruptHandler 5A9A                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0192  
                                  _H13 0182                                    _H14 0171  
                                  _H24 0141                                    _H18 015C  
                                  _H53 0386                                    l194 5DE2  
                                  l572 56CC                                    l717 585C  
                                  l579 567A                                    l597 5830  
                                  l849 5D3E                                    _GIE 01FE97  
                                  _abs 5512                                    _pad 46BA  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5C46  
                         _run_checksum 58E2                     _UART1_Transmit_ISR 580A  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5C68  
                         __CFG_ZCD$OFF 000000                                   l1120 565E  
                                 l1213 3496                                   l1218 333C  
                                 l1227 33EC                                   l1430 4C48  
                                 l1504 3A14                                   l1434 4EAA  
                                 l1530 40D0                                   l1294 538A  
                                 l1712 2BE0                                   l4033 5646  
                                 l1644 470E                                   l1558 4492  
                                 l2464 3EB6                                   l2536 46B0  
                                 l1664 2824                                   l5017 541C  
                                 l2457 5552                                   l6001 58A2  
                                 l1762 273C                                   l1691 35A2  
                                 l2574 4F2C                                   l2488 40BC  
                                 l5241 3F52                                   l6121 4596  
                                 l5251 4012                                   l5243 3F6A  
                                 l5235 3F26                                   l5227 3EB2  
                                 l6221 5858                                   l5261 40AC  
                                 l5245 3F70                                   l6045 58EE  
                                 l6109 4550                                   l6061 44BA  
                                 l6053 44A2                                   l6231 5D2C  
                                 l5247 3FAC                                   l7007 4F54  
                                 l7111 3614                                   l5407 539C  
                                 l6119 4570                                   l6209 5D0C  
                                 l7009 4F80                                   l7041 285E  
                                 l7033 2814                                   l7121 36B2  
                                 l6065 44C6                                   l6057 44AE  
                                 l7115 3644                                   l7107 35D8  
                                 l7203 2EE8                                   l5507 5884  
                                 l6091 451C                                   l7045 287C  
                                 l7125 36DE                                   l7221 20DE  
                                 l6093 4536                                   l6077 44E4  
                                 l6069 44D2                                   l7055 2A82  
                                 l7143 2BD0                                   l6079 4510  
                                 l7129 371A                                   l4921 4F1C  
                                 l7313 267A                                   l7241 2108  
                                 l7233 20EA                                   l7225 20E2  
                                 l7217 20C8                                   l7401 4938  
                                 l6097 4542                                   l7075 2B34  
                                 l7091 3524                                   l7163 2CA6  
                                 l7155 2C46                                   l7323 26D2  
                                 l7219 20CA                                   l7243 2158  
                                 l4853 4FE0                                   l7149 2C0A  
                                 l7261 222C                                   l7237 20EE  
                                 l7229 20E6                                   l5493 569A  
                                 l6199 582C                                   l4855 5002  
                                 l4943 3810                                   l7079 2B64  
                                 l7319 26CE                                   l5903 56A4  
                                 l5567 5C1C                                   l5495 569C  
                                 l4961 3928                                   l4937 37BC  
                                 l7257 21F4                                   l7329 26EE  
                                 l7361 3076                                   l5931 533E  
                                 l7179 2D9C                                   l7187 2E16  
                                 l7259 221A                                   l7355 2FB8  
                                 l7603 3A5C                                   l4949 3856  
                                 l4981 3CB6                                   l7277 232A  
                                 l7429 4B46                                   l7461 4410  
                                 l7453 4362                                   l7621 3AB0  
                                 l5935 5368                                   l7375 318E  
                                 l7367 30E0                                   l7289 2460  
                                 l7473 4464                                   l7465 442A  
                                 l7633 3B38                                   l7625 3AE6  
                                 l7609 3A7C                                   l4899 5542  
                                 l7299 2508                                   l7387 4DA4  
                                 l7475 448C                                   l7715 41C4  
                                 l4997 3DEA                                   l4989 3D3E  
                                 l7389 4DE4                                   l7397 48C6  
                                 l7661 3BEE                                   l7645 3BB6  
                                 l7637 3B68                                   l7629 3B0A  
                                 l7717 41D0                                   l7709 4170  
                                 l7663 3BF6                                   l7583 39DE  
                                 l7743 4264                                   l7735 4232  
                                 l7831 33DC                                   l7823 33BC  
                                 l7657 3BDC                                   l7649 3BBA  
                                 l7745 4272                                   l7729 4220  
                                 l7753 428C                                   l7809 335A  
                                 l7659 3BEA                                   l7667 3C04  
                                 l7747 4276                                   l7755 42CE  
                                 l7827 33C4                                   l6965 45DE  
                                 l7669 3C46                                   l7749 427E  
                                 l7693 410E                                   l7853 3460  
                                 l7845 3416                                   l7773 3220  
                                 l6975 504E                                   l6991 4718  
                                 l7775 3226                                   l6985 46DE  
                                 l7857 3464                                   l6979 508C  
                                 l6995 4754                                   l7699 412E  
                                 l6989 4706                                   l6999 4796  
                                 STR_1 2001                                   STR_2 2032  
                                 STR_3 2055                                   STR_4 2063  
                                 STR_5 203E                                   STR_6 206C  
                                 STR_7 2069                                   u2200 4EDC  
                                 u2220 57D2                                   u2300 3882  
                                 u2140 5526                                   _LATA 003FBA  
                                 u2230 57D4                                   u2150 57A2  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2320 3960                                   u2400 3D38  
                                 u2160 57A4                                   u2080 5772  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 u2250 37B6                                   u2410 3D6A  
                                 u4010 2776                                   u2170 55D6  
                                 u2090 5774                                   _LATF 003FBF  
                                 u2340 39B2                                   u4020 2778  
                                 u2180 55D8                                   u4101 2AC6  
                                 u2270 380C                                   u2430 3E22  
                                 u4110 2ADC                                   u2190 4EDA  
                                 u4111 2ADA                                   u3320 51A4  
                                 u4120 2AF0                                   u4040 27E8  
                                 u2281 3816                                   u2290 3850  
                                 u2450 3E74                                   u2370 3CB0  
                                 u4130 2AF4                                   u4060 27FA  
                                 u4220 363A                                   u4300 2C9E  
                                 u2470 53F8                                   u2390 3D06  
                                 u4150 2B0A                                   u4310 2CF2  
                                 u2480 5418                                   u4080 284A  
                                 u4400 2E78                                   u4320 2CF4  
                                 u3345 51D8                                   u4401 2E76  
                                 u3346 51DA                                   u3338 51A6  
                                 u4090 2A96                                   u4250 3740  
                                 u4410 2E8C                                   u4420 2E90  
                                 u4340 2D52                                   u4500 2274  
                                 u4350 2D54                                   u4270 2BB6  
                                 u4510 229A                                   u4370 2E12  
                                 _T6PR 003F93                                   u4380 2E32  
                                 u4540 237A                                   _PMD0 0039C0  
                                 _PMD1 0039C1                                   u2950 3F22  
                                 u3910 45D2                                   u4630 3202  
                                 _PMD2 0039C2                                   u4391 2E62  
                                 u4375 2DF4                                   _PMD3 0039C3  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u2970 4056                                   u3930 464E  
                                 u4570 2558                                   u4490 2272  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u2980 4058                                   u4670 4B36  
                                 u4680 435C                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 5C8A                       __end_of_ADCC_ISR 58E2  
                        __CFG_FCMEN$ON 000000                                   _dbuf 00D9  
                                 _atoi 3E98                                   _ctoa 4F36  
                                 _main 320C                                   _dtoa 2746  
                                 _prec 0026                                   _nout 0022  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 34B8                                   btemp 003D  
                                 _xtoa 2B9C      __size_of_INT2_SetInterruptHandler 0028  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 002E  
            __end_of_SPI1_Exchange8bit 5D4E                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 5B64                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005D  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 5E1A  
                     __end_of_INT1_ISR 5E2A                       __end_of_INT2_ISR 5E3A  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 4C50  
        __end_of_OSCILLATOR_Initialize 5DE8                                  PRLOCK 0039EF  
                      __end_of___aodiv 39DA                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 3E98                                  _ADPCH 003EF1  
                                _ADREF 003EFD                          __CFG_WDTE$OFF 000000  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005D  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 5EA0      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 5B3C                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 574E                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 5C02                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 0030                                  _flags 0028  
                                _fputc 45AE             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 55E2                                  _fputs 503E  
                      __end_of_isdigit 57DE                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005D                                  _width 0024  
                                _putch 5DA2                        __end_of_islower 577E  
                      __end_of_isspace 542C               _INT1_SetInterruptHandler 5AC2  
                      __end_of_isupper 57AE                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003D                                  ltemp1 0041  
                                ltemp2 0045               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 003D  
                                ttemp1 0040                                  ttemp2 0043  
                                ttemp3 0046                                  ttemp5 003E  
                                ttemp6 0041                                  ttemp7 0045  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 5A22  
          _UART1_SetRxInterruptHandler 59FA                                  wtemp0 003D  
                                wtemp1 003F                                  wtemp2 0041  
                                wtemp3 0043                                  wtemp4 0045  
                                wtemp5 0047                                  wtemp8 003E  
                      __end_of_sprintf 4A46                        __end_of_toupper 4F36  
                  ??_UART1_tx_vect_isr 005D              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 5B8A               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 5558                  __end_of_ringBufS_init 5982  
                      __initialization 4A46                      _UART2_rx_vect_isr 5BB4  
                         __end_of_atoi 40C6                           __end_of_ctoa 4FBA  
                         __end_of_main 34B8                           __end_of_dtoa 2B9C  
                         __end_of_stoa 375A                           __end_of_xtoa 2F20  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005D  
             _TMR5_SetInterruptHandler 5A72                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005D              __end_of_UART1_tx_vect_isr 5B62  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5A22  
                     _UART1_Initialize 51FC                      _UART2_tx_vect_isr 5B8C  
                   _UART2_Transmit_ISR 5836                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005D  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                       __CFG_WDTCCS$SC 000000                                 u151_48 5C76  
                               u153_48 5C98                                 u164_48 5CDC  
                               _SCANPR 0039F7                                 u149_48 5C54  
                               u338_40 532A                                 u338_46 532C  
                               u355_48 5CBA                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 547C                    ??_UART2_tx_vect_isr 005D  
            __end_of_UART2_rx_vect_isr 5BDA             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 5E58                       _UART2_Initialize 52C2  
                               _WaitMs 588C   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 4E20  
                               _memset 2F20                                 clear_0 4AB2  
                               clear_1 4ABE                                 clear_2 4ACA  
                               clear_3 4AD6                                 clear_4 4AE2  
                               _printf 5260                     _eaDogM_WriteString 4AFA  
                            ?_ADCC_ISR 005D                                 _strlen 4FBA  
                   __size_of_TimerDone 0022                        _ADCC_Initialize 54C8  
                       _PMD_Initialize 5DE8   __end_of_INT2_DefaultInterruptHandler 5EAC  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 5EAA  
            __end_of_UART2_tx_vect_isr 5BB2                                 lltemp0 003D  
                               lltemp1 0045                                 lltemp2 004D  
                               lltemp3 0055                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 53DA  
                     __end_of_vfprintf 4E20                             _StartTimer 56E0  
                      _CLC1_Initialize 5C24          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 559E                      _SYSTEM_Initialize 55E2  
                           __accesstop 0060                __end_of__initialization 4AF4  
                            ?_INT0_ISR 005D                              ?_INT1_ISR 005D  
                            ?_INT2_ISR 005D              __end_of_CLKREF_Initialize 5E62  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 5624                 __end_of_ringBufS_flush 4EB2  
                       __pcstackCOMRAM 005D                             ___inthi_sp 0D50  
                         __pidataBANK0 5E8A                           __pidataBANK1 4C50  
                         __pidataBANK3 50BC                              ?_TMR5_ISR 005D  
                            ?_TMR6_ISR 005D                         ivt0x8_undefint 00AC  
                        __end_of_fputc 46BA                          __end_of_fputs 50BC  
                __end_of_TMR5_CallBack 5CF0                          __end_of_putch 5DBC  
              __end_of_TMR6_Initialize 5A4A                 __end_of_PMD_Initialize 5DFC  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 005D  
                __end_of_TMR6_CallBack 5CCE            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 5E70  
     __end_of_INT2_SetInterruptHandler 5AC2               _UART2_RxInterruptHandler 0016  
            __end_of_SYSTEM_Initialize 5624                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 5D86  
                           __pbssBANK0 0060                             __pbssBANK1 01A1  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 001F                             ??_INT0_ISR 005D  
                           ??_INT1_ISR 005D                             ??_INT2_ISR 005D  
                    __end_of_TimerDone 5C24                       _DMA1_DMADCNT_ISR 5E64  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 5D6A  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 5A72  
              __end_of_ADCC_Initialize 5512                             ??_TMR5_ISR 0000  
                           ??_TMR6_ISR 005D                     __size_of_secs_send 01B8  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 5CF0                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005D                       _DMA1_DMASCNT_ISR 5E3C  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 5C46  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005D                   __size_of_UART1_Write 003E  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 06D6                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 5DA2  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 5664  
                   __end_of_UART1_Read 56E0      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000C  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 5260                        __size_of_WaitMs 002A  
                              ___aodiv 375A                                ___aomod 3C58  
            __end_of_UART1_Receive_ISR 5D10                           __psmallconst 2000  
                 __end_of_init_display 48AC                                __pcinit 4A46  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 5DFC  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 320C  
                              __ptext1 40C6                                __ptext2 449C  
                              __ptext3 497E                                __ptext4 39DA  
                              __ptext5 42E4                                __ptext6 48AC  
                              __ptext7 5862                                __ptext8 5E7A  
                              __ptext9 5664                      _UART2_Receive_ISR 5D10  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 0084                                us400999 2760  
                              us235999 39C4                                us246999 3E86  
                              us417999 34CA                  _OSCILLATOR_Initialize 5DD2  
                              us429999 2C1C                           __size_of_abs 0046  
                              _r_block 0060                           __size_of_pad 0108  
                              _isalpha 559E                                _isdigit 57AE  
                              _islower 574E                                _isspace 53DA  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 5320                                _isupper 577E  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 497E  
                              _toupper 4EB2                   end_of_initialization 4AF4  
                    __end_of_secs_send 449C               _INT2_SetInterruptHandler 5A9A  
             __size_of_secs_II_message 0112                             _r_protocol 39DA  
  __end_of_UART1_SetTxInterruptHandler 59FA            _UART1_SetTxInterruptHandler 59D2  
  __end_of_UART2_SetRxInterruptHandler 59D2            _UART2_SetRxInterruptHandler 59AA  
                           _t_protocol 40C6                      __end_of_vfpfcnvrt 2746  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 5E9E  
            __end_of_UART2_Receive_ISR 5D30                         wdtdelay@dcount 0085  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 0000  
                       _block_checksum 48AC                  _INT1_InterruptHandler 001C  
             _TMR6_SetInterruptHandler 5A4A                  _TMR5_InterruptHandler 0004  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 5B3A            _ADCC_SetADIInterruptHandler 5B12  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 512C                        _SPI1_Initialize 5DBC  
                     _UART1_put_buffer 5862                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 58B6           __end_of_INTERRUPT_Initialize 51FC  
               __end_of_block_checksum 497E   __end_of_INT0_DefaultInterruptHandler 5EA8  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 5EA6  
           __size_of_UART1_Receive_ISR 0020                      __size_of_TMR5_ISR 0032  
                    __size_of_TMR6_ISR 0026            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 320C                         __end_of_printf 52C2  
             __end_of_DMA1_DMADCNT_ISR 5E6E                  __end_of_INT0_CallBack 5C68  
                       __end_of_strlen 503E                    start_initialization 4A46  
 __end_of_TMR5_DefaultInterruptHandler 5EB0  __size_of_TMR5_DefaultInterruptHandler 0002  
         _TMR5_DefaultInterruptHandler 5EAE        __size_of_PIN_MANAGER_Initialize 009A  
                          __end_of_abs 5558                  __end_of_INT1_CallBack 5C8A  
                          __end_of_pad 47C2                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 595A                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5CAC                   secs_II_message@block 0001  
                        _uart1RxBuffer 01A1                          _uart1TxBuffer 0280  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 5E4A  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 5E4C  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00AC                              _TimerDone 5C02  
                        _ringBufS_init 595A                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00F9  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 54C8  
                      run_checksum@sum 002A        __end_of_eaDogM_WriteStringAtPos 580A  
              __end_of_DMA1_Initialize 5196                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 5B12                          __pcstackBANK0 0000  
              __end_of_SPI1_Initialize 5DD2               _UART1_RxInterruptHandler 0010  
             _UART2_TxInterruptHandler 0013              __size_of_ringBufS_put_dma 00AA  
                         _init_display 47C2                 __end_of_DMA1_DMAOR_ISR 5E58  
               __size_of_TMR5_CallBack 0022                  _INT2_InterruptHandler 0019  
                _TMR6_InterruptHandler 0007                 __size_of_TMR6_CallBack 0022  
               _PIN_MANAGER_Initialize 4CF2                   __end_of_wait_lcd_set 5E98  
                            __ptext100 5D10                              __ptext101 5BDC  
                            __ptext110 5CCE                              __ptext102 5CAC  
                            __ptext111 5EAE                              __ptext103 5320  
                            __ptext112 0000                              __ptext104 5E3C  
                            __ptext105 5E64                              __ptext106 5E70  
                            __ptext107 5E4C                              __ptext108 571C  
                            __ptext109 5624                     __end_of_StartTimer 571C  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0094  
                             _ADCC_ISR 58B8                    __size_of_r_protocol 027E  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 021E  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 007E                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 5196  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005D                               _INT0_ISR 5E0C  
                             _INT1_ISR 5E1C                               _INT2_ISR 5E2C  
                             _LATCbits 003FBC                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 42E4  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0079  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u187_48 58CE  
                             i2u380_48 5B76                               i2u382_48 5B9E  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u384_48 5BC6  
                             _PIR5bits 0039A5                               i2u378_48 5B4E  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             i2u497_40 5744                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 5836  
                             _TMR5_ISR 571C                               _TMR6_ISR 5BDC  
                            _vfpfcnvrt 2070                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 5CCE                              _start_lcd 5E98  
            __size_of_send_lcd_cmd_dma 0050                          _TMR6_CallBack 5CAC  
             __end_of_UART1_put_buffer 588C                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 56A2  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4A5A                              copy_data1 4A7C  
                            copy_data2 4A9E               _INT0_SetInterruptHandler 5AEA  
               _uart1TxBufferRemaining 003A    __end_of_UART2_SetTxInterruptHandler 59AA  
          _UART2_SetTxInterruptHandler 5982                           _uart1RxCount 0037  
                         _uart2RxCount 0031                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 590A                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 5D4E  
                         _send_lcd_cmd 5932                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 5D6A  
                __end_of_DMA1_DMAA_ISR 5E7A   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005D               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 5E0A                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 0000                               __ptext10 58E2  
                             __ptext11 588C                               __ptext20 595A  
                             __ptext12 5C02                               __ptext21 57DE  
                             __ptext13 56E0                               __ptext30 2F20  
                             __ptext22 4AFA                               __ptext14 5E82  
                             __ptext31 5260                               __ptext23 5DFC  
                             __ptext15 56A2                               __ptext40 2746  
                             __ptext32 4D8C                               __ptext24 542C  
                             __ptext16 47C2                               __ptext41 5512  
                             __ptext33 2070                               __ptext25 5E92  
                             __ptext17 590A                               __ptext50 4BA6  
                             __ptext42 3C58                               __ptext34 2B9C  
                             __ptext26 5D4E                               __ptext18 5932  
                             __ptext51 3E98                               __ptext43 375A  
                             __ptext35 4EB2                               __ptext27 537E  
                             __ptext19 5D30                               __ptext60 59FA  
                             __ptext52 53DA                               __ptext44 4F36  
                             __ptext36 574E                               __ptext28 5E98  
                             __ptext61 5A22                               __ptext53 57AE  
                             __ptext45 46BA                               __ptext37 577E  
                             __ptext29 4E20                               __ptext70 5196  
                             __ptext62 5A4A                               __ptext54 55E2  
                             __ptext46 4FBA                               __ptext38 559E  
                             __ptext71 547C                               __ptext63 5558  
                             __ptext55 52C2                               __ptext47 503E  
                             __ptext39 34B8                               __ptext80 5B12  
                             __ptext72 5A9A                               __ptext64 5A72  
                             __ptext56 5982                               __ptext48 45AE  
                             __ptext81 5E0C                               __ptext73 5AC2  
                             __ptext65 5DBC                               __ptext57 59AA  
                             __ptext49 5DA2                               __ptext90 5EA0  
                             __ptext82 5C46                               __ptext74 5AEA  
                             __ptext66 5DE8                               __ptext58 51FC  
                             __ptext91 58B8                               __ptext83 5EA6  
                             __ptext75 5D86                               __ptext67 4CF2  
                             __ptext59 59D2                               __ptext92 5EAC  
                             __ptext84 5E1C                               __ptext76 512C  
                             __ptext68 5DD2                               __ptext93 5B3C  
                             __ptext85 5C68                               __ptext77 5E58  
                             __ptext69 5D6A                               __ptext94 580A  
                             __ptext86 5EA8                               __ptext78 5C24  
                             __ptext95 5B64                               __ptext87 5E2C  
                             __ptext79 54C8                               __ptext96 5CF0  
                             __ptext88 5C8A                               __ptext97 5B8C  
                             __ptext89 5EAA                               __ptext98 5836  
                             __ptext99 5BB4                       __size_of_isupper 0030  
                      _secs_II_message 449C               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 4BA6                          __size_of_atoi 022E  
                        __size_of_ctoa 0084                          __size_of_main 02AC  
                        __size_of_dtoa 0456                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02A2                          __size_of_xtoa 0384  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005D  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 000A                              stoa@F1144 00F9  
                   ??_DMA1_DMASCNT_ISR 0000                               _spi_link 006D  
                             _wdtdelay 537E             __end_of_UART2_Transmit_ISR 5862  
                             _vfprintf 4D8C                      _UART1_is_rx_ready 5E82  
                          _UART1_Write 5664   __end_of_INT1_DefaultInterruptHandler 5EAA  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 5EA8  
                    _UART1_is_tx_ready 5E7A                          ??_Default_ISR 005D  
                   __end_of_r_protocol 3C58                            _uart1RxHead 0039  
                          _uart1TxHead 003C                            _uart2RxHead 0033  
                          _uart1RxTail 0038                            _uart2TxHead 0036  
                          _uart1TxTail 003B                            _uart2RxTail 0032  
                          _uart2TxTail 0035                           _wait_lcd_set 5E92  
                   _EXT_INT_Initialize 547C   __end_of_TMR6_DefaultInterruptHandler 537E  
__size_of_TMR6_DefaultInterruptHandler 005E           _TMR6_DefaultInterruptHandler 5320  
                   __end_of_t_protocol 42E4   __end_of_ADCC_DefaultInterruptHandler 5EAE  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 5EAC  
                             intlevel2 0000                      _send_lcd_cmd_long 590A  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 4BA6  
              __end_of_NCO1_Initialize 5D86                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 5E8A                             _UART1_Read 56A2  
               __size_of_INT1_CallBack 0022              __end_of_UART1_is_tx_ready 5E82  
               __size_of_INT2_CallBack 0022                 _uart2TxBufferRemaining 0034  
                     _send_lcd_cmd_dma 542C                  TMR5_ISR@CountCallBack 002C  
              __end_of_secs_II_message 45AE       __end_of_INT1_SetInterruptHandler 5AEA  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 0000  
             _UART1_TxInterruptHandler 000D              __end_of_send_lcd_cmd_long 5932  
                  __end_of_Default_ISR 5EA6         __end_of_PIN_MANAGER_Initialize 4D8C  
                __size_of_run_checksum 0028                _eaDogM_WriteStringAtPos 57DE  
            __size_of_UART2_Initialize 005E  
