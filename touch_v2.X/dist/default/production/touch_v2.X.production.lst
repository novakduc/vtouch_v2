

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 03:03:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=4,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=4,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=4,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   228                           	psect	text204,global,reloc=4,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=4,class=CODE,delta=1
   232                           	psect	text208,global,reloc=4,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=4,class=CODE,delta=1
   237                           	psect	text213,global,reloc=4,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	text223,global,reloc=4,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   251                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   252                           	psect	text226,global,reloc=4,class=CODE,delta=1
   253                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   254                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   255  0000                     
   256                           ; Version 2.10
   257                           ; Generated 31/07/2019 GMT
   258                           ; 
   259                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   260                           ; All rights reserved.
   261                           ; 
   262                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   263                           ; 
   264                           ; Redistribution and use in source and binary forms, with or without modification, are
   265                           ; permitted provided that the following conditions are met:
   266                           ; 
   267                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   268                           ;        conditions and the following disclaimer.
   269                           ; 
   270                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   271                           ;        of conditions and the following disclaimer in the documentation and/or other
   272                           ;        materials provided with the distribution.
   273                           ; 
   274                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   275                           ;        software without specific prior written permission.
   276                           ; 
   277                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   278                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   279                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   280                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   281                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   282                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   283                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   284                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   285                           ; 
   286                           ; 
   287                           ; Code-generator required, PIC18F57K42 Definitions
   288                           ; 
   289                           ; SFR Addresses
   290  0000                     
   291 ;;_main$4039	offset	0
   292 ;;_main$4035	offset	2
   293 ;;_esr_temp	offset	4
   294 ;;_i_esr	offset	8
   295 ;;_shape	offset	10
   296 ;;_inp_index	offset	11
   297 ;;_k	offset	12
   298 ;;_j	offset	13
   299 ;;_i	offset	14
   300 ;;_mode	offset	15
   301 ;;_i_ror	offset	16
   302 ;;_mode	offset=-1 (param)
   303 ;;_hist	offset=-3 (param)
   304 ;;_s	offset=-2 (param)
   305 ;;_t	offset=-8 (param)
   306 ;;_voltage	offset=-4 (param)
   307 ;;_voltage	offset=-4 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_set	offset=-1 (param)
   310 ;;_x	offset	0
   311 ;;_r_cal_ptr	offset	2
   312 ;;_y	offset	4
   313 ;;_crcVal_save	offset	6
   314 ;;_bAdd	offset=-2 (param)
   315 ;;_esr_rescale	offset	0
   316 ;;_data	offset=-1 (param)
   317 ;;_cmd	offset=-1 (param)
   318 ;;_cmd	offset=-1 (param)
   319 ;;_delay	offset=-4 (param)
   320 ;;_data	offset=-1 (param)
   321 ;;__this	offset=-2 (param)
   322 ;;_soc	offset	0
   323 ;;_slot	offset	2
   324 ;;_cvoltage	offset=-4 (param)
   325 ;;_h	offset=-2 (param)
   326 ;;_h	offset=-2 (param)
   327 ;;_fsm	offset=-1 (param)
   328 ;;_mode	offset=-1 (param)
   329 ;;_mode	offset=-1 (param)
   330 ;;_cmd	offset=-1 (param)
   331 ;;_t	offset=-8 (param)
   332 ;;_t	offset=-1 (param)
   333 ;;_t	offset=-1 (param)
   334 ;;_tm	offset=-3 (param)
   335 ;;_y	offset	0
   336 ;;_t1	offset	8
   337 ;;_t0	offset	16
   338 ;;_t	offset=-8 (param)
   339 ;;_local	offset=-10 (param)
   340 ;;_isdst	offset=-12 (param)
   341 ;;_offset	offset=-14 (param)
   342 ;;_oppoff	offset=-16 (param)
   343 ;;_zonename	offset=-18 (param)
   344 ;;_t	offset=-8 (param)
   345 ;;_local	offset=-10 (param)
   346 ;;_alt	offset=-12 (param)
   347 ;;_z	offset=-2 (param)
   348 ;;_days	offset	0
   349 ;;_wday	offset	2
   350 ;;_t	offset	4
   351 ;;_is_leap	offset	12
   352 ;;_n	offset	14
   353 ;;_x	offset	16
   354 ;;_m	offset	18
   355 ;;_d	offset	20
   356 ;;_rule	offset=-6 (param)
   357 ;;_year	offset=-8 (param)
   358 ;;_m	offset=-2 (param)
   359 ;;_is_leap	offset=-4 (param)
   360 ;;_y	offset	0
   361 ;;_leaps	offset	2
   362 ;;_rem	offset	4
   363 ;;F5	offset	6
   364 ;;_centuries	offset	8
   365 ;;_leaps	offset	10
   366 ;;_cycles	offset	12
   367 ;;_year	offset=-8 (param)
   368 ;;_is_leap	offset=-10 (param)
   369 ;;_t	offset	0
   370 ;;_month	offset=-2 (param)
   371 ;;_is_leap	offset=-4 (param)
   372 ;;_s	offset	0
   373 ;;_r	offset	0
   374 ;;_p	offset=-2 (param)
   375 ;;_rule	offset=-4 (param)
   376 ;;_off	offset	0
   377 ;;_neg	offset	2
   378 ;;_p	offset=-2 (param)
   379 ;;_x	offset	0
   380 ;;_p	offset=-2 (param)
   381 ;;_i	offset	0
   382 ;;_d	offset=-2 (param)
   383 ;;_p	offset=-4 (param)
   384 ;;___secs_to_tm$7625	offset	0
   385 ;;_years	offset	1
   386 ;;_days	offset	9
   387 ;;_secs	offset	17
   388 ;;_remdays	offset	25
   389 ;;_q_cycles	offset	29
   390 ;;_c_cycles	offset	33
   391 ;;_remyears	offset	37
   392 ;;_remsecs	offset	41
   393 ;;_qc_cycles	offset	45
   394 ;;_months	offset	49
   395 ;;_leap	offset	51
   396 ;;_yday	offset	53
   397 ;;_wday	offset	55
   398 ;;_t	offset=-8 (param)
   399 ;;_tm	offset=-10 (param)
   400 ;;_product	offset	0
   401 ;;_multiplier	offset=-8 (param)
   402 ;;_multiplicand	offset=-16 (param)
   403 ;;_product	offset	0
   404 ;;_multiplier	offset=-4 (param)
   405 ;;_multiplicand	offset=-8 (param)
   406 ;;_sign	offset	0
   407 ;;_counter	offset	1
   408 ;;_dividend	offset=-4 (param)
   409 ;;_divisor	offset=-8 (param)
   410 ;;_quotient	offset	0
   411 ;;_sign	offset	4
   412 ;;_counter	offset	5
   413 ;;_dividend	offset=-4 (param)
   414 ;;_divisor	offset=-8 (param)
   415 ;;_cp	offset	0
   416 ;;_s	offset	2
   417 ;;_tim	offset=-2 (param)
   418 ;;_cp	offset=-2 (param)
   419 ;;_i	offset=-3 (param)
   420 ;;_cl	offset=-4 (param)
   421 ;;_ct	offset=-5 (param)
   422 ;;_rem	offset	0
   423 ;;_counter	offset	1
   424 ;;_dividend	offset=-1 (param)
   425 ;;_divisor	offset=-2 (param)
   426 ;;_cp	offset	0
   427 ;;_cb	offset	4
   428 ;;_x	offset	8
   429 ;;_x	offset	0
   430 ;;_r_cal_ptr	offset	2
   431 ;;_y	offset	4
   432 ;;_crcVal	offset	6
   433 ;;_GIEBitValue	offset	0
   434 ;;_bAdd	offset=-2 (param)
   435 ;;_bData	offset=-3 (param)
   436 ;;_result	offset	0
   437 ;;_mask	offset	2
   438 ;;_reverse	offset=-1 (param)
   439 ;;_xorValue	offset=-3 (param)
   440 ;;_mask	offset	0
   441 ;;_reverse	offset	2
   442 ;;_crc	offset=-2 (param)
   443 ;;_data	offset=-1 (param)
   444 ;;_channel	offset=-1 (param)
   445 ;;_c	offset	0
   446 ;;_shape	offset=-1 (param)
   447 ;;_reset	offset=-2 (param)
   448 ;;_i	offset=-1 (param)
   449 ;;_mode	offset=-1 (param)
   450 ;;_cb	offset=-3 (param)
   451 ;;_cp	offset=-5 (param)
   452 ;;_value	offset=-2 (param)
   453 ;;_window	offset=-4 (param)
   454 ;;_standard	offset=-6 (param)
   455 ;;_i	offset	0
   456 ;;_h	offset=-2 (param)
   457 ;;_flipper	offset=-1 (param)
   458 ;;_f	offset	0
   459 ;;_ap	offset	6
   460 ;;_s	offset=-3 (param)
   461 ;;_fmt	offset=-5 (param)
   462 ;;_line	offset=-1 (param)
   463 ;;_vterm	offset=-2 (param)
   464 ;;_numMilliseconds	offset=-2 (param)
   465 ;;_vterm	offset=-1 (param)
   466 ;;_row	offset	0
   467 ;;_r	offset=-1 (param)
   468 ;;_c	offset=-2 (param)
   469 ;;_strPtr	offset=-4 (param)
   470 ;;_strPtr	offset=-1 (param)
   471 ;;_strPtr	offset=-1 (param)
   472 ;;_strPtr	offset=-2 (param)
   473 ;;__this	offset=-2 (param)
   474 ;;_clearBuffer	offset=-3 (param)
   475 ;;_s	offset	0
   476 ;;_k	offset	2
   477 ;;_dest	offset=-2 (param)
   478 ;;_c	offset=-4 (param)
   479 ;;_n	offset=-6 (param)
   480 ;;_ap	offset	0
   481 ;;_fmt	offset=-3 (param)
   482 ;;_cfmt	offset	0
   483 ;;_fp	offset=-2 (param)
   484 ;;_fmt	offset=-4 (param)
   485 ;;_ap	offset=-6 (param)
   486 ;;_vfpfcnvrt$6666	offset	0
   487 ;;_vfpfcnvrt$6677	offset	2
   488 ;;_vfpfcnvrt$6665	offset	4
   489 ;;_llu	offset	6
   490 ;;_ll	offset	14
   491 ;;_f	offset	22
   492 ;;_ct	offset	26
   493 ;;_cp	offset	29
   494 ;;_c	offset	31
   495 ;;_fp	offset=-2 (param)
   496 ;;_fmt	offset=-4 (param)
   497 ;;_ap	offset=-6 (param)
   498 ;;_xtoa$6651	offset	0
   499 ;;_xtoa$6650	offset	2
   500 ;;_n	offset	4
   501 ;;_c	offset	12
   502 ;;_i	offset	14
   503 ;;_w	offset	16
   504 ;;_p	offset	18
   505 ;;_fp	offset=-2 (param)
   506 ;;_d	offset=-10 (param)
   507 ;;_x	offset=-11 (param)
   508 ;;_toupper$7592	offset	0
   509 ;;_c	offset=-2 (param)
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_n	offset	0
   513 ;;_i	offset	8
   514 ;;_w	offset	10
   515 ;;_p	offset	12
   516 ;;_fp	offset=-2 (param)
   517 ;;_d	offset=-10 (param)
   518 ;;_counter	offset	0
   519 ;;_dividend	offset=-8 (param)
   520 ;;_divisor	offset=-16 (param)
   521 ;;_quotient	offset	0
   522 ;;_counter	offset	8
   523 ;;_dividend	offset=-8 (param)
   524 ;;_divisor	offset=-16 (param)
   525 ;;_r	offset	0
   526 ;;_l	offset	2
   527 ;;__l	offset=-2 (param)
   528 ;;__r	offset=-4 (param)
   529 ;;_n	offset=-6 (param)
   530 ;;_nuls	offset	0
   531 ;;_l	offset	7
   532 ;;_p	offset	9
   533 ;;_cp	offset	11
   534 ;;_w	offset	13
   535 ;;_i	offset	15
   536 ;;_fp	offset=-2 (param)
   537 ;;_s	offset=-4 (param)
   538 ;;_efgtoa$6623	offset	0
   539 ;;_efgtoa$6622	offset	2
   540 ;;_efgtoa$6621	offset	4
   541 ;;_efgtoa$6617	offset	6
   542 ;;_efgtoa$6613	offset	8
   543 ;;_efgtoa$6612	offset	10
   544 ;;_u	offset	12
   545 ;;_g	offset	16
   546 ;;_l	offset	20
   547 ;;_h	offset	24
   548 ;;_ou	offset	28
   549 ;;_n	offset	32
   550 ;;_e	offset	34
   551 ;;_i	offset	36
   552 ;;_w	offset	38
   553 ;;_p	offset	40
   554 ;;_sign	offset	42
   555 ;;_d	offset	44
   556 ;;_ne	offset	46
   557 ;;_m	offset	48
   558 ;;_pp	offset	50
   559 ;;_t	offset	52
   560 ;;_mode	offset	54
   561 ;;_nmode	offset	55
   562 ;;_fp	offset=-2 (param)
   563 ;;_f	offset=-6 (param)
   564 ;;_c	offset=-7 (param)
   565 ;;_tolower$7577	offset	0
   566 ;;_c	offset=-2 (param)
   567 ;;_c	offset=-2 (param)
   568 ;;_d	offset	0
   569 ;;_s	offset	2
   570 ;;_dest	offset=-2 (param)
   571 ;;_src	offset=-4 (param)
   572 ;;_u	offset	0
   573 ;;_m	offset	4
   574 ;;_e	offset	8
   575 ;;_x	offset=-4 (param)
   576 ;;_u	offset	0
   577 ;;_e	offset	4
   578 ;;_x	offset=-4 (param)
   579 ;;_exp1	offset	0
   580 ;;_sign1	offset	1
   581 ;;_f1	offset=-4 (param)
   582 ;;_f1	offset=-4 (param)
   583 ;;_ff1	offset=-4 (param)
   584 ;;_ff2	offset=-8 (param)
   585 ;;_sign	offset	0
   586 ;;_counter	offset	1
   587 ;;_dividend	offset=-2 (param)
   588 ;;_divisor	offset=-4 (param)
   589 ;;_quotient	offset	0
   590 ;;_sign	offset	2
   591 ;;_counter	offset	3
   592 ;;_dividend	offset=-2 (param)
   593 ;;_divisor	offset=-4 (param)
   594 ;;_dtoa$6589	offset	0
   595 ;;_n	offset	2
   596 ;;_i	offset	10
   597 ;;_s	offset	12
   598 ;;_w	offset	14
   599 ;;_p	offset	16
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_a	offset=-2 (param)
   603 ;;_sign	offset	0
   604 ;;_counter	offset	1
   605 ;;_dividend	offset=-8 (param)
   606 ;;_divisor	offset=-16 (param)
   607 ;;_quotient	offset	0
   608 ;;_sign	offset	8
   609 ;;_counter	offset	9
   610 ;;_dividend	offset=-8 (param)
   611 ;;_divisor	offset=-16 (param)
   612 ;;_w	offset	0
   613 ;;_fp	offset=-2 (param)
   614 ;;_c	offset=-3 (param)
   615 ;;_w	offset	0
   616 ;;_i	offset	2
   617 ;;_fp	offset=-2 (param)
   618 ;;_buf	offset=-4 (param)
   619 ;;_p	offset=-6 (param)
   620 ;;_a	offset	0
   621 ;;_s	offset=-2 (param)
   622 ;;_i	offset	0
   623 ;;_c	offset	2
   624 ;;_s	offset=-2 (param)
   625 ;;_fp	offset=-4 (param)
   626 ;;_c	offset=-2 (param)
   627 ;;_fp	offset=-4 (param)
   628 ;;_c	offset=-1 (param)
   629 ;;__this	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_atoi$7209	offset	0
   632 ;;_atoi$7207	offset	2
   633 ;;_atoi$7208	offset	4
   634 ;;_n	offset	5
   635 ;;_neg	offset	7
   636 ;;_s	offset=-2 (param)
   637 ;;_isspace$7258	offset	0
   638 ;;_c	offset=-2 (param)
   639 ;;_c	offset=-2 (param)
   640 ;;_vterm	offset=-1 (param)
   641 ;;_new_response_info	offset=-1 (param)
   642 ;;_new_response_info	offset=-1 (param)
   643 ;;_level	offset=-2 (param)
   644 ;;_dutyValue	offset=-2 (param)
   645 ;;_timer	offset=-1 (param)
   646 ;;_timer	offset=-1 (param)
   647 ;;_count	offset=-3 (param)
   648 ;;_h	offset=-2 (param)
   649 ;;_u	offset	0
   650 ;;_x	offset=-4 (param)
   651 ;;_chan	offset=-1 (param)
   652 ;;_to_what	offset=-2 (param)
   653 ;;_u	offset	0
   654 ;;_s	offset=-2 (param)
   655 ;;_index	offset=-1 (param)
   656 ;;_arg	offset	0
   657 ;;_exp	offset	4
   658 ;;_sign	offset=-1 (param)
   659 ;;_val	offset=-5 (param)
   660 ;;_grs	offset	0
   661 ;;_rem	offset	4
   662 ;;_new_exp	offset	8
   663 ;;_aexp	offset	10
   664 ;;_bexp	offset	11
   665 ;;_sign	offset	12
   666 ;;_b	offset=-4 (param)
   667 ;;_a	offset=-8 (param)
   668 ;;_ff1	offset=-4 (param)
   669 ;;_ff2	offset=-8 (param)
   670 ;;_lp_speed	offset	0
   671 ;;_new	offset=-4 (param)
   672 ;;_bn	offset=-5 (param)
   673 ;;_slow	offset=-6 (param)
   674 ;;_b	offset=-4 (param)
   675 ;;_a	offset=-8 (param)
   676 ;;_grs	offset	0
   677 ;;_bexp	offset	1
   678 ;;_aexp	offset	2
   679 ;;_signs	offset	3
   680 ;;_b	offset=-4 (param)
   681 ;;_a	offset=-8 (param)
   682 ;;_prod	offset	0
   683 ;;_grs	offset	4
   684 ;;_temp	offset	8
   685 ;;_bexp	offset	10
   686 ;;_aexp	offset	11
   687 ;;_sign	offset	12
   688 ;;_b	offset=-4 (param)
   689 ;;_a	offset=-8 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_InterruptHandler	offset=-3 (param)
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_state	offset	0
   697 ;;_InterruptHandler	offset=-3 (param)
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_seed	offset	0
   700 ;;_poly	offset	2
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_i	offset	0
   704 ;;_sw_value	offset	1
   705 ;;_timerVal	offset=-2 (param)
   706 ;;_light	offset	0
   707 ;;_t	offset=-8 (param)
   708 ;;_mode	offset=-1 (param)
   709 ;;_chan	offset=-1 (param)
   710 ;;_to_what	offset=-2 (param)
   711 ;;_u	offset	0
   712 ;;_s	offset=-2 (param)
   713 ;;_index	offset=-1 (param)
   714 ;;_arg	offset	0
   715 ;;_exp	offset	4
   716 ;;_sign	offset=-1 (param)
   717 ;;_val	offset=-5 (param)
   718 ;;_b	offset=-4 (param)
   719 ;;_a	offset=-8 (param)
   720 ;;_grs	offset	0
   721 ;;_bexp	offset	1
   722 ;;_aexp	offset	2
   723 ;;_signs	offset	3
   724 ;;_b	offset=-4 (param)
   725 ;;_a	offset=-8 (param)
   726 ;;_prod	offset	0
   727 ;;_grs	offset	4
   728 ;;_temp	offset	8
   729 ;;_bexp	offset	10
   730 ;;_aexp	offset	11
   731 ;;_sign	offset	12
   732 ;;_b	offset=-4 (param)
   733 ;;_a	offset=-8 (param)
   734 ;;_grs	offset	0
   735 ;;_rem	offset	4
   736 ;;_new_exp	offset	8
   737 ;;_aexp	offset	10
   738 ;;_bexp	offset	11
   739 ;;_sign	offset	12
   740 ;;_b	offset=-4 (param)
   741 ;;_a	offset=-8 (param)
   742 ;;_ff1	offset=-4 (param)
   743 ;;_ff2	offset=-8 (param)
   744 ;;_timerVal	offset=-2 (param)
   745 ;;_adj	offset	0
   746 ;;_log_ptr	offset	4
   747 ;;_f	offset	0
   748 ;;_ap	offset	6
   749 ;;_s	offset=-3 (param)
   750 ;;_fmt	offset=-5 (param)
   751 ;;_cfmt	offset	0
   752 ;;_fp	offset=-2 (param)
   753 ;;_fmt	offset=-4 (param)
   754 ;;_ap	offset=-6 (param)
   755 ;;_vfpfcnvrt$6666	offset	0
   756 ;;_vfpfcnvrt$6677	offset	2
   757 ;;_vfpfcnvrt$6665	offset	4
   758 ;;_llu	offset	6
   759 ;;_ll	offset	14
   760 ;;_f	offset	22
   761 ;;_ct	offset	26
   762 ;;_cp	offset	29
   763 ;;_c	offset	31
   764 ;;_fp	offset=-2 (param)
   765 ;;_fmt	offset=-4 (param)
   766 ;;_ap	offset=-6 (param)
   767 ;;_xtoa$6651	offset	0
   768 ;;_xtoa$6650	offset	2
   769 ;;_n	offset	4
   770 ;;_c	offset	12
   771 ;;_i	offset	14
   772 ;;_w	offset	16
   773 ;;_p	offset	18
   774 ;;_fp	offset=-2 (param)
   775 ;;_d	offset=-10 (param)
   776 ;;_x	offset=-11 (param)
   777 ;;_toupper$7592	offset	0
   778 ;;_c	offset=-2 (param)
   779 ;;_c	offset=-2 (param)
   780 ;;_c	offset=-2 (param)
   781 ;;_n	offset	0
   782 ;;_i	offset	8
   783 ;;_w	offset	10
   784 ;;_p	offset	12
   785 ;;_fp	offset=-2 (param)
   786 ;;_d	offset=-10 (param)
   787 ;;_counter	offset	0
   788 ;;_dividend	offset=-8 (param)
   789 ;;_divisor	offset=-16 (param)
   790 ;;_quotient	offset	0
   791 ;;_counter	offset	8
   792 ;;_dividend	offset=-8 (param)
   793 ;;_divisor	offset=-16 (param)
   794 ;;_r	offset	0
   795 ;;_l	offset	2
   796 ;;__l	offset=-2 (param)
   797 ;;__r	offset=-4 (param)
   798 ;;_n	offset=-6 (param)
   799 ;;_nuls	offset	0
   800 ;;_l	offset	7
   801 ;;_p	offset	9
   802 ;;_cp	offset	11
   803 ;;_w	offset	13
   804 ;;_i	offset	15
   805 ;;_fp	offset=-2 (param)
   806 ;;_s	offset=-4 (param)
   807 ;;_efgtoa$6623	offset	0
   808 ;;_efgtoa$6622	offset	2
   809 ;;_efgtoa$6621	offset	4
   810 ;;_efgtoa$6617	offset	6
   811 ;;_efgtoa$6613	offset	8
   812 ;;_efgtoa$6612	offset	10
   813 ;;_u	offset	12
   814 ;;_g	offset	16
   815 ;;_l	offset	20
   816 ;;_h	offset	24
   817 ;;_ou	offset	28
   818 ;;_n	offset	32
   819 ;;_e	offset	34
   820 ;;_i	offset	36
   821 ;;_w	offset	38
   822 ;;_p	offset	40
   823 ;;_sign	offset	42
   824 ;;_d	offset	44
   825 ;;_ne	offset	46
   826 ;;_m	offset	48
   827 ;;_pp	offset	50
   828 ;;_t	offset	52
   829 ;;_mode	offset	54
   830 ;;_nmode	offset	55
   831 ;;_fp	offset=-2 (param)
   832 ;;_f	offset=-6 (param)
   833 ;;_c	offset=-7 (param)
   834 ;;_tolower$7577	offset	0
   835 ;;_c	offset=-2 (param)
   836 ;;_c	offset=-2 (param)
   837 ;;_d	offset	0
   838 ;;_s	offset	2
   839 ;;_dest	offset=-2 (param)
   840 ;;_src	offset=-4 (param)
   841 ;;_u	offset	0
   842 ;;_m	offset	4
   843 ;;_e	offset	8
   844 ;;_x	offset=-4 (param)
   845 ;;_u	offset	0
   846 ;;_e	offset	4
   847 ;;_x	offset=-4 (param)
   848 ;;_exp1	offset	0
   849 ;;_sign1	offset	1
   850 ;;_f1	offset=-4 (param)
   851 ;;_f1	offset=-4 (param)
   852 ;;_ff1	offset=-4 (param)
   853 ;;_ff2	offset=-8 (param)
   854 ;;_sign	offset	0
   855 ;;_counter	offset	1
   856 ;;_dividend	offset=-2 (param)
   857 ;;_divisor	offset=-4 (param)
   858 ;;_quotient	offset	0
   859 ;;_sign	offset	2
   860 ;;_counter	offset	3
   861 ;;_dividend	offset=-2 (param)
   862 ;;_divisor	offset=-4 (param)
   863 ;;_dtoa$6589	offset	0
   864 ;;_n	offset	2
   865 ;;_i	offset	10
   866 ;;_s	offset	12
   867 ;;_w	offset	14
   868 ;;_p	offset	16
   869 ;;_fp	offset=-2 (param)
   870 ;;_d	offset=-10 (param)
   871 ;;_a	offset=-2 (param)
   872 ;;_sign	offset	0
   873 ;;_counter	offset	1
   874 ;;_dividend	offset=-8 (param)
   875 ;;_divisor	offset=-16 (param)
   876 ;;_quotient	offset	0
   877 ;;_sign	offset	8
   878 ;;_counter	offset	9
   879 ;;_dividend	offset=-8 (param)
   880 ;;_divisor	offset=-16 (param)
   881 ;;_w	offset	0
   882 ;;_fp	offset=-2 (param)
   883 ;;_c	offset=-3 (param)
   884 ;;_w	offset	0
   885 ;;_i	offset	2
   886 ;;_fp	offset=-2 (param)
   887 ;;_buf	offset=-4 (param)
   888 ;;_p	offset=-6 (param)
   889 ;;_a	offset	0
   890 ;;_s	offset=-2 (param)
   891 ;;_i	offset	0
   892 ;;_c	offset	2
   893 ;;_s	offset=-2 (param)
   894 ;;_fp	offset=-4 (param)
   895 ;;_c	offset=-2 (param)
   896 ;;_fp	offset=-4 (param)
   897 ;;_c	offset=-1 (param)
   898 ;;__this	offset=-2 (param)
   899 ;;_c	offset=-3 (param)
   900 ;;_atoi$7209	offset	0
   901 ;;_atoi$7207	offset	2
   902 ;;_atoi$7208	offset	4
   903 ;;_n	offset	5
   904 ;;_neg	offset	7
   905 ;;_s	offset=-2 (param)
   906 ;;_isspace$7258	offset	0
   907 ;;_c	offset=-2 (param)
   908 ;;_c	offset=-2 (param)
   909 ;;_dsize	offset=-2 (param)
   910 ;;_u	offset	0
   911 ;;_x	offset=-4 (param)
   912 ;;_f1p	offset=-2 (param)
   913 ;;_f2	offset=-6 (param)
   914 ;;_timer	offset=-1 (param)
   915 ;;_count	offset=-3 (param)
   916 ;;_channel	offset=-1 (param)
   917 ;;_i	offset	0
   918                           
   919                           	psect	idataBIGRAM
   920  01A7F6                     __pidataBIGRAM:
   921                           	opt callstack 0
   922                           
   923                           ;initializer for _port_data
   924  01A7F6  FF                 	db	255
   925  01A7F7  00                 	db	0
   926  01A7F8  FF                 	db	255
   927  01A7F9  00                 	db	0
   928  01A7FA  FF                 	db	255
   929  01A7FB  00                 	db	0
   930  01A7FC  FF                 	db	255
   931  01A7FD  00                 	db	0
   932  01A7FE  FF                 	db	255
   933  01A7FF  00                 	db	0
   934  01A800  FF                 	db	255
   935  01A801  00                 	db	0
   936  01A802  FF                 	db	255
   937  01A803  00                 	db	0
   938  01A804  FF                 	db	255
   939  01A805  00                 	db	0
   940  01A806  00                 	db	0
   941  01A807  00                 	db	0
   942  01A808  00                 	db	0
   943  01A809  00                 	db	0
   944  01A80A  00                 	db	0
   945  01A80B  00                 	db	0
   946  01A80C  00                 	db	0
   947  01A80D  00                 	db	0
   948  01A80E  00                 	db	0
   949  01A80F  00                 	db	0
   950  01A810  00                 	db	0
   951  01A811  00                 	db	0
   952  01A812  00                 	db	0
   953  01A813  00                 	db	0
   954  01A814  00                 	db	0
   955  01A815  00                 	db	0
   956  01A816  00                 	db	0
   957  01A817  00                 	db	0
   958  01A818  00                 	db	0
   959  01A819  00                 	db	0
   960  01A81A  00                 	db	0
   961  01A81B  00                 	db	0
   962  01A81C  00                 	db	0
   963  01A81D  00                 	db	0
   964  01A81E  00                 	db	0
   965  01A81F  00                 	db	0
   966  01A820  00                 	db	0
   967  01A821  00                 	db	0
   968  01A822  00                 	db	0
   969  01A823  00                 	db	0
   970  01A824  00                 	db	0
   971  01A825  00                 	db	0
   972  01A826  00                 	db	0
   973  01A827  00                 	db	0
   974  01A828  00                 	db	0
   975  01A829  00                 	db	0
   976  01A82A  00                 	db	0
   977  01A82B  00                 	db	0
   978  01A82C  00                 	db	0
   979  01A82D  00                 	db	0
   980  01A82E  00                 	db	0
   981  01A82F  00                 	db	0
   982  01A830  00                 	db	0
   983  01A831  00                 	db	0
   984  01A832  00                 	db	0
   985  01A833  00                 	db	0
   986  01A834  00                 	db	0
   987  01A835  00                 	db	0
   988  01A836  00                 	db	0
   989  01A837  00                 	db	0
   990  01A838  00                 	db	0
   991  01A839  00                 	db	0
   992  01A83A  00                 	db	0
   993  01A83B  00                 	db	0
   994  01A83C  00                 	db	0
   995  01A83D  00                 	db	0
   996  01A83E  00                 	db	0
   997  01A83F  00                 	db	0
   998  01A840  00                 	db	0
   999  01A841  00                 	db	0
  1000  01A842  00                 	db	0
  1001  01A843  00                 	db	0
  1002  01A844  00                 	db	0
  1003  01A845  00                 	db	0
  1004  01A846  00                 	db	0
  1005  01A847  00                 	db	0
  1006  01A848  00                 	db	0
  1007  01A849  00                 	db	0
  1008  01A84A  00                 	db	0
  1009  01A84B  00                 	db	0
  1010  01A84C  00                 	db	0
  1011  01A84D  00                 	db	0
  1012  01A84E  00                 	db	0
  1013  01A84F  00                 	db	0
  1014  01A850  00                 	db	0
  1015  01A851  00                 	db	0
  1016  01A852  00                 	db	0
  1017  01A853  00                 	db	0
  1018  01A854  00                 	db	0
  1019  01A855  00                 	db	0
  1020  01A856  00                 	db	0
  1021  01A857  00                 	db	0
  1022  01A858  00                 	db	0
  1023  01A859  00                 	db	0
  1024  01A85A  00                 	db	0
  1025  01A85B  00                 	db	0
  1026  01A85C  00                 	db	0
  1027  01A85D  00                 	db	0
  1028  01A85E  00                 	db	0
  1029  01A85F  00                 	db	0
  1030  01A860  00                 	db	0
  1031  01A861  00                 	db	0
  1032  01A862  00                 	db	0
  1033  01A863  00                 	db	0
  1034  01A864  00                 	db	0
  1035  01A865  00                 	db	0
  1036  01A866  00                 	db	0
  1037  01A867  00                 	db	0
  1038  01A868  00                 	db	0
  1039  01A869  00                 	db	0
  1040  01A86A  00                 	db	0
  1041  01A86B  00                 	db	0
  1042  01A86C  00                 	db	0
  1043  01A86D  00                 	db	0
  1044  01A86E  00                 	db	0
  1045  01A86F  00                 	db	0
  1046  01A870  00                 	db	0
  1047  01A871  00                 	db	0
  1048  01A872  00                 	db	0
  1049  01A873  00                 	db	0
  1050  01A874  00                 	db	0
  1051  01A875  00                 	db	0
  1052  01A876  00                 	db	0
  1053  01A877  00                 	db	0
  1054  01A878  00                 	db	0
  1055  01A879  00                 	db	0
  1056  01A87A  00                 	db	0
  1057  01A87B  00                 	db	0
  1058  01A87C  00                 	db	0
  1059  01A87D  00                 	db	0
  1060  01A87E  00                 	db	0
  1061  01A87F  00                 	db	0
  1062  01A880  00                 	db	0
  1063  01A881  00                 	db	0
  1064  01A882  00                 	db	0
  1065  01A883  00                 	db	0
  1066  01A884  00                 	db	0
  1067  01A885  00                 	db	0
  1068  01A886  00                 	db	0
  1069  01A887  00                 	db	0
  1070  01A888  00                 	db	0
  1071  01A889  00                 	db	0
  1072  01A88A  00                 	db	0
  1073  01A88B  00                 	db	0
  1074  01A88C  00                 	db	0
  1075  01A88D  00                 	db	0
  1076  01A88E  00                 	db	0
  1077  01A88F  00                 	db	0
  1078  01A890  00                 	db	0
  1079  01A891  00                 	db	0
  1080  01A892  00                 	db	0
  1081  01A893  00                 	db	0
  1082  01A894  00                 	db	0
  1083  01A895  00                 	db	0
  1084  01A896  00                 	db	0
  1085  01A897  00                 	db	0
  1086  01A898  00                 	db	0
  1087  01A899  00                 	db	0
  1088  01A89A  00                 	db	0
  1089  01A89B  00                 	db	0
  1090  01A89C  00                 	db	0
  1091  01A89D  00                 	db	0
  1092  01A89E  00                 	db	0
  1093  01A89F  00                 	db	0
  1094  01A8A0  00                 	db	0
  1095  01A8A1  00                 	db	0
  1096  01A8A2  00                 	db	0
  1097  01A8A3  00                 	db	0
  1098  01A8A4  00                 	db	0
  1099  01A8A5  00                 	db	0
  1100  01A8A6  00                 	db	0
  1101  01A8A7  00                 	db	0
  1102  01A8A8  00                 	db	0
  1103  01A8A9  00                 	db	0
  1104  01A8AA  00                 	db	0
  1105  01A8AB  00                 	db	0
  1106  01A8AC  00                 	db	0
  1107  01A8AD  00                 	db	0
  1108  01A8AE  00                 	db	0
  1109  01A8AF  00                 	db	0
  1110  01A8B0  00                 	db	0
  1111  01A8B1  00                 	db	0
  1112  01A8B2  00                 	db	0
  1113  01A8B3  00                 	db	0
  1114  01A8B4  00                 	db	0
  1115  01A8B5  00                 	db	0
  1116  01A8B6  00                 	db	0
  1117  01A8B7  00                 	db	0
  1118  01A8B8  00                 	db	0
  1119  01A8B9  00                 	db	0
  1120  01A8BA  00                 	db	0
  1121  01A8BB  00                 	db	0
  1122  01A8BC  00                 	db	0
  1123  01A8BD  00                 	db	0
  1124  01A8BE  00                 	db	0
  1125  01A8BF  00                 	db	0
  1126  01A8C0  00                 	db	0
  1127  01A8C1  00                 	db	0
  1128  01A8C2  00                 	db	0
  1129  01A8C3  00                 	db	0
  1130  01A8C4  00                 	db	0
  1131  01A8C5  00                 	db	0
  1132  01A8C6  00                 	db	0
  1133  01A8C7  00                 	db	0
  1134  01A8C8  00                 	db	0
  1135  01A8C9  00                 	db	0
  1136  01A8CA  00                 	db	0
  1137  01A8CB  00                 	db	0
  1138  01A8CC  00                 	db	0
  1139  01A8CD  00                 	db	0
  1140  01A8CE  00                 	db	0
  1141  01A8CF  00                 	db	0
  1142  01A8D0  00                 	db	0
  1143  01A8D1  00                 	db	0
  1144  01A8D2  00                 	db	0
  1145  01A8D3  00                 	db	0
  1146  01A8D4  00                 	db	0
  1147  01A8D5  00                 	db	0
  1148  01A8D6  00                 	db	0
  1149  01A8D7  00                 	db	0
  1150  01A8D8  00                 	db	0
  1151  01A8D9  00                 	db	0
  1152  01A8DA  00                 	db	0
  1153  01A8DB  00                 	db	0
  1154  01A8DC  00                 	db	0
  1155  01A8DD  00                 	db	0
  1156  01A8DE  00                 	db	0
  1157  01A8DF  00                 	db	0
  1158  01A8E0  00                 	db	0
  1159  01A8E1  00                 	db	0
  1160  01A8E2  00                 	db	0
  1161  01A8E3  00                 	db	0
  1162  01A8E4  00                 	db	0
  1163  01A8E5  00                 	db	0
  1164  01A8E6  00                 	db	0
  1165  01A8E7  00                 	db	0
  1166  01A8E8  00                 	db	0
  1167  01A8E9  00                 	db	0
  1168  01A8EA  00                 	db	0
  1169  01A8EB  00                 	db	0
  1170  01A8EC  00                 	db	0
  1171  01A8ED  00                 	db	0
  1172  01A8EE  00                 	db	0
  1173  01A8EF  00                 	db	0
  1174  01A8F0  00                 	db	0
  1175  01A8F1  00                 	db	0
  1176  01A8F2  00                 	db	0
  1177  01A8F3  00                 	db	0
  1178  01A8F4  00                 	db	0
  1179  01A8F5  00                 	db	0
  1180  01A8F6  00                 	db	0
  1181  01A8F7  00                 	db	0
  1182  01A8F8  00                 	db	0
  1183  01A8F9  00                 	db	0
  1184  01A8FA  00                 	db	0
  1185  01A8FB  00                 	db	0
  1186  01A8FC  00                 	db	0
  1187  01A8FD  00                 	db	0
  1188  01A8FE  00                 	db	0
  1189  01A8FF  00                 	db	0
  1190  01A900  00                 	db	0
  1191  01A901  00                 	db	0
  1192  01A902  00                 	db	0
  1193  01A903  00                 	db	0
  1194  01A904  00                 	db	0
  1195  01A905  00                 	db	0
  1196  01A906  00                 	db	0
  1197  01A907  00                 	db	0
  1198  01A908  00                 	db	0
  1199  01A909  00                 	db	0
  1200  01A90A  00                 	db	0
  1201  01A90B  00                 	db	0
  1202  01A90C  00                 	db	0
  1203  01A90D  00                 	db	0
  1204  01A90E  00                 	db	0
  1205  01A90F  00                 	db	0
  1206  01A910  00                 	db	0
  1207  01A911  00                 	db	0
  1208  01A912  00                 	db	0
  1209  01A913  00                 	db	0
  1210  01A914  00                 	db	0
  1211  01A915  00                 	db	0
  1212  01A916  00                 	db	0
  1213  01A917  00                 	db	0
  1214  01A918  00                 	db	0
  1215  01A919  00                 	db	0
  1216  01A91A  00                 	db	0
  1217  01A91B  00                 	db	0
  1218  01A91C  00                 	db	0
  1219  01A91D  00                 	db	0
  1220  01A91E  00                 	db	0
  1221  01A91F  00                 	db	0
  1222  01A920  00                 	db	0
  1223  01A921  00                 	db	0
  1224  01A922  00                 	db	0
  1225  01A923  00                 	db	0
  1226  01A924  00                 	db	0
  1227  01A925  00                 	db	0
  1228  01A926  00                 	db	0
  1229  01A927  00                 	db	0
  1230  01A928  00                 	db	0
  1231  01A929  00                 	db	0
  1232  01A92A  00                 	db	0
  1233  01A92B  00                 	db	0
  1234  01A92C  00                 	db	0
  1235  01A92D  00                 	db	0
  1236  01A92E  00                 	db	0
  1237  01A92F  00                 	db	0
  1238  01A930  00                 	db	0
  1239  01A931  00                 	db	0
  1240  01A932  00                 	db	0
  1241  01A933  00                 	db	0
  1242  01A934  00                 	db	0
  1243  01A935  00                 	db	0
  1244  01A936  00                 	db	0
  1245  01A937  00                 	db	0
  1246  01A938  00                 	db	0
  1247  01A939  00                 	db	0
  1248  01A93A  00                 	db	0
  1249  01A93B  00                 	db	0
  1250  01A93C  00                 	db	0
  1251  01A93D  00                 	db	0
  1252  01A93E  00                 	db	0
  1253  01A93F  00                 	db	0
  1254  01A940  00                 	db	0
  1255  01A941  00                 	db	0
  1256  01A942  00                 	db	0
  1257  01A943  00                 	db	0
  1258  01A944  00                 	db	0
  1259  01A945  00                 	db	0
  1260  01A946  00                 	db	0
  1261  01A947  00                 	db	0
  1262  01A948  00                 	db	0
  1263  01A949  00                 	db	0
  1264  01A94A  00                 	db	0
  1265  01A94B  00                 	db	0
  1266  01A94C  00                 	db	0
  1267  01A94D  00                 	db	0
  1268  01A94E  00                 	db	0
  1269  01A94F  00                 	db	0
  1270  01A950  00                 	db	0
  1271  01A951  00                 	db	0
  1272  01A952  00                 	db	0
  1273  01A953  00                 	db	0
  1274  01A954  00                 	db	0
  1275  01A955  00                 	db	0
  1276  01A956  00                 	db	0
  1277  01A957  00                 	db	0
  1278  01A958  00                 	db	0
  1279  01A959  00                 	db	0
  1280  01A95A  00                 	db	0
  1281  01A95B  00                 	db	0
  1282  01A95C  00                 	db	0
  1283  01A95D  00                 	db	0
  1284  01A95E  00                 	db	0
  1285  01A95F  00                 	db	0
  1286  01A960  00                 	db	0
  1287  01A961  00                 	db	0
  1288  01A962  00                 	db	0
  1289  01A963  00                 	db	0
  1290  01A964  00                 	db	0
  1291  01A965  00                 	db	0
  1292  01A966  00                 	db	0
  1293  01A967  00                 	db	0
  1294  01A968  00                 	db	0
  1295  01A969  00                 	db	0
  1296  01A96A  00                 	db	0
  1297  01A96B  00                 	db	0
  1298  01A96C  00                 	db	0
  1299  01A96D  00                 	db	0
  1300  01A96E  00                 	db	0
  1301  01A96F  00                 	db	0
  1302  01A970  00                 	db	0
  1303  01A971  00                 	db	0
  1304  01A972  00                 	db	0
  1305  01A973  00                 	db	0
  1306  01A974  00                 	db	0
  1307  01A975  00                 	db	0
  1308  01A976  00                 	db	0
  1309  01A977  00                 	db	0
  1310  01A978  00                 	db	0
  1311  01A979  00                 	db	0
  1312  01A97A  00                 	db	0
  1313  01A97B  00                 	db	0
  1314  01A97C  00                 	db	0
  1315  01A97D  00                 	db	0
  1316  01A97E  00                 	db	0
  1317  01A97F  00                 	db	0
  1318  01A980  00                 	db	0
  1319  01A981  00                 	db	0
  1320  01A982  00                 	db	0
  1321  01A983  00                 	db	0
  1322  01A984  00                 	db	0
  1323  01A985  00                 	db	0
  1324  01A986  00                 	db	0
  1325  01A987  00                 	db	0
  1326  01A988  00                 	db	0
  1327  01A989  00                 	db	0
  1328  01A98A  00                 	db	0
  1329  01A98B  00                 	db	0
  1330  01A98C  00                 	db	0
  1331  01A98D  00                 	db	0
  1332  01A98E  00                 	db	0
  1333  01A98F  00                 	db	0
  1334  01A990  00                 	db	0
  1335  01A991  00                 	db	0
  1336  01A992  00                 	db	0
  1337  01A993  00                 	db	0
  1338  01A994  00                 	db	0
  1339  01A995  00                 	db	0
  1340  01A996  00                 	db	0
  1341  01A997  00                 	db	0
  1342  01A998  00                 	db	0
  1343  01A999  00                 	db	0
  1344  01A99A  00                 	db	0
  1345  01A99B  00                 	db	0
  1346  01A99C  00                 	db	0
  1347  01A99D  00                 	db	0
  1348  01A99E  00                 	db	0
  1349  01A99F  00                 	db	0
  1350  01A9A0  00                 	db	0
  1351  01A9A1  00                 	db	0
  1352  01A9A2  00                 	db	0
  1353  01A9A3  00                 	db	0
  1354  01A9A4  00                 	db	0
  1355  01A9A5  00                 	db	0
  1356  01A9A6  00                 	db	0
  1357  01A9A7  00                 	db	0
  1358  01A9A8  00                 	db	0
  1359  01A9A9  00                 	db	0
  1360  01A9AA  00                 	db	0
  1361  01A9AB  00                 	db	0
  1362  01A9AC  00                 	db	0
  1363  01A9AD  00                 	db	0
  1364  01A9AE  00                 	db	0
  1365  01A9AF  00                 	db	0
  1366  01A9B0  00                 	db	0
  1367  01A9B1  00                 	db	0
  1368  01A9B2  00                 	db	0
  1369  01A9B3  00                 	db	0
  1370  01A9B4  00                 	db	0
  1371  01A9B5  00                 	db	0
  1372  01A9B6  00                 	db	0
  1373  01A9B7  00                 	db	0
  1374  01A9B8  00                 	db	0
  1375  01A9B9  00                 	db	0
  1376  01A9BA  00                 	db	0
  1377  01A9BB  00                 	db	0
  1378  01A9BC  00                 	db	0
  1379  01A9BD  00                 	db	0
  1380  01A9BE  00                 	db	0
  1381  01A9BF  00                 	db	0
  1382  01A9C0  00                 	db	0
  1383  01A9C1  00                 	db	0
  1384  01A9C2  00                 	db	0
  1385  01A9C3  00                 	db	0
  1386  01A9C4  00                 	db	0
  1387  01A9C5  00                 	db	0
  1388  01A9C6  00                 	db	0
  1389  01A9C7  00                 	db	0
  1390  01A9C8  00                 	db	0
  1391  01A9C9  00                 	db	0
  1392  01A9CA  00                 	db	0
  1393  01A9CB  00                 	db	0
  1394  01A9CC  00                 	db	0
  1395  01A9CD  00                 	db	0
  1396  01A9CE  00                 	db	0
  1397  01A9CF  00                 	db	0
  1398  01A9D0  00                 	db	0
  1399  01A9D1  00                 	db	0
  1400  01A9D2  00                 	db	0
  1401  01A9D3  00                 	db	0
  1402  01A9D4  00                 	db	0
  1403  01A9D5  00                 	db	0
  1404  01A9D6  00                 	db	0
  1405  01A9D7  00                 	db	0
  1406  01A9D8  00                 	db	0
  1407  01A9D9  00                 	db	0
  1408  01A9DA  00                 	db	0
  1409  01A9DB  00                 	db	0
  1410  01A9DC  00                 	db	0
  1411  01A9DD  00                 	db	0
  1412  01A9DE  00                 	db	0
  1413  01A9DF  00                 	db	0
  1414  01A9E0  00                 	db	0
  1415  01A9E1  00                 	db	0
  1416  01A9E2  00                 	db	0
  1417  01A9E3  00                 	db	0
  1418  01A9E4  00                 	db	0
  1419  01A9E5  00                 	db	0
  1420  01A9E6  00                 	db	0
  1421  01A9E7  00                 	db	0
  1422  01A9E8  00                 	db	0
  1423  01A9E9  00                 	db	0
  1424  01A9EA  00                 	db	0
  1425  01A9EB  00                 	db	0
  1426  01A9EC  00                 	db	0
  1427  01A9ED  00                 	db	0
  1428  01A9EE  00                 	db	0
  1429  01A9EF  00                 	db	0
  1430  01A9F0  00                 	db	0
  1431  01A9F1  00                 	db	0
  1432  01A9F2  00                 	db	0
  1433  01A9F3  00                 	db	0
  1434  01A9F4  00                 	db	0
  1435  01A9F5  00                 	db	0
  1436                           
  1437                           ;initializer for _C
  1438  01A9F6  0000               	dw	0
  1439  01A9F8  0000               	dw	0
  1440  01A9FA  0000               	dw	0
  1441  01A9FC  0000               	dw	0
  1442  01A9FE  0000               	dw	0
  1443  01AA00  0000               	dw	0
  1444  01AA02  0000               	dw	0
  1445  01AA04  0000               	dw	0
  1446  01AA06  0000               	dw	0
  1447  01AA08  0000               	dw	0
  1448  01AA0A  0000               	dw	0
  1449  01AA0C  0000               	dw	0
  1450  01AA0E  0000               	dw	0
  1451  01AA10  0000               	dw	0
  1452  01AA12  0000               	dw	0
  1453  01AA14  0000               	dw	0
  1454  01AA16  0000               	dw	0
  1455  01AA18  0000               	dw	0
  1456  01AA1A  0000               	dw	0
  1457  01AA1C  0000               	dw	0
  1458  01AA1E  0000               	dw	0
  1459  01AA20  0000               	dw	0
  1460  01AA22  0000               	dw	0
  1461  01AA24  0000               	dw	0
  1462  01AA26  0000               	dw	0
  1463  01AA28  0000               	dw	0
  1464  01AA2A  0000               	dw	0
  1465  01AA2C  0000               	dw	0
  1466  01AA2E  0000               	dw	0
  1467  01AA30  0000               	dw	0
  1468  01AA32  0000               	dw	0
  1469  01AA34  0000               	dw	0
  1470  01AA36  0000               	dw	0
  1471  01AA38  0000               	dw	0
  1472  01AA3A  0000               	dw	0
  1473  01AA3C  0000               	dw	0
  1474  01AA3E  0000               	dw	0
  1475  01AA40  0000               	dw	0
  1476  01AA42  0000               	dw	0
  1477  01AA44  0000               	dw	0
  1478  01AA46  0000               	dw	0
  1479  01AA48  0000               	dw	0
  1480  01AA4A  0000               	dw	0
  1481  01AA4C  0000               	dw	0
  1482  01AA4E  0000               	dw	0
  1483  01AA50  0000               	dw	0
  1484  01AA52  0000               	dw	0
  1485  01AA54  0000               	dw	0
  1486  01AA56  0000               	dw	0
  1487  01AA58  0000               	dw	0
  1488  01AA5A  0000               	dw	0
  1489  01AA5C  0000               	dw	0
  1490  01AA5E  0000               	dw	0
  1491  01AA60  0000               	dw	0
  1492  01AA62  0000               	dw	0
  1493  01AA64  0000               	dw	0
  1494  01AA66  0000               	dw	0
  1495  01AA68  0000               	dw	0
  1496  01AA6A  0000               	dw	0
  1497  01AA6C  0000               	dw	0
  1498  01AA6E  0000               	dw	0
  1499  01AA70  0000               	dw	0
  1500  01AA72  0000               	dw	0
  1501  01AA74  0000               	dw	0
  1502  01AA76  0000               	dw	0
  1503  01AA78  0000               	dw	0
  1504  01AA7A  0000               	dw	0
  1505  01AA7C  0000               	dw	0
  1506  01AA7E  0000               	dw	0
  1507  01AA80  0000               	dw	0
  1508  01AA82  0000               	dw	0
  1509  01AA84  42FA               	dw	17146
  1510  01AA86  0000               	dw	0
  1511  01AA88  0000               	dw	0
  1512  01AA8A  0000               	dw	0
  1513  01AA8C  0000               	dw	0
  1514  01AA8E  0000               	dw	0
  1515  01AA90  0000               	dw	0
  1516  01AA92  0000               	dw	0
  1517  01AA94  0000               	dw	0
  1518  01AA96  0000               	dw	0
  1519  01AA98  0000               	dw	0
  1520  01AA9A  0000               	dw	0
  1521  01AA9C  0000               	dw	0
  1522  01AA9E  0000               	dw	0
  1523  01AAA0  0000               	dw	0
  1524  01AAA2  0000               	dw	0
  1525  01AAA4  0000               	dw	0
  1526  01AAA6  0000               	dw	0
  1527  01AAA8  0000               	dw	0
  1528  01AAAA  0000               	dw	0
  1529  01AAAC  0000               	dw	0
  1530  01AAAE  00                 	db	0
  1531  01AAAF  0000               	dw	0
  1532  01AAB1  0000               	dw	0
  1533  01AAB3  0000               	dw	0
  1534  01AAB5  0000               	dw	0
  1535  01AAB7  0000               	dw	0
  1536  01AAB9  0000               	dw	0
  1537  01AABB  0000               	dw	0
  1538  01AABD  0000               	dw	0
  1539  01AABF  0000               	dw	0
  1540  01AAC1  0000               	dw	0
  1541  01AAC3  0000               	dw	0
  1542  01AAC5  0000               	dw	0
  1543  01AAC7  0000               	dw	0
  1544  01AAC9  3F80               	dw	16256
  1545  01AACB  0000               	dw	0
  1546  01AACD  3F80               	dw	16256
  1547  01AACF  0000               	dw	0
  1548  01AAD1  0000               	dw	0
  1549  01AAD3  0000               	dw	0
  1550  01AAD5  0000               	dw	0
  1551  01AAD7  0000               	dw	0
  1552  01AAD9  0000               	dw	0
  1553  01AADB  0000               	dw	0
  1554  01AADD  0000               	dw	0
  1555  01AADF  0000               	dw	0
  1556  01AAE1  0000               	dw	0
  1557  01AAE3  0000               	dw	0
  1558  01AAE5  0000               	dw	0
  1559  01AAE7  0000               	dw	0
  1560  01AAE9  0000               	dw	0
  1561  01AAEB  0000               	dw	0
  1562  01AAED  3A98               	dw	15000
  1563  01AAEF  0000               	dw	0
  1564  01AAF1  00                 	db	0
  1565  01AAF2  00                 	db	0
  1566  01AAF3  00                 	db	0
  1567  01AAF4  00                 	db	0
  1568  01AAF5  0000               	dw	0
  1569  01AAF7  0000               	dw	0
  1570  01AAF9  0000               	dw	0
  1571  01AAFB  0000               	dw	0
  1572  01AAFD  0000               	dw	0
  1573  01AAFF  0000               	dw	0
  1574  01AB01  0000               	dw	0
  1575  01AB03  0000               	dw	0
  1576  01AB05  0000               	dw	0
  1577  01AB07  0000               	dw	0
  1578  01AB09  0000               	dw	0
  1579  01AB0B  0000               	dw	0
  1580  01AB0D  0000               	dw	0
  1581  01AB0F  01                 	db	1
  1582  01AB10  0000               	dw	0
  1583  01AB12  0000               	dw	0
  1584  01AB14  0000               	dw	0
  1585  01AB16  0000               	dw	0
  1586  01AB18  0000               	dw	0
  1587  01AB1A  0000               	dw	0
  1588  01AB1C  0000               	dw	0
  1589  01AB1E  0000               	dw	0
  1590  01AB20  0000               	dw	0
  1591  01AB22  0000               	dw	0
  1592  01AB24  01                 	db	1
  1593  01AB25  00                 	db	0
  1594  01AB26  0000               	dw	0
  1595  01AB28  0000               	dw	0
  1596  01AB2A  0000               	dw	0
  1597  01AB2C  0000               	dw	0
  1598  01AB2E  0000               	dw	0
  1599  01AB30  0000               	dw	0
  1600  01AB32  0000               	dw	0
  1601  01AB34  0000               	dw	0
  1602                           
  1603                           	psect	idataBANK1
  1604  000B56                     __pidataBANK1:
  1605                           	opt callstack 0
  1606                           
  1607                           ;initializer for _R
  1608  000B56  0000               	dw	0
  1609  000B58  0000               	dw	0
  1610  000B5A  0000               	dw	0
  1611  000B5C  0000               	dw	0
  1612  000B5E  0000               	dw	0
  1613  000B60  0000               	dw	0
  1614  000B62  0000               	dw	0
  1615  000B64  0000               	dw	0
  1616  000B66  0000               	dw	0
  1617  000B68  0000               	dw	0
  1618  000B6A  0000               	dw	0
  1619  000B6C  0000               	dw	0
  1620  000B6E  0000               	dw	0
  1621  000B70  0000               	dw	0
  1622  000B72  0000               	dw	0
  1623  000B74  0000               	dw	0
  1624  000B76  0000               	dw	0
  1625  000B78  0000               	dw	0
  1626  000B7A  0000               	dw	0
  1627  000B7C  0F62               	dw	3938
  1628  000B7E  0FA4               	dw	4004
  1629  000B80  89A0               	dw	35232
  1630  000B82  3DB0               	dw	15792
  1631  000B84  DEA4               	dw	56996
  1632  000B86  3D13               	dw	15635
  1633  000B88  00                 	db	0
  1634  000B89  0000               	dw	0
  1635  000B8B  00                 	db	0
  1636  000B8C  0000               	dw	0
  1637  000B8E  0000               	dw	0
  1638  000B90  0000               	dw	0
  1639  000B92  0000               	dw	0
  1640  000B94  0000               	dw	0
  1641  000B96  0000               	dw	0
  1642  000B98  0000               	dw	0
  1643  000B9A  0000               	dw	0
  1644  000B9C  0000               	dw	0
  1645  000B9E  0000               	dw	0
  1646  000BA0  0000               	dw	0
  1647  000BA2  0000               	dw	0
  1648  000BA4  0000               	dw	0
  1649  000BA6  0000               	dw	0
  1650  000BA8  0000               	dw	0
  1651  000BAA  0000               	dw	0
  1652  000BAC  0000               	dw	0
  1653  000BAE  0000               	dw	0
  1654  000BB0  0000               	dw	0
  1655  000BB2  0000               	dw	0
  1656  000BB4  0000               	dw	0
  1657  000BB6  0000               	dw	0
  1658  000BB8  0000               	dw	0
  1659  000BBA  0000               	dw	0
  1660  000BBC  0000               	dw	0
  1661  000BBE  0000               	dw	0
  1662  000BC0  0000               	dw	0
  1663  000BC2  0000               	dw	0
  1664  000BC4  0000               	dw	0
  1665  000BC6  0000               	dw	0
  1666  000BC8  0000               	dw	0
  1667  000BCA  0000               	dw	0
  1668  000BCC  0000               	dw	0
  1669  000BCE  0000               	dw	0
  1670  000BD0  0000               	dw	0
  1671  000BD2  0000               	dw	0
  1672  000BD4  0000               	dw	0
  1673  000BD6  0000               	dw	0
  1674  000BD8  0000               	dw	0
  1675  000BDA  0000               	dw	0
  1676  000BDC  0000               	dw	0
  1677  000BDE  0000               	dw	0
  1678  000BE0  0000               	dw	0
  1679  000BE2  0000               	dw	0
  1680  000BE4  0000               	dw	0
  1681  000BE6  0000               	dw	0
  1682  000BE8  0000               	dw	0
  1683  000BEA  0000               	dw	0
  1684  000BEC  00                 	db	0
  1685  000BED  00                 	db	0
  1686  000BEE  1957               	dw	6487
  1687  000BF0  42                 	db	66
  1688                           
  1689                           ;initializer for _H
  1690  000BF1  00                 	db	0
  1691  000BF2  00                 	db	0
  1692  000BF3  01                 	db	1
  1693  000BF4  00                 	db	0
  1694  000BF5  01                 	db	1
  1695  000BF6  00                 	db	0
  1696  000BF7  01                 	db	1
  1697  000BF8  00                 	db	0
  1698  000BF9  00                 	db	0
  1699                           
  1700                           	psect	idataBANK2
  1701  0005C8                     __pidataBANK2:
  1702                           	opt callstack 0
  1703                           
  1704                           ;initializer for stoa@F1166
  1705  0005C8  28                 	db	40
  1706  0005C9  6E                 	db	110
  1707  0005CA  75                 	db	117
  1708  0005CB  6C                 	db	108
  1709  0005CC  6C                 	db	108
  1710  0005CD  29                 	db	41
  1711  0005CE  00                 	db	0
  1712                           
  1713                           ;initializer for _V
  1714  0005CF  00                 	db	0
  1715  0005D0  00                 	db	0
  1716  0005D1  00                 	db	0
  1717  0005D2  00                 	db	0
  1718  0005D3  00                 	db	0
  1719  0005D4  00                 	db	0
  1720  0005D5  00                 	db	0
  1721  0005D6  00                 	db	0
  1722  0005D7  00                 	db	0
  1723  0005D8  00                 	db	0
  1724  0005D9  00                 	db	0
  1725  0005DA  00                 	db	0
  1726  0005DB  00                 	db	0
  1727  0005DC  00                 	db	0
  1728  0005DD  00                 	db	0
  1729  0005DE  00                 	db	0
  1730  0005DF  00                 	db	0
  1731  0005E0  00                 	db	0
  1732  0005E1  00                 	db	0
  1733  0005E2  00                 	db	0
  1734  0005E3  00                 	db	0
  1735  0005E4  00                 	db	0
  1736  0005E5  00                 	db	0
  1737  0005E6  00                 	db	0
  1738  0005E7  00                 	db	0
  1739  0005E8  00                 	db	0
  1740  0005E9  00                 	db	0
  1741  0005EA  00                 	db	0
  1742  0005EB  00                 	db	0
  1743  0005EC  00                 	db	0
  1744  0005ED  00                 	db	0
  1745  0005EE  00                 	db	0
  1746  0005EF  00                 	db	0
  1747  0005F0  00                 	db	0
  1748  0005F1  00                 	db	0
  1749  0005F2  00                 	db	0
  1750  0005F3  00                 	db	0
  1751  0005F4  00                 	db	0
  1752  0005F5  00                 	db	0
  1753  0005F6  00                 	db	0
  1754  0005F7  00                 	db	0
  1755  0005F8  00                 	db	0
  1756  0005F9  00                 	db	0
  1757  0005FA  00                 	db	0
  1758  0005FB  00                 	db	0
  1759  0005FC  00                 	db	0
  1760  0005FD  00                 	db	0
  1761  0005FE  00                 	db	0
  1762  0005FF  00                 	db	0
  1763  000600  00                 	db	0
  1764  000601  00                 	db	0
  1765  000602  00                 	db	0
  1766  000603  00                 	db	0
  1767  000604  00                 	db	0
  1768  000605  00                 	db	0
  1769  000606  00                 	db	0
  1770  000607  00                 	db	0
  1771  000608  00                 	db	0
  1772  000609  00                 	db	0
  1773  00060A  00                 	db	0
  1774  00060B  00                 	db	0
  1775  00060C  00                 	db	0
  1776  00060D  00                 	db	0
  1777  00060E  00                 	db	0
  1778  00060F  00                 	db	0
  1779  000610  00                 	db	0
  1780  000611  00                 	db	0
  1781  000612  00                 	db	0
  1782  000613  00                 	db	0
  1783  000614  00                 	db	0
  1784  000615  00                 	db	0
  1785  000616  00                 	db	0
  1786  000617  00                 	db	0
  1787  000618  00                 	db	0
  1788  000619  00                 	db	0
  1789  00061A  00                 	db	0
  1790  00061B  00                 	db	0
  1791  00061C  00                 	db	0
  1792  00061D  00                 	db	0
  1793  00061E  00                 	db	0
  1794  00061F  00                 	db	0
  1795  000620  00                 	db	0
  1796  000621  00                 	db	0
  1797  000622  00                 	db	0
  1798  000623  00                 	db	0
  1799  000624  00                 	db	0
  1800  000625  00                 	db	0
  1801  000626  00                 	db	0
  1802  000627  00                 	db	0
  1803  000628  00                 	db	0
  1804  000629  00                 	db	0
  1805  00062A  00                 	db	0
  1806  00062B  00                 	db	0
  1807  00062C  00                 	db	0
  1808  00062D  00                 	db	0
  1809  00062E  00                 	db	0
  1810  00062F  00                 	db	0
  1811  000630  00                 	db	0
  1812  000631  00                 	db	0
  1813  000632  00                 	db	0
  1814  000633  00                 	db	0
  1815  000634  00                 	db	0
  1816  000635  00                 	db	0
  1817  000636  00                 	db	0
  1818  000637  00                 	db	0
  1819  000638  00                 	db	0
  1820  000639  00                 	db	0
  1821  00063A  00                 	db	0
  1822  00063B  00                 	db	0
  1823  00063C  00                 	db	0
  1824  00063D  00                 	db	0
  1825  00063E  00                 	db	0
  1826  00063F  00                 	db	0
  1827  000640  00                 	db	0
  1828  000641  00                 	db	0
  1829  000642  00                 	db	0
  1830  000643  00                 	db	0
  1831  000644  00                 	db	0
  1832  000645  00                 	db	0
  1833  000646  00                 	db	0
  1834  000647  00                 	db	0
  1835  000648  00                 	db	0
  1836  000649  00                 	db	0
  1837  00064A  00                 	db	0
  1838  00064B  00                 	db	0
  1839  00064C  00                 	db	0
  1840  00064D  00                 	db	0
  1841  00064E  00                 	db	0
  1842  00064F  00                 	db	0
  1843  000650  879E               	dw	34718
  1844  000652  5E4C               	dw	24140
  1845  000654  00                 	db	0
  1846  000655  00                 	db	0
  1847  000656  00                 	db	0
  1848  000657  00                 	db	0
  1849  000658  00                 	db	0
  1850  000659  00                 	db	0
  1851  00065A  00                 	db	0
  1852  00065B  0000               	dw	0
  1853  00065D  0000               	dw	0
  1854  00065F  0000               	dw	0
  1855  000661  0000               	dw	0
  1856  000663  0000               	dw	0
  1857  000665  0000               	dw	0
  1858  000667  00                 	db	0
  1859  000668  00                 	db	0
  1860  000669  00                 	db	0
  1861  00066A  00                 	db	0
  1862  00066B  00                 	db	0
  1863  00066C  00                 	db	0
  1864  00066D  00                 	db	0
  1865  00066E  00                 	db	0
  1866  00066F  00                 	db	0
  1867  000670  00                 	db	0
  1868  000671  00                 	db	0
  1869  000672  0000               	dw	0
  1870  000674  0000               	dw	0
  1871  000676  2D                 	db	45
  1872  000677  00                 	db	0
  1873  000678  00                 	db	0
  1874  000679  00                 	db	0
  1875  00067A  00                 	db	0
  1876  00067B  00                 	db	0
  1877  00067C  0000               	dw	0
  1878  00067E  0000               	dw	0
  1879  000680  0000               	dw	0
  1880  000682  0000               	dw	0
  1881                           
  1882                           	psect	mediumconst
  1883  00F7AA                     __pmediumconst:
  1884                           	opt callstack 0
  1885  00F7AA  00                 	db	0
  1886  00F7AB                     _BVSOC_TABLE:
  1887                           	opt callstack 0
  1888  00F7AB  59D8               	dw	23000
  1889  00F7AD  0000               	dw	0
  1890  00F7AF  0005               	dw	5
  1891  00F7B1  0000               	dw	0
  1892  00F7B3  5B68               	dw	23400
  1893  00F7B5  0000               	dw	0
  1894  00F7B7  000A               	dw	10
  1895  00F7B9  0000               	dw	0
  1896  00F7BB  5C30               	dw	23600
  1897  00F7BD  0000               	dw	0
  1898  00F7BF  0014               	dw	20
  1899  00F7C1  0000               	dw	0
  1900  00F7C3  5E38               	dw	24120
  1901  00F7C5  0000               	dw	0
  1902  00F7C7  0019               	dw	25
  1903  00F7C9  0000               	dw	0
  1904  00F7CB  5E88               	dw	24200
  1905  00F7CD  0000               	dw	0
  1906  00F7CF  001E               	dw	30
  1907  00F7D1  0000               	dw	0
  1908  00F7D3  5F78               	dw	24440
  1909  00F7D5  0000               	dw	0
  1910  00F7D7  0028               	dw	40
  1911  00F7D9  0000               	dw	0
  1912  00F7DB  5FDC               	dw	24540
  1913  00F7DD  0000               	dw	0
  1914  00F7DF  002D               	dw	45
  1915  00F7E1  0000               	dw	0
  1916  00F7E3  6018               	dw	24600
  1917  00F7E5  0000               	dw	0
  1918  00F7E7  0032               	dw	50
  1919  00F7E9  0000               	dw	0
  1920  00F7EB  6046               	dw	24646
  1921  00F7ED  0000               	dw	0
  1922  00F7EF  0035               	dw	53
  1923  00F7F1  0000               	dw	0
  1924  00F7F3  607C               	dw	24700
  1925  00F7F5  0000               	dw	0
  1926  00F7F7  0037               	dw	55
  1927  00F7F9  0000               	dw	0
  1928  00F7FB  60AE               	dw	24750
  1929  00F7FD  0000               	dw	0
  1930  00F7FF  0039               	dw	57
  1931  00F801  0000               	dw	0
  1932  00F803  60E0               	dw	24800
  1933  00F805  0000               	dw	0
  1934  00F807  003C               	dw	60
  1935  00F809  0000               	dw	0
  1936  00F80B  6112               	dw	24850
  1937  00F80D  0000               	dw	0
  1938  00F80F  003F               	dw	63
  1939  00F811  0000               	dw	0
  1940  00F813  615D               	dw	24925
  1941  00F815  0000               	dw	0
  1942  00F817  0043               	dw	67
  1943  00F819  0000               	dw	0
  1944  00F81B  61A8               	dw	25000
  1945  00F81D  0000               	dw	0
  1946  00F81F  0046               	dw	70
  1947  00F821  0000               	dw	0
  1948  00F823  61BC               	dw	25020
  1949  00F825  0000               	dw	0
  1950  00F827  0048               	dw	72
  1951  00F829  0000               	dw	0
  1952  00F82B  61D0               	dw	25040
  1953  00F82D  0000               	dw	0
  1954  00F82F  004B               	dw	75
  1955  00F831  0000               	dw	0
  1956  00F833  61DA               	dw	25050
  1957  00F835  0000               	dw	0
  1958  00F837  0050               	dw	80
  1959  00F839  0000               	dw	0
  1960  00F83B  61E4               	dw	25060
  1961  00F83D  0000               	dw	0
  1962  00F83F  0055               	dw	85
  1963  00F841  0000               	dw	0
  1964  00F843  61F8               	dw	25080
  1965  00F845  0000               	dw	0
  1966  00F847  005A               	dw	90
  1967  00F849  0000               	dw	0
  1968  00F84B  6208               	dw	25096
  1969  00F84D  0000               	dw	0
  1970  00F84F  005C               	dw	92
  1971  00F851  0000               	dw	0
  1972  00F853  6222               	dw	25122
  1973  00F855  0000               	dw	0
  1974  00F857  005D               	dw	93
  1975  00F859  0000               	dw	0
  1976  00F85B  6234               	dw	25140
  1977  00F85D  0000               	dw	0
  1978  00F85F  005F               	dw	95
  1979  00F861  0000               	dw	0
  1980  00F863  6248               	dw	25160
  1981  00F865  0000               	dw	0
  1982  00F867  0061               	dw	97
  1983  00F869  0000               	dw	0
  1984  00F86B  625C               	dw	25180
  1985  00F86D  0000               	dw	0
  1986  00F86F  0064               	dw	100
  1987  00F871  0000               	dw	0
  1988  00F873  6784               	dw	26500
  1989  00F875  0000               	dw	0
  1990  00F877  0062               	dw	98
  1991  00F879  0000               	dw	0
  1992  00F87B                     __end_of_BVSOC_TABLE:
  1993                           	opt callstack 0
  1994  00F87B                     ___month_to_secs@secs_through_month:
  1995                           	opt callstack 0
  1996  00F87B  0000               	dw	0
  1997  00F87D  0000               	dw	0
  1998  00F87F  DE80               	dw	56960
  1999  00F881  0028               	dw	40
  2000  00F883  C880               	dw	51328
  2001  00F885  004D               	dw	77
  2002  00F887  A700               	dw	42752
  2003  00F889  0076               	dw	118
  2004  00F88B  3400               	dw	13312
  2005  00F88D  009E               	dw	158
  2006  00F88F  1280               	dw	4736
  2007  00F891  00C7               	dw	199
  2008  00F893  9F80               	dw	40832
  2009  00F895  00EE               	dw	238
  2010  00F897  7E00               	dw	32256
  2011  00F899  0117               	dw	279
  2012  00F89B  5C80               	dw	23680
  2013  00F89D  0140               	dw	320
  2014  00F89F  E980               	dw	59776
  2015  00F8A1  0167               	dw	359
  2016  00F8A3  C800               	dw	51200
  2017  00F8A5  0190               	dw	400
  2018  00F8A7  5500               	dw	21760
  2019  00F8A9  01B8               	dw	440
  2020  00F8AB                     __end_of___month_to_secs@secs_through_month:
  2021                           	opt callstack 0
  2022  00F8AB                     ___secs_to_tm@days_in_month:
  2023                           	opt callstack 0
  2024  00F8AB  1F                 	db	31
  2025  00F8AC  1E                 	db	30
  2026  00F8AD  1F                 	db	31
  2027  00F8AE  1E                 	db	30
  2028  00F8AF  1F                 	db	31
  2029  00F8B0  1F                 	db	31
  2030  00F8B1  1E                 	db	30
  2031  00F8B2  1F                 	db	31
  2032  00F8B3  1E                 	db	30
  2033  00F8B4  1F                 	db	31
  2034  00F8B5  1F                 	db	31
  2035  00F8B6  1D                 	db	29
  2036  00F8B7                     __end_of___secs_to_tm@days_in_month:
  2037                           	opt callstack 0
  2038  00F8B7                     _T:
  2039                           	opt callstack 0
  2040  00F8B7  63                 	db	99
  2041  00F8B8  6F                 	db	111
  2042  00F8B9  6D                 	db	109
  2043  00F8BA  6D                 	db	109
  2044  00F8BB  61                 	db	97
  2045  00F8BC  6E                 	db	110
  2046  00F8BD  64                 	db	100
  2047  00F8BE  73                 	db	115
  2048  00F8BF  20                 	db	32
  2049  00F8C0  31                 	db	49
  2050  00F8C1  00                 	db	0
  2051  00F8C2  00                 	db	0
  2052  00F8C3  00                 	db	0
  2053  00F8C4  00                 	db	0
  2054  00F8C5  00                 	db	0
  2055  00F8C6  00                 	db	0
  2056  00F8C7  00                 	db	0
  2057  00F8C8  00                 	db	0
  2058  00F8C9  00                 	db	0
  2059  00F8CA  00                 	db	0
  2060  00F8CB  00                 	db	0
  2061  00F8CC  00                 	db	0
  2062  00F8CD  64                 	db	100
  2063  00F8CE  69                 	db	105
  2064  00F8CF  73                 	db	115
  2065  00F8D0  70                 	db	112
  2066  00F8D1  6C                 	db	108
  2067  00F8D2  61                 	db	97
  2068  00F8D3  79                 	db	121
  2069  00F8D4  73                 	db	115
  2070  00F8D5  20                 	db	32
  2071  00F8D6  31                 	db	49
  2072  00F8D7  00                 	db	0
  2073  00F8D8  00                 	db	0
  2074  00F8D9  00                 	db	0
  2075  00F8DA  00                 	db	0
  2076  00F8DB  00                 	db	0
  2077  00F8DC  00                 	db	0
  2078  00F8DD  00                 	db	0
  2079  00F8DE  00                 	db	0
  2080  00F8DF  00                 	db	0
  2081  00F8E0  00                 	db	0
  2082  00F8E1  00                 	db	0
  2083  00F8E2  00                 	db	0
  2084  00F8E3  63                 	db	99
  2085  00F8E4  6F                 	db	111
  2086  00F8E5  6D                 	db	109
  2087  00F8E6  6D                 	db	109
  2088  00F8E7  61                 	db	97
  2089  00F8E8  6E                 	db	110
  2090  00F8E9  64                 	db	100
  2091  00F8EA  73                 	db	115
  2092  00F8EB  20                 	db	32
  2093  00F8EC  32                 	db	50
  2094  00F8ED  00                 	db	0
  2095  00F8EE  00                 	db	0
  2096  00F8EF  00                 	db	0
  2097  00F8F0  00                 	db	0
  2098  00F8F1  00                 	db	0
  2099  00F8F2  00                 	db	0
  2100  00F8F3  00                 	db	0
  2101  00F8F4  00                 	db	0
  2102  00F8F5  00                 	db	0
  2103  00F8F6  00                 	db	0
  2104  00F8F7  00                 	db	0
  2105  00F8F8  00                 	db	0
  2106  00F8F9  64                 	db	100
  2107  00F8FA  69                 	db	105
  2108  00F8FB  73                 	db	115
  2109  00F8FC  70                 	db	112
  2110  00F8FD  6C                 	db	108
  2111  00F8FE  61                 	db	97
  2112  00F8FF  79                 	db	121
  2113  00F900  73                 	db	115
  2114  00F901  20                 	db	32
  2115  00F902  32                 	db	50
  2116  00F903  00                 	db	0
  2117  00F904  00                 	db	0
  2118  00F905  00                 	db	0
  2119  00F906  00                 	db	0
  2120  00F907  00                 	db	0
  2121  00F908  00                 	db	0
  2122  00F909  00                 	db	0
  2123  00F90A  00                 	db	0
  2124  00F90B  00                 	db	0
  2125  00F90C  00                 	db	0
  2126  00F90D  00                 	db	0
  2127  00F90E  00                 	db	0
  2128  00F90F  63                 	db	99
  2129  00F910  6F                 	db	111
  2130  00F911  6D                 	db	109
  2131  00F912  6D                 	db	109
  2132  00F913  61                 	db	97
  2133  00F914  6E                 	db	110
  2134  00F915  64                 	db	100
  2135  00F916  73                 	db	115
  2136  00F917  20                 	db	32
  2137  00F918  33                 	db	51
  2138  00F919  00                 	db	0
  2139  00F91A  00                 	db	0
  2140  00F91B  00                 	db	0
  2141  00F91C  00                 	db	0
  2142  00F91D  00                 	db	0
  2143  00F91E  00                 	db	0
  2144  00F91F  00                 	db	0
  2145  00F920  00                 	db	0
  2146  00F921  00                 	db	0
  2147  00F922  00                 	db	0
  2148  00F923  00                 	db	0
  2149  00F924  00                 	db	0
  2150  00F925  64                 	db	100
  2151  00F926  69                 	db	105
  2152  00F927  73                 	db	115
  2153  00F928  70                 	db	112
  2154  00F929  6C                 	db	108
  2155  00F92A  61                 	db	97
  2156  00F92B  79                 	db	121
  2157  00F92C  73                 	db	115
  2158  00F92D  20                 	db	32
  2159  00F92E  33                 	db	51
  2160  00F92F  00                 	db	0
  2161  00F930  00                 	db	0
  2162  00F931  00                 	db	0
  2163  00F932  00                 	db	0
  2164  00F933  00                 	db	0
  2165  00F934  00                 	db	0
  2166  00F935  00                 	db	0
  2167  00F936  00                 	db	0
  2168  00F937  00                 	db	0
  2169  00F938  00                 	db	0
  2170  00F939  00                 	db	0
  2171  00F93A  00                 	db	0
  2172  00F93B  63                 	db	99
  2173  00F93C  6F                 	db	111
  2174  00F93D  6D                 	db	109
  2175  00F93E  6D                 	db	109
  2176  00F93F  61                 	db	97
  2177  00F940  6E                 	db	110
  2178  00F941  64                 	db	100
  2179  00F942  73                 	db	115
  2180  00F943  20                 	db	32
  2181  00F944  34                 	db	52
  2182  00F945  00                 	db	0
  2183  00F946  00                 	db	0
  2184  00F947  00                 	db	0
  2185  00F948  00                 	db	0
  2186  00F949  00                 	db	0
  2187  00F94A  00                 	db	0
  2188  00F94B  00                 	db	0
  2189  00F94C  00                 	db	0
  2190  00F94D  00                 	db	0
  2191  00F94E  00                 	db	0
  2192  00F94F  00                 	db	0
  2193  00F950  00                 	db	0
  2194  00F951  64                 	db	100
  2195  00F952  69                 	db	105
  2196  00F953  73                 	db	115
  2197  00F954  70                 	db	112
  2198  00F955  6C                 	db	108
  2199  00F956  61                 	db	97
  2200  00F957  79                 	db	121
  2201  00F958  73                 	db	115
  2202  00F959  20                 	db	32
  2203  00F95A  34                 	db	52
  2204  00F95B  00                 	db	0
  2205  00F95C  00                 	db	0
  2206  00F95D  00                 	db	0
  2207  00F95E  00                 	db	0
  2208  00F95F  00                 	db	0
  2209  00F960  00                 	db	0
  2210  00F961  00                 	db	0
  2211  00F962  00                 	db	0
  2212  00F963  00                 	db	0
  2213  00F964  00                 	db	0
  2214  00F965  00                 	db	0
  2215  00F966  00                 	db	0
  2216  00F967                     __end_of_T:
  2217                           	opt callstack 0
  2218  00F967                     _spin:
  2219                           	opt callstack 0
  2220  00F967  7C                 	db	124
  2221  00F968  7C                 	db	124
  2222  00F969  2F                 	db	47
  2223  00F96A  2F                 	db	47
  2224  00F96B  2D                 	db	45
  2225  00F96C  2D                 	db	45
  2226  00F96D  00                 	db	0
  2227  00F96E  00                 	db	0
  2228  00F96F  00                 	db	0
  2229  00F970  00                 	db	0
  2230  00F971  00                 	db	0
  2231  00F972  00                 	db	0
  2232  00F973  00                 	db	0
  2233  00F974  00                 	db	0
  2234  00F975  00                 	db	0
  2235  00F976  00                 	db	0
  2236  00F977  00                 	db	0
  2237  00F978  00                 	db	0
  2238  00F979  00                 	db	0
  2239  00F97A  00                 	db	0
  2240  00F97B  7C                 	db	124
  2241  00F97C  7C                 	db	124
  2242  00F97D  2F                 	db	47
  2243  00F97E  2F                 	db	47
  2244  00F97F  2D                 	db	45
  2245  00F980  2D                 	db	45
  2246  00F981  5C                 	db	92
  2247  00F982  5C                 	db	92
  2248  00F983  00                 	db	0
  2249  00F984  00                 	db	0
  2250  00F985  00                 	db	0
  2251  00F986  00                 	db	0
  2252  00F987  00                 	db	0
  2253  00F988  00                 	db	0
  2254  00F989  00                 	db	0
  2255  00F98A  00                 	db	0
  2256  00F98B  00                 	db	0
  2257  00F98C  00                 	db	0
  2258  00F98D  00                 	db	0
  2259  00F98E  00                 	db	0
  2260  00F98F  4F                 	db	79
  2261  00F990  4F                 	db	79
  2262  00F991  4F                 	db	79
  2263  00F992  4F                 	db	79
  2264  00F993  4F                 	db	79
  2265  00F994  4F                 	db	79
  2266  00F995  2D                 	db	45
  2267  00F996  2D                 	db	45
  2268  00F997  5F                 	db	95
  2269  00F998  5F                 	db	95
  2270  00F999  2D                 	db	45
  2271  00F99A  00                 	db	0
  2272  00F99B  00                 	db	0
  2273  00F99C  00                 	db	0
  2274  00F99D  00                 	db	0
  2275  00F99E  00                 	db	0
  2276  00F99F  00                 	db	0
  2277  00F9A0  00                 	db	0
  2278  00F9A1  00                 	db	0
  2279  00F9A2  00                 	db	0
  2280  00F9A3  76                 	db	118
  2281  00F9A4  76                 	db	118
  2282  00F9A5  3C                 	db	60
  2283  00F9A6  3C                 	db	60
  2284  00F9A7  5E                 	db	94
  2285  00F9A8  5E                 	db	94
  2286  00F9A9  3E                 	db	62
  2287  00F9AA  3E                 	db	62
  2288  00F9AB  00                 	db	0
  2289  00F9AC  00                 	db	0
  2290  00F9AD  00                 	db	0
  2291  00F9AE  00                 	db	0
  2292  00F9AF  00                 	db	0
  2293  00F9B0  00                 	db	0
  2294  00F9B1  00                 	db	0
  2295  00F9B2  00                 	db	0
  2296  00F9B3  00                 	db	0
  2297  00F9B4  00                 	db	0
  2298  00F9B5  00                 	db	0
  2299  00F9B6  00                 	db	0
  2300  00F9B7  2E                 	db	46
  2301  00F9B8  2E                 	db	46
  2302  00F9B9  2A                 	db	42
  2303  00F9BA  2A                 	db	42
  2304  00F9BB  78                 	db	120
  2305  00F9BC  23                 	db	35
  2306  00F9BD  78                 	db	120
  2307  00F9BE  23                 	db	35
  2308  00F9BF  58                 	db	88
  2309  00F9C0  58                 	db	88
  2310  00F9C1  7C                 	db	124
  2311  00F9C2  7C                 	db	124
  2312  00F9C3  2D                 	db	45
  2313  00F9C4  2D                 	db	45
  2314  00F9C5  00                 	db	0
  2315  00F9C6  00                 	db	0
  2316  00F9C7  00                 	db	0
  2317  00F9C8  00                 	db	0
  2318  00F9C9  00                 	db	0
  2319  00F9CA  00                 	db	0
  2320  00F9CB  2E                 	db	46
  2321  00F9CC  2E                 	db	46
  2322  00F9CD  6F                 	db	111
  2323  00F9CE  6F                 	db	111
  2324  00F9CF  4F                 	db	79
  2325  00F9D0  4F                 	db	79
  2326  00F9D1  6F                 	db	111
  2327  00F9D2  6F                 	db	111
  2328  00F9D3  00                 	db	0
  2329  00F9D4  00                 	db	0
  2330  00F9D5  00                 	db	0
  2331  00F9D6  00                 	db	0
  2332  00F9D7  00                 	db	0
  2333  00F9D8  00                 	db	0
  2334  00F9D9  00                 	db	0
  2335  00F9DA  00                 	db	0
  2336  00F9DB  00                 	db	0
  2337  00F9DC  00                 	db	0
  2338  00F9DD  00                 	db	0
  2339  00F9DE  00                 	db	0
  2340  00F9DF                     __end_of_spin:
  2341                           	opt callstack 0
  2342  00F9DF  0000               	dw	0
  2343  00F9E1  3F80               	dw	16256
  2344  00F9E3  0000               	dw	0
  2345  00F9E5  3FC0               	dw	16320
  2346  00F9E7                     __end_of_bp:
  2347                           	opt callstack 0
  2348  00F9E7                     ___gmt:
  2349                           	opt callstack 0
  2350  00F9E7  47                 	db	71
  2351  00F9E8  4D                 	db	77
  2352  00F9E9  54                 	db	84
  2353  00F9EA  00                 	db	0
  2354  00F9EB                     __end_of___gmt:
  2355                           	opt callstack 0
  2356  00F9EB  AA00               	dw	43520
  2357  00F9ED  3FB8               	dw	16312
  2358  00F9EF                     __end_of_ivln2_h:
  2359                           	opt callstack 0
  2360  00F9EF  23C6               	dw	9158
  2361  00F9F1  B8F6               	dw	47350
  2362  00F9F3                     __end_of_cp_l:
  2363                           	opt callstack 0
  2364  00F9F3  4000               	dw	16384
  2365  00F9F5  3F76               	dw	16246
  2366  00F9F7                     __end_of_cp_h:
  2367                           	opt callstack 0
  2368  0000                     _IVTADL	set	14493
  2369  0000                     _IVTADH	set	14494
  2370  0000                     _IVTADU	set	14495
  2371  0000                     _CRCDATH	set	14689
  2372  0000                     _CRCDATL	set	14688
  2373  0000                     _CRCCON0bits	set	14696
  2374  0000                     _CRCCON1bits	set	14697
  2375  0000                     _CRCXORL	set	14694
  2376  0000                     _CRCXORH	set	14695
  2377  0000                     _SCANTRIG	set	14717
  2378  0000                     _SCANHADRL	set	14713
  2379  0000                     _SCANHADRH	set	14714
  2380  0000                     _SCANHADRU	set	14715
  2381  0000                     _SCANLADRL	set	14710
  2382  0000                     _SCANLADRH	set	14711
  2383  0000                     _SCANLADRU	set	14712
  2384  0000                     _SCANCON0	set	14716
  2385  0000                     _CRCACCH	set	14691
  2386  0000                     _CRCACCL	set	14690
  2387  0000                     _CRCCON1	set	14697
  2388  0000                     _CRCCON0	set	14696
  2389  0000                     _PIR6bits	set	14758
  2390  0000                     _PIR4bits	set	14756
  2391  0000                     _PIE8bits	set	14744
  2392  0000                     _PIR8bits	set	14760
  2393  0000                     _PIR0bits	set	14752
  2394  0000                     _NVMCON2	set	14822
  2395  0000                     _NVMDAT	set	14819
  2396  0000                     _NVMADRL	set	14816
  2397  0000                     _NVMADRH	set	14817
  2398  0000                     _NVMCON1bits	set	14821
  2399  0000                     _SCANPR	set	14839
  2400  0000                     _DMA2PR	set	14836
  2401  0000                     _DMA1PR	set	14835
  2402  0000                     _MAINPR	set	14834
  2403  0000                     _ISRPR	set	14833
  2404  0000                     _PIE2bits	set	14738
  2405  0000                     _PIR2bits	set	14754
  2406  0000                     _PIE9bits	set	14745
  2407  0000                     _PIR9bits	set	14761
  2408  0000                     _PIE6bits	set	14742
  2409  0000                     _PIE3bits	set	14739
  2410  0000                     _PMD7	set	14791
  2411  0000                     _PMD6	set	14790
  2412  0000                     _PMD5	set	14789
  2413  0000                     _PMD4	set	14788
  2414  0000                     _PMD3	set	14787
  2415  0000                     _PMD2	set	14786
  2416  0000                     _PMD1	set	14785
  2417  0000                     _PMD0	set	14784
  2418  0000                     _OSCTUNE	set	14814
  2419  0000                     _OSCFRQ	set	14815
  2420  0000                     _OSCEN	set	14813
  2421  0000                     _OSCCON3	set	14811
  2422  0000                     _OSCCON1	set	14809
  2423  0000                     _IPR8bits	set	14728
  2424  0000                     _IPR9bits	set	14729
  2425  0000                     _IPR5bits	set	14725
  2426  0000                     _IPR1bits	set	14721
  2427  0000                     _IPR3bits	set	14723
  2428  0000                     _IPR6bits	set	14726
  2429  0000                     _IPR2bits	set	14722
  2430  0000                     _PIE5bits	set	14741
  2431  0000                     _PIE1bits	set	14737
  2432  0000                     _PIR5bits	set	14757
  2433  0000                     _PIR1bits	set	14753
  2434  0000                     _PLLR	set	118496
  2435  0000                     _SPI1SDIPPS	set	15071
  2436  0000                     _U1RXPPS	set	15077
  2437  0000                     _RC6PPS	set	14870
  2438  0000                     _RC5PPS	set	14869
  2439  0000                     _INT1PPS	set	15041
  2440  0000                     _RD1PPS	set	14873
  2441  0000                     _INT0PPS	set	15040
  2442  0000                     _RC3PPS	set	14867
  2443  0000                     _RB6PPS	set	14862
  2444  0000                     _SPI1SCKPPS	set	15070
  2445  0000                     _U2RXPPS	set	15080
  2446  0000                     _SLRCONF	set	14995
  2447  0000                     _SLRCONE	set	14979
  2448  0000                     _SLRCOND	set	14963
  2449  0000                     _SLRCONC	set	14947
  2450  0000                     _SLRCONB	set	14931
  2451  0000                     _SLRCONA	set	14915
  2452  0000                     _ODCOND	set	14962
  2453  0000                     _ODCONC	set	14946
  2454  0000                     _ODCONB	set	14930
  2455  0000                     _ODCONA	set	14914
  2456  0000                     _ODCONF	set	14994
  2457  0000                     _ODCONE	set	14978
  2458  0000                     _WPUC	set	14945
  2459  0000                     _WPUA	set	14913
  2460  0000                     _WPUB	set	14929
  2461  0000                     _WPUE	set	14977
  2462  0000                     _WPUF	set	14993
  2463  0000                     _WPUD	set	14961
  2464  0000                     _ANSELA	set	14912
  2465  0000                     _ANSELF	set	14992
  2466  0000                     _ANSELE	set	14976
  2467  0000                     _ANSELB	set	14928
  2468  0000                     _ANSELC	set	14944
  2469  0000                     _ANSELD	set	14960
  2470  0000                     _DMA2SSA	set	15321
  2471  0000                     _DMA1SSA	set	15353
  2472  0000                     _DMA2DSZ	set	15310
  2473  0000                     _DMA2SSZ	set	15319
  2474  0000                     _DMA2DSA	set	15312
  2475  0000                     _DMA1DSZ	set	15342
  2476  0000                     _DMA1SSZ	set	15351
  2477  0000                     _DMA1DSA	set	15344
  2478  0000                     _DMA2CON0bits	set	15324
  2479  0000                     _DMA2CON1bits	set	15325
  2480  0000                     _DMA1CON0bits	set	15356
  2481  0000                     _DMA1CON1bits	set	15357
  2482  0000                     _DMA2CON0	set	15324
  2483  0000                     _DMA2AIRQ	set	15326
  2484  0000                     _DMA2SIRQ	set	15327
  2485  0000                     _DMA2CON1	set	15325
  2486  0000                     _DMA1CON0	set	15356
  2487  0000                     _DMA1AIRQ	set	15358
  2488  0000                     _DMA1SIRQ	set	15359
  2489  0000                     _DMA1CON1	set	15357
  2490  0000                     _CLKRCON	set	15589
  2491  0000                     _CLKRCLK	set	15590
  2492  0000                     _SPI1CON1bits	set	15637
  2493  0000                     _SPI1STATUSbits	set	15639
  2494  0000                     _SPI1INTFbits	set	15642
  2495  0000                     _SPI1CON0bits	set	15636
  2496  0000                     _SPI1RXB	set	15632
  2497  0000                     _SPI1TXB	set	15633
  2498  0000                     _SPI1TCNTL	set	15634
  2499  0000                     _SPI1CON0	set	15636
  2500  0000                     _SPI1CLK	set	15644
  2501  0000                     _SPI1BAUD	set	15641
  2502  0000                     _SPI1CON2	set	15638
  2503  0000                     _SPI1CON1	set	15637
  2504  0000                     _U2RXB	set	15824
  2505  0000                     _U2TXB	set	15826
  2506  0000                     _U2ERRIE	set	15842
  2507  0000                     _U2ERRIR	set	15841
  2508  0000                     _U2UIR	set	15840
  2509  0000                     _U2FIFO	set	15839
  2510  0000                     _U2BRGH	set	15838
  2511  0000                     _U2BRGL	set	15837
  2512  0000                     _U2CON2	set	15836
  2513  0000                     _U2CON1	set	15835
  2514  0000                     _U2CON0	set	15834
  2515  0000                     _U2P3L	set	15832
  2516  0000                     _U2P2L	set	15830
  2517  0000                     _U2P1L	set	15828
  2518  0000                     _U1RXB	set	15848
  2519  0000                     _U1ERRIE	set	15866
  2520  0000                     _U1ERRIR	set	15865
  2521  0000                     _U1UIR	set	15864
  2522  0000                     _U1FIFO	set	15863
  2523  0000                     _U1BRGH	set	15862
  2524  0000                     _U1BRGL	set	15861
  2525  0000                     _U1CON2	set	15860
  2526  0000                     _U1CON1	set	15859
  2527  0000                     _U1CON0	set	15858
  2528  0000                     _U1P3H	set	15857
  2529  0000                     _U1P3L	set	15856
  2530  0000                     _U1P2H	set	15855
  2531  0000                     _U1P2L	set	15854
  2532  0000                     _U1P1H	set	15853
  2533  0000                     _U1P1L	set	15852
  2534  0000                     _FVRCON	set	16065
  2535  0000                     _ADFLTRL	set	16102
  2536  0000                     _ADFLTRH	set	16103
  2537  0000                     _ADCON0bits	set	16120
  2538  0000                     _ADCON0	set	16120
  2539  0000                     _ADCLK	set	16127
  2540  0000                     _ADACT	set	16126
  2541  0000                     _ADREF	set	16125
  2542  0000                     _ADSTAT	set	16124
  2543  0000                     _ADCON3	set	16123
  2544  0000                     _ADCON2	set	16122
  2545  0000                     _ADCON1	set	16121
  2546  0000                     _ADPREH	set	16119
  2547  0000                     _ADPREL	set	16118
  2548  0000                     _ADCAP	set	16117
  2549  0000                     _ADACQH	set	16116
  2550  0000                     _ADACQL	set	16115
  2551  0000                     _ADPCH	set	16113
  2552  0000                     _ADRPT	set	16108
  2553  0000                     _ADACCU	set	16106
  2554  0000                     _ADSTPTH	set	16101
  2555  0000                     _ADSTPTL	set	16100
  2556  0000                     _ADUTHH	set	16097
  2557  0000                     _ADUTHL	set	16096
  2558  0000                     _ADLTHH	set	16095
  2559  0000                     _ADLTHL	set	16094
  2560  0000                     _CCPTMRS1bits	set	16223
  2561  0000                     _PORTDbits	set	16333
  2562  0000                     _PORTFbits	set	16335
  2563  0000                     _LATFbits	set	16319
  2564  0000                     _LATCbits	set	16316
  2565  0000                     _LATDbits	set	16317
  2566  0000                     _PORTBbits	set	16331
  2567  0000                     _T3CONbits	set	16294
  2568  0000                     _T3CON	set	16294
  2569  0000                     _TMR3L	set	16292
  2570  0000                     _TMR3H	set	16293
  2571  0000                     _T3CLK	set	16297
  2572  0000                     _T3GATE	set	16296
  2573  0000                     _T3GCON	set	16295
  2574  0000                     _T2CON	set	16300
  2575  0000                     _T2TMR	set	16298
  2576  0000                     _T2PR	set	16299
  2577  0000                     _T2RST	set	16303
  2578  0000                     _T2HLT	set	16301
  2579  0000                     _T2CLKCON	set	16302
  2580  0000                     _PWM8DCL	set	16224
  2581  0000                     _PWM8DCH	set	16225
  2582  0000                     _PWM8CON	set	16226
  2583  0000                     _LATEbits	set	16318
  2584  0000                     _T5CONbits	set	16282
  2585  0000                     _T5CON	set	16282
  2586  0000                     _TMR5L	set	16280
  2587  0000                     _TMR5H	set	16281
  2588  0000                     _T5CLK	set	16285
  2589  0000                     _T5GATE	set	16284
  2590  0000                     _T5GCON	set	16283
  2591  0000                     _T6CON	set	16276
  2592  0000                     _T6TMR	set	16274
  2593  0000                     _T6PR	set	16275
  2594  0000                     _T6RST	set	16279
  2595  0000                     _T6HLT	set	16277
  2596  0000                     _T6CLKCON	set	16278
  2597  0000                     _TRISD	set	16325
  2598  0000                     _TRISC	set	16324
  2599  0000                     _TRISB	set	16323
  2600  0000                     _TRISA	set	16322
  2601  0000                     _TRISF	set	16327
  2602  0000                     _TRISE	set	16326
  2603  0000                     _LATC	set	16316
  2604  0000                     _LATB	set	16315
  2605  0000                     _LATF	set	16319
  2606  0000                     _LATA	set	16314
  2607  0000                     _LATD	set	16317
  2608  0000                     _LATE	set	16318
  2609  0000                     _IVTLOCKbits	set	16340
  2610  0000                     _IVTLOCK	set	16340
  2611  0000                     _INTCON0bits	set	16338
  2612  0000                     _GIE	set	130711
  2613  00F9F7                     STR_94:
  2614                           
  2615                           ; BSR set to: 57
  2616  00F9F7  20                 	db	32
  2617  00F9F8  25                 	db	37
  2618  00F9F9  63                 	db	99	;'c'
  2619  00F9FA  20                 	db	32
  2620  00F9FB  2C                 	db	44
  2621  00F9FC  25                 	db	37
  2622  00F9FD  6C                 	db	108	;'l'
  2623  00F9FE  75                 	db	117	;'u'
  2624  00F9FF  2C                 	db	44
  2625  00FA00  25                 	db	37
  2626  00FA01  34                 	db	52	;'4'
  2627  00FA02  2E                 	db	46
  2628  00FA03  34                 	db	52	;'4'
  2629  00FA04  66                 	db	102	;'f'
  2630  00FA05  2C                 	db	44
  2631  00FA06  25                 	db	37
  2632  00FA07  34                 	db	52	;'4'
  2633  00FA08  2E                 	db	46
  2634  00FA09  34                 	db	52	;'4'
  2635  00FA0A  66                 	db	102	;'f'
  2636  00FA0B  2C                 	db	44
  2637  00FA0C  25                 	db	37
  2638  00FA0D  34                 	db	52	;'4'
  2639  00FA0E  2E                 	db	46
  2640  00FA0F  34                 	db	52	;'4'
  2641  00FA10  66                 	db	102	;'f'
  2642  00FA11  2C                 	db	44
  2643  00FA12  25                 	db	37
  2644  00FA13  34                 	db	52	;'4'
  2645  00FA14  2E                 	db	46
  2646  00FA15  34                 	db	52	;'4'
  2647  00FA16  66                 	db	102	;'f'
  2648  00FA17  2C                 	db	44
  2649  00FA18  25                 	db	37
  2650  00FA19  34                 	db	52	;'4'
  2651  00FA1A  2E                 	db	46
  2652  00FA1B  34                 	db	52	;'4'
  2653  00FA1C  66                 	db	102	;'f'
  2654  00FA1D  2C                 	db	44
  2655  00FA1E  25                 	db	37
  2656  00FA1F  34                 	db	52	;'4'
  2657  00FA20  2E                 	db	46
  2658  00FA21  33                 	db	51	;'3'
  2659  00FA22  66                 	db	102	;'f'
  2660  00FA23  2C                 	db	44
  2661  00FA24  25                 	db	37
  2662  00FA25  34                 	db	52	;'4'
  2663  00FA26  2E                 	db	46
  2664  00FA27  33                 	db	51	;'3'
  2665  00FA28  66                 	db	102	;'f'
  2666  00FA29  2C                 	db	44
  2667  00FA2A  25                 	db	37
  2668  00FA2B  34                 	db	52	;'4'
  2669  00FA2C  2E                 	db	46
  2670  00FA2D  33                 	db	51	;'3'
  2671  00FA2E  66                 	db	102	;'f'
  2672  00FA2F  2C                 	db	44
  2673  00FA30  25                 	db	37
  2674  00FA31  34                 	db	52	;'4'
  2675  00FA32  2E                 	db	46
  2676  00FA33  33                 	db	51	;'3'
  2677  00FA34  66                 	db	102	;'f'
  2678  00FA35  2C                 	db	44
  2679  00FA36  25                 	db	37
  2680  00FA37  34                 	db	52	;'4'
  2681  00FA38  2E                 	db	46
  2682  00FA39  33                 	db	51	;'3'
  2683  00FA3A  66                 	db	102	;'f'
  2684  00FA3B  2C                 	db	44
  2685  00FA3C  25                 	db	37
  2686  00FA3D  34                 	db	52	;'4'
  2687  00FA3E  2E                 	db	46
  2688  00FA3F  33                 	db	51	;'3'
  2689  00FA40  66                 	db	102	;'f'
  2690  00FA41  2C                 	db	44
  2691  00FA42  25                 	db	37
  2692  00FA43  64                 	db	100	;'d'
  2693  00FA44  2C                 	db	44
  2694  00FA45  25                 	db	37
  2695  00FA46  64                 	db	100	;'d'
  2696  00FA47  2C                 	db	44
  2697  00FA48  25                 	db	37
  2698  00FA49  32                 	db	50	;'2'
  2699  00FA4A  2E                 	db	46
  2700  00FA4B  36                 	db	54	;'6'
  2701  00FA4C  66                 	db	102	;'f'
  2702  00FA4D  2C                 	db	44
  2703  00FA4E  25                 	db	37
  2704  00FA4F  34                 	db	52	;'4'
  2705  00FA50  2E                 	db	46
  2706  00FA51  33                 	db	51	;'3'
  2707  00FA52  66                 	db	102	;'f'
  2708  00FA53  2C                 	db	44
  2709  00FA54  25                 	db	37
  2710  00FA55  64                 	db	100	;'d'
  2711  00FA56  2C                 	db	44
  2712  00FA57  25                 	db	37
  2713  00FA58  64                 	db	100	;'d'
  2714  00FA59  2C                 	db	44
  2715  00FA5A  25                 	db	37
  2716  00FA5B  6C                 	db	108	;'l'
  2717  00FA5C  75                 	db	117	;'u'
  2718  00FA5D  2C                 	db	44
  2719  00FA5E  25                 	db	37
  2720  00FA5F  6C                 	db	108	;'l'
  2721  00FA60  75                 	db	117	;'u'
  2722  00FA61  2C                 	db	44
  2723  00FA62  25                 	db	37
  2724  00FA63  34                 	db	52	;'4'
  2725  00FA64  2E                 	db	46
  2726  00FA65  33                 	db	51	;'3'
  2727  00FA66  66                 	db	102	;'f'
  2728  00FA67  2C                 	db	44
  2729  00FA68  25                 	db	37
  2730  00FA69  34                 	db	52	;'4'
  2731  00FA6A  2E                 	db	46
  2732  00FA6B  33                 	db	51	;'3'
  2733  00FA6C  66                 	db	102	;'f'
  2734  00FA6D  2C                 	db	44
  2735  00FA6E  25                 	db	37
  2736  00FA6F  34                 	db	52	;'4'
  2737  00FA70  2E                 	db	46
  2738  00FA71  33                 	db	51	;'3'
  2739  00FA72  66                 	db	102	;'f'
  2740  00FA73  0D                 	db	13
  2741  00FA74  0A                 	db	10
  2742  00FA75  00                 	db	0
  2743  00FA76                     STR_132:
  2744                           
  2745                           ; BSR set to: 57
  2746  00FA76  4A                 	db	74	;'J'
  2747  00FA77  61                 	db	97	;'a'
  2748  00FA78  6E                 	db	110	;'n'
  2749  00FA79  46                 	db	70	;'F'
  2750  00FA7A  65                 	db	101	;'e'
  2751  00FA7B  62                 	db	98	;'b'
  2752  00FA7C  4D                 	db	77	;'M'
  2753  00FA7D  61                 	db	97	;'a'
  2754  00FA7E  72                 	db	114	;'r'
  2755  00FA7F  41                 	db	65	;'A'
  2756  00FA80  70                 	db	112	;'p'
  2757  00FA81  72                 	db	114	;'r'
  2758  00FA82  4D                 	db	77	;'M'
  2759  00FA83  61                 	db	97	;'a'
  2760  00FA84  79                 	db	121	;'y'
  2761  00FA85  4A                 	db	74	;'J'
  2762  00FA86  75                 	db	117	;'u'
  2763  00FA87  6E                 	db	110	;'n'
  2764  00FA88  4A                 	db	74	;'J'
  2765  00FA89  75                 	db	117	;'u'
  2766  00FA8A  6C                 	db	108	;'l'
  2767  00FA8B  41                 	db	65	;'A'
  2768  00FA8C  75                 	db	117	;'u'
  2769  00FA8D  67                 	db	103	;'g'
  2770  00FA8E  53                 	db	83	;'S'
  2771  00FA8F  65                 	db	101	;'e'
  2772  00FA90  70                 	db	112	;'p'
  2773  00FA91  4F                 	db	79	;'O'
  2774  00FA92  63                 	db	99	;'c'
  2775  00FA93  74                 	db	116	;'t'
  2776  00FA94  4E                 	db	78	;'N'
  2777  00FA95  6F                 	db	111	;'o'
  2778  00FA96  76                 	db	118	;'v'
  2779  00FA97  44                 	db	68	;'D'
  2780  00FA98  65                 	db	101	;'e'
  2781  00FA99  63                 	db	99	;'c'
  2782  00FA9A  00                 	db	0
  2783  00FA9B                     STR_49:
  2784                           
  2785                           ; BSR set to: 57
  2786  00FA9B  53                 	db	83	;'S'
  2787  00FA9C  25                 	db	37
  2788  00FA9D  63                 	db	99	;'c'
  2789  00FA9E  43                 	db	67	;'C'
  2790  00FA9F  20                 	db	32
  2791  00FAA0  25                 	db	37
  2792  00FAA1  64                 	db	100	;'d'
  2793  00FAA2  20                 	db	32
  2794  00FAA3  52                 	db	82	;'R'
  2795  00FAA4  55                 	db	85	;'U'
  2796  00FAA5  4E                 	db	78	;'N'
  2797  00FAA6  20                 	db	32
  2798  00FAA7  25                 	db	37
  2799  00FAA8  64                 	db	100	;'d'
  2800  00FAA9  20                 	db	32
  2801  00FAAA  56                 	db	86	;'V'
  2802  00FAAB  25                 	db	37
  2803  00FAAC  32                 	db	50	;'2'
  2804  00FAAD  2E                 	db	46
  2805  00FAAE  32                 	db	50	;'2'
  2806  00FAAF  66                 	db	102	;'f'
  2807  00FAB0  20                 	db	32
  2808  00FAB1  20                 	db	32
  2809  00FAB2  20                 	db	32
  2810  00FAB3  20                 	db	32
  2811  00FAB4  20                 	db	32
  2812  00FAB5  20                 	db	32
  2813  00FAB6  20                 	db	32
  2814  00FAB7  20                 	db	32
  2815  00FAB8  00                 	db	0
  2816  00FAB9                     STR_69:
  2817                           
  2818                           ; BSR set to: 57
  2819  00FAB9  25                 	db	37
  2820  00FABA  64                 	db	100	;'d'
  2821  00FABB  20                 	db	32
  2822  00FABC  25                 	db	37
  2823  00FABD  64                 	db	100	;'d'
  2824  00FABE  20                 	db	32
  2825  00FABF  25                 	db	37
  2826  00FAC0  64                 	db	100	;'d'
  2827  00FAC1  20                 	db	32
  2828  00FAC2  25                 	db	37
  2829  00FAC3  64                 	db	100	;'d'
  2830  00FAC4  20                 	db	32
  2831  00FAC5  20                 	db	32
  2832  00FAC6  20                 	db	32
  2833  00FAC7  20                 	db	32
  2834  00FAC8  20                 	db	32
  2835  00FAC9  20                 	db	32
  2836  00FACA  20                 	db	32
  2837  00FACB  20                 	db	32
  2838  00FACC  20                 	db	32
  2839  00FACD  20                 	db	32
  2840  00FACE  20                 	db	32
  2841  00FACF  20                 	db	32
  2842  00FAD0  20                 	db	32
  2843  00FAD1  20                 	db	32
  2844  00FAD2  20                 	db	32
  2845  00FAD3  20                 	db	32
  2846  00FAD4  00                 	db	0
  2847  00FAD5                     STR_26:
  2848                           
  2849                           ; BSR set to: 57
  2850  00FAD5  52                 	db	82	;'R'
  2851  00FAD6  31                 	db	49	;'1'
  2852  00FAD7  20                 	db	32
  2853  00FAD8  25                 	db	37
  2854  00FAD9  32                 	db	50	;'2'
  2855  00FADA  2E                 	db	46
  2856  00FADB  33                 	db	51	;'3'
  2857  00FADC  66                 	db	102	;'f'
  2858  00FADD  20                 	db	32
  2859  00FADE  25                 	db	37
  2860  00FADF  33                 	db	51	;'3'
  2861  00FAE0  2E                 	db	46
  2862  00FAE1  34                 	db	52	;'4'
  2863  00FAE2  66                 	db	102	;'f'
  2864  00FAE3  20                 	db	32
  2865  00FAE4  20                 	db	32
  2866  00FAE5  20                 	db	32
  2867  00FAE6  20                 	db	32
  2868  00FAE7  20                 	db	32
  2869  00FAE8  20                 	db	32
  2870  00FAE9  20                 	db	32
  2871  00FAEA  20                 	db	32
  2872  00FAEB  20                 	db	32
  2873  00FAEC  20                 	db	32
  2874  00FAED  20                 	db	32
  2875  00FAEE  20                 	db	32
  2876  00FAEF  00                 	db	0
  2877  00FAF0                     STR_27:
  2878                           
  2879                           ; BSR set to: 57
  2880  00FAF0  52                 	db	82	;'R'
  2881  00FAF1  32                 	db	50	;'2'
  2882  00FAF2  20                 	db	32
  2883  00FAF3  25                 	db	37
  2884  00FAF4  32                 	db	50	;'2'
  2885  00FAF5  2E                 	db	46
  2886  00FAF6  33                 	db	51	;'3'
  2887  00FAF7  66                 	db	102	;'f'
  2888  00FAF8  20                 	db	32
  2889  00FAF9  25                 	db	37
  2890  00FAFA  33                 	db	51	;'3'
  2891  00FAFB  2E                 	db	46
  2892  00FAFC  34                 	db	52	;'4'
  2893  00FAFD  66                 	db	102	;'f'
  2894  00FAFE  20                 	db	32
  2895  00FAFF  20                 	db	32
  2896  00FB00  20                 	db	32
  2897  00FB01  20                 	db	32
  2898  00FB02  20                 	db	32
  2899  00FB03  20                 	db	32
  2900  00FB04  20                 	db	32
  2901  00FB05  20                 	db	32
  2902  00FB06  20                 	db	32
  2903  00FB07  20                 	db	32
  2904  00FB08  20                 	db	32
  2905  00FB09  20                 	db	32
  2906  00FB0A  00                 	db	0
  2907  00FB0B                     
  2908                           ; BSR set to: 57
  2909  00FB0B  20                 	db	32
  2910  00FB0C  4D                 	db	77	;'M'
  2911  00FB0D  65                 	db	101	;'e'
  2912  00FB0E  73                 	db	115	;'s'
  2913  00FB0F  67                 	db	103	;'g'
  2914  00FB10  20                 	db	32
  2915  00FB11  25                 	db	37
  2916  00FB12  64                 	db	100	;'d'
  2917  00FB13  20                 	db	32
  2918  00FB14  53                 	db	83	;'S'
  2919  00FB15  74                 	db	116	;'t'
  2920  00FB16  61                 	db	97	;'a'
  2921  00FB17  63                 	db	99	;'c'
  2922  00FB18  6B                 	db	107	;'k'
  2923  00FB19  20                 	db	32
  2924  00FB1A  25                 	db	37
  2925  00FB1B  64                 	db	100	;'d'
  2926  00FB1C  20                 	db	32
  2927  00FB1D  20                 	db	32
  2928  00FB1E  20                 	db	32
  2929  00FB1F  20                 	db	32
  2930  00FB20  20                 	db	32
  2931  00FB21  20                 	db	32
  2932  00FB22  20                 	db	32
  2933  00FB23  20                 	db	32
  2934  00FB24  00                 	db	0
  2935  00FB25                     STR_17:
  2936                           
  2937                           ; BSR set to: 57
  2938  00FB25  53                 	db	83	;'S'
  2939  00FB26  20                 	db	32
  2940  00FB27  53                 	db	83	;'S'
  2941  00FB28  25                 	db	37
  2942  00FB29  63                 	db	99	;'c'
  2943  00FB2A  43                 	db	67	;'C'
  2944  00FB2B  20                 	db	32
  2945  00FB2C  25                 	db	37
  2946  00FB2D  64                 	db	100	;'d'
  2947  00FB2E  20                 	db	32
  2948  00FB2F  25                 	db	37
  2949  00FB30  32                 	db	50	;'2'
  2950  00FB31  2E                 	db	46
  2951  00FB32  34                 	db	52	;'4'
  2952  00FB33  66                 	db	102	;'f'
  2953  00FB34  20                 	db	32
  2954  00FB35  20                 	db	32
  2955  00FB36  20                 	db	32
  2956  00FB37  20                 	db	32
  2957  00FB38  20                 	db	32
  2958  00FB39  20                 	db	32
  2959  00FB3A  20                 	db	32
  2960  00FB3B  20                 	db	32
  2961  00FB3C  20                 	db	32
  2962  00FB3D  20                 	db	32
  2963  00FB3E  00                 	db	0
  2964  00FB3F                     STR_50:
  2965                           
  2966                           ; BSR set to: 57
  2967  00FB3F  45                 	db	69	;'E'
  2968  00FB40  53                 	db	83	;'S'
  2969  00FB41  52                 	db	82	;'R'
  2970  00FB42  20                 	db	32
  2971  00FB43  20                 	db	32
  2972  00FB44  25                 	db	37
  2973  00FB45  32                 	db	50	;'2'
  2974  00FB46  2E                 	db	46
  2975  00FB47  36                 	db	54	;'6'
  2976  00FB48  66                 	db	102	;'f'
  2977  00FB49  20                 	db	32
  2978  00FB4A  20                 	db	32
  2979  00FB4B  20                 	db	32
  2980  00FB4C  20                 	db	32
  2981  00FB4D  20                 	db	32
  2982  00FB4E  20                 	db	32
  2983  00FB4F  20                 	db	32
  2984  00FB50  20                 	db	32
  2985  00FB51  20                 	db	32
  2986  00FB52  20                 	db	32
  2987  00FB53  20                 	db	32
  2988  00FB54  20                 	db	32
  2989  00FB55  20                 	db	32
  2990  00FB56  00                 	db	0
  2991  00FB57                     STR_47:
  2992                           
  2993                           ; BSR set to: 57
  2994  00FB57  42                 	db	66	;'B'
  2995  00FB58  41                 	db	65	;'A'
  2996  00FB59  54                 	db	84	;'T'
  2997  00FB5A  54                 	db	84	;'T'
  2998  00FB5B  20                 	db	32
  2999  00FB5C  50                 	db	80	;'P'
  3000  00FB5D  57                 	db	87	;'W'
  3001  00FB5E  52                 	db	82	;'R'
  3002  00FB5F  20                 	db	32
  3003  00FB60  25                 	db	37
  3004  00FB61  33                 	db	51	;'3'
  3005  00FB62  2E                 	db	46
  3006  00FB63  32                 	db	50	;'2'
  3007  00FB64  66                 	db	102	;'f'
  3008  00FB65  20                 	db	32
  3009  00FB66  20                 	db	32
  3010  00FB67  20                 	db	32
  3011  00FB68  20                 	db	32
  3012  00FB69  20                 	db	32
  3013  00FB6A  20                 	db	32
  3014  00FB6B  20                 	db	32
  3015  00FB6C  20                 	db	32
  3016  00FB6D  20                 	db	32
  3017  00FB6E  00                 	db	0
  3018  00FB6F                     STR_51:
  3019                           
  3020                           ; BSR set to: 57
  3021  00FB6F  52                 	db	82	;'R'
  3022  00FB70  31                 	db	49	;'1'
  3023  00FB71  20                 	db	32
  3024  00FB72  25                 	db	37
  3025  00FB73  32                 	db	50	;'2'
  3026  00FB74  2E                 	db	46
  3027  00FB75  33                 	db	51	;'3'
  3028  00FB76  66                 	db	102	;'f'
  3029  00FB77  20                 	db	32
  3030  00FB78  25                 	db	37
  3031  00FB79  33                 	db	51	;'3'
  3032  00FB7A  2E                 	db	46
  3033  00FB7B  34                 	db	52	;'4'
  3034  00FB7C  66                 	db	102	;'f'
  3035  00FB7D  20                 	db	32
  3036  00FB7E  20                 	db	32
  3037  00FB7F  20                 	db	32
  3038  00FB80  20                 	db	32
  3039  00FB81  20                 	db	32
  3040  00FB82  20                 	db	32
  3041  00FB83  20                 	db	32
  3042  00FB84  20                 	db	32
  3043  00FB85  20                 	db	32
  3044  00FB86  00                 	db	0
  3045  00FB87                     STR_52:
  3046                           
  3047                           ; BSR set to: 57
  3048  00FB87  52                 	db	82	;'R'
  3049  00FB88  32                 	db	50	;'2'
  3050  00FB89  20                 	db	32
  3051  00FB8A  25                 	db	37
  3052  00FB8B  32                 	db	50	;'2'
  3053  00FB8C  2E                 	db	46
  3054  00FB8D  33                 	db	51	;'3'
  3055  00FB8E  66                 	db	102	;'f'
  3056  00FB8F  20                 	db	32
  3057  00FB90  25                 	db	37
  3058  00FB91  33                 	db	51	;'3'
  3059  00FB92  2E                 	db	46
  3060  00FB93  34                 	db	52	;'4'
  3061  00FB94  66                 	db	102	;'f'
  3062  00FB95  20                 	db	32
  3063  00FB96  20                 	db	32
  3064  00FB97  20                 	db	32
  3065  00FB98  20                 	db	32
  3066  00FB99  20                 	db	32
  3067  00FB9A  20                 	db	32
  3068  00FB9B  20                 	db	32
  3069  00FB9C  20                 	db	32
  3070  00FB9D  20                 	db	32
  3071  00FB9E  00                 	db	0
  3072  00FB9F                     STR_48:
  3073                           
  3074                           ; BSR set to: 57
  3075  00FB9F  42                 	db	66	;'B'
  3076  00FBA0  41                 	db	65	;'A'
  3077  00FBA1  48                 	db	72	;'H'
  3078  00FBA2  20                 	db	32
  3079  00FBA3  25                 	db	37
  3080  00FBA4  33                 	db	51	;'3'
  3081  00FBA5  2E                 	db	46
  3082  00FBA6  32                 	db	50	;'2'
  3083  00FBA7  66                 	db	102	;'f'
  3084  00FBA8  20                 	db	32
  3085  00FBA9  50                 	db	80	;'P'
  3086  00FBAA  25                 	db	37
  3087  00FBAB  33                 	db	51	;'3'
  3088  00FBAC  2E                 	db	46
  3089  00FBAD  32                 	db	50	;'2'
  3090  00FBAE  66                 	db	102	;'f'
  3091  00FBAF  20                 	db	32
  3092  00FBB0  20                 	db	32
  3093  00FBB1  20                 	db	32
  3094  00FBB2  20                 	db	32
  3095  00FBB3  20                 	db	32
  3096  00FBB4  20                 	db	32
  3097  00FBB5  20                 	db	32
  3098  00FBB6  00                 	db	0
  3099  00FBB7                     STR_20:
  3100                           
  3101                           ; BSR set to: 57
  3102  00FBB7  20                 	db	32
  3103  00FBB8  20                 	db	32
  3104  00FBB9  20                 	db	32
  3105  00FBBA  20                 	db	32
  3106  00FBBB  20                 	db	32
  3107  00FBBC  20                 	db	32
  3108  00FBBD  20                 	db	32
  3109  00FBBE  20                 	db	32
  3110  00FBBF  20                 	db	32
  3111  00FBC0  20                 	db	32
  3112  00FBC1  20                 	db	32
  3113  00FBC2  20                 	db	32
  3114  00FBC3  20                 	db	32
  3115  00FBC4  20                 	db	32
  3116  00FBC5  20                 	db	32
  3117  00FBC6  20                 	db	32
  3118  00FBC7  20                 	db	32
  3119  00FBC8  20                 	db	32
  3120  00FBC9  20                 	db	32
  3121  00FBCA  20                 	db	32
  3122  00FBCB  20                 	db	32
  3123  00FBCC  20                 	db	32
  3124  00FBCD  00                 	db	0
  3125  00FBCE                     STR_25:
  3126                           
  3127                           ; BSR set to: 57
  3128  00FBCE  45                 	db	69	;'E'
  3129  00FBCF  53                 	db	83	;'S'
  3130  00FBD0  52                 	db	82	;'R'
  3131  00FBD1  20                 	db	32
  3132  00FBD2  20                 	db	32
  3133  00FBD3  25                 	db	37
  3134  00FBD4  32                 	db	50	;'2'
  3135  00FBD5  2E                 	db	46
  3136  00FBD6  36                 	db	54	;'6'
  3137  00FBD7  66                 	db	102	;'f'
  3138  00FBD8  20                 	db	32
  3139  00FBD9  20                 	db	32
  3140  00FBDA  20                 	db	32
  3141  00FBDB  20                 	db	32
  3142  00FBDC  20                 	db	32
  3143  00FBDD  20                 	db	32
  3144  00FBDE  20                 	db	32
  3145  00FBDF  20                 	db	32
  3146  00FBE0  20                 	db	32
  3147  00FBE1  20                 	db	32
  3148  00FBE2  20                 	db	32
  3149  00FBE3  20                 	db	32
  3150  00FBE4  00                 	db	0
  3151  00FBE5                     STR_18:
  3152                           
  3153                           ; BSR set to: 57
  3154  00FBE5  53                 	db	83	;'S'
  3155  00FBE6  74                 	db	116	;'t'
  3156  00FBE7  61                 	db	97	;'a'
  3157  00FBE8  74                 	db	116	;'t'
  3158  00FBE9  69                 	db	105	;'i'
  3159  00FBEA  63                 	db	99	;'c'
  3160  00FBEB  20                 	db	32
  3161  00FBEC  53                 	db	83	;'S'
  3162  00FBED  4F                 	db	79	;'O'
  3163  00FBEE  43                 	db	67	;'C'
  3164  00FBEF  20                 	db	32
  3165  00FBF0  25                 	db	37
  3166  00FBF1  64                 	db	100	;'d'
  3167  00FBF2  20                 	db	32
  3168  00FBF3  20                 	db	32
  3169  00FBF4  20                 	db	32
  3170  00FBF5  20                 	db	32
  3171  00FBF6  20                 	db	32
  3172  00FBF7  20                 	db	32
  3173  00FBF8  20                 	db	32
  3174  00FBF9  20                 	db	32
  3175  00FBFA  20                 	db	32
  3176  00FBFB  00                 	db	0
  3177  00FBFC                     STR_44:
  3178                           
  3179                           ; BSR set to: 57
  3180  00FBFC  42                 	db	66	;'B'
  3181  00FBFD  41                 	db	65	;'A'
  3182  00FBFE  54                 	db	84	;'T'
  3183  00FBFF  20                 	db	32
  3184  00FC00  49                 	db	73	;'I'
  3185  00FC01  57                 	db	87	;'W'
  3186  00FC02  48                 	db	72	;'H'
  3187  00FC03  20                 	db	32
  3188  00FC04  25                 	db	37
  3189  00FC05  34                 	db	52	;'4'
  3190  00FC06  2E                 	db	46
  3191  00FC07  31                 	db	49	;'1'
  3192  00FC08  66                 	db	102	;'f'
  3193  00FC09  20                 	db	32
  3194  00FC0A  20                 	db	32
  3195  00FC0B  20                 	db	32
  3196  00FC0C  20                 	db	32
  3197  00FC0D  20                 	db	32
  3198  00FC0E  20                 	db	32
  3199  00FC0F  20                 	db	32
  3200  00FC10  20                 	db	32
  3201  00FC11  20                 	db	32
  3202  00FC12  00                 	db	0
  3203  00FC13                     STR_45:
  3204                           
  3205                           ; BSR set to: 57
  3206  00FC13  42                 	db	66	;'B'
  3207  00FC14  41                 	db	65	;'A'
  3208  00FC15  54                 	db	84	;'T'
  3209  00FC16  20                 	db	32
  3210  00FC17  4F                 	db	79	;'O'
  3211  00FC18  57                 	db	87	;'W'
  3212  00FC19  48                 	db	72	;'H'
  3213  00FC1A  20                 	db	32
  3214  00FC1B  25                 	db	37
  3215  00FC1C  34                 	db	52	;'4'
  3216  00FC1D  2E                 	db	46
  3217  00FC1E  31                 	db	49	;'1'
  3218  00FC1F  66                 	db	102	;'f'
  3219  00FC20  20                 	db	32
  3220  00FC21  20                 	db	32
  3221  00FC22  20                 	db	32
  3222  00FC23  20                 	db	32
  3223  00FC24  20                 	db	32
  3224  00FC25  20                 	db	32
  3225  00FC26  20                 	db	32
  3226  00FC27  20                 	db	32
  3227  00FC28  20                 	db	32
  3228  00FC29  00                 	db	0
  3229  00FC2A                     STR_46:
  3230                           
  3231                           ; BSR set to: 57
  3232  00FC2A  42                 	db	66	;'B'
  3233  00FC2B  41                 	db	65	;'A'
  3234  00FC2C  54                 	db	84	;'T'
  3235  00FC2D  20                 	db	32
  3236  00FC2E  54                 	db	84	;'T'
  3237  00FC2F  57                 	db	87	;'W'
  3238  00FC30  48                 	db	72	;'H'
  3239  00FC31  20                 	db	32
  3240  00FC32  25                 	db	37
  3241  00FC33  34                 	db	52	;'4'
  3242  00FC34  2E                 	db	46
  3243  00FC35  31                 	db	49	;'1'
  3244  00FC36  66                 	db	102	;'f'
  3245  00FC37  20                 	db	32
  3246  00FC38  20                 	db	32
  3247  00FC39  20                 	db	32
  3248  00FC3A  20                 	db	32
  3249  00FC3B  20                 	db	32
  3250  00FC3C  20                 	db	32
  3251  00FC3D  20                 	db	32
  3252  00FC3E  20                 	db	32
  3253  00FC3F  20                 	db	32
  3254  00FC40  00                 	db	0
  3255  00FC41                     STR_40:
  3256                           
  3257                           ; BSR set to: 57
  3258  00FC41  49                 	db	73	;'I'
  3259  00FC42  4E                 	db	78	;'N'
  3260  00FC43  56                 	db	86	;'V'
  3261  00FC44  20                 	db	32
  3262  00FC45  20                 	db	32
  3263  00FC46  57                 	db	87	;'W'
  3264  00FC47  48                 	db	72	;'H'
  3265  00FC48  20                 	db	32
  3266  00FC49  25                 	db	37
  3267  00FC4A  33                 	db	51	;'3'
  3268  00FC4B  2E                 	db	46
  3269  00FC4C  32                 	db	50	;'2'
  3270  00FC4D  66                 	db	102	;'f'
  3271  00FC4E  20                 	db	32
  3272  00FC4F  20                 	db	32
  3273  00FC50  20                 	db	32
  3274  00FC51  20                 	db	32
  3275  00FC52  20                 	db	32
  3276  00FC53  20                 	db	32
  3277  00FC54  20                 	db	32
  3278  00FC55  20                 	db	32
  3279  00FC56  20                 	db	32
  3280  00FC57  00                 	db	0
  3281  00FC58                     STR_39:
  3282                           
  3283                           ; BSR set to: 57
  3284  00FC58  4C                 	db	76	;'L'
  3285  00FC59  4F                 	db	79	;'O'
  3286  00FC5A  41                 	db	65	;'A'
  3287  00FC5B  44                 	db	68	;'D'
  3288  00FC5C  20                 	db	32
  3289  00FC5D  57                 	db	87	;'W'
  3290  00FC5E  48                 	db	72	;'H'
  3291  00FC5F  20                 	db	32
  3292  00FC60  25                 	db	37
  3293  00FC61  33                 	db	51	;'3'
  3294  00FC62  2E                 	db	46
  3295  00FC63  32                 	db	50	;'2'
  3296  00FC64  66                 	db	102	;'f'
  3297  00FC65  20                 	db	32
  3298  00FC66  20                 	db	32
  3299  00FC67  20                 	db	32
  3300  00FC68  20                 	db	32
  3301  00FC69  20                 	db	32
  3302  00FC6A  20                 	db	32
  3303  00FC6B  20                 	db	32
  3304  00FC6C  20                 	db	32
  3305  00FC6D  20                 	db	32
  3306  00FC6E  00                 	db	0
  3307  00FC6F                     STR_38:
  3308                           
  3309                           ; BSR set to: 57
  3310  00FC6F  50                 	db	80	;'P'
  3311  00FC70  56                 	db	86	;'V'
  3312  00FC71  20                 	db	32
  3313  00FC72  25                 	db	37
  3314  00FC73  63                 	db	99	;'c'
  3315  00FC74  20                 	db	32
  3316  00FC75  57                 	db	87	;'W'
  3317  00FC76  48                 	db	72	;'H'
  3318  00FC77  20                 	db	32
  3319  00FC78  25                 	db	37
  3320  00FC79  33                 	db	51	;'3'
  3321  00FC7A  2E                 	db	46
  3322  00FC7B  32                 	db	50	;'2'
  3323  00FC7C  66                 	db	102	;'f'
  3324  00FC7D  20                 	db	32
  3325  00FC7E  20                 	db	32
  3326  00FC7F  20                 	db	32
  3327  00FC80  20                 	db	32
  3328  00FC81  20                 	db	32
  3329  00FC82  20                 	db	32
  3330  00FC83  20                 	db	32
  3331  00FC84  20                 	db	32
  3332  00FC85  00                 	db	0
  3333  00FC86                     STR_37:
  3334                           
  3335                           ; BSR set to: 57
  3336  00FC86  49                 	db	73	;'I'
  3337  00FC87  4E                 	db	78	;'N'
  3338  00FC88  56                 	db	86	;'V'
  3339  00FC89  20                 	db	32
  3340  00FC8A  20                 	db	32
  3341  00FC8B  50                 	db	80	;'P'
  3342  00FC8C  57                 	db	87	;'W'
  3343  00FC8D  52                 	db	82	;'R'
  3344  00FC8E  20                 	db	32
  3345  00FC8F  25                 	db	37
  3346  00FC90  33                 	db	51	;'3'
  3347  00FC91  2E                 	db	46
  3348  00FC92  32                 	db	50	;'2'
  3349  00FC93  66                 	db	102	;'f'
  3350  00FC94  20                 	db	32
  3351  00FC95  20                 	db	32
  3352  00FC96  20                 	db	32
  3353  00FC97  20                 	db	32
  3354  00FC98  20                 	db	32
  3355  00FC99  20                 	db	32
  3356  00FC9A  20                 	db	32
  3357  00FC9B  20                 	db	32
  3358  00FC9C  00                 	db	0
  3359  00FC9D                     STR_36:
  3360                           
  3361                           ; BSR set to: 57
  3362  00FC9D  4C                 	db	76	;'L'
  3363  00FC9E  4F                 	db	79	;'O'
  3364  00FC9F  41                 	db	65	;'A'
  3365  00FCA0  44                 	db	68	;'D'
  3366  00FCA1  20                 	db	32
  3367  00FCA2  50                 	db	80	;'P'
  3368  00FCA3  57                 	db	87	;'W'
  3369  00FCA4  52                 	db	82	;'R'
  3370  00FCA5  20                 	db	32
  3371  00FCA6  25                 	db	37
  3372  00FCA7  33                 	db	51	;'3'
  3373  00FCA8  2E                 	db	46
  3374  00FCA9  32                 	db	50	;'2'
  3375  00FCAA  66                 	db	102	;'f'
  3376  00FCAB  20                 	db	32
  3377  00FCAC  20                 	db	32
  3378  00FCAD  20                 	db	32
  3379  00FCAE  20                 	db	32
  3380  00FCAF  20                 	db	32
  3381  00FCB0  20                 	db	32
  3382  00FCB1  20                 	db	32
  3383  00FCB2  20                 	db	32
  3384  00FCB3  00                 	db	0
  3385  00FCB4                     STR_35:
  3386                           
  3387                           ; BSR set to: 57
  3388  00FCB4  50                 	db	80	;'P'
  3389  00FCB5  56                 	db	86	;'V'
  3390  00FCB6  20                 	db	32
  3391  00FCB7  25                 	db	37
  3392  00FCB8  63                 	db	99	;'c'
  3393  00FCB9  20                 	db	32
  3394  00FCBA  50                 	db	80	;'P'
  3395  00FCBB  57                 	db	87	;'W'
  3396  00FCBC  52                 	db	82	;'R'
  3397  00FCBD  20                 	db	32
  3398  00FCBE  25                 	db	37
  3399  00FCBF  33                 	db	51	;'3'
  3400  00FCC0  2E                 	db	46
  3401  00FCC1  32                 	db	50	;'2'
  3402  00FCC2  66                 	db	102	;'f'
  3403  00FCC3  20                 	db	32
  3404  00FCC4  20                 	db	32
  3405  00FCC5  20                 	db	32
  3406  00FCC6  20                 	db	32
  3407  00FCC7  20                 	db	32
  3408  00FCC8  20                 	db	32
  3409  00FCC9  20                 	db	32
  3410  00FCCA  00                 	db	0
  3411  00FCCB                     STR_19:
  3412                           
  3413                           ; BSR set to: 57
  3414  00FCCB  42                 	db	66	;'B'
  3415  00FCCC  61                 	db	97	;'a'
  3416  00FCCD  74                 	db	116	;'t'
  3417  00FCCE  74                 	db	116	;'t'
  3418  00FCCF  65                 	db	101	;'e'
  3419  00FCD0  72                 	db	114	;'r'
  3420  00FCD1  79                 	db	121	;'y'
  3421  00FCD2  20                 	db	32
  3422  00FCD3  41                 	db	65	;'A'
  3423  00FCD4  68                 	db	104	;'h'
  3424  00FCD5  20                 	db	32
  3425  00FCD6  25                 	db	37
  3426  00FCD7  33                 	db	51	;'3'
  3427  00FCD8  2E                 	db	46
  3428  00FCD9  32                 	db	50	;'2'
  3429  00FCDA  66                 	db	102	;'f'
  3430  00FCDB  20                 	db	32
  3431  00FCDC  20                 	db	32
  3432  00FCDD  20                 	db	32
  3433  00FCDE  20                 	db	32
  3434  00FCDF  20                 	db	32
  3435  00FCE0  20                 	db	32
  3436  00FCE1  00                 	db	0
  3437  00FCE2                     STR_42:
  3438                           
  3439                           ; BSR set to: 57
  3440  00FCE2  42                 	db	66	;'B'
  3441  00FCE3  56                 	db	86	;'V'
  3442  00FCE4  20                 	db	32
  3443  00FCE5  25                 	db	37
  3444  00FCE6  32                 	db	50	;'2'
  3445  00FCE7  2E                 	db	46
  3446  00FCE8  32                 	db	50	;'2'
  3447  00FCE9  66                 	db	102	;'f'
  3448  00FCEA  20                 	db	32
  3449  00FCEB  42                 	db	66	;'B'
  3450  00FCEC  41                 	db	65	;'A'
  3451  00FCED  20                 	db	32
  3452  00FCEE  25                 	db	37
  3453  00FCEF  32                 	db	50	;'2'
  3454  00FCF0  2E                 	db	46
  3455  00FCF1  32                 	db	50	;'2'
  3456  00FCF2  66                 	db	102	;'f'
  3457  00FCF3  20                 	db	32
  3458  00FCF4  20                 	db	32
  3459  00FCF5  20                 	db	32
  3460  00FCF6  20                 	db	32
  3461  00FCF7  20                 	db	32
  3462  00FCF8  00                 	db	0
  3463  00FCF9                     STR_43:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FCF9  43                 	db	67	;'C'
  3467  00FCFA  56                 	db	86	;'V'
  3468  00FCFB  20                 	db	32
  3469  00FCFC  25                 	db	37
  3470  00FCFD  32                 	db	50	;'2'
  3471  00FCFE  2E                 	db	46
  3472  00FCFF  32                 	db	50	;'2'
  3473  00FD00  66                 	db	102	;'f'
  3474  00FD01  20                 	db	32
  3475  00FD02  4C                 	db	76	;'L'
  3476  00FD03  41                 	db	65	;'A'
  3477  00FD04  20                 	db	32
  3478  00FD05  25                 	db	37
  3479  00FD06  32                 	db	50	;'2'
  3480  00FD07  2E                 	db	46
  3481  00FD08  32                 	db	50	;'2'
  3482  00FD09  66                 	db	102	;'f'
  3483  00FD0A  20                 	db	32
  3484  00FD0B  20                 	db	32
  3485  00FD0C  20                 	db	32
  3486  00FD0D  20                 	db	32
  3487  00FD0E  20                 	db	32
  3488  00FD0F  00                 	db	0
  3489  00FD10                     STR_41:
  3490                           
  3491                           ; BSR set to: 57
  3492  00FD10  50                 	db	80	;'P'
  3493  00FD11  56                 	db	86	;'V'
  3494  00FD12  20                 	db	32
  3495  00FD13  25                 	db	37
  3496  00FD14  32                 	db	50	;'2'
  3497  00FD15  2E                 	db	46
  3498  00FD16  32                 	db	50	;'2'
  3499  00FD17  66                 	db	102	;'f'
  3500  00FD18  20                 	db	32
  3501  00FD19  50                 	db	80	;'P'
  3502  00FD1A  41                 	db	65	;'A'
  3503  00FD1B  20                 	db	32
  3504  00FD1C  25                 	db	37
  3505  00FD1D  32                 	db	50	;'2'
  3506  00FD1E  2E                 	db	46
  3507  00FD1F  32                 	db	50	;'2'
  3508  00FD20  66                 	db	102	;'f'
  3509  00FD21  20                 	db	32
  3510  00FD22  20                 	db	32
  3511  00FD23  20                 	db	32
  3512  00FD24  20                 	db	32
  3513  00FD25  20                 	db	32
  3514  00FD26  00                 	db	0
  3515  00FD27                     STR_131:
  3516                           
  3517                           ; BSR set to: 57
  3518  00FD27  53                 	db	83	;'S'
  3519  00FD28  75                 	db	117	;'u'
  3520  00FD29  6E                 	db	110	;'n'
  3521  00FD2A  4D                 	db	77	;'M'
  3522  00FD2B  6F                 	db	111	;'o'
  3523  00FD2C  6E                 	db	110	;'n'
  3524  00FD2D  54                 	db	84	;'T'
  3525  00FD2E  75                 	db	117	;'u'
  3526  00FD2F  65                 	db	101	;'e'
  3527  00FD30  57                 	db	87	;'W'
  3528  00FD31  65                 	db	101	;'e'
  3529  00FD32  64                 	db	100	;'d'
  3530  00FD33  54                 	db	84	;'T'
  3531  00FD34  68                 	db	104	;'h'
  3532  00FD35  75                 	db	117	;'u'
  3533  00FD36  46                 	db	70	;'F'
  3534  00FD37  72                 	db	114	;'r'
  3535  00FD38  69                 	db	105	;'i'
  3536  00FD39  53                 	db	83	;'S'
  3537  00FD3A  61                 	db	97	;'a'
  3538  00FD3B  74                 	db	116	;'t'
  3539  00FD3C  00                 	db	0
  3540  00FD3D                     STR_61:
  3541                           
  3542                           ; BSR set to: 57
  3543  00FD3D  20                 	db	32
  3544  00FD3E  25                 	db	37
  3545  00FD3F  64                 	db	100	;'d'
  3546  00FD40  20                 	db	32
  3547  00FD41  25                 	db	37
  3548  00FD42  64                 	db	100	;'d'
  3549  00FD43  20                 	db	32
  3550  00FD44  20                 	db	32
  3551  00FD45  20                 	db	32
  3552  00FD46  20                 	db	32
  3553  00FD47  20                 	db	32
  3554  00FD48  20                 	db	32
  3555  00FD49  20                 	db	32
  3556  00FD4A  20                 	db	32
  3557  00FD4B  20                 	db	32
  3558  00FD4C  20                 	db	32
  3559  00FD4D  20                 	db	32
  3560  00FD4E  20                 	db	32
  3561  00FD4F  20                 	db	32
  3562  00FD50  20                 	db	32
  3563  00FD51  20                 	db	32
  3564  00FD52  00                 	db	0
  3565  00FD53                     STR_64:
  3566                           
  3567                           ; BSR set to: 57
  3568  00FD53  20                 	db	32
  3569  00FD54  25                 	db	37
  3570  00FD55  6C                 	db	108	;'l'
  3571  00FD56  64                 	db	100	;'d'
  3572  00FD57  20                 	db	32
  3573  00FD58  25                 	db	37
  3574  00FD59  6C                 	db	108	;'l'
  3575  00FD5A  64                 	db	100	;'d'
  3576  00FD5B  20                 	db	32
  3577  00FD5C  20                 	db	32
  3578  00FD5D  20                 	db	32
  3579  00FD5E  20                 	db	32
  3580  00FD5F  20                 	db	32
  3581  00FD60  20                 	db	32
  3582  00FD61  20                 	db	32
  3583  00FD62  20                 	db	32
  3584  00FD63  20                 	db	32
  3585  00FD64  20                 	db	32
  3586  00FD65  20                 	db	32
  3587  00FD66  20                 	db	32
  3588  00FD67  20                 	db	32
  3589  00FD68  00                 	db	0
  3590  00FD69                     STR_16:
  3591                           
  3592                           ; BSR set to: 57
  3593  00FD69  42                 	db	66	;'B'
  3594  00FD6A  56                 	db	86	;'V'
  3595  00FD6B  20                 	db	32
  3596  00FD6C  25                 	db	37
  3597  00FD6D  32                 	db	50	;'2'
  3598  00FD6E  2E                 	db	46
  3599  00FD6F  34                 	db	52	;'4'
  3600  00FD70  66                 	db	102	;'f'
  3601  00FD71  20                 	db	32
  3602  00FD72  20                 	db	32
  3603  00FD73  20                 	db	32
  3604  00FD74  20                 	db	32
  3605  00FD75  20                 	db	32
  3606  00FD76  20                 	db	32
  3607  00FD77  20                 	db	32
  3608  00FD78  20                 	db	32
  3609  00FD79  20                 	db	32
  3610  00FD7A  20                 	db	32
  3611  00FD7B  20                 	db	32
  3612  00FD7C  20                 	db	32
  3613  00FD7D  20                 	db	32
  3614  00FD7E  00                 	db	0
  3615  00FD7F                     STR_30:
  3616                           
  3617                           ; BSR set to: 57
  3618  00FD7F  54                 	db	84	;'T'
  3619  00FD80  6F                 	db	111	;'o'
  3620  00FD81  20                 	db	32
  3621  00FD82  45                 	db	69	;'E'
  3622  00FD83  45                 	db	69	;'E'
  3623  00FD84  50                 	db	80	;'P'
  3624  00FD85  52                 	db	82	;'R'
  3625  00FD86  4F                 	db	79	;'O'
  3626  00FD87  4D                 	db	77	;'M'
  3627  00FD88  20                 	db	32
  3628  00FD89  20                 	db	32
  3629  00FD8A  20                 	db	32
  3630  00FD8B  20                 	db	32
  3631  00FD8C  20                 	db	32
  3632  00FD8D  20                 	db	32
  3633  00FD8E  20                 	db	32
  3634  00FD8F  20                 	db	32
  3635  00FD90  20                 	db	32
  3636  00FD91  20                 	db	32
  3637  00FD92  20                 	db	32
  3638  00FD93  20                 	db	32
  3639  00FD94  00                 	db	0
  3640  00FD95                     STR_21:
  3641                           
  3642                           ; BSR set to: 57
  3643  00FD95  42                 	db	66	;'B'
  3644  00FD96  61                 	db	97	;'a'
  3645  00FD97  74                 	db	116	;'t'
  3646  00FD98  74                 	db	116	;'t'
  3647  00FD99  65                 	db	101	;'e'
  3648  00FD9A  72                 	db	114	;'r'
  3649  00FD9B  79                 	db	121	;'y'
  3650  00FD9C  20                 	db	32
  3651  00FD9D  45                 	db	69	;'E'
  3652  00FD9E  53                 	db	83	;'S'
  3653  00FD9F  52                 	db	82	;'R'
  3654  00FDA0  20                 	db	32
  3655  00FDA1  20                 	db	32
  3656  00FDA2  20                 	db	32
  3657  00FDA3  20                 	db	32
  3658  00FDA4  20                 	db	32
  3659  00FDA5  20                 	db	32
  3660  00FDA6  20                 	db	32
  3661  00FDA7  20                 	db	32
  3662  00FDA8  20                 	db	32
  3663  00FDA9  20                 	db	32
  3664  00FDAA  00                 	db	0
  3665  00FDAB                     STR_22:
  3666                           
  3667                           ; BSR set to: 57
  3668  00FDAB  43                 	db	67	;'C'
  3669  00FDAC  61                 	db	97	;'a'
  3670  00FDAD  6C                 	db	108	;'l'
  3671  00FDAE  63                 	db	99	;'c'
  3672  00FDAF  75                 	db	117	;'u'
  3673  00FDB0  6C                 	db	108	;'l'
  3674  00FDB1  61                 	db	97	;'a'
  3675  00FDB2  74                 	db	116	;'t'
  3676  00FDB3  69                 	db	105	;'i'
  3677  00FDB4  6F                 	db	111	;'o'
  3678  00FDB5  6E                 	db	110	;'n'
  3679  00FDB6  20                 	db	32
  3680  00FDB7  20                 	db	32
  3681  00FDB8  20                 	db	32
  3682  00FDB9  20                 	db	32
  3683  00FDBA  20                 	db	32
  3684  00FDBB  20                 	db	32
  3685  00FDBC  20                 	db	32
  3686  00FDBD  20                 	db	32
  3687  00FDBE  20                 	db	32
  3688  00FDBF  20                 	db	32
  3689  00FDC0  00                 	db	0
  3690  00FDC1                     STR_58:
  3691                           
  3692                           ; BSR set to: 57
  3693  00FDC1  43                 	db	67	;'C'
  3694  00FDC2  61                 	db	97	;'a'
  3695  00FDC3  6C                 	db	108	;'l'
  3696  00FDC4  69                 	db	105	;'i'
  3697  00FDC5  62                 	db	98	;'b'
  3698  00FDC6  72                 	db	114	;'r'
  3699  00FDC7  61                 	db	97	;'a'
  3700  00FDC8  74                 	db	116	;'t'
  3701  00FDC9  69                 	db	105	;'i'
  3702  00FDCA  6F                 	db	111	;'o'
  3703  00FDCB  6E                 	db	110	;'n'
  3704  00FDCC  20                 	db	32
  3705  00FDCD  20                 	db	32
  3706  00FDCE  20                 	db	32
  3707  00FDCF  20                 	db	32
  3708  00FDD0  20                 	db	32
  3709  00FDD1  20                 	db	32
  3710  00FDD2  20                 	db	32
  3711  00FDD3  20                 	db	32
  3712  00FDD4  20                 	db	32
  3713  00FDD5  20                 	db	32
  3714  00FDD6  00                 	db	0
  3715  00FDD7                     STR_57:
  3716                           
  3717                           ; BSR set to: 57
  3718  00FDD7  53                 	db	83	;'S'
  3719  00FDD8  65                 	db	101	;'e'
  3720  00FDD9  6E                 	db	110	;'n'
  3721  00FDDA  73                 	db	115	;'s'
  3722  00FDDB  6F                 	db	111	;'o'
  3723  00FDDC  72                 	db	114	;'r'
  3724  00FDDD  20                 	db	32
  3725  00FDDE  5A                 	db	90	;'Z'
  3726  00FDDF  65                 	db	101	;'e'
  3727  00FDE0  72                 	db	114	;'r'
  3728  00FDE1  6F                 	db	111	;'o'
  3729  00FDE2  20                 	db	32
  3730  00FDE3  20                 	db	32
  3731  00FDE4  20                 	db	32
  3732  00FDE5  20                 	db	32
  3733  00FDE6  20                 	db	32
  3734  00FDE7  20                 	db	32
  3735  00FDE8  20                 	db	32
  3736  00FDE9  20                 	db	32
  3737  00FDEA  20                 	db	32
  3738  00FDEB  20                 	db	32
  3739  00FDEC  00                 	db	0
  3740  00FDED                     STR_65:
  3741                           
  3742                           ; BSR set to: 57
  3743  00FDED  5A                 	db	90	;'Z'
  3744  00FDEE  65                 	db	101	;'e'
  3745  00FDEF  72                 	db	114	;'r'
  3746  00FDF0  6F                 	db	111	;'o'
  3747  00FDF1  20                 	db	32
  3748  00FDF2  43                 	db	67	;'C'
  3749  00FDF3  61                 	db	97	;'a'
  3750  00FDF4  6C                 	db	108	;'l'
  3751  00FDF5  20                 	db	32
  3752  00FDF6  53                 	db	83	;'S'
  3753  00FDF7  65                 	db	101	;'e'
  3754  00FDF8  74                 	db	116	;'t'
  3755  00FDF9  20                 	db	32
  3756  00FDFA  20                 	db	32
  3757  00FDFB  20                 	db	32
  3758  00FDFC  20                 	db	32
  3759  00FDFD  20                 	db	32
  3760  00FDFE  20                 	db	32
  3761  00FDFF  20                 	db	32
  3762  00FE00  20                 	db	32
  3763  00FE01  20                 	db	32
  3764  00FE02  00                 	db	0
  3765  00FE03                     STR_56:
  3766                           
  3767                           ; BSR set to: 57
  3768  00FE03  42                 	db	66	;'B'
  3769  00FE04  61                 	db	97	;'a'
  3770  00FE05  74                 	db	116	;'t'
  3771  00FE06  74                 	db	116	;'t'
  3772  00FE07  65                 	db	101	;'e'
  3773  00FE08  72                 	db	114	;'r'
  3774  00FE09  79                 	db	121	;'y'
  3775  00FE0A  20                 	db	32
  3776  00FE0B  61                 	db	97	;'a'
  3777  00FE0C  6E                 	db	110	;'n'
  3778  00FE0D  64                 	db	100	;'d'
  3779  00FE0E  20                 	db	32
  3780  00FE0F  50                 	db	80	;'P'
  3781  00FE10  56                 	db	86	;'V'
  3782  00FE11  20                 	db	32
  3783  00FE12  20                 	db	32
  3784  00FE13  20                 	db	32
  3785  00FE14  20                 	db	32
  3786  00FE15  20                 	db	32
  3787  00FE16  20                 	db	32
  3788  00FE17  20                 	db	32
  3789  00FE18  00                 	db	0
  3790  00FE19                     STR_24:
  3791                           
  3792                           ; BSR set to: 57
  3793  00FE19  43                 	db	67	;'C'
  3794  00FE1A  68                 	db	104	;'h'
  3795  00FE1B  65                 	db	101	;'e'
  3796  00FE1C  63                 	db	99	;'c'
  3797  00FE1D  6B                 	db	107	;'k'
  3798  00FE1E  69                 	db	105	;'i'
  3799  00FE1F  6E                 	db	110	;'n'
  3800  00FE20  67                 	db	103	;'g'
  3801  00FE21  20                 	db	32
  3802  00FE22  25                 	db	37
  3803  00FE23  63                 	db	99	;'c'
  3804  00FE24  20                 	db	32
  3805  00FE25  25                 	db	37
  3806  00FE26  63                 	db	99	;'c'
  3807  00FE27  20                 	db	32
  3808  00FE28  20                 	db	32
  3809  00FE29  20                 	db	32
  3810  00FE2A  20                 	db	32
  3811  00FE2B  20                 	db	32
  3812  00FE2C  20                 	db	32
  3813  00FE2D  20                 	db	32
  3814  00FE2E  00                 	db	0
  3815  00FE2F                     STR_31:
  3816                           
  3817                           ; BSR set to: 57
  3818  00FE2F  20                 	db	32
  3819  00FE30  54                 	db	84	;'T'
  3820  00FE31  69                 	db	105	;'i'
  3821  00FE32  6D                 	db	109	;'m'
  3822  00FE33  65                 	db	101	;'e'
  3823  00FE34  20                 	db	32
  3824  00FE35  25                 	db	37
  3825  00FE36  6C                 	db	108	;'l'
  3826  00FE37  75                 	db	117	;'u'
  3827  00FE38  2C                 	db	44
  3828  00FE39  20                 	db	32
  3829  00FE3A  25                 	db	37
  3830  00FE3B  6C                 	db	108	;'l'
  3831  00FE3C  75                 	db	117	;'u'
  3832  00FE3D  20                 	db	32
  3833  00FE3E  20                 	db	32
  3834  00FE3F  20                 	db	32
  3835  00FE40  20                 	db	32
  3836  00FE41  20                 	db	32
  3837  00FE42  20                 	db	32
  3838  00FE43  20                 	db	32
  3839  00FE44  00                 	db	0
  3840  00FE45                     STR_60:
  3841                           
  3842                           ; BSR set to: 57
  3843  00FE45  53                 	db	83	;'S'
  3844  00FE46  65                 	db	101	;'e'
  3845  00FE47  6E                 	db	110	;'n'
  3846  00FE48  73                 	db	115	;'s'
  3847  00FE49  6F                 	db	111	;'o'
  3848  00FE4A  72                 	db	114	;'r'
  3849  00FE4B  20                 	db	32
  3850  00FE4C  52                 	db	82	;'R'
  3851  00FE4D  65                 	db	101	;'e'
  3852  00FE4E  61                 	db	97	;'a'
  3853  00FE4F  64                 	db	100	;'d'
  3854  00FE50  69                 	db	105	;'i'
  3855  00FE51  6E                 	db	110	;'n'
  3856  00FE52  67                 	db	103	;'g'
  3857  00FE53  73                 	db	115	;'s'
  3858  00FE54  20                 	db	32
  3859  00FE55  20                 	db	32
  3860  00FE56  20                 	db	32
  3861  00FE57  20                 	db	32
  3862  00FE58  20                 	db	32
  3863  00FE59  20                 	db	32
  3864  00FE5A  00                 	db	0
  3865  00FE5B                     STR_23:
  3866                           
  3867                           ; BSR set to: 57
  3868  00FE5B  43                 	db	67	;'C'
  3869  00FE5C  68                 	db	104	;'h'
  3870  00FE5D  65                 	db	101	;'e'
  3871  00FE5E  63                 	db	99	;'c'
  3872  00FE5F  6B                 	db	107	;'k'
  3873  00FE60  20                 	db	32
  3874  00FE61  33                 	db	51	;'3'
  3875  00FE62  30                 	db	48	;'0'
  3876  00FE63  20                 	db	32
  3877  00FE64  73                 	db	115	;'s'
  3878  00FE65  65                 	db	101	;'e'
  3879  00FE66  63                 	db	99	;'c'
  3880  00FE67  6F                 	db	111	;'o'
  3881  00FE68  6E                 	db	110	;'n'
  3882  00FE69  64                 	db	100	;'d'
  3883  00FE6A  73                 	db	115	;'s'
  3884  00FE6B  20                 	db	32
  3885  00FE6C  20                 	db	32
  3886  00FE6D  20                 	db	32
  3887  00FE6E  20                 	db	32
  3888  00FE6F  20                 	db	32
  3889  00FE70  00                 	db	0
  3890  00FE71                     STR_68:
  3891                           
  3892                           ; BSR set to: 57
  3893  00FE71  5A                 	db	90	;'Z'
  3894  00FE72  65                 	db	101	;'e'
  3895  00FE73  72                 	db	114	;'r'
  3896  00FE74  6F                 	db	111	;'o'
  3897  00FE75  20                 	db	32
  3898  00FE76  4F                 	db	79	;'O'
  3899  00FE77  75                 	db	117	;'u'
  3900  00FE78  74                 	db	116	;'t'
  3901  00FE79  20                 	db	32
  3902  00FE7A  4F                 	db	79	;'O'
  3903  00FE7B  66                 	db	102	;'f'
  3904  00FE7C  20                 	db	32
  3905  00FE7D  52                 	db	82	;'R'
  3906  00FE7E  61                 	db	97	;'a'
  3907  00FE7F  6E                 	db	110	;'n'
  3908  00FE80  67                 	db	103	;'g'
  3909  00FE81  65                 	db	101	;'e'
  3910  00FE82  20                 	db	32
  3911  00FE83  20                 	db	32
  3912  00FE84  20                 	db	32
  3913  00FE85  20                 	db	32
  3914  00FE86  00                 	db	0
  3915  00FE87                     STR_53:
  3916                           
  3917                           ; BSR set to: 57
  3918  00FE87  25                 	db	37
  3919  00FE88  64                 	db	100	;'d'
  3920  00FE89  20                 	db	32
  3921  00FE8A  25                 	db	37
  3922  00FE8B  32                 	db	50	;'2'
  3923  00FE8C  2E                 	db	46
  3924  00FE8D  34                 	db	52	;'4'
  3925  00FE8E  66                 	db	102	;'f'
  3926  00FE8F  2C                 	db	44
  3927  00FE90  20                 	db	32
  3928  00FE91  25                 	db	37
  3929  00FE92  64                 	db	100	;'d'
  3930  00FE93  20                 	db	32
  3931  00FE94  20                 	db	32
  3932  00FE95  54                 	db	84	;'T'
  3933  00FE96  52                 	db	82	;'R'
  3934  00FE97  49                 	db	73	;'I'
  3935  00FE98  4D                 	db	77	;'M'
  3936  00FE99  20                 	db	32
  3937  00FE9A  20                 	db	32
  3938  00FE9B  20                 	db	32
  3939  00FE9C  00                 	db	0
  3940  00FE9D                     STR_62:
  3941                           
  3942                           ; BSR set to: 57
  3943  00FE9D  53                 	db	83	;'S'
  3944  00FE9E  74                 	db	116	;'t'
  3945  00FE9F  61                 	db	97	;'a'
  3946  00FEA0  62                 	db	98	;'b'
  3947  00FEA1  69                 	db	105	;'i'
  3948  00FEA2  6C                 	db	108	;'l'
  3949  00FEA3  69                 	db	105	;'i'
  3950  00FEA4  74                 	db	116	;'t'
  3951  00FEA5  79                 	db	121	;'y'
  3952  00FEA6  20                 	db	32
  3953  00FEA7  63                 	db	99	;'c'
  3954  00FEA8  6C                 	db	108	;'l'
  3955  00FEA9  6F                 	db	111	;'o'
  3956  00FEAA  63                 	db	99	;'c'
  3957  00FEAB  6B                 	db	107	;'k'
  3958  00FEAC  20                 	db	32
  3959  00FEAD  25                 	db	37
  3960  00FEAE  64                 	db	100	;'d'
  3961  00FEAF  20                 	db	32
  3962  00FEB0  20                 	db	32
  3963  00FEB1  20                 	db	32
  3964  00FEB2  00                 	db	0
  3965  00FEB3                     STR_29:
  3966                           
  3967                           ; BSR set to: 57
  3968  00FEB3  48                 	db	72	;'H'
  3969  00FEB4  69                 	db	105	;'i'
  3970  00FEB5  73                 	db	115	;'s'
  3971  00FEB6  74                 	db	116	;'t'
  3972  00FEB7  6F                 	db	111	;'o'
  3973  00FEB8  72                 	db	114	;'r'
  3974  00FEB9  79                 	db	121	;'y'
  3975  00FEBA  20                 	db	32
  3976  00FEBB  44                 	db	68	;'D'
  3977  00FEBC  61                 	db	97	;'a'
  3978  00FEBD  74                 	db	116	;'t'
  3979  00FEBE  61                 	db	97	;'a'
  3980  00FEBF  20                 	db	32
  3981  00FEC0  20                 	db	32
  3982  00FEC1  53                 	db	83	;'S'
  3983  00FEC2  61                 	db	97	;'a'
  3984  00FEC3  76                 	db	118	;'v'
  3985  00FEC4  65                 	db	101	;'e'
  3986  00FEC5  64                 	db	100	;'d'
  3987  00FEC6  20                 	db	32
  3988  00FEC7  20                 	db	32
  3989  00FEC8  00                 	db	0
  3990  00FEC9                     
  3991                           ; BSR set to: 57
  3992  00FEC9  48                 	db	72	;'H'
  3993  00FECA  45                 	db	69	;'E'
  3994  00FECB  4C                 	db	76	;'L'
  3995  00FECC  50                 	db	80	;'P'
  3996  00FECD  20                 	db	32
  3997  00FECE  25                 	db	37
  3998  00FECF  73                 	db	115	;'s'
  3999  00FED0  20                 	db	32
  4000  00FED1  20                 	db	32
  4001  00FED2  20                 	db	32
  4002  00FED3  20                 	db	32
  4003  00FED4  20                 	db	32
  4004  00FED5  20                 	db	32
  4005  00FED6  20                 	db	32
  4006  00FED7  20                 	db	32
  4007  00FED8  20                 	db	32
  4008  00FED9  20                 	db	32
  4009  00FEDA  20                 	db	32
  4010  00FEDB  20                 	db	32
  4011  00FEDC  20                 	db	32
  4012  00FEDD  00                 	db	0
  4013  00FEDE                     
  4014                           ; BSR set to: 57
  4015  00FEDE  44                 	db	68	;'D'
  4016  00FEDF  49                 	db	73	;'I'
  4017  00FEE0  53                 	db	83	;'S'
  4018  00FEE1  50                 	db	80	;'P'
  4019  00FEE2  4C                 	db	76	;'L'
  4020  00FEE3  41                 	db	65	;'A'
  4021  00FEE4  59                 	db	89	;'Y'
  4022  00FEE5  20                 	db	32
  4023  00FEE6  25                 	db	37
  4024  00FEE7  73                 	db	115	;'s'
  4025  00FEE8  20                 	db	32
  4026  00FEE9  20                 	db	32
  4027  00FEEA  20                 	db	32
  4028  00FEEB  20                 	db	32
  4029  00FEEC  20                 	db	32
  4030  00FEED  20                 	db	32
  4031  00FEEE  20                 	db	32
  4032  00FEEF  20                 	db	32
  4033  00FEF0  20                 	db	32
  4034  00FEF1  20                 	db	32
  4035  00FEF2  00                 	db	0
  4036  00FEF3                     STR_4:
  4037                           
  4038                           ; BSR set to: 57
  4039  00FEF3  20                 	db	32
  4040  00FEF4  4E                 	db	78	;'N'
  4041  00FEF5  53                 	db	83	;'S'
  4042  00FEF6  41                 	db	65	;'A'
  4043  00FEF7  53                 	db	83	;'S'
  4044  00FEF8  50                 	db	80	;'P'
  4045  00FEF9  4F                 	db	79	;'O'
  4046  00FEFA  4F                 	db	79	;'O'
  4047  00FEFB  4B                 	db	75	;'K'
  4048  00FEFC  20                 	db	32
  4049  00FEFD  20                 	db	32
  4050  00FEFE  20                 	db	32
  4051  00FEFF  20                 	db	32
  4052  00FF00  20                 	db	32
  4053  00FF01  20                 	db	32
  4054  00FF02  20                 	db	32
  4055  00FF03  20                 	db	32
  4056  00FF04  20                 	db	32
  4057  00FF05  20                 	db	32
  4058  00FF06  20                 	db	32
  4059  00FF07  00                 	db	0
  4060  00FF08                     STR_2:
  4061                           
  4062                           ; BSR set to: 57
  4063  00FF08  20                 	db	32
  4064  00FF09  56                 	db	86	;'V'
  4065  00FF0A  65                 	db	101	;'e'
  4066  00FF0B  72                 	db	114	;'r'
  4067  00FF0C  73                 	db	115	;'s'
  4068  00FF0D  69                 	db	105	;'i'
  4069  00FF0E  6F                 	db	111	;'o'
  4070  00FF0F  6E                 	db	110	;'n'
  4071  00FF10  20                 	db	32
  4072  00FF11  25                 	db	37
  4073  00FF12  73                 	db	115	;'s'
  4074  00FF13  20                 	db	32
  4075  00FF14  20                 	db	32
  4076  00FF15  20                 	db	32
  4077  00FF16  20                 	db	32
  4078  00FF17  20                 	db	32
  4079  00FF18  20                 	db	32
  4080  00FF19  20                 	db	32
  4081  00FF1A  20                 	db	32
  4082  00FF1B  20                 	db	32
  4083  00FF1C  00                 	db	0
  4084  00FF1D                     STR_1:
  4085                           
  4086                           ; BSR set to: 57
  4087  00FF1D  20                 	db	32
  4088  00FF1E  4D                 	db	77	;'M'
  4089  00FF1F  42                 	db	66	;'B'
  4090  00FF20  4D                 	db	77	;'M'
  4091  00FF21  43                 	db	67	;'C'
  4092  00FF22  20                 	db	32
  4093  00FF23  53                 	db	83	;'S'
  4094  00FF24  4F                 	db	79	;'O'
  4095  00FF25  4C                 	db	76	;'L'
  4096  00FF26  41                 	db	65	;'A'
  4097  00FF27  52                 	db	82	;'R'
  4098  00FF28  4D                 	db	77	;'M'
  4099  00FF29  4F                 	db	79	;'O'
  4100  00FF2A  4E                 	db	78	;'N'
  4101  00FF2B  20                 	db	32
  4102  00FF2C  20                 	db	32
  4103  00FF2D  20                 	db	32
  4104  00FF2E  20                 	db	32
  4105  00FF2F  20                 	db	32
  4106  00FF30  20                 	db	32
  4107  00FF31  00                 	db	0
  4108  00FF32                     STR_14:
  4109                           
  4110                           ; BSR set to: 57
  4111  00FF32  52                 	db	82	;'R'
  4112  00FF33  65                 	db	101	;'e'
  4113  00FF34  61                 	db	97	;'a'
  4114  00FF35  64                 	db	100	;'d'
  4115  00FF36  20                 	db	32
  4116  00FF37  45                 	db	69	;'E'
  4117  00FF38  45                 	db	69	;'E'
  4118  00FF39  50                 	db	80	;'P'
  4119  00FF3A  52                 	db	82	;'R'
  4120  00FF3B  4F                 	db	79	;'O'
  4121  00FF3C  4D                 	db	77	;'M'
  4122  00FF3D  20                 	db	32
  4123  00FF3E  44                 	db	68	;'D'
  4124  00FF3F  41                 	db	65	;'A'
  4125  00FF40  54                 	db	84	;'T'
  4126  00FF41  41                 	db	65	;'A'
  4127  00FF42  20                 	db	32
  4128  00FF43  20                 	db	32
  4129  00FF44  20                 	db	32
  4130  00FF45  20                 	db	32
  4131  00FF46  00                 	db	0
  4132  00FF47                     STR_59:
  4133                           
  4134                           ; BSR set to: 57
  4135  00FF47  52                 	db	82	;'R'
  4136  00FF48  65                 	db	101	;'e'
  4137  00FF49  6C                 	db	108	;'l'
  4138  00FF4A  65                 	db	101	;'e'
  4139  00FF4B  61                 	db	97	;'a'
  4140  00FF4C  73                 	db	115	;'s'
  4141  00FF4D  65                 	db	101	;'e'
  4142  00FF4E  20                 	db	32
  4143  00FF4F  62                 	db	98	;'b'
  4144  00FF50  75                 	db	117	;'u'
  4145  00FF51  74                 	db	116	;'t'
  4146  00FF52  74                 	db	116	;'t'
  4147  00FF53  6F                 	db	111	;'o'
  4148  00FF54  6E                 	db	110	;'n'
  4149  00FF55  20                 	db	32
  4150  00FF56  25                 	db	37
  4151  00FF57  63                 	db	99	;'c'
  4152  00FF58  20                 	db	32
  4153  00FF59  20                 	db	32
  4154  00FF5A  20                 	db	32
  4155  00FF5B  00                 	db	0
  4156  00FF5C                     STR_15:
  4157                           
  4158                           ; BSR set to: 57
  4159  00FF5C  49                 	db	73	;'I'
  4160  00FF5D  6E                 	db	110	;'n'
  4161  00FF5E  76                 	db	118	;'v'
  4162  00FF5F  61                 	db	97	;'a'
  4163  00FF60  6C                 	db	108	;'l'
  4164  00FF61  69                 	db	105	;'i'
  4165  00FF62  64                 	db	100	;'d'
  4166  00FF63  20                 	db	32
  4167  00FF64  45                 	db	69	;'E'
  4168  00FF65  45                 	db	69	;'E'
  4169  00FF66  50                 	db	80	;'P'
  4170  00FF67  52                 	db	82	;'R'
  4171  00FF68  4F                 	db	79	;'O'
  4172  00FF69  4D                 	db	77	;'M'
  4173  00FF6A  20                 	db	32
  4174  00FF6B  44                 	db	68	;'D'
  4175  00FF6C  41                 	db	65	;'A'
  4176  00FF6D  54                 	db	84	;'T'
  4177  00FF6E  41                 	db	65	;'A'
  4178  00FF6F  20                 	db	32
  4179  00FF70  00                 	db	0
  4180  00FF71                     STR_76:
  4181                           
  4182                           ; BSR set to: 57
  4183  00FF71  48                 	db	72	;'H'
  4184  00FF72  45                 	db	69	;'E'
  4185  00FF73  4C                 	db	76	;'L'
  4186  00FF74  50                 	db	80	;'P'
  4187  00FF75  20                 	db	32
  4188  00FF76  25                 	db	37
  4189  00FF77  73                 	db	115	;'s'
  4190  00FF78  20                 	db	32
  4191  00FF79  20                 	db	32
  4192  00FF7A  20                 	db	32
  4193  00FF7B  20                 	db	32
  4194  00FF7C  20                 	db	32
  4195  00FF7D  20                 	db	32
  4196  00FF7E  20                 	db	32
  4197  00FF7F  20                 	db	32
  4198  00FF80  20                 	db	32
  4199  00FF81  20                 	db	32
  4200  00FF82  20                 	db	32
  4201  00FF83  00                 	db	0
  4202  00FF84                     
  4203                           ; BSR set to: 57
  4204  00FF84  25                 	db	37
  4205  00FF85  64                 	db	100	;'d'
  4206  00FF86  20                 	db	32
  4207  00FF87  25                 	db	37
  4208  00FF88  32                 	db	50	;'2'
  4209  00FF89  2E                 	db	46
  4210  00FF8A  34                 	db	52	;'4'
  4211  00FF8B  66                 	db	102	;'f'
  4212  00FF8C  2C                 	db	44
  4213  00FF8D  20                 	db	32
  4214  00FF8E  25                 	db	37
  4215  00FF8F  64                 	db	100	;'d'
  4216  00FF90  20                 	db	32
  4217  00FF91  20                 	db	32
  4218  00FF92  20                 	db	32
  4219  00FF93  23                 	db	35
  4220  00FF94  20                 	db	32
  4221  00FF95  00                 	db	0
  4222  00FF96                     STR_32:
  4223                           
  4224                           ; BSR set to: 57
  4225  00FF96  25                 	db	37
  4226  00FF97  64                 	db	100	;'d'
  4227  00FF98  20                 	db	32
  4228  00FF99  25                 	db	37
  4229  00FF9A  32                 	db	50	;'2'
  4230  00FF9B  2E                 	db	46
  4231  00FF9C  34                 	db	52	;'4'
  4232  00FF9D  66                 	db	102	;'f'
  4233  00FF9E  20                 	db	32
  4234  00FF9F  20                 	db	32
  4235  00FFA0  20                 	db	32
  4236  00FFA1  25                 	db	37
  4237  00FFA2  64                 	db	100	;'d'
  4238  00FFA3  20                 	db	32
  4239  00FFA4  20                 	db	32
  4240  00FFA5  20                 	db	32
  4241  00FFA6  00                 	db	0
  4242  00FFA7                     STR_80:
  4243                           
  4244                           ; BSR set to: 57
  4245  00FFA7  76                 	db	118	;'v'
  4246  00FFA8  74                 	db	116	;'t'
  4247  00FFA9  65                 	db	101	;'e'
  4248  00FFAA  72                 	db	114	;'r'
  4249  00FFAB  6D                 	db	109	;'m'
  4250  00FFAC  20                 	db	32
  4251  00FFAD  25                 	db	37
  4252  00FFAE  78                 	db	120	;'x'
  4253  00FFAF  3A                 	db	58	;':'
  4254  00FFB0  25                 	db	37
  4255  00FFB1  78                 	db	120	;'x'
  4256  00FFB2  20                 	db	32
  4257  00FFB3  20                 	db	32
  4258  00FFB4  20                 	db	32
  4259  00FFB5  00                 	db	0
  4260  00FFB6                     STR_74:
  4261                           
  4262                           ; BSR set to: 57
  4263  00FFB6  46                 	db	70	;'F'
  4264  00FFB7  65                 	db	101	;'e'
  4265  00FFB8  62                 	db	98	;'b'
  4266  00FFB9  20                 	db	32
  4267  00FFBA  31                 	db	49	;'1'
  4268  00FFBB  39                 	db	57	;'9'
  4269  00FFBC  20                 	db	32
  4270  00FFBD  32                 	db	50	;'2'
  4271  00FFBE  30                 	db	48	;'0'
  4272  00FFBF  32                 	db	50	;'2'
  4273  00FFC0  30                 	db	48	;'0'
  4274  00FFC1  00                 	db	0
  4275  00FFC2                     STR_78:
  4276                           
  4277                           ; BSR set to: 57
  4278  00FFC2  25                 	db	37
  4279  00FFC3  73                 	db	115	;'s'
  4280  00FFC4  20                 	db	32
  4281  00FFC5  20                 	db	32
  4282  00FFC6  20                 	db	32
  4283  00FFC7  20                 	db	32
  4284  00FFC8  20                 	db	32
  4285  00FFC9  20                 	db	32
  4286  00FFCA  20                 	db	32
  4287  00FFCB  00                 	db	0
  4288  00FFCC                     STR_75:
  4289                           
  4290                           ; BSR set to: 57
  4291  00FFCC  31                 	db	49	;'1'
  4292  00FFCD  39                 	db	57	;'9'
  4293  00FFCE  3A                 	db	58	;':'
  4294  00FFCF  30                 	db	48	;'0'
  4295  00FFD0  31                 	db	49	;'1'
  4296  00FFD1  3A                 	db	58	;':'
  4297  00FFD2  34                 	db	52	;'4'
  4298  00FFD3  37                 	db	55	;'7'
  4299  00FFD4  00                 	db	0
  4300  00FFD5                     STR_3:
  4301                           
  4302                           ; BSR set to: 57
  4303  00FFD5  31                 	db	49	;'1'
  4304  00FFD6  2E                 	db	46
  4305  00FFD7  32                 	db	50	;'2'
  4306  00FFD8  37                 	db	55	;'7'
  4307  00FFD9  00                 	db	0
  4308  00FFDA                     STR_95:
  4309                           
  4310                           ; BSR set to: 57
  4311  00FFDA  49                 	db	73	;'I'
  4312  00FFDB  4E                 	db	78	;'N'
  4313  00FFDC  46                 	db	70	;'F'
  4314  00FFDD  00                 	db	0
  4315  00FFDE                     STR_99:
  4316                           
  4317                           ; BSR set to: 57
  4318  00FFDE  4E                 	db	78	;'N'
  4319  00FFDF  41                 	db	65	;'A'
  4320  00FFE0  4E                 	db	78	;'N'
  4321  00FFE1  00                 	db	0
  4322  00FFE2                     STR_96:
  4323                           
  4324                           ; BSR set to: 57
  4325  00FFE2  69                 	db	105	;'i'
  4326  00FFE3  6E                 	db	110	;'n'
  4327  00FFE4  66                 	db	102	;'f'
  4328  00FFE5  00                 	db	0
  4329  00FFE6                     STR_100:
  4330                           
  4331                           ; BSR set to: 57
  4332  00FFE6  6E                 	db	110	;'n'
  4333  00FFE7  61                 	db	97	;'a'
  4334  00FFE8  6E                 	db	110	;'n'
  4335  00FFE9  00                 	db	0
  4336  00FFEA                     STR_126:
  4337                           
  4338                           ; BSR set to: 57
  4339  00FFEA  6C                 	db	108	;'l'
  4340  00FFEB  58                 	db	88	;'X'
  4341  00FFEC  00                 	db	0
  4342  00FFED                     STR_103:
  4343                           
  4344                           ; BSR set to: 57
  4345  00FFED  6C                 	db	108	;'l'
  4346  00FFEE  64                 	db	100	;'d'
  4347  00FFEF  00                 	db	0
  4348  00FFF0                     STR_112:
  4349                           
  4350                           ; BSR set to: 57
  4351  00FFF0  6C                 	db	108	;'l'
  4352  00FFF1  66                 	db	102	;'f'
  4353  00FFF2  00                 	db	0
  4354  00FFF3                     STR_107:
  4355                           
  4356                           ; BSR set to: 57
  4357  00FFF3  6C                 	db	108	;'l'
  4358  00FFF4  69                 	db	105	;'i'
  4359  00FFF5  00                 	db	0
  4360  00FFF6                     STR_117:
  4361                           
  4362                           ; BSR set to: 57
  4363  00FFF6  6C                 	db	108	;'l'
  4364  00FFF7  75                 	db	117	;'u'
  4365  00FFF8  00                 	db	0
  4366  00FFF9                     STR_122:
  4367                           
  4368                           ; BSR set to: 57
  4369  00FFF9  6C                 	db	108	;'l'
  4370  00FFFA  78                 	db	120	;'x'
  4371  00FFFB  00                 	db	0
  4372  00FFFC                     STR_73:
  4373                           
  4374                           ; BSR set to: 57
  4375  00FFFC  25                 	db	37
  4376  00FFFD  73                 	db	115	;'s'
  4377  00FFFE  00                 	db	0
  4378  0000                     
  4379                           ; #config settings
  4380  00FFFF  00                 	db	0	; dummy byte at the end
  4381  0000                     
  4382                           	psect	cinit
  4383  01FBA8                     __pcinit:
  4384                           	opt callstack 0
  4385  01FBA8                     start_initialization:
  4386                           	opt callstack 0
  4387  01FBA8                     __initialization:
  4388                           	opt callstack 0
  4389                           
  4390                           ; Initialize objects allocated to BIGRAM (832 bytes)
  4391                           ; load TBLPTR registers with __pidataBIGRAM
  4392  01FBA8  0EF6               	movlw	low __pidataBIGRAM
  4393  01FBAA  6EF6               	movwf	tblptrl,c
  4394  01FBAC  0EA7               	movlw	high __pidataBIGRAM
  4395  01FBAE  6EF7               	movwf	tblptrh,c
  4396  01FBB0  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4397  01FBB2  6EF8               	movwf	tblptru,c
  4398  01FBB4  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4399  01FBB8  EE20 F340          	lfsr	2,832
  4400  01FBBC                     copy_data0:
  4401  01FBBC  0009               	tblrd		*+
  4402  01FBBE  006F FFD7 FFEE     	movff	tablat,postinc0
  4403  01FBC4  50DD               	movf	postdec2,w,c
  4404  01FBC6  50D9               	movf	fsr2l,w,c
  4405  01FBC8  E1F9               	bnz	copy_data0
  4406  01FBCA  50DA               	movf	fsr2h,w,c
  4407  01FBCC  E1F7               	bnz	copy_data0
  4408                           
  4409                           ; Initialize objects allocated to BANK2 (188 bytes)
  4410                           ; load TBLPTR registers with __pidataBANK2
  4411  01FBCE  0EC8               	movlw	low __pidataBANK2
  4412  01FBD0  6EF6               	movwf	tblptrl,c
  4413  01FBD2  0E05               	movlw	high __pidataBANK2
  4414  01FBD4  6EF7               	movwf	tblptrh,c
  4415  01FBD6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4416  01FBD8  6EF8               	movwf	tblptru,c
  4417  01FBDA  EE00  F200         	lfsr	0,__pdataBANK2
  4418  01FBDE  EE20 F0BC          	lfsr	2,188
  4419  01FBE2                     copy_data1:
  4420  01FBE2  0009               	tblrd		*+
  4421  01FBE4  006F FFD7 FFEE     	movff	tablat,postinc0
  4422  01FBEA  50DD               	movf	postdec2,w,c
  4423  01FBEC  50D9               	movf	fsr2l,w,c
  4424  01FBEE  E1F9               	bnz	copy_data1
  4425                           
  4426                           ; Initialize objects allocated to BANK1 (164 bytes)
  4427                           ; load TBLPTR registers with __pidataBANK1
  4428  01FBF0  0E56               	movlw	low __pidataBANK1
  4429  01FBF2  6EF6               	movwf	tblptrl,c
  4430  01FBF4  0E0B               	movlw	high __pidataBANK1
  4431  01FBF6  6EF7               	movwf	tblptrh,c
  4432  01FBF8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4433  01FBFA  6EF8               	movwf	tblptru,c
  4434  01FBFC  EE00  F100         	lfsr	0,__pdataBANK1
  4435  01FC00  EE20 F0A4          	lfsr	2,164
  4436  01FC04                     copy_data2:
  4437  01FC04  0009               	tblrd		*+
  4438  01FC06  006F FFD7 FFEE     	movff	tablat,postinc0
  4439  01FC0C  50DD               	movf	postdec2,w,c
  4440  01FC0E  50D9               	movf	fsr2l,w,c
  4441  01FC10  E1F9               	bnz	copy_data2
  4442                           
  4443                           ; Clear objects allocated to BIGRAM (642 bytes)
  4444  01FC12  EE02  F23F         	lfsr	0,__pbssBIGRAM
  4445  01FC16  EE20 F282          	lfsr	2,642
  4446  01FC1A                     clear_0:
  4447  01FC1A  6AEE               	clrf	postinc0,c
  4448  01FC1C  50DD               	movf	postdec2,w,c
  4449  01FC1E  50D9               	movf	fsr2l,w,c
  4450  01FC20  E1FC               	bnz	clear_0
  4451  01FC22  50DA               	movf	fsr2h,w,c
  4452  01FC24  E1FA               	bnz	clear_0
  4453                           
  4454                           ; Clear objects allocated to BANK6 (255 bytes)
  4455  01FC26  EE01  F200         	lfsr	0,__pbssBANK6
  4456  01FC2A  EE20 F0FF          	lfsr	2,255
  4457  01FC2E                     clear_1:
  4458  01FC2E  6AEE               	clrf	postinc0,c
  4459  01FC30  50DD               	movf	postdec2,w,c
  4460  01FC32  50D9               	movf	fsr2l,w,c
  4461  01FC34  E1FC               	bnz	clear_1
  4462  01FC36  50DA               	movf	fsr2h,w,c
  4463  01FC38  E1FA               	bnz	clear_1
  4464                           
  4465                           ; Clear objects allocated to BANK5 (134 bytes)
  4466  01FC3A  EE01  F100         	lfsr	0,__pbssBANK5
  4467  01FC3E  0E86               	movlw	134
  4468  01FC40                     clear_2:
  4469  01FC40  6AEE               	clrf	postinc0,c
  4470  01FC42  06E8               	decf	wreg,f,c
  4471  01FC44  E1FD               	bnz	clear_2
  4472                           
  4473                           ; Clear objects allocated to BANK4 (219 bytes)
  4474  01FC46  EE01  F000         	lfsr	0,__pbssBANK4
  4475  01FC4A  0EDB               	movlw	219
  4476  01FC4C                     clear_3:
  4477  01FC4C  6AEE               	clrf	postinc0,c
  4478  01FC4E  06E8               	decf	wreg,f,c
  4479  01FC50  E1FD               	bnz	clear_3
  4480                           
  4481                           ; Clear objects allocated to BANK3 (247 bytes)
  4482  01FC52  EE00  F300         	lfsr	0,__pbssBANK3
  4483  01FC56  0EF7               	movlw	247
  4484  01FC58                     clear_4:
  4485  01FC58  6AEE               	clrf	postinc0,c
  4486  01FC5A  06E8               	decf	wreg,f,c
  4487  01FC5C  E1FD               	bnz	clear_4
  4488                           
  4489                           ; Clear objects allocated to BANK2 (42 bytes)
  4490  01FC5E  EE00  F2BC         	lfsr	0,__pbssBANK2
  4491  01FC62  0E2A               	movlw	42
  4492  01FC64                     clear_5:
  4493  01FC64  6AEE               	clrf	postinc0,c
  4494  01FC66  06E8               	decf	wreg,f,c
  4495  01FC68  E1FD               	bnz	clear_5
  4496                           
  4497                           ; Clear objects allocated to BANK1 (89 bytes)
  4498  01FC6A  EE00  F1A4         	lfsr	0,__pbssBANK1
  4499  01FC6E  0E59               	movlw	89
  4500  01FC70                     clear_6:
  4501  01FC70  6AEE               	clrf	postinc0,c
  4502  01FC72  06E8               	decf	wreg,f,c
  4503  01FC74  E1FD               	bnz	clear_6
  4504                           
  4505                           ; Clear objects allocated to BANK0 (133 bytes)
  4506  01FC76  EE00  F060         	lfsr	0,__pbssBANK0
  4507  01FC7A  0E85               	movlw	133
  4508  01FC7C                     clear_7:
  4509  01FC7C  6AEE               	clrf	postinc0,c
  4510  01FC7E  06E8               	decf	wreg,f,c
  4511  01FC80  E1FD               	bnz	clear_7
  4512                           
  4513                           ; Clear objects allocated to COMRAM (14 bytes)
  4514  01FC82  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4515  01FC86  0E0E               	movlw	14
  4516  01FC88                     clear_8:
  4517  01FC88  6AEE               	clrf	postinc0,c
  4518  01FC8A  06E8               	decf	wreg,f,c
  4519  01FC8C  E1FD               	bnz	clear_8
  4520                           
  4521                           ;
  4522                           ; Setup IVTBASE
  4523                           ;
  4524  01FC8E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4525  01FC90  6ED5               	movwf	213,c
  4526  01FC92  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4527  01FC94  6ED6               	movwf	214,c
  4528  01FC96  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4529  01FC98  6ED7               	movwf	215,c
  4530  01FC9A                     end_of_initialization:
  4531                           	opt callstack 0
  4532  01FC9A                     __end_of__initialization:
  4533                           	opt callstack 0
  4534  01FC9A  0100               	movlb	0
  4535  01FC9C  EF00  F080         	goto	_main	;jump to C main() function
  4536                           
  4537                           	psect	bssCOMRAM
  4538  00004A                     __pbssCOMRAM:
  4539                           	opt callstack 0
  4540  00004A                     _width:
  4541                           	opt callstack 0
  4542  00004A                     	ds	2
  4543  00004C                     _prec:
  4544                           	opt callstack 0
  4545  00004C                     	ds	2
  4546  00004E                     _flags:
  4547                           	opt callstack 0
  4548  00004E                     	ds	2
  4549  000050                     calc_bsoc@log_update_wait:
  4550                           	opt callstack 0
  4551  000050                     	ds	1
  4552  000051                     check_day_time@day_delay:
  4553                           	opt callstack 0
  4554  000051                     	ds	1
  4555  000052                     dac_spi_control@init:
  4556                           	opt callstack 0
  4557  000052                     	ds	1
  4558  000053                     display_history@bwait:
  4559                           	opt callstack 0
  4560  000053                     	ds	1
  4561  000054                     _uart2RxHead:
  4562                           	opt callstack 0
  4563  000054                     	ds	1
  4564  000055                     _uart2TxBufferRemaining:
  4565                           	opt callstack 0
  4566  000055                     	ds	1
  4567  000056                     _uart2TxTail:
  4568                           	opt callstack 0
  4569  000056                     	ds	1
  4570  000057                     _uart1RxHead:
  4571                           	opt callstack 0
  4572  000057                     	ds	1
  4573                           
  4574                           	psect	bssBANK0
  4575  000060                     __pbssBANK0:
  4576                           	opt callstack 0
  4577  000060                     _spi_link:
  4578                           	opt callstack 0
  4579  000060                     	ds	12
  4580  00006C                     ___tzname:
  4581                           	opt callstack 0
  4582  00006C                     	ds	4
  4583  000070                     ___timezone:
  4584                           	opt callstack 0
  4585  000070                     	ds	4
  4586  000074                     floorf@F524:
  4587                           	opt callstack 0
  4588  000074                     	ds	4
  4589  000078                     fabsf@F463:
  4590                           	opt callstack 0
  4591  000078                     	ds	4
  4592  00007C                     ___fpclassifyf@F463:
  4593                           	opt callstack 0
  4594  00007C                     	ds	4
  4595  000080                     calc_ror_data@bcror:
  4596                           	opt callstack 0
  4597  000080                     	ds	4
  4598  000084                     calc_ror_data@bvror:
  4599                           	opt callstack 0
  4600  000084                     	ds	4
  4601  000088                     calc_model_data@bcror:
  4602                           	opt callstack 0
  4603  000088                     	ds	4
  4604  00008C                     calc_model_data@bvror:
  4605                           	opt callstack 0
  4606  00008C                     	ds	4
  4607  000090                     wdtdelay@dcount:
  4608                           	opt callstack 0
  4609  000090                     	ds	4
  4610  000094                     _P:
  4611                           	opt callstack 0
  4612  000094                     	ds	4
  4613  000098                     _TMR3_InterruptHandler:
  4614                           	opt callstack 0
  4615  000098                     	ds	3
  4616  00009B                     _TMR5_InterruptHandler:
  4617                           	opt callstack 0
  4618  00009B                     	ds	3
  4619  00009E                     _TMR6_InterruptHandler:
  4620                           	opt callstack 0
  4621  00009E                     	ds	3
  4622  0000A1                     _ADCC_ADTI_InterruptHandler:
  4623                           	opt callstack 0
  4624  0000A1                     	ds	3
  4625  0000A4                     _ADCC_ADI_InterruptHandler:
  4626                           	opt callstack 0
  4627  0000A4                     	ds	3
  4628  0000A7                     _UART1_RxInterruptHandler:
  4629                           	opt callstack 0
  4630  0000A7                     	ds	3
  4631  0000AA                     _UART2_TxInterruptHandler:
  4632                           	opt callstack 0
  4633  0000AA                     	ds	3
  4634  0000AD                     _UART2_RxInterruptHandler:
  4635                           	opt callstack 0
  4636  0000AD                     	ds	3
  4637  0000B0                     _INT1_InterruptHandler:
  4638                           	opt callstack 0
  4639  0000B0                     	ds	3
  4640  0000B3                     _INT0_InterruptHandler:
  4641                           	opt callstack 0
  4642  0000B3                     	ds	3
  4643  0000B6                     _dst_off:
  4644                           	opt callstack 0
  4645  0000B6                     	ds	2
  4646  0000B8                     ___daylight:
  4647                           	opt callstack 0
  4648  0000B8                     	ds	2
  4649  0000BA                     _nout:
  4650                           	opt callstack 0
  4651  0000BA                     	ds	2
  4652  0000BC                     _t_mbmc:
  4653                           	opt callstack 0
  4654  0000BC                     	ds	2
  4655  0000BE                     TMR3_ISR@CountCallBack:
  4656                           	opt callstack 0
  4657  0000BE                     	ds	2
  4658  0000C0                     _timer3ReloadVal:
  4659                           	opt callstack 0
  4660  0000C0                     	ds	2
  4661  0000C2                     TMR5_ISR@CountCallBack:
  4662                           	opt callstack 0
  4663  0000C2                     	ds	2
  4664  0000C4                     _timer5ReloadVal:
  4665                           	opt callstack 0
  4666  0000C4                     	ds	2
  4667  0000C6                     esr_check@esr_state:
  4668                           	opt callstack 0
  4669  0000C6                     	ds	1
  4670  0000C7                     dac_spi_control@SB:
  4671                           	opt callstack 0
  4672  0000C7                     	ds	1
  4673  0000C8                     dac_spi_control@SC:
  4674                           	opt callstack 0
  4675  0000C8                     	ds	1
  4676  0000C9                     dac_spi_control@S2:
  4677                           	opt callstack 0
  4678  0000C9                     	ds	1
  4679  0000CA                     dac_spi_control@S1:
  4680                           	opt callstack 0
  4681  0000CA                     	ds	1
  4682  0000CB                     dac_spi_control@S0:
  4683                           	opt callstack 0
  4684  0000CB                     	ds	1
  4685  0000CC                     _mode_sw:
  4686                           	opt callstack 0
  4687  0000CC                     	ds	1
  4688  0000CD                     _uart2RxCount:
  4689                           	opt callstack 0
  4690  0000CD                     	ds	1
  4691  0000CE                     _uart2RxTail:
  4692                           	opt callstack 0
  4693  0000CE                     	ds	1
  4694  0000CF                     _uart2TxHead:
  4695                           	opt callstack 0
  4696  0000CF                     	ds	1
  4697  0000D0                     _uart1RxCount:
  4698                           	opt callstack 0
  4699  0000D0                     	ds	1
  4700  0000D1                     _uart1RxTail:
  4701                           	opt callstack 0
  4702  0000D1                     	ds	1
  4703  0000D2                     time@current_time:
  4704                           	opt callstack 0
  4705  0000D2                     	ds	8
  4706  0000DA                     _pclock:
  4707                           	opt callstack 0
  4708  0000DA                     	ds	8
  4709  0000E2                     _crcObj:
  4710                           	opt callstack 0
  4711  0000E2                     	ds	3
  4712                           
  4713                           	psect	bssBANK1
  4714  0001A4                     __pbssBANK1:
  4715                           	opt callstack 0
  4716  0001A4                     _S:
  4717                           	opt callstack 0
  4718  0001A4                     	ds	41
  4719  0001CD                     spinners@s:
  4720                           	opt callstack 0
  4721  0001CD                     	ds	6
  4722  0001D3                     _lock:
  4723                           	opt callstack 0
  4724  0001D3                     	ds	4
  4725  0001D7                     _utctime:
  4726                           	opt callstack 0
  4727  0001D7                     	ds	4
  4728  0001DB                     _r1:
  4729                           	opt callstack 0
  4730  0001DB                     	ds	10
  4731  0001E5                     _r0:
  4732                           	opt callstack 0
  4733  0001E5                     	ds	10
  4734  0001EF                     _dst_name:
  4735                           	opt callstack 0
  4736  0001EF                     	ds	7
  4737  0001F6                     _std_name:
  4738                           	opt callstack 0
  4739  0001F6                     	ds	7
  4740                           
  4741                           	psect	dataBANK1
  4742  000100                     __pdataBANK1:
  4743                           	opt callstack 0
  4744  000100                     _R:
  4745                           	opt callstack 0
  4746  000100                     	ds	155
  4747  00019B                     _H:
  4748                           	opt callstack 0
  4749  00019B                     	ds	9
  4750                           
  4751                           	psect	bssBANK2
  4752  0002BC                     __pbssBANK2:
  4753                           	opt callstack 0
  4754  0002BC                     _tickCount:
  4755                           	opt callstack 0
  4756  0002BC                     	ds	26
  4757  0002D6                     _uart1RxBuffer:
  4758                           	opt callstack 0
  4759  0002D6                     	ds	8
  4760  0002DE                     _seed:
  4761                           	opt callstack 0
  4762  0002DE                     	ds	8
  4763                           
  4764                           	psect	dataBANK2
  4765  000200                     __pdataBANK2:
  4766                           	opt callstack 0
  4767  000200                     stoa@F1166:
  4768                           	opt callstack 0
  4769  000200                     	ds	7
  4770  000207                     _V:
  4771                           	opt callstack 0
  4772  000207                     	ds	181
  4773                           
  4774                           	psect	bssBANK3
  4775  000300                     __pbssBANK3:
  4776                           	opt callstack 0
  4777  000300                     lp_filter@smooth:
  4778                           	opt callstack 0
  4779  000300                     	ds	84
  4780  000354                     _dbuf:
  4781                           	opt callstack 0
  4782  000354                     	ds	80
  4783  0003A4                     	ds	32
  4784  0003C4                     asctime@buf:
  4785                           	opt callstack 0
  4786  0003C4                     	ds	27
  4787  0003DF                     localtime@tm:
  4788                           	opt callstack 0
  4789  0003DF                     	ds	24
  4790                           
  4791                           	psect	bssBANK4
  4792  000400                     __pbssBANK4:
  4793                           	opt callstack 0
  4794  000400                     _uart2TxBuffer:
  4795                           	opt callstack 0
  4796  000400                     	ds	64
  4797  000440                     _r_cal:
  4798                           	opt callstack 0
  4799  000440                     	ds	155
  4800                           
  4801                           	psect	bssBANK5
  4802  000500                     __pbssBANK5:
  4803                           	opt callstack 0
  4804  000500                     _ring_buf2:
  4805                           	opt callstack 0
  4806  000500                     	ds	67
  4807  000543                     _ring_buf1:
  4808                           	opt callstack 0
  4809  000543                     	ds	67
  4810                           
  4811                           	psect	bssBANK6
  4812  000600                     __pbssBANK6:
  4813                           	opt callstack 0
  4814  000600                     _uart2RxBuffer:
  4815                           	opt callstack 0
  4816  000600                     	ds	255
  4817                           
  4818                           	psect	bssBIGRAM
  4819  000A3F                     __pbssBIGRAM:
  4820                           	opt callstack 0
  4821  000A3F                     _D:
  4822                           	opt callstack 0
  4823  000A3F                     	ds	642
  4824                           
  4825                           	psect	dataBIGRAM
  4826  0006FF                     __pdataBIGRAM:
  4827                           	opt callstack 0
  4828  0006FF                     _port_data:
  4829                           	opt callstack 0
  4830  0006FF                     	ds	512
  4831  0008FF                     _C:
  4832                           	opt callstack 0
  4833  0008FF                     	ds	320
  4834                           
  4835                           	psect	cstackBANK0
  4836  0000E5                     __pcstackBANK0:
  4837                           	opt callstack 0
  4838  0000E5                     ??_TMR3_ISR:
  4839                           
  4840                           ; 1 bytes @ 0x0
  4841  0000E5                     	ds	25
  4842                           
  4843                           	psect	cstackCOMRAM
  4844  000001                     __pcstackCOMRAM:
  4845                           	opt callstack 0
  4846  000001                     ??_ADCC_ThresholdISR:
  4847  000001                     
  4848                           ; 1 bytes @ 0x0
  4849  000001                     	ds	5
  4850  000006                     ??_TMR6_ISR:
  4851                           
  4852                           ; 1 bytes @ 0x5
  4853  000006                     	ds	1
  4854  000007                     ??_INT1_ISR:
  4855  000007                     
  4856                           ; 1 bytes @ 0x6
  4857  000007                     	ds	4
  4858  00000B                     ??_TMR5_ISR:
  4859                           
  4860                           ; 1 bytes @ 0xA
  4861  00000B                     	ds	31
  4862                           
  4863 ;;
  4864 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4865 ;;
  4866 ;; *************** function _main *****************
  4867 ;; Defined at:
  4868 ;;		line 200 in file "main.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  esr_temp        4  [STACK] float 
  4873 ;;  i_esr           2  [STACK] unsigned short 
  4874 ;;  shape           1  [STACK] unsigned char 
  4875 ;;  inp_index       1  [STACK] unsigned char 
  4876 ;;  k               1  [STACK] unsigned char 
  4877 ;;  j               1  [STACK] unsigned char 
  4878 ;;  i               1  [STACK] unsigned char 
  4879 ;;  mode            1  [STACK] enum E17179
  4880 ;;  i_ror           1  [STACK] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1  [STACK] void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4894 ;;Total ram usage:        0 bytes
  4895 ;; Hardware stack levels required when called:   28
  4896 ;; This function calls:
  4897 ;;		_SYSTEM_Initialize
  4898 ;;		_StartTimer
  4899 ;;		_TimerDone
  4900 ;;		_WaitMs
  4901 ;;		___fladd
  4902 ;;		___flge
  4903 ;;		___fltol
  4904 ;;		_asctime
  4905 ;;		_calc_model_data
  4906 ;;		_calc_ror_data
  4907 ;;		_check_adc_scan
  4908 ;;		_check_enter_button
  4909 ;;		_check_help
  4910 ;;		_clear_adc_scan
  4911 ;;		_clear_hid_pflags
  4912 ;;		_conv_raw_result
  4913 ;;		_convert_adc_data
  4914 ;;		_current_sensor_cal
  4915 ;;		_display_history
  4916 ;;		_eaDogM_WriteCommand
  4917 ;;		_esr_check
  4918 ;;		_fabsf
  4919 ;;		_get_raw_result
  4920 ;;		_get_switch
  4921 ;;		_get_vterm_ptr
  4922 ;;		_hid_display
  4923 ;;		_init_bsoc
  4924 ;;		_init_display
  4925 ;;		_init_port_dma
  4926 ;;		_load_hist_data
  4927 ;;		_localtime
  4928 ;;		_lp_filter
  4929 ;;		_mode_lamp_dim
  4930 ;;		_read_cal_data
  4931 ;;		_set_dac
  4932 ;;		_set_dac_a
  4933 ;;		_set_dac_b
  4934 ;;		_set_display_info
  4935 ;;		_set_hist_flag
  4936 ;;		_set_load_relay_one
  4937 ;;		_set_load_relay_two
  4938 ;;		_set_time
  4939 ;;		_set_vterm
  4940 ;;		_spinners
  4941 ;;		_sprintf
  4942 ;;		_srand
  4943 ;;		_start_adc_scan
  4944 ;;		_start_switch_handler
  4945 ;;		_static_soc
  4946 ;;		_time
  4947 ;;		_update_cal_data
  4948 ;;		_update_hist_data
  4949 ;;		_update_lcd
  4950 ;;		_wait_lcd_done
  4951 ;;		_write_cal_data
  4952 ;; This function is called by:
  4953 ;;		Startup code after reset
  4954 ;; This function uses a reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text0
  4958  010000                     __ptext0:
  4959                           	opt callstack 0
  4960  010000                     _main:
  4961                           	opt callstack 0
  4962                           
  4963                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4964  010000  0E11               	movlw	17
  4965  010002  26E1               	addwf	fsr1l,f,c
  4966  010004  0E00               	movlw	0
  4967  010006  22E2               	addwfc	fsr1h,f,c
  4968                           
  4969                           ;main.c: 202:  UI_STATES mode;;main.c: 203:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4970                           ;stkvar	_inp_index @ sp[(-17)+11]
  4971                           
  4972                           ;incstack = 0
  4973  010008  0EFA               	movlw	-6
  4974  01000A  6AE3               	clrf	plusw1,c
  4975                           
  4976                           ;stkvar	_i @ sp[(-17)+14]
  4977  01000C  0EFD               	movlw	-3
  4978  01000E  6AE3               	clrf	plusw1,c
  4979                           
  4980                           ;stkvar	_j @ sp[(-17)+13]
  4981  010010  0EFC               	movlw	-4
  4982  010012  6AE3               	clrf	plusw1,c
  4983  010014  2AE3               	incf	plusw1,f,c
  4984                           
  4985                           ;stkvar	_k @ sp[(-17)+12]
  4986  010016  0EFB               	movlw	-5
  4987  010018  6AE3               	clrf	plusw1,c
  4988  01001A  82E3               	bsf	plusw1,1,c
  4989                           
  4990                           ;main.c: 206:  SYSTEM_Initialize();
  4991  01001C  ECAE  F00D         	call	_SYSTEM_Initialize	;wreg free
  4992                           
  4993                           ; BSR set to: 60
  4994                           ;main.c: 209:  (INTCON0bits.GIEH = 1);
  4995  010020  8ED2               	bsf	210,7,c	;volatile
  4996                           
  4997                           ; BSR set to: 60
  4998                           ;main.c: 212:  (INTCON0bits.GIEL = 1);
  4999  010022  8CD2               	bsf	210,6,c	;volatile
  5000                           
  5001                           ; BSR set to: 60
  5002                           ;main.c: 214:  V.ui_state = UI_STATE_INIT;
  5003  010024  0102               	movlb	2	; () banked
  5004  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5005                           
  5006                           ; BSR set to: 2
  5007                           ;main.c: 219:  WaitMs(300);
  5008  010028  0E2C               	movlw	44
  5009  01002A  6EE6               	movwf	postinc1,c
  5010  01002C  0E01               	movlw	1
  5011  01002E  6EE6               	movwf	postinc1,c
  5012  010030  EC85  F010         	call	_WaitMs	;wreg free
  5013                           
  5014                           ;main.c: 220:  if (PORTBbits.RB0) {
  5015  010034  A0CB               	btfss	203,0,c	;volatile
  5016  010036  D004               	goto	l17424
  5017                           
  5018                           ;main.c: 221:   mode = UI_STATE_HOST;
  5019                           ;stkvar	_mode @ sp[(-17)+15]
  5020  010038  0EFE               	movlw	-2
  5021  01003A  6AE3               	clrf	plusw1,c
  5022  01003C  2AE3               	incf	plusw1,f,c
  5023                           
  5024                           ;main.c: 222:  } else {
  5025  01003E  D004               	goto	l17426
  5026  010040                     l17424:
  5027                           
  5028                           ;main.c: 223:   mode = UI_STATE_LOG;
  5029                           ;stkvar	_mode @ sp[(-17)+15]
  5030  010040  0EFE               	movlw	-2
  5031  010042  6AE3               	clrf	plusw1,c
  5032  010044  80E3               	bsf	plusw1,0,c
  5033  010046  82E3               	bsf	plusw1,1,c	;indir
  5034  010048                     l17426:
  5035                           
  5036                           ;main.c: 226:  if (mode == UI_STATE_HOST) {
  5037                           ;stkvar	_mode @ sp[(-17)+15]
  5038  010048  0EFE               	movlw	-2
  5039  01004A  04E3               	decf	plusw1,w,c
  5040  01004C  A4D8               	btfss	status,2,c
  5041  01004E  D007               	goto	l1455
  5042                           
  5043                           ;main.c: 227:   do { LATDbits.LATD0 = 1; } while(0);
  5044  010050  80BD               	bsf	189,0,c	;volatile
  5045                           
  5046                           ;main.c: 228:   V.mode_pwm = 70;
  5047  010052  0E00               	movlw	0
  5048  010054  0102               	movlb	2	; () banked
  5049  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5050  010058  0E46               	movlw	70
  5051  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5052                           
  5053                           ;main.c: 229:  } else {
  5054  01005C  D004               	goto	l17430
  5055  01005E                     l1455:
  5056  01005E  90BD               	bcf	189,0,c	;volatile
  5057                           
  5058                           ;main.c: 231:   V.mode_pwm = 0;
  5059  010060  0102               	movlb	2	; () banked
  5060  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5061  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5062  010066                     l17430:
  5063                           
  5064                           ; BSR set to: 2
  5065                           ;main.c: 233:  mode_lamp_dim(V.mode_pwm);
  5066  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5067  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5068  010072  EC31  F014         	call	_mode_lamp_dim	;wreg free
  5069  010076  EFB6  F084         	goto	l17596
  5070  01007A                     l17432:
  5071                           
  5072                           ; BSR set to: 2
  5073                           ;main.c: 241:    init_port_dma();
  5074  01007A  EC21  F011         	call	_init_port_dma	;wreg free
  5075                           
  5076                           ; BSR set to: 59
  5077                           ;main.c: 243:    init_display();
  5078  01007E  ECD1  F000         	call	_init_display	;wreg free
  5079                           
  5080                           ; BSR set to: 61
  5081                           ;main.c: 244:    eaDogM_WriteCommand(0b00001100);
  5082  010082  0E0C               	movlw	12
  5083  010084  6EE6               	movwf	postinc1,c
  5084  010086  ECB9  F014         	call	_eaDogM_WriteCommand	;wreg free
  5085                           
  5086                           ; BSR set to: 61
  5087                           ;main.c: 245:    set_dac();
  5088  01008A  ECFB  F003         	call	_set_dac	;wreg free
  5089                           
  5090                           ;main.c: 249:    set_load_relay_one(1);
  5091  01008E  0E01               	movlw	1
  5092  010090  6EE6               	movwf	postinc1,c
  5093  010092  EC99  F014         	call	_set_load_relay_one	;wreg free
  5094                           
  5095                           ;main.c: 250:    set_load_relay_two(1);
  5096  010096  0E01               	movlw	1
  5097  010098  6EE6               	movwf	postinc1,c
  5098  01009A  EC91  F014         	call	_set_load_relay_two	;wreg free
  5099                           
  5100                           ;main.c: 252:    V.ui_state = mode;
  5101                           ;stkvar	_mode @ sp[(-17)+15]
  5102  01009E  0EFE               	movlw	-2
  5103  0100A0  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5104                           
  5105                           ;main.c: 253:    srand(1957);
  5106  0100A6  0EA5               	movlw	165
  5107  0100A8  6EE6               	movwf	postinc1,c
  5108  0100AA  0E07               	movlw	7
  5109  0100AC  6EE6               	movwf	postinc1,c
  5110  0100AE  ECA0  F010         	call	_srand	;wreg free
  5111                           
  5112                           ; BSR set to: 2
  5113                           ;main.c: 254:    set_vterm(0);
  5114  0100B2  0E00               	movlw	0
  5115  0100B4  6EE6               	movwf	postinc1,c
  5116  0100B6  ECF9  F013         	call	_set_vterm	;wreg free
  5117                           
  5118                           ;main.c: 255:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5119  0100BA  0E1D               	movlw	low STR_1
  5120  0100BC  6EE6               	movwf	postinc1,c
  5121  0100BE  0EFF               	movlw	high STR_1
  5122  0100C0  6EE6               	movwf	postinc1,c
  5123  0100C2  0E00               	movlw	0
  5124  0100C4  6EE6               	movwf	postinc1,c
  5125  0100C6  0E00               	movlw	0
  5126  0100C8  6EE6               	movwf	postinc1,c
  5127  0100CA  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5128  0100CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5129  0100D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5130  0100DA  0E04               	movlw	4
  5131  0100DC  6EE6               	movwf	postinc1,c
  5132  0100DE  EC4F  F0FD         	call	_sprintf	;wreg free
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;main.c: 256:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.27");
  5136  0100E2  0ED5               	movlw	low STR_3
  5137  0100E4  6EE6               	movwf	postinc1,c
  5138  0100E6  0EFF               	movlw	high STR_3
  5139  0100E8  6EE6               	movwf	postinc1,c
  5140  0100EA  0E08               	movlw	low STR_2
  5141  0100EC  6EE6               	movwf	postinc1,c
  5142  0100EE  0EFF               	movlw	high STR_2
  5143  0100F0  6EE6               	movwf	postinc1,c
  5144  0100F2  0E00               	movlw	0
  5145  0100F4  6EE6               	movwf	postinc1,c
  5146  0100F6  0E01               	movlw	1
  5147  0100F8  6EE6               	movwf	postinc1,c
  5148  0100FA  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5149  0100FE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5150  010104  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5151  01010A  0E06               	movlw	6
  5152  01010C  6EE6               	movwf	postinc1,c
  5153  01010E  EC4F  F0FD         	call	_sprintf	;wreg free
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;main.c: 257:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5157  010112  0EF3               	movlw	low STR_4
  5158  010114  6EE6               	movwf	postinc1,c
  5159  010116  0EFE               	movlw	high STR_4
  5160  010118  6EE6               	movwf	postinc1,c
  5161  01011A  0E00               	movlw	0
  5162  01011C  6EE6               	movwf	postinc1,c
  5163  01011E  0E02               	movlw	2
  5164  010120  6EE6               	movwf	postinc1,c
  5165  010122  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5166  010126  0060  F0AB  FFE6   	movff	btemp,postinc1
  5167  01012C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5168  010132  0E04               	movlw	4
  5169  010134  6EE6               	movwf	postinc1,c
  5170  010136  EC4F  F0FD         	call	_sprintf	;wreg free
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;main.c: 258:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5174  01013A  0EB9               	movlw	low (STR_20+2)
  5175  01013C  6EE6               	movwf	postinc1,c
  5176  01013E  0EFB               	movlw	high (STR_20+2)
  5177  010140  6EE6               	movwf	postinc1,c
  5178  010142  0E00               	movlw	0
  5179  010144  6EE6               	movwf	postinc1,c
  5180  010146  0E03               	movlw	3
  5181  010148  6EE6               	movwf	postinc1,c
  5182  01014A  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5183  01014E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5184  010154  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5185  01015A  0E04               	movlw	4
  5186  01015C  6EE6               	movwf	postinc1,c
  5187  01015E  EC4F  F0FD         	call	_sprintf	;wreg free
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 1), "                    ");
  5191  010162  0EB9               	movlw	low (STR_20+2)
  5192  010164  6EE6               	movwf	postinc1,c
  5193  010166  0EFB               	movlw	high (STR_20+2)
  5194  010168  6EE6               	movwf	postinc1,c
  5195  01016A  0E01               	movlw	1
  5196  01016C  6EE6               	movwf	postinc1,c
  5197  01016E  0E00               	movlw	0
  5198  010170  6EE6               	movwf	postinc1,c
  5199  010172  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5200  010176  0060  F0AB  FFE6   	movff	btemp,postinc1
  5201  01017C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5202  010182  0E04               	movlw	4
  5203  010184  6EE6               	movwf	postinc1,c
  5204  010186  EC4F  F0FD         	call	_sprintf	;wreg free
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 1), "                    ");
  5208  01018A  0EB9               	movlw	low (STR_20+2)
  5209  01018C  6EE6               	movwf	postinc1,c
  5210  01018E  0EFB               	movlw	high (STR_20+2)
  5211  010190  6EE6               	movwf	postinc1,c
  5212  010192  0E01               	movlw	1
  5213  010194  6EE6               	movwf	postinc1,c
  5214  010196  0E01               	movlw	1
  5215  010198  6EE6               	movwf	postinc1,c
  5216  01019A  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5217  01019E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5218  0101A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5219  0101AA  0E04               	movlw	4
  5220  0101AC  6EE6               	movwf	postinc1,c
  5221  0101AE  EC4F  F0FD         	call	_sprintf	;wreg free
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;main.c: 261:    sprintf(get_vterm_ptr(2, 1), "                    ");
  5225  0101B2  0EB9               	movlw	low (STR_20+2)
  5226  0101B4  6EE6               	movwf	postinc1,c
  5227  0101B6  0EFB               	movlw	high (STR_20+2)
  5228  0101B8  6EE6               	movwf	postinc1,c
  5229  0101BA  0E01               	movlw	1
  5230  0101BC  6EE6               	movwf	postinc1,c
  5231  0101BE  0E02               	movlw	2
  5232  0101C0  6EE6               	movwf	postinc1,c
  5233  0101C2  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5234  0101C6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5235  0101CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5236  0101D2  0E04               	movlw	4
  5237  0101D4  6EE6               	movwf	postinc1,c
  5238  0101D6  EC4F  F0FD         	call	_sprintf	;wreg free
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;main.c: 262:    sprintf(get_vterm_ptr(3, 1), "                    ");
  5242  0101DA  0EB9               	movlw	low (STR_20+2)
  5243  0101DC  6EE6               	movwf	postinc1,c
  5244  0101DE  0EFB               	movlw	high (STR_20+2)
  5245  0101E0  6EE6               	movwf	postinc1,c
  5246  0101E2  0E01               	movlw	1
  5247  0101E4  6EE6               	movwf	postinc1,c
  5248  0101E6  0E03               	movlw	3
  5249  0101E8  6EE6               	movwf	postinc1,c
  5250  0101EA  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5251  0101EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5252  0101F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5253  0101FA  0E04               	movlw	4
  5254  0101FC  6EE6               	movwf	postinc1,c
  5255  0101FE  EC4F  F0FD         	call	_sprintf	;wreg free
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;main.c: 263:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5259  010202  0EB9               	movlw	low (STR_20+2)
  5260  010204  6EE6               	movwf	postinc1,c
  5261  010206  0EFB               	movlw	high (STR_20+2)
  5262  010208  6EE6               	movwf	postinc1,c
  5263  01020A  0E02               	movlw	2
  5264  01020C  6EE6               	movwf	postinc1,c
  5265  01020E  0E00               	movlw	0
  5266  010210  6EE6               	movwf	postinc1,c
  5267  010212  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5268  010216  0060  F0AB  FFE6   	movff	btemp,postinc1
  5269  01021C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5270  010222  0E04               	movlw	4
  5271  010224  6EE6               	movwf	postinc1,c
  5272  010226  EC4F  F0FD         	call	_sprintf	;wreg free
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;main.c: 264:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5276  01022A  0EB9               	movlw	low (STR_20+2)
  5277  01022C  6EE6               	movwf	postinc1,c
  5278  01022E  0EFB               	movlw	high (STR_20+2)
  5279  010230  6EE6               	movwf	postinc1,c
  5280  010232  0E02               	movlw	2
  5281  010234  6EE6               	movwf	postinc1,c
  5282  010236  0E01               	movlw	1
  5283  010238  6EE6               	movwf	postinc1,c
  5284  01023A  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5285  01023E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5286  010244  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5287  01024A  0E04               	movlw	4
  5288  01024C  6EE6               	movwf	postinc1,c
  5289  01024E  EC4F  F0FD         	call	_sprintf	;wreg free
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;main.c: 265:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5293  010252  0EB9               	movlw	low (STR_20+2)
  5294  010254  6EE6               	movwf	postinc1,c
  5295  010256  0EFB               	movlw	high (STR_20+2)
  5296  010258  6EE6               	movwf	postinc1,c
  5297  01025A  0E02               	movlw	2
  5298  01025C  6EE6               	movwf	postinc1,c
  5299  01025E  0E02               	movlw	2
  5300  010260  6EE6               	movwf	postinc1,c
  5301  010262  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5302  010266  0060  F0AB  FFE6   	movff	btemp,postinc1
  5303  01026C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5304  010272  0E04               	movlw	4
  5305  010274  6EE6               	movwf	postinc1,c
  5306  010276  EC4F  F0FD         	call	_sprintf	;wreg free
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;main.c: 266:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5310  01027A  0EB9               	movlw	low (STR_20+2)
  5311  01027C  6EE6               	movwf	postinc1,c
  5312  01027E  0EFB               	movlw	high (STR_20+2)
  5313  010280  6EE6               	movwf	postinc1,c
  5314  010282  0E02               	movlw	2
  5315  010284  6EE6               	movwf	postinc1,c
  5316  010286  0E03               	movlw	3
  5317  010288  6EE6               	movwf	postinc1,c
  5318  01028A  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5319  01028E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5320  010294  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5321  01029A  0E04               	movlw	4
  5322  01029C  6EE6               	movwf	postinc1,c
  5323  01029E  EC4F  F0FD         	call	_sprintf	;wreg free
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;main.c: 267:    update_lcd(0);
  5327  0102A2  0E00               	movlw	0
  5328  0102A4  6EE6               	movwf	postinc1,c
  5329  0102A6  EC01  F0F6         	call	_update_lcd	;wreg free
  5330                           
  5331                           ;main.c: 268:    WaitMs(1000);
  5332  0102AA  0EE8               	movlw	232
  5333  0102AC  6EE6               	movwf	postinc1,c
  5334  0102AE  0E03               	movlw	3
  5335  0102B0  6EE6               	movwf	postinc1,c
  5336  0102B2  EC85  F010         	call	_WaitMs	;wreg free
  5337                           
  5338                           ;main.c: 269:    StartTimer(TMR_DISPLAY, 250);
  5339  0102B6  0EFA               	movlw	250
  5340  0102B8  6EE6               	movwf	postinc1,c
  5341  0102BA  0E00               	movlw	0
  5342  0102BC  6EE6               	movwf	postinc1,c
  5343  0102BE  0E0A               	movlw	10
  5344  0102C0  6EE6               	movwf	postinc1,c
  5345  0102C2  EC78  F00F         	call	_StartTimer	;wreg free
  5346                           
  5347                           ;main.c: 270:    StartTimer(TMR_ADC, 200);
  5348  0102C6  0EC8               	movlw	200
  5349  0102C8  6EE6               	movwf	postinc1,c
  5350  0102CA  0E00               	movlw	0
  5351  0102CC  6EE6               	movwf	postinc1,c
  5352  0102CE  0E01               	movlw	1
  5353  0102D0  6EE6               	movwf	postinc1,c
  5354  0102D2  EC78  F00F         	call	_StartTimer	;wreg free
  5355                           
  5356                           ;main.c: 271:    StartTimer(TMR_INFO, 3000);
  5357  0102D6  0EB8               	movlw	184
  5358  0102D8  6EE6               	movwf	postinc1,c
  5359  0102DA  0E0B               	movlw	11
  5360  0102DC  6EE6               	movwf	postinc1,c
  5361  0102DE  0E07               	movlw	7
  5362  0102E0  6EE6               	movwf	postinc1,c
  5363  0102E2  EC78  F00F         	call	_StartTimer	;wreg free
  5364                           
  5365                           ;main.c: 272:    StartTimer(TMR_FLIPPER, 1500);
  5366  0102E6  0EDC               	movlw	220
  5367  0102E8  6EE6               	movwf	postinc1,c
  5368  0102EA  0E05               	movlw	5
  5369  0102EC  6EE6               	movwf	postinc1,c
  5370  0102EE  0E0B               	movlw	11
  5371  0102F0  6EE6               	movwf	postinc1,c
  5372  0102F2  EC78  F00F         	call	_StartTimer	;wreg free
  5373                           
  5374                           ;main.c: 273:    StartTimer(TMR_HELPDIS, 3000);
  5375  0102F6  0EB8               	movlw	184
  5376  0102F8  6EE6               	movwf	postinc1,c
  5377  0102FA  0E0B               	movlw	11
  5378  0102FC  6EE6               	movwf	postinc1,c
  5379  0102FE  0E09               	movlw	9
  5380  010300  6EE6               	movwf	postinc1,c
  5381  010302  EC78  F00F         	call	_StartTimer	;wreg free
  5382                           
  5383                           ;main.c: 275:    start_adc_scan();
  5384  010306  ECB7  F00B         	call	_start_adc_scan	;wreg free
  5385                           
  5386                           ;main.c: 276:    start_switch_handler();
  5387  01030A  ECBB  F013         	call	_start_switch_handler	;wreg free
  5388                           
  5389                           ; BSR set to: 57
  5390                           ;main.c: 277:    WaitMs(1000);
  5391  01030E  0EE8               	movlw	232
  5392  010310  6EE6               	movwf	postinc1,c
  5393  010312  0E03               	movlw	3
  5394  010314  6EE6               	movwf	postinc1,c
  5395  010316  EC85  F010         	call	_WaitMs	;wreg free
  5396                           
  5397                           ;main.c: 282:    if (read_cal_data()) {
  5398  01031A  EC07  F0EC         	call	_read_cal_data	;wreg free
  5399  01031E  502A               	movf	btemp^0,w,c
  5400  010320  B4D8               	btfsc	status,2,c
  5401  010322  D07C               	goto	l17506
  5402                           
  5403                           ;main.c: 283:     update_cal_data();
  5404  010324  EC31  F00D         	call	_update_cal_data	;wreg free
  5405                           
  5406                           ; BSR set to: 1
  5407                           ;main.c: 284:     if (update_hist_data(1, &C.hist[0]) && (C.hist[0].pclock > time(((void
      +                          *)0))))
  5408  010328  0EB8               	movlw	low (_C+185)
  5409  01032A  6EE6               	movwf	postinc1,c
  5410  01032C  0E09               	movlw	high (_C+185)
  5411  01032E  6EE6               	movwf	postinc1,c
  5412  010330  0E01               	movlw	1
  5413  010332  6EE6               	movwf	postinc1,c
  5414  010334  EC5C  F009         	call	_update_hist_data	;wreg free
  5415  010338  502A               	movf	btemp^0,w,c
  5416  01033A  B4D8               	btfsc	status,2,c
  5417  01033C  D05A               	goto	l17504
  5418  01033E  0E00               	movlw	0
  5419  010340  6EE6               	movwf	postinc1,c
  5420  010342  0E00               	movlw	0
  5421  010344  6EE6               	movwf	postinc1,c
  5422  010346  EC7B  F00C         	call	_time	;wreg free
  5423  01034A  52E5               	movf	postdec1,f,c
  5424  01034C  006F FF9C  F041    	movff	indf1,btemp+23
  5425  010352  52E5               	movf	postdec1,f,c
  5426  010354  006F FF9C  F040    	movff	indf1,btemp+22
  5427  01035A  52E5               	movf	postdec1,f,c
  5428  01035C  006F FF9C  F03F    	movff	indf1,btemp+21
  5429  010362  52E5               	movf	postdec1,f,c
  5430  010364  006F FF9C  F03E    	movff	indf1,btemp+20
  5431  01036A  52E5               	movf	postdec1,f,c
  5432  01036C  006F FF9C  F03D    	movff	indf1,btemp+19
  5433  010372  52E5               	movf	postdec1,f,c
  5434  010374  006F FF9C  F03C    	movff	indf1,btemp+18
  5435  01037A  52E5               	movf	postdec1,f,c
  5436  01037C  006F FF9C  F03B    	movff	indf1,btemp+17
  5437  010382  52E5               	movf	postdec1,f,c
  5438  010384  006F FF9C  F03A    	movff	indf1,btemp+16
  5439  01038A  EE22  F1C8         	lfsr	2,_C+201	;volatile
  5440  01038E  50DE               	movf	postinc2,w,c
  5441  010390  5C3A               	subwf	(btemp+16)^0,w,c
  5442  010392  50DE               	movf	postinc2,w,c
  5443  010394  583B               	subwfb	(btemp+17)^0,w,c
  5444  010396  50DE               	movf	postinc2,w,c
  5445  010398  583C               	subwfb	(btemp+18)^0,w,c
  5446  01039A  50DE               	movf	postinc2,w,c
  5447  01039C  583D               	subwfb	(btemp+19)^0,w,c
  5448  01039E  50DE               	movf	postinc2,w,c
  5449  0103A0  583E               	subwfb	(btemp+20)^0,w,c
  5450  0103A2  50DE               	movf	postinc2,w,c
  5451  0103A4  583F               	subwfb	(btemp+21)^0,w,c
  5452  0103A6  50DE               	movf	postinc2,w,c
  5453  0103A8  5840               	subwfb	(btemp+22)^0,w,c
  5454  0103AA  5041               	movf	(btemp+23)^0,w,c
  5455  0103AC  0A80               	xorlw	128
  5456  0103AE  6E2A               	movwf	btemp^0,c
  5457  0103B0  50DE               	movf	postinc2,w,c
  5458  0103B2  0A80               	xorlw	128
  5459  0103B4  582A               	subwfb	btemp^0,w,c
  5460  0103B6  B0D8               	btfsc	status,0,c
  5461  0103B8  D01C               	goto	l17504
  5462                           
  5463                           ; BSR set to: 57
  5464                           ;main.c: 285:      set_time(C.hist[0].pclock);
  5465  0103BA  EE22  F1C8         	lfsr	2,_C+201	;volatile
  5466  0103BE  006F FF7B FFE6     	movff	postinc2,postinc1
  5467  0103C4  006F FF7B FFE6     	movff	postinc2,postinc1
  5468  0103CA  006F FF7B FFE6     	movff	postinc2,postinc1
  5469  0103D0  006F FF7B FFE6     	movff	postinc2,postinc1
  5470  0103D6  006F FF7B FFE6     	movff	postinc2,postinc1
  5471  0103DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5472  0103E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5473  0103E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5474  0103EE  EC6A  F010         	call	_set_time	;wreg free
  5475  0103F2                     l17504:
  5476                           
  5477                           ;main.c: 287:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5478  0103F2  0E32               	movlw	low STR_14
  5479  0103F4  6EE6               	movwf	postinc1,c
  5480  0103F6  0EFF               	movlw	high STR_14
  5481  0103F8  6EE6               	movwf	postinc1,c
  5482  0103FA  0E00               	movlw	0
  5483  0103FC  6EE6               	movwf	postinc1,c
  5484  0103FE  0E02               	movlw	2
  5485  010400  6EE6               	movwf	postinc1,c
  5486  010402  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5487  010406  0060  F0AB  FFE6   	movff	btemp,postinc1
  5488  01040C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5489  010412  0E04               	movlw	4
  5490  010414  6EE6               	movwf	postinc1,c
  5491  010416  EC4F  F0FD         	call	_sprintf	;wreg free
  5492                           
  5493                           ;main.c: 288:    } else {
  5494  01041A  D014               	goto	l1462
  5495  01041C                     l17506:
  5496                           
  5497                           ;main.c: 289:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5498  01041C  0E5C               	movlw	low STR_15
  5499  01041E  6EE6               	movwf	postinc1,c
  5500  010420  0EFF               	movlw	high STR_15
  5501  010422  6EE6               	movwf	postinc1,c
  5502  010424  0E00               	movlw	0
  5503  010426  6EE6               	movwf	postinc1,c
  5504  010428  0E02               	movlw	2
  5505  01042A  6EE6               	movwf	postinc1,c
  5506  01042C  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5507  010430  0060  F0AB  FFE6   	movff	btemp,postinc1
  5508  010436  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5509  01043C  0E04               	movlw	4
  5510  01043E  6EE6               	movwf	postinc1,c
  5511  010440  EC4F  F0FD         	call	_sprintf	;wreg free
  5512  010444                     l1462:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;main.c: 291:    update_lcd(0);
  5516  010444  0E00               	movlw	0
  5517  010446  6EE6               	movwf	postinc1,c
  5518  010448  EC01  F0F6         	call	_update_lcd	;wreg free
  5519                           
  5520                           ;main.c: 292:    WaitMs(2000);
  5521  01044C  0ED0               	movlw	208
  5522  01044E  6EE6               	movwf	postinc1,c
  5523  010450  0E07               	movlw	7
  5524  010452  6EE6               	movwf	postinc1,c
  5525  010454  EC85  F010         	call	_WaitMs	;wreg free
  5526                           
  5527                           ;main.c: 294:    i_ror = 1;
  5528                           ;stkvar	_i_ror @ sp[(-17)+16]
  5529  010458  0EFF               	movlw	-1
  5530  01045A  6AE3               	clrf	plusw1,c
  5531  01045C  2AE3               	incf	plusw1,f,c
  5532  01045E                     l17512:
  5533                           
  5534                           ;main.c: 296:     calc_ror_data();
  5535  01045E  ECF7  F0F0         	call	_calc_ror_data	;wreg free
  5536                           
  5537                           ;main.c: 297:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  5538  010462  0E00               	movlw	0
  5539  010464  6EE6               	movwf	postinc1,c
  5540  010466  0E04               	movlw	4
  5541  010468  6EE6               	movwf	postinc1,c
  5542  01046A  EC76  F0C3         	call	_conv_raw_result	;wreg free
  5543  01046E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5544  010474  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5545  01047A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5546  010480  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5547  010486  0E69               	movlw	low STR_16
  5548  010488  6EE6               	movwf	postinc1,c
  5549  01048A  0EFD               	movlw	high STR_16
  5550  01048C  6EE6               	movwf	postinc1,c
  5551  01048E  0E00               	movlw	0
  5552  010490  6EE6               	movwf	postinc1,c
  5553  010492  0E01               	movlw	1
  5554  010494  6EE6               	movwf	postinc1,c
  5555  010496  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5556  01049A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5557  0104A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5558  0104A6  0E08               	movlw	8
  5559  0104A8  6EE6               	movwf	postinc1,c
  5560  0104AA  EC4F  F0FD         	call	_sprintf	;wreg free
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;main.c: 298:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5564  0104AE  EE22  F16B         	lfsr	2,_C+108	;volatile
  5565  0104B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5566  0104B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5567  0104BE  006F FF7B FFE6     	movff	postinc2,postinc1
  5568  0104C4  006F FF7B FFE6     	movff	postinc2,postinc1
  5569                           
  5570                           ;stkvar	_i_ror @ sp[(-21)+16]
  5571  0104CA  0EFB               	movlw	-5
  5572  0104CC  50E3               	movf	plusw1,w,c
  5573  0104CE  6EE6               	movwf	postinc1,c
  5574  0104D0  0E00               	movlw	0
  5575  0104D2  6EE6               	movwf	postinc1,c
  5576  0104D4  0E00               	movlw	0
  5577  0104D6  6EE6               	movwf	postinc1,c
  5578  0104D8  0E05               	movlw	5
  5579  0104DA  6EE6               	movwf	postinc1,c
  5580  0104DC  ECCB  F0FE         	call	_spinners	;wreg free
  5581  0104E0  502A               	movf	btemp^0,w,c
  5582  0104E2  6EE6               	movwf	postinc1,c
  5583  0104E4  0E00               	movlw	0
  5584  0104E6  6EE6               	movwf	postinc1,c
  5585  0104E8  0E25               	movlw	low STR_17
  5586  0104EA  6EE6               	movwf	postinc1,c
  5587  0104EC  0EFB               	movlw	high STR_17
  5588  0104EE  6EE6               	movwf	postinc1,c
  5589  0104F0  0E00               	movlw	0
  5590  0104F2  6EE6               	movwf	postinc1,c
  5591  0104F4  0E02               	movlw	2
  5592  0104F6  6EE6               	movwf	postinc1,c
  5593  0104F8  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5594  0104FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5595  010502  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5596  010508  0E0C               	movlw	12
  5597  01050A  6EE6               	movwf	postinc1,c
  5598  01050C  EC4F  F0FD         	call	_sprintf	;wreg free
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;main.c: 299:     update_lcd(0);
  5602  010510  0E00               	movlw	0
  5603  010512  6EE6               	movwf	postinc1,c
  5604  010514  EC01  F0F6         	call	_update_lcd	;wreg free
  5605                           
  5606                           ;main.c: 300:     clear_adc_scan();
  5607  010518  EC1B  F015         	call	_clear_adc_scan	;wreg free
  5608                           
  5609                           ; BSR set to: 1
  5610                           ;main.c: 301:     start_adc_scan();
  5611  01051C  ECB7  F00B         	call	_start_adc_scan	;wreg free
  5612                           
  5613                           ;main.c: 302:     WaitMs(2000);
  5614  010520  0ED0               	movlw	208
  5615  010522  6EE6               	movwf	postinc1,c
  5616  010524  0E07               	movlw	7
  5617  010526  6EE6               	movwf	postinc1,c
  5618  010528  EC85  F010         	call	_WaitMs	;wreg free
  5619                           
  5620                           ;main.c: 305:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5621                           ;stkvar	_i_ror @ sp[(-17)+16]
  5622  01052C  0EFF               	movlw	-1
  5623  01052E  006F FF8C  F035    	movff	plusw1,btemp+11
  5624  010534  2A35               	incf	(btemp+11)^0,f,c
  5625  010536  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5626  01053C  0635               	decf	(btemp+11)^0,f,c
  5627  01053E  0E1E               	movlw	30
  5628  010540  6035               	cpfslt	(btemp+11)^0,c
  5629  010542  D01A               	goto	u17070
  5630  010544  EE22  F16B         	lfsr	2,_C+108	;volatile
  5631  010548  006F FF7B FFE6     	movff	postinc2,postinc1
  5632  01054E  006F FF7B FFE6     	movff	postinc2,postinc1
  5633  010554  006F FF7B FFE6     	movff	postinc2,postinc1
  5634  01055A  006F FF7B FFE6     	movff	postinc2,postinc1
  5635  010560  0E42               	movlw	66
  5636  010562  6EE6               	movwf	postinc1,c
  5637  010564  0E60               	movlw	96
  5638  010566  6EE6               	movwf	postinc1,c
  5639  010568  0E65               	movlw	101
  5640  01056A  6EE6               	movwf	postinc1,c
  5641  01056C  0E3C               	movlw	60
  5642  01056E  6EE6               	movwf	postinc1,c
  5643  010570  EC9F  F0F4         	call	___flge	;wreg free
  5644  010574  A02A               	btfss	btemp& (0+255),0,c
  5645  010576  D773               	goto	l17512
  5646  010578                     u17070:
  5647                           
  5648                           ;main.c: 307:    static_soc();
  5649  010578  ECAA  F00C         	call	_static_soc	;wreg free
  5650                           
  5651                           ;main.c: 308:    init_bsoc();
  5652  01057C  EC61  F0E3         	call	_init_bsoc	;wreg free
  5653                           
  5654                           ;main.c: 309:    set_load_relay_one(0);
  5655  010580  0E00               	movlw	0
  5656  010582  6EE6               	movwf	postinc1,c
  5657  010584  EC99  F014         	call	_set_load_relay_one	;wreg free
  5658                           
  5659                           ;main.c: 310:    set_load_relay_two(0);
  5660  010588  0E00               	movlw	0
  5661  01058A  6EE6               	movwf	postinc1,c
  5662  01058C  EC91  F014         	call	_set_load_relay_two	;wreg free
  5663                           
  5664                           ;main.c: 311:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  5665  010590  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5666  010594  006F FF78  F034    	movff	postinc2,btemp+10
  5667  01059A  006F FF74  F035    	movff	postdec2,btemp+11
  5668  0105A0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5669  0105A6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5670  0105AC  0EE5               	movlw	low STR_18
  5671  0105AE  6EE6               	movwf	postinc1,c
  5672  0105B0  0EFB               	movlw	high STR_18
  5673  0105B2  6EE6               	movwf	postinc1,c
  5674  0105B4  0E00               	movlw	0
  5675  0105B6  6EE6               	movwf	postinc1,c
  5676  0105B8  0E00               	movlw	0
  5677  0105BA  6EE6               	movwf	postinc1,c
  5678  0105BC  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5679  0105C0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5680  0105C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5681  0105CC  0E06               	movlw	6
  5682  0105CE  6EE6               	movwf	postinc1,c
  5683  0105D0  EC4F  F0FD         	call	_sprintf	;wreg free
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;main.c: 312:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  5687  0105D4  EE22  F18F         	lfsr	2,_C+144	;volatile
  5688  0105D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5689  0105DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5690  0105E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5691  0105EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5692  0105F0  0ECB               	movlw	low STR_19
  5693  0105F2  6EE6               	movwf	postinc1,c
  5694  0105F4  0EFC               	movlw	high STR_19
  5695  0105F6  6EE6               	movwf	postinc1,c
  5696  0105F8  0E00               	movlw	0
  5697  0105FA  6EE6               	movwf	postinc1,c
  5698  0105FC  0E01               	movlw	1
  5699  0105FE  6EE6               	movwf	postinc1,c
  5700  010600  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5701  010604  0060  F0AB  FFE6   	movff	btemp,postinc1
  5702  01060A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5703  010610  0E08               	movlw	8
  5704  010612  6EE6               	movwf	postinc1,c
  5705  010614  EC4F  F0FD         	call	_sprintf	;wreg free
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;main.c: 313:    sprintf(get_vterm_ptr(2, 0), "                      ");
  5709  010618  0EB7               	movlw	low STR_20
  5710  01061A  6EE6               	movwf	postinc1,c
  5711  01061C  0EFB               	movlw	high STR_20
  5712  01061E  6EE6               	movwf	postinc1,c
  5713  010620  0E00               	movlw	0
  5714  010622  6EE6               	movwf	postinc1,c
  5715  010624  0E02               	movlw	2
  5716  010626  6EE6               	movwf	postinc1,c
  5717  010628  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5718  01062C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5719  010632  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5720  010638  0E04               	movlw	4
  5721  01063A  6EE6               	movwf	postinc1,c
  5722  01063C  EC4F  F0FD         	call	_sprintf	;wreg free
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;main.c: 314:    update_lcd(0);
  5726  010640  0E00               	movlw	0
  5727  010642  6EE6               	movwf	postinc1,c
  5728  010644  EC01  F0F6         	call	_update_lcd	;wreg free
  5729                           
  5730                           ;main.c: 315:    WaitMs(2000);
  5731  010648  0ED0               	movlw	208
  5732  01064A  6EE6               	movwf	postinc1,c
  5733  01064C  0E07               	movlw	7
  5734  01064E  6EE6               	movwf	postinc1,c
  5735  010650  EC85  F010         	call	_WaitMs	;wreg free
  5736                           
  5737                           ;main.c: 316:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  5738  010654  0E95               	movlw	low STR_21
  5739  010656  6EE6               	movwf	postinc1,c
  5740  010658  0EFD               	movlw	high STR_21
  5741  01065A  6EE6               	movwf	postinc1,c
  5742  01065C  0E00               	movlw	0
  5743  01065E  6EE6               	movwf	postinc1,c
  5744  010660  0E00               	movlw	0
  5745  010662  6EE6               	movwf	postinc1,c
  5746  010664  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5747  010668  0060  F0AB  FFE6   	movff	btemp,postinc1
  5748  01066E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5749  010674  0E04               	movlw	4
  5750  010676  6EE6               	movwf	postinc1,c
  5751  010678  EC4F  F0FD         	call	_sprintf	;wreg free
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;main.c: 317:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  5755  01067C  0EAB               	movlw	low STR_22
  5756  01067E  6EE6               	movwf	postinc1,c
  5757  010680  0EFD               	movlw	high STR_22
  5758  010682  6EE6               	movwf	postinc1,c
  5759  010684  0E00               	movlw	0
  5760  010686  6EE6               	movwf	postinc1,c
  5761  010688  0E01               	movlw	1
  5762  01068A  6EE6               	movwf	postinc1,c
  5763  01068C  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5764  010690  0060  F0AB  FFE6   	movff	btemp,postinc1
  5765  010696  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5766  01069C  0E04               	movlw	4
  5767  01069E  6EE6               	movwf	postinc1,c
  5768  0106A0  EC4F  F0FD         	call	_sprintf	;wreg free
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;main.c: 318:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  5772  0106A4  0E5B               	movlw	low STR_23
  5773  0106A6  6EE6               	movwf	postinc1,c
  5774  0106A8  0EFE               	movlw	high STR_23
  5775  0106AA  6EE6               	movwf	postinc1,c
  5776  0106AC  0E00               	movlw	0
  5777  0106AE  6EE6               	movwf	postinc1,c
  5778  0106B0  0E02               	movlw	2
  5779  0106B2  6EE6               	movwf	postinc1,c
  5780  0106B4  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5781  0106B8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5782  0106BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5783  0106C4  0E04               	movlw	4
  5784  0106C6  6EE6               	movwf	postinc1,c
  5785  0106C8  EC4F  F0FD         	call	_sprintf	;wreg free
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;main.c: 319:    update_lcd(0);
  5789  0106CC  0E00               	movlw	0
  5790  0106CE  6EE6               	movwf	postinc1,c
  5791  0106D0  EC01  F0F6         	call	_update_lcd	;wreg free
  5792                           
  5793                           ;main.c: 320:    uint16_t i_esr = 1;
  5794  0106D4  0E01               	movlw	1
  5795  0106D6  6E34               	movwf	(btemp+10)^0,c
  5796  0106D8  0E00               	movlw	0
  5797  0106DA  6E35               	movwf	(btemp+11)^0,c
  5798                           
  5799                           ;stkvar	_i_esr @ sp[(-17)+8]
  5800  0106DC  0EF7               	movlw	-9
  5801  0106DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5802  0106E4  0EF8               	movlw	-8
  5803  0106E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5804                           
  5805                           ;main.c: 322:    float esr_temp;;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5806  0106EC  D06D               	goto	l17572
  5807  0106EE                     l17560:
  5808                           
  5809                           ;main.c: 324:     WaitMs(110);
  5810  0106EE  0E6E               	movlw	110
  5811  0106F0  6EE6               	movwf	postinc1,c
  5812  0106F2  0E00               	movlw	0
  5813  0106F4  6EE6               	movwf	postinc1,c
  5814  0106F6  EC85  F010         	call	_WaitMs	;wreg free
  5815                           
  5816                           ;main.c: 325:     shape = (uint8_t) fabsf(esr_temp);
  5817                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5818  0106FA  0EF3               	movlw	-13
  5819  0106FC  006F FF8F FFE6     	movff	plusw1,postinc1
  5820  010702  006F FF8F FFE6     	movff	plusw1,postinc1
  5821  010708  006F FF8F FFE6     	movff	plusw1,postinc1
  5822  01070E  006F FF8F FFE6     	movff	plusw1,postinc1
  5823  010714  EC56  F004         	call	_fabsf	;wreg free
  5824  010718  0060  F0AB  FFE6   	movff	btemp,postinc1
  5825  01071E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5826  010724  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5827  01072A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5828  010730  EC33  F0F3         	call	___fltol	;wreg free
  5829  010734  0060  F0A8  F035   	movff	btemp,btemp+11
  5830                           
  5831                           ;stkvar	_shape @ sp[(-17)+10]
  5832  01073A  0EF9               	movlw	-7
  5833  01073C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5834                           
  5835                           ;main.c: 326:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  5836  010742  0E00               	movlw	0
  5837  010744  6EE6               	movwf	postinc1,c
  5838                           
  5839                           ;stkvar	_shape @ sp[(-18)+10]
  5840  010746  0EF8               	movlw	-8
  5841  010748  50E3               	movf	plusw1,w,c
  5842  01074A  6EE6               	movwf	postinc1,c
  5843  01074C  ECCB  F0FE         	call	_spinners	;wreg free
  5844  010750  502A               	movf	btemp^0,w,c
  5845  010752  6EE6               	movwf	postinc1,c
  5846  010754  0E00               	movlw	0
  5847  010756  6EE6               	movwf	postinc1,c
  5848  010758  0E00               	movlw	0
  5849  01075A  6EE6               	movwf	postinc1,c
  5850  01075C  0E00               	movlw	0
  5851  01075E  6EE6               	movwf	postinc1,c
  5852  010760  ECCB  F0FE         	call	_spinners	;wreg free
  5853  010764  502A               	movf	btemp^0,w,c
  5854  010766  6EE6               	movwf	postinc1,c
  5855  010768  0E00               	movlw	0
  5856  01076A  6EE6               	movwf	postinc1,c
  5857  01076C  0E19               	movlw	low STR_24
  5858  01076E  6EE6               	movwf	postinc1,c
  5859  010770  0EFE               	movlw	high STR_24
  5860  010772  6EE6               	movwf	postinc1,c
  5861  010774  0E00               	movlw	0
  5862  010776  6EE6               	movwf	postinc1,c
  5863  010778  0E02               	movlw	2
  5864  01077A  6EE6               	movwf	postinc1,c
  5865  01077C  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5866  010780  0060  F0AB  FFE6   	movff	btemp,postinc1
  5867  010786  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5868  01078C  0E08               	movlw	8
  5869  01078E  6EE6               	movwf	postinc1,c
  5870  010790  EC4F  F0FD         	call	_sprintf	;wreg free
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;main.c: 327:     update_lcd(0);
  5874  010794  0E00               	movlw	0
  5875  010796  6EE6               	movwf	postinc1,c
  5876  010798  EC01  F0F6         	call	_update_lcd	;wreg free
  5877                           
  5878                           ;main.c: 329:     if (i_esr++ > 512)
  5879                           ;stkvar	_i_esr @ sp[(-17)+8]
  5880  01079C  50E1               	movf	fsr1l,w,c
  5881  01079E  0FF7               	addlw	-9
  5882  0107A0  6ED9               	movwf	fsr2l,c
  5883  0107A2  50E2               	movf	fsr1h,w,c
  5884  0107A4  6EDA               	movwf	fsr2h,c
  5885  0107A6  0EFF               	movlw	255
  5886  0107A8  22DA               	addwfc	fsr2h,f,c
  5887  0107AA  006F FF7C  F034    	movff	indf2,btemp+10
  5888  0107B0  0E01               	movlw	1
  5889  0107B2  26DE               	addwf	postinc2,f,c
  5890  0107B4  006F FF7C  F035    	movff	indf2,btemp+11
  5891  0107BA  0E00               	movlw	0
  5892  0107BC  22DD               	addwfc	postdec2,f,c
  5893  0107BE  0434               	decf	(btemp+10)^0,w,c
  5894  0107C0  0E02               	movlw	2
  5895  0107C2  5835               	subwfb	(btemp+11)^0,w,c
  5896  0107C4  B0D8               	btfsc	status,0,c
  5897  0107C6  D017               	goto	u17090
  5898  0107C8                     l17572:
  5899                           
  5900                           ;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0) {
  5901  0107C8  0E00               	movlw	0
  5902  0107CA  6EE6               	movwf	postinc1,c
  5903  0107CC  EC9C  F0DB         	call	_esr_check	;wreg free
  5904                           
  5905                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5906  0107D0  0EF3               	movlw	-13
  5907  0107D2  0060  F0AB  FFE3   	movff	btemp,plusw1
  5908  0107D8  0EF4               	movlw	-12
  5909  0107DA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  5910  0107E0  0EF5               	movlw	-11
  5911  0107E2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  5912  0107E8  0EF6               	movlw	-10
  5913  0107EA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  5914  0107F0  0EF6               	movlw	-10
  5915  0107F2  BEE3               	btfsc	plusw1,7,c
  5916  0107F4  D77C               	goto	l17560
  5917  0107F6                     u17090:
  5918                           
  5919                           ;main.c: 332:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  5920  0107F6  EE22  F187         	lfsr	2,_C+136	;volatile
  5921  0107FA  006F FF7B FFE6     	movff	postinc2,postinc1
  5922  010800  006F FF7B FFE6     	movff	postinc2,postinc1
  5923  010806  006F FF7B FFE6     	movff	postinc2,postinc1
  5924  01080C  006F FF7B FFE6     	movff	postinc2,postinc1
  5925  010812  0ECE               	movlw	low STR_25
  5926  010814  6EE6               	movwf	postinc1,c
  5927  010816  0EFB               	movlw	high STR_25
  5928  010818  6EE6               	movwf	postinc1,c
  5929  01081A  0E00               	movlw	0
  5930  01081C  6EE6               	movwf	postinc1,c
  5931  01081E  0E00               	movlw	0
  5932  010820  6EE6               	movwf	postinc1,c
  5933  010822  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5934  010826  0060  F0AB  FFE6   	movff	btemp,postinc1
  5935  01082C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5936  010832  0E08               	movlw	8
  5937  010834  6EE6               	movwf	postinc1,c
  5938  010836  EC4F  F0FD         	call	_sprintf	;wreg free
  5939                           
  5940                           ;main.c: 333:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  5941  01083A  EE22  F219         	lfsr	2,_C+282	;volatile
  5942  01083E  006F FF7B FFE6     	movff	postinc2,postinc1
  5943  010844  006F FF7B FFE6     	movff	postinc2,postinc1
  5944  01084A  006F FF7B FFE6     	movff	postinc2,postinc1
  5945  010850  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010856  EE22  F225         	lfsr	2,_C+294	;volatile
  5947  01085A  006F FF7B FFE6     	movff	postinc2,postinc1
  5948  010860  006F FF7B FFE6     	movff	postinc2,postinc1
  5949  010866  006F FF7B FFE6     	movff	postinc2,postinc1
  5950  01086C  006F FF7B FFE6     	movff	postinc2,postinc1
  5951  010872  0ED5               	movlw	low STR_26
  5952  010874  6EE6               	movwf	postinc1,c
  5953  010876  0EFA               	movlw	high STR_26
  5954  010878  6EE6               	movwf	postinc1,c
  5955  01087A  0E00               	movlw	0
  5956  01087C  6EE6               	movwf	postinc1,c
  5957  01087E  0E01               	movlw	1
  5958  010880  6EE6               	movwf	postinc1,c
  5959  010882  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5960  010886  0060  F0AB  FFE6   	movff	btemp,postinc1
  5961  01088C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5962  010892  0E0C               	movlw	12
  5963  010894  6EE6               	movwf	postinc1,c
  5964  010896  EC4F  F0FD         	call	_sprintf	;wreg free
  5965                           
  5966                           ;main.c: 334:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  5967  01089A  EE22  F21D         	lfsr	2,_C+286	;volatile
  5968  01089E  006F FF7B FFE6     	movff	postinc2,postinc1
  5969  0108A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5970  0108AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5971  0108B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5972  0108B6  EE22  F229         	lfsr	2,_C+298	;volatile
  5973  0108BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5974  0108C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5975  0108C6  006F FF7B FFE6     	movff	postinc2,postinc1
  5976  0108CC  006F FF7B FFE6     	movff	postinc2,postinc1
  5977  0108D2  0EF0               	movlw	low STR_27
  5978  0108D4  6EE6               	movwf	postinc1,c
  5979  0108D6  0EFA               	movlw	high STR_27
  5980  0108D8  6EE6               	movwf	postinc1,c
  5981  0108DA  0E00               	movlw	0
  5982  0108DC  6EE6               	movwf	postinc1,c
  5983  0108DE  0E02               	movlw	2
  5984  0108E0  6EE6               	movwf	postinc1,c
  5985  0108E2  EC81  F011         	call	_get_vterm_ptr	;wreg free
  5986  0108E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5987  0108EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5988  0108F2  0E0C               	movlw	12
  5989  0108F4  6EE6               	movwf	postinc1,c
  5990  0108F6  EC4F  F0FD         	call	_sprintf	;wreg free
  5991                           
  5992                           ;main.c: 335:    update_lcd(0);
  5993  0108FA  0E00               	movlw	0
  5994  0108FC  6EE6               	movwf	postinc1,c
  5995  0108FE  EC01  F0F6         	call	_update_lcd	;wreg free
  5996                           
  5997                           ;main.c: 336:    WaitMs(4000);
  5998  010902  0EA0               	movlw	160
  5999  010904  6EE6               	movwf	postinc1,c
  6000  010906  0E0F               	movlw	15
  6001  010908  6EE6               	movwf	postinc1,c
  6002  01090A  EC85  F010         	call	_WaitMs	;wreg free
  6003                           
  6004                           ;main.c: 337:    V.sensor_set = get_switch(SCALIB);
  6005  01090E  0E04               	movlw	4
  6006  010910  6EE6               	movwf	postinc1,c
  6007  010912  EC98  F011         	call	_get_switch	;wreg free
  6008  010916  502A               	movf	btemp^0,w,c
  6009  010918  B4D8               	btfsc	status,2,c
  6010  01091A  D002               	goto	u17100
  6011  01091C  0E01               	movlw	1
  6012  01091E  D001               	goto	u17110
  6013  010920                     u17100:
  6014  010920  0E00               	movlw	0
  6015  010922                     u17110:
  6016  010922  0102               	movlb	2	; () banked
  6017  010924  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  6018                           
  6019                           ; BSR set to: 2
  6020                           ;main.c: 338:    WaitMs(1000);
  6021  010926  0EE8               	movlw	232
  6022  010928  6EE6               	movwf	postinc1,c
  6023  01092A  0E03               	movlw	3
  6024  01092C  6EE6               	movwf	postinc1,c
  6025  01092E  EC85  F010         	call	_WaitMs	;wreg free
  6026                           
  6027                           ;main.c: 339:    if (V.sensor_set && get_switch(SCALIB)) {
  6028  010932  0102               	movlb	2	; () banked
  6029  010934  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6030  010936  B4D8               	btfsc	status,2,c
  6031  010938  D00F               	goto	l17590
  6032                           
  6033                           ; BSR set to: 2
  6034  01093A  0E04               	movlw	4
  6035  01093C  6EE6               	movwf	postinc1,c
  6036  01093E  EC98  F011         	call	_get_switch	;wreg free
  6037  010942  502A               	movf	btemp^0,w,c
  6038  010944  B4D8               	btfsc	status,2,c
  6039  010946  D008               	goto	l17590
  6040                           
  6041                           ;main.c: 340:     current_sensor_cal();
  6042  010948  EC14  F0C8         	call	_current_sensor_cal	;wreg free
  6043                           
  6044                           ;main.c: 341:     WaitMs(4000);
  6045  01094C  0EA0               	movlw	160
  6046  01094E  6EE6               	movwf	postinc1,c
  6047  010950  0E0F               	movlw	15
  6048  010952  6EE6               	movwf	postinc1,c
  6049  010954  EC85  F010         	call	_WaitMs	;wreg free
  6050  010958                     l17590:
  6051                           
  6052                           ;main.c: 343:    V.sensor_set = 0;
  6053  010958  0102               	movlb	2	; () banked
  6054  01095A  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6055                           
  6056                           ; BSR set to: 2
  6057                           ;main.c: 344:    V.system_stable = 1;
  6058  01095C  0E01               	movlw	1
  6059  01095E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6060                           
  6061                           ;main.c: 345:    break;
  6062  010960  D01D               	goto	l17598
  6063  010962                     l1475:
  6064                           
  6065                           ; BSR set to: 2
  6066                           ;main.c: 351:    P.SYSTEM_STABLE = 1;
  6067  010962  0100               	movlb	0	; () banked
  6068  010964  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6069                           
  6070                           ;main.c: 352:    break;
  6071  010966  D01A               	goto	l17598
  6072  010968                     l1477:
  6073                           
  6074                           ; BSR set to: 2
  6075                           ;main.c: 355:    V.ui_state = UI_STATE_INIT;
  6076  010968  6B07               	clrf	_V& (0+255),b	;volatile
  6077                           
  6078                           ;main.c: 356:    break;
  6079  01096A  D018               	goto	l17598
  6080  01096C                     l17596:
  6081  01096C  0102               	movlb	2	; () banked
  6082  01096E  5107               	movf	_V& (0+255),w,b	;volatile
  6083  010970  6E34               	movwf	(btemp+10)^0,c
  6084  010972  6A35               	clrf	(btemp+11)^0,c
  6085                           
  6086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6087                           ; Switch size 1, requested type "simple"
  6088                           ; Number of cases is 1, Range of values is 0 to 0
  6089                           ; switch strategies available:
  6090                           ; Name         Instructions Cycles
  6091                           ; simple_byte            4     3 (average)
  6092                           ;	Chosen strategy is simple_byte
  6093  010974  5035               	movf	(btemp+11)^0,w,c
  6094  010976  0A00               	xorlw	0	; case 0
  6095  010978  A4D8               	btfss	status,2,c
  6096  01097A  D7F6               	goto	l1477
  6097                           
  6098                           ; BSR set to: 2
  6099                           ; Switch size 1, requested type "simple"
  6100                           ; Number of cases is 5, Range of values is 0 to 5
  6101                           ; switch strategies available:
  6102                           ; Name         Instructions Cycles
  6103                           ; simple_byte           16     9 (average)
  6104                           ;	Chosen strategy is simple_byte
  6105  01097C  5034               	movf	(btemp+10)^0,w,c
  6106  01097E  0A00               	xorlw	0	; case 0
  6107  010980  B4D8               	btfsc	status,2,c
  6108  010982  EF3D  F080         	goto	l17432
  6109  010986  0A01               	xorlw	1	; case 1
  6110  010988  B4D8               	btfsc	status,2,c
  6111  01098A  D008               	goto	l17598
  6112  01098C  0A02               	xorlw	2	; case 3
  6113  01098E  B4D8               	btfsc	status,2,c
  6114  010990  D005               	goto	l17598
  6115  010992  0A07               	xorlw	7	; case 4
  6116  010994  B4D8               	btfsc	status,2,c
  6117  010996  D7E5               	goto	l1475
  6118  010998  0A01               	xorlw	1	; case 5
  6119  01099A  D7E6               	goto	l1477
  6120  01099C                     l17598:
  6121                           
  6122                           ;main.c: 359:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6123  01099C  0E01               	movlw	1
  6124  01099E  6EE6               	movwf	postinc1,c
  6125  0109A0  EC03  F012         	call	_TimerDone	;wreg free
  6126  0109A4  502A               	movf	btemp^0,w,c
  6127  0109A6  B4D8               	btfsc	status,2,c
  6128  0109A8  D013               	goto	l17610
  6129  0109AA  EC01  F015         	call	_check_adc_scan	;wreg free
  6130  0109AE  502A               	movf	btemp^0,w,c
  6131  0109B0  B4D8               	btfsc	status,2,c
  6132  0109B2  D00E               	goto	l17610
  6133                           
  6134                           ;main.c: 363:    convert_adc_data();
  6135  0109B4  EC9F  F003         	call	_convert_adc_data	;wreg free
  6136                           
  6137                           ;main.c: 367:    clear_adc_scan();
  6138  0109B8  EC1B  F015         	call	_clear_adc_scan	;wreg free
  6139                           
  6140                           ; BSR set to: 1
  6141                           ;main.c: 368:    start_adc_scan();
  6142  0109BC  ECB7  F00B         	call	_start_adc_scan	;wreg free
  6143                           
  6144                           ;main.c: 369:    StartTimer(TMR_ADC, 200);
  6145  0109C0  0EC8               	movlw	200
  6146  0109C2  6EE6               	movwf	postinc1,c
  6147  0109C4  0E00               	movlw	0
  6148  0109C6  6EE6               	movwf	postinc1,c
  6149  0109C8  0E01               	movlw	1
  6150  0109CA  6EE6               	movwf	postinc1,c
  6151  0109CC  EC78  F00F         	call	_StartTimer	;wreg free
  6152  0109D0                     l17610:
  6153                           
  6154                           ;main.c: 372:   if (TimerDone(TMR_DISPLAY)) {
  6155  0109D0  0E0A               	movlw	10
  6156  0109D2  6EE6               	movwf	postinc1,c
  6157  0109D4  EC03  F012         	call	_TimerDone	;wreg free
  6158  0109D8  502A               	movf	btemp^0,w,c
  6159  0109DA  B4D8               	btfsc	status,2,c
  6160  0109DC  EFB0  F08A         	goto	l17720
  6161                           
  6162                           ;main.c: 373:    if (TimerDone(TMR_HELPDIS)) {
  6163  0109E0  0E09               	movlw	9
  6164  0109E2  6EE6               	movwf	postinc1,c
  6165  0109E4  EC03  F012         	call	_TimerDone	;wreg free
  6166  0109E8  502A               	movf	btemp^0,w,c
  6167  0109EA  B4D8               	btfsc	status,2,c
  6168  0109EC  D004               	goto	l17616
  6169                           
  6170                           ;main.c: 374:     set_display_info(DIS_STR);
  6171  0109EE  0E00               	movlw	0
  6172  0109F0  6EE6               	movwf	postinc1,c
  6173  0109F2  EC08  F014         	call	_set_display_info	;wreg free
  6174  0109F6                     l17616:
  6175                           
  6176                           ;main.c: 376:    pclock = time(((void*)0));
  6177  0109F6  0E00               	movlw	0
  6178  0109F8  6EE6               	movwf	postinc1,c
  6179  0109FA  0E00               	movlw	0
  6180  0109FC  6EE6               	movwf	postinc1,c
  6181  0109FE  EC7B  F00C         	call	_time	;wreg free
  6182  010A02  52E5               	movf	postdec1,f,c
  6183  010A04  006F FF9C  F041    	movff	indf1,btemp+23
  6184  010A0A  52E5               	movf	postdec1,f,c
  6185  010A0C  006F FF9C  F040    	movff	indf1,btemp+22
  6186  010A12  52E5               	movf	postdec1,f,c
  6187  010A14  006F FF9C  F03F    	movff	indf1,btemp+21
  6188  010A1A  52E5               	movf	postdec1,f,c
  6189  010A1C  006F FF9C  F03E    	movff	indf1,btemp+20
  6190  010A22  52E5               	movf	postdec1,f,c
  6191  010A24  006F FF9C  F03D    	movff	indf1,btemp+19
  6192  010A2A  52E5               	movf	postdec1,f,c
  6193  010A2C  006F FF9C  F03C    	movff	indf1,btemp+18
  6194  010A32  52E5               	movf	postdec1,f,c
  6195  010A34  006F FF9C  F03B    	movff	indf1,btemp+17
  6196  010A3A  52E5               	movf	postdec1,f,c
  6197  010A3C  006F FF9C  F03A    	movff	indf1,btemp+16
  6198  010A42  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6199  010A48  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6200  010A4E  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6201  010A54  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6202  010A5A  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6203  010A60  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6204  010A66  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6205  010A6C  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6206                           
  6207                           ; BSR set to: 57
  6208                           ;main.c: 377:    t_mbmc = localtime(&pclock);
  6209  010A72  0EDA               	movlw	_pclock& (0+255)
  6210  010A74  6EE6               	movwf	postinc1,c
  6211  010A76  EC49  F014         	call	_localtime	;wreg free
  6212  010A7A  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6213  010A80  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6214                           
  6215                           ;main.c: 378:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6216  010A86  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6217  010A8C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6218  010A92  ECEB  F0C0         	call	_asctime	;wreg free
  6219  010A96  0060  F0AB  FFE6   	movff	btemp,postinc1
  6220  010A9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6221  010AA2  0E76               	movlw	low (STR_76+5)
  6222  010AA4  6EE6               	movwf	postinc1,c
  6223  010AA6  0EFF               	movlw	high (STR_76+5)
  6224  010AA8  6EE6               	movwf	postinc1,c
  6225  010AAA  0E00               	movlw	0
  6226  010AAC  6EE6               	movwf	postinc1,c
  6227  010AAE  0E03               	movlw	3
  6228  010AB0  6EE6               	movwf	postinc1,c
  6229  010AB2  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6230  010AB6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6231  010ABC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6232  010AC2  0E06               	movlw	6
  6233  010AC4  6EE6               	movwf	postinc1,c
  6234  010AC6  EC4F  F0FD         	call	_sprintf	;wreg free
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;main.c: 379:    calc_model_data();
  6238  010ACA  EC81  F0CC         	call	_calc_model_data	;wreg free
  6239                           
  6240                           ; BSR set to: 57
  6241                           ;main.c: 380:    if (C.dupdate) {
  6242  010ACE  EE22  F22E         	lfsr	2,_C+303	;volatile
  6243  010AD2  50DF               	movf	indf2,w,c
  6244  010AD4  B4D8               	btfsc	status,2,c
  6245  010AD6  D0A4               	goto	l17646
  6246                           
  6247                           ; BSR set to: 57
  6248                           ;main.c: 381:     C.dupdate = 0;
  6249  010AD8  0E00               	movlw	0
  6250  010ADA  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
  6251                           
  6252                           ;main.c: 382:     set_hist_flag();
  6253  010AE0  EC15  F015         	call	_set_hist_flag	;wreg free
  6254                           
  6255                           ; BSR set to: 1
  6256                           ;main.c: 383:     load_hist_data();
  6257  010AE4  EC4E  F0CA         	call	_load_hist_data	;wreg free
  6258                           
  6259                           ; BSR set to: 57
  6260                           ;main.c: 384:     update_hist_data(0, &C.hist[0]);
  6261  010AE8  0EB8               	movlw	low (_C+185)
  6262  010AEA  6EE6               	movwf	postinc1,c
  6263  010AEC  0E09               	movlw	high (_C+185)
  6264  010AEE  6EE6               	movwf	postinc1,c
  6265  010AF0  0E00               	movlw	0
  6266  010AF2  6EE6               	movwf	postinc1,c
  6267  010AF4  EC5C  F009         	call	_update_hist_data	;wreg free
  6268                           
  6269                           ;main.c: 385:     write_cal_data();
  6270  010AF8  EC5E  F0F7         	call	_write_cal_data	;wreg free
  6271                           
  6272                           ;main.c: 386:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6273  010AFC  0EB3               	movlw	low STR_29
  6274  010AFE  6EE6               	movwf	postinc1,c
  6275  010B00  0EFE               	movlw	high STR_29
  6276  010B02  6EE6               	movwf	postinc1,c
  6277  010B04  0E00               	movlw	0
  6278  010B06  6EE6               	movwf	postinc1,c
  6279  010B08  0E00               	movlw	0
  6280  010B0A  6EE6               	movwf	postinc1,c
  6281  010B0C  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6282  010B10  0060  F0AB  FFE6   	movff	btemp,postinc1
  6283  010B16  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6284  010B1C  0E04               	movlw	4
  6285  010B1E  6EE6               	movwf	postinc1,c
  6286  010B20  EC4F  F0FD         	call	_sprintf	;wreg free
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;main.c: 387:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  6290  010B24  0E7F               	movlw	low STR_30
  6291  010B26  6EE6               	movwf	postinc1,c
  6292  010B28  0EFD               	movlw	high STR_30
  6293  010B2A  6EE6               	movwf	postinc1,c
  6294  010B2C  0E00               	movlw	0
  6295  010B2E  6EE6               	movwf	postinc1,c
  6296  010B30  0E01               	movlw	1
  6297  010B32  6EE6               	movwf	postinc1,c
  6298  010B34  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6299  010B38  0060  F0AB  FFE6   	movff	btemp,postinc1
  6300  010B3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6301  010B44  0E04               	movlw	4
  6302  010B46  6EE6               	movwf	postinc1,c
  6303  010B48  EC4F  F0FD         	call	_sprintf	;wreg free
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;main.c: 388:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  6307  010B4C  EE22  F1C4         	lfsr	2,_C+197	;volatile
  6308  010B50  006F FF7B FFE6     	movff	postinc2,postinc1
  6309  010B56  006F FF7B FFE6     	movff	postinc2,postinc1
  6310  010B5C  006F FF7B FFE6     	movff	postinc2,postinc1
  6311  010B62  006F FF7B FFE6     	movff	postinc2,postinc1
  6312  010B68  0E00               	movlw	0
  6313  010B6A  6EE6               	movwf	postinc1,c
  6314  010B6C  0E00               	movlw	0
  6315  010B6E  6EE6               	movwf	postinc1,c
  6316  010B70  EC7B  F00C         	call	_time	;wreg free
  6317  010B74  52E5               	movf	postdec1,f,c
  6318  010B76  006F FF9C  F041    	movff	indf1,btemp+23
  6319  010B7C  52E5               	movf	postdec1,f,c
  6320  010B7E  006F FF9C  F040    	movff	indf1,btemp+22
  6321  010B84  52E5               	movf	postdec1,f,c
  6322  010B86  006F FF9C  F03F    	movff	indf1,btemp+21
  6323  010B8C  52E5               	movf	postdec1,f,c
  6324  010B8E  006F FF9C  F03E    	movff	indf1,btemp+20
  6325  010B94  52E5               	movf	postdec1,f,c
  6326  010B96  006F FF9C  F03D    	movff	indf1,btemp+19
  6327  010B9C  52E5               	movf	postdec1,f,c
  6328  010B9E  006F FF9C  F03C    	movff	indf1,btemp+18
  6329  010BA4  52E5               	movf	postdec1,f,c
  6330  010BA6  006F FF9C  F03B    	movff	indf1,btemp+17
  6331  010BAC  52E5               	movf	postdec1,f,c
  6332  010BAE  006F FF9C  F03A    	movff	indf1,btemp+16
  6333  010BB4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6334  010BBA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6335  010BC0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6336  010BC6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6337  010BCC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6338  010BD2  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6339  010BD8  0060  F103  FFE6   	movff	btemp+22,postinc1
  6340  010BDE  0060  F107  FFE6   	movff	btemp+23,postinc1
  6341  010BE4  0E2F               	movlw	low STR_31
  6342  010BE6  6EE6               	movwf	postinc1,c
  6343  010BE8  0EFE               	movlw	high STR_31
  6344  010BEA  6EE6               	movwf	postinc1,c
  6345  010BEC  0E00               	movlw	0
  6346  010BEE  6EE6               	movwf	postinc1,c
  6347  010BF0  0E02               	movlw	2
  6348  010BF2  6EE6               	movwf	postinc1,c
  6349  010BF4  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6350  010BF8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6351  010BFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6352  010C04  0E10               	movlw	16
  6353  010C06  6EE6               	movwf	postinc1,c
  6354  010C08  EC4F  F0FD         	call	_sprintf	;wreg free
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;main.c: 389:     update_lcd(0);
  6358  010C0C  0E00               	movlw	0
  6359  010C0E  6EE6               	movwf	postinc1,c
  6360  010C10  EC01  F0F6         	call	_update_lcd	;wreg free
  6361                           
  6362                           ;main.c: 390:     WaitMs(2000);
  6363  010C14  0ED0               	movlw	208
  6364  010C16  6EE6               	movwf	postinc1,c
  6365  010C18  0E07               	movlw	7
  6366  010C1A  6EE6               	movwf	postinc1,c
  6367  010C1C  EC85  F010         	call	_WaitMs	;wreg free
  6368  010C20                     l17646:
  6369                           
  6370                           ;main.c: 398:     hid_display(&H);
  6371  010C20  0E9B               	movlw	low _H
  6372  010C22  6EE6               	movwf	postinc1,c
  6373  010C24  0E01               	movlw	high _H
  6374  010C26  6EE6               	movwf	postinc1,c
  6375  010C28  ECEE  F0E8         	call	_hid_display	;wreg free
  6376                           
  6377                           ;main.c: 399:     switch (H.hid_display) {
  6378  010C2C  EF41  F08A         	goto	l17690
  6379  010C30                     l1485:
  6380                           
  6381                           ; BSR set to: 1
  6382                           ;main.c: 401:      V.calib = 0;
  6383  010C30  0102               	movlb	2	; () banked
  6384  010C32  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6385                           
  6386                           ; BSR set to: 2
  6387                           ;main.c: 402:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  6388  010C34  EE22  F22D         	lfsr	2,_C+302	;volatile
  6389  010C38  50DF               	movf	indf2,w,c
  6390  010C3A  A4D8               	btfss	status,2,c
  6391  010C3C  D002               	goto	l17652
  6392                           
  6393                           ; BSR set to: 2
  6394  010C3E  0E20               	movlw	32
  6395  010C40  D001               	goto	L1
  6396  010C42                     l17652:
  6397                           
  6398                           ; BSR set to: 2
  6399  010C42  0E44               	movlw	68
  6400  010C44                     L1:
  6401  010C44  6E34               	movwf	(btemp+10)^0,c
  6402  010C46  0E00               	movlw	0
  6403  010C48  6E35               	movwf	(btemp+11)^0,c
  6404                           
  6405                           ;stkvar	_main$4035 @ sp[(-17)+2]
  6406  010C4A  0EF1               	movlw	-15
  6407  010C4C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6408  010C52  0EF2               	movlw	-14
  6409  010C54  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6410                           
  6411                           ; BSR set to: 2
  6412  010C5A  EE22  F17B         	lfsr	2,_C+124	;volatile
  6413  010C5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6414  010C64  006F FF7B FFE6     	movff	postinc2,postinc1
  6415  010C6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6416  010C70  006F FF7B FFE6     	movff	postinc2,postinc1
  6417                           
  6418                           ;stkvar	_main$4035 @ sp[(-21)+2]
  6419  010C76  0EED               	movlw	-19
  6420  010C78  006F FF8F FFE6     	movff	plusw1,postinc1
  6421  010C7E  006F FF8F FFE6     	movff	plusw1,postinc1
  6422  010C84  0EB4               	movlw	low STR_35
  6423  010C86  6EE6               	movwf	postinc1,c
  6424  010C88  0EFC               	movlw	high STR_35
  6425  010C8A  6EE6               	movwf	postinc1,c
  6426  010C8C  0E00               	movlw	0
  6427  010C8E  6EE6               	movwf	postinc1,c
  6428  010C90  0E00               	movlw	0
  6429  010C92  6EE6               	movwf	postinc1,c
  6430  010C94  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6431  010C98  0060  F0AB  FFE6   	movff	btemp,postinc1
  6432  010C9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6433  010CA4  0E0A               	movlw	10
  6434  010CA6  6EE6               	movwf	postinc1,c
  6435  010CA8  EC4F  F0FD         	call	_sprintf	;wreg free
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;main.c: 403:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  6439  010CAC  EE22  F173         	lfsr	2,_C+116	;volatile
  6440  010CB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6441  010CB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6442  010CBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6443  010CC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6444  010CC8  0E9D               	movlw	low STR_36
  6445  010CCA  6EE6               	movwf	postinc1,c
  6446  010CCC  0EFC               	movlw	high STR_36
  6447  010CCE  6EE6               	movwf	postinc1,c
  6448  010CD0  0E00               	movlw	0
  6449  010CD2  6EE6               	movwf	postinc1,c
  6450  010CD4  0E01               	movlw	1
  6451  010CD6  6EE6               	movwf	postinc1,c
  6452  010CD8  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6453  010CDC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6454  010CE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6455  010CE8  0E08               	movlw	8
  6456  010CEA  6EE6               	movwf	postinc1,c
  6457  010CEC  EC4F  F0FD         	call	_sprintf	;wreg free
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;main.c: 404:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  6461  010CF0  EE22  F177         	lfsr	2,_C+120	;volatile
  6462  010CF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6463  010CFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6464  010D00  006F FF7B FFE6     	movff	postinc2,postinc1
  6465  010D06  006F FF7B FFE6     	movff	postinc2,postinc1
  6466  010D0C  0E86               	movlw	low STR_37
  6467  010D0E  6EE6               	movwf	postinc1,c
  6468  010D10  0EFC               	movlw	high STR_37
  6469  010D12  6EE6               	movwf	postinc1,c
  6470  010D14  0E00               	movlw	0
  6471  010D16  6EE6               	movwf	postinc1,c
  6472  010D18  0E02               	movlw	2
  6473  010D1A  6EE6               	movwf	postinc1,c
  6474  010D1C  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6475  010D20  0060  F0AB  FFE6   	movff	btemp,postinc1
  6476  010D26  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6477  010D2C  0E08               	movlw	8
  6478  010D2E  6EE6               	movwf	postinc1,c
  6479  010D30  EC4F  F0FD         	call	_sprintf	;wreg free
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  6483  010D34  EE22  F22D         	lfsr	2,_C+302	;volatile
  6484  010D38  50DF               	movf	indf2,w,c
  6485  010D3A  A4D8               	btfss	status,2,c
  6486  010D3C  D002               	goto	l17664
  6487                           
  6488                           ; BSR set to: 0
  6489  010D3E  0E20               	movlw	32
  6490  010D40  D001               	goto	L2
  6491  010D42                     l17664:
  6492                           
  6493                           ; BSR set to: 0
  6494  010D42  0E44               	movlw	68
  6495  010D44                     L2:
  6496  010D44  6E34               	movwf	(btemp+10)^0,c
  6497  010D46  0E00               	movlw	0
  6498  010D48  6E35               	movwf	(btemp+11)^0,c
  6499                           
  6500                           ;stkvar	_main$4039 @ sp[(-17)+0]
  6501  010D4A  0EEF               	movlw	-17
  6502  010D4C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6503  010D52  0EF0               	movlw	-16
  6504  010D54  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6505                           
  6506                           ; BSR set to: 0
  6507  010D5A  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6508  010D5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6509  010D64  006F FF7B FFE6     	movff	postinc2,postinc1
  6510  010D6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6511  010D70  006F FF7B FFE6     	movff	postinc2,postinc1
  6512                           
  6513                           ;stkvar	_main$4039 @ sp[(-21)+0]
  6514  010D76  0EEB               	movlw	-21
  6515  010D78  006F FF8F FFE6     	movff	plusw1,postinc1
  6516  010D7E  006F FF8F FFE6     	movff	plusw1,postinc1
  6517  010D84  0E6F               	movlw	low STR_38
  6518  010D86  6EE6               	movwf	postinc1,c
  6519  010D88  0EFC               	movlw	high STR_38
  6520  010D8A  6EE6               	movwf	postinc1,c
  6521  010D8C  0E01               	movlw	1
  6522  010D8E  6EE6               	movwf	postinc1,c
  6523  010D90  0E00               	movlw	0
  6524  010D92  6EE6               	movwf	postinc1,c
  6525  010D94  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6526  010D98  0060  F0AB  FFE6   	movff	btemp,postinc1
  6527  010D9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6528  010DA4  0E0A               	movlw	10
  6529  010DA6  6EE6               	movwf	postinc1,c
  6530  010DA8  EC4F  F0FD         	call	_sprintf	;wreg free
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  6534  010DAC  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6535  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6536  010DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6537  010DBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6538  010DC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6539  010DC8  0E58               	movlw	low STR_39
  6540  010DCA  6EE6               	movwf	postinc1,c
  6541  010DCC  0EFC               	movlw	high STR_39
  6542  010DCE  6EE6               	movwf	postinc1,c
  6543  010DD0  0E01               	movlw	1
  6544  010DD2  6EE6               	movwf	postinc1,c
  6545  010DD4  0E01               	movlw	1
  6546  010DD6  6EE6               	movwf	postinc1,c
  6547  010DD8  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6548  010DDC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6549  010DE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6550  010DE8  0E08               	movlw	8
  6551  010DEA  6EE6               	movwf	postinc1,c
  6552  010DEC  EC4F  F0FD         	call	_sprintf	;wreg free
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  6556  010DF0  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6557  010DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6558  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6559  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  6560  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  6561  010E0C  0E41               	movlw	low STR_40
  6562  010E0E  6EE6               	movwf	postinc1,c
  6563  010E10  0EFC               	movlw	high STR_40
  6564  010E12  6EE6               	movwf	postinc1,c
  6565  010E14  0E01               	movlw	1
  6566  010E16  6EE6               	movwf	postinc1,c
  6567  010E18  0E02               	movlw	2
  6568  010E1A  6EE6               	movwf	postinc1,c
  6569  010E1C  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6570  010E20  0060  F0AB  FFE6   	movff	btemp,postinc1
  6571  010E26  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6572  010E2C  0E08               	movlw	8
  6573  010E2E  6EE6               	movwf	postinc1,c
  6574  010E30  EC4F  F0FD         	call	_sprintf	;wreg free
  6575                           
  6576                           ;main.c: 409:      break;
  6577  010E34  D33C               	goto	l17692
  6578  010E36                     l1495:
  6579                           
  6580                           ; BSR set to: 1
  6581                           ;main.c: 411:      V.calib = 0;
  6582  010E36  0102               	movlb	2	; () banked
  6583  010E38  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6584                           
  6585                           ; BSR set to: 2
  6586                           ;main.c: 412:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  6587  010E3A  EE22  F103         	lfsr	2,_C+4	;volatile
  6588  010E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6589  010E44  006F FF7B FFE6     	movff	postinc2,postinc1
  6590  010E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6591  010E50  006F FF7B FFE6     	movff	postinc2,postinc1
  6592  010E56  EE22  F113         	lfsr	2,_C+20	;volatile
  6593  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6594  010E60  006F FF7B FFE6     	movff	postinc2,postinc1
  6595  010E66  006F FF7B FFE6     	movff	postinc2,postinc1
  6596  010E6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6597  010E72  0E10               	movlw	low STR_41
  6598  010E74  6EE6               	movwf	postinc1,c
  6599  010E76  0EFD               	movlw	high STR_41
  6600  010E78  6EE6               	movwf	postinc1,c
  6601  010E7A  0E00               	movlw	0
  6602  010E7C  6EE6               	movwf	postinc1,c
  6603  010E7E  0E00               	movlw	0
  6604  010E80  6EE6               	movwf	postinc1,c
  6605  010E82  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6606  010E86  0060  F0AB  FFE6   	movff	btemp,postinc1
  6607  010E8C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6608  010E92  0E0C               	movlw	12
  6609  010E94  6EE6               	movwf	postinc1,c
  6610  010E96  EC4F  F0FD         	call	_sprintf	;wreg free
  6611                           
  6612                           ;main.c: 413:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  6613  010E9A  EE22  F0FF         	lfsr	2,_C
  6614  010E9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6615  010EA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6616  010EAA  006F FF7B FFE6     	movff	postinc2,postinc1
  6617  010EB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6618  010EB6  EE22  F10F         	lfsr	2,_C+16	;volatile
  6619  010EBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6620  010EC0  006F FF7B FFE6     	movff	postinc2,postinc1
  6621  010EC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6622  010ECC  006F FF7B FFE6     	movff	postinc2,postinc1
  6623  010ED2  0EE2               	movlw	low STR_42
  6624  010ED4  6EE6               	movwf	postinc1,c
  6625  010ED6  0EFC               	movlw	high STR_42
  6626  010ED8  6EE6               	movwf	postinc1,c
  6627  010EDA  0E00               	movlw	0
  6628  010EDC  6EE6               	movwf	postinc1,c
  6629  010EDE  0E01               	movlw	1
  6630  010EE0  6EE6               	movwf	postinc1,c
  6631  010EE2  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6632  010EE6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6633  010EEC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6634  010EF2  0E0C               	movlw	12
  6635  010EF4  6EE6               	movwf	postinc1,c
  6636  010EF6  EC4F  F0FD         	call	_sprintf	;wreg free
  6637                           
  6638                           ;main.c: 414:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  6639  010EFA  EE22  F13F         	lfsr	2,_C+64	;volatile
  6640  010EFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6641  010F04  006F FF7B FFE6     	movff	postinc2,postinc1
  6642  010F0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6643  010F10  006F FF7B FFE6     	movff	postinc2,postinc1
  6644  010F16  EE22  F107         	lfsr	2,_C+8	;volatile
  6645  010F1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6646  010F20  006F FF7B FFE6     	movff	postinc2,postinc1
  6647  010F26  006F FF7B FFE6     	movff	postinc2,postinc1
  6648  010F2C  006F FF7B FFE6     	movff	postinc2,postinc1
  6649  010F32  0EF9               	movlw	low STR_43
  6650  010F34  6EE6               	movwf	postinc1,c
  6651  010F36  0EFC               	movlw	high STR_43
  6652  010F38  6EE6               	movwf	postinc1,c
  6653  010F3A  0E00               	movlw	0
  6654  010F3C  6EE6               	movwf	postinc1,c
  6655  010F3E  0E02               	movlw	2
  6656  010F40  6EE6               	movwf	postinc1,c
  6657  010F42  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6658  010F46  0060  F0AB  FFE6   	movff	btemp,postinc1
  6659  010F4C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6660  010F52  0E0C               	movlw	12
  6661  010F54  6EE6               	movwf	postinc1,c
  6662  010F56  EC4F  F0FD         	call	_sprintf	;wreg free
  6663                           
  6664                           ;main.c: 416:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  6665  010F5A  EE22  F19F         	lfsr	2,_C+160	;volatile
  6666  010F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6667  010F64  006F FF7B FFE6     	movff	postinc2,postinc1
  6668  010F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6669  010F70  006F FF7B FFE6     	movff	postinc2,postinc1
  6670  010F76  0EFC               	movlw	low STR_44
  6671  010F78  6EE6               	movwf	postinc1,c
  6672  010F7A  0EFB               	movlw	high STR_44
  6673  010F7C  6EE6               	movwf	postinc1,c
  6674  010F7E  0E01               	movlw	1
  6675  010F80  6EE6               	movwf	postinc1,c
  6676  010F82  0E00               	movlw	0
  6677  010F84  6EE6               	movwf	postinc1,c
  6678  010F86  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6679  010F8A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6680  010F90  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6681  010F96  0E08               	movlw	8
  6682  010F98  6EE6               	movwf	postinc1,c
  6683  010F9A  EC4F  F0FD         	call	_sprintf	;wreg free
  6684                           
  6685                           ;main.c: 417:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  6686  010F9E  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6687  010FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6688  010FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6689  010FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6690  010FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6691  010FBA  0E13               	movlw	low STR_45
  6692  010FBC  6EE6               	movwf	postinc1,c
  6693  010FBE  0EFC               	movlw	high STR_45
  6694  010FC0  6EE6               	movwf	postinc1,c
  6695  010FC2  0E01               	movlw	1
  6696  010FC4  6EE6               	movwf	postinc1,c
  6697  010FC6  0E01               	movlw	1
  6698  010FC8  6EE6               	movwf	postinc1,c
  6699  010FCA  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6700  010FCE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6701  010FD4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6702  010FDA  0E08               	movlw	8
  6703  010FDC  6EE6               	movwf	postinc1,c
  6704  010FDE  EC4F  F0FD         	call	_sprintf	;wreg free
  6705                           
  6706                           ;main.c: 418:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  6707  010FE2  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6708  010FE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6709  010FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  6710  010FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  6711  010FF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6712  010FFE  EE22  F19F         	lfsr	2,_C+160	;volatile
  6713  011002  006F FF7B FFE6     	movff	postinc2,postinc1
  6714  011008  006F FF7B FFE6     	movff	postinc2,postinc1
  6715  01100E  006F FF7B FFE6     	movff	postinc2,postinc1
  6716  011014  006F FF7B FFE6     	movff	postinc2,postinc1
  6717  01101A  ECF2  F0B6         	call	___fladd	;wreg free
  6718  01101E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6719  011024  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6720  01102A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6721  011030  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6722  011036  0E2A               	movlw	low STR_46
  6723  011038  6EE6               	movwf	postinc1,c
  6724  01103A  0EFC               	movlw	high STR_46
  6725  01103C  6EE6               	movwf	postinc1,c
  6726  01103E  0E01               	movlw	1
  6727  011040  6EE6               	movwf	postinc1,c
  6728  011042  0E02               	movlw	2
  6729  011044  6EE6               	movwf	postinc1,c
  6730  011046  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6731  01104A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6732  011050  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6733  011056  0E08               	movlw	8
  6734  011058  6EE6               	movwf	postinc1,c
  6735  01105A  EC4F  F0FD         	call	_sprintf	;wreg free
  6736                           
  6737                           ;main.c: 419:      break;
  6738  01105E  D227               	goto	l17692
  6739  011060                     l1496:
  6740                           
  6741                           ; BSR set to: 1
  6742                           ;main.c: 421:      V.calib = 0;
  6743  011060  0102               	movlb	2	; () banked
  6744  011062  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6745                           
  6746                           ; BSR set to: 2
  6747                           ;main.c: 422:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  6748  011064  EE22  F17F         	lfsr	2,_C+128	;volatile
  6749  011068  006F FF7B FFE6     	movff	postinc2,postinc1
  6750  01106E  006F FF7B FFE6     	movff	postinc2,postinc1
  6751  011074  006F FF7B FFE6     	movff	postinc2,postinc1
  6752  01107A  006F FF7B FFE6     	movff	postinc2,postinc1
  6753  011080  0E57               	movlw	low STR_47
  6754  011082  6EE6               	movwf	postinc1,c
  6755  011084  0EFB               	movlw	high STR_47
  6756  011086  6EE6               	movwf	postinc1,c
  6757  011088  0E00               	movlw	0
  6758  01108A  6EE6               	movwf	postinc1,c
  6759  01108C  0E00               	movlw	0
  6760  01108E  6EE6               	movwf	postinc1,c
  6761  011090  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6762  011094  0060  F0AB  FFE6   	movff	btemp,postinc1
  6763  01109A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6764  0110A0  0E08               	movlw	8
  6765  0110A2  6EE6               	movwf	postinc1,c
  6766  0110A4  EC4F  F0FD         	call	_sprintf	;wreg free
  6767                           
  6768                           ;main.c: 423:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  6769  0110A8  EE22  F193         	lfsr	2,_C+148	;volatile
  6770  0110AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6771  0110B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6772  0110B8  006F FF7B FFE6     	movff	postinc2,postinc1
  6773  0110BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6774  0110C4  EE22  F18F         	lfsr	2,_C+144	;volatile
  6775  0110C8  006F FF7B FFE6     	movff	postinc2,postinc1
  6776  0110CE  006F FF7B FFE6     	movff	postinc2,postinc1
  6777  0110D4  006F FF7B FFE6     	movff	postinc2,postinc1
  6778  0110DA  006F FF7B FFE6     	movff	postinc2,postinc1
  6779  0110E0  0E9F               	movlw	low STR_48
  6780  0110E2  6EE6               	movwf	postinc1,c
  6781  0110E4  0EFB               	movlw	high STR_48
  6782  0110E6  6EE6               	movwf	postinc1,c
  6783  0110E8  0E00               	movlw	0
  6784  0110EA  6EE6               	movwf	postinc1,c
  6785  0110EC  0E01               	movlw	1
  6786  0110EE  6EE6               	movwf	postinc1,c
  6787  0110F0  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6788  0110F4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6789  0110FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6790  011100  0E0C               	movlw	12
  6791  011102  6EE6               	movwf	postinc1,c
  6792  011104  EC4F  F0FD         	call	_sprintf	;wreg free
  6793                           
  6794                           ;main.c: 424:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6795  011108  EE22  F10F         	lfsr	2,_C+16	;volatile
  6796  01110C  006F FF7B FFE6     	movff	postinc2,postinc1
  6797  011112  006F FF7B FFE6     	movff	postinc2,postinc1
  6798  011118  006F FF7B FFE6     	movff	postinc2,postinc1
  6799  01111E  006F FF7B FFE6     	movff	postinc2,postinc1
  6800  011124  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6801  011128  006F FF78  F034    	movff	postinc2,btemp+10
  6802  01112E  006F FF74  F035    	movff	postdec2,btemp+11
  6803  011134  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6804  01113A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6805  011140  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6806  011144  006F FF78  F034    	movff	postinc2,btemp+10
  6807  01114A  006F FF74  F035    	movff	postdec2,btemp+11
  6808  011150  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6809  011156  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6810  01115C  0E00               	movlw	0
  6811  01115E  6EE6               	movwf	postinc1,c
  6812  011160  0E05               	movlw	5
  6813  011162  6EE6               	movwf	postinc1,c
  6814  011164  ECCB  F0FE         	call	_spinners	;wreg free
  6815  011168  502A               	movf	btemp^0,w,c
  6816  01116A  6EE6               	movwf	postinc1,c
  6817  01116C  0E00               	movlw	0
  6818  01116E  6EE6               	movwf	postinc1,c
  6819  011170  0E9B               	movlw	low STR_49
  6820  011172  6EE6               	movwf	postinc1,c
  6821  011174  0EFA               	movlw	high STR_49
  6822  011176  6EE6               	movwf	postinc1,c
  6823  011178  0E00               	movlw	0
  6824  01117A  6EE6               	movwf	postinc1,c
  6825  01117C  0E02               	movlw	2
  6826  01117E  6EE6               	movwf	postinc1,c
  6827  011180  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6828  011184  0060  F0AB  FFE6   	movff	btemp,postinc1
  6829  01118A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6830  011190  0E0E               	movlw	14
  6831  011192  6EE6               	movwf	postinc1,c
  6832  011194  EC4F  F0FD         	call	_sprintf	;wreg free
  6833                           
  6834                           ;main.c: 426:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  6835  011198  EE22  F187         	lfsr	2,_C+136	;volatile
  6836  01119C  006F FF7B FFE6     	movff	postinc2,postinc1
  6837  0111A2  006F FF7B FFE6     	movff	postinc2,postinc1
  6838  0111A8  006F FF7B FFE6     	movff	postinc2,postinc1
  6839  0111AE  006F FF7B FFE6     	movff	postinc2,postinc1
  6840  0111B4  0E3F               	movlw	low STR_50
  6841  0111B6  6EE6               	movwf	postinc1,c
  6842  0111B8  0EFB               	movlw	high STR_50
  6843  0111BA  6EE6               	movwf	postinc1,c
  6844  0111BC  0E01               	movlw	1
  6845  0111BE  6EE6               	movwf	postinc1,c
  6846  0111C0  0E00               	movlw	0
  6847  0111C2  6EE6               	movwf	postinc1,c
  6848  0111C4  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6849  0111C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6850  0111CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6851  0111D4  0E08               	movlw	8
  6852  0111D6  6EE6               	movwf	postinc1,c
  6853  0111D8  EC4F  F0FD         	call	_sprintf	;wreg free
  6854                           
  6855                           ;main.c: 427:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  6856  0111DC  EE22  F219         	lfsr	2,_C+282	;volatile
  6857  0111E0  006F FF7B FFE6     	movff	postinc2,postinc1
  6858  0111E6  006F FF7B FFE6     	movff	postinc2,postinc1
  6859  0111EC  006F FF7B FFE6     	movff	postinc2,postinc1
  6860  0111F2  006F FF7B FFE6     	movff	postinc2,postinc1
  6861  0111F8  EE22  F225         	lfsr	2,_C+294	;volatile
  6862  0111FC  006F FF7B FFE6     	movff	postinc2,postinc1
  6863  011202  006F FF7B FFE6     	movff	postinc2,postinc1
  6864  011208  006F FF7B FFE6     	movff	postinc2,postinc1
  6865  01120E  006F FF7B FFE6     	movff	postinc2,postinc1
  6866  011214  0E6F               	movlw	low STR_51
  6867  011216  6EE6               	movwf	postinc1,c
  6868  011218  0EFB               	movlw	high STR_51
  6869  01121A  6EE6               	movwf	postinc1,c
  6870  01121C  0E01               	movlw	1
  6871  01121E  6EE6               	movwf	postinc1,c
  6872  011220  0E01               	movlw	1
  6873  011222  6EE6               	movwf	postinc1,c
  6874  011224  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6875  011228  0060  F0AB  FFE6   	movff	btemp,postinc1
  6876  01122E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6877  011234  0E0C               	movlw	12
  6878  011236  6EE6               	movwf	postinc1,c
  6879  011238  EC4F  F0FD         	call	_sprintf	;wreg free
  6880                           
  6881                           ;main.c: 428:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  6882  01123C  EE22  F21D         	lfsr	2,_C+286	;volatile
  6883  011240  006F FF7B FFE6     	movff	postinc2,postinc1
  6884  011246  006F FF7B FFE6     	movff	postinc2,postinc1
  6885  01124C  006F FF7B FFE6     	movff	postinc2,postinc1
  6886  011252  006F FF7B FFE6     	movff	postinc2,postinc1
  6887  011258  EE22  F229         	lfsr	2,_C+298	;volatile
  6888  01125C  006F FF7B FFE6     	movff	postinc2,postinc1
  6889  011262  006F FF7B FFE6     	movff	postinc2,postinc1
  6890  011268  006F FF7B FFE6     	movff	postinc2,postinc1
  6891  01126E  006F FF7B FFE6     	movff	postinc2,postinc1
  6892  011274  0E87               	movlw	low STR_52
  6893  011276  6EE6               	movwf	postinc1,c
  6894  011278  0EFB               	movlw	high STR_52
  6895  01127A  6EE6               	movwf	postinc1,c
  6896  01127C  0E01               	movlw	1
  6897  01127E  6EE6               	movwf	postinc1,c
  6898  011280  0E02               	movlw	2
  6899  011282  6EE6               	movwf	postinc1,c
  6900  011284  EC81  F011         	call	_get_vterm_ptr	;wreg free
  6901  011288  0060  F0AB  FFE6   	movff	btemp,postinc1
  6902  01128E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6903  011294  0E0C               	movlw	12
  6904  011296  6EE6               	movwf	postinc1,c
  6905  011298  EC4F  F0FD         	call	_sprintf	;wreg free
  6906                           
  6907                           ;main.c: 429:      break;
  6908  01129C  D108               	goto	l17692
  6909  01129E                     l17676:
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;main.c: 431:      if (!V.calib) {
  6913  01129E  0102               	movlb	2	; () banked
  6914  0112A0  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  6915  0112A2  A4D8               	btfss	status,2,c
  6916  0112A4  D02D               	goto	l17680
  6917                           
  6918                           ; BSR set to: 2
  6919                           ;main.c: 432:       lp_filter(0.0, i, -1);
  6920  0112A6  0EFF               	movlw	255
  6921  0112A8  6EE6               	movwf	postinc1,c
  6922                           
  6923                           ;stkvar	_i @ sp[(-18)+14]
  6924  0112AA  0EFC               	movlw	-4
  6925  0112AC  50E3               	movf	plusw1,w,c
  6926  0112AE  6EE6               	movwf	postinc1,c
  6927  0112B0  0E00               	movlw	0
  6928  0112B2  6EE6               	movwf	postinc1,c
  6929  0112B4  0E00               	movlw	0
  6930  0112B6  6EE6               	movwf	postinc1,c
  6931  0112B8  0E00               	movlw	0
  6932  0112BA  6EE6               	movwf	postinc1,c
  6933  0112BC  0E00               	movlw	0
  6934  0112BE  6EE6               	movwf	postinc1,c
  6935  0112C0  ECEC  F0EC         	call	_lp_filter	;wreg free
  6936                           
  6937                           ;main.c: 433:       lp_filter(0.0, j, -1);
  6938  0112C4  0EFF               	movlw	255
  6939  0112C6  6EE6               	movwf	postinc1,c
  6940                           
  6941                           ;stkvar	_j @ sp[(-18)+13]
  6942  0112C8  0EFB               	movlw	-5
  6943  0112CA  50E3               	movf	plusw1,w,c
  6944  0112CC  6EE6               	movwf	postinc1,c
  6945  0112CE  0E00               	movlw	0
  6946  0112D0  6EE6               	movwf	postinc1,c
  6947  0112D2  0E00               	movlw	0
  6948  0112D4  6EE6               	movwf	postinc1,c
  6949  0112D6  0E00               	movlw	0
  6950  0112D8  6EE6               	movwf	postinc1,c
  6951  0112DA  0E00               	movlw	0
  6952  0112DC  6EE6               	movwf	postinc1,c
  6953  0112DE  ECEC  F0EC         	call	_lp_filter	;wreg free
  6954                           
  6955                           ;main.c: 434:       lp_filter(0.0, k, -1);
  6956  0112E2  0EFF               	movlw	255
  6957  0112E4  6EE6               	movwf	postinc1,c
  6958                           
  6959                           ;stkvar	_k @ sp[(-18)+12]
  6960  0112E6  0EFA               	movlw	-6
  6961  0112E8  50E3               	movf	plusw1,w,c
  6962  0112EA  6EE6               	movwf	postinc1,c
  6963  0112EC  0E00               	movlw	0
  6964  0112EE  6EE6               	movwf	postinc1,c
  6965  0112F0  0E00               	movlw	0
  6966  0112F2  6EE6               	movwf	postinc1,c
  6967  0112F4  0E00               	movlw	0
  6968  0112F6  6EE6               	movwf	postinc1,c
  6969  0112F8  0E00               	movlw	0
  6970  0112FA  6EE6               	movwf	postinc1,c
  6971  0112FC  ECEC  F0EC         	call	_lp_filter	;wreg free
  6972  011300                     l17680:
  6973                           
  6974                           ;main.c: 436:      V.calib = 1;
  6975  011300  0E01               	movlw	1
  6976  011302  0102               	movlb	2	; () banked
  6977  011304  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  6978                           
  6979                           ; BSR set to: 2
  6980                           ;main.c: 437:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6981                           ;stkvar	_inp_index @ sp[(-17)+11]
  6982  011306  0EFA               	movlw	-6
  6983  011308  50E3               	movf	plusw1,w,c
  6984  01130A  6EE6               	movwf	postinc1,c
  6985  01130C  0E00               	movlw	0
  6986  01130E  6EE6               	movwf	postinc1,c
  6987                           
  6988                           ;stkvar	_i @ sp[(-19)+14]
  6989  011310  0EFB               	movlw	-5
  6990  011312  50E3               	movf	plusw1,w,c
  6991  011314  0D04               	mullw	4
  6992  011316  0EFF               	movlw	low _C
  6993  011318  24F3               	addwf	243,w,c
  6994  01131A  6ED9               	movwf	fsr2l,c
  6995  01131C  0E08               	movlw	high _C
  6996  01131E  20F4               	addwfc	prodh,w,c
  6997  011320  6EDA               	movwf	fsr2h,c
  6998  011322  006F FF7B FFE6     	movff	postinc2,postinc1
  6999  011328  006F FF7B FFE6     	movff	postinc2,postinc1
  7000  01132E  006F FF7B FFE6     	movff	postinc2,postinc1
  7001  011334  006F FF7B FFE6     	movff	postinc2,postinc1
  7002                           
  7003                           ;stkvar	_i @ sp[(-23)+14]
  7004  01133A  0EF7               	movlw	-9
  7005  01133C  50E3               	movf	plusw1,w,c
  7006  01133E  6EE6               	movwf	postinc1,c
  7007  011340  EC88  F013         	call	_get_raw_result	;wreg free
  7008  011344  0060  F0AB  FFE6   	movff	btemp,postinc1
  7009  01134A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7010  011350  0E87               	movlw	low STR_53
  7011  011352  6EE6               	movwf	postinc1,c
  7012  011354  0EFE               	movlw	high STR_53
  7013  011356  6EE6               	movwf	postinc1,c
  7014  011358  0E00               	movlw	0
  7015  01135A  6EE6               	movwf	postinc1,c
  7016  01135C  0E00               	movlw	0
  7017  01135E  6EE6               	movwf	postinc1,c
  7018  011360  EC81  F011         	call	_get_vterm_ptr	;wreg free
  7019  011364  0060  F0AB  FFE6   	movff	btemp,postinc1
  7020  01136A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7021  011370  0E0C               	movlw	12
  7022  011372  6EE6               	movwf	postinc1,c
  7023  011374  EC4F  F0FD         	call	_sprintf	;wreg free
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;main.c: 438:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  7027                           ;stkvar	_inp_index @ sp[(-17)+11]
  7028  011378  0EFA               	movlw	-6
  7029  01137A  50E3               	movf	plusw1,w,c
  7030  01137C  6E34               	movwf	(btemp+10)^0,c
  7031  01137E  6A35               	clrf	(btemp+11)^0,c
  7032  011380  0E01               	movlw	1
  7033  011382  2634               	addwf	(btemp+10)^0,f,c
  7034  011384  0E00               	movlw	0
  7035  011386  2235               	addwfc	(btemp+11)^0,f,c
  7036  011388  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7037  01138E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7038                           
  7039                           ;stkvar	_j @ sp[(-19)+13]
  7040  011394  0EFA               	movlw	-6
  7041  011396  50E3               	movf	plusw1,w,c
  7042  011398  0D04               	mullw	4
  7043  01139A  0EFF               	movlw	low _C
  7044  01139C  24F3               	addwf	243,w,c
  7045  01139E  6ED9               	movwf	fsr2l,c
  7046  0113A0  0E08               	movlw	high _C
  7047  0113A2  20F4               	addwfc	prodh,w,c
  7048  0113A4  6EDA               	movwf	fsr2h,c
  7049  0113A6  006F FF7B FFE6     	movff	postinc2,postinc1
  7050  0113AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7051  0113B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7052  0113B8  006F FF7B FFE6     	movff	postinc2,postinc1
  7053                           
  7054                           ;stkvar	_j @ sp[(-23)+13]
  7055  0113BE  0EF6               	movlw	-10
  7056  0113C0  50E3               	movf	plusw1,w,c
  7057  0113C2  6EE6               	movwf	postinc1,c
  7058  0113C4  EC88  F013         	call	_get_raw_result	;wreg free
  7059  0113C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7060  0113CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7061  0113D4  0E87               	movlw	low STR_53
  7062  0113D6  6EE6               	movwf	postinc1,c
  7063  0113D8  0EFE               	movlw	high STR_53
  7064  0113DA  6EE6               	movwf	postinc1,c
  7065  0113DC  0E00               	movlw	0
  7066  0113DE  6EE6               	movwf	postinc1,c
  7067  0113E0  0E01               	movlw	1
  7068  0113E2  6EE6               	movwf	postinc1,c
  7069  0113E4  EC81  F011         	call	_get_vterm_ptr	;wreg free
  7070  0113E8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7071  0113EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7072  0113F4  0E0C               	movlw	12
  7073  0113F6  6EE6               	movwf	postinc1,c
  7074  0113F8  EC4F  F0FD         	call	_sprintf	;wreg free
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;main.c: 439:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7078                           ;stkvar	_inp_index @ sp[(-17)+11]
  7079  0113FC  0EFA               	movlw	-6
  7080  0113FE  50E3               	movf	plusw1,w,c
  7081  011400  6E34               	movwf	(btemp+10)^0,c
  7082  011402  6A35               	clrf	(btemp+11)^0,c
  7083  011404  0E02               	movlw	2
  7084  011406  2634               	addwf	(btemp+10)^0,f,c
  7085  011408  0E00               	movlw	0
  7086  01140A  2235               	addwfc	(btemp+11)^0,f,c
  7087  01140C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7088  011412  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7089                           
  7090                           ;stkvar	_k @ sp[(-19)+12]
  7091  011418  0EF9               	movlw	-7
  7092  01141A  50E3               	movf	plusw1,w,c
  7093  01141C  0D04               	mullw	4
  7094  01141E  0EFF               	movlw	low _C
  7095  011420  24F3               	addwf	243,w,c
  7096  011422  6ED9               	movwf	fsr2l,c
  7097  011424  0E08               	movlw	high _C
  7098  011426  20F4               	addwfc	prodh,w,c
  7099  011428  6EDA               	movwf	fsr2h,c
  7100  01142A  006F FF7B FFE6     	movff	postinc2,postinc1
  7101  011430  006F FF7B FFE6     	movff	postinc2,postinc1
  7102  011436  006F FF7B FFE6     	movff	postinc2,postinc1
  7103  01143C  006F FF7B FFE6     	movff	postinc2,postinc1
  7104                           
  7105                           ;stkvar	_k @ sp[(-23)+12]
  7106  011442  0EF5               	movlw	-11
  7107  011444  50E3               	movf	plusw1,w,c
  7108  011446  6EE6               	movwf	postinc1,c
  7109  011448  EC88  F013         	call	_get_raw_result	;wreg free
  7110  01144C  0060  F0AB  FFE6   	movff	btemp,postinc1
  7111  011452  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7112  011458  0E87               	movlw	low STR_53
  7113  01145A  6EE6               	movwf	postinc1,c
  7114  01145C  0EFE               	movlw	high STR_53
  7115  01145E  6EE6               	movwf	postinc1,c
  7116  011460  0E00               	movlw	0
  7117  011462  6EE6               	movwf	postinc1,c
  7118  011464  0E02               	movlw	2
  7119  011466  6EE6               	movwf	postinc1,c
  7120  011468  EC81  F011         	call	_get_vterm_ptr	;wreg free
  7121  01146C  0060  F0AB  FFE6   	movff	btemp,postinc1
  7122  011472  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7123  011478  0E0C               	movlw	12
  7124  01147A  6EE6               	movwf	postinc1,c
  7125  01147C  EC4F  F0FD         	call	_sprintf	;wreg free
  7126                           
  7127                           ;main.c: 440:      break;
  7128  011480  D016               	goto	l17692
  7129  011482                     l17690:
  7130  011482  0101               	movlb	1	; () banked
  7131  011484  519B               	movf	_H& (0+255),w,b
  7132  011486  6E34               	movwf	(btemp+10)^0,c
  7133  011488  6A35               	clrf	(btemp+11)^0,c
  7134                           
  7135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7136                           ; Switch size 1, requested type "simple"
  7137                           ; Number of cases is 1, Range of values is 0 to 0
  7138                           ; switch strategies available:
  7139                           ; Name         Instructions Cycles
  7140                           ; simple_byte            4     3 (average)
  7141                           ;	Chosen strategy is simple_byte
  7142  01148A  5035               	movf	(btemp+11)^0,w,c
  7143  01148C  0A00               	xorlw	0	; case 0
  7144  01148E  A4D8               	btfss	status,2,c
  7145  011490  D00E               	goto	l17692
  7146                           
  7147                           ; BSR set to: 1
  7148                           ; Switch size 1, requested type "simple"
  7149                           ; Number of cases is 4, Range of values is 0 to 3
  7150                           ; switch strategies available:
  7151                           ; Name         Instructions Cycles
  7152                           ; simple_byte           13     7 (average)
  7153                           ;	Chosen strategy is simple_byte
  7154  011492  5034               	movf	(btemp+10)^0,w,c
  7155  011494  0A00               	xorlw	0	; case 0
  7156  011496  B4D8               	btfsc	status,2,c
  7157  011498  D4CE               	goto	l1495
  7158  01149A  0A01               	xorlw	1	; case 1
  7159  01149C  B4D8               	btfsc	status,2,c
  7160  01149E  EF18  F086         	goto	l1485
  7161  0114A2  0A03               	xorlw	3	; case 2
  7162  0114A4  B4D8               	btfsc	status,2,c
  7163  0114A6  D5DC               	goto	l1496
  7164  0114A8  0A01               	xorlw	1	; case 3
  7165  0114AA  B4D8               	btfsc	status,2,c
  7166  0114AC  D6F8               	goto	l17676
  7167  0114AE                     l17692:
  7168                           
  7169                           ;main.c: 444:     clear_hid_pflags(&H);
  7170  0114AE  0E9B               	movlw	low _H
  7171  0114B0  6EE6               	movwf	postinc1,c
  7172  0114B2  0E01               	movlw	high _H
  7173  0114B4  6EE6               	movwf	postinc1,c
  7174  0114B6  EC1F  F00B         	call	_clear_hid_pflags	;wreg free
  7175                           
  7176                           ;main.c: 446:    StartTimer(TMR_DISPLAY, 250);
  7177  0114BA  0EFA               	movlw	250
  7178  0114BC  6EE6               	movwf	postinc1,c
  7179  0114BE  0E00               	movlw	0
  7180  0114C0  6EE6               	movwf	postinc1,c
  7181  0114C2  0E0A               	movlw	10
  7182  0114C4  6EE6               	movwf	postinc1,c
  7183  0114C6  EC78  F00F         	call	_StartTimer	;wreg free
  7184                           
  7185                           ;main.c: 447:    V.enter = check_enter_button(&H);
  7186  0114CA  0E9B               	movlw	low _H
  7187  0114CC  6EE6               	movwf	postinc1,c
  7188  0114CE  0E01               	movlw	high _H
  7189  0114D0  6EE6               	movwf	postinc1,c
  7190  0114D2  EC13  F00A         	call	_check_enter_button	;wreg free
  7191  0114D6  502A               	movf	btemp^0,w,c
  7192  0114D8  0102               	movlb	2	; () banked
  7193  0114DA  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7194                           
  7195                           ; BSR set to: 2
  7196                           ;main.c: 448:    if (V.enter && (H.hid_display != HID_AUX)) {
  7197  0114DC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7198  0114DE  B4D8               	btfsc	status,2,c
  7199  0114E0  D013               	goto	l17706
  7200                           
  7201                           ; BSR set to: 2
  7202  0114E2  0E03               	movlw	3
  7203  0114E4  0101               	movlb	1	; () banked
  7204  0114E6  199B               	xorwf	_H& (0+255),w,b
  7205  0114E8  B4D8               	btfsc	status,2,c
  7206  0114EA  D00E               	goto	l17706
  7207                           
  7208                           ; BSR set to: 1
  7209                           ;main.c: 449:     V.enter = 0;
  7210  0114EC  0102               	movlb	2	; () banked
  7211  0114EE  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7212                           
  7213                           ; BSR set to: 2
  7214                           ;main.c: 450:     V.screen = ~V.screen;
  7215  0114F0  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7216  0114F2  D002               	goto	u17240
  7217  0114F4  0E01               	movlw	1
  7218  0114F6  D001               	goto	u17246
  7219  0114F8                     u17240:
  7220  0114F8  0E00               	movlw	0
  7221  0114FA                     u17246:
  7222  0114FA  0AFF               	xorlw	255
  7223  0114FC  6E35               	movwf	(btemp+11)^0,c
  7224  0114FE  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7225  011500  1835               	xorwf	(btemp+11)^0,w,c
  7226  011502  0BFE               	andlw	-2
  7227  011504  1835               	xorwf	(btemp+11)^0,w,c
  7228  011506  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7229  011508                     l17706:
  7230                           
  7231                           ;main.c: 452:    set_vterm(V.screen);
  7232  011508  0102               	movlb	2	; () banked
  7233  01150A  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7234  01150C  D002               	goto	u17250
  7235  01150E  0E01               	movlw	1
  7236  011510  D001               	goto	u17256
  7237  011512                     u17250:
  7238  011512  0E00               	movlw	0
  7239  011514                     u17256:
  7240  011514  6EE6               	movwf	postinc1,c
  7241  011516  ECF9  F013         	call	_set_vterm	;wreg free
  7242                           
  7243                           ;main.c: 453:    update_lcd(V.screen);
  7244  01151A  0102               	movlb	2	; () banked
  7245  01151C  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7246  01151E  D002               	goto	u17260
  7247  011520  0E01               	movlw	1
  7248  011522  D001               	goto	u17266
  7249  011524                     u17260:
  7250  011524  0E00               	movlw	0
  7251  011526                     u17266:
  7252  011526  6EE6               	movwf	postinc1,c
  7253  011528  EC01  F0F6         	call	_update_lcd	;wreg free
  7254                           
  7255                           ;main.c: 454:    display_history();
  7256  01152C  EC2F  F0DA         	call	_display_history	;wreg free
  7257                           
  7258                           ;main.c: 456:    wait_lcd_done();
  7259  011530  ECC0  F014         	call	_wait_lcd_done	;wreg free
  7260                           
  7261                           ; BSR set to: 61
  7262                           ;main.c: 457:    set_dac_a(3.333);
  7263  011534  0EDF               	movlw	223
  7264  011536  6EE6               	movwf	postinc1,c
  7265  011538  0E4F               	movlw	79
  7266  01153A  6EE6               	movwf	postinc1,c
  7267  01153C  0E55               	movlw	85
  7268  01153E  6EE6               	movwf	postinc1,c
  7269  011540  0E40               	movlw	64
  7270  011542  6EE6               	movwf	postinc1,c
  7271  011544  ECD4  F010         	call	_set_dac_a	;wreg free
  7272                           
  7273                           ;main.c: 458:    set_dac_b(6.666);
  7274  011548  0EDF               	movlw	223
  7275  01154A  6EE6               	movwf	postinc1,c
  7276  01154C  0E4F               	movlw	79
  7277  01154E  6EE6               	movwf	postinc1,c
  7278  011550  0ED5               	movlw	213
  7279  011552  6EE6               	movwf	postinc1,c
  7280  011554  0E40               	movlw	64
  7281  011556  6EE6               	movwf	postinc1,c
  7282  011558  ECBA  F010         	call	_set_dac_b	;wreg free
  7283                           
  7284                           ;main.c: 459:    set_dac();
  7285  01155C  ECFB  F003         	call	_set_dac	;wreg free
  7286  011560                     l17720:
  7287                           
  7288                           ;main.c: 465:   check_help(V.flipper);
  7289  011560  0102               	movlb	2	; () banked
  7290  011562  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7291  011564  6EE6               	movwf	postinc1,c
  7292  011566  ECFC  F0E9         	call	_check_help	;wreg free
  7293                           
  7294                           ;main.c: 467:   if (V.enter) {
  7295  01156A  0102               	movlb	2	; () banked
  7296  01156C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7297  01156E  B4D8               	btfsc	status,2,c
  7298  011570  D062               	goto	l1501
  7299                           
  7300                           ; BSR set to: 2
  7301                           ;main.c: 468:    V.enter = 0;
  7302  011572  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7303                           
  7304                           ;main.c: 469:    V.calib = 0;
  7305  011574  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7306                           
  7307                           ; BSR set to: 2
  7308                           ;main.c: 470:    inp_index += 3;
  7309                           ;stkvar	_inp_index @ sp[(-17)+11]
  7310  011576  0EFA               	movlw	-6
  7311  011578  006F FF8C  F02A    	movff	plusw1,btemp
  7312  01157E  0E03               	movlw	3
  7313  011580  262A               	addwf	btemp^0,f,c
  7314  011582  0EFA               	movlw	-6
  7315  011584  0060  F0AB  FFE3   	movff	btemp,plusw1
  7316                           
  7317                           ;main.c: 471:    if (inp_index > 9)
  7318                           ;stkvar	_inp_index @ sp[(-17)+11]
  7319  01158A  0EFA               	movlw	-6
  7320  01158C  006F FF8C  F02A    	movff	plusw1,btemp
  7321  011592  0E09               	movlw	9
  7322  011594  642A               	cpfsgt	btemp^0,c
  7323  011596  D03A               	goto	l17748
  7324                           
  7325                           ; BSR set to: 2
  7326                           ;main.c: 472:     inp_index = 0;
  7327                           ;stkvar	_inp_index @ sp[(-17)+11]
  7328  011598  0EFA               	movlw	-6
  7329  01159A  6AE3               	clrf	plusw1,c
  7330  01159C  D037               	goto	l17748
  7331  01159E                     l17730:
  7332                           
  7333                           ; BSR set to: 2
  7334                           ;main.c: 475:     i = C_BATT;
  7335                           ;stkvar	_i @ sp[(-17)+14]
  7336  01159E  0EFD               	movlw	-3
  7337  0115A0  6AE3               	clrf	plusw1,c
  7338                           
  7339                           ; BSR set to: 2
  7340                           ;main.c: 476:     j = C_PV;
  7341                           ;stkvar	_j @ sp[(-17)+13]
  7342  0115A2  0EFC               	movlw	-4
  7343  0115A4  6AE3               	clrf	plusw1,c
  7344  0115A6  2AE3               	incf	plusw1,f,c
  7345                           
  7346                           ; BSR set to: 2
  7347                           ;main.c: 477:     k = V_CC;
  7348                           ;stkvar	_k @ sp[(-17)+12]
  7349  0115A8  0EFB               	movlw	-5
  7350  0115AA  6AE3               	clrf	plusw1,c
  7351  0115AC  82E3               	bsf	plusw1,1,c
  7352                           
  7353                           ;main.c: 478:     break;
  7354  0115AE  D043               	goto	l1501
  7355  0115B0                     l17736:
  7356                           
  7357                           ; BSR set to: 2
  7358                           ;main.c: 480:     i = V_BAT;
  7359                           ;stkvar	_i @ sp[(-17)+14]
  7360  0115B0  0EFD               	movlw	-3
  7361  0115B2  6AE3               	clrf	plusw1,c
  7362  0115B4  84E3               	bsf	plusw1,2,c
  7363                           
  7364                           ;main.c: 481:     j = V_PV;
  7365                           ;stkvar	_j @ sp[(-17)+13]
  7366  0115B6  0EFC               	movlw	-4
  7367  0115B8  6AE3               	clrf	plusw1,c
  7368  0115BA  80E3               	bsf	plusw1,0,c
  7369  0115BC  84E3               	bsf	plusw1,2,c	;indir
  7370                           
  7371                           ;main.c: 482:     k = V_CBUS;
  7372                           ;stkvar	_k @ sp[(-17)+12]
  7373  0115BE  0EFB               	movlw	-5
  7374  0115C0  6AE3               	clrf	plusw1,c
  7375  0115C2  82E3               	bsf	plusw1,1,c
  7376  0115C4  84E3               	bsf	plusw1,2,c	;indir
  7377                           
  7378                           ;main.c: 483:     break;
  7379  0115C6  D037               	goto	l1501
  7380  0115C8                     l17738:
  7381                           
  7382                           ; BSR set to: 2
  7383                           ;main.c: 485:     i = V_BBAT;
  7384                           ;stkvar	_i @ sp[(-17)+14]
  7385  0115C8  0EFD               	movlw	-3
  7386  0115CA  6AE3               	clrf	plusw1,c
  7387  0115CC  82E3               	bsf	plusw1,1,c
  7388  0115CE  86E3               	bsf	plusw1,3,c	;indir
  7389                           
  7390                           ; BSR set to: 2
  7391                           ;main.c: 486:     j = V_TEMP;
  7392  0115D0  0E0B               	movlw	11
  7393  0115D2  6E35               	movwf	(btemp+11)^0,c
  7394                           
  7395                           ;stkvar	_j @ sp[(-17)+13]
  7396  0115D4  0EFC               	movlw	-4
  7397  0115D6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7398                           
  7399                           ; BSR set to: 2
  7400                           ;main.c: 487:     k = V_INVERTER;
  7401                           ;stkvar	_k @ sp[(-17)+12]
  7402  0115DC  0EFB               	movlw	-5
  7403  0115DE  6AE3               	clrf	plusw1,c
  7404  0115E0  84E3               	bsf	plusw1,2,c
  7405  0115E2  86E3               	bsf	plusw1,3,c	;indir
  7406                           
  7407                           ;main.c: 488:     break;
  7408  0115E4  D028               	goto	l1501
  7409  0115E6                     l17744:
  7410                           
  7411                           ; BSR set to: 2
  7412                           ;main.c: 490:     i = V_LIGHT_SENSOR;
  7413  0115E6  0E0D               	movlw	13
  7414  0115E8  6E35               	movwf	(btemp+11)^0,c
  7415                           
  7416                           ;stkvar	_i @ sp[(-17)+14]
  7417  0115EA  0EFD               	movlw	-3
  7418  0115EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7419                           
  7420                           ;main.c: 491:     j = V_LIGHT_SENSOR;
  7421  0115F2  0E0D               	movlw	13
  7422  0115F4  6E35               	movwf	(btemp+11)^0,c
  7423                           
  7424                           ;stkvar	_j @ sp[(-17)+13]
  7425  0115F6  0EFC               	movlw	-4
  7426  0115F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7427                           
  7428                           ;main.c: 492:     k = V_LIGHT_SENSOR;
  7429  0115FE  0E0D               	movlw	13
  7430  011600  6E35               	movwf	(btemp+11)^0,c
  7431                           
  7432                           ;stkvar	_k @ sp[(-17)+12]
  7433  011602  0EFB               	movlw	-5
  7434  011604  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7435                           
  7436                           ;main.c: 493:     break;
  7437  01160A  D015               	goto	l1501
  7438  01160C                     l17748:
  7439                           
  7440                           ; BSR set to: 2
  7441                           ;stkvar	_inp_index @ sp[(-17)+11]
  7442  01160C  0EFA               	movlw	-6
  7443  01160E  50E3               	movf	plusw1,w,c
  7444  011610  6E34               	movwf	(btemp+10)^0,c
  7445  011612  6A35               	clrf	(btemp+11)^0,c
  7446                           
  7447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7448                           ; Switch size 1, requested type "simple"
  7449                           ; Number of cases is 1, Range of values is 0 to 0
  7450                           ; switch strategies available:
  7451                           ; Name         Instructions Cycles
  7452                           ; simple_byte            4     3 (average)
  7453                           ;	Chosen strategy is simple_byte
  7454  011614  5035               	movf	(btemp+11)^0,w,c
  7455  011616  0A00               	xorlw	0	; case 0
  7456  011618  A4D8               	btfss	status,2,c
  7457  01161A  D00D               	goto	l1501
  7458                           
  7459                           ; BSR set to: 2
  7460                           ; Switch size 1, requested type "simple"
  7461                           ; Number of cases is 4, Range of values is 0 to 9
  7462                           ; switch strategies available:
  7463                           ; Name         Instructions Cycles
  7464                           ; simple_byte           13     7 (average)
  7465                           ;	Chosen strategy is simple_byte
  7466  01161C  5034               	movf	(btemp+10)^0,w,c
  7467  01161E  0A00               	xorlw	0	; case 0
  7468  011620  B4D8               	btfsc	status,2,c
  7469  011622  D7BD               	goto	l17730
  7470  011624  0A03               	xorlw	3	; case 3
  7471  011626  B4D8               	btfsc	status,2,c
  7472  011628  D7C3               	goto	l17736
  7473  01162A  0A05               	xorlw	5	; case 6
  7474  01162C  B4D8               	btfsc	status,2,c
  7475  01162E  D7CC               	goto	l17738
  7476  011630  0A0F               	xorlw	15	; case 9
  7477  011632  B4D8               	btfsc	status,2,c
  7478  011634  D7D8               	goto	l17744
  7479  011636                     l1501:
  7480                           
  7481                           ; BSR set to: 2
  7482                           ;main.c: 502:   if (V.set_sequ) {
  7483  011636  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7484  011638  EFB6  F084         	goto	l17596
  7485                           
  7486                           ; BSR set to: 2
  7487                           ;main.c: 503:    if (TimerDone(TMR_INFO)) {
  7488  01163C  0E07               	movlw	7
  7489  01163E  6EE6               	movwf	postinc1,c
  7490  011640  EC03  F012         	call	_TimerDone	;wreg free
  7491  011644  502A               	movf	btemp^0,w,c
  7492  011646  B4D8               	btfsc	status,2,c
  7493  011648  D00C               	goto	l17758
  7494                           
  7495                           ;main.c: 504:     V.set_sequ = 0;
  7496  01164A  0102               	movlb	2	; () banked
  7497  01164C  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7498                           
  7499                           ; BSR set to: 2
  7500                           ;main.c: 505:     set_vterm(0);
  7501  01164E  0E00               	movlw	0
  7502  011650  6EE6               	movwf	postinc1,c
  7503  011652  ECF9  F013         	call	_set_vterm	;wreg free
  7504                           
  7505                           ;main.c: 506:     update_lcd(0);
  7506  011656  0E00               	movlw	0
  7507  011658  6EE6               	movwf	postinc1,c
  7508  01165A  EC01  F0F6         	call	_update_lcd	;wreg free
  7509                           
  7510                           ;main.c: 507:    } else {
  7511  01165E  EFB6  F084         	goto	l17596
  7512  011662                     l17758:
  7513                           
  7514                           ;main.c: 509:     set_vterm(2);
  7515  011662  0E02               	movlw	2
  7516  011664  6EE6               	movwf	postinc1,c
  7517  011666  ECF9  F013         	call	_set_vterm	;wreg free
  7518                           
  7519                           ;main.c: 510:     update_lcd(2);
  7520  01166A  0E02               	movlw	2
  7521  01166C  6EE6               	movwf	postinc1,c
  7522  01166E  EC01  F0F6         	call	_update_lcd	;wreg free
  7523  011672  EFB6  F084         	goto	l17596
  7524  011676                     __end_of_main:
  7525                           	opt callstack 0
  7526                           
  7527 ;; *************** function _update_hist_data *****************
  7528 ;; Defined at:
  7529 ;;		line 456 in file "daq.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;  mode            1  [STACK] const _Bool 
  7532 ;;  hist            2  [STACK] PTR volatile struct hist
  7533 ;;		 -> C.hist(97), C(320), 
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;		None
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  1  [STACK] _Bool 
  7538 ;; Registers used:
  7539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7540 ;; Tracked objects:
  7541 ;;		On entry : 7/1
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7549 ;;Total ram usage:        0 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:   15
  7552 ;; This function calls:
  7553 ;;		Nothing
  7554 ;; This function is called by:
  7555 ;;		_main
  7556 ;; This function uses a reentrant model
  7557 ;;
  7558                           
  7559                           	psect	text1
  7560  0012B8                     __ptext1:
  7561                           	opt callstack 0
  7562  0012B8                     _update_hist_data:
  7563                           	opt callstack 15
  7564                           
  7565                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  7566                           ;stkvar	_hist @ sp[(0)+-3]
  7567                           
  7568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7569                           ;incstack = 0
  7570  0012B8  0EFD               	movlw	-3
  7571  0012BA  006F FF8C  F02A    	movff	plusw1,btemp
  7572  0012C0  0EFE               	movlw	-2
  7573  0012C2  50E3               	movf	plusw1,w,c
  7574  0012C4  102A               	iorwf	btemp^0,w,c
  7575  0012C6  A4D8               	btfss	status,2,c
  7576  0012C8  D002               	goto	l14164
  7577  0012CA                     u13360:
  7578                           
  7579                           ;daq.c: 459:   return 0;
  7580  0012CA  0E00               	movlw	0
  7581  0012CC  D01A               	goto	L3
  7582  0012CE                     l14164:
  7583                           
  7584                           ;daq.c: 461:  if (mode) {
  7585                           ;stkvar	_mode @ sp[(0)+-1]
  7586  0012CE  0EFF               	movlw	-1
  7587  0012D0  50E3               	movf	plusw1,w,c
  7588  0012D2  B4D8               	btfsc	status,2,c
  7589  0012D4  D018               	goto	l14176
  7590                           
  7591                           ;daq.c: 462:   if (R.hist_save) {
  7592  0012D6  0101               	movlb	1	; () banked
  7593  0012D8  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  7594  0012DA  D7F7               	goto	u13360
  7595                           
  7596                           ; BSR set to: 1
  7597                           ;daq.c: 463:    *hist = R.H;
  7598  0012DC  EE20  F136         	lfsr	2,_R+54	;volatile
  7599                           
  7600                           ;stkvar	_hist @ sp[(0)+-3]
  7601  0012E0  0EFD               	movlw	-3
  7602  0012E2  006F FF8F FFE9     	movff	plusw1,fsr0l
  7603  0012E8  0EFE               	movlw	-2
  7604  0012EA  006F FF8F FFEA     	movff	plusw1,fsr0h
  7605  0012F0  0E60               	movlw	96
  7606  0012F2                     u13391:
  7607  0012F2  006F FF6F FFEB     	movff	plusw2,plusw0
  7608  0012F8  06E8               	decf	wreg,f,c
  7609  0012FA  E2FB               	bc	u13391
  7610                           
  7611                           ; BSR set to: 1
  7612                           ;daq.c: 464:    if (R.hist_update) {
  7613  0012FC  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  7614  0012FE  D7E5               	goto	u13360
  7615                           
  7616                           ; BSR set to: 1
  7617                           ;daq.c: 465:     return 1;
  7618  001300  0E01               	movlw	1
  7619  001302                     L3:
  7620  001302  6E2A               	movwf	btemp^0,c
  7621  001304  D013               	goto	l2096
  7622  001306                     l14176:
  7623                           
  7624                           ;daq.c: 469:   R.H = *hist;
  7625                           ;stkvar	_hist @ sp[(0)+-3]
  7626  001306  0EFD               	movlw	-3
  7627  001308  006F FF8F FFD9     	movff	plusw1,fsr2l
  7628  00130E  0EFE               	movlw	-2
  7629  001310  006F FF8F FFDA     	movff	plusw1,fsr2h
  7630  001316  EE00  F136         	lfsr	0,_R+54	;volatile
  7631  00131A  0E60               	movlw	96
  7632  00131C                     u13411:
  7633  00131C  006F FF6F FFEB     	movff	plusw2,plusw0
  7634  001322  06E8               	decf	wreg,f,c
  7635  001324  E2FB               	bc	u13411
  7636                           
  7637                           ;daq.c: 470:   R.hist_save = 1;
  7638  001326  0101               	movlb	1	; () banked
  7639  001328  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  7640  00132A  D7CF               	goto	u13360
  7641  00132C                     l2096:
  7642                           
  7643                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7644  00132C  52E5               	movf	postdec1,f,c
  7645  00132E  52E5               	movf	postdec1,f,c
  7646  001330  52E5               	movf	postdec1,f,c
  7647  001332  0012               	return		;funcret
  7648  001334                     __end_of_update_hist_data:
  7649                           	opt callstack 0
  7650                           
  7651 ;; *************** function _update_cal_data *****************
  7652 ;; Defined at:
  7653 ;;		line 437 in file "daq.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;		None
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1  [STACK] void 
  7660 ;; Registers used:
  7661 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/39
  7664 ;;		On exit  : 3F/1
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7671 ;;Total ram usage:        0 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:   15
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		_main
  7678 ;; This function uses a reentrant model
  7679 ;;
  7680                           
  7681                           	psect	text2
  7682  001A62                     __ptext2:
  7683                           	opt callstack 0
  7684  001A62                     _update_cal_data:
  7685                           	opt callstack 15
  7686                           
  7687                           ;daq.c: 439:  R = r_cal;
  7688                           
  7689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7690                           ;incstack = 0
  7691  001A62  EE21  F040         	lfsr	2,_r_cal
  7692  001A66  EE00  F100         	lfsr	0,_R	;volatile
  7693  001A6A  0E9A               	movlw	154
  7694  001A6C                     u13331:
  7695  001A6C  006F FF7B FFEE     	movff	postinc2,postinc0
  7696  001A72  06E8               	decf	wreg,f,c
  7697  001A74  E2FB               	bc	u13331
  7698  001A76  0E9B               	movlw	155
  7699  001A78  5ED9               	subwf	fsr2l,f,c
  7700  001A7A  5EE9               	subwf	fsr0l,f,c
  7701                           
  7702                           ;daq.c: 440:  if (!R.c_zero_cal) {
  7703  001A7C  0101               	movlb	1	; () banked
  7704  001A7E  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  7705  001A80  D008               	goto	l14154
  7706                           
  7707                           ; BSR set to: 1
  7708                           ;daq.c: 441:   R.n_offset[0] = 3938;
  7709  001A82  0E0F               	movlw	15
  7710  001A84  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7711  001A86  0E62               	movlw	98
  7712  001A88  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7713                           
  7714                           ;daq.c: 442:   R.n_offset[1] = 4004;
  7715  001A8A  0E0F               	movlw	15
  7716  001A8C  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7717  001A8E  0EA4               	movlw	164
  7718  001A90  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7719  001A92                     l14154:
  7720                           
  7721                           ; BSR set to: 1
  7722                           ;daq.c: 446:  if (!R.c_scale_cal) {
  7723  001A92  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  7724  001A94  0012               	return	
  7725                           
  7726                           ; BSR set to: 1
  7727                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  7728  001A96  0EA0               	movlw	160
  7729  001A98  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7730  001A9A  0E89               	movlw	137
  7731  001A9C  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7732  001A9E  0EB0               	movlw	176
  7733  001AA0  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7734  001AA2  0E3D               	movlw	61
  7735  001AA4  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7736                           
  7737                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  7738  001AA6  0EA4               	movlw	164
  7739  001AA8  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7740  001AAA  0EDE               	movlw	222
  7741  001AAC  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7742  001AAE  0E13               	movlw	19
  7743  001AB0  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7744  001AB2  0E3D               	movlw	61
  7745  001AB4  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7746                           
  7747                           ; BSR set to: 1
  7748                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7749  001AB6  0012               	return		;funcret
  7750  001AB8                     __end_of_update_cal_data:
  7751                           	opt callstack 0
  7752                           
  7753 ;; *************** function _static_soc *****************
  7754 ;; Defined at:
  7755 ;;		line 118 in file "mbmc.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;		None
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1  [STACK] void 
  7762 ;; Registers used:
  7763 ;;		wreg, fsr2l, fsr2h
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/1
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7773 ;;Total ram usage:        0 bytes
  7774 ;; Hardware stack levels used:    1
  7775 ;; Hardware stack levels required when called:   15
  7776 ;; This function calls:
  7777 ;;		Nothing
  7778 ;; This function is called by:
  7779 ;;		_main
  7780 ;; This function uses a reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text3
  7784  001954                     __ptext3:
  7785                           	opt callstack 0
  7786  001954                     _static_soc:
  7787                           	opt callstack 15
  7788                           
  7789                           ;mbmc.c: 120:  C.runtime = 120;
  7790                           
  7791                           ; BSR set to: 1
  7792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7793                           ;incstack = 0
  7794  001954  0E78               	movlw	120
  7795  001956  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7796  00195C  0E00               	movlw	0
  7797  00195E  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7798                           
  7799                           ;mbmc.c: 121:  C.soc = 100;
  7800  001964  0E64               	movlw	100
  7801  001966  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7802  00196C  0E00               	movlw	0
  7803  00196E  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7804                           
  7805                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7806  001974  EE22  F18B         	lfsr	2,_C+140	;volatile
  7807  001978  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7808  00197E  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7809  001984  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7810  00198A  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7811                           
  7812                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7813  001990  EE22  F18F         	lfsr	2,_C+144	;volatile
  7814  001994  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7815  00199A  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7816  0019A0  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7817  0019A6  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7818                           
  7819                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7820  0019AC  0012               	return		;funcret
  7821  0019AE                     __end_of_static_soc:
  7822                           	opt callstack 0
  7823                           
  7824 ;; *************** function _start_switch_handler *****************
  7825 ;; Defined at:
  7826 ;;		line 125 in file "dio.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1  [STACK] void 
  7833 ;; Registers used:
  7834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 3F/39
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7844 ;;Total ram usage:        0 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:   16
  7847 ;; This function calls:
  7848 ;;		_INT1_SetInterruptHandler
  7849 ;; This function is called by:
  7850 ;;		_main
  7851 ;; This function uses a reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text4
  7855  002776                     __ptext4:
  7856                           	opt callstack 0
  7857  002776                     _start_switch_handler:
  7858                           	opt callstack 14
  7859                           
  7860                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7861                           
  7862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7863                           ;incstack = 0
  7864  002776  0139               	movlb	57	; () banked
  7865  002778  9195               	bcf	149,0,b	;volatile
  7866                           
  7867                           ; BSR set to: 57
  7868                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7869  00277A  0E62               	movlw	low _switch_handler
  7870  00277C  6EE6               	movwf	postinc1,c
  7871  00277E  0EF1               	movlw	high _switch_handler
  7872  002780  6EE6               	movwf	postinc1,c
  7873  002782  0E01               	movlw	low (_switch_handler shr (0+16))
  7874  002784  6EE6               	movwf	postinc1,c
  7875  002786  EC8F  F012         	call	_INT1_SetInterruptHandler	;wreg free
  7876                           
  7877                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7878  00278A  0E02               	movlw	2
  7879  00278C  0101               	movlb	1	; () banked
  7880  00278E  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  7881                           
  7882                           ; BSR set to: 1
  7883                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7884  002790  0139               	movlb	57	; () banked
  7885  002792  8195               	bsf	149,0,b	;volatile
  7886                           
  7887                           ; BSR set to: 57
  7888                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7889  002794  0012               	return		;funcret
  7890  002796                     __end_of_start_switch_handler:
  7891                           	opt callstack 0
  7892                           
  7893 ;; *************** function _srand *****************
  7894 ;; Defined at:
  7895 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  s               2  [STACK] unsigned int 
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;		None
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  1  [STACK] void 
  7902 ;; Registers used:
  7903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/3D
  7906 ;;		On exit  : 3F/2
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7913 ;;Total ram usage:        0 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; Hardware stack levels required when called:   15
  7916 ;; This function calls:
  7917 ;;		Nothing
  7918 ;; This function is called by:
  7919 ;;		_main
  7920 ;; This function uses a reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text5
  7924  002140                     __ptext5:
  7925                           	opt callstack 0
  7926  002140                     _srand:
  7927                           	opt callstack 15
  7928                           
  7929                           ;stkvar	_s @ sp[(0)+-2]
  7930                           
  7931                           ; BSR set to: 57
  7932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7933                           ;incstack = 0
  7934  002140  0EFE               	movlw	-2
  7935  002142  50E3               	movf	plusw1,w,c
  7936  002144  0FFF               	addlw	255
  7937  002146  6E34               	movwf	(btemp+10)^0,c
  7938  002148  0EFF               	movlw	-1
  7939  00214A  006F FF8C  F035    	movff	plusw1,btemp+11
  7940  002150  0EFF               	movlw	255
  7941  002152  2235               	addwfc	(btemp+11)^0,f,c
  7942  002154  0060  F0D0  F2DE   	movff	btemp+10,_seed
  7943  00215A  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  7944  002160  0102               	movlb	2	; () banked
  7945  002162  6BE0               	clrf	(_seed+2)& (0+255),b
  7946  002164  6BE1               	clrf	(_seed+3)& (0+255),b
  7947  002166  6BE2               	clrf	(_seed+4)& (0+255),b
  7948  002168  6BE3               	clrf	(_seed+5)& (0+255),b
  7949  00216A  6BE4               	clrf	(_seed+6)& (0+255),b
  7950  00216C  6BE5               	clrf	(_seed+7)& (0+255),b
  7951                           
  7952                           ; BSR set to: 2
  7953                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7954  00216E  52E5               	movf	postdec1,f,c
  7955  002170  52E5               	movf	postdec1,f,c
  7956  002172  0012               	return		;funcret
  7957  002174                     __end_of_srand:
  7958                           	opt callstack 0
  7959                           
  7960 ;; *************** function _set_time *****************
  7961 ;; Defined at:
  7962 ;;		line 263 in file "mbmc.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  t               8  [STACK] long long 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;		None
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1  [STACK] void 
  7969 ;; Registers used:
  7970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  7971 ;; Tracked objects:
  7972 ;;		On entry : 3F/39
  7973 ;;		On exit  : 3F/39
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7980 ;;Total ram usage:        0 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:   15
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_main
  7987 ;; This function uses a reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text6
  7991  0020D4                     __ptext6:
  7992                           	opt callstack 0
  7993  0020D4                     _set_time:
  7994                           	opt callstack 15
  7995                           
  7996                           ;mbmc.c: 263: void set_time(time_t t);mbmc.c: 264: {;mbmc.c: 265:  PIE8bits.TMR5IE = 0;
  7997                           
  7998                           ; BSR set to: 2
  7999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8000                           ;incstack = 0
  8001  0020D4  0139               	movlb	57	; () banked
  8002  0020D6  9D98               	bcf	152,6,b	;volatile
  8003                           
  8004                           ; BSR set to: 57
  8005                           ;mbmc.c: 266:  V.ticks = t;
  8006                           ;stkvar	_t @ sp[(0)+-8]
  8007  0020D8  50E1               	movf	fsr1l,w,c
  8008  0020DA  0FF8               	addlw	-8
  8009  0020DC  6ED9               	movwf	fsr2l,c
  8010  0020DE  50E2               	movf	fsr1h,w,c
  8011  0020E0  6EDA               	movwf	fsr2h,c
  8012  0020E2  0EFF               	movlw	255
  8013  0020E4  22DA               	addwfc	fsr2h,f,c
  8014  0020E6  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  8015  0020EC  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  8016  0020F2  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  8017  0020F8  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  8018                           
  8019                           ; BSR set to: 57
  8020                           ;mbmc.c: 267:  PIE8bits.TMR5IE = 1;
  8021  0020FE  8D98               	bsf	152,6,b	;volatile
  8022                           
  8023                           ; BSR set to: 57
  8024                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  8025  002100  0EF8               	movlw	248
  8026  002102  26E1               	addwf	fsr1l,f,c
  8027  002104  0EFF               	movlw	255
  8028  002106  22E2               	addwfc	fsr1h,f,c
  8029  002108  0012               	return		;funcret
  8030  00210A                     __end_of_set_time:
  8031                           	opt callstack 0
  8032                           
  8033 ;; *************** function _set_hist_flag *****************
  8034 ;; Defined at:
  8035 ;;		line 475 in file "daq.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;		None
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1  [STACK] void 
  8042 ;; Registers used:
  8043 ;;		None
  8044 ;; Tracked objects:
  8045 ;;		On entry : 3F/39
  8046 ;;		On exit  : 3F/1
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8053 ;;Total ram usage:        0 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:   15
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_main
  8060 ;; This function uses a reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text7
  8064  002A2A                     __ptext7:
  8065                           	opt callstack 0
  8066  002A2A                     _set_hist_flag:
  8067                           	opt callstack 15
  8068                           
  8069                           ;daq.c: 477:  R.hist_update = 1;
  8070                           
  8071                           ; BSR set to: 57
  8072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8073                           ;incstack = 0
  8074  002A2A  0101               	movlb	1	; () banked
  8075  002A2C  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  8076                           
  8077                           ; BSR set to: 1
  8078                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8079  002A2E  0012               	return		;funcret
  8080  002A30                     __end_of_set_hist_flag:
  8081                           	opt callstack 0
  8082                           
  8083 ;; *************** function _set_dac_b *****************
  8084 ;; Defined at:
  8085 ;;		line 308 in file "daq.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  voltage         4  [STACK] const float 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;		None
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  2  [STACK] unsigned short 
  8092 ;; Registers used:
  8093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/3D
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8103 ;;Total ram usage:        0 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; Hardware stack levels required when called:   17
  8106 ;; This function calls:
  8107 ;;		_convert_dac_raw
  8108 ;; This function is called by:
  8109 ;;		_main
  8110 ;; This function uses a reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text8
  8114  002174                     __ptext8:
  8115                           	opt callstack 0
  8116  002174                     _set_dac_b:
  8117                           	opt callstack 13
  8118                           
  8119                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8120                           ;stkvar	_voltage @ sp[(0)+-4]
  8121                           
  8122                           ; BSR set to: 1
  8123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8124                           ;incstack = 0
  8125  002174  0EFC               	movlw	-4
  8126  002176  006F FF8F FFE6     	movff	plusw1,postinc1
  8127  00217C  006F FF8F FFE6     	movff	plusw1,postinc1
  8128  002182  006F FF8F FFE6     	movff	plusw1,postinc1
  8129  002188  006F FF8F FFE6     	movff	plusw1,postinc1
  8130  00218E  ECAD  F0FB         	call	_convert_dac_raw	;wreg free
  8131  002192  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8132  002198  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8133                           
  8134                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8135                           
  8136                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8137  00219E  52E5               	movf	postdec1,f,c
  8138  0021A0  52E5               	movf	postdec1,f,c
  8139  0021A2  52E5               	movf	postdec1,f,c
  8140  0021A4  52E5               	movf	postdec1,f,c
  8141  0021A6  0012               	return		;funcret
  8142  0021A8                     __end_of_set_dac_b:
  8143                           	opt callstack 0
  8144                           
  8145 ;; *************** function _set_dac_a *****************
  8146 ;; Defined at:
  8147 ;;		line 299 in file "daq.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  voltage         4  [STACK] const float 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;		None
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  2  [STACK] unsigned short 
  8154 ;; Registers used:
  8155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8156 ;; Tracked objects:
  8157 ;;		On entry : 3F/3D
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8165 ;;Total ram usage:        0 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:   17
  8168 ;; This function calls:
  8169 ;;		_convert_dac_raw
  8170 ;; This function is called by:
  8171 ;;		_main
  8172 ;; This function uses a reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text9
  8176  0021A8                     __ptext9:
  8177                           	opt callstack 0
  8178  0021A8                     _set_dac_a:
  8179                           	opt callstack 13
  8180                           
  8181                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8182                           ;stkvar	_voltage @ sp[(0)+-4]
  8183                           
  8184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8185                           ;incstack = 0
  8186  0021A8  0EFC               	movlw	-4
  8187  0021AA  006F FF8F FFE6     	movff	plusw1,postinc1
  8188  0021B0  006F FF8F FFE6     	movff	plusw1,postinc1
  8189  0021B6  006F FF8F FFE6     	movff	plusw1,postinc1
  8190  0021BC  006F FF8F FFE6     	movff	plusw1,postinc1
  8191  0021C2  ECAD  F0FB         	call	_convert_dac_raw	;wreg free
  8192  0021C6  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8193  0021CC  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8194                           
  8195                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8196                           
  8197                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8198  0021D2  52E5               	movf	postdec1,f,c
  8199  0021D4  52E5               	movf	postdec1,f,c
  8200  0021D6  52E5               	movf	postdec1,f,c
  8201  0021D8  52E5               	movf	postdec1,f,c
  8202  0021DA  0012               	return		;funcret
  8203  0021DC                     __end_of_set_dac_a:
  8204                           	opt callstack 0
  8205                           
  8206 ;; *************** function _convert_dac_raw *****************
  8207 ;; Defined at:
  8208 ;;		line 281 in file "daq.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;  voltage         4  [STACK] float 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  2  [STACK] unsigned short 
  8215 ;; Registers used:
  8216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/3D
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:   16
  8229 ;; This function calls:
  8230 ;;		___fldiv
  8231 ;;		___flge
  8232 ;;		___fltol
  8233 ;; This function is called by:
  8234 ;;		_set_dac_a
  8235 ;;		_set_dac_b
  8236 ;; This function uses a reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text10
  8240  01F75A                     __ptext10:
  8241                           	opt callstack 0
  8242  01F75A                     _convert_dac_raw:
  8243                           	opt callstack 13
  8244                           
  8245                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8246                           
  8247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8248                           ;incstack = 0
  8249  01F75A  0E6F               	movlw	111
  8250  01F75C  6EE6               	movwf	postinc1,c
  8251  01F75E  0E12               	movlw	18
  8252  01F760  6EE6               	movwf	postinc1,c
  8253  01F762  0E83               	movlw	131
  8254  01F764  6EE6               	movwf	postinc1,c
  8255  01F766  0E3A               	movlw	58
  8256  01F768  6EE6               	movwf	postinc1,c
  8257                           
  8258                           ;stkvar	_voltage @ sp[(-4)+-4]
  8259  01F76A  0EF8               	movlw	-8
  8260  01F76C  006F FF8F FFE6     	movff	plusw1,postinc1
  8261  01F772  006F FF8F FFE6     	movff	plusw1,postinc1
  8262  01F778  006F FF8F FFE6     	movff	plusw1,postinc1
  8263  01F77E  006F FF8F FFE6     	movff	plusw1,postinc1
  8264  01F784  EC9F  F0F4         	call	___flge	;wreg free
  8265  01F788  B02A               	btfsc	btemp& (0+255),0,c
  8266  01F78A  D018               	goto	l13688
  8267                           
  8268                           ;daq.c: 287:   voltage = 0.001;
  8269  01F78C  0E6F               	movlw	111
  8270  01F78E  6E32               	movwf	(btemp+8)^0,c
  8271  01F790  0E12               	movlw	18
  8272  01F792  6E33               	movwf	(btemp+9)^0,c
  8273  01F794  0E83               	movlw	131
  8274  01F796  6E34               	movwf	(btemp+10)^0,c
  8275  01F798  0E3A               	movlw	58
  8276  01F79A  6E35               	movwf	(btemp+11)^0,c
  8277                           
  8278                           ;stkvar	_voltage @ sp[(0)+-4]
  8279  01F79C  0EFC               	movlw	-4
  8280  01F79E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8281  01F7A4  0EFD               	movlw	-3
  8282  01F7A6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8283  01F7AC  0EFE               	movlw	-2
  8284  01F7AE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8285  01F7B4  0EFF               	movlw	-1
  8286  01F7B6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8287  01F7BC                     l13688:
  8288                           
  8289                           ;daq.c: 288:  if (voltage > 10.0)
  8290                           ;stkvar	_voltage @ sp[(0)+-4]
  8291  01F7BC  0EFC               	movlw	-4
  8292  01F7BE  006F FF8F FFE6     	movff	plusw1,postinc1
  8293  01F7C4  006F FF8F FFE6     	movff	plusw1,postinc1
  8294  01F7CA  006F FF8F FFE6     	movff	plusw1,postinc1
  8295  01F7D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8296  01F7D6  0E00               	movlw	0
  8297  01F7D8  6EE6               	movwf	postinc1,c
  8298  01F7DA  0E00               	movlw	0
  8299  01F7DC  6EE6               	movwf	postinc1,c
  8300  01F7DE  0E20               	movlw	32
  8301  01F7E0  6EE6               	movwf	postinc1,c
  8302  01F7E2  0E41               	movlw	65
  8303  01F7E4  6EE6               	movwf	postinc1,c
  8304  01F7E6  EC9F  F0F4         	call	___flge	;wreg free
  8305  01F7EA  B02A               	btfsc	btemp& (0+255),0,c
  8306  01F7EC  D018               	goto	l13692
  8307                           
  8308                           ;daq.c: 289:   voltage = 10.0;
  8309  01F7EE  0E00               	movlw	0
  8310  01F7F0  6E32               	movwf	(btemp+8)^0,c
  8311  01F7F2  0E00               	movlw	0
  8312  01F7F4  6E33               	movwf	(btemp+9)^0,c
  8313  01F7F6  0E20               	movlw	32
  8314  01F7F8  6E34               	movwf	(btemp+10)^0,c
  8315  01F7FA  0E41               	movlw	65
  8316  01F7FC  6E35               	movwf	(btemp+11)^0,c
  8317                           
  8318                           ;stkvar	_voltage @ sp[(0)+-4]
  8319  01F7FE  0EFC               	movlw	-4
  8320  01F800  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8321  01F806  0EFD               	movlw	-3
  8322  01F808  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8323  01F80E  0EFE               	movlw	-2
  8324  01F810  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8325  01F816  0EFF               	movlw	-1
  8326  01F818  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8327  01F81E                     l13692:
  8328                           
  8329                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  8330  01F81E  0EF6               	movlw	246
  8331  01F820  6EE6               	movwf	postinc1,c
  8332  01F822  0E09               	movlw	9
  8333  01F824  6EE6               	movwf	postinc1,c
  8334  01F826  0E20               	movlw	32
  8335  01F828  6EE6               	movwf	postinc1,c
  8336  01F82A  0E3B               	movlw	59
  8337  01F82C  6EE6               	movwf	postinc1,c
  8338                           
  8339                           ;stkvar	_voltage @ sp[(-4)+-4]
  8340  01F82E  0EF8               	movlw	-8
  8341  01F830  006F FF8F FFE6     	movff	plusw1,postinc1
  8342  01F836  006F FF8F FFE6     	movff	plusw1,postinc1
  8343  01F83C  006F FF8F FFE6     	movff	plusw1,postinc1
  8344  01F842  006F FF8F FFE6     	movff	plusw1,postinc1
  8345  01F848  EC2E  F0BE         	call	___fldiv	;wreg free
  8346  01F84C  0060  F0AB  FFE6   	movff	btemp,postinc1
  8347  01F852  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8348  01F858  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8349  01F85E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8350  01F864  EC33  F0F3         	call	___fltol	;wreg free
  8351                           
  8352                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8353  01F868  52E5               	movf	postdec1,f,c
  8354  01F86A  52E5               	movf	postdec1,f,c
  8355  01F86C  52E5               	movf	postdec1,f,c
  8356  01F86E  52E5               	movf	postdec1,f,c
  8357  01F870  0012               	return		;funcret
  8358  01F872                     __end_of_convert_dac_raw:
  8359                           	opt callstack 0
  8360                           
  8361 ;; *************** function _set_dac *****************
  8362 ;; Defined at:
  8363 ;;		line 257 in file "daq.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;		None
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1  [STACK] void 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/3D
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8381 ;;Total ram usage:        0 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:   16
  8384 ;; This function calls:
  8385 ;;		_SPI1_Exchange8bit
  8386 ;;		_dac_spi_control
  8387 ;; This function is called by:
  8388 ;;		_main
  8389 ;; This function uses a reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text11
  8393  0007F6                     __ptext11:
  8394                           	opt callstack 0
  8395  0007F6                     _set_dac:
  8396                           	opt callstack 14
  8397                           
  8398                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  8399                           
  8400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8401                           ;incstack = 0
  8402  0007F6  013D               	movlb	61	; () banked
  8403  0007F8  AB17               	btfss	23,5,b	;volatile
  8404  0007FA  D7FD               	goto	_set_dac
  8405                           
  8406                           ; BSR set to: 61
  8407                           
  8408                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  8409  0007FC  84BC               	bsf	188,2,c	;volatile
  8410                           
  8411                           ; BSR set to: 61
  8412                           
  8413                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  8414  0007FE  80BC               	bsf	188,0,c	;volatile
  8415                           
  8416                           ; BSR set to: 61
  8417                           ;daq.c: 262:  dac_spi_control(1);
  8418  000800  0E01               	movlw	1
  8419  000802  6EE6               	movwf	postinc1,c
  8420  000804  EC9A  F009         	call	_dac_spi_control	;wreg free
  8421                           
  8422                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8423  000808  C120  F124         	movff	_R+32,_R+36	;volatile
  8424                           
  8425                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8426  00080C  EE20  F120         	lfsr	2,_R+32	;volatile
  8427  000810  006F FF78  F034    	movff	postinc2,btemp+10
  8428  000816  006F FF74  F035    	movff	postdec2,btemp+11
  8429  00081C  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8430  000822  6A35               	clrf	(btemp+11)^0,c
  8431  000824  0E0F               	movlw	15
  8432  000826  1634               	andwf	(btemp+10)^0,f,c
  8433  000828  0101               	movlb	1	; () banked
  8434  00082A  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8435  00082C  1834               	xorwf	(btemp+10)^0,w,c
  8436  00082E  0BF0               	andlw	-16
  8437  000830  1834               	xorwf	(btemp+10)^0,w,c
  8438  000832  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8439                           
  8440                           ; BSR set to: 1
  8441                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  8442  000834  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8443  000836  0B0F               	andlw	-241
  8444  000838  0940               	iorlw	64
  8445  00083A  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8446                           
  8447                           ; BSR set to: 1
  8448  00083C  90BF               	bcf	191,0,c	;volatile
  8449                           
  8450                           ; BSR set to: 1
  8451                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8452  00083E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8453  000840  6EE6               	movwf	postinc1,c
  8454  000842  ECDB  F013         	call	_SPI1_Exchange8bit	;wreg free
  8455                           
  8456                           ; BSR set to: 57
  8457                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8458  000846  0101               	movlb	1	; () banked
  8459  000848  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8460  00084A  6EE6               	movwf	postinc1,c
  8461  00084C  ECDB  F013         	call	_SPI1_Exchange8bit	;wreg free
  8462                           
  8463                           ; BSR set to: 57
  8464  000850  80BF               	bsf	191,0,c	;volatile
  8465                           
  8466                           ; BSR set to: 57
  8467                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8468  000852  C122  F124         	movff	_R+34,_R+36	;volatile
  8469                           
  8470                           ; BSR set to: 57
  8471                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8472  000856  EE20  F122         	lfsr	2,_R+34	;volatile
  8473  00085A  006F FF78  F034    	movff	postinc2,btemp+10
  8474  000860  006F FF74  F035    	movff	postdec2,btemp+11
  8475  000866  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8476  00086C  6A35               	clrf	(btemp+11)^0,c
  8477  00086E  0E0F               	movlw	15
  8478  000870  1634               	andwf	(btemp+10)^0,f,c
  8479  000872  0101               	movlb	1	; () banked
  8480  000874  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8481  000876  1834               	xorwf	(btemp+10)^0,w,c
  8482  000878  0BF0               	andlw	-16
  8483  00087A  1834               	xorwf	(btemp+10)^0,w,c
  8484  00087C  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8485                           
  8486                           ; BSR set to: 1
  8487                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  8488  00087E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8489  000880  0B0F               	andlw	-241
  8490  000882  0950               	iorlw	80
  8491  000884  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8492                           
  8493                           ; BSR set to: 1
  8494  000886  90BF               	bcf	191,0,c	;volatile
  8495                           
  8496                           ; BSR set to: 1
  8497                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8498  000888  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8499  00088A  6EE6               	movwf	postinc1,c
  8500  00088C  ECDB  F013         	call	_SPI1_Exchange8bit	;wreg free
  8501                           
  8502                           ; BSR set to: 57
  8503                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8504  000890  0101               	movlb	1	; () banked
  8505  000892  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8506  000894  6EE6               	movwf	postinc1,c
  8507  000896  ECDB  F013         	call	_SPI1_Exchange8bit	;wreg free
  8508  00089A                     l2033:
  8509  00089A  013D               	movlb	61	; () banked
  8510  00089C  AB17               	btfss	23,5,b	;volatile
  8511  00089E  D7FD               	goto	l2033
  8512                           
  8513                           ; BSR set to: 61
  8514                           
  8515                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  8516  0008A0  80BF               	bsf	191,0,c	;volatile
  8517                           
  8518                           ; BSR set to: 61
  8519                           ;daq.c: 278:  dac_spi_control(0);
  8520  0008A2  0E00               	movlw	0
  8521  0008A4  6EE6               	movwf	postinc1,c
  8522  0008A6  EC9A  F009         	call	_dac_spi_control	;wreg free
  8523                           
  8524                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8525  0008AA  0012               	return		;funcret
  8526  0008AC                     __end_of_set_dac:
  8527                           	opt callstack 0
  8528                           
  8529 ;; *************** function _dac_spi_control *****************
  8530 ;; Defined at:
  8531 ;;		line 209 in file "daq.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  set             1  [STACK] _Bool 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1  [STACK] void 
  8538 ;; Registers used:
  8539 ;;		wreg, fsr1l, fsr1h, status,2
  8540 ;; Tracked objects:
  8541 ;;		On entry : 3F/3D
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8549 ;;Total ram usage:        0 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:   15
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_set_dac
  8556 ;; This function uses a reentrant model
  8557 ;;
  8558                           
  8559                           	psect	text12
  8560  001334                     __ptext12:
  8561                           	opt callstack 0
  8562  001334                     _dac_spi_control:
  8563                           	opt callstack 14
  8564                           
  8565                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  8566                           ;stkvar	_set @ sp[(0)+-1]
  8567                           
  8568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8569                           ;incstack = 0
  8570  001334  0EFF               	movlw	-1
  8571  001336  50E3               	movf	plusw1,w,c
  8572  001338  B4D8               	btfsc	status,2,c
  8573  00133A  D022               	goto	l13680
  8574                           
  8575                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  8576  00133C  013D               	movlb	61	; () banked
  8577  00133E  9F14               	bcf	20,7,b	;volatile
  8578                           
  8579                           ; BSR set to: 61
  8580                           ;daq.c: 216:   if (!init) {
  8581  001340  5052               	movf	dac_spi_control@init^0,w,c
  8582  001342  A4D8               	btfss	status,2,c
  8583  001344  D011               	goto	l13668
  8584                           
  8585                           ; BSR set to: 61
  8586                           ;daq.c: 217:    init = 1;
  8587  001346  0E01               	movlw	1
  8588  001348  6E52               	movwf	dac_spi_control@init^0,c
  8589                           
  8590                           ; BSR set to: 61
  8591                           ;daq.c: 218:    S0 = SPI1CON0;
  8592  00134A  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8593                           
  8594                           ; BSR set to: 61
  8595                           ;daq.c: 219:    S1 = SPI1CON1;
  8596  001350  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8597                           
  8598                           ; BSR set to: 61
  8599                           ;daq.c: 220:    S2 = SPI1CON2;
  8600  001356  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8601                           
  8602                           ; BSR set to: 61
  8603                           ;daq.c: 221:    SC = SPI1CLK;
  8604  00135C  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8605                           
  8606                           ; BSR set to: 61
  8607                           ;daq.c: 222:    SB = SPI1BAUD;
  8608  001362  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8609  001368                     l13668:
  8610                           
  8611                           ; BSR set to: 61
  8612                           ;daq.c: 228:   SPI1CON1 = 0x00;
  8613  001368  6B15               	clrf	21,b	;volatile
  8614                           
  8615                           ; BSR set to: 61
  8616                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  8617  00136A  8D15               	bsf	21,6,b	;volatile
  8618                           
  8619                           ; BSR set to: 61
  8620                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  8621  00136C  9B15               	bcf	21,5,b	;volatile
  8622                           
  8623                           ; BSR set to: 61
  8624                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  8625  00136E  9F15               	bcf	21,7,b	;volatile
  8626                           
  8627                           ;daq.c: 233:   SPI1CON2 = 0x03;
  8628  001370  0E03               	movlw	3
  8629  001372  6F16               	movwf	22,b	;volatile
  8630                           
  8631                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  8632  001374  0E0F               	movlw	15
  8633  001376  6F19               	movwf	25,b	;volatile
  8634                           
  8635                           ; BSR set to: 61
  8636                           ;daq.c: 237:   SPI1CLK = 0x00;
  8637  001378  6B1C               	clrf	28,b	;volatile
  8638                           
  8639                           ;daq.c: 239:   SPI1CON0 = 0x83;
  8640  00137A  0E83               	movlw	131
  8641  00137C  6F14               	movwf	20,b	;volatile
  8642  00137E  D014               	goto	L4
  8643  001380                     l13680:
  8644                           
  8645                           ;daq.c: 242:   if (init) {
  8646  001380  5052               	movf	dac_spi_control@init^0,w,c
  8647  001382  B4D8               	btfsc	status,2,c
  8648  001384  D012               	goto	l2017
  8649                           
  8650                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  8651  001386  013D               	movlb	61	; () banked
  8652  001388  9F14               	bcf	20,7,b	;volatile
  8653                           
  8654                           ;daq.c: 247:    SPI1CON1 = S1;
  8655  00138A  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8656                           
  8657                           ;daq.c: 248:    SPI1CON2 = S2;
  8658  001390  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8659                           
  8660                           ;daq.c: 249:    SPI1CLK = SC;
  8661  001396  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8662                           
  8663                           ;daq.c: 250:    SPI1BAUD = SB;
  8664  00139C  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8665                           
  8666                           ;daq.c: 251:    SPI1CON0 = S0;
  8667  0013A2  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8668  0013A8                     L4:
  8669                           
  8670                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  8671  0013A8  8F14               	bsf	20,7,b	;volatile
  8672  0013AA                     l2017:
  8673                           
  8674                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8675  0013AA  52E5               	movf	postdec1,f,c
  8676  0013AC  0012               	return		;funcret
  8677  0013AE                     __end_of_dac_spi_control:
  8678                           	opt callstack 0
  8679                           
  8680 ;; *************** function _read_cal_data *****************
  8681 ;; Defined at:
  8682 ;;		line 370 in file "daq.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;		None
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  x               2  [STACK] unsigned short 
  8687 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8688 ;;		 -> r_cal(155), 
  8689 ;;  y               2  [STACK] unsigned short 
  8690 ;;  crcVal_save     1  [STACK] unsigned char 
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1  [STACK] _Bool 
  8693 ;; Registers used:
  8694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/39
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8704 ;;Total ram usage:        0 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:   17
  8707 ;; This function calls:
  8708 ;;		_CRC_8BitDataWrite
  8709 ;;		_CRC_CalculatedResultGet
  8710 ;;		_CRC_Initialize
  8711 ;;		_CRC_IsBusy
  8712 ;;		_CRC_Start
  8713 ;;		_DATAEE_ReadByte
  8714 ;; This function is called by:
  8715 ;;		_main
  8716 ;; This function uses a reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text13
  8720  01D80E                     __ptext13:
  8721                           	opt callstack 0
  8722  01D80E                     _read_cal_data:
  8723                           	opt callstack 0
  8724                           
  8725                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8726  01D80E  0E07               	movlw	7
  8727  01D810  26E1               	addwf	fsr1l,f,c
  8728  01D812  0E00               	movlw	0
  8729  01D814  22E2               	addwfc	fsr1h,f,c
  8730                           
  8731                           ;daq.c: 372:  uint16_t x = 0, y;
  8732                           ;stkvar	_x @ sp[(-7)+0]
  8733                           
  8734                           ;incstack = 0
  8735  01D816  0EF9               	movlw	-7
  8736  01D818  6AE3               	clrf	plusw1,c
  8737  01D81A  0EFA               	movlw	-6
  8738  01D81C  6AE3               	clrf	plusw1,c
  8739                           
  8740                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  8741  01D81E  0E9B               	movlw	155
  8742  01D820  6E34               	movwf	(btemp+10)^0,c
  8743  01D822  0E00               	movlw	0
  8744  01D824  6E35               	movwf	(btemp+11)^0,c
  8745                           
  8746                           ;stkvar	_y @ sp[(-7)+4]
  8747  01D826  0EFD               	movlw	-3
  8748  01D828  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8749  01D82E  0EFE               	movlw	-2
  8750  01D830  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8751                           
  8752                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  8753                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8754  01D836  0E04               	movlw	high _r_cal
  8755  01D838  6E2A               	movwf	btemp^0,c
  8756  01D83A  0EFC               	movlw	-4
  8757  01D83C  0060  F0AB  FFE3   	movff	btemp,plusw1
  8758  01D842  0E40               	movlw	low _r_cal
  8759  01D844  6E2A               	movwf	btemp^0,c
  8760  01D846  0EFB               	movlw	-5
  8761  01D848  0060  F0AB  FFE3   	movff	btemp,plusw1
  8762                           
  8763                           ;daq.c: 378:  CRC_Initialize();
  8764  01D84E  EC0B  F008         	call	_CRC_Initialize	;wreg free
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;daq.c: 381:  CRC_Start();
  8768  01D852  EC18  F015         	call	_CRC_Start	;wreg free
  8769  01D856                     l14114:
  8770                           
  8771                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8772                           ;stkvar	_x @ sp[(-7)+0]
  8773  01D856  0EF9               	movlw	-7
  8774  01D858  006F FF8F FFE6     	movff	plusw1,postinc1
  8775  01D85E  006F FF8F FFE6     	movff	plusw1,postinc1
  8776  01D864  EC08  F011         	call	_DATAEE_ReadByte	;wreg free
  8777                           
  8778                           ;stkvar	_x @ sp[(-7)+0]
  8779  01D868  0EF9               	movlw	-7
  8780  01D86A  006F FF8C  F034    	movff	plusw1,btemp+10
  8781  01D870  0EFA               	movlw	-6
  8782  01D872  006F FF8C  F035    	movff	plusw1,btemp+11
  8783                           
  8784                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8785  01D878  0EFB               	movlw	-5
  8786  01D87A  006F FF8C  F032    	movff	plusw1,btemp+8
  8787  01D880  0EFC               	movlw	-4
  8788  01D882  006F FF8C  F033    	movff	plusw1,btemp+9
  8789  01D888  5034               	movf	(btemp+10)^0,w,c
  8790  01D88A  2432               	addwf	(btemp+8)^0,w,c
  8791  01D88C  6ED9               	movwf	fsr2l,c
  8792  01D88E  5035               	movf	(btemp+11)^0,w,c
  8793  01D890  2033               	addwfc	(btemp+9)^0,w,c
  8794  01D892  6EDA               	movwf	fsr2h,c
  8795  01D894  0060  F0AB  FFDF   	movff	btemp,indf2
  8796                           
  8797                           ;daq.c: 385:  } while (++x < y);
  8798                           ;stkvar	_y @ sp[(-7)+4]
  8799  01D89A  0EFD               	movlw	-3
  8800  01D89C  006F FF8C  F034    	movff	plusw1,btemp+10
  8801  01D8A2  0EFE               	movlw	-2
  8802  01D8A4  006F FF8C  F035    	movff	plusw1,btemp+11
  8803                           
  8804                           ;stkvar	_x @ sp[(-7)+0]
  8805  01D8AA  0EF9               	movlw	-7
  8806  01D8AC  50E3               	movf	plusw1,w,c
  8807  01D8AE  0F01               	addlw	1
  8808  01D8B0  6E2A               	movwf	btemp^0,c
  8809  01D8B2  0EF9               	movlw	-7
  8810  01D8B4  0060  F0AB  FFE3   	movff	btemp,plusw1
  8811  01D8BA  6A2A               	clrf	btemp^0,c
  8812  01D8BC  0EFA               	movlw	-6
  8813  01D8BE  50E3               	movf	plusw1,w,c
  8814  01D8C0  202A               	addwfc	btemp^0,w,c
  8815  01D8C2  6E2A               	movwf	btemp^0,c
  8816  01D8C4  0EFA               	movlw	-6
  8817  01D8C6  0060  F0AB  FFE3   	movff	btemp,plusw1
  8818  01D8CC  0EF9               	movlw	-7
  8819  01D8CE  006F FF8C  F032    	movff	plusw1,btemp+8
  8820  01D8D4  0EFA               	movlw	-6
  8821  01D8D6  006F FF8C  F033    	movff	plusw1,btemp+9
  8822  01D8DC  5034               	movf	(btemp+10)^0,w,c
  8823  01D8DE  5C32               	subwf	(btemp+8)^0,w,c
  8824  01D8E0  5035               	movf	(btemp+11)^0,w,c
  8825  01D8E2  5833               	subwfb	(btemp+9)^0,w,c
  8826  01D8E4  A0D8               	btfss	status,0,c
  8827  01D8E6  D7B7               	goto	l14114
  8828                           
  8829                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  8830                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8831  01D8E8  0EFF               	movlw	-1
  8832  01D8EA  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  8833                           
  8834                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  8835  01D8F0  0E57               	movlw	87
  8836  01D8F2  0104               	movlb	4	; () banked
  8837  01D8F4  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  8838  01D8F6  E163               	bnz	l14134
  8839  01D8F8  0E19               	movlw	25
  8840  01D8FA  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  8841  01D8FC  A4D8               	btfss	status,2,c
  8842  01D8FE  D05F               	goto	u13320
  8843                           
  8844                           ; BSR set to: 4
  8845                           ;daq.c: 389:   r_cal.crc = 0x42;
  8846  01D900  0E42               	movlw	66
  8847  01D902  6FDA               	movwf	(_r_cal+154)& (0+255),b
  8848                           
  8849                           ; BSR set to: 4
  8850                           ;daq.c: 390:   x = 0;
  8851                           ;stkvar	_x @ sp[(-7)+0]
  8852  01D904  0EF9               	movlw	-7
  8853  01D906  6AE3               	clrf	plusw1,c
  8854  01D908  0EFA               	movlw	-6
  8855  01D90A  6AE3               	clrf	plusw1,c
  8856  01D90C                     l14126:
  8857                           
  8858                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8859                           ;stkvar	_x @ sp[(-7)+0]
  8860  01D90C  0EF9               	movlw	-7
  8861  01D90E  006F FF8C  F034    	movff	plusw1,btemp+10
  8862  01D914  0EFA               	movlw	-6
  8863  01D916  006F FF8C  F035    	movff	plusw1,btemp+11
  8864                           
  8865                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8866  01D91C  0EFB               	movlw	-5
  8867  01D91E  006F FF8C  F032    	movff	plusw1,btemp+8
  8868  01D924  0EFC               	movlw	-4
  8869  01D926  006F FF8C  F033    	movff	plusw1,btemp+9
  8870  01D92C  5034               	movf	(btemp+10)^0,w,c
  8871  01D92E  2432               	addwf	(btemp+8)^0,w,c
  8872  01D930  6ED9               	movwf	fsr2l,c
  8873  01D932  5035               	movf	(btemp+11)^0,w,c
  8874  01D934  2033               	addwfc	(btemp+9)^0,w,c
  8875  01D936  6EDA               	movwf	fsr2h,c
  8876  01D938  50DF               	movf	indf2,w,c
  8877  01D93A  6EE6               	movwf	postinc1,c
  8878  01D93C  EC7F  F014         	call	_CRC_8BitDataWrite	;wreg free
  8879  01D940                     l14128:
  8880  01D940  ECA1  F014         	call	_CRC_IsBusy	;wreg free
  8881  01D944  502A               	movf	btemp^0,w,c
  8882  01D946  A4D8               	btfss	status,2,c
  8883  01D948  D7FB               	goto	l14128
  8884                           
  8885                           ;daq.c: 395:   } while (++x < y);
  8886                           ;stkvar	_y @ sp[(-7)+4]
  8887  01D94A  0EFD               	movlw	-3
  8888  01D94C  006F FF8C  F034    	movff	plusw1,btemp+10
  8889  01D952  0EFE               	movlw	-2
  8890  01D954  006F FF8C  F035    	movff	plusw1,btemp+11
  8891                           
  8892                           ;stkvar	_x @ sp[(-7)+0]
  8893  01D95A  0EF9               	movlw	-7
  8894  01D95C  50E3               	movf	plusw1,w,c
  8895  01D95E  0F01               	addlw	1
  8896  01D960  6E2A               	movwf	btemp^0,c
  8897  01D962  0EF9               	movlw	-7
  8898  01D964  0060  F0AB  FFE3   	movff	btemp,plusw1
  8899  01D96A  6A2A               	clrf	btemp^0,c
  8900  01D96C  0EFA               	movlw	-6
  8901  01D96E  50E3               	movf	plusw1,w,c
  8902  01D970  202A               	addwfc	btemp^0,w,c
  8903  01D972  6E2A               	movwf	btemp^0,c
  8904  01D974  0EFA               	movlw	-6
  8905  01D976  0060  F0AB  FFE3   	movff	btemp,plusw1
  8906  01D97C  0EF9               	movlw	-7
  8907  01D97E  006F FF8C  F032    	movff	plusw1,btemp+8
  8908  01D984  0EFA               	movlw	-6
  8909  01D986  006F FF8C  F033    	movff	plusw1,btemp+9
  8910  01D98C  5034               	movf	(btemp+10)^0,w,c
  8911  01D98E  5C32               	subwf	(btemp+8)^0,w,c
  8912  01D990  5035               	movf	(btemp+11)^0,w,c
  8913  01D992  5833               	subwfb	(btemp+9)^0,w,c
  8914  01D994  A0D8               	btfss	status,0,c
  8915  01D996  D7BA               	goto	l14126
  8916                           
  8917                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8918  01D998  0E00               	movlw	0
  8919  01D99A  6EE6               	movwf	postinc1,c
  8920  01D99C  0E00               	movlw	0
  8921  01D99E  6EE6               	movwf	postinc1,c
  8922  01D9A0  0E00               	movlw	0
  8923  01D9A2  6EE6               	movwf	postinc1,c
  8924  01D9A4  EC7A  F0F2         	call	_CRC_CalculatedResultGet	;wreg free
  8925                           
  8926                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8927  01D9A8  0EFF               	movlw	-1
  8928  01D9AA  50E3               	movf	plusw1,w,c
  8929  01D9AC  6E34               	movwf	(btemp+10)^0,c
  8930  01D9AE  6A35               	clrf	(btemp+11)^0,c
  8931  01D9B0  5034               	movf	(btemp+10)^0,w,c
  8932  01D9B2  182A               	xorwf	btemp^0,w,c
  8933  01D9B4  E104               	bnz	u13320
  8934  01D9B6  5035               	movf	(btemp+11)^0,w,c
  8935  01D9B8  182B               	xorwf	(btemp+1)^0,w,c
  8936  01D9BA  B4D8               	btfsc	status,2,c
  8937  01D9BC  D002               	goto	l14142
  8938  01D9BE                     u13320:
  8939  01D9BE                     l14134:
  8940                           
  8941                           ;daq.c: 397:    return 0;
  8942  01D9BE  0E00               	movlw	0
  8943  01D9C0  D005               	goto	L5
  8944  01D9C2                     l14142:
  8945                           
  8946                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  8947                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8948  01D9C2  0EFF               	movlw	-1
  8949  01D9C4  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  8950                           
  8951                           ;daq.c: 402:  return 1;
  8952  01D9CA  0E01               	movlw	1
  8953  01D9CC                     L5:
  8954  01D9CC  6E2A               	movwf	btemp^0,c
  8955                           
  8956                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8957  01D9CE  0EF9               	movlw	249
  8958  01D9D0  26E1               	addwf	fsr1l,f,c
  8959  01D9D2  0EFF               	movlw	255
  8960  01D9D4  22E2               	addwfc	fsr1h,f,c
  8961  01D9D6  0012               	return		;funcret
  8962  01D9D8                     __end_of_read_cal_data:
  8963                           	opt callstack 0
  8964                           
  8965 ;; *************** function _DATAEE_ReadByte *****************
  8966 ;; Defined at:
  8967 ;;		line 194 in file "mcc_generated_files/memory.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  bAdd            2  [STACK] unsigned short 
  8970 ;; Auto vars:     Size  Location     Type
  8971 ;;		None
  8972 ;; Return value:  Size  Location     Type
  8973 ;;                  1  [STACK] unsigned char 
  8974 ;; Registers used:
  8975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8976 ;; Tracked objects:
  8977 ;;		On entry : 0/39
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8985 ;;Total ram usage:        0 bytes
  8986 ;; Hardware stack levels used:    1
  8987 ;; Hardware stack levels required when called:   15
  8988 ;; This function calls:
  8989 ;;		Nothing
  8990 ;; This function is called by:
  8991 ;;		_read_cal_data
  8992 ;; This function uses a reentrant model
  8993 ;;
  8994                           
  8995                           	psect	text14
  8996  002210                     __ptext14:
  8997                           	opt callstack 0
  8998  002210                     _DATAEE_ReadByte:
  8999                           	opt callstack 14
  9000                           
  9001                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  9002                           ;stkvar	_bAdd @ sp[(0)+-2]
  9003                           
  9004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9005                           ;incstack = 0
  9006  002210  0EFF               	movlw	255
  9007  002212  24E1               	addwf	fsr1l,w,c
  9008  002214  6ED9               	movwf	fsr2l,c
  9009  002216  0EFF               	movlw	255
  9010  002218  20E2               	addwfc	fsr1h,w,c
  9011  00221A  6EDA               	movwf	fsr2h,c
  9012  00221C  50DF               	movf	indf2,w,c
  9013  00221E  0B03               	andlw	3
  9014  002220  0139               	movlb	57	; () banked
  9015  002222  6FE1               	movwf	225,b	;volatile
  9016                           
  9017                           ; BSR set to: 57
  9018                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9019                           ;stkvar	_bAdd @ sp[(0)+-2]
  9020  002224  0EFE               	movlw	-2
  9021  002226  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  9022                           
  9023                           ; BSR set to: 57
  9024                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  9025  00222C  0E3F               	movlw	-193
  9026  00222E  17E5               	andwf	229,f,b	;volsfr
  9027                           
  9028                           ; BSR set to: 57
  9029                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  9030  002230  81E5               	bsf	229,0,b	;volsfr
  9031                           
  9032                           ; BSR set to: 57
  9033                           ;mcc_generated_files/memory.c: 200:     __nop();
  9034  002232  F000               	nop	
  9035                           
  9036                           ;mcc_generated_files/memory.c: 201:     __nop();
  9037  002234  F000               	nop	
  9038                           
  9039                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  9040  002236  006E F78C  F02A    	movff	14819,btemp	;volatile
  9041                           
  9042                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  9043  00223C  52E5               	movf	postdec1,f,c
  9044  00223E  52E5               	movf	postdec1,f,c
  9045  002240  0012               	return		;funcret
  9046  002242                     __end_of_DATAEE_ReadByte:
  9047                           	opt callstack 0
  9048                           
  9049 ;; *************** function _load_hist_data *****************
  9050 ;; Defined at:
  9051 ;;		line 224 in file "mbmc.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;		None
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  esr_rescale     2  [STACK] short 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1  [STACK] void 
  9058 ;; Registers used:
  9059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  9060 ;; Tracked objects:
  9061 ;;		On entry : 3F/1
  9062 ;;		On exit  : 3F/39
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9069 ;;Total ram usage:        0 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; Hardware stack levels required when called:   16
  9072 ;; This function calls:
  9073 ;;		___fladd
  9074 ;;		___flmul
  9075 ;;		___fltol
  9076 ;;		___xxtofl
  9077 ;;		_start_bsoc
  9078 ;;		_stop_bsoc
  9079 ;;		_time
  9080 ;; This function is called by:
  9081 ;;		_main
  9082 ;; This function uses a reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text15
  9086  01949C                     __ptext15:
  9087                           	opt callstack 0
  9088  01949C                     _load_hist_data:
  9089                           	opt callstack 0
  9090                           
  9091                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9092  01949C  52E6               	movf	postinc1,f,c
  9093  01949E  52E6               	movf	postinc1,f,c
  9094                           
  9095                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9096                           
  9097                           ;incstack = 0
  9098  0194A0  EC24  F015         	call	_stop_bsoc	;wreg free
  9099                           
  9100                           ; BSR set to: 57
  9101                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9102  0194A4  0E00               	movlw	0
  9103  0194A6  6EE6               	movwf	postinc1,c
  9104  0194A8  0E00               	movlw	0
  9105  0194AA  6EE6               	movwf	postinc1,c
  9106  0194AC  0E7A               	movlw	122
  9107  0194AE  6EE6               	movwf	postinc1,c
  9108  0194B0  0E44               	movlw	68
  9109  0194B2  6EE6               	movwf	postinc1,c
  9110  0194B4  EE22  F187         	lfsr	2,_C+136	;volatile
  9111  0194B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9112  0194BE  006F FF7B FFE6     	movff	postinc2,postinc1
  9113  0194C4  006F FF7B FFE6     	movff	postinc2,postinc1
  9114  0194CA  006F FF7B FFE6     	movff	postinc2,postinc1
  9115  0194D0  ECDD  F0B2         	call	___flmul	;wreg free
  9116  0194D4  0060  F0AB  FFE6   	movff	btemp,postinc1
  9117  0194DA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9118  0194E0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9119  0194E6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9120  0194EC  EC33  F0F3         	call	___fltol	;wreg free
  9121  0194F0  0060  F0A8  F034   	movff	btemp,btemp+10
  9122  0194F6  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9123                           
  9124                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9125  0194FC  0EFE               	movlw	-2
  9126  0194FE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9127  019504  0EFF               	movlw	-1
  9128  019506  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9129                           
  9130                           ;mbmc.c: 230:  C.hist[0].updates++;
  9131  01950C  EE22  F1C4         	lfsr	2,_C+197	;volatile
  9132  019510  2ADE               	incf	postinc2,f,c
  9133  019512  0E00               	movlw	0
  9134  019514  22DE               	addwfc	postinc2,f,c
  9135  019516  22DE               	addwfc	postinc2,f,c
  9136  019518  22DE               	addwfc	postinc2,f,c
  9137                           
  9138                           ;mbmc.c: 231:  C.hist[0].h[12] += C.pvkw;
  9139  01951A  EE22  F1A7         	lfsr	2,_C+168	;volatile
  9140  01951E  006F FF7B FFE6     	movff	postinc2,postinc1
  9141  019524  006F FF7B FFE6     	movff	postinc2,postinc1
  9142  01952A  006F FF7B FFE6     	movff	postinc2,postinc1
  9143  019530  006F FF7B FFE6     	movff	postinc2,postinc1
  9144  019536  0062  F7F0  F032   	movff	_C+253,btemp+8	;volatile
  9145  01953C  0062  F7F4  F033   	movff	_C+254,btemp+9	;volatile
  9146  019542  0E00               	movlw	0
  9147  019544  BE33               	btfsc	(btemp+9)^0,7,c
  9148  019546  0EFF               	movlw	255
  9149  019548  6E34               	movwf	(btemp+10)^0,c
  9150  01954A  6E35               	movwf	(btemp+11)^0,c
  9151  01954C  0060  F0CB  FFE6   	movff	btemp+8,postinc1
  9152  019552  0060  F0CF  FFE6   	movff	btemp+9,postinc1
  9153  019558  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  9154  01955E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  9155  019564  0E01               	movlw	1
  9156  019566  6EE6               	movwf	postinc1,c
  9157  019568  EC05  F0EB         	call	___xxtofl	;wreg free
  9158  01956C  0060  F0AB  FFE6   	movff	btemp,postinc1
  9159  019572  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9160  019578  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9161  01957E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9162  019584  ECF2  F0B6         	call	___fladd	;wreg free
  9163  019588  0060  F0AB  FFE6   	movff	btemp,postinc1
  9164  01958E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9165  019594  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9166  01959A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9167  0195A0  EC33  F0F3         	call	___fltol	;wreg free
  9168  0195A4  0060  F0A8  F034   	movff	btemp,btemp+10
  9169  0195AA  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9170  0195B0  0060  F0D0  F9FC   	movff	btemp+10,_C+253	;volatile
  9171  0195B6  0060  F0D4  F9FD   	movff	btemp+11,_C+254	;volatile
  9172                           
  9173                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9174  0195BC  EE22  F1FA         	lfsr	2,_C+251	;volatile
  9175  0195C0  2ADE               	incf	postinc2,f,c
  9176  0195C2  0E00               	movlw	0
  9177  0195C4  22DD               	addwfc	postdec2,f,c
  9178                           
  9179                           ;mbmc.c: 233:  if (esr_rescale > C.hist[0].h[10])
  9180                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9181  0195C6  EE22  F1F8         	lfsr	2,_C+249	;volatile
  9182  0195CA  0EFE               	movlw	-2
  9183  0195CC  50E3               	movf	plusw1,w,c
  9184  0195CE  5CDE               	subwf	postinc2,w,c
  9185  0195D0  50DE               	movf	postinc2,w,c
  9186  0195D2  0A80               	xorlw	128
  9187  0195D4  6E2A               	movwf	btemp^0,c
  9188  0195D6  0EFF               	movlw	-1
  9189  0195D8  50E3               	movf	plusw1,w,c
  9190  0195DA  0A80               	xorlw	128
  9191  0195DC  582A               	subwfb	btemp^0,w,c
  9192  0195DE  B0D8               	btfsc	status,0,c
  9193  0195E0  D00D               	goto	l14438
  9194                           
  9195                           ;mbmc.c: 234:   C.hist[0].h[10] = esr_rescale;
  9196                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9197  0195E2  50E1               	movf	fsr1l,w,c
  9198  0195E4  0FFE               	addlw	-2
  9199  0195E6  6ED9               	movwf	fsr2l,c
  9200  0195E8  50E2               	movf	fsr1h,w,c
  9201  0195EA  6EDA               	movwf	fsr2h,c
  9202  0195EC  0EFF               	movlw	255
  9203  0195EE  22DA               	addwfc	fsr2h,f,c
  9204  0195F0  006F FF78  F9F8    	movff	postinc2,_C+249	;volatile
  9205  0195F6  006F FF74  F9F9    	movff	postdec2,_C+250	;volatile
  9206  0195FC                     l14438:
  9207                           
  9208                           ;mbmc.c: 235:  if (esr_rescale < C.hist[0].h[9])
  9209  0195FC  EE22  F1F6         	lfsr	2,_C+247	;volatile
  9210                           
  9211                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9212  019600  0EFE               	movlw	-2
  9213  019602  006F FF8C  F02A    	movff	plusw1,btemp
  9214  019608  50DE               	movf	postinc2,w,c
  9215  01960A  5C2A               	subwf	btemp^0,w,c
  9216  01960C  0EFF               	movlw	-1
  9217  01960E  50E3               	movf	plusw1,w,c
  9218  019610  0A80               	xorlw	128
  9219  019612  6E2A               	movwf	btemp^0,c
  9220  019614  50DE               	movf	postinc2,w,c
  9221  019616  0A80               	xorlw	128
  9222  019618  582A               	subwfb	btemp^0,w,c
  9223  01961A  B0D8               	btfsc	status,0,c
  9224  01961C  D00D               	goto	l14442
  9225                           
  9226                           ;mbmc.c: 236:   C.hist[0].h[9] = esr_rescale;
  9227                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9228  01961E  50E1               	movf	fsr1l,w,c
  9229  019620  0FFE               	addlw	-2
  9230  019622  6ED9               	movwf	fsr2l,c
  9231  019624  50E2               	movf	fsr1h,w,c
  9232  019626  6EDA               	movwf	fsr2h,c
  9233  019628  0EFF               	movlw	255
  9234  01962A  22DA               	addwfc	fsr2h,f,c
  9235  01962C  006F FF78  F9F6    	movff	postinc2,_C+247	;volatile
  9236  019632  006F FF74  F9F7    	movff	postdec2,_C+248	;volatile
  9237  019638                     l14442:
  9238                           
  9239                           ;mbmc.c: 237:  C.hist[0].h[8] = C.bv_one_load * 100.0;
  9240  019638  0E00               	movlw	0
  9241  01963A  6EE6               	movwf	postinc1,c
  9242  01963C  0E00               	movlw	0
  9243  01963E  6EE6               	movwf	postinc1,c
  9244  019640  0EC8               	movlw	200
  9245  019642  6EE6               	movwf	postinc1,c
  9246  019644  0E42               	movlw	66
  9247  019646  6EE6               	movwf	postinc1,c
  9248  019648  EE22  F225         	lfsr	2,_C+294	;volatile
  9249  01964C  006F FF7B FFE6     	movff	postinc2,postinc1
  9250  019652  006F FF7B FFE6     	movff	postinc2,postinc1
  9251  019658  006F FF7B FFE6     	movff	postinc2,postinc1
  9252  01965E  006F FF7B FFE6     	movff	postinc2,postinc1
  9253  019664  ECDD  F0B2         	call	___flmul	;wreg free
  9254  019668  0060  F0AB  FFE6   	movff	btemp,postinc1
  9255  01966E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9256  019674  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9257  01967A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9258  019680  EC33  F0F3         	call	___fltol	;wreg free
  9259  019684  0060  F0A8  F034   	movff	btemp,btemp+10
  9260  01968A  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9261  019690  0060  F0D0  F9F4   	movff	btemp+10,_C+245	;volatile
  9262  019696  0060  F0D4  F9F5   	movff	btemp+11,_C+246	;volatile
  9263                           
  9264                           ;mbmc.c: 238:  C.hist[0].h[7] = C.bv_full_load * 100.0;
  9265  01969C  0E00               	movlw	0
  9266  01969E  6EE6               	movwf	postinc1,c
  9267  0196A0  0E00               	movlw	0
  9268  0196A2  6EE6               	movwf	postinc1,c
  9269  0196A4  0EC8               	movlw	200
  9270  0196A6  6EE6               	movwf	postinc1,c
  9271  0196A8  0E42               	movlw	66
  9272  0196AA  6EE6               	movwf	postinc1,c
  9273  0196AC  EE22  F229         	lfsr	2,_C+298	;volatile
  9274  0196B0  006F FF7B FFE6     	movff	postinc2,postinc1
  9275  0196B6  006F FF7B FFE6     	movff	postinc2,postinc1
  9276  0196BC  006F FF7B FFE6     	movff	postinc2,postinc1
  9277  0196C2  006F FF7B FFE6     	movff	postinc2,postinc1
  9278  0196C8  ECDD  F0B2         	call	___flmul	;wreg free
  9279  0196CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  9280  0196D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9281  0196D8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9282  0196DE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9283  0196E4  EC33  F0F3         	call	___fltol	;wreg free
  9284  0196E8  0060  F0A8  F034   	movff	btemp,btemp+10
  9285  0196EE  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9286  0196F4  0060  F0D0  F9F2   	movff	btemp+10,_C+243	;volatile
  9287  0196FA  0060  F0D4  F9F3   	movff	btemp+11,_C+244	;volatile
  9288                           
  9289                           ;mbmc.c: 239:  C.hist[0].h[6] = C.dynamic_ah;
  9290  019700  EE22  F18F         	lfsr	2,_C+144	;volatile
  9291  019704  006F FF7B FFE6     	movff	postinc2,postinc1
  9292  01970A  006F FF7B FFE6     	movff	postinc2,postinc1
  9293  019710  006F FF7B FFE6     	movff	postinc2,postinc1
  9294  019716  006F FF7B FFE6     	movff	postinc2,postinc1
  9295  01971C  EC33  F0F3         	call	___fltol	;wreg free
  9296  019720  0060  F0A8  F034   	movff	btemp,btemp+10
  9297  019726  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9298  01972C  0060  F0D0  F9F0   	movff	btemp+10,_C+241	;volatile
  9299  019732  0060  F0D4  F9F1   	movff	btemp+11,_C+242	;volatile
  9300                           
  9301                           ;mbmc.c: 240:  C.hist[0].h[5] = C.bkwi;
  9302  019738  EE22  F19F         	lfsr	2,_C+160	;volatile
  9303  01973C  006F FF7B FFE6     	movff	postinc2,postinc1
  9304  019742  006F FF7B FFE6     	movff	postinc2,postinc1
  9305  019748  006F FF7B FFE6     	movff	postinc2,postinc1
  9306  01974E  006F FF7B FFE6     	movff	postinc2,postinc1
  9307  019754  EC33  F0F3         	call	___fltol	;wreg free
  9308  019758  0060  F0A8  F034   	movff	btemp,btemp+10
  9309  01975E  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9310  019764  0060  F0D0  F9EE   	movff	btemp+10,_C+239	;volatile
  9311  01976A  0060  F0D4  F9EF   	movff	btemp+11,_C+240	;volatile
  9312                           
  9313                           ;mbmc.c: 241:  C.hist[0].h[4] = C.bkwo;
  9314  019770  EE22  F1A3         	lfsr	2,_C+164	;volatile
  9315  019774  006F FF7B FFE6     	movff	postinc2,postinc1
  9316  01977A  006F FF7B FFE6     	movff	postinc2,postinc1
  9317  019780  006F FF7B FFE6     	movff	postinc2,postinc1
  9318  019786  006F FF7B FFE6     	movff	postinc2,postinc1
  9319  01978C  EC33  F0F3         	call	___fltol	;wreg free
  9320  019790  0060  F0A8  F034   	movff	btemp,btemp+10
  9321  019796  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9322  01979C  0060  F0D0  F9EC   	movff	btemp+10,_C+237	;volatile
  9323  0197A2  0060  F0D4  F9ED   	movff	btemp+11,_C+238	;volatile
  9324                           
  9325                           ;mbmc.c: 242:  C.hist[0].h[3] = C.pv_ah;
  9326  0197A8  EE22  F193         	lfsr	2,_C+148	;volatile
  9327  0197AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9328  0197B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9329  0197B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9330  0197BE  006F FF7B FFE6     	movff	postinc2,postinc1
  9331  0197C4  EC33  F0F3         	call	___fltol	;wreg free
  9332  0197C8  0060  F0A8  F034   	movff	btemp,btemp+10
  9333  0197CE  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9334  0197D4  0060  F0D0  F9EA   	movff	btemp+10,_C+235	;volatile
  9335  0197DA  0060  F0D4  F9EB   	movff	btemp+11,_C+236	;volatile
  9336                           
  9337                           ;mbmc.c: 243:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9338  0197E0  EE22  F19B         	lfsr	2,_C+156	;volatile
  9339  0197E4  006F FF7B FFE6     	movff	postinc2,postinc1
  9340  0197EA  006F FF7B FFE6     	movff	postinc2,postinc1
  9341  0197F0  006F FF7B FFE6     	movff	postinc2,postinc1
  9342  0197F6  006F FF7B FFE6     	movff	postinc2,postinc1
  9343  0197FC  EC33  F0F3         	call	___fltol	;wreg free
  9344  019800  0060  F0A8  F034   	movff	btemp,btemp+10
  9345  019806  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9346  01980C  0060  F0D0  F9E4   	movff	btemp+10,_C+229	;volatile
  9347  019812  0060  F0D4  F9E5   	movff	btemp+11,_C+230	;volatile
  9348                           
  9349                           ;mbmc.c: 244:  C.hist[0].pclock = time(((void*)0));
  9350  019818  0E00               	movlw	0
  9351  01981A  6EE6               	movwf	postinc1,c
  9352  01981C  0E00               	movlw	0
  9353  01981E  6EE6               	movwf	postinc1,c
  9354  019820  EC7B  F00C         	call	_time	;wreg free
  9355  019824  52E5               	movf	postdec1,f,c
  9356  019826  006F FF9C  F041    	movff	indf1,btemp+23
  9357  01982C  52E5               	movf	postdec1,f,c
  9358  01982E  006F FF9C  F040    	movff	indf1,btemp+22
  9359  019834  52E5               	movf	postdec1,f,c
  9360  019836  006F FF9C  F03F    	movff	indf1,btemp+21
  9361  01983C  52E5               	movf	postdec1,f,c
  9362  01983E  006F FF9C  F03E    	movff	indf1,btemp+20
  9363  019844  52E5               	movf	postdec1,f,c
  9364  019846  006F FF9C  F03D    	movff	indf1,btemp+19
  9365  01984C  52E5               	movf	postdec1,f,c
  9366  01984E  006F FF9C  F03C    	movff	indf1,btemp+18
  9367  019854  52E5               	movf	postdec1,f,c
  9368  019856  006F FF9C  F03B    	movff	indf1,btemp+17
  9369  01985C  52E5               	movf	postdec1,f,c
  9370  01985E  006F FF9C  F03A    	movff	indf1,btemp+16
  9371  019864  EE22  F1C8         	lfsr	2,_C+201	;volatile
  9372  019868  0060  F0EB  FFDE   	movff	btemp+16,postinc2
  9373  01986E  0060  F0EF  FFDE   	movff	btemp+17,postinc2
  9374  019874  0060  F0F3  FFDE   	movff	btemp+18,postinc2
  9375  01987A  0060  F0F7  FFDE   	movff	btemp+19,postinc2
  9376  019880  0060  F0FB  FFDE   	movff	btemp+20,postinc2
  9377  019886  0060  F0FF  FFDE   	movff	btemp+21,postinc2
  9378  01988C  0060  F103  FFDE   	movff	btemp+22,postinc2
  9379  019892  0060  F107  FFDE   	movff	btemp+23,postinc2
  9380                           
  9381                           ; BSR set to: 57
  9382                           ;mbmc.c: 245:  C.dynamic_ah = 0.0;
  9383  019898  0E00               	movlw	0
  9384  01989A  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9385  0198A0  0E00               	movlw	0
  9386  0198A2  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9387  0198A8  0E00               	movlw	0
  9388  0198AA  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9389  0198B0  0E00               	movlw	0
  9390  0198B2  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9391                           
  9392                           ; BSR set to: 57
  9393                           ;mbmc.c: 246:  C.dynamic_ah_adj = 0.0;
  9394  0198B8  0E00               	movlw	0
  9395  0198BA  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9396  0198C0  0E00               	movlw	0
  9397  0198C2  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9398  0198C8  0E00               	movlw	0
  9399  0198CA  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9400  0198D0  0E00               	movlw	0
  9401  0198D2  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9402                           
  9403                           ; BSR set to: 57
  9404                           ;mbmc.c: 247:  C.pvkw = 0.0;
  9405  0198D8  0E00               	movlw	0
  9406  0198DA  006F FFA0  F9A7    	movff	wreg,_C+168	;volatile
  9407  0198E0  0E00               	movlw	0
  9408  0198E2  006F FFA0  F9A8    	movff	wreg,_C+169	;volatile
  9409  0198E8  0E00               	movlw	0
  9410  0198EA  006F FFA0  F9A9    	movff	wreg,_C+170	;volatile
  9411  0198F0  0E00               	movlw	0
  9412  0198F2  006F FFA0  F9AA    	movff	wreg,_C+171	;volatile
  9413                           
  9414                           ; BSR set to: 57
  9415                           ;mbmc.c: 248:  start_bsoc();
  9416  0198F8  EC99  F013         	call	_start_bsoc	;wreg free
  9417                           
  9418                           ; BSR set to: 57
  9419                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9420  0198FC  52E5               	movf	postdec1,f,c
  9421  0198FE  52E5               	movf	postdec1,f,c
  9422  019900  0012               	return		;funcret
  9423  019902                     __end_of_load_hist_data:
  9424                           	opt callstack 0
  9425                           
  9426 ;; *************** function _init_port_dma *****************
  9427 ;; Defined at:
  9428 ;;		line 104 in file "eadog.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;		None
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;		None
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1  [STACK] void 
  9435 ;; Registers used:
  9436 ;;		wreg, status,2
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/2
  9439 ;;		On exit  : 3F/3B
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9446 ;;Total ram usage:        0 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; Hardware stack levels required when called:   15
  9449 ;; This function calls:
  9450 ;;		Nothing
  9451 ;; This function is called by:
  9452 ;;		_main
  9453 ;; This function uses a reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text16
  9457  002242                     __ptext16:
  9458                           	opt callstack 0
  9459  002242                     _init_port_dma:
  9460                           	opt callstack 15
  9461                           
  9462                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9463                           
  9464                           ; BSR set to: 57
  9465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9466                           ;incstack = 0
  9467  002242  0E3F               	movlw	-193
  9468  002244  013B               	movlb	59	; () banked
  9469  002246  17DD               	andwf	221,f,b	;volatile
  9470                           
  9471                           ; BSR set to: 59
  9472                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9473  002248  9BDD               	bcf	221,5,b	;volatile
  9474                           
  9475                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9476  00224A  51DD               	movf	221,w,b	;volatile
  9477  00224C  0BF9               	andlw	-7
  9478  00224E  0902               	iorlw	2
  9479  002250  6FDD               	movwf	221,b	;volatile
  9480                           
  9481                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9482  002252  0EE7               	movlw	-25
  9483  002254  17DD               	andwf	221,f,b	;volatile
  9484                           
  9485                           ; BSR set to: 59
  9486                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9487  002256  81DD               	bsf	221,0,b	;volatile
  9488                           
  9489                           ; BSR set to: 59
  9490                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9491  002258  9DDC               	bcf	220,6,b	;volatile
  9492                           
  9493                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9494  00225A  0E3D               	movlw	61
  9495  00225C  6FD1               	movwf	209,b	;volatile
  9496  00225E  0EEA               	movlw	234
  9497  002260  6FD0               	movwf	208,b	;volatile
  9498                           
  9499                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9500  002262  0EFF               	movlw	low _port_data
  9501  002264  6FD9               	movwf	217,b	;volatile
  9502  002266  0E06               	movlw	high _port_data
  9503  002268  6FDA               	movwf	218,b	;volatile
  9504  00226A  0E00               	movlw	low (_port_data shr (0+16))
  9505  00226C  6FDB               	movwf	219,b	;volatile
  9506                           
  9507                           ; BSR set to: 59
  9508                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9509  00226E  9BDC               	bcf	220,5,b	;volatile
  9510                           
  9511                           ; BSR set to: 59
  9512                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9513  002270  0012               	return		;funcret
  9514  002272                     __end_of_init_port_dma:
  9515                           	opt callstack 0
  9516                           
  9517 ;; *************** function _init_display *****************
  9518 ;; Defined at:
  9519 ;;		line 38 in file "eadog.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;		None
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;		None
  9524 ;; Return value:  Size  Location     Type
  9525 ;;                  1  [STACK] void 
  9526 ;; Registers used:
  9527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9528 ;; Tracked objects:
  9529 ;;		On entry : 3F/3B
  9530 ;;		On exit  : 3F/3D
  9531 ;;		Unchanged: 0/0
  9532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9537 ;;Total ram usage:        0 bytes
  9538 ;; Hardware stack levels used:    1
  9539 ;; Hardware stack levels required when called:   17
  9540 ;; This function calls:
  9541 ;;		_ringBufS_init
  9542 ;;		_send_lcd_cmd
  9543 ;;		_send_lcd_cmd_long
  9544 ;;		_send_lcd_data
  9545 ;;		_wdtdelay
  9546 ;; This function is called by:
  9547 ;;		_main
  9548 ;; This function uses a reentrant model
  9549 ;;
  9550                           
  9551                           	psect	text17
  9552  0001A2                     __ptext17:
  9553                           	opt callstack 0
  9554  0001A2                     _init_display:
  9555                           	opt callstack 13
  9556                           
  9557                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9558                           
  9559                           ; BSR set to: 59
  9560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9561                           ;incstack = 0
  9562  0001A2  0E43               	movlw	low _ring_buf1
  9563  0001A4  0100               	movlb	0	; () banked
  9564  0001A6  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9565  0001A8  0E05               	movlw	high _ring_buf1
  9566  0001AA  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9567                           
  9568                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9569  0001AC  0E00               	movlw	low _ring_buf2
  9570  0001AE  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9571  0001B0  0E05               	movlw	high _ring_buf2
  9572  0001B2  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9576  0001B4  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9577  0001BA  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9578  0001C0  ECEF  F011         	call	_ringBufS_init	;wreg free
  9579                           
  9580                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9581  0001C4  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9582  0001CA  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9583  0001D0  ECEF  F011         	call	_ringBufS_init	;wreg free
  9584                           
  9585                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9586  0001D4  84BE               	bsf	190,2,c	;volatile
  9587                           
  9588                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9589  0001D6  013D               	movlb	61	; () banked
  9590  0001D8  9F14               	bcf	20,7,b	;volatile
  9591                           
  9592                           ; BSR set to: 61
  9593                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9594  0001DA  0E20               	movlw	32
  9595  0001DC  6F15               	movwf	21,b	;volatile
  9596                           
  9597                           ; BSR set to: 61
  9598                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9599  0001DE  0E03               	movlw	3
  9600  0001E0  6F16               	movwf	22,b	;volatile
  9601                           
  9602                           ; BSR set to: 61
  9603                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9604  0001E2  0E04               	movlw	4
  9605  0001E4  6F19               	movwf	25,b	;volatile
  9606                           
  9607                           ; BSR set to: 61
  9608                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9609  0001E6  0E02               	movlw	2
  9610  0001E8  6F1C               	movwf	28,b	;volatile
  9611                           
  9612                           ; BSR set to: 61
  9613                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9614  0001EA  0E83               	movlw	131
  9615  0001EC  6F14               	movwf	20,b	;volatile
  9616                           
  9617                           ; BSR set to: 61
  9618                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9619  0001EE  8F14               	bsf	20,7,b	;volatile
  9620                           
  9621                           ; BSR set to: 61
  9622                           ;eadog.c: 60:  wdtdelay(350000);
  9623  0001F0  0E30               	movlw	48
  9624  0001F2  6EE6               	movwf	postinc1,c
  9625  0001F4  0E57               	movlw	87
  9626  0001F6  6EE6               	movwf	postinc1,c
  9627  0001F8  0E05               	movlw	5
  9628  0001FA  6EE6               	movwf	postinc1,c
  9629  0001FC  0E00               	movlw	0
  9630  0001FE  6EE6               	movwf	postinc1,c
  9631  000200  ECD7  F00C         	call	_wdtdelay	;wreg free
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9635  000204  0E46               	movlw	70
  9636  000206  6EE6               	movwf	postinc1,c
  9637  000208  EC38  F00F         	call	_send_lcd_cmd_long	;wreg free
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9641  00020C  0E41               	movlw	65
  9642  00020E  6EE6               	movwf	postinc1,c
  9643  000210  EC58  F00F         	call	_send_lcd_cmd	;wreg free
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;eadog.c: 63:  wdtdelay(80);
  9647  000214  0E50               	movlw	80
  9648  000216  6EE6               	movwf	postinc1,c
  9649  000218  0E00               	movlw	0
  9650  00021A  6EE6               	movwf	postinc1,c
  9651  00021C  0E00               	movlw	0
  9652  00021E  6EE6               	movwf	postinc1,c
  9653  000220  0E00               	movlw	0
  9654  000222  6EE6               	movwf	postinc1,c
  9655  000224  ECD7  F00C         	call	_wdtdelay	;wreg free
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9659  000228  0E53               	movlw	83
  9660  00022A  6EE6               	movwf	postinc1,c
  9661  00022C  EC58  F00F         	call	_send_lcd_cmd	;wreg free
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;eadog.c: 65:  send_lcd_data(2);
  9665  000230  0E02               	movlw	2
  9666  000232  6EE6               	movwf	postinc1,c
  9667  000234  EC1C  F013         	call	_send_lcd_data	;wreg free
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;eadog.c: 66:  wdtdelay(80);
  9671  000238  0E50               	movlw	80
  9672  00023A  6EE6               	movwf	postinc1,c
  9673  00023C  0E00               	movlw	0
  9674  00023E  6EE6               	movwf	postinc1,c
  9675  000240  0E00               	movlw	0
  9676  000242  6EE6               	movwf	postinc1,c
  9677  000244  0E00               	movlw	0
  9678  000246  6EE6               	movwf	postinc1,c
  9679  000248  ECD7  F00C         	call	_wdtdelay	;wreg free
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9683  00024C  0E51               	movlw	81
  9684  00024E  6EE6               	movwf	postinc1,c
  9685  000250  EC38  F00F         	call	_send_lcd_cmd_long	;wreg free
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9689  000254  013D               	movlb	61	; () banked
  9690  000256  9F14               	bcf	20,7,b	;volatile
  9691                           
  9692                           ; BSR set to: 61
  9693                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9694  000258  0E02               	movlw	2
  9695  00025A  6F16               	movwf	22,b	;volatile
  9696                           
  9697                           ; BSR set to: 61
  9698                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9699  00025C  8F14               	bsf	20,7,b	;volatile
  9700                           
  9701                           ; BSR set to: 61
  9702                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9703  00025E  931A               	bcf	26,1,b	;volatile
  9704                           
  9705                           ; BSR set to: 61
  9706                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9707  000260  0E3F               	movlw	-193
  9708  000262  013B               	movlb	59	; () banked
  9709  000264  17FD               	andwf	253,f,b	;volatile
  9710                           
  9711                           ; BSR set to: 59
  9712                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9713  000266  9BFD               	bcf	253,5,b	;volatile
  9714                           
  9715                           ; BSR set to: 59
  9716                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9717  000268  51FD               	movf	253,w,b	;volatile
  9718  00026A  0BF9               	andlw	-7
  9719  00026C  0902               	iorlw	2
  9720  00026E  6FFD               	movwf	253,b	;volatile
  9721                           
  9722                           ; BSR set to: 59
  9723                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9724  000270  0EE7               	movlw	-25
  9725  000272  17FD               	andwf	253,f,b	;volatile
  9726                           
  9727                           ; BSR set to: 59
  9728                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9729  000274  81FD               	bsf	253,0,b	;volatile
  9730                           
  9731                           ; BSR set to: 59
  9732                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9733  000276  0E43               	movlw	low _ring_buf1
  9734  000278  6FF9               	movwf	249,b	;volatile
  9735  00027A  0E05               	movlw	high _ring_buf1
  9736  00027C  6FFA               	movwf	250,b	;volatile
  9737  00027E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9738  000280  6FFB               	movwf	251,b	;volatile
  9739                           
  9740                           ; BSR set to: 59
  9741                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9742  000282  9BFC               	bcf	252,5,b	;volatile
  9743                           
  9744                           ; BSR set to: 59
  9745                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9746  000284  013D               	movlb	61	; () banked
  9747  000286  831A               	bsf	26,1,b	;volatile
  9748                           
  9749                           ; BSR set to: 61
  9750                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9751  000288  94BE               	bcf	190,2,c	;volatile
  9752                           
  9753                           ; BSR set to: 61
  9754                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9755  00028A  0012               	return		;funcret
  9756  00028C                     __end_of_init_display:
  9757                           	opt callstack 0
  9758                           
  9759 ;; *************** function _send_lcd_data *****************
  9760 ;; Defined at:
  9761 ;;		line 123 in file "eadog.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;  data            1  [STACK] const unsigned char 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1  [STACK] void 
  9768 ;; Registers used:
  9769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9770 ;; Tracked objects:
  9771 ;;		On entry : 3F/0
  9772 ;;		On exit  : 3F/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9779 ;;Total ram usage:        0 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:   16
  9782 ;; This function calls:
  9783 ;;		_SPI1_Exchange8bit
  9784 ;;		_wdtdelay
  9785 ;; This function is called by:
  9786 ;;		_init_display
  9787 ;; This function uses a reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text18
  9791  002638                     __ptext18:
  9792                           	opt callstack 0
  9793  002638                     _send_lcd_data:
  9794                           	opt callstack 13
  9795                           
  9796                           ; BSR set to: 61
  9797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9798                           ;incstack = 0
  9799                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9800  002638  94BC               	bcf	188,2,c	;volatile
  9801                           
  9802                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9803                           ;stkvar	_data @ sp[(0)+-1]
  9804  00263A  0EFF               	movlw	-1
  9805  00263C  50E3               	movf	plusw1,w,c
  9806  00263E  6EE6               	movwf	postinc1,c
  9807  002640  ECDB  F013         	call	_SPI1_Exchange8bit	;wreg free
  9808                           
  9809                           ; BSR set to: 57
  9810                           ;eadog.c: 127:  wdtdelay(8);
  9811  002644  0E08               	movlw	8
  9812  002646  6EE6               	movwf	postinc1,c
  9813  002648  0E00               	movlw	0
  9814  00264A  6EE6               	movwf	postinc1,c
  9815  00264C  0E00               	movlw	0
  9816  00264E  6EE6               	movwf	postinc1,c
  9817  002650  0E00               	movlw	0
  9818  002652  6EE6               	movwf	postinc1,c
  9819  002654  ECD7  F00C         	call	_wdtdelay	;wreg free
  9820                           
  9821                           ; BSR set to: 0
  9822                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9823  002658  52E5               	movf	postdec1,f,c
  9824  00265A  0012               	return		;funcret
  9825  00265C                     __end_of_send_lcd_data:
  9826                           	opt callstack 0
  9827                           
  9828 ;; *************** function _send_lcd_cmd_long *****************
  9829 ;; Defined at:
  9830 ;;		line 139 in file "eadog.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;  cmd             1  [STACK] const unsigned char 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1  [STACK] void 
  9837 ;; Registers used:
  9838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9839 ;; Tracked objects:
  9840 ;;		On entry : 3F/0
  9841 ;;		On exit  : 3F/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9848 ;;Total ram usage:        0 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:   16
  9851 ;; This function calls:
  9852 ;;		_SPI1_Exchange8bit
  9853 ;;		_wdtdelay
  9854 ;; This function is called by:
  9855 ;;		_init_display
  9856 ;; This function uses a reentrant model
  9857 ;;
  9858                           
  9859                           	psect	text19
  9860  001E70                     __ptext19:
  9861                           	opt callstack 0
  9862  001E70                     _send_lcd_cmd_long:
  9863                           	opt callstack 13
  9864                           
  9865                           ; BSR set to: 0
  9866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9867                           ;incstack = 0
  9868                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9869  001E70  94BC               	bcf	188,2,c	;volatile
  9870                           
  9871                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9872  001E72  0EFE               	movlw	254
  9873  001E74  6EE6               	movwf	postinc1,c
  9874  001E76  ECDB  F013         	call	_SPI1_Exchange8bit	;wreg free
  9875                           
  9876                           ; BSR set to: 57
  9877                           ;eadog.c: 143:  wdtdelay(8);
  9878  001E7A  0E08               	movlw	8
  9879  001E7C  6EE6               	movwf	postinc1,c
  9880  001E7E  0E00               	movlw	0
  9881  001E80  6EE6               	movwf	postinc1,c
  9882  001E82  0E00               	movlw	0
  9883  001E84  6EE6               	movwf	postinc1,c
  9884  001E86  0E00               	movlw	0
  9885  001E88  6EE6               	movwf	postinc1,c
  9886  001E8A  ECD7  F00C         	call	_wdtdelay	;wreg free
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9890                           ;stkvar	_cmd @ sp[(0)+-1]
  9891  001E8E  0EFF               	movlw	-1
  9892  001E90  50E3               	movf	plusw1,w,c
  9893  001E92  6EE6               	movwf	postinc1,c
  9894  001E94  ECDB  F013         	call	_SPI1_Exchange8bit	;wreg free
  9895                           
  9896                           ;eadog.c: 145:  wdtdelay(800);
  9897  001E98  0E20               	movlw	32
  9898  001E9A  6EE6               	movwf	postinc1,c
  9899  001E9C  0E03               	movlw	3
  9900  001E9E  6EE6               	movwf	postinc1,c
  9901  001EA0  0E00               	movlw	0
  9902  001EA2  6EE6               	movwf	postinc1,c
  9903  001EA4  0E00               	movlw	0
  9904  001EA6  6EE6               	movwf	postinc1,c
  9905  001EA8  ECD7  F00C         	call	_wdtdelay	;wreg free
  9906                           
  9907                           ; BSR set to: 0
  9908                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9909  001EAC  52E5               	movf	postdec1,f,c
  9910  001EAE  0012               	return		;funcret
  9911  001EB0                     __end_of_send_lcd_cmd_long:
  9912                           	opt callstack 0
  9913                           
  9914 ;; *************** function _send_lcd_cmd *****************
  9915 ;; Defined at:
  9916 ;;		line 130 in file "eadog.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  cmd             1  [STACK] const unsigned char 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1  [STACK] void 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9925 ;; Tracked objects:
  9926 ;;		On entry : 3F/0
  9927 ;;		On exit  : 3F/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9934 ;;Total ram usage:        0 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:   16
  9937 ;; This function calls:
  9938 ;;		_SPI1_Exchange8bit
  9939 ;;		_wdtdelay
  9940 ;; This function is called by:
  9941 ;;		_init_display
  9942 ;; This function uses a reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text20
  9946  001EB0                     __ptext20:
  9947                           	opt callstack 0
  9948  001EB0                     _send_lcd_cmd:
  9949                           	opt callstack 13
  9950                           
  9951                           ; BSR set to: 0
  9952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9953                           ;incstack = 0
  9954                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9955  001EB0  94BC               	bcf	188,2,c	;volatile
  9956                           
  9957                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9958  001EB2  0EFE               	movlw	254
  9959  001EB4  6EE6               	movwf	postinc1,c
  9960  001EB6  ECDB  F013         	call	_SPI1_Exchange8bit	;wreg free
  9961                           
  9962                           ; BSR set to: 57
  9963                           ;eadog.c: 134:  wdtdelay(8);
  9964  001EBA  0E08               	movlw	8
  9965  001EBC  6EE6               	movwf	postinc1,c
  9966  001EBE  0E00               	movlw	0
  9967  001EC0  6EE6               	movwf	postinc1,c
  9968  001EC2  0E00               	movlw	0
  9969  001EC4  6EE6               	movwf	postinc1,c
  9970  001EC6  0E00               	movlw	0
  9971  001EC8  6EE6               	movwf	postinc1,c
  9972  001ECA  ECD7  F00C         	call	_wdtdelay	;wreg free
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9976                           ;stkvar	_cmd @ sp[(0)+-1]
  9977  001ECE  0EFF               	movlw	-1
  9978  001ED0  50E3               	movf	plusw1,w,c
  9979  001ED2  6EE6               	movwf	postinc1,c
  9980  001ED4  ECDB  F013         	call	_SPI1_Exchange8bit	;wreg free
  9981                           
  9982                           ;eadog.c: 136:  wdtdelay(8);
  9983  001ED8  0E08               	movlw	8
  9984  001EDA  6EE6               	movwf	postinc1,c
  9985  001EDC  0E00               	movlw	0
  9986  001EDE  6EE6               	movwf	postinc1,c
  9987  001EE0  0E00               	movlw	0
  9988  001EE2  6EE6               	movwf	postinc1,c
  9989  001EE4  0E00               	movlw	0
  9990  001EE6  6EE6               	movwf	postinc1,c
  9991  001EE8  ECD7  F00C         	call	_wdtdelay	;wreg free
  9992                           
  9993                           ; BSR set to: 0
  9994                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9995  001EEC  52E5               	movf	postdec1,f,c
  9996  001EEE  0012               	return		;funcret
  9997  001EF0                     __end_of_send_lcd_cmd:
  9998                           	opt callstack 0
  9999                           
 10000 ;; *************** function _wdtdelay *****************
 10001 ;; Defined at:
 10002 ;;		line 23 in file "eadog.c"
 10003 ;; Parameters:    Size  Location     Type
 10004 ;;  delay           4  [STACK] const unsigned long 
 10005 ;; Auto vars:     Size  Location     Type
 10006 ;;		None
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  1  [STACK] void 
 10009 ;; Registers used:
 10010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10011 ;; Tracked objects:
 10012 ;;		On entry : 2/3D
 10013 ;;		On exit  : 3F/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10020 ;;Total ram usage:        0 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:   15
 10023 ;; This function calls:
 10024 ;;		Nothing
 10025 ;; This function is called by:
 10026 ;;		_init_display
 10027 ;;		_send_lcd_data
 10028 ;;		_send_lcd_cmd
 10029 ;;		_send_lcd_cmd_long
 10030 ;; This function uses a reentrant model
 10031 ;;
 10032                           
 10033                           	psect	text21
 10034  0019AE                     __ptext21:
 10035                           	opt callstack 0
 10036  0019AE                     _wdtdelay:
 10037                           	opt callstack 14
 10038                           
 10039                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10040                           
 10041                           ; BSR set to: 0
 10042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10043                           ;incstack = 0
 10044  0019AE  0100               	movlb	0	; () banked
 10045  0019B0  6B90               	clrf	wdtdelay@dcount& (0+255),b
 10046  0019B2  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10047  0019B4  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10048  0019B6  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10049  0019B8                     l1614:
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;eadog.c: 28:   __nop();
 10053  0019B8  F000               	nop	
 10054  0019BA  0004               	clrwdt		;# 
 10055                           
 10056                           ;eadog.c: 30:  };
 10057  0019BC  0E01               	movlw	1
 10058  0019BE  0100               	movlb	0	; () banked
 10059  0019C0  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 10060  0019C2  0E00               	movlw	0
 10061  0019C4  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10062  0019C6  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10063  0019C8  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;stkvar	_delay @ sp[(0)+-4]
 10067  0019CA  0EFC               	movlw	-4
 10068  0019CC  006F FF8C  F02A    	movff	plusw1,btemp
 10069  0019D2  5190               	movf	wdtdelay@dcount& (0+255),w,b
 10070  0019D4  5C2A               	subwf	btemp^0,w,c
 10071  0019D6  0EFD               	movlw	-3
 10072  0019D8  006F FF8C  F02A    	movff	plusw1,btemp
 10073  0019DE  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10074  0019E0  582A               	subwfb	btemp^0,w,c
 10075  0019E2  0EFE               	movlw	-2
 10076  0019E4  006F FF8C  F02A    	movff	plusw1,btemp
 10077  0019EA  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10078  0019EC  582A               	subwfb	btemp^0,w,c
 10079  0019EE  0EFF               	movlw	-1
 10080  0019F0  006F FF8C  F02A    	movff	plusw1,btemp
 10081  0019F6  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10082  0019F8  582A               	subwfb	btemp^0,w,c
 10083  0019FA  B0D8               	btfsc	status,0,c
 10084  0019FC  D7DD               	goto	l1614
 10085                           
 10086                           ; BSR set to: 0
 10087                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10088  0019FE  52E5               	movf	postdec1,f,c
 10089  001A00  52E5               	movf	postdec1,f,c
 10090  001A02  52E5               	movf	postdec1,f,c
 10091  001A04  52E5               	movf	postdec1,f,c
 10092  001A06  0012               	return		;funcret
 10093  001A08                     __end_of_wdtdelay:
 10094                           	opt callstack 0
 10095                           
 10096 ;; *************** function _SPI1_Exchange8bit *****************
 10097 ;; Defined at:
 10098 ;;		line 79 in file "mcc_generated_files/spi1.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  data            1  [STACK] unsigned char 
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;		None
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  1  [STACK] unsigned char 
 10105 ;; Registers used:
 10106 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 10107 ;; Tracked objects:
 10108 ;;		On entry : 0/1
 10109 ;;		On exit  : 3F/39
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10116 ;;Total ram usage:        0 bytes
 10117 ;; Hardware stack levels used:    1
 10118 ;; Hardware stack levels required when called:   15
 10119 ;; This function calls:
 10120 ;;		Nothing
 10121 ;; This function is called by:
 10122 ;;		_send_lcd_data
 10123 ;;		_send_lcd_cmd
 10124 ;;		_send_lcd_cmd_long
 10125 ;;		_set_dac
 10126 ;; This function uses a reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text22
 10130  0027B6                     __ptext22:
 10131                           	opt callstack 0
 10132  0027B6                     _SPI1_Exchange8bit:
 10133                           	opt callstack 14
 10134                           
 10135                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 10136                           
 10137                           ; BSR set to: 0
 10138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10139                           ;incstack = 0
 10140  0027B6  0E01               	movlw	1
 10141  0027B8  013D               	movlb	61	; () banked
 10142  0027BA  6F12               	movwf	18,b	;volatile
 10143                           
 10144                           ; BSR set to: 61
 10145                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 10146                           ;stkvar	_data @ sp[(0)+-1]
 10147  0027BC  0EFF               	movlw	-1
 10148  0027BE  006F FF8F FD11     	movff	plusw1,15633	;volatile
 10149  0027C4                     l809:
 10150                           
 10151                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 10152  0027C4  0139               	movlb	57	; () banked
 10153  0027C6  A9A2               	btfss	162,4,b	;volatile
 10154  0027C8  D7FD               	goto	l809
 10155                           
 10156                           ; BSR set to: 57
 10157                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 10158  0027CA  006F F440  F02A    	movff	15632,btemp	;volatile
 10159                           
 10160                           ; BSR set to: 57
 10161                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10162  0027D0  52E5               	movf	postdec1,f,c
 10163  0027D2  0012               	return		;funcret
 10164  0027D4                     __end_of_SPI1_Exchange8bit:
 10165                           	opt callstack 0
 10166                           
 10167 ;; *************** function _ringBufS_init *****************
 10168 ;; Defined at:
 10169 ;;		line 22 in file "ringbufs.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  _this           2  [STACK] PTR volatile struct ring
 10172 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;		None
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  1  [STACK] void 
 10177 ;; Registers used:
 10178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10188 ;;Total ram usage:        0 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:   16
 10191 ;; This function calls:
 10192 ;;		_memset
 10193 ;; This function is called by:
 10194 ;;		_init_display
 10195 ;; This function uses a reentrant model
 10196 ;;
 10197                           
 10198                           	psect	text23
 10199  0023DE                     __ptext23:
 10200                           	opt callstack 0
 10201  0023DE                     _ringBufS_init:
 10202                           	opt callstack 13
 10203                           
 10204                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 10205                           
 10206                           ; BSR set to: 57
 10207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10208                           ;incstack = 0
 10209  0023DE  0E43               	movlw	67
 10210  0023E0  6EE6               	movwf	postinc1,c
 10211  0023E2  0E00               	movlw	0
 10212  0023E4  6EE6               	movwf	postinc1,c
 10213  0023E6  0E00               	movlw	0
 10214  0023E8  6EE6               	movwf	postinc1,c
 10215  0023EA  0E00               	movlw	0
 10216  0023EC  6EE6               	movwf	postinc1,c
 10217                           
 10218                           ;stkvar	__this @ sp[(-4)+-2]
 10219  0023EE  0EFA               	movlw	-6
 10220  0023F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10221  0023F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10222  0023FC  ECB9  F0D8         	call	_memset	;wreg free
 10223                           
 10224                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10225  002400  52E5               	movf	postdec1,f,c
 10226  002402  52E5               	movf	postdec1,f,c
 10227  002404  0012               	return		;funcret
 10228  002406                     __end_of_ringBufS_init:
 10229                           	opt callstack 0
 10230                           
 10231 ;; *************** function _init_bsoc *****************
 10232 ;; Defined at:
 10233 ;;		line 110 in file "bsoc.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;		None
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;		None
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  1  [STACK] void 
 10240 ;; Registers used:
 10241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10242 ;; Tracked objects:
 10243 ;;		On entry : 0/1
 10244 ;;		On exit  : 0/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10251 ;;Total ram usage:        0 bytes
 10252 ;; Hardware stack levels used:    1
 10253 ;; Hardware stack levels required when called:   18
 10254 ;; This function calls:
 10255 ;;		_TMR3_SetInterruptHandler
 10256 ;;		_Volts_to_SOC
 10257 ;;		___fldiv
 10258 ;;		___flmul
 10259 ;;		___fltol
 10260 ;;		___xxtofl
 10261 ;;		_conv_raw_result
 10262 ;; This function is called by:
 10263 ;;		_main
 10264 ;; This function uses a reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text24
 10268  01C6C2                     __ptext24:
 10269                           	opt callstack 0
 10270  01C6C2                     _init_bsoc:
 10271                           	opt callstack 12
 10272                           
 10273                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
 10274                           
 10275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10276                           ;incstack = 0
 10277  01C6C2  0E00               	movlw	0
 10278  01C6C4  6EE6               	movwf	postinc1,c
 10279  01C6C6  0E00               	movlw	0
 10280  01C6C8  6EE6               	movwf	postinc1,c
 10281  01C6CA  0E7A               	movlw	122
 10282  01C6CC  6EE6               	movwf	postinc1,c
 10283  01C6CE  0E44               	movlw	68
 10284  01C6D0  6EE6               	movwf	postinc1,c
 10285  01C6D2  0E00               	movlw	0
 10286  01C6D4  6EE6               	movwf	postinc1,c
 10287  01C6D6  0E04               	movlw	4
 10288  01C6D8  6EE6               	movwf	postinc1,c
 10289  01C6DA  EC76  F0C3         	call	_conv_raw_result	;wreg free
 10290  01C6DE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10291  01C6E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10292  01C6EA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10293  01C6F0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10294  01C6F6  EC33  F0F3         	call	___fltol	;wreg free
 10295  01C6FA  0060  F0AB  FFE6   	movff	btemp,postinc1
 10296  01C700  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10297  01C706  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10298  01C70C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10299  01C712  0E00               	movlw	0
 10300  01C714  6EE6               	movwf	postinc1,c
 10301  01C716  EC05  F0EB         	call	___xxtofl	;wreg free
 10302  01C71A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10303  01C720  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10304  01C726  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10305  01C72C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10306  01C732  ECDD  F0B2         	call	___flmul	;wreg free
 10307  01C736  0060  F0AB  FFE6   	movff	btemp,postinc1
 10308  01C73C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10309  01C742  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10310  01C748  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10311  01C74E  EC33  F0F3         	call	___fltol	;wreg free
 10312  01C752  0060  F0AB  FFE6   	movff	btemp,postinc1
 10313  01C758  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10314  01C75E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10315  01C764  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10316  01C76A  EC42  F003         	call	_Volts_to_SOC	;wreg free
 10317  01C76E  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
 10318  01C774  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
 10319                           
 10320                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
 10321  01C77A  EE22  F18B         	lfsr	2,_C+140	;volatile
 10322  01C77E  006F FF7B FFE6     	movff	postinc2,postinc1
 10323  01C784  006F FF7B FFE6     	movff	postinc2,postinc1
 10324  01C78A  006F FF7B FFE6     	movff	postinc2,postinc1
 10325  01C790  006F FF7B FFE6     	movff	postinc2,postinc1
 10326  01C796  0E00               	movlw	0
 10327  01C798  6EE6               	movwf	postinc1,c
 10328  01C79A  0E00               	movlw	0
 10329  01C79C  6EE6               	movwf	postinc1,c
 10330  01C79E  0EC8               	movlw	200
 10331  01C7A0  6EE6               	movwf	postinc1,c
 10332  01C7A2  0E42               	movlw	66
 10333  01C7A4  6EE6               	movwf	postinc1,c
 10334  01C7A6  0E00               	movlw	0
 10335  01C7A8  6EE6               	movwf	postinc1,c
 10336  01C7AA  0E00               	movlw	0
 10337  01C7AC  6EE6               	movwf	postinc1,c
 10338  01C7AE  0E7A               	movlw	122
 10339  01C7B0  6EE6               	movwf	postinc1,c
 10340  01C7B2  0E44               	movlw	68
 10341  01C7B4  6EE6               	movwf	postinc1,c
 10342  01C7B6  0E00               	movlw	0
 10343  01C7B8  6EE6               	movwf	postinc1,c
 10344  01C7BA  0E04               	movlw	4
 10345  01C7BC  6EE6               	movwf	postinc1,c
 10346  01C7BE  EC76  F0C3         	call	_conv_raw_result	;wreg free
 10347  01C7C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 10348  01C7C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10349  01C7CE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10350  01C7D4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10351  01C7DA  EC33  F0F3         	call	___fltol	;wreg free
 10352  01C7DE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10353  01C7E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10354  01C7EA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10355  01C7F0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10356  01C7F6  0E00               	movlw	0
 10357  01C7F8  6EE6               	movwf	postinc1,c
 10358  01C7FA  EC05  F0EB         	call	___xxtofl	;wreg free
 10359  01C7FE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10360  01C804  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10361  01C80A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10362  01C810  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10363  01C816  ECDD  F0B2         	call	___flmul	;wreg free
 10364  01C81A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10365  01C820  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10366  01C826  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10367  01C82C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10368  01C832  EC33  F0F3         	call	___fltol	;wreg free
 10369  01C836  0060  F0AB  FFE6   	movff	btemp,postinc1
 10370  01C83C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10371  01C842  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10372  01C848  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10373  01C84E  EC42  F003         	call	_Volts_to_SOC	;wreg free
 10374  01C852  0060  F0A8  F034   	movff	btemp,btemp+10
 10375  01C858  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10376  01C85E  5034               	movf	(btemp+10)^0,w,c
 10377  01C860  6E2E               	movwf	(btemp+4)^0,c
 10378  01C862  5035               	movf	(btemp+11)^0,w,c
 10379  01C864  6E2F               	movwf	(btemp+5)^0,c
 10380  01C866  6A30               	clrf	(btemp+6)^0,c
 10381  01C868  6A31               	clrf	(btemp+7)^0,c
 10382  01C86A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 10383  01C870  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 10384  01C876  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 10385  01C87C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 10386  01C882  0E00               	movlw	0
 10387  01C884  6EE6               	movwf	postinc1,c
 10388  01C886  EC05  F0EB         	call	___xxtofl	;wreg free
 10389  01C88A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10390  01C890  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10391  01C896  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10392  01C89C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10393  01C8A2  EC2E  F0BE         	call	___fldiv	;wreg free
 10394  01C8A6  0060  F0AB  FFE6   	movff	btemp,postinc1
 10395  01C8AC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10396  01C8B2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10397  01C8B8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10398  01C8BE  ECDD  F0B2         	call	___flmul	;wreg free
 10399  01C8C2  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
 10400  01C8C8  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
 10401  01C8CE  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
 10402  01C8D4  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
 10403                           
 10404                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 10405  01C8DA  EE22  F18F         	lfsr	2,_C+144	;volatile
 10406  01C8DE  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 10407  01C8E4  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 10408  01C8EA  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 10409  01C8F0  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 10410                           
 10411                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 10412  01C8F6  0E38               	movlw	low _calc_bsoc
 10413  01C8F8  6EE6               	movwf	postinc1,c
 10414  01C8FA  0E49               	movlw	high _calc_bsoc
 10415  01C8FC  6EE6               	movwf	postinc1,c
 10416  01C8FE  0E01               	movlw	low (_calc_bsoc shr (0+16))
 10417  01C900  6EE6               	movwf	postinc1,c
 10418  01C902  EC7B  F012         	call	_TMR3_SetInterruptHandler	;wreg free
 10419                           
 10420                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10421  01C906  0012               	return		;funcret
 10422  01C908                     __end_of_init_bsoc:
 10423                           	opt callstack 0
 10424                           
 10425 ;; *************** function _Volts_to_SOC *****************
 10426 ;; Defined at:
 10427 ;;		line 175 in file "bsoc.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  cvoltage        4  [STACK] const unsigned long 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;  soc             2  [STACK] unsigned short 
 10432 ;;  slot            1  [STACK] unsigned char 
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  2  [STACK] unsigned short 
 10435 ;; Registers used:
 10436 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/1
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10446 ;;Total ram usage:        0 bytes
 10447 ;; Hardware stack levels used:    1
 10448 ;; Hardware stack levels required when called:   15
 10449 ;; This function calls:
 10450 ;;		Nothing
 10451 ;; This function is called by:
 10452 ;;		_init_bsoc
 10453 ;; This function uses a reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text25
 10457  000684                     __ptext25:
 10458                           	opt callstack 0
 10459  000684                     _Volts_to_SOC:
 10460                           	opt callstack 0
 10461                           
 10462                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10463  000684  52E6               	movf	postinc1,f,c
 10464  000686  52E6               	movf	postinc1,f,c
 10465  000688  52E6               	movf	postinc1,f,c
 10466                           
 10467                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10468                           ;stkvar	_soc @ sp[(-3)+0]
 10469                           
 10470                           ;incstack = 0
 10471  00068A  0EFD               	movlw	-3
 10472  00068C  6AE3               	clrf	plusw1,c
 10473  00068E  0EFE               	movlw	-2
 10474  000690  6AE3               	clrf	plusw1,c
 10475                           
 10476                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10477                           ;stkvar	_slot @ sp[(-3)+2]
 10478  000692  0EFF               	movlw	-1
 10479  000694  6AE3               	clrf	plusw1,c
 10480  000696                     l13856:
 10481                           
 10482                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10483                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10484                           ;stkvar	_slot @ sp[(-3)+2]
 10485  000696  0EFF               	movlw	-1
 10486  000698  50E3               	movf	plusw1,w,c
 10487  00069A  0D08               	mullw	8
 10488  00069C  0EAB               	movlw	low _BVSOC_TABLE
 10489  00069E  24F3               	addwf	243,w,c
 10490  0006A0  6EF6               	movwf	tblptrl,c
 10491  0006A2  0EF7               	movlw	high _BVSOC_TABLE
 10492  0006A4  20F4               	addwfc	244,w,c
 10493  0006A6  6EF7               	movwf	tblptrh,c
 10494  0006A8                     	if	1	;There are 3 active tblptr bytes
 10495  0006A8  6AF8               	clrf	tblptru,c
 10496  0006AA  0E00               	movlw	low (__mediumconst shr (0+16))
 10497  0006AC  22F8               	addwfc	tblptru,f,c
 10498  0006AE                     	endif
 10499  0006AE  0EF9               	movlw	-7
 10500  0006B0  50E3               	movf	plusw1,w,c
 10501  0006B2  0009               	tblrd		*+
 10502  0006B4  5CF5               	subwf	tablat,w,c
 10503  0006B6  0EFA               	movlw	-6
 10504  0006B8  50E3               	movf	plusw1,w,c
 10505  0006BA  0009               	tblrd		*+
 10506  0006BC  58F5               	subwfb	tablat,w,c
 10507  0006BE  0EFB               	movlw	-5
 10508  0006C0  50E3               	movf	plusw1,w,c
 10509  0006C2  0009               	tblrd		*+
 10510  0006C4  58F5               	subwfb	tablat,w,c
 10511  0006C6  0EFC               	movlw	-4
 10512  0006C8  50E3               	movf	plusw1,w,c
 10513  0006CA  0009               	tblrd		*+
 10514  0006CC  58F5               	subwfb	tablat,w,c
 10515  0006CE  B0D8               	btfsc	status,0,c
 10516  0006D0  D020               	goto	l13860
 10517                           
 10518                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10519                           ;stkvar	_slot @ sp[(-3)+2]
 10520  0006D2  0EFF               	movlw	-1
 10521  0006D4  50E3               	movf	plusw1,w,c
 10522  0006D6  0D08               	mullw	8
 10523  0006D8  0E04               	movlw	4
 10524  0006DA  26F3               	addwf	243,f,c
 10525  0006DC  0E00               	movlw	0
 10526  0006DE  22F4               	addwfc	244,f,c
 10527  0006E0  0EAB               	movlw	low _BVSOC_TABLE
 10528  0006E2  24F3               	addwf	243,w,c
 10529  0006E4  6EF6               	movwf	tblptrl,c
 10530  0006E6  0EF7               	movlw	high _BVSOC_TABLE
 10531  0006E8  20F4               	addwfc	244,w,c
 10532  0006EA  6EF7               	movwf	tblptrh,c
 10533  0006EC                     	if	1	;There are 3 active tblptr bytes
 10534  0006EC  6AF8               	clrf	tblptru,c
 10535  0006EE  0E00               	movlw	low (__mediumconst shr (0+16))
 10536  0006F0  22F8               	addwfc	tblptru,f,c
 10537  0006F2                     	endif
 10538  0006F2  0009               	tblrd		*+
 10539  0006F4  006F FFD4  F034    	movff	tablat,btemp+10
 10540  0006FA  0009               	tblrd		*+
 10541  0006FC  006F FFD4  F035    	movff	tablat,btemp+11
 10542                           
 10543                           ;stkvar	_soc @ sp[(-3)+0]
 10544  000702  0EFD               	movlw	-3
 10545  000704  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10546  00070A  0EFE               	movlw	-2
 10547  00070C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10548  000712                     l13860:
 10549                           
 10550                           ;bsoc.c: 187:  }
 10551                           ;stkvar	_slot @ sp[(-3)+2]
 10552  000712  0EFF               	movlw	-1
 10553  000714  2AE3               	incf	plusw1,f,c
 10554                           
 10555                           ;stkvar	_slot @ sp[(-3)+2]
 10556  000716  0EFF               	movlw	-1
 10557  000718  006F FF8C  F02A    	movff	plusw1,btemp
 10558  00071E  0E19               	movlw	25
 10559  000720  642A               	cpfsgt	btemp^0,c
 10560  000722  D7B9               	goto	l13856
 10561                           
 10562                           ;bsoc.c: 188:  return soc;
 10563                           ;stkvar	_soc @ sp[(-3)+0]
 10564  000724  0EFD               	movlw	-3
 10565  000726  006F FF8C  F02A    	movff	plusw1,btemp
 10566  00072C  0EFE               	movlw	-2
 10567  00072E  006F FF8C  F02B    	movff	plusw1,btemp+1
 10568                           
 10569                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10570  000734  0EF9               	movlw	249
 10571  000736  26E1               	addwf	fsr1l,f,c
 10572  000738  0EFF               	movlw	255
 10573  00073A  22E2               	addwfc	fsr1h,f,c
 10574  00073C  0012               	return		;funcret
 10575  00073E                     __end_of_Volts_to_SOC:
 10576                           	opt callstack 0
 10577                           
 10578 ;; *************** function _hid_display *****************
 10579 ;; Defined at:
 10580 ;;		line 22 in file "hid.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;  h               2  [STACK] PTR struct H_data
 10583 ;;		 -> H(9), 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;		None
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  2  [STACK] PTR struct H_data
 10588 ;; Registers used:
 10589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/39
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;Total ram usage:        0 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:   17
 10602 ;; This function calls:
 10603 ;;		_hid_input
 10604 ;; This function is called by:
 10605 ;;		_main
 10606 ;; This function uses a reentrant model
 10607 ;;
 10608                           
 10609                           	psect	text26
 10610  01D1DC                     __ptext26:
 10611                           	opt callstack 0
 10612  01D1DC                     _hid_display:
 10613                           	opt callstack 13
 10614                           
 10615                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10616                           ;stkvar	_h @ sp[(0)+-2]
 10617                           
 10618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10619                           ;incstack = 0
 10620  01D1DC  0EFE               	movlw	-2
 10621  01D1DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10622  01D1E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10623  01D1EA  ECF2  F0F9         	call	_hid_input	;wreg free
 10624                           
 10625                           ;hid.c: 26:  switch (h->h_state) {
 10626  01D1EE  D0E6               	goto	l17288
 10627  01D1F0                     l17262:
 10628                           
 10629                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10630                           ;stkvar	_h @ sp[(0)+-2]
 10631  01D1F0  0EFE               	movlw	-2
 10632  01D1F2  006F FF8C  F034    	movff	plusw1,btemp+10
 10633  01D1F8  0EFF               	movlw	-1
 10634  01D1FA  006F FF8C  F035    	movff	plusw1,btemp+11
 10635  01D200  0E01               	movlw	1
 10636  01D202  2434               	addwf	(btemp+10)^0,w,c
 10637  01D204  6ED9               	movwf	fsr2l,c
 10638  01D206  0E00               	movlw	0
 10639  01D208  2035               	addwfc	(btemp+11)^0,w,c
 10640  01D20A  6EDA               	movwf	fsr2h,c
 10641  01D20C  0E01               	movlw	1
 10642  01D20E  6EDF               	movwf	indf2,c
 10643                           
 10644                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10645                           ;stkvar	_h @ sp[(0)+-2]
 10646  01D210  0EFE               	movlw	-2
 10647  01D212  006F FF8F FFD9     	movff	plusw1,fsr2l
 10648  01D218  0EFF               	movlw	-1
 10649  01D21A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10650  01D220  0E00               	movlw	0
 10651  01D222  6EDF               	movwf	indf2,c
 10652                           
 10653                           ;hid.c: 30:   h->wait_enter = 1;
 10654                           ;stkvar	_h @ sp[(0)+-2]
 10655  01D224  0EFE               	movlw	-2
 10656  01D226  006F FF8C  F034    	movff	plusw1,btemp+10
 10657  01D22C  0EFF               	movlw	-1
 10658  01D22E  006F FF8C  F035    	movff	plusw1,btemp+11
 10659  01D234  0E04               	movlw	4
 10660  01D236  2434               	addwf	(btemp+10)^0,w,c
 10661  01D238  6ED9               	movwf	fsr2l,c
 10662  01D23A  0E00               	movlw	0
 10663  01D23C  2035               	addwfc	(btemp+11)^0,w,c
 10664  01D23E  6EDA               	movwf	fsr2h,c
 10665  01D240  0E01               	movlw	1
 10666  01D242  6EDF               	movwf	indf2,c
 10667                           
 10668                           ;hid.c: 31:   h->wait_select = 1;
 10669                           ;stkvar	_h @ sp[(0)+-2]
 10670  01D244  0EFE               	movlw	-2
 10671  01D246  006F FF8C  F034    	movff	plusw1,btemp+10
 10672  01D24C  0EFF               	movlw	-1
 10673  01D24E  006F FF8C  F035    	movff	plusw1,btemp+11
 10674  01D254  0E02               	movlw	2
 10675  01D256  2434               	addwf	(btemp+10)^0,w,c
 10676  01D258  6ED9               	movwf	fsr2l,c
 10677  01D25A  0E00               	movlw	0
 10678  01D25C  2035               	addwfc	(btemp+11)^0,w,c
 10679  01D25E  6EDA               	movwf	fsr2h,c
 10680  01D260  0E01               	movlw	1
 10681  01D262  6EDF               	movwf	indf2,c
 10682                           
 10683                           ;hid.c: 32:   h->wait_calib = 1;
 10684                           ;stkvar	_h @ sp[(0)+-2]
 10685  01D264  0EFE               	movlw	-2
 10686  01D266  006F FF8C  F034    	movff	plusw1,btemp+10
 10687  01D26C  0EFF               	movlw	-1
 10688  01D26E  006F FF8C  F035    	movff	plusw1,btemp+11
 10689  01D274  0E06               	movlw	6
 10690  01D276  2434               	addwf	(btemp+10)^0,w,c
 10691  01D278  6ED9               	movwf	fsr2l,c
 10692  01D27A  0E00               	movlw	0
 10693  01D27C  2035               	addwfc	(btemp+11)^0,w,c
 10694  01D27E  6EDA               	movwf	fsr2h,c
 10695  01D280  0E01               	movlw	1
 10696  01D282  6EDF               	movwf	indf2,c
 10697                           
 10698                           ;hid.c: 33:   h->select_p = SW_OFF;
 10699                           ;stkvar	_h @ sp[(0)+-2]
 10700  01D284  0EFE               	movlw	-2
 10701  01D286  006F FF8C  F034    	movff	plusw1,btemp+10
 10702  01D28C  0EFF               	movlw	-1
 10703  01D28E  006F FF8C  F035    	movff	plusw1,btemp+11
 10704  01D294  0E03               	movlw	3
 10705  01D296  2434               	addwf	(btemp+10)^0,w,c
 10706  01D298  6ED9               	movwf	fsr2l,c
 10707  01D29A  0E00               	movlw	0
 10708  01D29C  2035               	addwfc	(btemp+11)^0,w,c
 10709  01D29E  6EDA               	movwf	fsr2h,c
 10710  01D2A0  0E00               	movlw	0
 10711  01D2A2  6EDF               	movwf	indf2,c
 10712                           
 10713                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10714                           ;stkvar	_h @ sp[(0)+-2]
 10715  01D2A4  0EFE               	movlw	-2
 10716  01D2A6  006F FF8C  F034    	movff	plusw1,btemp+10
 10717  01D2AC  0EFF               	movlw	-1
 10718  01D2AE  006F FF8C  F035    	movff	plusw1,btemp+11
 10719  01D2B4  0E05               	movlw	5
 10720  01D2B6  2434               	addwf	(btemp+10)^0,w,c
 10721  01D2B8  6ED9               	movwf	fsr2l,c
 10722  01D2BA  0E00               	movlw	0
 10723  01D2BC  2035               	addwfc	(btemp+11)^0,w,c
 10724  01D2BE  6EDA               	movwf	fsr2h,c
 10725  01D2C0  0E00               	movlw	0
 10726  01D2C2  6EDF               	movwf	indf2,c
 10727                           
 10728                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10729                           ;stkvar	_h @ sp[(0)+-2]
 10730  01D2C4  0EFE               	movlw	-2
 10731  01D2C6  006F FF8C  F034    	movff	plusw1,btemp+10
 10732  01D2CC  0EFF               	movlw	-1
 10733  01D2CE  006F FF8C  F035    	movff	plusw1,btemp+11
 10734  01D2D4  0E07               	movlw	7
 10735  01D2D6  2434               	addwf	(btemp+10)^0,w,c
 10736  01D2D8  6ED9               	movwf	fsr2l,c
 10737  01D2DA  0E00               	movlw	0
 10738  01D2DC  2035               	addwfc	(btemp+11)^0,w,c
 10739  01D2DE  6EDA               	movwf	fsr2h,c
 10740  01D2E0  0E00               	movlw	0
 10741  01D2E2  D06A               	goto	L6
 10742  01D2E4                     l17278:
 10743                           
 10744                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10745                           ;stkvar	_h @ sp[(0)+-2]
 10746  01D2E4  0EFE               	movlw	-2
 10747  01D2E6  006F FF8C  F034    	movff	plusw1,btemp+10
 10748  01D2EC  0EFF               	movlw	-1
 10749  01D2EE  006F FF8C  F035    	movff	plusw1,btemp+11
 10750  01D2F4  0E02               	movlw	2
 10751  01D2F6  2434               	addwf	(btemp+10)^0,w,c
 10752  01D2F8  6ED9               	movwf	fsr2l,c
 10753  01D2FA  0E00               	movlw	0
 10754  01D2FC  2035               	addwfc	(btemp+11)^0,w,c
 10755  01D2FE  6EDA               	movwf	fsr2h,c
 10756  01D300  50DF               	movf	indf2,w,c
 10757  01D302  A4D8               	btfss	status,2,c
 10758  01D304  D076               	goto	l2292
 10759                           
 10760                           ;stkvar	_h @ sp[(0)+-2]
 10761  01D306  0EFE               	movlw	-2
 10762  01D308  006F FF8C  F034    	movff	plusw1,btemp+10
 10763  01D30E  0EFF               	movlw	-1
 10764  01D310  006F FF8C  F035    	movff	plusw1,btemp+11
 10765  01D316  0E03               	movlw	3
 10766  01D318  2434               	addwf	(btemp+10)^0,w,c
 10767  01D31A  6ED9               	movwf	fsr2l,c
 10768  01D31C  0E00               	movlw	0
 10769  01D31E  2035               	addwfc	(btemp+11)^0,w,c
 10770  01D320  6EDA               	movwf	fsr2h,c
 10771  01D322  50DF               	movf	indf2,w,c
 10772  01D324  A4D8               	btfss	status,2,c
 10773  01D326  D065               	goto	l2292
 10774                           
 10775                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10776                           ;stkvar	_h @ sp[(0)+-2]
 10777  01D328  0EFE               	movlw	-2
 10778  01D32A  006F FF8C  F034    	movff	plusw1,btemp+10
 10779  01D330  0EFF               	movlw	-1
 10780  01D332  006F FF8C  F035    	movff	plusw1,btemp+11
 10781  01D338  0E08               	movlw	8
 10782  01D33A  2434               	addwf	(btemp+10)^0,w,c
 10783  01D33C  6ED9               	movwf	fsr2l,c
 10784  01D33E  0E00               	movlw	0
 10785  01D340  2035               	addwfc	(btemp+11)^0,w,c
 10786  01D342  6EDA               	movwf	fsr2h,c
 10787                           
 10788                           ;stkvar	_h @ sp[(0)+-2]
 10789  01D344  0EFE               	movlw	-2
 10790  01D346  006F FF8C  F034    	movff	plusw1,btemp+10
 10791  01D34C  0EFF               	movlw	-1
 10792  01D34E  006F FF8C  F035    	movff	plusw1,btemp+11
 10793  01D354  0E08               	movlw	8
 10794  01D356  2434               	addwf	(btemp+10)^0,w,c
 10795  01D358  6EE9               	movwf	fsr0l,c
 10796  01D35A  0E00               	movlw	0
 10797  01D35C  2035               	addwfc	(btemp+11)^0,w,c
 10798  01D35E  6EEA               	movwf	fsr0h,c
 10799  01D360  2AEF               	incf	indf0,f,c
 10800  01D362  50EF               	movf	indf0,w,c
 10801  01D364  0B03               	andlw	3
 10802  01D366  6EDF               	movwf	indf2,c
 10803                           
 10804                           ;hid.c: 41:    h->hid_display = h->sequence;
 10805                           ;stkvar	_h @ sp[(0)+-2]
 10806  01D368  0EFE               	movlw	-2
 10807  01D36A  006F FF8C  F034    	movff	plusw1,btemp+10
 10808  01D370  0EFF               	movlw	-1
 10809  01D372  006F FF8C  F035    	movff	plusw1,btemp+11
 10810  01D378  0E08               	movlw	8
 10811  01D37A  2434               	addwf	(btemp+10)^0,w,c
 10812  01D37C  6ED9               	movwf	fsr2l,c
 10813  01D37E  0E00               	movlw	0
 10814  01D380  2035               	addwfc	(btemp+11)^0,w,c
 10815  01D382  6EDA               	movwf	fsr2h,c
 10816                           
 10817                           ;stkvar	_h @ sp[(0)+-2]
 10818  01D384  0EFE               	movlw	-2
 10819  01D386  006F FF8F FFE9     	movff	plusw1,fsr0l
 10820  01D38C  0EFF               	movlw	-1
 10821  01D38E  006F FF8F FFEA     	movff	plusw1,fsr0h
 10822  01D394  006F FF7F FFEF     	movff	indf2,indf0
 10823                           
 10824                           ;hid.c: 42:    h->wait_select = 1;
 10825                           ;stkvar	_h @ sp[(0)+-2]
 10826  01D39A  0EFE               	movlw	-2
 10827  01D39C  006F FF8C  F034    	movff	plusw1,btemp+10
 10828  01D3A2  0EFF               	movlw	-1
 10829  01D3A4  006F FF8C  F035    	movff	plusw1,btemp+11
 10830  01D3AA  0E02               	movlw	2
 10831  01D3AC  2434               	addwf	(btemp+10)^0,w,c
 10832  01D3AE  6ED9               	movwf	fsr2l,c
 10833  01D3B0  0E00               	movlw	0
 10834  01D3B2  2035               	addwfc	(btemp+11)^0,w,c
 10835  01D3B4  6EDA               	movwf	fsr2h,c
 10836  01D3B6  0E01               	movlw	1
 10837  01D3B8                     L6:
 10838  01D3B8  6EDF               	movwf	indf2,c
 10839  01D3BA  D01B               	goto	l2292
 10840  01D3BC                     l17288:
 10841                           
 10842                           ;stkvar	_h @ sp[(0)+-2]
 10843  01D3BC  0EFE               	movlw	-2
 10844  01D3BE  006F FF8C  F034    	movff	plusw1,btemp+10
 10845  01D3C4  0EFF               	movlw	-1
 10846  01D3C6  006F FF8C  F035    	movff	plusw1,btemp+11
 10847  01D3CC  0E01               	movlw	1
 10848  01D3CE  2434               	addwf	(btemp+10)^0,w,c
 10849  01D3D0  6ED9               	movwf	fsr2l,c
 10850  01D3D2  0E00               	movlw	0
 10851  01D3D4  2035               	addwfc	(btemp+11)^0,w,c
 10852  01D3D6  6EDA               	movwf	fsr2h,c
 10853  01D3D8  50DF               	movf	indf2,w,c
 10854  01D3DA  6E34               	movwf	(btemp+10)^0,c
 10855  01D3DC  6A35               	clrf	(btemp+11)^0,c
 10856                           
 10857                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10858                           ; Switch size 1, requested type "simple"
 10859                           ; Number of cases is 1, Range of values is 0 to 0
 10860                           ; switch strategies available:
 10861                           ; Name         Instructions Cycles
 10862                           ; simple_byte            4     3 (average)
 10863                           ;	Chosen strategy is simple_byte
 10864  01D3DE  5035               	movf	(btemp+11)^0,w,c
 10865  01D3E0  0A00               	xorlw	0	; case 0
 10866  01D3E2  A4D8               	btfss	status,2,c
 10867  01D3E4  D77F               	goto	l17278
 10868                           
 10869                           ; Switch size 1, requested type "simple"
 10870                           ; Number of cases is 2, Range of values is 0 to 1
 10871                           ; switch strategies available:
 10872                           ; Name         Instructions Cycles
 10873                           ; simple_byte            7     4 (average)
 10874                           ;	Chosen strategy is simple_byte
 10875  01D3E6  5034               	movf	(btemp+10)^0,w,c
 10876  01D3E8  0A00               	xorlw	0	; case 0
 10877  01D3EA  B4D8               	btfsc	status,2,c
 10878  01D3EC  D701               	goto	l17262
 10879  01D3EE  0A01               	xorlw	1	; case 1
 10880  01D3F0  D779               	goto	l17278
 10881  01D3F2                     l2292:
 10882                           
 10883                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10884  01D3F2  52E5               	movf	postdec1,f,c
 10885  01D3F4  52E5               	movf	postdec1,f,c
 10886  01D3F6  0012               	return		;funcret
 10887  01D3F8                     __end_of_hid_display:
 10888                           	opt callstack 0
 10889                           
 10890 ;; *************** function _hid_input *****************
 10891 ;; Defined at:
 10892 ;;		line 3 in file "hid.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;  h               2  [STACK] PTR struct H_data
 10895 ;;		 -> H(9), 
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;		None
 10898 ;; Return value:  Size  Location     Type
 10899 ;;                  2  [STACK] PTR struct H_data
 10900 ;; Registers used:
 10901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/39
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10911 ;;Total ram usage:        0 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; Hardware stack levels required when called:   16
 10914 ;; This function calls:
 10915 ;;		_get_switch
 10916 ;; This function is called by:
 10917 ;;		_hid_display
 10918 ;; This function uses a reentrant model
 10919 ;;
 10920                           
 10921                           	psect	text27
 10922  01F3E4                     __ptext27:
 10923                           	opt callstack 0
 10924  01F3E4                     _hid_input:
 10925                           	opt callstack 13
 10926                           
 10927                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10928                           
 10929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10930                           ;incstack = 0
 10931  01F3E4  0E02               	movlw	2
 10932  01F3E6  6EE6               	movwf	postinc1,c
 10933  01F3E8  EC98  F011         	call	_get_switch	;wreg free
 10934  01F3EC  502A               	movf	btemp^0,w,c
 10935  01F3EE  B4D8               	btfsc	status,2,c
 10936  01F3F0  D02C               	goto	l17024
 10937                           
 10938                           ;hid.c: 6:   h->wait_select = 0;
 10939                           ;stkvar	_h @ sp[(0)+-2]
 10940  01F3F2  0EFE               	movlw	-2
 10941  01F3F4  006F FF8C  F034    	movff	plusw1,btemp+10
 10942  01F3FA  0EFF               	movlw	-1
 10943  01F3FC  006F FF8C  F035    	movff	plusw1,btemp+11
 10944  01F402  0E02               	movlw	2
 10945  01F404  2434               	addwf	(btemp+10)^0,w,c
 10946  01F406  6ED9               	movwf	fsr2l,c
 10947  01F408  0E00               	movlw	0
 10948  01F40A  2035               	addwfc	(btemp+11)^0,w,c
 10949  01F40C  6EDA               	movwf	fsr2h,c
 10950  01F40E  0E00               	movlw	0
 10951  01F410  6EDF               	movwf	indf2,c
 10952                           
 10953                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10954  01F412  0E02               	movlw	2
 10955  01F414  6EE6               	movwf	postinc1,c
 10956  01F416  EC98  F011         	call	_get_switch	;wreg free
 10957  01F41A  502A               	movf	btemp^0,w,c
 10958  01F41C  B4D8               	btfsc	status,2,c
 10959  01F41E  D003               	goto	u16550
 10960  01F420  6A35               	clrf	(btemp+11)^0,c
 10961  01F422  2A35               	incf	(btemp+11)^0,f,c
 10962  01F424  D001               	goto	u16568
 10963  01F426                     u16550:
 10964  01F426  6A35               	clrf	(btemp+11)^0,c
 10965  01F428                     u16568:
 10966                           
 10967                           ;stkvar	_h @ sp[(0)+-2]
 10968  01F428  0EFE               	movlw	-2
 10969  01F42A  006F FF8C  F032    	movff	plusw1,btemp+8
 10970  01F430  0EFF               	movlw	-1
 10971  01F432  006F FF8C  F033    	movff	plusw1,btemp+9
 10972  01F438  0E03               	movlw	3
 10973  01F43A  2432               	addwf	(btemp+8)^0,w,c
 10974  01F43C  6ED9               	movwf	fsr2l,c
 10975  01F43E  0E00               	movlw	0
 10976  01F440  2033               	addwfc	(btemp+9)^0,w,c
 10977  01F442  6EDA               	movwf	fsr2h,c
 10978  01F444  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10979  01F44A                     l17024:
 10980                           
 10981                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10982  01F44A  0E03               	movlw	3
 10983  01F44C  6EE6               	movwf	postinc1,c
 10984  01F44E  EC98  F011         	call	_get_switch	;wreg free
 10985  01F452  502A               	movf	btemp^0,w,c
 10986  01F454  B4D8               	btfsc	status,2,c
 10987  01F456  D02C               	goto	l17030
 10988                           
 10989                           ;hid.c: 11:   h->wait_enter = 0;
 10990                           ;stkvar	_h @ sp[(0)+-2]
 10991  01F458  0EFE               	movlw	-2
 10992  01F45A  006F FF8C  F034    	movff	plusw1,btemp+10
 10993  01F460  0EFF               	movlw	-1
 10994  01F462  006F FF8C  F035    	movff	plusw1,btemp+11
 10995  01F468  0E04               	movlw	4
 10996  01F46A  2434               	addwf	(btemp+10)^0,w,c
 10997  01F46C  6ED9               	movwf	fsr2l,c
 10998  01F46E  0E00               	movlw	0
 10999  01F470  2035               	addwfc	(btemp+11)^0,w,c
 11000  01F472  6EDA               	movwf	fsr2h,c
 11001  01F474  0E00               	movlw	0
 11002  01F476  6EDF               	movwf	indf2,c
 11003                           
 11004                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 11005  01F478  0E03               	movlw	3
 11006  01F47A  6EE6               	movwf	postinc1,c
 11007  01F47C  EC98  F011         	call	_get_switch	;wreg free
 11008  01F480  502A               	movf	btemp^0,w,c
 11009  01F482  B4D8               	btfsc	status,2,c
 11010  01F484  D003               	goto	u16580
 11011  01F486  6A35               	clrf	(btemp+11)^0,c
 11012  01F488  2A35               	incf	(btemp+11)^0,f,c
 11013  01F48A  D001               	goto	u16598
 11014  01F48C                     u16580:
 11015  01F48C  6A35               	clrf	(btemp+11)^0,c
 11016  01F48E                     u16598:
 11017                           
 11018                           ;stkvar	_h @ sp[(0)+-2]
 11019  01F48E  0EFE               	movlw	-2
 11020  01F490  006F FF8C  F032    	movff	plusw1,btemp+8
 11021  01F496  0EFF               	movlw	-1
 11022  01F498  006F FF8C  F033    	movff	plusw1,btemp+9
 11023  01F49E  0E05               	movlw	5
 11024  01F4A0  2432               	addwf	(btemp+8)^0,w,c
 11025  01F4A2  6ED9               	movwf	fsr2l,c
 11026  01F4A4  0E00               	movlw	0
 11027  01F4A6  2033               	addwfc	(btemp+9)^0,w,c
 11028  01F4A8  6EDA               	movwf	fsr2h,c
 11029  01F4AA  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11030  01F4B0                     l17030:
 11031                           
 11032                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 11033  01F4B0  0E04               	movlw	4
 11034  01F4B2  6EE6               	movwf	postinc1,c
 11035  01F4B4  EC98  F011         	call	_get_switch	;wreg free
 11036  01F4B8  502A               	movf	btemp^0,w,c
 11037  01F4BA  B4D8               	btfsc	status,2,c
 11038  01F4BC  D02C               	goto	l2283
 11039                           
 11040                           ;hid.c: 16:   h->wait_calib = 0;
 11041                           ;stkvar	_h @ sp[(0)+-2]
 11042  01F4BE  0EFE               	movlw	-2
 11043  01F4C0  006F FF8C  F034    	movff	plusw1,btemp+10
 11044  01F4C6  0EFF               	movlw	-1
 11045  01F4C8  006F FF8C  F035    	movff	plusw1,btemp+11
 11046  01F4CE  0E06               	movlw	6
 11047  01F4D0  2434               	addwf	(btemp+10)^0,w,c
 11048  01F4D2  6ED9               	movwf	fsr2l,c
 11049  01F4D4  0E00               	movlw	0
 11050  01F4D6  2035               	addwfc	(btemp+11)^0,w,c
 11051  01F4D8  6EDA               	movwf	fsr2h,c
 11052  01F4DA  0E00               	movlw	0
 11053  01F4DC  6EDF               	movwf	indf2,c
 11054                           
 11055                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 11056  01F4DE  0E04               	movlw	4
 11057  01F4E0  6EE6               	movwf	postinc1,c
 11058  01F4E2  EC98  F011         	call	_get_switch	;wreg free
 11059  01F4E6  502A               	movf	btemp^0,w,c
 11060  01F4E8  B4D8               	btfsc	status,2,c
 11061  01F4EA  D003               	goto	u16610
 11062  01F4EC  6A35               	clrf	(btemp+11)^0,c
 11063  01F4EE  2A35               	incf	(btemp+11)^0,f,c
 11064  01F4F0  D001               	goto	u16628
 11065  01F4F2                     u16610:
 11066  01F4F2  6A35               	clrf	(btemp+11)^0,c
 11067  01F4F4                     u16628:
 11068                           
 11069                           ;stkvar	_h @ sp[(0)+-2]
 11070  01F4F4  0EFE               	movlw	-2
 11071  01F4F6  006F FF8C  F032    	movff	plusw1,btemp+8
 11072  01F4FC  0EFF               	movlw	-1
 11073  01F4FE  006F FF8C  F033    	movff	plusw1,btemp+9
 11074  01F504  0E07               	movlw	7
 11075  01F506  2432               	addwf	(btemp+8)^0,w,c
 11076  01F508  6ED9               	movwf	fsr2l,c
 11077  01F50A  0E00               	movlw	0
 11078  01F50C  2033               	addwfc	(btemp+9)^0,w,c
 11079  01F50E  6EDA               	movwf	fsr2h,c
 11080  01F510  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11081  01F516                     l2283:
 11082                           
 11083                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 11084  01F516  52E5               	movf	postdec1,f,c
 11085  01F518  52E5               	movf	postdec1,f,c
 11086  01F51A  0012               	return		;funcret
 11087  01F51C                     __end_of_hid_input:
 11088                           	opt callstack 0
 11089                           
 11090 ;; *************** function _esr_check *****************
 11091 ;; Defined at:
 11092 ;;		line 197 in file "bsoc.c"
 11093 ;; Parameters:    Size  Location     Type
 11094 ;;  fsm             1  [STACK] const unsigned char 
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;		None
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  4  [STACK] float 
 11099 ;; Registers used:
 11100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11110 ;;Total ram usage:        0 bytes
 11111 ;; Hardware stack levels used:    1
 11112 ;; Hardware stack levels required when called:   18
 11113 ;; This function calls:
 11114 ;;		_StartTimer
 11115 ;;		_TimerDone
 11116 ;;		___fldiv
 11117 ;;		___flsub
 11118 ;;		_conv_raw_result
 11119 ;;		_fabsf
 11120 ;;		_set_load_relay_one
 11121 ;;		_set_load_relay_two
 11122 ;;		_update_adc_result
 11123 ;; This function is called by:
 11124 ;;		_main
 11125 ;; This function uses a reentrant model
 11126 ;;
 11127                           
 11128                           	psect	text28
 11129  01B738                     __ptext28:
 11130                           	opt callstack 0
 11131  01B738                     _esr_check:
 11132                           	opt callstack 12
 11133                           
 11134                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 11135                           ;stkvar	_fsm @ sp[(0)+-1]
 11136                           
 11137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11138                           ;incstack = 0
 11139  01B738  0EFF               	movlw	-1
 11140  01B73A  50E3               	movf	plusw1,w,c
 11141  01B73C  B4D8               	btfsc	status,2,c
 11142  01B73E  D149               	goto	l14284
 11143                           
 11144                           ;bsoc.c: 202:   esr_state = 0;
 11145  01B740  0100               	movlb	0	; () banked
 11146  01B742  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;bsoc.c: 203:   return -10.0;
 11150  01B744  0E00               	movlw	0
 11151  01B746  6E2A               	movwf	btemp^0,c
 11152  01B748  0E00               	movlw	0
 11153  01B74A  6E2B               	movwf	(btemp+1)^0,c
 11154  01B74C  0E20               	movlw	32
 11155  01B74E  6E2C               	movwf	(btemp+2)^0,c
 11156  01B750  0EC1               	movlw	193
 11157  01B752  D15B               	goto	L7
 11158  01B754                     l14216:
 11159                           
 11160                           ; BSR set to: 0
 11161                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 11162  01B754  0E10               	movlw	16
 11163  01B756  6EE6               	movwf	postinc1,c
 11164  01B758  0E27               	movlw	39
 11165  01B75A  6EE6               	movwf	postinc1,c
 11166  01B75C  0E0C               	movlw	12
 11167  01B75E  6EE6               	movwf	postinc1,c
 11168  01B760  EC78  F00F         	call	_StartTimer	;wreg free
 11169  01B764                     l14218:
 11170                           
 11171                           ;bsoc.c: 209:   esr_state++;
 11172  01B764  0100               	movlb	0	; () banked
 11173  01B766  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 11174                           
 11175                           ;bsoc.c: 210:   break;
 11176  01B768  D149               	goto	l14286
 11177  01B76A                     l14220:
 11178                           
 11179                           ; BSR set to: 0
 11180                           ;bsoc.c: 215:   set_load_relay_one(0);
 11181  01B76A  0E00               	movlw	0
 11182  01B76C  6EE6               	movwf	postinc1,c
 11183  01B76E  EC99  F014         	call	_set_load_relay_one	;wreg free
 11184                           
 11185                           ;bsoc.c: 216:   set_load_relay_two(0);
 11186  01B772  0E00               	movlw	0
 11187  01B774  6EE6               	movwf	postinc1,c
 11188  01B776  EC91  F014         	call	_set_load_relay_two	;wreg free
 11189                           
 11190                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 11191  01B77A  0E0C               	movlw	12
 11192  01B77C  6EE6               	movwf	postinc1,c
 11193  01B77E  EC03  F012         	call	_TimerDone	;wreg free
 11194  01B782  502A               	movf	btemp^0,w,c
 11195  01B784  B4D8               	btfsc	status,2,c
 11196  01B786  D009               	goto	l14226
 11197                           
 11198                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 11199  01B788  0E10               	movlw	16
 11200  01B78A  6EE6               	movwf	postinc1,c
 11201  01B78C  0E27               	movlw	39
 11202  01B78E  6EE6               	movwf	postinc1,c
 11203  01B790  0E0C               	movlw	12
 11204  01B792  6EE6               	movwf	postinc1,c
 11205  01B794  EC78  F00F         	call	_StartTimer	;wreg free
 11206                           
 11207                           ;bsoc.c: 219:   } else {
 11208  01B798  D006               	goto	l14230
 11209  01B79A                     l14226:
 11210                           
 11211                           ;bsoc.c: 220:    return -2.0;
 11212  01B79A  0E00               	movlw	0
 11213  01B79C  6E2A               	movwf	btemp^0,c
 11214  01B79E  0E00               	movlw	0
 11215  01B7A0  6E2B               	movwf	(btemp+1)^0,c
 11216  01B7A2  0E00               	movlw	0
 11217  01B7A4  D066               	goto	L9
 11218  01B7A6                     l14230:
 11219                           
 11220                           ;bsoc.c: 225:   update_adc_result();
 11221  01B7A6  EC15  F010         	call	_update_adc_result	;wreg free
 11222                           
 11223                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 11224  01B7AA  0E00               	movlw	0
 11225  01B7AC  6EE6               	movwf	postinc1,c
 11226  01B7AE  0E04               	movlw	4
 11227  01B7B0  6EE6               	movwf	postinc1,c
 11228  01B7B2  EC76  F0C3         	call	_conv_raw_result	;wreg free
 11229  01B7B6  0060  F0A8  FA21   	movff	btemp,_C+290	;volatile
 11230  01B7BC  0060  F0AC  FA22   	movff	btemp+1,_C+291	;volatile
 11231  01B7C2  0060  F0B0  FA23   	movff	btemp+2,_C+292	;volatile
 11232  01B7C8  0060  F0B4  FA24   	movff	btemp+3,_C+293	;volatile
 11233  01B7CE  D7CA               	goto	l14218
 11234  01B7D0                     l14236:
 11235                           
 11236                           ; BSR set to: 0
 11237                           ;bsoc.c: 230:   set_load_relay_one(1);
 11238  01B7D0  0E01               	movlw	1
 11239  01B7D2  6EE6               	movwf	postinc1,c
 11240  01B7D4  EC99  F014         	call	_set_load_relay_one	;wreg free
 11241                           
 11242                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 11243  01B7D8  0E0C               	movlw	12
 11244  01B7DA  6EE6               	movwf	postinc1,c
 11245  01B7DC  EC03  F012         	call	_TimerDone	;wreg free
 11246  01B7E0  502A               	movf	btemp^0,w,c
 11247  01B7E2  B4D8               	btfsc	status,2,c
 11248  01B7E4  D009               	goto	l14242
 11249                           
 11250                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 11251  01B7E6  0E10               	movlw	16
 11252  01B7E8  6EE6               	movwf	postinc1,c
 11253  01B7EA  0E27               	movlw	39
 11254  01B7EC  6EE6               	movwf	postinc1,c
 11255  01B7EE  0E0C               	movlw	12
 11256  01B7F0  6EE6               	movwf	postinc1,c
 11257  01B7F2  EC78  F00F         	call	_StartTimer	;wreg free
 11258                           
 11259                           ;bsoc.c: 233:   } else {
 11260  01B7F6  D006               	goto	l14246
 11261  01B7F8                     l14242:
 11262                           
 11263                           ;bsoc.c: 234:    return -3.0;
 11264  01B7F8  0E00               	movlw	0
 11265  01B7FA  6E2A               	movwf	btemp^0,c
 11266  01B7FC  0E00               	movlw	0
 11267  01B7FE  6E2B               	movwf	(btemp+1)^0,c
 11268  01B800  0E40               	movlw	64
 11269  01B802  D037               	goto	L9
 11270  01B804                     l14246:
 11271                           
 11272                           ;bsoc.c: 237:   update_adc_result();
 11273  01B804  EC15  F010         	call	_update_adc_result	;wreg free
 11274                           
 11275                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 11276  01B808  0E00               	movlw	0
 11277  01B80A  6EE6               	movwf	postinc1,c
 11278  01B80C  0E04               	movlw	4
 11279  01B80E  6EE6               	movwf	postinc1,c
 11280  01B810  EC76  F0C3         	call	_conv_raw_result	;wreg free
 11281  01B814  0060  F0A8  FA25   	movff	btemp,_C+294	;volatile
 11282  01B81A  0060  F0AC  FA26   	movff	btemp+1,_C+295	;volatile
 11283  01B820  0060  F0B0  FA27   	movff	btemp+2,_C+296	;volatile
 11284  01B826  0060  F0B4  FA28   	movff	btemp+3,_C+297	;volatile
 11285                           
 11286                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 11287  01B82C  0E00               	movlw	0
 11288  01B82E  6EE6               	movwf	postinc1,c
 11289  01B830  0E00               	movlw	0
 11290  01B832  6EE6               	movwf	postinc1,c
 11291  01B834  EC76  F0C3         	call	_conv_raw_result	;wreg free
 11292  01B838  0060  F0A8  FA19   	movff	btemp,_C+282	;volatile
 11293  01B83E  0060  F0AC  FA1A   	movff	btemp+1,_C+283	;volatile
 11294  01B844  0060  F0B0  FA1B   	movff	btemp+2,_C+284	;volatile
 11295  01B84A  0060  F0B4  FA1C   	movff	btemp+3,_C+285	;volatile
 11296  01B850  D789               	goto	l14218
 11297  01B852                     l14254:
 11298                           
 11299                           ; BSR set to: 0
 11300                           ;bsoc.c: 243:   set_load_relay_two(1);
 11301  01B852  0E01               	movlw	1
 11302  01B854  6EE6               	movwf	postinc1,c
 11303  01B856  EC91  F014         	call	_set_load_relay_two	;wreg free
 11304                           
 11305                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 11306  01B85A  0E0C               	movlw	12
 11307  01B85C  6EE6               	movwf	postinc1,c
 11308  01B85E  EC03  F012         	call	_TimerDone	;wreg free
 11309  01B862  502A               	movf	btemp^0,w,c
 11310  01B864  A4D8               	btfss	status,2,c
 11311  01B866  D008               	goto	l14262
 11312                           
 11313                           ;bsoc.c: 245:    return -4.0;
 11314  01B868  0E00               	movlw	0
 11315  01B86A  6E2A               	movwf	btemp^0,c
 11316  01B86C  0E00               	movlw	0
 11317  01B86E  6E2B               	movwf	(btemp+1)^0,c
 11318  01B870  0E80               	movlw	128
 11319  01B872                     L9:
 11320  01B872  6E2C               	movwf	(btemp+2)^0,c
 11321  01B874  0EC0               	movlw	192
 11322  01B876  D0C9               	goto	L7
 11323  01B878                     l14262:
 11324                           
 11325                           ;bsoc.c: 247:   update_adc_result();
 11326  01B878  EC15  F010         	call	_update_adc_result	;wreg free
 11327                           
 11328                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 11329  01B87C  0E00               	movlw	0
 11330  01B87E  6EE6               	movwf	postinc1,c
 11331  01B880  0E04               	movlw	4
 11332  01B882  6EE6               	movwf	postinc1,c
 11333  01B884  EC76  F0C3         	call	_conv_raw_result	;wreg free
 11334  01B888  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 11335  01B88E  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 11336  01B894  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 11337  01B89A  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 11338                           
 11339                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 11340  01B8A0  0E00               	movlw	0
 11341  01B8A2  6EE6               	movwf	postinc1,c
 11342  01B8A4  0E00               	movlw	0
 11343  01B8A6  6EE6               	movwf	postinc1,c
 11344  01B8A8  EC76  F0C3         	call	_conv_raw_result	;wreg free
 11345  01B8AC  0060  F0A8  FA1D   	movff	btemp,_C+286	;volatile
 11346  01B8B2  0060  F0AC  FA1E   	movff	btemp+1,_C+287	;volatile
 11347  01B8B8  0060  F0B0  FA1F   	movff	btemp+2,_C+288	;volatile
 11348  01B8BE  0060  F0B4  FA20   	movff	btemp+3,_C+289	;volatile
 11349                           
 11350                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 11351  01B8C4  EE22  F21D         	lfsr	2,_C+286	;volatile
 11352  01B8C8  006F FF7B FFE6     	movff	postinc2,postinc1
 11353  01B8CE  006F FF7B FFE6     	movff	postinc2,postinc1
 11354  01B8D4  006F FF7B FFE6     	movff	postinc2,postinc1
 11355  01B8DA  006F FF7B FFE6     	movff	postinc2,postinc1
 11356  01B8E0  EE22  F219         	lfsr	2,_C+282	;volatile
 11357  01B8E4  006F FF7B FFE6     	movff	postinc2,postinc1
 11358  01B8EA  006F FF7B FFE6     	movff	postinc2,postinc1
 11359  01B8F0  006F FF7B FFE6     	movff	postinc2,postinc1
 11360  01B8F6  006F FF7B FFE6     	movff	postinc2,postinc1
 11361  01B8FC  ECD2  F00E         	call	___flsub	;wreg free
 11362  01B900  0060  F0AB  FFE6   	movff	btemp,postinc1
 11363  01B906  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11364  01B90C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11365  01B912  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11366  01B918  EE22  F229         	lfsr	2,_C+298	;volatile
 11367  01B91C  006F FF7B FFE6     	movff	postinc2,postinc1
 11368  01B922  006F FF7B FFE6     	movff	postinc2,postinc1
 11369  01B928  006F FF7B FFE6     	movff	postinc2,postinc1
 11370  01B92E  006F FF7B FFE6     	movff	postinc2,postinc1
 11371  01B934  EE22  F225         	lfsr	2,_C+294	;volatile
 11372  01B938  006F FF7B FFE6     	movff	postinc2,postinc1
 11373  01B93E  006F FF7B FFE6     	movff	postinc2,postinc1
 11374  01B944  006F FF7B FFE6     	movff	postinc2,postinc1
 11375  01B94A  006F FF7B FFE6     	movff	postinc2,postinc1
 11376  01B950  ECD2  F00E         	call	___flsub	;wreg free
 11377  01B954  0060  F0AB  FFE6   	movff	btemp,postinc1
 11378  01B95A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11379  01B960  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11380  01B966  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11381  01B96C  EC2E  F0BE         	call	___fldiv	;wreg free
 11382  01B970  0060  F0AB  FFE6   	movff	btemp,postinc1
 11383  01B976  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11384  01B97C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11385  01B982  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11386  01B988  EC56  F004         	call	_fabsf	;wreg free
 11387  01B98C  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 11388  01B992  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 11389  01B998  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 11390  01B99E  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 11391                           
 11392                           ;bsoc.c: 252:   set_load_relay_one(0);
 11393  01B9A4  0E00               	movlw	0
 11394  01B9A6  6EE6               	movwf	postinc1,c
 11395  01B9A8  EC99  F014         	call	_set_load_relay_one	;wreg free
 11396                           
 11397                           ;bsoc.c: 253:   set_load_relay_two(0);
 11398  01B9AC  0E00               	movlw	0
 11399  01B9AE  6EE6               	movwf	postinc1,c
 11400  01B9B0  EC91  F014         	call	_set_load_relay_two	;wreg free
 11401                           
 11402                           ;bsoc.c: 254:   esr_state = 0;
 11403  01B9B4  0100               	movlb	0	; () banked
 11404  01B9B6  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;bsoc.c: 255:   return C.esr;
 11408  01B9B8  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 11409  01B9BE  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 11410  01B9C4  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 11411  01B9CA  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 11412  01B9D0  D01D               	goto	l2408
 11413  01B9D2                     l14284:
 11414  01B9D2  0100               	movlb	0	; () banked
 11415  01B9D4  51C6               	movf	esr_check@esr_state& (0+255),w,b
 11416  01B9D6  6E34               	movwf	(btemp+10)^0,c
 11417  01B9D8  6A35               	clrf	(btemp+11)^0,c
 11418                           
 11419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11420                           ; Switch size 1, requested type "simple"
 11421                           ; Number of cases is 1, Range of values is 0 to 0
 11422                           ; switch strategies available:
 11423                           ; Name         Instructions Cycles
 11424                           ; simple_byte            4     3 (average)
 11425                           ;	Chosen strategy is simple_byte
 11426  01B9DA  5035               	movf	(btemp+11)^0,w,c
 11427  01B9DC  0A00               	xorlw	0	; case 0
 11428  01B9DE  A4D8               	btfss	status,2,c
 11429  01B9E0  D00D               	goto	l14286
 11430                           
 11431                           ; BSR set to: 0
 11432                           ; Switch size 1, requested type "simple"
 11433                           ; Number of cases is 4, Range of values is 0 to 3
 11434                           ; switch strategies available:
 11435                           ; Name         Instructions Cycles
 11436                           ; simple_byte           13     7 (average)
 11437                           ;	Chosen strategy is simple_byte
 11438  01B9E2  5034               	movf	(btemp+10)^0,w,c
 11439  01B9E4  0A00               	xorlw	0	; case 0
 11440  01B9E6  B4D8               	btfsc	status,2,c
 11441  01B9E8  D6B5               	goto	l14216
 11442  01B9EA  0A01               	xorlw	1	; case 1
 11443  01B9EC  B4D8               	btfsc	status,2,c
 11444  01B9EE  D6BD               	goto	l14220
 11445  01B9F0  0A03               	xorlw	3	; case 2
 11446  01B9F2  B4D8               	btfsc	status,2,c
 11447  01B9F4  D6ED               	goto	l14236
 11448  01B9F6  0A01               	xorlw	1	; case 3
 11449  01B9F8  B4D8               	btfsc	status,2,c
 11450  01B9FA  D72B               	goto	l14254
 11451  01B9FC                     l14286:
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;bsoc.c: 260:  return -1.0;
 11455  01B9FC  0E00               	movlw	0
 11456  01B9FE  6E2A               	movwf	btemp^0,c
 11457  01BA00  0E00               	movlw	0
 11458  01BA02  6E2B               	movwf	(btemp+1)^0,c
 11459  01BA04  0E80               	movlw	128
 11460  01BA06  6E2C               	movwf	(btemp+2)^0,c
 11461  01BA08  0EBF               	movlw	191
 11462  01BA0A                     L7:
 11463  01BA0A  6E2D               	movwf	(btemp+3)^0,c
 11464  01BA0C                     l2408:
 11465                           
 11466                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11467  01BA0C  52E5               	movf	postdec1,f,c
 11468  01BA0E  0012               	return		;funcret
 11469  01BA10                     __end_of_esr_check:
 11470                           	opt callstack 0
 11471                           
 11472 ;; *************** function _update_adc_result *****************
 11473 ;; Defined at:
 11474 ;;		line 111 in file "daq.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;		None
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;		None
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  1  [STACK] _Bool 
 11481 ;; Registers used:
 11482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11492 ;;Total ram usage:        0 bytes
 11493 ;; Hardware stack levels used:    1
 11494 ;; Hardware stack levels required when called:   17
 11495 ;; This function calls:
 11496 ;;		_StartTimer
 11497 ;;		_TimerDone
 11498 ;;		_check_adc_scan
 11499 ;;		_clear_adc_scan
 11500 ;;		_start_adc_scan
 11501 ;; This function is called by:
 11502 ;;		_esr_check
 11503 ;; This function uses a reentrant model
 11504 ;;
 11505                           
 11506                           	psect	text29
 11507  00202A                     __ptext29:
 11508                           	opt callstack 0
 11509  00202A                     _update_adc_result:
 11510                           	opt callstack 12
 11511                           
 11512                           ;daq.c: 113:  if (R.done) {
 11513                           
 11514                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11515                           ;incstack = 0
 11516  00202A  0101               	movlb	1	; () banked
 11517  00202C  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11518  00202E  B4D8               	btfsc	status,2,c
 11519  002030  0012               	return	
 11520                           
 11521                           ; BSR set to: 1
 11522                           ;daq.c: 114:   clear_adc_scan();
 11523  002032  EC1B  F015         	call	_clear_adc_scan	;wreg free
 11524                           
 11525                           ; BSR set to: 1
 11526                           ;daq.c: 115:   start_adc_scan();
 11527  002036  ECB7  F00B         	call	_start_adc_scan	;wreg free
 11528                           
 11529                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 11530  00203A  0EC8               	movlw	200
 11531  00203C  6EE6               	movwf	postinc1,c
 11532  00203E  0E00               	movlw	0
 11533  002040  6EE6               	movwf	postinc1,c
 11534  002042  0E01               	movlw	1
 11535  002044  6EE6               	movwf	postinc1,c
 11536  002046  EC78  F00F         	call	_StartTimer	;wreg free
 11537  00204A                     l13644:
 11538  00204A  0E01               	movlw	1
 11539  00204C  6EE6               	movwf	postinc1,c
 11540  00204E  EC03  F012         	call	_TimerDone	;wreg free
 11541  002052  502A               	movf	btemp^0,w,c
 11542  002054  A4D8               	btfss	status,2,c
 11543  002056  0012               	return	
 11544  002058  EC01  F015         	call	_check_adc_scan	;wreg free
 11545  00205C  502A               	movf	btemp^0,w,c
 11546  00205E  A4D8               	btfss	status,2,c
 11547  002060  0012               	return	
 11548  002062  D7F3               	goto	l13644
 11549  002064                     __end_of_update_adc_result:
 11550                           	opt callstack 0
 11551                           
 11552 ;; *************** function _check_adc_scan *****************
 11553 ;; Defined at:
 11554 ;;		line 95 in file "daq.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;		None
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;		None
 11559 ;; Return value:  Size  Location     Type
 11560 ;;                  1  [STACK] _Bool 
 11561 ;; Registers used:
 11562 ;;		btemp
 11563 ;; Tracked objects:
 11564 ;;		On entry : 0/2
 11565 ;;		On exit  : 0/0
 11566 ;;		Unchanged: 0/0
 11567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11572 ;;Total ram usage:        0 bytes
 11573 ;; Hardware stack levels used:    1
 11574 ;; Hardware stack levels required when called:   15
 11575 ;; This function calls:
 11576 ;;		Nothing
 11577 ;; This function is called by:
 11578 ;;		_main
 11579 ;;		_update_adc_result
 11580 ;; This function uses a reentrant model
 11581 ;;
 11582                           
 11583                           	psect	text30
 11584  002A02                     __ptext30:
 11585                           	opt callstack 0
 11586  002A02                     _check_adc_scan:
 11587                           	opt callstack 13
 11588                           
 11589                           ;daq.c: 97:  return R.done;
 11590                           
 11591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11592                           ;incstack = 0
 11593  002A02  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11594                           
 11595                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11596  002A08  0012               	return		;funcret
 11597  002A0A                     __end_of_check_adc_scan:
 11598                           	opt callstack 0
 11599                           
 11600 ;; *************** function _set_load_relay_two *****************
 11601 ;; Defined at:
 11602 ;;		line 131 in file "mbmc.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;  mode            1  [STACK] const _Bool 
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;		None
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1  [STACK] void 
 11609 ;; Registers used:
 11610 ;;		wreg, fsr1l, fsr1h
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/3D
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11620 ;;Total ram usage:        0 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; Hardware stack levels required when called:   15
 11623 ;; This function calls:
 11624 ;;		Nothing
 11625 ;; This function is called by:
 11626 ;;		_main
 11627 ;;		_esr_check
 11628 ;; This function uses a reentrant model
 11629 ;;
 11630                           
 11631                           	psect	text31
 11632  002922                     __ptext31:
 11633                           	opt callstack 0
 11634  002922                     _set_load_relay_two:
 11635                           	opt callstack 15
 11636                           
 11637                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11638                           ;stkvar	_mode @ sp[(0)+-1]
 11639                           
 11640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11641                           ;incstack = 0
 11642  002922  0EFF               	movlw	-1
 11643  002924  B0E3               	btfsc	plusw1,0,c
 11644  002926  D002               	bra	u12505
 11645  002928  9ABD               	bcf	189,5,c	;volatile
 11646  00292A  D001               	bra	u12506
 11647  00292C                     u12505:
 11648  00292C  8ABD               	bsf	189,5,c	;volatile
 11649  00292E                     u12506:
 11650                           
 11651                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11652  00292E  52E5               	movf	postdec1,f,c
 11653  002930  0012               	return		;funcret
 11654  002932                     __end_of_set_load_relay_two:
 11655                           	opt callstack 0
 11656                           
 11657 ;; *************** function _set_load_relay_one *****************
 11658 ;; Defined at:
 11659 ;;		line 126 in file "mbmc.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;  mode            1  [STACK] const _Bool 
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;		None
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1  [STACK] void 
 11666 ;; Registers used:
 11667 ;;		wreg, fsr1l, fsr1h
 11668 ;; Tracked objects:
 11669 ;;		On entry : 0/3D
 11670 ;;		On exit  : 0/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11677 ;;Total ram usage:        0 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; Hardware stack levels required when called:   15
 11680 ;; This function calls:
 11681 ;;		Nothing
 11682 ;; This function is called by:
 11683 ;;		_main
 11684 ;;		_esr_check
 11685 ;; This function uses a reentrant model
 11686 ;;
 11687                           
 11688                           	psect	text32
 11689  002932                     __ptext32:
 11690                           	opt callstack 0
 11691  002932                     _set_load_relay_one:
 11692                           	opt callstack 15
 11693                           
 11694                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11695                           ;stkvar	_mode @ sp[(0)+-1]
 11696                           
 11697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11698                           ;incstack = 0
 11699  002932  0EFF               	movlw	-1
 11700  002934  B0E3               	btfsc	plusw1,0,c
 11701  002936  D002               	bra	u12495
 11702  002938  98BD               	bcf	189,4,c	;volatile
 11703  00293A  D001               	bra	u12496
 11704  00293C                     u12495:
 11705  00293C  88BD               	bsf	189,4,c	;volatile
 11706  00293E                     u12496:
 11707                           
 11708                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11709  00293E  52E5               	movf	postdec1,f,c
 11710  002940  0012               	return		;funcret
 11711  002942                     __end_of_set_load_relay_one:
 11712                           	opt callstack 0
 11713                           
 11714 ;; *************** function _eaDogM_WriteCommand *****************
 11715 ;; Defined at:
 11716 ;;		line 384 in file "eadog.c"
 11717 ;; Parameters:    Size  Location     Type
 11718 ;;  cmd             1  [STACK] const unsigned char 
 11719 ;; Auto vars:     Size  Location     Type
 11720 ;;		None
 11721 ;; Return value:  Size  Location     Type
 11722 ;;                  1  [STACK] void 
 11723 ;; Registers used:
 11724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11725 ;; Tracked objects:
 11726 ;;		On entry : 3F/3D
 11727 ;;		On exit  : 3F/3D
 11728 ;;		Unchanged: 0/0
 11729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11734 ;;Total ram usage:        0 bytes
 11735 ;; Hardware stack levels used:    1
 11736 ;; Hardware stack levels required when called:   19
 11737 ;; This function calls:
 11738 ;;		_send_lcd_cmd_dma
 11739 ;; This function is called by:
 11740 ;;		_main
 11741 ;; This function uses a reentrant model
 11742 ;;
 11743                           
 11744                           	psect	text33
 11745  002972                     __ptext33:
 11746                           	opt callstack 0
 11747  002972                     _eaDogM_WriteCommand:
 11748                           	opt callstack 11
 11749                           
 11750                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11751                           ;stkvar	_cmd @ sp[(0)+-1]
 11752                           
 11753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11754                           ;incstack = 0
 11755  002972  0EFF               	movlw	-1
 11756  002974  50E3               	movf	plusw1,w,c
 11757  002976  6EE6               	movwf	postinc1,c
 11758  002978  ECEA  F013         	call	_send_lcd_cmd_dma	;wreg free
 11759                           
 11760                           ; BSR set to: 61
 11761                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11762  00297C  52E5               	movf	postdec1,f,c
 11763  00297E  0012               	return		;funcret
 11764  002980                     __end_of_eaDogM_WriteCommand:
 11765                           	opt callstack 0
 11766                           
 11767 ;; *************** function _display_history *****************
 11768 ;; Defined at:
 11769 ;;		line 625 in file "main.c"
 11770 ;; Parameters:    Size  Location     Type
 11771 ;;		None
 11772 ;; Auto vars:     Size  Location     Type
 11773 ;;		None
 11774 ;; Return value:  Size  Location     Type
 11775 ;;                  1  [STACK] _Bool 
 11776 ;; Registers used:
 11777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11778 ;; Tracked objects:
 11779 ;;		On entry : 0/2
 11780 ;;		On exit  : 0/0
 11781 ;;		Unchanged: 0/0
 11782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11787 ;;Total ram usage:        0 bytes
 11788 ;; Hardware stack levels used:    1
 11789 ;; Hardware stack levels required when called:   27
 11790 ;; This function calls:
 11791 ;;		_WaitMs
 11792 ;;		_asctime
 11793 ;;		_get_switch
 11794 ;;		_get_vterm_ptr
 11795 ;;		_localtime
 11796 ;;		_sprintf
 11797 ;;		_time
 11798 ;;		_update_lcd
 11799 ;; This function is called by:
 11800 ;;		_main
 11801 ;; This function uses a reentrant model
 11802 ;;
 11803                           
 11804                           	psect	text34
 11805  01B45E                     __ptext34:
 11806                           	opt callstack 0
 11807  01B45E                     _display_history:
 11808                           	opt callstack 3
 11809                           
 11810                           ;main.c: 627:  static uint8_t bwait = 0;;main.c: 629:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11811                           
 11812                           ; BSR set to: 61
 11813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11814                           ;incstack = 0
 11815  01B45E  0E04               	movlw	4
 11816  01B460  6EE6               	movwf	postinc1,c
 11817  01B462  EC98  F011         	call	_get_switch	;wreg free
 11818  01B466  502A               	movf	btemp^0,w,c
 11819  01B468  B4D8               	btfsc	status,2,c
 11820  01B46A  D15E               	goto	l17336
 11821  01B46C  2A53               	incf	display_history@bwait^0,f,c
 11822  01B46E  0E05               	movlw	5
 11823  01B470  6453               	cpfsgt	display_history@bwait^0,c
 11824  01B472  D15A               	goto	l17336
 11825                           
 11826                           ;main.c: 630:   pclock = time(((void*)0));
 11827  01B474  0E00               	movlw	0
 11828  01B476  6EE6               	movwf	postinc1,c
 11829  01B478  0E00               	movlw	0
 11830  01B47A  6EE6               	movwf	postinc1,c
 11831  01B47C  EC7B  F00C         	call	_time	;wreg free
 11832  01B480  52E5               	movf	postdec1,f,c
 11833  01B482  006F FF9C  F041    	movff	indf1,btemp+23
 11834  01B488  52E5               	movf	postdec1,f,c
 11835  01B48A  006F FF9C  F040    	movff	indf1,btemp+22
 11836  01B490  52E5               	movf	postdec1,f,c
 11837  01B492  006F FF9C  F03F    	movff	indf1,btemp+21
 11838  01B498  52E5               	movf	postdec1,f,c
 11839  01B49A  006F FF9C  F03E    	movff	indf1,btemp+20
 11840  01B4A0  52E5               	movf	postdec1,f,c
 11841  01B4A2  006F FF9C  F03D    	movff	indf1,btemp+19
 11842  01B4A8  52E5               	movf	postdec1,f,c
 11843  01B4AA  006F FF9C  F03C    	movff	indf1,btemp+18
 11844  01B4B0  52E5               	movf	postdec1,f,c
 11845  01B4B2  006F FF9C  F03B    	movff	indf1,btemp+17
 11846  01B4B8  52E5               	movf	postdec1,f,c
 11847  01B4BA  006F FF9C  F03A    	movff	indf1,btemp+16
 11848  01B4C0  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11849  01B4C6  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11850  01B4CC  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11851  01B4D2  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11852  01B4D8  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11853  01B4DE  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11854  01B4E4  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11855  01B4EA  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11856                           
 11857                           ; BSR set to: 57
 11858                           ;main.c: 631:   t_mbmc = localtime(&pclock);
 11859  01B4F0  0EDA               	movlw	_pclock& (0+255)
 11860  01B4F2  6EE6               	movwf	postinc1,c
 11861  01B4F4  EC49  F014         	call	_localtime	;wreg free
 11862  01B4F8  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11863  01B4FE  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11864                           
 11865                           ;main.c: 632:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11866  01B504  EE22  F1EA         	lfsr	2,_C+235	;volatile
 11867  01B508  006F FF78  F034    	movff	postinc2,btemp+10
 11868  01B50E  006F FF74  F035    	movff	postdec2,btemp+11
 11869  01B514  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11870  01B51A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11871  01B520  EE22  F1E8         	lfsr	2,_C+233	;volatile
 11872  01B524  006F FF78  F034    	movff	postinc2,btemp+10
 11873  01B52A  006F FF74  F035    	movff	postdec2,btemp+11
 11874  01B530  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11875  01B536  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11876  01B53C  EE22  F1E6         	lfsr	2,_C+231	;volatile
 11877  01B540  006F FF78  F034    	movff	postinc2,btemp+10
 11878  01B546  006F FF74  F035    	movff	postdec2,btemp+11
 11879  01B54C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11880  01B552  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11881  01B558  EE22  F1E4         	lfsr	2,_C+229	;volatile
 11882  01B55C  006F FF78  F034    	movff	postinc2,btemp+10
 11883  01B562  006F FF74  F035    	movff	postdec2,btemp+11
 11884  01B568  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11885  01B56E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11886  01B574  0EB9               	movlw	low STR_69
 11887  01B576  6EE6               	movwf	postinc1,c
 11888  01B578  0EFA               	movlw	high STR_69
 11889  01B57A  6EE6               	movwf	postinc1,c
 11890  01B57C  0E00               	movlw	0
 11891  01B57E  6EE6               	movwf	postinc1,c
 11892  01B580  0E00               	movlw	0
 11893  01B582  6EE6               	movwf	postinc1,c
 11894  01B584  EC81  F011         	call	_get_vterm_ptr	;wreg free
 11895  01B588  0060  F0AB  FFE6   	movff	btemp,postinc1
 11896  01B58E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11897  01B594  0E0C               	movlw	12
 11898  01B596  6EE6               	movwf	postinc1,c
 11899  01B598  EC4F  F0FD         	call	_sprintf	;wreg free
 11900                           
 11901                           ; BSR set to: 0
 11902                           ;main.c: 633:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11903  01B59C  EE22  F1F2         	lfsr	2,_C+243	;volatile
 11904  01B5A0  006F FF78  F034    	movff	postinc2,btemp+10
 11905  01B5A6  006F FF74  F035    	movff	postdec2,btemp+11
 11906  01B5AC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11907  01B5B2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11908  01B5B8  EE22  F1F0         	lfsr	2,_C+241	;volatile
 11909  01B5BC  006F FF78  F034    	movff	postinc2,btemp+10
 11910  01B5C2  006F FF74  F035    	movff	postdec2,btemp+11
 11911  01B5C8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11912  01B5CE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11913  01B5D4  EE22  F1EE         	lfsr	2,_C+239	;volatile
 11914  01B5D8  006F FF78  F034    	movff	postinc2,btemp+10
 11915  01B5DE  006F FF74  F035    	movff	postdec2,btemp+11
 11916  01B5E4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11917  01B5EA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11918  01B5F0  EE22  F1EC         	lfsr	2,_C+237	;volatile
 11919  01B5F4  006F FF78  F034    	movff	postinc2,btemp+10
 11920  01B5FA  006F FF74  F035    	movff	postdec2,btemp+11
 11921  01B600  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11922  01B606  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11923  01B60C  0EB9               	movlw	low STR_69
 11924  01B60E  6EE6               	movwf	postinc1,c
 11925  01B610  0EFA               	movlw	high STR_69
 11926  01B612  6EE6               	movwf	postinc1,c
 11927  01B614  0E00               	movlw	0
 11928  01B616  6EE6               	movwf	postinc1,c
 11929  01B618  0E01               	movlw	1
 11930  01B61A  6EE6               	movwf	postinc1,c
 11931  01B61C  EC81  F011         	call	_get_vterm_ptr	;wreg free
 11932  01B620  0060  F0AB  FFE6   	movff	btemp,postinc1
 11933  01B626  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11934  01B62C  0E0C               	movlw	12
 11935  01B62E  6EE6               	movwf	postinc1,c
 11936  01B630  EC4F  F0FD         	call	_sprintf	;wreg free
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;main.c: 634:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 11940  01B634  EE22  F1FC         	lfsr	2,_C+253	;volatile
 11941  01B638  006F FF78  F034    	movff	postinc2,btemp+10
 11942  01B63E  006F FF74  F035    	movff	postdec2,btemp+11
 11943  01B644  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11944  01B64A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11945  01B650  EE22  F1F8         	lfsr	2,_C+249	;volatile
 11946  01B654  006F FF78  F034    	movff	postinc2,btemp+10
 11947  01B65A  006F FF74  F035    	movff	postdec2,btemp+11
 11948  01B660  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11949  01B666  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11950  01B66C  EE22  F1F6         	lfsr	2,_C+247	;volatile
 11951  01B670  006F FF78  F034    	movff	postinc2,btemp+10
 11952  01B676  006F FF74  F035    	movff	postdec2,btemp+11
 11953  01B67C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11954  01B682  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11955  01B688  EE22  F1F4         	lfsr	2,_C+245	;volatile
 11956  01B68C  006F FF78  F034    	movff	postinc2,btemp+10
 11957  01B692  006F FF74  F035    	movff	postdec2,btemp+11
 11958  01B698  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11959  01B69E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11960  01B6A4  0EB9               	movlw	low STR_69
 11961  01B6A6  6EE6               	movwf	postinc1,c
 11962  01B6A8  0EFA               	movlw	high STR_69
 11963  01B6AA  6EE6               	movwf	postinc1,c
 11964  01B6AC  0E00               	movlw	0
 11965  01B6AE  6EE6               	movwf	postinc1,c
 11966  01B6B0  0E02               	movlw	2
 11967  01B6B2  6EE6               	movwf	postinc1,c
 11968  01B6B4  EC81  F011         	call	_get_vterm_ptr	;wreg free
 11969  01B6B8  0060  F0AB  FFE6   	movff	btemp,postinc1
 11970  01B6BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11971  01B6C4  0E0C               	movlw	12
 11972  01B6C6  6EE6               	movwf	postinc1,c
 11973  01B6C8  EC4F  F0FD         	call	_sprintf	;wreg free
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;main.c: 635:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11977  01B6CC  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 11978  01B6D2  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 11979  01B6D8  ECEB  F0C0         	call	_asctime	;wreg free
 11980  01B6DC  0060  F0AB  FFE6   	movff	btemp,postinc1
 11981  01B6E2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11982  01B6E8  0E76               	movlw	low (STR_76+5)
 11983  01B6EA  6EE6               	movwf	postinc1,c
 11984  01B6EC  0EFF               	movlw	high (STR_76+5)
 11985  01B6EE  6EE6               	movwf	postinc1,c
 11986  01B6F0  0E00               	movlw	0
 11987  01B6F2  6EE6               	movwf	postinc1,c
 11988  01B6F4  0E03               	movlw	3
 11989  01B6F6  6EE6               	movwf	postinc1,c
 11990  01B6F8  EC81  F011         	call	_get_vterm_ptr	;wreg free
 11991  01B6FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 11992  01B702  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11993  01B708  0E06               	movlw	6
 11994  01B70A  6EE6               	movwf	postinc1,c
 11995  01B70C  EC4F  F0FD         	call	_sprintf	;wreg free
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;main.c: 636:   update_lcd(0);
 11999  01B710  0E00               	movlw	0
 12000  01B712  6EE6               	movwf	postinc1,c
 12001  01B714  EC01  F0F6         	call	_update_lcd	;wreg free
 12002                           
 12003                           ;main.c: 637:   WaitMs(2000);
 12004  01B718  0ED0               	movlw	208
 12005  01B71A  6EE6               	movwf	postinc1,c
 12006  01B71C  0E07               	movlw	7
 12007  01B71E  6EE6               	movwf	postinc1,c
 12008  01B720  EC85  F010         	call	_WaitMs	;wreg free
 12009  01B724                     l17330:
 12010                           
 12011                           ;main.c: 638:   bwait = 0;
 12012  01B724  6A53               	clrf	display_history@bwait^0,c
 12013  01B726  0012               	return	
 12014  01B728                     l17336:
 12015                           
 12016                           ;main.c: 641:   if (!get_switch(SCALIB))
 12017  01B728  0E04               	movlw	4
 12018  01B72A  6EE6               	movwf	postinc1,c
 12019  01B72C  EC98  F011         	call	_get_switch	;wreg free
 12020  01B730  502A               	movf	btemp^0,w,c
 12021  01B732  A4D8               	btfss	status,2,c
 12022  01B734  0012               	return	
 12023  01B736  D7F6               	goto	l17330
 12024  01B738                     __end_of_display_history:
 12025                           	opt callstack 0
 12026                           
 12027 ;; *************** function _time *****************
 12028 ;; Defined at:
 12029 ;;		line 251 in file "mbmc.c"
 12030 ;; Parameters:    Size  Location     Type
 12031 ;;  t               2  [STACK] PTR long long 
 12032 ;;		 -> time@current_time(8), NULL(0), 
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;		None
 12035 ;; Return value:  Size  Location     Type
 12036 ;;                  8  [STACK] long long 
 12037 ;; Registers used:
 12038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 12039 ;; Tracked objects:
 12040 ;;		On entry : 0/1
 12041 ;;		On exit  : 3F/39
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12048 ;;Total ram usage:        0 bytes
 12049 ;; Hardware stack levels used:    1
 12050 ;; Hardware stack levels required when called:   15
 12051 ;; This function calls:
 12052 ;;		Nothing
 12053 ;; This function is called by:
 12054 ;;		_main
 12055 ;;		_display_history
 12056 ;;		_check_day_time
 12057 ;;		_load_hist_data
 12058 ;; This function uses a reentrant model
 12059 ;;
 12060                           
 12061                           	psect	text35
 12062  0018F6                     __ptext35:
 12063                           	opt callstack 0
 12064  0018F6                     _time:
 12065                           	opt callstack 0
 12066                           
 12067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 12068  0018F6  0E06               	movlw	6
 12069  0018F8  26E1               	addwf	fsr1l,f,c
 12070  0018FA  0E00               	movlw	0
 12071  0018FC  22E2               	addwfc	fsr1h,f,c
 12072                           
 12073                           ;mbmc.c: 251: time_t time(time_t * t);mbmc.c: 252: {;mbmc.c: 253:  static time_t current
      +                          _time;;mbmc.c: 254:  PIE8bits.TMR5IE = 0;
 12074                           
 12075                           ;incstack = 0
 12076 ;; hardware stack exceeded
 12077  0018FE  0139               	movlb	57	; () banked
 12078  001900  9D98               	bcf	152,6,b	;volatile
 12079                           
 12080                           ; BSR set to: 57
 12081                           ;mbmc.c: 255:  current_time = V.ticks;
 12082  001902  0102               	movlb	2	; () banked
 12083  001904  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 12084  001906  0100               	movlb	0	; () banked
 12085  001908  6FD2               	movwf	time@current_time& (0+255),b
 12086  00190A  0102               	movlb	2	; () banked
 12087  00190C  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 12088  00190E  0100               	movlb	0	; () banked
 12089  001910  6FD3               	movwf	(time@current_time+1)& (0+255),b
 12090  001912  0102               	movlb	2	; () banked
 12091  001914  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 12092  001916  0100               	movlb	0	; () banked
 12093  001918  6FD4               	movwf	(time@current_time+2)& (0+255),b
 12094  00191A  0102               	movlb	2	; () banked
 12095  00191C  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 12096  00191E  0100               	movlb	0	; () banked
 12097  001920  6FD5               	movwf	(time@current_time+3)& (0+255),b
 12098  001922  6BD6               	clrf	(time@current_time+4)& (0+255),b
 12099  001924  6BD7               	clrf	(time@current_time+5)& (0+255),b
 12100  001926  6BD8               	clrf	(time@current_time+6)& (0+255),b
 12101  001928  6BD9               	clrf	(time@current_time+7)& (0+255),b
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;mbmc.c: 256:  PIE8bits.TMR5IE = 1;
 12105  00192A  0139               	movlb	57	; () banked
 12106  00192C  8D98               	bsf	152,6,b	;volatile
 12107                           
 12108                           ; BSR set to: 57
 12109                           ;mbmc.c: 257:  if (t) {
 12110                           ;stkvar	_t @ sp[(0)+-8]
 12111  00192E  0EF8               	movlw	-8
 12112  001930  006F FF8C  F02A    	movff	plusw1,btemp
 12113  001936  0EF9               	movlw	-7
 12114  001938  50E3               	movf	plusw1,w,c
 12115  00193A  102A               	iorwf	btemp^0,w,c
 12116                           
 12117                           ; BSR set to: 57
 12118                           ;mbmc.c: 260:  return current_time;
 12119                           
 12120                           ; BSR set to: 57
 12121  00193C  EE20  F0D2         	lfsr	2,time@current_time
 12122                           
 12123                           ;stkvar	?_time @ sp[(0)+-8]
 12124  001940  0E08               	movlw	8
 12125  001942  6E2A               	movwf	btemp^0,c
 12126  001944  0EF8               	movlw	-8
 12127  001946                     us1158999:
 12128  001946  006F FF7B FFE3     	movff	postinc2,plusw1
 12129  00194C  28E8               	incf	wreg,w,c
 12130  00194E  2E2A               	decfsz	btemp^0,f,c
 12131  001950  D7FA               	bra	us1158999
 12132                           
 12133                           ; BSR set to: 57
 12134                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 12135  001952  0012               	return		;funcret
 12136  001954                     __end_of_time:
 12137                           	opt callstack 0
 12138                           
 12139 ;; *************** function _localtime *****************
 12140 ;; Defined at:
 12141 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;  t               1  [STACK] PTR const long long 
 12144 ;;		 -> pclock(8), 
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;		None
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  2  [STACK] PTR struct tm
 12149 ;; Registers used:
 12150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12151 ;; Tracked objects:
 12152 ;;		On entry : 3F/39
 12153 ;;		On exit  : 0/0
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12160 ;;Total ram usage:        0 bytes
 12161 ;; Hardware stack levels used:    1
 12162 ;; Hardware stack levels required when called:   21
 12163 ;; This function calls:
 12164 ;;		___localtime_r
 12165 ;; This function is called by:
 12166 ;;		_main
 12167 ;;		_display_history
 12168 ;; This function uses a reentrant model
 12169 ;;
 12170                           
 12171                           	psect	text36
 12172  002892                     __ptext36:
 12173                           	opt callstack 0
 12174  002892                     _localtime:
 12175                           	opt callstack 9
 12176                           
 12177                           ; BSR set to: 57
 12178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12179                           ;incstack = 0
 12180  002892  0EDF               	movlw	low localtime@tm
 12181  002894  6EE6               	movwf	postinc1,c
 12182  002896  0E03               	movlw	high localtime@tm
 12183  002898  6EE6               	movwf	postinc1,c
 12184                           
 12185                           ;stkvar	_t @ sp[(-2)+-1]
 12186  00289A  0EFD               	movlw	-3
 12187  00289C  50E3               	movf	plusw1,w,c
 12188  00289E  6EE6               	movwf	postinc1,c
 12189  0028A0  EC84  F0E4         	call	___localtime_r	;wreg free
 12190                           
 12191                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12192  0028A4  52E5               	movf	postdec1,f,c
 12193  0028A6  0012               	return		;funcret
 12194  0028A8                     __end_of_localtime:
 12195                           	opt callstack 0
 12196                           
 12197 ;; *************** function ___localtime_r *****************
 12198 ;; Defined at:
 12199 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  t               1  [STACK] PTR const long long 
 12202 ;;		 -> pclock(8), 
 12203 ;;  tm              2  [STACK] PTR struct tm
 12204 ;;		 -> localtime@tm(24), 
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  2  [STACK] PTR struct tm
 12209 ;; Registers used:
 12210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/39
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12220 ;;Total ram usage:        0 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; Hardware stack levels required when called:   20
 12223 ;; This function calls:
 12224 ;;		___secs_to_tm
 12225 ;;		___secs_to_zone
 12226 ;; This function is called by:
 12227 ;;		_localtime
 12228 ;; This function uses a reentrant model
 12229 ;;
 12230                           
 12231                           	psect	text37
 12232  01C908                     __ptext37:
 12233                           	opt callstack 0
 12234  01C908                     ___localtime_r:
 12235                           	opt callstack 9
 12236                           
 12237                           ;stkvar	_t @ sp[(0)+-1]
 12238                           
 12239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12240                           ;incstack = 0
 12241  01C908  0EFF               	movlw	-1
 12242  01C90A  50E3               	movf	plusw1,w,c
 12243  01C90C  6ED9               	movwf	fsr2l,c
 12244  01C90E  6ADA               	clrf	fsr2h,c
 12245  01C910  0E07               	movlw	7
 12246  01C912  AEDB               	btfss	plusw2,7,c
 12247  01C914  D010               	goto	u16460
 12248  01C916  52DE               	movf	postinc2,f,c
 12249  01C918  52DE               	movf	postinc2,f,c
 12250  01C91A  0E80               	movlw	128
 12251  01C91C  5CDE               	subwf	postinc2,w,c
 12252  01C91E  0EBD               	movlw	189
 12253  01C920  58DE               	subwfb	postinc2,w,c
 12254  01C922  0E0E               	movlw	14
 12255  01C924  58DE               	subwfb	postinc2,w,c
 12256  01C926  0EFF               	movlw	255
 12257  01C928  58DE               	subwfb	postinc2,w,c
 12258  01C92A  0EFF               	movlw	255
 12259  01C92C  58DE               	subwfb	postinc2,w,c
 12260  01C92E  0EFF               	movlw	255
 12261  01C930  58DE               	subwfb	postinc2,w,c
 12262  01C932  A0D8               	btfss	status,0,c
 12263  01C934  D01B               	goto	u16470
 12264  01C936                     u16460:
 12265                           
 12266                           ;stkvar	_t @ sp[(0)+-1]
 12267  01C936  0EFF               	movlw	-1
 12268  01C938  50E3               	movf	plusw1,w,c
 12269  01C93A  6ED9               	movwf	fsr2l,c
 12270  01C93C  6ADA               	clrf	fsr2h,c
 12271  01C93E  0E07               	movlw	7
 12272  01C940  BEDB               	btfsc	plusw2,7,c
 12273  01C942  D019               	goto	l16886
 12274  01C944  0E07               	movlw	7
 12275  01C946  50DB               	movf	plusw2,w,c
 12276  01C948  E111               	bnz	u16470
 12277  01C94A  0E06               	movlw	6
 12278  01C94C  50DB               	movf	plusw2,w,c
 12279  01C94E  E10E               	bnz	u16470
 12280  01C950  0E05               	movlw	5
 12281  01C952  50DB               	movf	plusw2,w,c
 12282  01C954  E10B               	bnz	u16470
 12283  01C956  04DE               	decf	postinc2,w,c
 12284  01C958  0E7B               	movlw	123
 12285  01C95A  58DE               	subwfb	postinc2,w,c
 12286  01C95C  0E9D               	movlw	157
 12287  01C95E  58DE               	subwfb	postinc2,w,c
 12288  01C960  0E40               	movlw	64
 12289  01C962  58DE               	subwfb	postinc2,w,c
 12290  01C964  0EF1               	movlw	241
 12291  01C966  58DE               	subwfb	postinc2,w,c
 12292  01C968  A0D8               	btfss	status,0,c
 12293  01C96A  D005               	goto	l16886
 12294  01C96C                     u16470:
 12295  01C96C  0E00               	movlw	0
 12296  01C96E  6E2A               	movwf	btemp^0,c
 12297  01C970  0E00               	movlw	0
 12298  01C972  6E2B               	movwf	(btemp+1)^0,c
 12299  01C974  D0E7               	goto	l3517
 12300  01C976                     l16886:
 12301                           
 12302                           ;stkvar	_tm @ sp[(0)+-3]
 12303  01C976  0EFD               	movlw	-3
 12304  01C978  50E3               	movf	plusw1,w,c
 12305  01C97A  0F16               	addlw	22
 12306  01C97C  6E34               	movwf	(btemp+10)^0,c
 12307  01C97E  0EFE               	movlw	-2
 12308  01C980  006F FF8C  F035    	movff	plusw1,btemp+11
 12309  01C986  0E00               	movlw	0
 12310  01C988  2235               	addwfc	(btemp+11)^0,f,c
 12311  01C98A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12312  01C990  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12313  01C996  0E00               	movlw	0
 12314  01C998  6EE6               	movwf	postinc1,c
 12315  01C99A  0E00               	movlw	0
 12316  01C99C  6EE6               	movwf	postinc1,c
 12317                           
 12318                           ;stkvar	_tm @ sp[(-4)+-3]
 12319  01C99E  0EF9               	movlw	-7
 12320  01C9A0  50E3               	movf	plusw1,w,c
 12321  01C9A2  0F12               	addlw	18
 12322  01C9A4  6E34               	movwf	(btemp+10)^0,c
 12323  01C9A6  0EFA               	movlw	-6
 12324  01C9A8  006F FF8C  F035    	movff	plusw1,btemp+11
 12325  01C9AE  0E00               	movlw	0
 12326  01C9B0  2235               	addwfc	(btemp+11)^0,f,c
 12327  01C9B2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12328  01C9B8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12329                           
 12330                           ;stkvar	_tm @ sp[(-6)+-3]
 12331  01C9BE  0EF7               	movlw	-9
 12332  01C9C0  50E3               	movf	plusw1,w,c
 12333  01C9C2  0F10               	addlw	16
 12334  01C9C4  6E34               	movwf	(btemp+10)^0,c
 12335  01C9C6  0EF8               	movlw	-8
 12336  01C9C8  006F FF8C  F035    	movff	plusw1,btemp+11
 12337  01C9CE  0E00               	movlw	0
 12338  01C9D0  2235               	addwfc	(btemp+11)^0,f,c
 12339  01C9D2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12340  01C9D8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12341  01C9DE  0E00               	movlw	0
 12342  01C9E0  6EE6               	movwf	postinc1,c
 12343  01C9E2  0E00               	movlw	0
 12344  01C9E4  6EE6               	movwf	postinc1,c
 12345                           
 12346                           ;stkvar	_t @ sp[(-10)+-1]
 12347  01C9E6  0EF5               	movlw	-11
 12348  01C9E8  50E3               	movf	plusw1,w,c
 12349  01C9EA  6ED9               	movwf	fsr2l,c
 12350  01C9EC  6ADA               	clrf	fsr2h,c
 12351  01C9EE  006F FF7B FFE6     	movff	postinc2,postinc1
 12352  01C9F4  006F FF7B FFE6     	movff	postinc2,postinc1
 12353  01C9FA  006F FF7B FFE6     	movff	postinc2,postinc1
 12354  01CA00  006F FF7B FFE6     	movff	postinc2,postinc1
 12355  01CA06  006F FF7B FFE6     	movff	postinc2,postinc1
 12356  01CA0C  006F FF7B FFE6     	movff	postinc2,postinc1
 12357  01CA12  006F FF7B FFE6     	movff	postinc2,postinc1
 12358  01CA18  006F FF7B FFE6     	movff	postinc2,postinc1
 12359  01CA1E  EC8C  F0AE         	call	___secs_to_zone	;wreg free
 12360                           
 12361                           ;stkvar	_tm @ sp[(0)+-3]
 12362  01CA22  0EFD               	movlw	-3
 12363  01CA24  006F FF8F FFE6     	movff	plusw1,postinc1
 12364  01CA2A  006F FF8F FFE6     	movff	plusw1,postinc1
 12365                           
 12366                           ;stkvar	_t @ sp[(-2)+-1]
 12367  01CA30  0EFD               	movlw	-3
 12368  01CA32  50E3               	movf	plusw1,w,c
 12369  01CA34  6ED9               	movwf	fsr2l,c
 12370  01CA36  6ADA               	clrf	fsr2h,c
 12371  01CA38  006F FF78  F03A    	movff	postinc2,btemp+16
 12372  01CA3E  006F FF78  F03B    	movff	postinc2,btemp+17
 12373  01CA44  006F FF78  F03C    	movff	postinc2,btemp+18
 12374  01CA4A  006F FF78  F03D    	movff	postinc2,btemp+19
 12375  01CA50  006F FF78  F03E    	movff	postinc2,btemp+20
 12376  01CA56  006F FF78  F03F    	movff	postinc2,btemp+21
 12377  01CA5C  006F FF78  F040    	movff	postinc2,btemp+22
 12378  01CA62  006F FF78  F041    	movff	postinc2,btemp+23
 12379                           
 12380                           ;stkvar	_tm @ sp[(-2)+-3]
 12381  01CA68  0EFB               	movlw	-5
 12382  01CA6A  006F FF8C  F034    	movff	plusw1,btemp+10
 12383  01CA70  0EFC               	movlw	-4
 12384  01CA72  006F FF8C  F035    	movff	plusw1,btemp+11
 12385  01CA78  0E12               	movlw	18
 12386  01CA7A  2434               	addwf	(btemp+10)^0,w,c
 12387  01CA7C  6ED9               	movwf	fsr2l,c
 12388  01CA7E  0E00               	movlw	0
 12389  01CA80  2035               	addwfc	(btemp+11)^0,w,c
 12390  01CA82  6EDA               	movwf	fsr2h,c
 12391  01CA84  006F FF78  F032    	movff	postinc2,btemp+8
 12392  01CA8A  006F FF78  F033    	movff	postinc2,btemp+9
 12393  01CA90  006F FF78  F034    	movff	postinc2,btemp+10
 12394  01CA96  006F FF78  F035    	movff	postinc2,btemp+11
 12395  01CA9C  0060  F0C8  F042   	movff	btemp+8,btemp+24
 12396  01CAA2  0060  F0CC  F043   	movff	btemp+9,btemp+25
 12397  01CAA8  0060  F0D0  F044   	movff	btemp+10,btemp+26
 12398  01CAAE  0060  F0D4  F045   	movff	btemp+11,btemp+27
 12399  01CAB4  6A46               	clrf	(btemp+28)^0,c
 12400  01CAB6  BE45               	btfsc	(btemp+27)^0,7,c
 12401  01CAB8  6846               	setf	(btemp+28)^0,c
 12402  01CABA  0060  F118  F047   	movff	btemp+28,btemp+29
 12403  01CAC0  0060  F118  F048   	movff	btemp+28,btemp+30
 12404  01CAC6  0060  F118  F049   	movff	btemp+28,btemp+31
 12405  01CACC  503A               	movf	(btemp+16)^0,w,c
 12406  01CACE  2442               	addwf	(btemp+24)^0,w,c
 12407  01CAD0  6E32               	movwf	(btemp+8)^0,c
 12408  01CAD2  503B               	movf	(btemp+17)^0,w,c
 12409  01CAD4  2043               	addwfc	(btemp+25)^0,w,c
 12410  01CAD6  6E33               	movwf	(btemp+9)^0,c
 12411  01CAD8  503C               	movf	(btemp+18)^0,w,c
 12412  01CADA  2044               	addwfc	(btemp+26)^0,w,c
 12413  01CADC  6E34               	movwf	(btemp+10)^0,c
 12414  01CADE  503D               	movf	(btemp+19)^0,w,c
 12415  01CAE0  2045               	addwfc	(btemp+27)^0,w,c
 12416  01CAE2  6E35               	movwf	(btemp+11)^0,c
 12417  01CAE4  503E               	movf	(btemp+20)^0,w,c
 12418  01CAE6  2046               	addwfc	(btemp+28)^0,w,c
 12419  01CAE8  6E36               	movwf	(btemp+12)^0,c
 12420  01CAEA  503F               	movf	(btemp+21)^0,w,c
 12421  01CAEC  2047               	addwfc	(btemp+29)^0,w,c
 12422  01CAEE  6E37               	movwf	(btemp+13)^0,c
 12423  01CAF0  5040               	movf	(btemp+22)^0,w,c
 12424  01CAF2  2048               	addwfc	(btemp+30)^0,w,c
 12425  01CAF4  6E38               	movwf	(btemp+14)^0,c
 12426  01CAF6  5041               	movf	(btemp+23)^0,w,c
 12427  01CAF8  2049               	addwfc	(btemp+31)^0,w,c
 12428  01CAFA  6E39               	movwf	(btemp+15)^0,c
 12429  01CAFC  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12430  01CB02  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12431  01CB08  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12432  01CB0E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12433  01CB14  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12434  01CB1A  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12435  01CB20  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12436  01CB26  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12437  01CB2C  EC5D  F094         	call	___secs_to_tm	;wreg free
 12438  01CB30  BE2D               	btfsc	(btemp+3)^0,7,c
 12439  01CB32  D71C               	goto	u16470
 12440                           
 12441                           ;stkvar	_tm @ sp[(0)+-3]
 12442  01CB34  0EFD               	movlw	-3
 12443  01CB36  006F FF8C  F02A    	movff	plusw1,btemp
 12444  01CB3C  0EFE               	movlw	-2
 12445  01CB3E  006F FF8C  F02B    	movff	plusw1,btemp+1
 12446  01CB44                     l3517:
 12447                           
 12448                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12449  01CB44  52E5               	movf	postdec1,f,c
 12450  01CB46  52E5               	movf	postdec1,f,c
 12451  01CB48  52E5               	movf	postdec1,f,c
 12452  01CB4A  0012               	return		;funcret
 12453  01CB4C                     __end_of___localtime_r:
 12454                           	opt callstack 0
 12455                           
 12456 ;; *************** function ___secs_to_zone *****************
 12457 ;; Defined at:
 12458 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;  t               8  [STACK] long long 
 12461 ;;  local           2  [STACK] int 
 12462 ;;  isdst           2  [STACK] PTR int 
 12463 ;;		 -> localtime@tm(24), 
 12464 ;;  offset          2  [STACK] PTR long 
 12465 ;;		 -> localtime@tm(24), 
 12466 ;;  oppoff          2  [STACK] PTR long 
 12467 ;;		 -> NULL(0), 
 12468 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12469 ;;		 -> localtime@tm(24), 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;  alt             2  [STACK] unsigned int 
 12472 ;;  i               2    0        unsigned int 
 12473 ;;  y               8  [STACK] long long 
 12474 ;;  t1              8  [STACK] long long 
 12475 ;;  t0              8  [STACK] long long 
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1  [STACK] void 
 12478 ;; Registers used:
 12479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/39
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12489 ;;Total ram usage:        0 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:   19
 12492 ;; This function calls:
 12493 ;;		___aodiv
 12494 ;;		___year_to_secs
 12495 ;;		_do_tzset
 12496 ;;		_rule_to_secs
 12497 ;;		_scan_trans
 12498 ;;		_zi_read32
 12499 ;; This function is called by:
 12500 ;;		___localtime_r
 12501 ;; This function uses a reentrant model
 12502 ;;
 12503                           
 12504                           	psect	text38
 12505  015D18                     __ptext38:
 12506                           	opt callstack 0
 12507  015D18                     ___secs_to_zone:
 12508                           	opt callstack 0
 12509                           
 12510                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12511  015D18  0E18               	movlw	24
 12512  015D1A  26E1               	addwf	fsr1l,f,c
 12513  015D1C  0E00               	movlw	0
 12514  015D1E  22E2               	addwfc	fsr1h,f,c
 12515                           
 12516                           ;incstack = 0
 12517  015D20  EC67  F0DE         	call	_do_tzset	;wreg free
 12518  015D24  0100               	movlb	0	; () banked
 12519  015D26  51B8               	movf	___daylight& (0+255),w,b
 12520  015D28  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12521  015D2A  B4D8               	btfsc	status,2,c
 12522  015D2C  D356               	goto	u16250
 12523                           
 12524                           ; BSR set to: 0
 12525  015D2E  0E58               	movlw	88
 12526  015D30  6EE6               	movwf	postinc1,c
 12527  015D32  0E85               	movlw	133
 12528  015D34  6EE6               	movwf	postinc1,c
 12529  015D36  0EE1               	movlw	225
 12530  015D38  6EE6               	movwf	postinc1,c
 12531  015D3A  0E01               	movlw	1
 12532  015D3C  6EE6               	movwf	postinc1,c
 12533  015D3E  0E00               	movlw	0
 12534  015D40  6EE6               	movwf	postinc1,c
 12535  015D42  0E00               	movlw	0
 12536  015D44  6EE6               	movwf	postinc1,c
 12537  015D46  0E00               	movlw	0
 12538  015D48  6EE6               	movwf	postinc1,c
 12539  015D4A  0E00               	movlw	0
 12540  015D4C  6EE6               	movwf	postinc1,c
 12541                           
 12542                           ;stkvar	_t @ sp[(-32)+-8]
 12543  015D4E  50E1               	movf	fsr1l,w,c
 12544  015D50  0FD8               	addlw	-40
 12545  015D52  6ED9               	movwf	fsr2l,c
 12546  015D54  50E2               	movf	fsr1h,w,c
 12547  015D56  6EDA               	movwf	fsr2h,c
 12548  015D58  0EFF               	movlw	255
 12549  015D5A  22DA               	addwfc	fsr2h,f,c
 12550  015D5C  006F FF7B FFE6     	movff	postinc2,postinc1
 12551  015D62  006F FF7B FFE6     	movff	postinc2,postinc1
 12552  015D68  006F FF7B FFE6     	movff	postinc2,postinc1
 12553  015D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 12554  015D74  006F FF7B FFE6     	movff	postinc2,postinc1
 12555  015D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 12556  015D80  006F FF7B FFE6     	movff	postinc2,postinc1
 12557  015D86  006F FF7B FFE6     	movff	postinc2,postinc1
 12558  015D8C  ECE7  F0E0         	call	___aodiv	;wreg free
 12559  015D90  52E5               	movf	postdec1,f,c
 12560  015D92  006F FF9C  F041    	movff	indf1,btemp+23
 12561  015D98  52E5               	movf	postdec1,f,c
 12562  015D9A  006F FF9C  F040    	movff	indf1,btemp+22
 12563  015DA0  52E5               	movf	postdec1,f,c
 12564  015DA2  006F FF9C  F03F    	movff	indf1,btemp+21
 12565  015DA8  52E5               	movf	postdec1,f,c
 12566  015DAA  006F FF9C  F03E    	movff	indf1,btemp+20
 12567  015DB0  52E5               	movf	postdec1,f,c
 12568  015DB2  006F FF9C  F03D    	movff	indf1,btemp+19
 12569  015DB8  52E5               	movf	postdec1,f,c
 12570  015DBA  006F FF9C  F03C    	movff	indf1,btemp+18
 12571  015DC0  52E5               	movf	postdec1,f,c
 12572  015DC2  006F FF9C  F03B    	movff	indf1,btemp+17
 12573  015DC8  52E5               	movf	postdec1,f,c
 12574  015DCA  006F FF9C  F03A    	movff	indf1,btemp+16
 12575  015DD0  0EF8               	movlw	248
 12576  015DD2  26E1               	addwf	fsr1l,f,c
 12577  015DD4  0EFF               	movlw	255
 12578  015DD6  22E2               	addwfc	fsr1h,f,c
 12579  015DD8  0E46               	movlw	70
 12580  015DDA  243A               	addwf	(btemp+16)^0,w,c
 12581  015DDC  6E42               	movwf	(btemp+24)^0,c
 12582  015DDE  0E00               	movlw	0
 12583  015DE0  203B               	addwfc	(btemp+17)^0,w,c
 12584  015DE2  6E43               	movwf	(btemp+25)^0,c
 12585  015DE4  0E00               	movlw	0
 12586  015DE6  203C               	addwfc	(btemp+18)^0,w,c
 12587  015DE8  6E44               	movwf	(btemp+26)^0,c
 12588  015DEA  0E00               	movlw	0
 12589  015DEC  203D               	addwfc	(btemp+19)^0,w,c
 12590  015DEE  6E45               	movwf	(btemp+27)^0,c
 12591  015DF0  0E00               	movlw	0
 12592  015DF2  203E               	addwfc	(btemp+20)^0,w,c
 12593  015DF4  6E46               	movwf	(btemp+28)^0,c
 12594  015DF6  0E00               	movlw	0
 12595  015DF8  203F               	addwfc	(btemp+21)^0,w,c
 12596  015DFA  6E47               	movwf	(btemp+29)^0,c
 12597  015DFC  0E00               	movlw	0
 12598  015DFE  2040               	addwfc	(btemp+22)^0,w,c
 12599  015E00  6E48               	movwf	(btemp+30)^0,c
 12600  015E02  0E00               	movlw	0
 12601  015E04  2041               	addwfc	(btemp+23)^0,w,c
 12602  015E06  6E49               	movwf	(btemp+31)^0,c
 12603                           
 12604                           ;stkvar	_y @ sp[(-24)+0]
 12605  015E08  0EE8               	movlw	-24
 12606  015E0A  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12607  015E10  0EE9               	movlw	-23
 12608  015E12  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12609  015E18  0EEA               	movlw	-22
 12610  015E1A  0060  F113  FFE3   	movff	btemp+26,plusw1
 12611  015E20  0EEB               	movlw	-21
 12612  015E22  0060  F117  FFE3   	movff	btemp+27,plusw1
 12613  015E28  0EEC               	movlw	-20
 12614  015E2A  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12615  015E30  0EED               	movlw	-19
 12616  015E32  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12617  015E38  0EEE               	movlw	-18
 12618  015E3A  0060  F123  FFE3   	movff	btemp+30,plusw1
 12619  015E40  0EEF               	movlw	-17
 12620  015E42  0060  F127  FFE3   	movff	btemp+31,plusw1
 12621  015E48  D010               	goto	l16656
 12622  015E4A                     l16654:
 12623                           
 12624                           ;stkvar	_y @ sp[(-24)+0]
 12625  015E4A  50E1               	movf	fsr1l,w,c
 12626  015E4C  0FE8               	addlw	-24
 12627  015E4E  6ED9               	movwf	fsr2l,c
 12628  015E50  50E2               	movf	fsr1h,w,c
 12629  015E52  6EDA               	movwf	fsr2h,c
 12630  015E54  0EFF               	movlw	255
 12631  015E56  22DA               	addwfc	fsr2h,f,c
 12632  015E58  06DE               	decf	postinc2,f,c
 12633  015E5A  0E00               	movlw	0
 12634  015E5C  5ADE               	subwfb	postinc2,f,c
 12635  015E5E  5ADE               	subwfb	postinc2,f,c
 12636  015E60  5ADE               	subwfb	postinc2,f,c
 12637  015E62  5ADE               	subwfb	postinc2,f,c
 12638  015E64  5ADE               	subwfb	postinc2,f,c
 12639  015E66  5ADE               	subwfb	postinc2,f,c
 12640  015E68  5ADE               	subwfb	postinc2,f,c
 12641  015E6A                     l16656:
 12642  015E6A  0E00               	movlw	0
 12643  015E6C  6EE6               	movwf	postinc1,c
 12644  015E6E  0E00               	movlw	0
 12645  015E70  6EE6               	movwf	postinc1,c
 12646                           
 12647                           ;stkvar	_y @ sp[(-26)+0]
 12648  015E72  50E1               	movf	fsr1l,w,c
 12649  015E74  0FE6               	addlw	-26
 12650  015E76  6ED9               	movwf	fsr2l,c
 12651  015E78  50E2               	movf	fsr1h,w,c
 12652  015E7A  6EDA               	movwf	fsr2h,c
 12653  015E7C  0EFF               	movlw	255
 12654  015E7E  22DA               	addwfc	fsr2h,f,c
 12655  015E80  006F FF7B FFE6     	movff	postinc2,postinc1
 12656  015E86  006F FF7B FFE6     	movff	postinc2,postinc1
 12657  015E8C  006F FF7B FFE6     	movff	postinc2,postinc1
 12658  015E92  006F FF7B FFE6     	movff	postinc2,postinc1
 12659  015E98  006F FF7B FFE6     	movff	postinc2,postinc1
 12660  015E9E  006F FF7B FFE6     	movff	postinc2,postinc1
 12661  015EA4  006F FF7B FFE6     	movff	postinc2,postinc1
 12662  015EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 12663  015EB0  ECD3  F0A9         	call	___year_to_secs	;wreg free
 12664  015EB4  52E5               	movf	postdec1,f,c
 12665  015EB6  006F FF9C  F041    	movff	indf1,btemp+23
 12666  015EBC  52E5               	movf	postdec1,f,c
 12667  015EBE  006F FF9C  F040    	movff	indf1,btemp+22
 12668  015EC4  52E5               	movf	postdec1,f,c
 12669  015EC6  006F FF9C  F03F    	movff	indf1,btemp+21
 12670  015ECC  52E5               	movf	postdec1,f,c
 12671  015ECE  006F FF9C  F03E    	movff	indf1,btemp+20
 12672  015ED4  52E5               	movf	postdec1,f,c
 12673  015ED6  006F FF9C  F03D    	movff	indf1,btemp+19
 12674  015EDC  52E5               	movf	postdec1,f,c
 12675  015EDE  006F FF9C  F03C    	movff	indf1,btemp+18
 12676  015EE4  52E5               	movf	postdec1,f,c
 12677  015EE6  006F FF9C  F03B    	movff	indf1,btemp+17
 12678  015EEC  52E5               	movf	postdec1,f,c
 12679  015EEE  006F FF9C  F03A    	movff	indf1,btemp+16
 12680  015EF4  52E5               	movf	postdec1,f,c
 12681  015EF6  52E5               	movf	postdec1,f,c
 12682                           
 12683                           ;stkvar	_t @ sp[(-24)+-8]
 12684  015EF8  0EE0               	movlw	-32
 12685  015EFA  006F FF8C  F02A    	movff	plusw1,btemp
 12686  015F00  503A               	movf	(btemp+16)^0,w,c
 12687  015F02  5C2A               	subwf	btemp^0,w,c
 12688  015F04  0EE1               	movlw	-31
 12689  015F06  006F FF8C  F02A    	movff	plusw1,btemp
 12690  015F0C  503B               	movf	(btemp+17)^0,w,c
 12691  015F0E  582A               	subwfb	btemp^0,w,c
 12692  015F10  0EE2               	movlw	-30
 12693  015F12  006F FF8C  F02A    	movff	plusw1,btemp
 12694  015F18  503C               	movf	(btemp+18)^0,w,c
 12695  015F1A  582A               	subwfb	btemp^0,w,c
 12696  015F1C  0EE3               	movlw	-29
 12697  015F1E  006F FF8C  F02A    	movff	plusw1,btemp
 12698  015F24  503D               	movf	(btemp+19)^0,w,c
 12699  015F26  582A               	subwfb	btemp^0,w,c
 12700  015F28  0EE4               	movlw	-28
 12701  015F2A  006F FF8C  F02A    	movff	plusw1,btemp
 12702  015F30  503E               	movf	(btemp+20)^0,w,c
 12703  015F32  582A               	subwfb	btemp^0,w,c
 12704  015F34  0EE5               	movlw	-27
 12705  015F36  006F FF8C  F02A    	movff	plusw1,btemp
 12706  015F3C  503F               	movf	(btemp+21)^0,w,c
 12707  015F3E  582A               	subwfb	btemp^0,w,c
 12708  015F40  0EE6               	movlw	-26
 12709  015F42  006F FF8C  F02A    	movff	plusw1,btemp
 12710  015F48  5040               	movf	(btemp+22)^0,w,c
 12711  015F4A  582A               	subwfb	btemp^0,w,c
 12712  015F4C  0EE7               	movlw	-25
 12713  015F4E  50E3               	movf	plusw1,w,c
 12714  015F50  0A80               	xorlw	128
 12715  015F52  6E2A               	movwf	btemp^0,c
 12716  015F54  5041               	movf	(btemp+23)^0,w,c
 12717  015F56  0A80               	xorlw	128
 12718  015F58  582A               	subwfb	btemp^0,w,c
 12719  015F5A  B0D8               	btfsc	status,0,c
 12720  015F5C  D011               	goto	l16660
 12721  015F5E  D775               	goto	l16654
 12722  015F60                     l16658:
 12723                           
 12724                           ;stkvar	_y @ sp[(-24)+0]
 12725  015F60  50E1               	movf	fsr1l,w,c
 12726  015F62  0FE8               	addlw	-24
 12727  015F64  6ED9               	movwf	fsr2l,c
 12728  015F66  50E2               	movf	fsr1h,w,c
 12729  015F68  6EDA               	movwf	fsr2h,c
 12730  015F6A  0EFF               	movlw	255
 12731  015F6C  22DA               	addwfc	fsr2h,f,c
 12732  015F6E  2ADE               	incf	postinc2,f,c
 12733  015F70  0E00               	movlw	0
 12734  015F72  22DE               	addwfc	postinc2,f,c
 12735  015F74  22DE               	addwfc	postinc2,f,c
 12736  015F76  22DE               	addwfc	postinc2,f,c
 12737  015F78  22DE               	addwfc	postinc2,f,c
 12738  015F7A  22DE               	addwfc	postinc2,f,c
 12739  015F7C  22DE               	addwfc	postinc2,f,c
 12740  015F7E  22DE               	addwfc	postinc2,f,c
 12741  015F80                     l16660:
 12742                           
 12743                           ;stkvar	_t @ sp[(-24)+-8]
 12744  015F80  0E00               	movlw	0
 12745  015F82  6EE6               	movwf	postinc1,c
 12746  015F84  0E00               	movlw	0
 12747  015F86  6EE6               	movwf	postinc1,c
 12748                           
 12749                           ;stkvar	_y @ sp[(-26)+0]
 12750  015F88  0EE6               	movlw	-26
 12751  015F8A  50E3               	movf	plusw1,w,c
 12752  015F8C  0F01               	addlw	1
 12753  015F8E  6E3A               	movwf	(btemp+16)^0,c
 12754  015F90  0EE7               	movlw	-25
 12755  015F92  006F FF8C  F03B    	movff	plusw1,btemp+17
 12756  015F98  0E00               	movlw	0
 12757  015F9A  223B               	addwfc	(btemp+17)^0,f,c
 12758  015F9C  0EE8               	movlw	-24
 12759  015F9E  006F FF8C  F03C    	movff	plusw1,btemp+18
 12760  015FA4  0E00               	movlw	0
 12761  015FA6  223C               	addwfc	(btemp+18)^0,f,c
 12762  015FA8  0EE9               	movlw	-23
 12763  015FAA  006F FF8C  F03D    	movff	plusw1,btemp+19
 12764  015FB0  0E00               	movlw	0
 12765  015FB2  223D               	addwfc	(btemp+19)^0,f,c
 12766  015FB4  0EEA               	movlw	-22
 12767  015FB6  006F FF8C  F03E    	movff	plusw1,btemp+20
 12768  015FBC  0E00               	movlw	0
 12769  015FBE  223E               	addwfc	(btemp+20)^0,f,c
 12770  015FC0  0EEB               	movlw	-21
 12771  015FC2  006F FF8C  F03F    	movff	plusw1,btemp+21
 12772  015FC8  0E00               	movlw	0
 12773  015FCA  223F               	addwfc	(btemp+21)^0,f,c
 12774  015FCC  0EEC               	movlw	-20
 12775  015FCE  006F FF8C  F040    	movff	plusw1,btemp+22
 12776  015FD4  0E00               	movlw	0
 12777  015FD6  2240               	addwfc	(btemp+22)^0,f,c
 12778  015FD8  0EED               	movlw	-19
 12779  015FDA  006F FF8C  F041    	movff	plusw1,btemp+23
 12780  015FE0  0E00               	movlw	0
 12781  015FE2  2241               	addwfc	(btemp+23)^0,f,c
 12782  015FE4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12783  015FEA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12784  015FF0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12785  015FF6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12786  015FFC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12787  016002  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12788  016008  0060  F103  FFE6   	movff	btemp+22,postinc1
 12789  01600E  0060  F107  FFE6   	movff	btemp+23,postinc1
 12790  016014  ECD3  F0A9         	call	___year_to_secs	;wreg free
 12791  016018  52E5               	movf	postdec1,f,c
 12792  01601A  006F FF9C  F041    	movff	indf1,btemp+23
 12793  016020  52E5               	movf	postdec1,f,c
 12794  016022  006F FF9C  F040    	movff	indf1,btemp+22
 12795  016028  52E5               	movf	postdec1,f,c
 12796  01602A  006F FF9C  F03F    	movff	indf1,btemp+21
 12797  016030  52E5               	movf	postdec1,f,c
 12798  016032  006F FF9C  F03E    	movff	indf1,btemp+20
 12799  016038  52E5               	movf	postdec1,f,c
 12800  01603A  006F FF9C  F03D    	movff	indf1,btemp+19
 12801  016040  52E5               	movf	postdec1,f,c
 12802  016042  006F FF9C  F03C    	movff	indf1,btemp+18
 12803  016048  52E5               	movf	postdec1,f,c
 12804  01604A  006F FF9C  F03B    	movff	indf1,btemp+17
 12805  016050  52E5               	movf	postdec1,f,c
 12806  016052  006F FF9C  F03A    	movff	indf1,btemp+16
 12807  016058  52E5               	movf	postdec1,f,c
 12808  01605A  52E5               	movf	postdec1,f,c
 12809  01605C  0EE0               	movlw	-32
 12810  01605E  50E3               	movf	plusw1,w,c
 12811  016060  5C3A               	subwf	(btemp+16)^0,w,c
 12812  016062  0EE1               	movlw	-31
 12813  016064  50E3               	movf	plusw1,w,c
 12814  016066  583B               	subwfb	(btemp+17)^0,w,c
 12815  016068  0EE2               	movlw	-30
 12816  01606A  50E3               	movf	plusw1,w,c
 12817  01606C  583C               	subwfb	(btemp+18)^0,w,c
 12818  01606E  0EE3               	movlw	-29
 12819  016070  50E3               	movf	plusw1,w,c
 12820  016072  583D               	subwfb	(btemp+19)^0,w,c
 12821  016074  0EE4               	movlw	-28
 12822  016076  50E3               	movf	plusw1,w,c
 12823  016078  583E               	subwfb	(btemp+20)^0,w,c
 12824  01607A  0EE5               	movlw	-27
 12825  01607C  50E3               	movf	plusw1,w,c
 12826  01607E  583F               	subwfb	(btemp+21)^0,w,c
 12827  016080  0EE6               	movlw	-26
 12828  016082  50E3               	movf	plusw1,w,c
 12829  016084  5840               	subwfb	(btemp+22)^0,w,c
 12830  016086  5041               	movf	(btemp+23)^0,w,c
 12831  016088  0A80               	xorlw	128
 12832  01608A  6E2A               	movwf	btemp^0,c
 12833  01608C  0EE7               	movlw	-25
 12834  01608E  50E3               	movf	plusw1,w,c
 12835  016090  0A80               	xorlw	128
 12836  016092  582A               	subwfb	btemp^0,w,c
 12837  016094  A0D8               	btfss	status,0,c
 12838  016096  D764               	goto	l16658
 12839                           
 12840                           ;stkvar	_y @ sp[(-24)+0]
 12841  016098  0EE8               	movlw	-24
 12842  01609A  006F FF8F FFE6     	movff	plusw1,postinc1
 12843  0160A0  006F FF8F FFE6     	movff	plusw1,postinc1
 12844  0160A6  0EE5               	movlw	low _r0
 12845  0160A8  6EE6               	movwf	postinc1,c
 12846  0160AA  0E01               	movlw	high _r0
 12847  0160AC  6EE6               	movwf	postinc1,c
 12848  0160AE  ECD0  F0BA         	call	_rule_to_secs	;wreg free
 12849  0160B2  52E5               	movf	postdec1,f,c
 12850  0160B4  006F FF9C  F041    	movff	indf1,btemp+23
 12851  0160BA  52E5               	movf	postdec1,f,c
 12852  0160BC  006F FF9C  F040    	movff	indf1,btemp+22
 12853  0160C2  52E5               	movf	postdec1,f,c
 12854  0160C4  006F FF9C  F03F    	movff	indf1,btemp+21
 12855  0160CA  52E5               	movf	postdec1,f,c
 12856  0160CC  006F FF9C  F03E    	movff	indf1,btemp+20
 12857  0160D2  52E5               	movf	postdec1,f,c
 12858  0160D4  006F FF9C  F03D    	movff	indf1,btemp+19
 12859  0160DA  52E5               	movf	postdec1,f,c
 12860  0160DC  006F FF9C  F03C    	movff	indf1,btemp+18
 12861  0160E2  52E5               	movf	postdec1,f,c
 12862  0160E4  006F FF9C  F03B    	movff	indf1,btemp+17
 12863  0160EA  52E5               	movf	postdec1,f,c
 12864  0160EC  006F FF9C  F03A    	movff	indf1,btemp+16
 12865                           
 12866                           ;stkvar	_t0 @ sp[(-24)+16]
 12867  0160F2  0EF8               	movlw	-8
 12868  0160F4  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12869  0160FA  0EF9               	movlw	-7
 12870  0160FC  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12871  016102  0EFA               	movlw	-6
 12872  016104  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12873  01610A  0EFB               	movlw	-5
 12874  01610C  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12875  016112  0EFC               	movlw	-4
 12876  016114  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12877  01611A  0EFD               	movlw	-3
 12878  01611C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12879  016122  0EFE               	movlw	-2
 12880  016124  0060  F103  FFE3   	movff	btemp+22,plusw1
 12881  01612A  0EFF               	movlw	-1
 12882  01612C  0060  F107  FFE3   	movff	btemp+23,plusw1
 12883                           
 12884                           ;stkvar	_y @ sp[(-24)+0]
 12885  016132  0EE8               	movlw	-24
 12886  016134  006F FF8F FFE6     	movff	plusw1,postinc1
 12887  01613A  006F FF8F FFE6     	movff	plusw1,postinc1
 12888  016140  0EDB               	movlw	low _r1
 12889  016142  6EE6               	movwf	postinc1,c
 12890  016144  0E01               	movlw	high _r1
 12891  016146  6EE6               	movwf	postinc1,c
 12892  016148  ECD0  F0BA         	call	_rule_to_secs	;wreg free
 12893  01614C  52E5               	movf	postdec1,f,c
 12894  01614E  006F FF9C  F041    	movff	indf1,btemp+23
 12895  016154  52E5               	movf	postdec1,f,c
 12896  016156  006F FF9C  F040    	movff	indf1,btemp+22
 12897  01615C  52E5               	movf	postdec1,f,c
 12898  01615E  006F FF9C  F03F    	movff	indf1,btemp+21
 12899  016164  52E5               	movf	postdec1,f,c
 12900  016166  006F FF9C  F03E    	movff	indf1,btemp+20
 12901  01616C  52E5               	movf	postdec1,f,c
 12902  01616E  006F FF9C  F03D    	movff	indf1,btemp+19
 12903  016174  52E5               	movf	postdec1,f,c
 12904  016176  006F FF9C  F03C    	movff	indf1,btemp+18
 12905  01617C  52E5               	movf	postdec1,f,c
 12906  01617E  006F FF9C  F03B    	movff	indf1,btemp+17
 12907  016184  52E5               	movf	postdec1,f,c
 12908  016186  006F FF9C  F03A    	movff	indf1,btemp+16
 12909                           
 12910                           ;stkvar	_t1 @ sp[(-24)+8]
 12911  01618C  0EF0               	movlw	-16
 12912  01618E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12913  016194  0EF1               	movlw	-15
 12914  016196  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12915  01619C  0EF2               	movlw	-14
 12916  01619E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12917  0161A4  0EF3               	movlw	-13
 12918  0161A6  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12919  0161AC  0EF4               	movlw	-12
 12920  0161AE  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12921  0161B4  0EF5               	movlw	-11
 12922  0161B6  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12923  0161BC  0EF6               	movlw	-10
 12924  0161BE  0060  F103  FFE3   	movff	btemp+22,plusw1
 12925  0161C4  0EF7               	movlw	-9
 12926  0161C6  0060  F107  FFE3   	movff	btemp+23,plusw1
 12927                           
 12928                           ;stkvar	_local @ sp[(-24)+-10]
 12929  0161CC  0EDE               	movlw	-34
 12930  0161CE  006F FF8C  F02A    	movff	plusw1,btemp
 12931  0161D4  0EDF               	movlw	-33
 12932  0161D6  50E3               	movf	plusw1,w,c
 12933  0161D8  102A               	iorwf	btemp^0,w,c
 12934  0161DA  A4D8               	btfss	status,2,c
 12935  0161DC  D044               	goto	l16670
 12936  0161DE  0060  F1C0  F03A   	movff	___timezone,btemp+16
 12937  0161E4  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 12938  0161EA  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 12939  0161F0  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 12940  0161F6  6A3E               	clrf	(btemp+20)^0,c
 12941  0161F8  BE3D               	btfsc	(btemp+19)^0,7,c
 12942  0161FA  683E               	setf	(btemp+20)^0,c
 12943  0161FC  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12944  016202  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12945  016208  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12946                           
 12947                           ;stkvar	_t0 @ sp[(-24)+16]
 12948  01620E  50E1               	movf	fsr1l,w,c
 12949  016210  0FF8               	addlw	-8
 12950  016212  6ED9               	movwf	fsr2l,c
 12951  016214  50E2               	movf	fsr1h,w,c
 12952  016216  6EDA               	movwf	fsr2h,c
 12953  016218  0EFF               	movlw	255
 12954  01621A  22DA               	addwfc	fsr2h,f,c
 12955  01621C  503A               	movf	(btemp+16)^0,w,c
 12956  01621E  26DE               	addwf	postinc2,f,c
 12957  016220  503B               	movf	(btemp+17)^0,w,c
 12958  016222  22DE               	addwfc	postinc2,f,c
 12959  016224  503C               	movf	(btemp+18)^0,w,c
 12960  016226  22DE               	addwfc	postinc2,f,c
 12961  016228  503D               	movf	(btemp+19)^0,w,c
 12962  01622A  22DE               	addwfc	postinc2,f,c
 12963  01622C  503E               	movf	(btemp+20)^0,w,c
 12964  01622E  22DE               	addwfc	postinc2,f,c
 12965  016230  503F               	movf	(btemp+21)^0,w,c
 12966  016232  22DE               	addwfc	postinc2,f,c
 12967  016234  5040               	movf	(btemp+22)^0,w,c
 12968  016236  22DE               	addwfc	postinc2,f,c
 12969  016238  5041               	movf	(btemp+23)^0,w,c
 12970  01623A  22DE               	addwfc	postinc2,f,c
 12971                           
 12972                           ;stkvar	_t1 @ sp[(-24)+8]
 12973  01623C  50E1               	movf	fsr1l,w,c
 12974  01623E  0FF0               	addlw	-16
 12975  016240  6ED9               	movwf	fsr2l,c
 12976  016242  50E2               	movf	fsr1h,w,c
 12977  016244  6EDA               	movwf	fsr2h,c
 12978  016246  0EFF               	movlw	255
 12979  016248  22DA               	addwfc	fsr2h,f,c
 12980  01624A  0100               	movlb	0	; () banked
 12981  01624C  51B6               	movf	_dst_off& (0+255),w,b
 12982  01624E  26DE               	addwf	postinc2,f,c
 12983  016250  51B7               	movf	(_dst_off+1)& (0+255),w,b
 12984  016252  22DE               	addwfc	postinc2,f,c
 12985  016254  0E00               	movlw	0
 12986  016256  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 12987  016258  0EFF               	movlw	255
 12988  01625A  22DE               	addwfc	postinc2,f,c
 12989  01625C  22DE               	addwfc	postinc2,f,c
 12990  01625E  22DE               	addwfc	postinc2,f,c
 12991  016260  22DE               	addwfc	postinc2,f,c
 12992  016262  22DE               	addwfc	postinc2,f,c
 12993  016264  22DE               	addwfc	postinc2,f,c
 12994  016266                     l16670:
 12995                           
 12996                           ;stkvar	_t1 @ sp[(-24)+8]
 12997                           ;stkvar	_t0 @ sp[(-24)+16]
 12998  016266  50E1               	movf	fsr1l,w,c
 12999  016268  0FF8               	addlw	-8
 13000  01626A  6ED9               	movwf	fsr2l,c
 13001  01626C  50E2               	movf	fsr1h,w,c
 13002  01626E  6EDA               	movwf	fsr2h,c
 13003  016270  0EFF               	movlw	255
 13004  016272  22DA               	addwfc	fsr2h,f,c
 13005  016274  0EF0               	movlw	-16
 13006  016276  50E3               	movf	plusw1,w,c
 13007  016278  5CDE               	subwf	postinc2,w,c
 13008  01627A  0EF1               	movlw	-15
 13009  01627C  50E3               	movf	plusw1,w,c
 13010  01627E  58DE               	subwfb	postinc2,w,c
 13011  016280  0EF2               	movlw	-14
 13012  016282  50E3               	movf	plusw1,w,c
 13013  016284  58DE               	subwfb	postinc2,w,c
 13014  016286  0EF3               	movlw	-13
 13015  016288  50E3               	movf	plusw1,w,c
 13016  01628A  58DE               	subwfb	postinc2,w,c
 13017  01628C  0EF4               	movlw	-12
 13018  01628E  50E3               	movf	plusw1,w,c
 13019  016290  58DE               	subwfb	postinc2,w,c
 13020  016292  0EF5               	movlw	-11
 13021  016294  50E3               	movf	plusw1,w,c
 13022  016296  58DE               	subwfb	postinc2,w,c
 13023  016298  0EF6               	movlw	-10
 13024  01629A  50E3               	movf	plusw1,w,c
 13025  01629C  58DE               	subwfb	postinc2,w,c
 13026  01629E  50DE               	movf	postinc2,w,c
 13027  0162A0  0A80               	xorlw	128
 13028  0162A2  6E2A               	movwf	btemp^0,c
 13029  0162A4  0EF7               	movlw	-9
 13030  0162A6  50E3               	movf	plusw1,w,c
 13031  0162A8  0A80               	xorlw	128
 13032  0162AA  582A               	subwfb	btemp^0,w,c
 13033  0162AC  B0D8               	btfsc	status,0,c
 13034  0162AE  D04B               	goto	l16680
 13035                           
 13036                           ;stkvar	_t0 @ sp[(-24)+16]
 13037                           ;stkvar	_t @ sp[(-24)+-8]
 13038  0162B0  50E1               	movf	fsr1l,w,c
 13039  0162B2  0FE0               	addlw	-32
 13040  0162B4  6ED9               	movwf	fsr2l,c
 13041  0162B6  50E2               	movf	fsr1h,w,c
 13042  0162B8  6EDA               	movwf	fsr2h,c
 13043  0162BA  0EFF               	movlw	255
 13044  0162BC  22DA               	addwfc	fsr2h,f,c
 13045  0162BE  0EF8               	movlw	-8
 13046  0162C0  50E3               	movf	plusw1,w,c
 13047  0162C2  5CDE               	subwf	postinc2,w,c
 13048  0162C4  0EF9               	movlw	-7
 13049  0162C6  50E3               	movf	plusw1,w,c
 13050  0162C8  58DE               	subwfb	postinc2,w,c
 13051  0162CA  0EFA               	movlw	-6
 13052  0162CC  50E3               	movf	plusw1,w,c
 13053  0162CE  58DE               	subwfb	postinc2,w,c
 13054  0162D0  0EFB               	movlw	-5
 13055  0162D2  50E3               	movf	plusw1,w,c
 13056  0162D4  58DE               	subwfb	postinc2,w,c
 13057  0162D6  0EFC               	movlw	-4
 13058  0162D8  50E3               	movf	plusw1,w,c
 13059  0162DA  58DE               	subwfb	postinc2,w,c
 13060  0162DC  0EFD               	movlw	-3
 13061  0162DE  50E3               	movf	plusw1,w,c
 13062  0162E0  58DE               	subwfb	postinc2,w,c
 13063  0162E2  0EFE               	movlw	-2
 13064  0162E4  50E3               	movf	plusw1,w,c
 13065  0162E6  58DE               	subwfb	postinc2,w,c
 13066  0162E8  50DE               	movf	postinc2,w,c
 13067  0162EA  0A80               	xorlw	128
 13068  0162EC  6E2A               	movwf	btemp^0,c
 13069  0162EE  0EFF               	movlw	-1
 13070  0162F0  50E3               	movf	plusw1,w,c
 13071  0162F2  0A80               	xorlw	128
 13072  0162F4  582A               	subwfb	btemp^0,w,c
 13073  0162F6  A0D8               	btfss	status,0,c
 13074  0162F8  D070               	goto	u16250
 13075                           
 13076                           ;stkvar	_t1 @ sp[(-24)+8]
 13077                           ;stkvar	_t @ sp[(-24)+-8]
 13078  0162FA  50E1               	movf	fsr1l,w,c
 13079  0162FC  0FE0               	addlw	-32
 13080  0162FE  6ED9               	movwf	fsr2l,c
 13081  016300  50E2               	movf	fsr1h,w,c
 13082  016302  6EDA               	movwf	fsr2h,c
 13083  016304  0EFF               	movlw	255
 13084  016306  22DA               	addwfc	fsr2h,f,c
 13085  016308  0EF0               	movlw	-16
 13086  01630A  50E3               	movf	plusw1,w,c
 13087  01630C  5CDE               	subwf	postinc2,w,c
 13088  01630E  0EF1               	movlw	-15
 13089  016310  50E3               	movf	plusw1,w,c
 13090  016312  58DE               	subwfb	postinc2,w,c
 13091  016314  0EF2               	movlw	-14
 13092  016316  50E3               	movf	plusw1,w,c
 13093  016318  58DE               	subwfb	postinc2,w,c
 13094  01631A  0EF3               	movlw	-13
 13095  01631C  50E3               	movf	plusw1,w,c
 13096  01631E  58DE               	subwfb	postinc2,w,c
 13097  016320  0EF4               	movlw	-12
 13098  016322  50E3               	movf	plusw1,w,c
 13099  016324  58DE               	subwfb	postinc2,w,c
 13100  016326  0EF5               	movlw	-11
 13101  016328  50E3               	movf	plusw1,w,c
 13102  01632A  58DE               	subwfb	postinc2,w,c
 13103  01632C  0EF6               	movlw	-10
 13104  01632E  50E3               	movf	plusw1,w,c
 13105  016330  58DE               	subwfb	postinc2,w,c
 13106  016332  50DE               	movf	postinc2,w,c
 13107  016334  0A80               	xorlw	128
 13108  016336  6E2A               	movwf	btemp^0,c
 13109  016338  0EF7               	movlw	-9
 13110  01633A  50E3               	movf	plusw1,w,c
 13111  01633C  0A80               	xorlw	128
 13112  01633E  582A               	subwfb	btemp^0,w,c
 13113  016340  A0D8               	btfss	status,0,c
 13114  016342  D0C1               	goto	l16698
 13115  016344  D04A               	goto	u16250
 13116  016346                     l16680:
 13117                           
 13118                           ;stkvar	_t1 @ sp[(-24)+8]
 13119                           ;stkvar	_t @ sp[(-24)+-8]
 13120  016346  50E1               	movf	fsr1l,w,c
 13121  016348  0FE0               	addlw	-32
 13122  01634A  6ED9               	movwf	fsr2l,c
 13123  01634C  50E2               	movf	fsr1h,w,c
 13124  01634E  6EDA               	movwf	fsr2h,c
 13125  016350  0EFF               	movlw	255
 13126  016352  22DA               	addwfc	fsr2h,f,c
 13127  016354  0EF0               	movlw	-16
 13128  016356  50E3               	movf	plusw1,w,c
 13129  016358  5CDE               	subwf	postinc2,w,c
 13130  01635A  0EF1               	movlw	-15
 13131  01635C  50E3               	movf	plusw1,w,c
 13132  01635E  58DE               	subwfb	postinc2,w,c
 13133  016360  0EF2               	movlw	-14
 13134  016362  50E3               	movf	plusw1,w,c
 13135  016364  58DE               	subwfb	postinc2,w,c
 13136  016366  0EF3               	movlw	-13
 13137  016368  50E3               	movf	plusw1,w,c
 13138  01636A  58DE               	subwfb	postinc2,w,c
 13139  01636C  0EF4               	movlw	-12
 13140  01636E  50E3               	movf	plusw1,w,c
 13141  016370  58DE               	subwfb	postinc2,w,c
 13142  016372  0EF5               	movlw	-11
 13143  016374  50E3               	movf	plusw1,w,c
 13144  016376  58DE               	subwfb	postinc2,w,c
 13145  016378  0EF6               	movlw	-10
 13146  01637A  50E3               	movf	plusw1,w,c
 13147  01637C  58DE               	subwfb	postinc2,w,c
 13148  01637E  50DE               	movf	postinc2,w,c
 13149  016380  0A80               	xorlw	128
 13150  016382  6E2A               	movwf	btemp^0,c
 13151  016384  0EF7               	movlw	-9
 13152  016386  50E3               	movf	plusw1,w,c
 13153  016388  0A80               	xorlw	128
 13154  01638A  582A               	subwfb	btemp^0,w,c
 13155  01638C  A0D8               	btfss	status,0,c
 13156  01638E  D09B               	goto	l16698
 13157                           
 13158                           ;stkvar	_t0 @ sp[(-24)+16]
 13159                           ;stkvar	_t @ sp[(-24)+-8]
 13160  016390  50E1               	movf	fsr1l,w,c
 13161  016392  0FE0               	addlw	-32
 13162  016394  6ED9               	movwf	fsr2l,c
 13163  016396  50E2               	movf	fsr1h,w,c
 13164  016398  6EDA               	movwf	fsr2h,c
 13165  01639A  0EFF               	movlw	255
 13166  01639C  22DA               	addwfc	fsr2h,f,c
 13167  01639E  0EF8               	movlw	-8
 13168  0163A0  50E3               	movf	plusw1,w,c
 13169  0163A2  5CDE               	subwf	postinc2,w,c
 13170  0163A4  0EF9               	movlw	-7
 13171  0163A6  50E3               	movf	plusw1,w,c
 13172  0163A8  58DE               	subwfb	postinc2,w,c
 13173  0163AA  0EFA               	movlw	-6
 13174  0163AC  50E3               	movf	plusw1,w,c
 13175  0163AE  58DE               	subwfb	postinc2,w,c
 13176  0163B0  0EFB               	movlw	-5
 13177  0163B2  50E3               	movf	plusw1,w,c
 13178  0163B4  58DE               	subwfb	postinc2,w,c
 13179  0163B6  0EFC               	movlw	-4
 13180  0163B8  50E3               	movf	plusw1,w,c
 13181  0163BA  58DE               	subwfb	postinc2,w,c
 13182  0163BC  0EFD               	movlw	-3
 13183  0163BE  50E3               	movf	plusw1,w,c
 13184  0163C0  58DE               	subwfb	postinc2,w,c
 13185  0163C2  0EFE               	movlw	-2
 13186  0163C4  50E3               	movf	plusw1,w,c
 13187  0163C6  58DE               	subwfb	postinc2,w,c
 13188  0163C8  50DE               	movf	postinc2,w,c
 13189  0163CA  0A80               	xorlw	128
 13190  0163CC  6E2A               	movwf	btemp^0,c
 13191  0163CE  0EFF               	movlw	-1
 13192  0163D0  50E3               	movf	plusw1,w,c
 13193  0163D2  0A80               	xorlw	128
 13194  0163D4  582A               	subwfb	btemp^0,w,c
 13195  0163D6  B0D8               	btfsc	status,0,c
 13196  0163D8  D076               	goto	l16698
 13197  0163DA                     u16250:
 13198                           
 13199                           ;stkvar	_isdst @ sp[(-24)+-12]
 13200  0163DA  0EDC               	movlw	-36
 13201  0163DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13202  0163E2  0EDD               	movlw	-35
 13203  0163E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13204  0163EA  0E00               	movlw	0
 13205  0163EC  6EDE               	movwf	postinc2,c
 13206  0163EE  0E00               	movlw	0
 13207  0163F0  6EDD               	movwf	postdec2,c
 13208  0163F2  0060  F1C0  F032   	movff	___timezone,btemp+8
 13209  0163F8  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13210  0163FE  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13211  016404  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13212  01640A  1E32               	comf	(btemp+8)^0,f,c
 13213  01640C  1E33               	comf	(btemp+9)^0,f,c
 13214  01640E  1E34               	comf	(btemp+10)^0,f,c
 13215  016410  1E35               	comf	(btemp+11)^0,f,c
 13216  016412  2A32               	incf	(btemp+8)^0,f,c
 13217  016414  0E00               	movlw	0
 13218  016416  2233               	addwfc	(btemp+9)^0,f,c
 13219  016418  2234               	addwfc	(btemp+10)^0,f,c
 13220  01641A  2235               	addwfc	(btemp+11)^0,f,c
 13221                           
 13222                           ;stkvar	_offset @ sp[(-24)+-14]
 13223  01641C  0EDA               	movlw	-38
 13224  01641E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13225  016424  0EDB               	movlw	-37
 13226  016426  006F FF8F FFDA     	movff	plusw1,fsr2h
 13227  01642C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13228  016432  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13229  016438  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13230  01643E  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13231                           
 13232                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13233  016444  0ED8               	movlw	-40
 13234  016446  006F FF8C  F02A    	movff	plusw1,btemp
 13235  01644C  0ED9               	movlw	-39
 13236  01644E  50E3               	movf	plusw1,w,c
 13237  016450  102A               	iorwf	btemp^0,w,c
 13238  016452  B4D8               	btfsc	status,2,c
 13239  016454  D029               	goto	l16694
 13240  016456  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13241  01645C  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13242  016462  1E34               	comf	(btemp+10)^0,f,c
 13243  016464  1E35               	comf	(btemp+11)^0,f,c
 13244  016466  4A34               	infsnz	(btemp+10)^0,f,c
 13245  016468  2A35               	incf	(btemp+11)^0,f,c
 13246  01646A  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13247  016470  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13248  016476  0E00               	movlw	0
 13249  016478  BE2F               	btfsc	(btemp+5)^0,7,c
 13250  01647A  0EFF               	movlw	255
 13251  01647C  6E30               	movwf	(btemp+6)^0,c
 13252  01647E  6E31               	movwf	(btemp+7)^0,c
 13253                           
 13254                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13255  016480  0ED8               	movlw	-40
 13256  016482  006F FF8F FFD9     	movff	plusw1,fsr2l
 13257  016488  0ED9               	movlw	-39
 13258  01648A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13259  016490  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13260  016496  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13261  01649C  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13262  0164A2  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13263  0164A8                     l16694:
 13264                           
 13265                           ;stkvar	_zonename @ sp[(-24)+-18]
 13266  0164A8  0ED6               	movlw	-42
 13267  0164AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13268  0164B0  0ED7               	movlw	-41
 13269  0164B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13270  0164B8  0060  F1B3  FFDE   	movff	___tzname,postinc2
 13271  0164BE  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 13272  0164C4  D075               	goto	l4029
 13273  0164C6                     l16698:
 13274                           
 13275                           ;stkvar	_isdst @ sp[(-24)+-12]
 13276  0164C6  0EDC               	movlw	-36
 13277  0164C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13278  0164CE  0EDD               	movlw	-35
 13279  0164D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13280  0164D6  0E01               	movlw	1
 13281  0164D8  6EDE               	movwf	postinc2,c
 13282  0164DA  0E00               	movlw	0
 13283  0164DC  6EDD               	movwf	postdec2,c
 13284  0164DE  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13285  0164E4  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13286  0164EA  1E34               	comf	(btemp+10)^0,f,c
 13287  0164EC  1E35               	comf	(btemp+11)^0,f,c
 13288  0164EE  4A34               	infsnz	(btemp+10)^0,f,c
 13289  0164F0  2A35               	incf	(btemp+11)^0,f,c
 13290  0164F2  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13291  0164F8  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13292  0164FE  0E00               	movlw	0
 13293  016500  BE2F               	btfsc	(btemp+5)^0,7,c
 13294  016502  0EFF               	movlw	255
 13295  016504  6E30               	movwf	(btemp+6)^0,c
 13296  016506  6E31               	movwf	(btemp+7)^0,c
 13297                           
 13298                           ;stkvar	_offset @ sp[(-24)+-14]
 13299  016508  0EDA               	movlw	-38
 13300  01650A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13301  016510  0EDB               	movlw	-37
 13302  016512  006F FF8F FFDA     	movff	plusw1,fsr2h
 13303  016518  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13304  01651E  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13305  016524  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13306  01652A  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13307                           
 13308                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13309  016530  0ED8               	movlw	-40
 13310  016532  006F FF8C  F02A    	movff	plusw1,btemp
 13311  016538  0ED9               	movlw	-39
 13312  01653A  50E3               	movf	plusw1,w,c
 13313  01653C  102A               	iorwf	btemp^0,w,c
 13314  01653E  B4D8               	btfsc	status,2,c
 13315  016540  D029               	goto	l16706
 13316  016542  0060  F1C0  F032   	movff	___timezone,btemp+8
 13317  016548  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13318  01654E  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13319  016554  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13320  01655A  1E32               	comf	(btemp+8)^0,f,c
 13321  01655C  1E33               	comf	(btemp+9)^0,f,c
 13322  01655E  1E34               	comf	(btemp+10)^0,f,c
 13323  016560  1E35               	comf	(btemp+11)^0,f,c
 13324  016562  2A32               	incf	(btemp+8)^0,f,c
 13325  016564  0E00               	movlw	0
 13326  016566  2233               	addwfc	(btemp+9)^0,f,c
 13327  016568  2234               	addwfc	(btemp+10)^0,f,c
 13328  01656A  2235               	addwfc	(btemp+11)^0,f,c
 13329                           
 13330                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13331  01656C  0ED8               	movlw	-40
 13332  01656E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13333  016574  0ED9               	movlw	-39
 13334  016576  006F FF8F FFDA     	movff	plusw1,fsr2h
 13335  01657C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13336  016582  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13337  016588  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13338  01658E  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13339  016594                     l16706:
 13340                           
 13341                           ;stkvar	_zonename @ sp[(-24)+-18]
 13342  016594  0ED6               	movlw	-42
 13343  016596  006F FF8F FFD9     	movff	plusw1,fsr2l
 13344  01659C  0ED7               	movlw	-41
 13345  01659E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13346  0165A4  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 13347  0165AA  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 13348  0165B0                     l4029:
 13349                           
 13350                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 13351  0165B0  0ED6               	movlw	214
 13352  0165B2  26E1               	addwf	fsr1l,f,c
 13353  0165B4  0EFF               	movlw	255
 13354  0165B6  22E2               	addwfc	fsr1h,f,c
 13355  0165B8  0012               	return		;funcret
 13356  0165BA                     __end_of___secs_to_zone:
 13357                           	opt callstack 0
 13358                           
 13359 ;; *************** function _scan_trans *****************
 13360 ;; Defined at:
 13361 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13362 ;; Parameters:    Size  Location     Type
 13363 ;;  t               8  [STACK] long long 
 13364 ;;  local           2  [STACK] int 
 13365 ;;  alt             2  [STACK] PTR unsigned int 
 13366 ;;		 -> alt(2), 
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;  x               8    0        unsigned long long 
 13369 ;;  a               2    0        unsigned int 
 13370 ;;  scale           2    0        int 
 13371 ;;  n               2    0        unsigned int 
 13372 ;;  m               2    0        unsigned int 
 13373 ;;  off             2    0        int 
 13374 ;; Return value:  Size  Location     Type
 13375 ;;                  2  [STACK] unsigned int 
 13376 ;; Registers used:
 13377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13378 ;; Tracked objects:
 13379 ;;		On entry : 0/0
 13380 ;;		On exit  : 0/0
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13387 ;;Total ram usage:        0 bytes
 13388 ;; Hardware stack levels used:    1
 13389 ;; Hardware stack levels required when called:   16
 13390 ;; This function calls:
 13391 ;;		_zi_read32
 13392 ;; This function is called by:
 13393 ;;		___secs_to_zone
 13394 ;; This function uses a reentrant model
 13395 ;;
 13396                           
 13397                           	psect	text39
 13398  001FEE                     __ptext39:
 13399                           	opt callstack 0
 13400  001FEE                     _scan_trans:
 13401                           	opt callstack 11
 13402                           
 13403                           ;stkvar	_alt @ sp[(0)+-12]
 13404                           
 13405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13406                           ;incstack = 0
 13407  001FEE  0EF4               	movlw	-12
 13408  001FF0  006F FF8C  F02A    	movff	plusw1,btemp
 13409  001FF6  0EF5               	movlw	-11
 13410  001FF8  50E3               	movf	plusw1,w,c
 13411  001FFA  102A               	iorwf	btemp^0,w,c
 13412  001FFC  B4D8               	btfsc	status,2,c
 13413  001FFE  D00C               	goto	l16434
 13414                           
 13415                           ;stkvar	_alt @ sp[(0)+-12]
 13416  002000  0EF4               	movlw	-12
 13417  002002  006F FF8F FFD9     	movff	plusw1,fsr2l
 13418  002008  0EF5               	movlw	-11
 13419  00200A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13420  002010  0E00               	movlw	0
 13421  002012  6EDE               	movwf	postinc2,c
 13422  002014  0E00               	movlw	0
 13423  002016  6EDD               	movwf	postdec2,c
 13424  002018                     l16434:
 13425  002018  0E00               	movlw	0
 13426  00201A  6E2A               	movwf	btemp^0,c
 13427  00201C  0E00               	movlw	0
 13428  00201E  6E2B               	movwf	(btemp+1)^0,c
 13429                           
 13430                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13431  002020  0EF4               	movlw	244
 13432  002022  26E1               	addwf	fsr1l,f,c
 13433  002024  0EFF               	movlw	255
 13434  002026  22E2               	addwfc	fsr1h,f,c
 13435  002028  0012               	return		;funcret
 13436  00202A                     __end_of_scan_trans:
 13437                           	opt callstack 0
 13438                           
 13439 ;; *************** function _zi_read32 *****************
 13440 ;; Defined at:
 13441 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13442 ;; Parameters:    Size  Location     Type
 13443 ;;  z               2  [STACK] PTR const unsigned char 
 13444 ;;		 -> NULL(0), 
 13445 ;; Auto vars:     Size  Location     Type
 13446 ;;		None
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  4  [STACK] unsigned long 
 13449 ;; Registers used:
 13450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/0
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13460 ;;Total ram usage:        0 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; Hardware stack levels required when called:   15
 13463 ;; This function calls:
 13464 ;;		Nothing
 13465 ;; This function is called by:
 13466 ;;		_scan_trans
 13467 ;;		___secs_to_zone
 13468 ;; This function uses a reentrant model
 13469 ;;
 13470                           
 13471                           	psect	text40
 13472  01FCA0                     __ptext40:
 13473                           	opt callstack 0
 13474  01FCA0                     _zi_read32:
 13475                           	opt callstack 12
 13476                           
 13477                           ;stkvar	_z @ sp[(0)+-2]
 13478                           
 13479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13480                           ;incstack = 0
 13481  01FCA0  0EFE               	movlw	-2
 13482  01FCA2  006F FF8C  F034    	movff	plusw1,btemp+10
 13483  01FCA8  0EFF               	movlw	-1
 13484  01FCAA  006F FF8C  F035    	movff	plusw1,btemp+11
 13485  01FCB0  0E02               	movlw	2
 13486  01FCB2  2434               	addwf	(btemp+10)^0,w,c
 13487  01FCB4  6ED9               	movwf	fsr2l,c
 13488  01FCB6  0E00               	movlw	0
 13489  01FCB8  2035               	addwfc	(btemp+11)^0,w,c
 13490  01FCBA  6EDA               	movwf	fsr2h,c
 13491  01FCBC  50DF               	movf	indf2,w,c
 13492  01FCBE  6E35               	movwf	(btemp+11)^0,c
 13493  01FCC0  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13494  01FCC6  6A2F               	clrf	(btemp+5)^0,c
 13495  01FCC8  6A30               	clrf	(btemp+6)^0,c
 13496  01FCCA  6A31               	clrf	(btemp+7)^0,c
 13497  01FCCC  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13498  01FCD2  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13499  01FCD8  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13500  01FCDE  6A2E               	clrf	(btemp+4)^0,c
 13501                           
 13502                           ;stkvar	_z @ sp[(0)+-2]
 13503  01FCE0  0EFE               	movlw	-2
 13504  01FCE2  006F FF8C  F034    	movff	plusw1,btemp+10
 13505  01FCE8  0EFF               	movlw	-1
 13506  01FCEA  006F FF8C  F035    	movff	plusw1,btemp+11
 13507  01FCF0  0E01               	movlw	1
 13508  01FCF2  2434               	addwf	(btemp+10)^0,w,c
 13509  01FCF4  6ED9               	movwf	fsr2l,c
 13510  01FCF6  0E00               	movlw	0
 13511  01FCF8  2035               	addwfc	(btemp+11)^0,w,c
 13512  01FCFA  6EDA               	movwf	fsr2h,c
 13513  01FCFC  50DF               	movf	indf2,w,c
 13514  01FCFE  6E35               	movwf	(btemp+11)^0,c
 13515  01FD00  0060  F0D4  F02A   	movff	btemp+11,btemp
 13516  01FD06  6A2B               	clrf	(btemp+1)^0,c
 13517  01FD08  6A2C               	clrf	(btemp+2)^0,c
 13518  01FD0A  6A2D               	clrf	(btemp+3)^0,c
 13519  01FD0C  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13520  01FD12  0060  F0A8  F02C   	movff	btemp,btemp+2
 13521  01FD18  6A2B               	clrf	(btemp+1)^0,c
 13522  01FD1A  6A2A               	clrf	btemp^0,c
 13523                           
 13524                           ;stkvar	_z @ sp[(0)+-2]
 13525  01FD1C  0EFE               	movlw	-2
 13526  01FD1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13527  01FD24  0EFF               	movlw	-1
 13528  01FD26  006F FF8F FFDA     	movff	plusw1,fsr2h
 13529  01FD2C  50DF               	movf	indf2,w,c
 13530  01FD2E  6E32               	movwf	(btemp+8)^0,c
 13531  01FD30  6A33               	clrf	(btemp+9)^0,c
 13532  01FD32  6A34               	clrf	(btemp+10)^0,c
 13533  01FD34  6A35               	clrf	(btemp+11)^0,c
 13534  01FD36  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13535  01FD3C  6A34               	clrf	(btemp+10)^0,c
 13536  01FD3E  6A33               	clrf	(btemp+9)^0,c
 13537  01FD40  6A32               	clrf	(btemp+8)^0,c
 13538  01FD42  502A               	movf	btemp^0,w,c
 13539  01FD44  1232               	iorwf	(btemp+8)^0,f,c
 13540  01FD46  502B               	movf	(btemp+1)^0,w,c
 13541  01FD48  1233               	iorwf	(btemp+9)^0,f,c
 13542  01FD4A  502C               	movf	(btemp+2)^0,w,c
 13543  01FD4C  1234               	iorwf	(btemp+10)^0,f,c
 13544  01FD4E  502D               	movf	(btemp+3)^0,w,c
 13545  01FD50  1235               	iorwf	(btemp+11)^0,f,c
 13546  01FD52  502E               	movf	(btemp+4)^0,w,c
 13547  01FD54  1232               	iorwf	(btemp+8)^0,f,c
 13548  01FD56  502F               	movf	(btemp+5)^0,w,c
 13549  01FD58  1233               	iorwf	(btemp+9)^0,f,c
 13550  01FD5A  5030               	movf	(btemp+6)^0,w,c
 13551  01FD5C  1234               	iorwf	(btemp+10)^0,f,c
 13552  01FD5E  5031               	movf	(btemp+7)^0,w,c
 13553  01FD60  1235               	iorwf	(btemp+11)^0,f,c
 13554                           
 13555                           ;stkvar	_z @ sp[(0)+-2]
 13556  01FD62  0EFE               	movlw	-2
 13557  01FD64  006F FF8C  F030    	movff	plusw1,btemp+6
 13558  01FD6A  0EFF               	movlw	-1
 13559  01FD6C  006F FF8C  F031    	movff	plusw1,btemp+7
 13560  01FD72  0E03               	movlw	3
 13561  01FD74  2430               	addwf	(btemp+6)^0,w,c
 13562  01FD76  6ED9               	movwf	fsr2l,c
 13563  01FD78  0E00               	movlw	0
 13564  01FD7A  2031               	addwfc	(btemp+7)^0,w,c
 13565  01FD7C  6EDA               	movwf	fsr2h,c
 13566  01FD7E  50DF               	movf	indf2,w,c
 13567  01FD80  1032               	iorwf	(btemp+8)^0,w,c
 13568  01FD82  6E2A               	movwf	btemp^0,c
 13569  01FD84  5033               	movf	(btemp+9)^0,w,c
 13570  01FD86  6E2B               	movwf	(btemp+1)^0,c
 13571  01FD88  5034               	movf	(btemp+10)^0,w,c
 13572  01FD8A  6E2C               	movwf	(btemp+2)^0,c
 13573  01FD8C  5035               	movf	(btemp+11)^0,w,c
 13574  01FD8E  6E2D               	movwf	(btemp+3)^0,c
 13575                           
 13576                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13577  01FD90  52E5               	movf	postdec1,f,c
 13578  01FD92  52E5               	movf	postdec1,f,c
 13579  01FD94  0012               	return		;funcret
 13580  01FD96                     __end_of_zi_read32:
 13581                           	opt callstack 0
 13582                           
 13583 ;; *************** function _rule_to_secs *****************
 13584 ;; Defined at:
 13585 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;  rule            2  [STACK] PTR const int 
 13588 ;;		 -> r1(10), r0(10), 
 13589 ;;  year            2  [STACK] int 
 13590 ;; Auto vars:     Size  Location     Type
 13591 ;;  days            2  [STACK] int 
 13592 ;;  wday            2  [STACK] int 
 13593 ;;  t               8  [STACK] long long 
 13594 ;;  is_leap         2  [STACK] int 
 13595 ;;  n               2  [STACK] int 
 13596 ;;  x               2  [STACK] int 
 13597 ;;  m               2  [STACK] int 
 13598 ;;  d               2  [STACK] int 
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  8  [STACK] long long 
 13601 ;; Registers used:
 13602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13603 ;; Tracked objects:
 13604 ;;		On entry : 0/0
 13605 ;;		On exit  : 0/0
 13606 ;;		Unchanged: 0/0
 13607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13612 ;;Total ram usage:        0 bytes
 13613 ;; Hardware stack levels used:    1
 13614 ;; Hardware stack levels required when called:   17
 13615 ;; This function calls:
 13616 ;;		___aldiv
 13617 ;;		___aomod
 13618 ;;		___lmul
 13619 ;;		___month_to_secs
 13620 ;;		___year_to_secs
 13621 ;;		_days_in_month
 13622 ;; This function is called by:
 13623 ;;		___secs_to_zone
 13624 ;; This function uses a reentrant model
 13625 ;;
 13626                           
 13627                           	psect	text41
 13628  0175A0                     __ptext41:
 13629                           	opt callstack 0
 13630  0175A0                     _rule_to_secs:
 13631                           	opt callstack 0
 13632                           
 13633                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13634  0175A0  0E1A               	movlw	26
 13635  0175A2  26E1               	addwf	fsr1l,f,c
 13636  0175A4  0E00               	movlw	0
 13637  0175A6  22E2               	addwfc	fsr1h,f,c
 13638                           
 13639                           ;stkvar	_is_leap @ sp[(-22)+12]
 13640                           
 13641                           ;incstack = 0
 13642  0175A8  0EF6               	movlw	246
 13643  0175AA  24E1               	addwf	fsr1l,w,c
 13644  0175AC  6E2A               	movwf	btemp^0,c
 13645  0175AE  0EFF               	movlw	255
 13646  0175B0  20E2               	addwfc	fsr1h,w,c
 13647  0175B2  6E2B               	movwf	(btemp+1)^0,c
 13648  0175B4  0060  F0AB  FFE6   	movff	btemp,postinc1
 13649  0175BA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13650                           
 13651                           ;stkvar	_year @ sp[(-24)+-8]
 13652  0175C0  0EE0               	movlw	-32
 13653  0175C2  006F FF8C  F03A    	movff	plusw1,btemp+16
 13654  0175C8  0EE1               	movlw	-31
 13655  0175CA  006F FF8C  F03B    	movff	plusw1,btemp+17
 13656  0175D0  6A3C               	clrf	(btemp+18)^0,c
 13657  0175D2  BE3B               	btfsc	(btemp+17)^0,7,c
 13658  0175D4  683C               	setf	(btemp+18)^0,c
 13659  0175D6  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13660  0175DC  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13661  0175E2  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13662  0175E8  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13663  0175EE  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13664  0175F4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13665  0175FA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13666  017600  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13667  017606  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13668  01760C  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13669  017612  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13670  017618  0060  F103  FFE6   	movff	btemp+22,postinc1
 13671  01761E  0060  F107  FFE6   	movff	btemp+23,postinc1
 13672  017624  ECD3  F0A9         	call	___year_to_secs	;wreg free
 13673  017628  52E5               	movf	postdec1,f,c
 13674  01762A  006F FF9C  F041    	movff	indf1,btemp+23
 13675  017630  52E5               	movf	postdec1,f,c
 13676  017632  006F FF9C  F040    	movff	indf1,btemp+22
 13677  017638  52E5               	movf	postdec1,f,c
 13678  01763A  006F FF9C  F03F    	movff	indf1,btemp+21
 13679  017640  52E5               	movf	postdec1,f,c
 13680  017642  006F FF9C  F03E    	movff	indf1,btemp+20
 13681  017648  52E5               	movf	postdec1,f,c
 13682  01764A  006F FF9C  F03D    	movff	indf1,btemp+19
 13683  017650  52E5               	movf	postdec1,f,c
 13684  017652  006F FF9C  F03C    	movff	indf1,btemp+18
 13685  017658  52E5               	movf	postdec1,f,c
 13686  01765A  006F FF9C  F03B    	movff	indf1,btemp+17
 13687  017660  52E5               	movf	postdec1,f,c
 13688  017662  006F FF9C  F03A    	movff	indf1,btemp+16
 13689  017668  52E5               	movf	postdec1,f,c
 13690  01766A  52E5               	movf	postdec1,f,c
 13691                           
 13692                           ;stkvar	_t @ sp[(-22)+4]
 13693  01766C  0EEE               	movlw	-18
 13694  01766E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13695  017674  0EEF               	movlw	-17
 13696  017676  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13697  01767C  0EF0               	movlw	-16
 13698  01767E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13699  017684  0EF1               	movlw	-15
 13700  017686  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13701  01768C  0EF2               	movlw	-14
 13702  01768E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13703  017694  0EF3               	movlw	-13
 13704  017696  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13705  01769C  0EF4               	movlw	-12
 13706  01769E  0060  F103  FFE3   	movff	btemp+22,plusw1
 13707  0176A4  0EF5               	movlw	-11
 13708  0176A6  0060  F107  FFE3   	movff	btemp+23,plusw1
 13709                           
 13710                           ;stkvar	_rule @ sp[(-22)+-6]
 13711  0176AC  0EE4               	movlw	-28
 13712  0176AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13713  0176B4  0EE5               	movlw	-27
 13714  0176B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13715  0176BC  0E4D               	movlw	77
 13716  0176BE  18DE               	xorwf	postinc2,w,c
 13717  0176C0  10DE               	iorwf	postinc2,w,c
 13718  0176C2  B4D8               	btfsc	status,2,c
 13719  0176C4  D074               	goto	l16550
 13720                           
 13721                           ;stkvar	_rule @ sp[(-22)+-6]
 13722  0176C6  0EE4               	movlw	-28
 13723  0176C8  006F FF8C  F034    	movff	plusw1,btemp+10
 13724  0176CE  0EE5               	movlw	-27
 13725  0176D0  006F FF8C  F035    	movff	plusw1,btemp+11
 13726  0176D6  0E02               	movlw	2
 13727  0176D8  2434               	addwf	(btemp+10)^0,w,c
 13728  0176DA  6ED9               	movwf	fsr2l,c
 13729  0176DC  0E00               	movlw	0
 13730  0176DE  2035               	addwfc	(btemp+11)^0,w,c
 13731  0176E0  6EDA               	movwf	fsr2h,c
 13732  0176E2  006F FF78  F034    	movff	postinc2,btemp+10
 13733  0176E8  006F FF74  F035    	movff	postdec2,btemp+11
 13734                           
 13735                           ;stkvar	_x @ sp[(-22)+16]
 13736  0176EE  0EFA               	movlw	-6
 13737  0176F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13738  0176F6  0EFB               	movlw	-5
 13739  0176F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13740                           
 13741                           ;stkvar	_rule @ sp[(-22)+-6]
 13742  0176FE  0EE4               	movlw	-28
 13743  017700  006F FF8F FFD9     	movff	plusw1,fsr2l
 13744  017706  0EE5               	movlw	-27
 13745  017708  006F FF8F FFDA     	movff	plusw1,fsr2h
 13746  01770E  0E4A               	movlw	74
 13747  017710  18DE               	xorwf	postinc2,w,c
 13748  017712  10DE               	iorwf	postinc2,w,c
 13749  017714  A4D8               	btfss	status,2,c
 13750  017716  D021               	goto	l16548
 13751                           
 13752                           ;stkvar	_x @ sp[(-22)+16]
 13753  017718  0EFB               	movlw	-5
 13754  01771A  BEE3               	btfsc	plusw1,7,c
 13755  01771C  D014               	goto	u16080
 13756  01771E  0EFB               	movlw	-5
 13757  017720  50E3               	movf	plusw1,w,c
 13758  017722  E108               	bnz	u16070
 13759  017724  0EFA               	movlw	-6
 13760  017726  006F FF8C  F02A    	movff	plusw1,btemp
 13761  01772C  0E3C               	movlw	60
 13762  01772E  5E2A               	subwf	btemp^0,f,c
 13763  017730  A0D8               	btfss	status,0,c
 13764  017732  D009               	goto	u16080
 13765  017734                     u16070:
 13766                           
 13767                           ;stkvar	_is_leap @ sp[(-22)+12]
 13768  017734  0EF6               	movlw	-10
 13769  017736  006F FF8C  F02A    	movff	plusw1,btemp
 13770  01773C  0EF7               	movlw	-9
 13771  01773E  50E3               	movf	plusw1,w,c
 13772  017740  102A               	iorwf	btemp^0,w,c
 13773  017742  A4D8               	btfss	status,2,c
 13774  017744  D00A               	goto	l16548
 13775  017746                     u16080:
 13776                           
 13777                           ;stkvar	_x @ sp[(-22)+16]
 13778  017746  50E1               	movf	fsr1l,w,c
 13779  017748  0FFA               	addlw	-6
 13780  01774A  6ED9               	movwf	fsr2l,c
 13781  01774C  50E2               	movf	fsr1h,w,c
 13782  01774E  6EDA               	movwf	fsr2h,c
 13783  017750  0EFF               	movlw	255
 13784  017752  22DA               	addwfc	fsr2h,f,c
 13785  017754  06DE               	decf	postinc2,f,c
 13786  017756  0E00               	movlw	0
 13787  017758  5ADD               	subwfb	postdec2,f,c
 13788  01775A                     l16548:
 13789  01775A  0E80               	movlw	128
 13790  01775C  6EE6               	movwf	postinc1,c
 13791  01775E  0E51               	movlw	81
 13792  017760  6EE6               	movwf	postinc1,c
 13793  017762  0E01               	movlw	1
 13794  017764  6EE6               	movwf	postinc1,c
 13795  017766  0E00               	movlw	0
 13796  017768  6EE6               	movwf	postinc1,c
 13797                           
 13798                           ;stkvar	_x @ sp[(-26)+16]
 13799  01776A  0EF6               	movlw	-10
 13800  01776C  006F FF8C  F034    	movff	plusw1,btemp+10
 13801  017772  0EF7               	movlw	-9
 13802  017774  006F FF8C  F035    	movff	plusw1,btemp+11
 13803  01777A  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13804  017780  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13805  017786  0E00               	movlw	0
 13806  017788  BE2F               	btfsc	(btemp+5)^0,7,c
 13807  01778A  0EFF               	movlw	255
 13808  01778C  6E30               	movwf	(btemp+6)^0,c
 13809  01778E  6E31               	movwf	(btemp+7)^0,c
 13810  017790  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13811  017796  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13812  01779C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13813  0177A2  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13814  0177A8  EC46  F001         	call	___lmul	;wreg free
 13815  0177AC  D1EC               	goto	L10
 13816  0177AE                     l16550:
 13817                           
 13818                           ;stkvar	_rule @ sp[(-22)+-6]
 13819  0177AE  0EE4               	movlw	-28
 13820  0177B0  006F FF8C  F034    	movff	plusw1,btemp+10
 13821  0177B6  0EE5               	movlw	-27
 13822  0177B8  006F FF8C  F035    	movff	plusw1,btemp+11
 13823  0177BE  0E02               	movlw	2
 13824  0177C0  2434               	addwf	(btemp+10)^0,w,c
 13825  0177C2  6ED9               	movwf	fsr2l,c
 13826  0177C4  0E00               	movlw	0
 13827  0177C6  2035               	addwfc	(btemp+11)^0,w,c
 13828  0177C8  6EDA               	movwf	fsr2h,c
 13829  0177CA  006F FF78  F034    	movff	postinc2,btemp+10
 13830  0177D0  006F FF74  F035    	movff	postdec2,btemp+11
 13831                           
 13832                           ;stkvar	_m @ sp[(-22)+18]
 13833  0177D6  0EFC               	movlw	-4
 13834  0177D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13835  0177DE  0EFD               	movlw	-3
 13836  0177E0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13837                           
 13838                           ;stkvar	_rule @ sp[(-22)+-6]
 13839  0177E6  0EE4               	movlw	-28
 13840  0177E8  006F FF8C  F034    	movff	plusw1,btemp+10
 13841  0177EE  0EE5               	movlw	-27
 13842  0177F0  006F FF8C  F035    	movff	plusw1,btemp+11
 13843  0177F6  0E04               	movlw	4
 13844  0177F8  2434               	addwf	(btemp+10)^0,w,c
 13845  0177FA  6ED9               	movwf	fsr2l,c
 13846  0177FC  0E00               	movlw	0
 13847  0177FE  2035               	addwfc	(btemp+11)^0,w,c
 13848  017800  6EDA               	movwf	fsr2h,c
 13849  017802  006F FF78  F034    	movff	postinc2,btemp+10
 13850  017808  006F FF74  F035    	movff	postdec2,btemp+11
 13851                           
 13852                           ;stkvar	_n @ sp[(-22)+14]
 13853  01780E  0EF8               	movlw	-8
 13854  017810  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13855  017816  0EF9               	movlw	-7
 13856  017818  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13857                           
 13858                           ;stkvar	_rule @ sp[(-22)+-6]
 13859  01781E  0EE4               	movlw	-28
 13860  017820  006F FF8C  F034    	movff	plusw1,btemp+10
 13861  017826  0EE5               	movlw	-27
 13862  017828  006F FF8C  F035    	movff	plusw1,btemp+11
 13863  01782E  0E06               	movlw	6
 13864  017830  2434               	addwf	(btemp+10)^0,w,c
 13865  017832  6ED9               	movwf	fsr2l,c
 13866  017834  0E00               	movlw	0
 13867  017836  2035               	addwfc	(btemp+11)^0,w,c
 13868  017838  6EDA               	movwf	fsr2h,c
 13869  01783A  006F FF78  F034    	movff	postinc2,btemp+10
 13870  017840  006F FF74  F035    	movff	postdec2,btemp+11
 13871                           
 13872                           ;stkvar	_d @ sp[(-22)+20]
 13873  017846  0EFE               	movlw	-2
 13874  017848  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13875  01784E  0EFF               	movlw	-1
 13876  017850  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13877                           
 13878                           ;stkvar	_is_leap @ sp[(-22)+12]
 13879  017856  0EF6               	movlw	-10
 13880  017858  006F FF8F FFE6     	movff	plusw1,postinc1
 13881  01785E  006F FF8F FFE6     	movff	plusw1,postinc1
 13882                           
 13883                           ;stkvar	_m @ sp[(-24)+18]
 13884  017864  0EFA               	movlw	-6
 13885  017866  50E3               	movf	plusw1,w,c
 13886  017868  0FFF               	addlw	255
 13887  01786A  6E34               	movwf	(btemp+10)^0,c
 13888  01786C  0EFB               	movlw	-5
 13889  01786E  006F FF8C  F035    	movff	plusw1,btemp+11
 13890  017874  0EFF               	movlw	255
 13891  017876  2235               	addwfc	(btemp+11)^0,f,c
 13892  017878  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13893  01787E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13894  017884  EC5B  F000         	call	___month_to_secs	;wreg free
 13895  017888  0060  F0A8  F03A   	movff	btemp,btemp+16
 13896  01788E  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13897  017894  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13898  01789A  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13899  0178A0  6A3E               	clrf	(btemp+20)^0,c
 13900  0178A2  BE3D               	btfsc	(btemp+19)^0,7,c
 13901  0178A4  683E               	setf	(btemp+20)^0,c
 13902  0178A6  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13903  0178AC  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13904  0178B2  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13905                           
 13906                           ;stkvar	_t @ sp[(-22)+4]
 13907  0178B8  50E1               	movf	fsr1l,w,c
 13908  0178BA  0FEE               	addlw	-18
 13909  0178BC  6ED9               	movwf	fsr2l,c
 13910  0178BE  50E2               	movf	fsr1h,w,c
 13911  0178C0  6EDA               	movwf	fsr2h,c
 13912  0178C2  0EFF               	movlw	255
 13913  0178C4  22DA               	addwfc	fsr2h,f,c
 13914  0178C6  503A               	movf	(btemp+16)^0,w,c
 13915  0178C8  26DE               	addwf	postinc2,f,c
 13916  0178CA  503B               	movf	(btemp+17)^0,w,c
 13917  0178CC  22DE               	addwfc	postinc2,f,c
 13918  0178CE  503C               	movf	(btemp+18)^0,w,c
 13919  0178D0  22DE               	addwfc	postinc2,f,c
 13920  0178D2  503D               	movf	(btemp+19)^0,w,c
 13921  0178D4  22DE               	addwfc	postinc2,f,c
 13922  0178D6  503E               	movf	(btemp+20)^0,w,c
 13923  0178D8  22DE               	addwfc	postinc2,f,c
 13924  0178DA  503F               	movf	(btemp+21)^0,w,c
 13925  0178DC  22DE               	addwfc	postinc2,f,c
 13926  0178DE  5040               	movf	(btemp+22)^0,w,c
 13927  0178E0  22DE               	addwfc	postinc2,f,c
 13928  0178E2  5041               	movf	(btemp+23)^0,w,c
 13929  0178E4  22DE               	addwfc	postinc2,f,c
 13930  0178E6  0E80               	movlw	128
 13931  0178E8  6EE6               	movwf	postinc1,c
 13932  0178EA  0E51               	movlw	81
 13933  0178EC  6EE6               	movwf	postinc1,c
 13934  0178EE  0E01               	movlw	1
 13935  0178F0  6EE6               	movwf	postinc1,c
 13936  0178F2  0E00               	movlw	0
 13937  0178F4  6EE6               	movwf	postinc1,c
 13938  0178F6  0E80               	movlw	128
 13939  0178F8  6EE6               	movwf	postinc1,c
 13940  0178FA  0E3A               	movlw	58
 13941  0178FC  6EE6               	movwf	postinc1,c
 13942  0178FE  0E09               	movlw	9
 13943  017900  6EE6               	movwf	postinc1,c
 13944  017902  0E00               	movlw	0
 13945  017904  6EE6               	movwf	postinc1,c
 13946  017906  0E00               	movlw	0
 13947  017908  6EE6               	movwf	postinc1,c
 13948  01790A  0E00               	movlw	0
 13949  01790C  6EE6               	movwf	postinc1,c
 13950  01790E  0E00               	movlw	0
 13951  017910  6EE6               	movwf	postinc1,c
 13952  017912  0E00               	movlw	0
 13953  017914  6EE6               	movwf	postinc1,c
 13954                           
 13955                           ;stkvar	_t @ sp[(-34)+4]
 13956  017916  0EE2               	movlw	-30
 13957  017918  50E3               	movf	plusw1,w,c
 13958  01791A  0F00               	addlw	0
 13959  01791C  6E3A               	movwf	(btemp+16)^0,c
 13960  01791E  0EE3               	movlw	-29
 13961  017920  006F FF8C  F03B    	movff	plusw1,btemp+17
 13962  017926  0E46               	movlw	70
 13963  017928  223B               	addwfc	(btemp+17)^0,f,c
 13964  01792A  0EE4               	movlw	-28
 13965  01792C  006F FF8C  F03C    	movff	plusw1,btemp+18
 13966  017932  0E05               	movlw	5
 13967  017934  223C               	addwfc	(btemp+18)^0,f,c
 13968  017936  0EE5               	movlw	-27
 13969  017938  006F FF8C  F03D    	movff	plusw1,btemp+19
 13970  01793E  0E00               	movlw	0
 13971  017940  223D               	addwfc	(btemp+19)^0,f,c
 13972  017942  0EE6               	movlw	-26
 13973  017944  006F FF8C  F03E    	movff	plusw1,btemp+20
 13974  01794A  0E00               	movlw	0
 13975  01794C  223E               	addwfc	(btemp+20)^0,f,c
 13976  01794E  0EE7               	movlw	-25
 13977  017950  006F FF8C  F03F    	movff	plusw1,btemp+21
 13978  017956  0E00               	movlw	0
 13979  017958  223F               	addwfc	(btemp+21)^0,f,c
 13980  01795A  0EE8               	movlw	-24
 13981  01795C  006F FF8C  F040    	movff	plusw1,btemp+22
 13982  017962  0E00               	movlw	0
 13983  017964  2240               	addwfc	(btemp+22)^0,f,c
 13984  017966  0EE9               	movlw	-23
 13985  017968  006F FF8C  F041    	movff	plusw1,btemp+23
 13986  01796E  0E00               	movlw	0
 13987  017970  2241               	addwfc	(btemp+23)^0,f,c
 13988  017972  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13989  017978  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13990  01797E  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13991  017984  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13992  01798A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13993  017990  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13994  017996  0060  F103  FFE6   	movff	btemp+22,postinc1
 13995  01799C  0060  F107  FFE6   	movff	btemp+23,postinc1
 13996  0179A2  ECA6  F0E5         	call	___aomod	;wreg free
 13997  0179A6  52E5               	movf	postdec1,f,c
 13998  0179A8  006F FF9C  F041    	movff	indf1,btemp+23
 13999  0179AE  52E5               	movf	postdec1,f,c
 14000  0179B0  006F FF9C  F040    	movff	indf1,btemp+22
 14001  0179B6  52E5               	movf	postdec1,f,c
 14002  0179B8  006F FF9C  F03F    	movff	indf1,btemp+21
 14003  0179BE  52E5               	movf	postdec1,f,c
 14004  0179C0  006F FF9C  F03E    	movff	indf1,btemp+20
 14005  0179C6  52E5               	movf	postdec1,f,c
 14006  0179C8  006F FF9C  F03D    	movff	indf1,btemp+19
 14007  0179CE  52E5               	movf	postdec1,f,c
 14008  0179D0  006F FF9C  F03C    	movff	indf1,btemp+18
 14009  0179D6  52E5               	movf	postdec1,f,c
 14010  0179D8  006F FF9C  F03B    	movff	indf1,btemp+17
 14011  0179DE  52E5               	movf	postdec1,f,c
 14012  0179E0  006F FF9C  F03A    	movff	indf1,btemp+16
 14013  0179E6  0EF8               	movlw	248
 14014  0179E8  26E1               	addwf	fsr1l,f,c
 14015  0179EA  0EFF               	movlw	255
 14016  0179EC  22E2               	addwfc	fsr1h,f,c
 14017  0179EE  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14018  0179F4  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14019  0179FA  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14020  017A00  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14021  017A06  0E00               	movlw	0
 14022  017A08  BE2F               	btfsc	(btemp+5)^0,7,c
 14023  017A0A  0EFF               	movlw	255
 14024  017A0C  6E30               	movwf	(btemp+6)^0,c
 14025  017A0E  6E31               	movwf	(btemp+7)^0,c
 14026  017A10  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14027  017A16  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14028  017A1C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14029  017A22  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14030  017A28  EC66  F0EF         	call	___aldiv	;wreg free
 14031  017A2C  0060  F0A8  F034   	movff	btemp,btemp+10
 14032  017A32  0060  F0AC  F035   	movff	btemp+1,btemp+11
 14033                           
 14034                           ;stkvar	_wday @ sp[(-22)+2]
 14035  017A38  0EEC               	movlw	-20
 14036  017A3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14037  017A40  0EED               	movlw	-19
 14038  017A42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14039                           
 14040                           ;stkvar	_wday @ sp[(-22)+2]
 14041                           ;stkvar	_d @ sp[(-22)+20]
 14042  017A48  0EFE               	movlw	-2
 14043  017A4A  006F FF8C  F034    	movff	plusw1,btemp+10
 14044  017A50  0EFF               	movlw	-1
 14045  017A52  006F FF8C  F035    	movff	plusw1,btemp+11
 14046  017A58  0EEC               	movlw	-20
 14047  017A5A  50E3               	movf	plusw1,w,c
 14048  017A5C  5E34               	subwf	(btemp+10)^0,f,c
 14049  017A5E  0EED               	movlw	-19
 14050  017A60  50E3               	movf	plusw1,w,c
 14051  017A62  5A35               	subwfb	(btemp+11)^0,f,c
 14052                           
 14053                           ;stkvar	_days @ sp[(-22)+0]
 14054  017A64  0EEA               	movlw	-22
 14055  017A66  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14056  017A6C  0EEB               	movlw	-21
 14057  017A6E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14058                           
 14059                           ;stkvar	_days @ sp[(-22)+0]
 14060  017A74  0EEB               	movlw	-21
 14061  017A76  AEE3               	btfss	plusw1,7,c
 14062  017A78  D011               	goto	l4021
 14063                           
 14064                           ;stkvar	_days @ sp[(-22)+0]
 14065  017A7A  0EEA               	movlw	-22
 14066  017A7C  50E3               	movf	plusw1,w,c
 14067  017A7E  0F07               	addlw	7
 14068  017A80  6E2A               	movwf	btemp^0,c
 14069  017A82  0EEA               	movlw	-22
 14070  017A84  0060  F0AB  FFE3   	movff	btemp,plusw1
 14071  017A8A  6A2A               	clrf	btemp^0,c
 14072  017A8C  0EEB               	movlw	-21
 14073  017A8E  50E3               	movf	plusw1,w,c
 14074  017A90  202A               	addwfc	btemp^0,w,c
 14075  017A92  6E2A               	movwf	btemp^0,c
 14076  017A94  0EEB               	movlw	-21
 14077  017A96  0060  F0AB  FFE3   	movff	btemp,plusw1
 14078  017A9C                     l4021:
 14079                           
 14080                           ;stkvar	_n @ sp[(-22)+14]
 14081  017A9C  0EF8               	movlw	-8
 14082  017A9E  006F FF8C  F02A    	movff	plusw1,btemp
 14083  017AA4  0E05               	movlw	5
 14084  017AA6  182A               	xorwf	btemp^0,w,c
 14085  017AA8  E134               	bnz	l16566
 14086  017AAA  0EF9               	movlw	-7
 14087  017AAC  50E3               	movf	plusw1,w,c
 14088  017AAE  A4D8               	btfss	status,2,c
 14089  017AB0  D030               	goto	l16566
 14090                           
 14091                           ;stkvar	_is_leap @ sp[(-22)+12]
 14092  017AB2  0EF6               	movlw	-10
 14093  017AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 14094  017ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 14095                           
 14096                           ;stkvar	_m @ sp[(-24)+18]
 14097  017AC0  0EFA               	movlw	-6
 14098  017AC2  006F FF8F FFE6     	movff	plusw1,postinc1
 14099  017AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 14100  017ACE  EC85  F00B         	call	_days_in_month	;wreg free
 14101                           
 14102                           ;stkvar	_days @ sp[(-22)+0]
 14103  017AD2  0EEA               	movlw	-22
 14104  017AD4  50E3               	movf	plusw1,w,c
 14105  017AD6  0F1C               	addlw	28
 14106  017AD8  6E34               	movwf	(btemp+10)^0,c
 14107  017ADA  0EEB               	movlw	-21
 14108  017ADC  006F FF8C  F035    	movff	plusw1,btemp+11
 14109  017AE2  0E00               	movlw	0
 14110  017AE4  2235               	addwfc	(btemp+11)^0,f,c
 14111  017AE6  502A               	movf	btemp^0,w,c
 14112  017AE8  5C34               	subwf	(btemp+10)^0,w,c
 14113  017AEA  5035               	movf	(btemp+11)^0,w,c
 14114  017AEC  0A80               	xorlw	128
 14115  017AEE  6E2C               	movwf	(btemp+2)^0,c
 14116  017AF0  502B               	movf	(btemp+1)^0,w,c
 14117  017AF2  0A80               	xorlw	128
 14118  017AF4  582C               	subwfb	(btemp+2)^0,w,c
 14119  017AF6  A0D8               	btfss	status,0,c
 14120  017AF8  D00C               	goto	l16566
 14121  017AFA  0E04               	movlw	4
 14122  017AFC  6E34               	movwf	(btemp+10)^0,c
 14123  017AFE  0E00               	movlw	0
 14124  017B00  6E35               	movwf	(btemp+11)^0,c
 14125                           
 14126                           ;stkvar	_n @ sp[(-22)+14]
 14127  017B02  0EF8               	movlw	-8
 14128  017B04  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14129  017B0A  0EF9               	movlw	-7
 14130  017B0C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14131  017B12                     l16566:
 14132  017B12  0E80               	movlw	128
 14133  017B14  6EE6               	movwf	postinc1,c
 14134  017B16  0E51               	movlw	81
 14135  017B18  6EE6               	movwf	postinc1,c
 14136  017B1A  0E01               	movlw	1
 14137  017B1C  6EE6               	movwf	postinc1,c
 14138  017B1E  0E00               	movlw	0
 14139  017B20  6EE6               	movwf	postinc1,c
 14140                           
 14141                           ;stkvar	_days @ sp[(-26)+0]
 14142                           ;stkvar	_n @ sp[(-26)+14]
 14143  017B22  0EF4               	movlw	-12
 14144  017B24  006F FF8C  F034    	movff	plusw1,btemp+10
 14145  017B2A  0EF5               	movlw	-11
 14146  017B2C  006F FF8C  F035    	movff	plusw1,btemp+11
 14147  017B32  0E07               	movlw	7
 14148  017B34  0234               	mulwf	(btemp+10)^0,c
 14149  017B36  006F FFCC  F032    	movff	prodl,btemp+8
 14150  017B3C  006F FFD0  F033    	movff	prodh,btemp+9
 14151  017B42  0235               	mulwf	(btemp+11)^0,c
 14152  017B44  50F3               	movf	prodl,w,c
 14153  017B46  2633               	addwf	(btemp+9)^0,f,c
 14154  017B48  0EE6               	movlw	-26
 14155  017B4A  50E3               	movf	plusw1,w,c
 14156  017B4C  2632               	addwf	(btemp+8)^0,f,c
 14157  017B4E  0EE7               	movlw	-25
 14158  017B50  50E3               	movf	plusw1,w,c
 14159  017B52  2233               	addwfc	(btemp+9)^0,f,c
 14160  017B54  0EF9               	movlw	249
 14161  017B56  2432               	addwf	(btemp+8)^0,w,c
 14162  017B58  6E2E               	movwf	(btemp+4)^0,c
 14163  017B5A  0EFF               	movlw	255
 14164  017B5C  2033               	addwfc	(btemp+9)^0,w,c
 14165  017B5E  6E2F               	movwf	(btemp+5)^0,c
 14166  017B60  6A30               	clrf	(btemp+6)^0,c
 14167  017B62  BE2F               	btfsc	(btemp+5)^0,7,c
 14168  017B64  0630               	decf	(btemp+6)^0,f,c
 14169  017B66  5030               	movf	(btemp+6)^0,w,c
 14170  017B68  6E31               	movwf	(btemp+7)^0,c
 14171  017B6A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14172  017B70  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14173  017B76  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14174  017B7C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14175  017B82  EC46  F001         	call	___lmul	;wreg free
 14176  017B86                     L10:
 14177  017B86  0060  F0A8  F03A   	movff	btemp,btemp+16
 14178  017B8C  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14179  017B92  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14180  017B98  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14181  017B9E  6A3E               	clrf	(btemp+20)^0,c
 14182  017BA0  BE3D               	btfsc	(btemp+19)^0,7,c
 14183  017BA2  683E               	setf	(btemp+20)^0,c
 14184  017BA4  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14185  017BAA  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14186  017BB0  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14187                           
 14188                           ;stkvar	_t @ sp[(-22)+4]
 14189  017BB6  50E1               	movf	fsr1l,w,c
 14190  017BB8  0FEE               	addlw	-18
 14191  017BBA  6ED9               	movwf	fsr2l,c
 14192  017BBC  50E2               	movf	fsr1h,w,c
 14193  017BBE  6EDA               	movwf	fsr2h,c
 14194  017BC0  0EFF               	movlw	255
 14195  017BC2  22DA               	addwfc	fsr2h,f,c
 14196  017BC4  503A               	movf	(btemp+16)^0,w,c
 14197  017BC6  26DE               	addwf	postinc2,f,c
 14198  017BC8  503B               	movf	(btemp+17)^0,w,c
 14199  017BCA  22DE               	addwfc	postinc2,f,c
 14200  017BCC  503C               	movf	(btemp+18)^0,w,c
 14201  017BCE  22DE               	addwfc	postinc2,f,c
 14202  017BD0  503D               	movf	(btemp+19)^0,w,c
 14203  017BD2  22DE               	addwfc	postinc2,f,c
 14204  017BD4  503E               	movf	(btemp+20)^0,w,c
 14205  017BD6  22DE               	addwfc	postinc2,f,c
 14206  017BD8  503F               	movf	(btemp+21)^0,w,c
 14207  017BDA  22DE               	addwfc	postinc2,f,c
 14208  017BDC  5040               	movf	(btemp+22)^0,w,c
 14209  017BDE  22DE               	addwfc	postinc2,f,c
 14210  017BE0  5041               	movf	(btemp+23)^0,w,c
 14211  017BE2  22DE               	addwfc	postinc2,f,c
 14212                           
 14213                           ;stkvar	_rule @ sp[(-22)+-6]
 14214  017BE4  0EE4               	movlw	-28
 14215  017BE6  006F FF8C  F034    	movff	plusw1,btemp+10
 14216  017BEC  0EE5               	movlw	-27
 14217  017BEE  006F FF8C  F035    	movff	plusw1,btemp+11
 14218  017BF4  0E08               	movlw	8
 14219  017BF6  2434               	addwf	(btemp+10)^0,w,c
 14220  017BF8  6ED9               	movwf	fsr2l,c
 14221  017BFA  0E00               	movlw	0
 14222  017BFC  2035               	addwfc	(btemp+11)^0,w,c
 14223  017BFE  6EDA               	movwf	fsr2h,c
 14224  017C00  006F FF78  F034    	movff	postinc2,btemp+10
 14225  017C06  006F FF74  F035    	movff	postdec2,btemp+11
 14226                           
 14227                           ;stkvar	_t @ sp[(-22)+4]
 14228  017C0C  50E1               	movf	fsr1l,w,c
 14229  017C0E  0FEE               	addlw	-18
 14230  017C10  6ED9               	movwf	fsr2l,c
 14231  017C12  50E2               	movf	fsr1h,w,c
 14232  017C14  6EDA               	movwf	fsr2h,c
 14233  017C16  0EFF               	movlw	255
 14234  017C18  22DA               	addwfc	fsr2h,f,c
 14235  017C1A  5034               	movf	(btemp+10)^0,w,c
 14236  017C1C  26DE               	addwf	postinc2,f,c
 14237  017C1E  5035               	movf	(btemp+11)^0,w,c
 14238  017C20  22DE               	addwfc	postinc2,f,c
 14239  017C22  0E00               	movlw	0
 14240  017C24  BE35               	btfsc	(btemp+11)^0,7,c
 14241  017C26  0EFF               	movlw	255
 14242  017C28  22DE               	addwfc	postinc2,f,c
 14243  017C2A  22DE               	addwfc	postinc2,f,c
 14244  017C2C  22DE               	addwfc	postinc2,f,c
 14245  017C2E  22DE               	addwfc	postinc2,f,c
 14246  017C30  22DE               	addwfc	postinc2,f,c
 14247  017C32  22DE               	addwfc	postinc2,f,c
 14248                           
 14249                           ;stkvar	_t @ sp[(-22)+4]
 14250  017C34  0EEE               	movlw	238
 14251  017C36  24E1               	addwf	fsr1l,w,c
 14252  017C38  6ED9               	movwf	fsr2l,c
 14253  017C3A  0EFF               	movlw	255
 14254  017C3C  20E2               	addwfc	fsr1h,w,c
 14255  017C3E  6EDA               	movwf	fsr2h,c
 14256                           
 14257                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 14258  017C40  0E08               	movlw	8
 14259  017C42  6E2A               	movwf	btemp^0,c
 14260  017C44  0EE2               	movlw	-30
 14261  017C46                     us1612999:
 14262  017C46  006F FF7B FFE3     	movff	postinc2,plusw1
 14263  017C4C  28E8               	incf	wreg,w,c
 14264  017C4E  2E2A               	decfsz	btemp^0,f,c
 14265  017C50  D7FA               	bra	us1612999
 14266                           
 14267                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 14268  017C52  0EEA               	movlw	234
 14269  017C54  26E1               	addwf	fsr1l,f,c
 14270  017C56  0EFF               	movlw	255
 14271  017C58  22E2               	addwfc	fsr1h,f,c
 14272  017C5A  0012               	return		;funcret
 14273  017C5C                     __end_of_rule_to_secs:
 14274                           	opt callstack 0
 14275                           
 14276 ;; *************** function _days_in_month *****************
 14277 ;; Defined at:
 14278 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;  m               2  [STACK] int 
 14281 ;;  is_leap         2  [STACK] int 
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;		None
 14284 ;; Return value:  Size  Location     Type
 14285 ;;                  2  [STACK] int 
 14286 ;; Registers used:
 14287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14288 ;; Tracked objects:
 14289 ;;		On entry : 0/0
 14290 ;;		On exit  : 0/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14297 ;;Total ram usage:        0 bytes
 14298 ;; Hardware stack levels used:    1
 14299 ;; Hardware stack levels required when called:   15
 14300 ;; This function calls:
 14301 ;;		Nothing
 14302 ;; This function is called by:
 14303 ;;		_rule_to_secs
 14304 ;; This function uses a reentrant model
 14305 ;;
 14306                           
 14307                           	psect	text42
 14308  00170A                     __ptext42:
 14309                           	opt callstack 0
 14310  00170A                     _days_in_month:
 14311                           	opt callstack 11
 14312                           
 14313                           ;stkvar	_m @ sp[(0)+-2]
 14314                           
 14315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14316                           ;incstack = 0
 14317  00170A  0EFE               	movlw	-2
 14318  00170C  006F FF8C  F02A    	movff	plusw1,btemp
 14319  001712  0E02               	movlw	2
 14320  001714  182A               	xorwf	btemp^0,w,c
 14321  001716  E10D               	bnz	l11628
 14322  001718  0EFF               	movlw	-1
 14323  00171A  50E3               	movf	plusw1,w,c
 14324  00171C  A4D8               	btfss	status,2,c
 14325  00171E  D009               	goto	l11628
 14326                           
 14327                           ;stkvar	_is_leap @ sp[(0)+-4]
 14328  001720  0EFC               	movlw	-4
 14329  001722  50E3               	movf	plusw1,w,c
 14330  001724  0F1C               	addlw	28
 14331  001726  6E2A               	movwf	btemp^0,c
 14332  001728  0EFD               	movlw	-3
 14333  00172A  006F FF8C  F02B    	movff	plusw1,btemp+1
 14334  001730  D017               	goto	L11
 14335  001732                     l11628:
 14336  001732  0EFF               	movlw	255
 14337  001734  6E35               	movwf	(btemp+11)^0,c
 14338                           
 14339                           ;stkvar	_m @ sp[(0)+-2]
 14340  001736  0EFE               	movlw	-2
 14341  001738  50E3               	movf	plusw1,w,c
 14342  00173A  2435               	addwf	(btemp+11)^0,w,c
 14343  00173C  6E34               	movwf	(btemp+10)^0,c
 14344  00173E  0ED5               	movlw	213
 14345  001740  6E2A               	movwf	btemp^0,c
 14346  001742  0E0A               	movlw	10
 14347  001744  6E2B               	movwf	(btemp+1)^0,c
 14348  001746  2A34               	incf	(btemp+10)^0,f,c
 14349  001748  D003               	goto	u10704
 14350  00174A                     u10705:
 14351  00174A  342B               	rlcf	(btemp+1)^0,w,c
 14352  00174C  322B               	rrcf	(btemp+1)^0,f,c
 14353  00174E  322A               	rrcf	btemp^0,f,c
 14354  001750                     u10704:
 14355  001750  2E34               	decfsz	(btemp+10)^0,f,c
 14356  001752  D7FB               	goto	u10705
 14357  001754  0E01               	movlw	1
 14358  001756  162A               	andwf	btemp^0,f,c
 14359  001758  0E00               	movlw	0
 14360  00175A  162B               	andwf	(btemp+1)^0,f,c
 14361  00175C  0E1E               	movlw	30
 14362  00175E  262A               	addwf	btemp^0,f,c
 14363  001760                     L11:
 14364  001760  0E00               	movlw	0
 14365  001762  222B               	addwfc	(btemp+1)^0,f,c
 14366                           
 14367                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14368  001764  52E5               	movf	postdec1,f,c
 14369  001766  52E5               	movf	postdec1,f,c
 14370  001768  52E5               	movf	postdec1,f,c
 14371  00176A  52E5               	movf	postdec1,f,c
 14372  00176C  0012               	return		;funcret
 14373  00176E                     __end_of_days_in_month:
 14374                           	opt callstack 0
 14375                           
 14376 ;; *************** function ___year_to_secs *****************
 14377 ;; Defined at:
 14378 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 14379 ;; Parameters:    Size  Location     Type
 14380 ;;  year            8  [STACK] long long 
 14381 ;;  is_leap         2  [STACK] PTR int 
 14382 ;;		 -> F5(2), is_leap(2), NULL(0), 
 14383 ;; Auto vars:     Size  Location     Type
 14384 ;;  y               2  [STACK] int 
 14385 ;;  leaps           2  [STACK] int 
 14386 ;;  rem             2  [STACK] int 
 14387 ;;  5               2  [STACK] int 
 14388 ;;  centuries       2  [STACK] int 
 14389 ;;  leaps           2  [STACK] int 
 14390 ;;  cycles          2  [STACK] int 
 14391 ;; Return value:  Size  Location     Type
 14392 ;;                  8  [STACK] long long 
 14393 ;; Registers used:
 14394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 14395 ;; Tracked objects:
 14396 ;;		On entry : 0/0
 14397 ;;		On exit  : 0/0
 14398 ;;		Unchanged: 0/0
 14399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14404 ;;Total ram usage:        0 bytes
 14405 ;; Hardware stack levels used:    1
 14406 ;; Hardware stack levels required when called:   16
 14407 ;; This function calls:
 14408 ;;		___aodiv
 14409 ;;		___aomod
 14410 ;;		___lmul
 14411 ;;		___omul
 14412 ;; This function is called by:
 14413 ;;		_rule_to_secs
 14414 ;;		___secs_to_zone
 14415 ;; This function uses a reentrant model
 14416 ;;
 14417                           
 14418                           	psect	text43
 14419  0153A6                     __ptext43:
 14420                           	opt callstack 0
 14421  0153A6                     ___year_to_secs:
 14422                           	opt callstack 0
 14423                           
 14424                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14425  0153A6  0E0E               	movlw	14
 14426  0153A8  26E1               	addwf	fsr1l,f,c
 14427  0153AA  0E00               	movlw	0
 14428  0153AC  22E2               	addwfc	fsr1h,f,c
 14429                           
 14430                           ;stkvar	_year @ sp[(-14)+-8]
 14431                           
 14432                           ;incstack = 0
 14433  0153AE  0EEA               	movlw	-22
 14434  0153B0  50E3               	movf	plusw1,w,c
 14435  0153B2  0FFE               	addlw	254
 14436  0153B4  6E3A               	movwf	(btemp+16)^0,c
 14437  0153B6  0EEB               	movlw	-21
 14438  0153B8  006F FF8C  F03B    	movff	plusw1,btemp+17
 14439  0153BE  0EFF               	movlw	255
 14440  0153C0  223B               	addwfc	(btemp+17)^0,f,c
 14441  0153C2  0EEC               	movlw	-20
 14442  0153C4  006F FF8C  F03C    	movff	plusw1,btemp+18
 14443  0153CA  0EFF               	movlw	255
 14444  0153CC  223C               	addwfc	(btemp+18)^0,f,c
 14445  0153CE  0EED               	movlw	-19
 14446  0153D0  006F FF8C  F03D    	movff	plusw1,btemp+19
 14447  0153D6  0EFF               	movlw	255
 14448  0153D8  223D               	addwfc	(btemp+19)^0,f,c
 14449  0153DA  0EEE               	movlw	-18
 14450  0153DC  006F FF8C  F03E    	movff	plusw1,btemp+20
 14451  0153E2  0EFF               	movlw	255
 14452  0153E4  223E               	addwfc	(btemp+20)^0,f,c
 14453  0153E6  0EEF               	movlw	-17
 14454  0153E8  006F FF8C  F03F    	movff	plusw1,btemp+21
 14455  0153EE  0EFF               	movlw	255
 14456  0153F0  223F               	addwfc	(btemp+21)^0,f,c
 14457  0153F2  0EF0               	movlw	-16
 14458  0153F4  006F FF8C  F040    	movff	plusw1,btemp+22
 14459  0153FA  0EFF               	movlw	255
 14460  0153FC  2240               	addwfc	(btemp+22)^0,f,c
 14461  0153FE  0EF1               	movlw	-15
 14462  015400  006F FF8C  F041    	movff	plusw1,btemp+23
 14463  015406  0EFF               	movlw	255
 14464  015408  2241               	addwfc	(btemp+23)^0,f,c
 14465  01540A  5041               	movf	(btemp+23)^0,w,c
 14466  01540C  1040               	iorwf	(btemp+22)^0,w,c
 14467  01540E  103F               	iorwf	(btemp+21)^0,w,c
 14468  015410  103E               	iorwf	(btemp+20)^0,w,c
 14469  015412  103D               	iorwf	(btemp+19)^0,w,c
 14470  015414  103C               	iorwf	(btemp+18)^0,w,c
 14471  015416  103B               	iorwf	(btemp+17)^0,w,c
 14472  015418  E103               	bnz	u10711
 14473  01541A  0E89               	movlw	137
 14474  01541C  5C3A               	subwf	(btemp+16)^0,w,c
 14475  01541E  B0D8               	btfsc	status,0,c
 14476  015420                     u10711:
 14477  015420  D0E7               	goto	l11654
 14478                           
 14479                           ;stkvar	_year @ sp[(-14)+-8]
 14480                           ;stkvar	_y @ sp[(-14)+0]
 14481  015422  0EEA               	movlw	-22
 14482  015424  006F FF8C  F02A    	movff	plusw1,btemp
 14483  01542A  0EF2               	movlw	-14
 14484  01542C  0060  F0AB  FFE3   	movff	btemp,plusw1
 14485  015432  0EEB               	movlw	-21
 14486  015434  006F FF8C  F02A    	movff	plusw1,btemp
 14487  01543A  0EF3               	movlw	-13
 14488  01543C  0060  F0AB  FFE3   	movff	btemp,plusw1
 14489                           
 14490                           ;stkvar	_y @ sp[(-14)+0]
 14491  015442  0EF2               	movlw	-14
 14492  015444  50E3               	movf	plusw1,w,c
 14493  015446  0FBC               	addlw	188
 14494  015448  6E34               	movwf	(btemp+10)^0,c
 14495  01544A  0EF3               	movlw	-13
 14496  01544C  006F FF8C  F035    	movff	plusw1,btemp+11
 14497  015452  0EFF               	movlw	255
 14498  015454  2235               	addwfc	(btemp+11)^0,f,c
 14499  015456  3435               	rlcf	(btemp+11)^0,w,c
 14500  015458  3235               	rrcf	(btemp+11)^0,f,c
 14501  01545A  3234               	rrcf	(btemp+10)^0,f,c
 14502  01545C  3435               	rlcf	(btemp+11)^0,w,c
 14503  01545E  3235               	rrcf	(btemp+11)^0,f,c
 14504  015460  3234               	rrcf	(btemp+10)^0,f,c
 14505                           
 14506                           ;stkvar	_leaps @ sp[(-14)+2]
 14507  015462  0EF4               	movlw	-12
 14508  015464  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14509  01546A  0EF5               	movlw	-11
 14510  01546C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14511  015472  0EBC               	movlw	188
 14512  015474  6E35               	movwf	(btemp+11)^0,c
 14513                           
 14514                           ;stkvar	_y @ sp[(-14)+0]
 14515  015476  0EF2               	movlw	-14
 14516  015478  50E3               	movf	plusw1,w,c
 14517  01547A  2435               	addwf	(btemp+11)^0,w,c
 14518  01547C  6E34               	movwf	(btemp+10)^0,c
 14519  01547E  0E03               	movlw	3
 14520  015480  1634               	andwf	(btemp+10)^0,f,c
 14521  015482  A4D8               	btfss	status,2,c
 14522  015484  D01D               	goto	l11646
 14523                           
 14524                           ;stkvar	_leaps @ sp[(-14)+2]
 14525  015486  50E1               	movf	fsr1l,w,c
 14526  015488  0FF4               	addlw	-12
 14527  01548A  6ED9               	movwf	fsr2l,c
 14528  01548C  50E2               	movf	fsr1h,w,c
 14529  01548E  6EDA               	movwf	fsr2h,c
 14530  015490  0EFF               	movlw	255
 14531  015492  22DA               	addwfc	fsr2h,f,c
 14532  015494  06DE               	decf	postinc2,f,c
 14533  015496  0E00               	movlw	0
 14534  015498  5ADD               	subwfb	postdec2,f,c
 14535                           
 14536                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14537  01549A  0EE8               	movlw	-24
 14538  01549C  006F FF8C  F02A    	movff	plusw1,btemp
 14539  0154A2  0EE9               	movlw	-23
 14540  0154A4  50E3               	movf	plusw1,w,c
 14541  0154A6  102A               	iorwf	btemp^0,w,c
 14542  0154A8  B4D8               	btfsc	status,2,c
 14543  0154AA  D01F               	goto	l11650
 14544                           
 14545                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14546  0154AC  0EE8               	movlw	-24
 14547  0154AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14548  0154B4  0EE9               	movlw	-23
 14549  0154B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14550  0154BC  0E01               	movlw	1
 14551  0154BE  D012               	goto	L12
 14552  0154C0                     l11646:
 14553                           
 14554                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14555  0154C0  0EE8               	movlw	-24
 14556  0154C2  006F FF8C  F02A    	movff	plusw1,btemp
 14557  0154C8  0EE9               	movlw	-23
 14558  0154CA  50E3               	movf	plusw1,w,c
 14559  0154CC  102A               	iorwf	btemp^0,w,c
 14560  0154CE  B4D8               	btfsc	status,2,c
 14561  0154D0  D00C               	goto	l11650
 14562                           
 14563                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14564  0154D2  0EE8               	movlw	-24
 14565  0154D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14566  0154DA  0EE9               	movlw	-23
 14567  0154DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14568  0154E2  0E00               	movlw	0
 14569  0154E4                     L12:
 14570  0154E4  6EDE               	movwf	postinc2,c
 14571  0154E6  0E00               	movlw	0
 14572  0154E8  6EDD               	movwf	postdec2,c
 14573  0154EA                     l11650:
 14574  0154EA  0E80               	movlw	128
 14575  0154EC  6EE6               	movwf	postinc1,c
 14576  0154EE  0E33               	movlw	51
 14577  0154F0  6EE6               	movwf	postinc1,c
 14578  0154F2  0EE1               	movlw	225
 14579  0154F4  6EE6               	movwf	postinc1,c
 14580  0154F6  0E01               	movlw	1
 14581  0154F8  6EE6               	movwf	postinc1,c
 14582                           
 14583                           ;stkvar	_y @ sp[(-18)+0]
 14584  0154FA  0EEE               	movlw	-18
 14585  0154FC  006F FF8C  F034    	movff	plusw1,btemp+10
 14586  015502  0EEF               	movlw	-17
 14587  015504  006F FF8C  F035    	movff	plusw1,btemp+11
 14588  01550A  0EBA               	movlw	186
 14589  01550C  2434               	addwf	(btemp+10)^0,w,c
 14590  01550E  6E2E               	movwf	(btemp+4)^0,c
 14591  015510  0EFF               	movlw	255
 14592  015512  2035               	addwfc	(btemp+11)^0,w,c
 14593  015514  6E2F               	movwf	(btemp+5)^0,c
 14594  015516  6A30               	clrf	(btemp+6)^0,c
 14595  015518  BE2F               	btfsc	(btemp+5)^0,7,c
 14596  01551A  0630               	decf	(btemp+6)^0,f,c
 14597  01551C  5030               	movf	(btemp+6)^0,w,c
 14598  01551E  6E31               	movwf	(btemp+7)^0,c
 14599  015520  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14600  015526  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14601  01552C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14602  015532  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14603  015538  EC46  F001         	call	___lmul	;wreg free
 14604  01553C  0060  F0A8  F032   	movff	btemp,btemp+8
 14605  015542  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14606  015548  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14607  01554E  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14608  015554  0E80               	movlw	128
 14609  015556  6EE6               	movwf	postinc1,c
 14610  015558  0E51               	movlw	81
 14611  01555A  6EE6               	movwf	postinc1,c
 14612  01555C  0E01               	movlw	1
 14613  01555E  6EE6               	movwf	postinc1,c
 14614  015560  0E00               	movlw	0
 14615  015562  6EE6               	movwf	postinc1,c
 14616                           
 14617                           ;stkvar	_leaps @ sp[(-18)+2]
 14618  015564  0EF0               	movlw	-16
 14619  015566  006F FF8C  F030    	movff	plusw1,btemp+6
 14620  01556C  0EF1               	movlw	-15
 14621  01556E  006F FF8C  F031    	movff	plusw1,btemp+7
 14622  015574  0060  F0C0  F02A   	movff	btemp+6,btemp
 14623  01557A  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14624  015580  0E00               	movlw	0
 14625  015582  BE2B               	btfsc	(btemp+1)^0,7,c
 14626  015584  0EFF               	movlw	255
 14627  015586  6E2C               	movwf	(btemp+2)^0,c
 14628  015588  6E2D               	movwf	(btemp+3)^0,c
 14629  01558A  0060  F0AB  FFE6   	movff	btemp,postinc1
 14630  015590  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14631  015596  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14632  01559C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14633  0155A2  EC46  F001         	call	___lmul	;wreg free
 14634  0155A6  502A               	movf	btemp^0,w,c
 14635  0155A8  2432               	addwf	(btemp+8)^0,w,c
 14636  0155AA  6E2E               	movwf	(btemp+4)^0,c
 14637  0155AC  502B               	movf	(btemp+1)^0,w,c
 14638  0155AE  2033               	addwfc	(btemp+9)^0,w,c
 14639  0155B0  6E2F               	movwf	(btemp+5)^0,c
 14640  0155B2  502C               	movf	(btemp+2)^0,w,c
 14641  0155B4  2034               	addwfc	(btemp+10)^0,w,c
 14642  0155B6  6E30               	movwf	(btemp+6)^0,c
 14643  0155B8  502D               	movf	(btemp+3)^0,w,c
 14644  0155BA  2035               	addwfc	(btemp+11)^0,w,c
 14645  0155BC  6E31               	movwf	(btemp+7)^0,c
 14646  0155BE  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14647  0155C4  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14648  0155CA  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14649  0155D0  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14650  0155D6  6A3E               	clrf	(btemp+20)^0,c
 14651  0155D8  BE3D               	btfsc	(btemp+19)^0,7,c
 14652  0155DA  683E               	setf	(btemp+20)^0,c
 14653  0155DC  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14654  0155E2  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14655  0155E8  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14656  0155EE  D36F               	goto	L13
 14657  0155F0                     l11654:
 14658                           
 14659                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14660  0155F0  0EE8               	movlw	-24
 14661  0155F2  006F FF8C  F02A    	movff	plusw1,btemp
 14662  0155F8  0EE9               	movlw	-23
 14663  0155FA  50E3               	movf	plusw1,w,c
 14664  0155FC  102A               	iorwf	btemp^0,w,c
 14665  0155FE  A4D8               	btfss	status,2,c
 14666  015600  D012               	goto	l11660
 14667                           
 14668                           ;stkvar	F5 @ sp[(-14)+6]
 14669  015602  0EF8               	movlw	-8
 14670  015604  6AE3               	clrf	plusw1,c
 14671  015606  0EF9               	movlw	-7
 14672  015608  6AE3               	clrf	plusw1,c
 14673                           
 14674                           ;stkvar	F5 @ sp[(-14)+6]
 14675  01560A  0EF8               	movlw	248
 14676  01560C  24E1               	addwf	fsr1l,w,c
 14677  01560E  6E34               	movwf	(btemp+10)^0,c
 14678  015610  0EFF               	movlw	255
 14679  015612  20E2               	addwfc	fsr1h,w,c
 14680  015614  6E35               	movwf	(btemp+11)^0,c
 14681                           
 14682                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14683  015616  0EE9               	movlw	-23
 14684  015618  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14685  01561E  0EE8               	movlw	-24
 14686  015620  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14687  015626                     l11660:
 14688  015626  0E90               	movlw	144
 14689  015628  6EE6               	movwf	postinc1,c
 14690  01562A  0E01               	movlw	1
 14691  01562C  6EE6               	movwf	postinc1,c
 14692  01562E  0E00               	movlw	0
 14693  015630  6EE6               	movwf	postinc1,c
 14694  015632  0E00               	movlw	0
 14695  015634  6EE6               	movwf	postinc1,c
 14696  015636  0E00               	movlw	0
 14697  015638  6EE6               	movwf	postinc1,c
 14698  01563A  0E00               	movlw	0
 14699  01563C  6EE6               	movwf	postinc1,c
 14700  01563E  0E00               	movlw	0
 14701  015640  6EE6               	movwf	postinc1,c
 14702  015642  0E00               	movlw	0
 14703  015644  6EE6               	movwf	postinc1,c
 14704                           
 14705                           ;stkvar	_year @ sp[(-22)+-8]
 14706  015646  0EE2               	movlw	-30
 14707  015648  50E3               	movf	plusw1,w,c
 14708  01564A  0F9C               	addlw	156
 14709  01564C  6E3A               	movwf	(btemp+16)^0,c
 14710  01564E  0EE3               	movlw	-29
 14711  015650  006F FF8C  F03B    	movff	plusw1,btemp+17
 14712  015656  0EFF               	movlw	255
 14713  015658  223B               	addwfc	(btemp+17)^0,f,c
 14714  01565A  0EE4               	movlw	-28
 14715  01565C  006F FF8C  F03C    	movff	plusw1,btemp+18
 14716  015662  0EFF               	movlw	255
 14717  015664  223C               	addwfc	(btemp+18)^0,f,c
 14718  015666  0EE5               	movlw	-27
 14719  015668  006F FF8C  F03D    	movff	plusw1,btemp+19
 14720  01566E  0EFF               	movlw	255
 14721  015670  223D               	addwfc	(btemp+19)^0,f,c
 14722  015672  0EE6               	movlw	-26
 14723  015674  006F FF8C  F03E    	movff	plusw1,btemp+20
 14724  01567A  0EFF               	movlw	255
 14725  01567C  223E               	addwfc	(btemp+20)^0,f,c
 14726  01567E  0EE7               	movlw	-25
 14727  015680  006F FF8C  F03F    	movff	plusw1,btemp+21
 14728  015686  0EFF               	movlw	255
 14729  015688  223F               	addwfc	(btemp+21)^0,f,c
 14730  01568A  0EE8               	movlw	-24
 14731  01568C  006F FF8C  F040    	movff	plusw1,btemp+22
 14732  015692  0EFF               	movlw	255
 14733  015694  2240               	addwfc	(btemp+22)^0,f,c
 14734  015696  0EE9               	movlw	-23
 14735  015698  006F FF8C  F041    	movff	plusw1,btemp+23
 14736  01569E  0EFF               	movlw	255
 14737  0156A0  2241               	addwfc	(btemp+23)^0,f,c
 14738  0156A2  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14739  0156A8  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14740  0156AE  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14741  0156B4  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14742  0156BA  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14743  0156C0  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14744  0156C6  0060  F103  FFE6   	movff	btemp+22,postinc1
 14745  0156CC  0060  F107  FFE6   	movff	btemp+23,postinc1
 14746  0156D2  ECE7  F0E0         	call	___aodiv	;wreg free
 14747  0156D6  52E5               	movf	postdec1,f,c
 14748  0156D8  006F FF9C  F041    	movff	indf1,btemp+23
 14749  0156DE  52E5               	movf	postdec1,f,c
 14750  0156E0  006F FF9C  F040    	movff	indf1,btemp+22
 14751  0156E6  52E5               	movf	postdec1,f,c
 14752  0156E8  006F FF9C  F03F    	movff	indf1,btemp+21
 14753  0156EE  52E5               	movf	postdec1,f,c
 14754  0156F0  006F FF9C  F03E    	movff	indf1,btemp+20
 14755  0156F6  52E5               	movf	postdec1,f,c
 14756  0156F8  006F FF9C  F03D    	movff	indf1,btemp+19
 14757  0156FE  52E5               	movf	postdec1,f,c
 14758  015700  006F FF9C  F03C    	movff	indf1,btemp+18
 14759  015706  52E5               	movf	postdec1,f,c
 14760  015708  006F FF9C  F03B    	movff	indf1,btemp+17
 14761  01570E  52E5               	movf	postdec1,f,c
 14762  015710  006F FF9C  F03A    	movff	indf1,btemp+16
 14763  015716  0EF8               	movlw	248
 14764  015718  26E1               	addwf	fsr1l,f,c
 14765  01571A  0EFF               	movlw	255
 14766  01571C  22E2               	addwfc	fsr1h,f,c
 14767  01571E  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14768  015724  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14769                           
 14770                           ;stkvar	_cycles @ sp[(-14)+12]
 14771  01572A  0EFE               	movlw	-2
 14772  01572C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14773  015732  0EFF               	movlw	-1
 14774  015734  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14775  01573A  0E90               	movlw	144
 14776  01573C  6EE6               	movwf	postinc1,c
 14777  01573E  0E01               	movlw	1
 14778  015740  6EE6               	movwf	postinc1,c
 14779  015742  0E00               	movlw	0
 14780  015744  6EE6               	movwf	postinc1,c
 14781  015746  0E00               	movlw	0
 14782  015748  6EE6               	movwf	postinc1,c
 14783  01574A  0E00               	movlw	0
 14784  01574C  6EE6               	movwf	postinc1,c
 14785  01574E  0E00               	movlw	0
 14786  015750  6EE6               	movwf	postinc1,c
 14787  015752  0E00               	movlw	0
 14788  015754  6EE6               	movwf	postinc1,c
 14789  015756  0E00               	movlw	0
 14790  015758  6EE6               	movwf	postinc1,c
 14791                           
 14792                           ;stkvar	_year @ sp[(-22)+-8]
 14793  01575A  0EE2               	movlw	-30
 14794  01575C  50E3               	movf	plusw1,w,c
 14795  01575E  0F9C               	addlw	156
 14796  015760  6E3A               	movwf	(btemp+16)^0,c
 14797  015762  0EE3               	movlw	-29
 14798  015764  006F FF8C  F03B    	movff	plusw1,btemp+17
 14799  01576A  0EFF               	movlw	255
 14800  01576C  223B               	addwfc	(btemp+17)^0,f,c
 14801  01576E  0EE4               	movlw	-28
 14802  015770  006F FF8C  F03C    	movff	plusw1,btemp+18
 14803  015776  0EFF               	movlw	255
 14804  015778  223C               	addwfc	(btemp+18)^0,f,c
 14805  01577A  0EE5               	movlw	-27
 14806  01577C  006F FF8C  F03D    	movff	plusw1,btemp+19
 14807  015782  0EFF               	movlw	255
 14808  015784  223D               	addwfc	(btemp+19)^0,f,c
 14809  015786  0EE6               	movlw	-26
 14810  015788  006F FF8C  F03E    	movff	plusw1,btemp+20
 14811  01578E  0EFF               	movlw	255
 14812  015790  223E               	addwfc	(btemp+20)^0,f,c
 14813  015792  0EE7               	movlw	-25
 14814  015794  006F FF8C  F03F    	movff	plusw1,btemp+21
 14815  01579A  0EFF               	movlw	255
 14816  01579C  223F               	addwfc	(btemp+21)^0,f,c
 14817  01579E  0EE8               	movlw	-24
 14818  0157A0  006F FF8C  F040    	movff	plusw1,btemp+22
 14819  0157A6  0EFF               	movlw	255
 14820  0157A8  2240               	addwfc	(btemp+22)^0,f,c
 14821  0157AA  0EE9               	movlw	-23
 14822  0157AC  006F FF8C  F041    	movff	plusw1,btemp+23
 14823  0157B2  0EFF               	movlw	255
 14824  0157B4  2241               	addwfc	(btemp+23)^0,f,c
 14825  0157B6  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14826  0157BC  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14827  0157C2  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14828  0157C8  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14829  0157CE  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14830  0157D4  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14831  0157DA  0060  F103  FFE6   	movff	btemp+22,postinc1
 14832  0157E0  0060  F107  FFE6   	movff	btemp+23,postinc1
 14833  0157E6  ECA6  F0E5         	call	___aomod	;wreg free
 14834  0157EA  52E5               	movf	postdec1,f,c
 14835  0157EC  006F FF9C  F041    	movff	indf1,btemp+23
 14836  0157F2  52E5               	movf	postdec1,f,c
 14837  0157F4  006F FF9C  F040    	movff	indf1,btemp+22
 14838  0157FA  52E5               	movf	postdec1,f,c
 14839  0157FC  006F FF9C  F03F    	movff	indf1,btemp+21
 14840  015802  52E5               	movf	postdec1,f,c
 14841  015804  006F FF9C  F03E    	movff	indf1,btemp+20
 14842  01580A  52E5               	movf	postdec1,f,c
 14843  01580C  006F FF9C  F03D    	movff	indf1,btemp+19
 14844  015812  52E5               	movf	postdec1,f,c
 14845  015814  006F FF9C  F03C    	movff	indf1,btemp+18
 14846  01581A  52E5               	movf	postdec1,f,c
 14847  01581C  006F FF9C  F03B    	movff	indf1,btemp+17
 14848  015822  52E5               	movf	postdec1,f,c
 14849  015824  006F FF9C  F03A    	movff	indf1,btemp+16
 14850  01582A  0EF8               	movlw	248
 14851  01582C  26E1               	addwf	fsr1l,f,c
 14852  01582E  0EFF               	movlw	255
 14853  015830  22E2               	addwfc	fsr1h,f,c
 14854  015832  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14855  015838  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14856                           
 14857                           ;stkvar	_rem @ sp[(-14)+4]
 14858  01583E  0EF6               	movlw	-10
 14859  015840  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14860  015846  0EF7               	movlw	-9
 14861  015848  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14862                           
 14863                           ;stkvar	_rem @ sp[(-14)+4]
 14864  01584E  0EF7               	movlw	-9
 14865  015850  AEE3               	btfss	plusw1,7,c
 14866  015852  D015               	goto	l11670
 14867                           
 14868                           ;stkvar	_cycles @ sp[(-14)+12]
 14869  015854  50E1               	movf	fsr1l,w,c
 14870  015856  0FFE               	addlw	-2
 14871  015858  6ED9               	movwf	fsr2l,c
 14872  01585A  50E2               	movf	fsr1h,w,c
 14873  01585C  6EDA               	movwf	fsr2h,c
 14874  01585E  0EFF               	movlw	255
 14875  015860  22DA               	addwfc	fsr2h,f,c
 14876  015862  06DE               	decf	postinc2,f,c
 14877  015864  0E00               	movlw	0
 14878  015866  5ADD               	subwfb	postdec2,f,c
 14879                           
 14880                           ;stkvar	_rem @ sp[(-14)+4]
 14881  015868  50E1               	movf	fsr1l,w,c
 14882  01586A  0FF6               	addlw	-10
 14883  01586C  6ED9               	movwf	fsr2l,c
 14884  01586E  50E2               	movf	fsr1h,w,c
 14885  015870  6EDA               	movwf	fsr2h,c
 14886  015872  0EFF               	movlw	255
 14887  015874  22DA               	addwfc	fsr2h,f,c
 14888  015876  0E90               	movlw	144
 14889  015878  26DE               	addwf	postinc2,f,c
 14890  01587A  0E01               	movlw	1
 14891  01587C  22DD               	addwfc	postdec2,f,c
 14892  01587E                     l11670:
 14893                           
 14894                           ;stkvar	_rem @ sp[(-14)+4]
 14895  01587E  0EF6               	movlw	-10
 14896  015880  006F FF8C  F02A    	movff	plusw1,btemp
 14897  015886  0EF7               	movlw	-9
 14898  015888  50E3               	movf	plusw1,w,c
 14899  01588A  102A               	iorwf	btemp^0,w,c
 14900  01588C  A4D8               	btfss	status,2,c
 14901  01588E  D015               	goto	l11678
 14902                           
 14903                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14904  015890  0EE8               	movlw	-24
 14905  015892  006F FF8F FFD9     	movff	plusw1,fsr2l
 14906  015898  0EE9               	movlw	-23
 14907  01589A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14908  0158A0  0E01               	movlw	1
 14909  0158A2  6EDE               	movwf	postinc2,c
 14910  0158A4  0E00               	movlw	0
 14911  0158A6  6EDD               	movwf	postdec2,c
 14912                           
 14913                           ;stkvar	_centuries @ sp[(-14)+8]
 14914  0158A8  0EFA               	movlw	-6
 14915  0158AA  6AE3               	clrf	plusw1,c
 14916  0158AC  0EFB               	movlw	-5
 14917  0158AE  6AE3               	clrf	plusw1,c
 14918  0158B0                     l11676:
 14919                           
 14920                           ;stkvar	_leaps @ sp[(-14)+10]
 14921  0158B0  0EFC               	movlw	-4
 14922  0158B2  6AE3               	clrf	plusw1,c
 14923  0158B4  0EFD               	movlw	-3
 14924  0158B6  6AE3               	clrf	plusw1,c
 14925  0158B8  D0D6               	goto	l11710
 14926  0158BA                     l11678:
 14927                           
 14928                           ;stkvar	_rem @ sp[(-14)+4]
 14929  0158BA  0EF7               	movlw	-9
 14930  0158BC  BEE3               	btfsc	plusw1,7,c
 14931  0158BE  D04A               	goto	l11690
 14932  0158C0  0EF7               	movlw	-9
 14933  0158C2  50E3               	movf	plusw1,w,c
 14934  0158C4  E108               	bnz	u10780
 14935  0158C6  0EF6               	movlw	-10
 14936  0158C8  006F FF8C  F02A    	movff	plusw1,btemp
 14937  0158CE  0EC8               	movlw	200
 14938  0158D0  5E2A               	subwf	btemp^0,f,c
 14939  0158D2  A0D8               	btfss	status,0,c
 14940  0158D4  D03F               	goto	l11690
 14941  0158D6                     u10780:
 14942                           
 14943                           ;stkvar	_rem @ sp[(-14)+4]
 14944  0158D6  0EF7               	movlw	-9
 14945  0158D8  BEE3               	btfsc	plusw1,7,c
 14946  0158DA  D025               	goto	l11686
 14947  0158DC  0EF6               	movlw	-10
 14948  0158DE  006F FF8C  F02A    	movff	plusw1,btemp
 14949  0158E4  0E2C               	movlw	44
 14950  0158E6  5E2A               	subwf	btemp^0,f,c
 14951  0158E8  0EF7               	movlw	-9
 14952  0158EA  006F FF8C  F02A    	movff	plusw1,btemp
 14953  0158F0  0E01               	movlw	1
 14954  0158F2  5A2A               	subwfb	btemp^0,f,c
 14955  0158F4  A0D8               	btfss	status,0,c
 14956  0158F6  D017               	goto	l11686
 14957  0158F8  0E03               	movlw	3
 14958  0158FA  6E34               	movwf	(btemp+10)^0,c
 14959  0158FC  0E00               	movlw	0
 14960  0158FE  6E35               	movwf	(btemp+11)^0,c
 14961                           
 14962                           ;stkvar	_centuries @ sp[(-14)+8]
 14963  015900  0EFA               	movlw	-6
 14964  015902  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14965  015908  0EFB               	movlw	-5
 14966  01590A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14967                           
 14968                           ;stkvar	_rem @ sp[(-14)+4]
 14969  015910  50E1               	movf	fsr1l,w,c
 14970  015912  0FF6               	addlw	-10
 14971  015914  6ED9               	movwf	fsr2l,c
 14972  015916  50E2               	movf	fsr1h,w,c
 14973  015918  6EDA               	movwf	fsr2h,c
 14974  01591A  0EFF               	movlw	255
 14975  01591C  22DA               	addwfc	fsr2h,f,c
 14976  01591E  0ED4               	movlw	212
 14977  015920  26DE               	addwf	postinc2,f,c
 14978  015922  0EFE               	movlw	254
 14979  015924  D015               	goto	L14
 14980  015926                     l11686:
 14981  015926  0E02               	movlw	2
 14982  015928  6E34               	movwf	(btemp+10)^0,c
 14983  01592A  0E00               	movlw	0
 14984  01592C  6E35               	movwf	(btemp+11)^0,c
 14985                           
 14986                           ;stkvar	_centuries @ sp[(-14)+8]
 14987  01592E  0EFA               	movlw	-6
 14988  015930  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14989  015936  0EFB               	movlw	-5
 14990  015938  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14991                           
 14992                           ;stkvar	_rem @ sp[(-14)+4]
 14993  01593E  50E1               	movf	fsr1l,w,c
 14994  015940  0FF6               	addlw	-10
 14995  015942  6ED9               	movwf	fsr2l,c
 14996  015944  50E2               	movf	fsr1h,w,c
 14997  015946  6EDA               	movwf	fsr2h,c
 14998  015948  0EFF               	movlw	255
 14999  01594A  22DA               	addwfc	fsr2h,f,c
 15000  01594C  0E38               	movlw	56
 15001  01594E  D024               	goto	L15
 15002  015950                     L14:
 15003  015950  22DD               	addwfc	postdec2,f,c
 15004  015952  D029               	goto	l11698
 15005  015954                     l11690:
 15006                           
 15007                           ;stkvar	_rem @ sp[(-14)+4]
 15008  015954  0EF7               	movlw	-9
 15009  015956  BEE3               	btfsc	plusw1,7,c
 15010  015958  D022               	goto	l11696
 15011  01595A  0EF7               	movlw	-9
 15012  01595C  50E3               	movf	plusw1,w,c
 15013  01595E  E108               	bnz	u10800
 15014  015960  0EF6               	movlw	-10
 15015  015962  006F FF8C  F02A    	movff	plusw1,btemp
 15016  015968  0E64               	movlw	100
 15017  01596A  5E2A               	subwf	btemp^0,f,c
 15018  01596C  A0D8               	btfss	status,0,c
 15019  01596E  D017               	goto	l11696
 15020  015970                     u10800:
 15021  015970  0E01               	movlw	1
 15022  015972  6E34               	movwf	(btemp+10)^0,c
 15023  015974  0E00               	movlw	0
 15024  015976  6E35               	movwf	(btemp+11)^0,c
 15025                           
 15026                           ;stkvar	_centuries @ sp[(-14)+8]
 15027  015978  0EFA               	movlw	-6
 15028  01597A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15029  015980  0EFB               	movlw	-5
 15030  015982  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15031                           
 15032                           ;stkvar	_rem @ sp[(-14)+4]
 15033  015988  50E1               	movf	fsr1l,w,c
 15034  01598A  0FF6               	addlw	-10
 15035  01598C  6ED9               	movwf	fsr2l,c
 15036  01598E  50E2               	movf	fsr1h,w,c
 15037  015990  6EDA               	movwf	fsr2h,c
 15038  015992  0EFF               	movlw	255
 15039  015994  22DA               	addwfc	fsr2h,f,c
 15040  015996  0E9C               	movlw	156
 15041  015998                     L15:
 15042  015998  26DE               	addwf	postinc2,f,c
 15043  01599A  0EFF               	movlw	255
 15044  01599C  D7D9               	goto	L14
 15045  01599E                     l11696:
 15046                           
 15047                           ;stkvar	_centuries @ sp[(-14)+8]
 15048  01599E  0EFA               	movlw	-6
 15049  0159A0  6AE3               	clrf	plusw1,c
 15050  0159A2  0EFB               	movlw	-5
 15051  0159A4  6AE3               	clrf	plusw1,c
 15052  0159A6                     l11698:
 15053                           
 15054                           ;stkvar	_rem @ sp[(-14)+4]
 15055  0159A6  0EF6               	movlw	-10
 15056  0159A8  006F FF8C  F02A    	movff	plusw1,btemp
 15057  0159AE  0EF7               	movlw	-9
 15058  0159B0  50E3               	movf	plusw1,w,c
 15059  0159B2  102A               	iorwf	btemp^0,w,c
 15060  0159B4  A4D8               	btfss	status,2,c
 15061  0159B6  D00D               	goto	l11704
 15062                           
 15063                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15064  0159B8  0EE8               	movlw	-24
 15065  0159BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15066  0159C0  0EE9               	movlw	-23
 15067  0159C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15068  0159C8  0E00               	movlw	0
 15069  0159CA  6EDE               	movwf	postinc2,c
 15070  0159CC  0E00               	movlw	0
 15071  0159CE  6EDD               	movwf	postdec2,c
 15072  0159D0  D76F               	goto	l11676
 15073  0159D2                     l11704:
 15074                           
 15075                           ;stkvar	_rem @ sp[(-14)+4]
 15076  0159D2  0EF6               	movlw	-10
 15077  0159D4  006F FF8C  F034    	movff	plusw1,btemp+10
 15078  0159DA  0EF7               	movlw	-9
 15079  0159DC  006F FF8C  F035    	movff	plusw1,btemp+11
 15080  0159E2  90D8               	bcf	status,0,c
 15081  0159E4  3235               	rrcf	(btemp+11)^0,f,c
 15082  0159E6  3234               	rrcf	(btemp+10)^0,f,c
 15083  0159E8  90D8               	bcf	status,0,c
 15084  0159EA  3235               	rrcf	(btemp+11)^0,f,c
 15085  0159EC  3234               	rrcf	(btemp+10)^0,f,c
 15086                           
 15087                           ;stkvar	_leaps @ sp[(-14)+10]
 15088  0159EE  0EFC               	movlw	-4
 15089  0159F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15090  0159F6  0EFD               	movlw	-3
 15091  0159F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15092  0159FE  0E03               	movlw	3
 15093  015A00  6E34               	movwf	(btemp+10)^0,c
 15094  015A02  0E00               	movlw	0
 15095  015A04  6E35               	movwf	(btemp+11)^0,c
 15096                           
 15097                           ;stkvar	_rem @ sp[(-14)+4]
 15098  015A06  0EF6               	movlw	-10
 15099  015A08  006F FF8C  F02A    	movff	plusw1,btemp
 15100  015A0E  5034               	movf	(btemp+10)^0,w,c
 15101  015A10  162A               	andwf	btemp^0,f,c
 15102  015A12  0EF6               	movlw	-10
 15103  015A14  0060  F0AB  FFE3   	movff	btemp,plusw1
 15104  015A1A  0EF7               	movlw	-9
 15105  015A1C  006F FF8C  F02A    	movff	plusw1,btemp
 15106  015A22  5035               	movf	(btemp+11)^0,w,c
 15107  015A24  162A               	andwf	btemp^0,f,c
 15108  015A26  0EF7               	movlw	-9
 15109  015A28  0060  F0AB  FFE3   	movff	btemp,plusw1
 15110                           
 15111                           ;stkvar	_rem @ sp[(-14)+4]
 15112  015A2E  0EF6               	movlw	-10
 15113  015A30  006F FF8C  F02A    	movff	plusw1,btemp
 15114  015A36  0EF7               	movlw	-9
 15115  015A38  50E3               	movf	plusw1,w,c
 15116  015A3A  102A               	iorwf	btemp^0,w,c
 15117  015A3C  A4D8               	btfss	status,2,c
 15118  015A3E  D002               	goto	u10820
 15119  015A40  0E01               	movlw	1
 15120  015A42  D001               	goto	u10830
 15121  015A44                     u10820:
 15122  015A44  0E00               	movlw	0
 15123  015A46                     u10830:
 15124  015A46  6E34               	movwf	(btemp+10)^0,c
 15125  015A48  6A35               	clrf	(btemp+11)^0,c
 15126                           
 15127                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15128  015A4A  0EE8               	movlw	-24
 15129  015A4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15130  015A52  0EE9               	movlw	-23
 15131  015A54  006F FF8F FFDA     	movff	plusw1,fsr2h
 15132  015A5A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15133  015A60  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15134  015A66                     l11710:
 15135                           
 15136                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15137  015A66  0EE8               	movlw	-24
 15138  015A68  006F FF8F FFD9     	movff	plusw1,fsr2l
 15139  015A6E  0EE9               	movlw	-23
 15140  015A70  006F FF8F FFDA     	movff	plusw1,fsr2h
 15141  015A76  006F FF78  F034    	movff	postinc2,btemp+10
 15142  015A7C  006F FF74  F035    	movff	postdec2,btemp+11
 15143                           
 15144                           ;stkvar	_centuries @ sp[(-14)+8]
 15145  015A82  0EFA               	movlw	-6
 15146  015A84  006F FF8C  F032    	movff	plusw1,btemp+8
 15147  015A8A  0EFB               	movlw	-5
 15148  015A8C  006F FF8C  F033    	movff	plusw1,btemp+9
 15149  015A92  0E18               	movlw	24
 15150  015A94  0232               	mulwf	(btemp+8)^0,c
 15151  015A96  006F FFCC  F030    	movff	prodl,btemp+6
 15152  015A9C  006F FFD0  F031    	movff	prodh,btemp+7
 15153  015AA2  0233               	mulwf	(btemp+9)^0,c
 15154  015AA4  50F3               	movf	prodl,w,c
 15155  015AA6  2631               	addwf	(btemp+7)^0,f,c
 15156                           
 15157                           ;stkvar	_cycles @ sp[(-14)+12]
 15158  015AA8  0EFE               	movlw	-2
 15159  015AAA  006F FF8C  F032    	movff	plusw1,btemp+8
 15160  015AB0  0EFF               	movlw	-1
 15161  015AB2  006F FF8C  F033    	movff	plusw1,btemp+9
 15162  015AB8  0E61               	movlw	97
 15163  015ABA  0232               	mulwf	(btemp+8)^0,c
 15164  015ABC  006F FFCC  F02E    	movff	prodl,btemp+4
 15165  015AC2  006F FFD0  F02F    	movff	prodh,btemp+5
 15166  015AC8  0233               	mulwf	(btemp+9)^0,c
 15167  015ACA  50F3               	movf	prodl,w,c
 15168  015ACC  262F               	addwf	(btemp+5)^0,f,c
 15169  015ACE  5030               	movf	(btemp+6)^0,w,c
 15170  015AD0  262E               	addwf	(btemp+4)^0,f,c
 15171  015AD2  5031               	movf	(btemp+7)^0,w,c
 15172  015AD4  222F               	addwfc	(btemp+5)^0,f,c
 15173  015AD6  5034               	movf	(btemp+10)^0,w,c
 15174  015AD8  5E2E               	subwf	(btemp+4)^0,f,c
 15175  015ADA  5035               	movf	(btemp+11)^0,w,c
 15176  015ADC  5A2F               	subwfb	(btemp+5)^0,f,c
 15177                           
 15178                           ;stkvar	_leaps @ sp[(-14)+10]
 15179  015ADE  50E1               	movf	fsr1l,w,c
 15180  015AE0  0FFC               	addlw	-4
 15181  015AE2  6ED9               	movwf	fsr2l,c
 15182  015AE4  50E2               	movf	fsr1h,w,c
 15183  015AE6  6EDA               	movwf	fsr2h,c
 15184  015AE8  0EFF               	movlw	255
 15185  015AEA  22DA               	addwfc	fsr2h,f,c
 15186  015AEC  502E               	movf	(btemp+4)^0,w,c
 15187  015AEE  26DE               	addwf	postinc2,f,c
 15188  015AF0  502F               	movf	(btemp+5)^0,w,c
 15189  015AF2  22DD               	addwfc	postdec2,f,c
 15190  015AF4  0E80               	movlw	128
 15191  015AF6  6EE6               	movwf	postinc1,c
 15192  015AF8  0E51               	movlw	81
 15193  015AFA  6EE6               	movwf	postinc1,c
 15194  015AFC  0E01               	movlw	1
 15195  015AFE  6EE6               	movwf	postinc1,c
 15196  015B00  0E00               	movlw	0
 15197  015B02  6EE6               	movwf	postinc1,c
 15198  015B04  0E00               	movlw	0
 15199  015B06  6EE6               	movwf	postinc1,c
 15200  015B08  0E00               	movlw	0
 15201  015B0A  6EE6               	movwf	postinc1,c
 15202  015B0C  0E00               	movlw	0
 15203  015B0E  6EE6               	movwf	postinc1,c
 15204  015B10  0E00               	movlw	0
 15205  015B12  6EE6               	movwf	postinc1,c
 15206                           
 15207                           ;stkvar	_leaps @ sp[(-22)+10]
 15208  015B14  0EF4               	movlw	-12
 15209  015B16  006F FF8C  F03A    	movff	plusw1,btemp+16
 15210  015B1C  0EF5               	movlw	-11
 15211  015B1E  006F FF8C  F03B    	movff	plusw1,btemp+17
 15212  015B24  6A3C               	clrf	(btemp+18)^0,c
 15213  015B26  BE3B               	btfsc	(btemp+17)^0,7,c
 15214  015B28  683C               	setf	(btemp+18)^0,c
 15215  015B2A  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 15216  015B30  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 15217  015B36  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 15218  015B3C  0060  F0F0  F040   	movff	btemp+18,btemp+22
 15219  015B42  0060  F0F0  F041   	movff	btemp+18,btemp+23
 15220  015B48  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15221  015B4E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15222  015B54  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15223  015B5A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15224  015B60  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15225  015B66  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15226  015B6C  0060  F103  FFE6   	movff	btemp+22,postinc1
 15227  015B72  0060  F107  FFE6   	movff	btemp+23,postinc1
 15228  015B78  ECB1  F0F6         	call	___omul	;wreg free
 15229  015B7C  52E5               	movf	postdec1,f,c
 15230  015B7E  006F FF9C  F041    	movff	indf1,btemp+23
 15231  015B84  52E5               	movf	postdec1,f,c
 15232  015B86  006F FF9C  F040    	movff	indf1,btemp+22
 15233  015B8C  52E5               	movf	postdec1,f,c
 15234  015B8E  006F FF9C  F03F    	movff	indf1,btemp+21
 15235  015B94  52E5               	movf	postdec1,f,c
 15236  015B96  006F FF9C  F03E    	movff	indf1,btemp+20
 15237  015B9C  52E5               	movf	postdec1,f,c
 15238  015B9E  006F FF9C  F03D    	movff	indf1,btemp+19
 15239  015BA4  52E5               	movf	postdec1,f,c
 15240  015BA6  006F FF9C  F03C    	movff	indf1,btemp+18
 15241  015BAC  52E5               	movf	postdec1,f,c
 15242  015BAE  006F FF9C  F03B    	movff	indf1,btemp+17
 15243  015BB4  52E5               	movf	postdec1,f,c
 15244  015BB6  006F FF9C  F03A    	movff	indf1,btemp+16
 15245  015BBC  0EF8               	movlw	248
 15246  015BBE  26E1               	addwf	fsr1l,f,c
 15247  015BC0  0EFF               	movlw	255
 15248  015BC2  22E2               	addwfc	fsr1h,f,c
 15249  015BC4  0E80               	movlw	128
 15250  015BC6  6EE6               	movwf	postinc1,c
 15251  015BC8  0E33               	movlw	51
 15252  015BCA  6EE6               	movwf	postinc1,c
 15253  015BCC  0EE1               	movlw	225
 15254  015BCE  6EE6               	movwf	postinc1,c
 15255  015BD0  0E01               	movlw	1
 15256  015BD2  6EE6               	movwf	postinc1,c
 15257  015BD4  0E00               	movlw	0
 15258  015BD6  6EE6               	movwf	postinc1,c
 15259  015BD8  0E00               	movlw	0
 15260  015BDA  6EE6               	movwf	postinc1,c
 15261  015BDC  0E00               	movlw	0
 15262  015BDE  6EE6               	movwf	postinc1,c
 15263  015BE0  0E00               	movlw	0
 15264  015BE2  6EE6               	movwf	postinc1,c
 15265                           
 15266                           ;stkvar	_year @ sp[(-22)+-8]
 15267  015BE4  50E1               	movf	fsr1l,w,c
 15268  015BE6  0FE2               	addlw	-30
 15269  015BE8  6ED9               	movwf	fsr2l,c
 15270  015BEA  50E2               	movf	fsr1h,w,c
 15271  015BEC  6EDA               	movwf	fsr2h,c
 15272  015BEE  0EFF               	movlw	255
 15273  015BF0  22DA               	addwfc	fsr2h,f,c
 15274  015BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 15275  015BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 15276  015BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 15277  015C04  006F FF7B FFE6     	movff	postinc2,postinc1
 15278  015C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 15279  015C10  006F FF7B FFE6     	movff	postinc2,postinc1
 15280  015C16  006F FF7B FFE6     	movff	postinc2,postinc1
 15281  015C1C  006F FF7B FFE6     	movff	postinc2,postinc1
 15282  015C22  ECB1  F0F6         	call	___omul	;wreg free
 15283  015C26  52E5               	movf	postdec1,f,c
 15284  015C28  006F FF9C  F049    	movff	indf1,btemp+31
 15285  015C2E  52E5               	movf	postdec1,f,c
 15286  015C30  006F FF9C  F048    	movff	indf1,btemp+30
 15287  015C36  52E5               	movf	postdec1,f,c
 15288  015C38  006F FF9C  F047    	movff	indf1,btemp+29
 15289  015C3E  52E5               	movf	postdec1,f,c
 15290  015C40  006F FF9C  F046    	movff	indf1,btemp+28
 15291  015C46  52E5               	movf	postdec1,f,c
 15292  015C48  006F FF9C  F045    	movff	indf1,btemp+27
 15293  015C4E  52E5               	movf	postdec1,f,c
 15294  015C50  006F FF9C  F044    	movff	indf1,btemp+26
 15295  015C56  52E5               	movf	postdec1,f,c
 15296  015C58  006F FF9C  F043    	movff	indf1,btemp+25
 15297  015C5E  52E5               	movf	postdec1,f,c
 15298  015C60  006F FF9C  F042    	movff	indf1,btemp+24
 15299  015C66  0EF8               	movlw	248
 15300  015C68  26E1               	addwf	fsr1l,f,c
 15301  015C6A  0EFF               	movlw	255
 15302  015C6C  22E2               	addwfc	fsr1h,f,c
 15303  015C6E  503A               	movf	(btemp+16)^0,w,c
 15304  015C70  2442               	addwf	(btemp+24)^0,w,c
 15305  015C72  6E32               	movwf	(btemp+8)^0,c
 15306  015C74  503B               	movf	(btemp+17)^0,w,c
 15307  015C76  2043               	addwfc	(btemp+25)^0,w,c
 15308  015C78  6E33               	movwf	(btemp+9)^0,c
 15309  015C7A  503C               	movf	(btemp+18)^0,w,c
 15310  015C7C  2044               	addwfc	(btemp+26)^0,w,c
 15311  015C7E  6E34               	movwf	(btemp+10)^0,c
 15312  015C80  503D               	movf	(btemp+19)^0,w,c
 15313  015C82  2045               	addwfc	(btemp+27)^0,w,c
 15314  015C84  6E35               	movwf	(btemp+11)^0,c
 15315  015C86  503E               	movf	(btemp+20)^0,w,c
 15316  015C88  2046               	addwfc	(btemp+28)^0,w,c
 15317  015C8A  6E36               	movwf	(btemp+12)^0,c
 15318  015C8C  503F               	movf	(btemp+21)^0,w,c
 15319  015C8E  2047               	addwfc	(btemp+29)^0,w,c
 15320  015C90  6E37               	movwf	(btemp+13)^0,c
 15321  015C92  5040               	movf	(btemp+22)^0,w,c
 15322  015C94  2048               	addwfc	(btemp+30)^0,w,c
 15323  015C96  6E38               	movwf	(btemp+14)^0,c
 15324  015C98  5041               	movf	(btemp+23)^0,w,c
 15325  015C9A  2049               	addwfc	(btemp+31)^0,w,c
 15326  015C9C  6E39               	movwf	(btemp+15)^0,c
 15327  015C9E  0E00               	movlw	0
 15328  015CA0  2432               	addwf	(btemp+8)^0,w,c
 15329  015CA2  6E3A               	movwf	(btemp+16)^0,c
 15330  015CA4  0E77               	movlw	119
 15331  015CA6  2033               	addwfc	(btemp+9)^0,w,c
 15332  015CA8  6E3B               	movwf	(btemp+17)^0,c
 15333  015CAA  0E76               	movlw	118
 15334  015CAC  2034               	addwfc	(btemp+10)^0,w,c
 15335  015CAE  6E3C               	movwf	(btemp+18)^0,c
 15336  015CB0  0E7C               	movlw	124
 15337  015CB2  2035               	addwfc	(btemp+11)^0,w,c
 15338  015CB4  6E3D               	movwf	(btemp+19)^0,c
 15339  015CB6  0EFF               	movlw	255
 15340  015CB8  2036               	addwfc	(btemp+12)^0,w,c
 15341  015CBA  6E3E               	movwf	(btemp+20)^0,c
 15342  015CBC  0EFF               	movlw	255
 15343  015CBE  2037               	addwfc	(btemp+13)^0,w,c
 15344  015CC0  6E3F               	movwf	(btemp+21)^0,c
 15345  015CC2  0EFF               	movlw	255
 15346  015CC4  2038               	addwfc	(btemp+14)^0,w,c
 15347  015CC6  6E40               	movwf	(btemp+22)^0,c
 15348  015CC8  0EFF               	movlw	255
 15349  015CCA  2039               	addwfc	(btemp+15)^0,w,c
 15350  015CCC  6E41               	movwf	(btemp+23)^0,c
 15351  015CCE                     L13:
 15352                           
 15353                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 15354  015CCE  0EEA               	movlw	-22
 15355  015CD0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 15356  015CD6  0EEB               	movlw	-21
 15357  015CD8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 15358  015CDE  0EEC               	movlw	-20
 15359  015CE0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 15360  015CE6  0EED               	movlw	-19
 15361  015CE8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 15362  015CEE  0EEE               	movlw	-18
 15363  015CF0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 15364  015CF6  0EEF               	movlw	-17
 15365  015CF8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 15366  015CFE  0EF0               	movlw	-16
 15367  015D00  0060  F103  FFE3   	movff	btemp+22,plusw1
 15368  015D06  0EF1               	movlw	-15
 15369  015D08  0060  F107  FFE3   	movff	btemp+23,plusw1
 15370                           
 15371                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 15372  015D0E  0EF2               	movlw	242
 15373  015D10  26E1               	addwf	fsr1l,f,c
 15374  015D12  0EFF               	movlw	255
 15375  015D14  22E2               	addwfc	fsr1h,f,c
 15376  015D16  0012               	return		;funcret
 15377  015D18                     __end_of___year_to_secs:
 15378                           	opt callstack 0
 15379                           
 15380 ;; *************** function ___month_to_secs *****************
 15381 ;; Defined at:
 15382 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 15383 ;; Parameters:    Size  Location     Type
 15384 ;;  month           2  [STACK] int 
 15385 ;;  is_leap         2  [STACK] int 
 15386 ;; Auto vars:     Size  Location     Type
 15387 ;;  t               4  [STACK] long 
 15388 ;; Return value:  Size  Location     Type
 15389 ;;                  4  [STACK] long 
 15390 ;; Registers used:
 15391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 15392 ;; Tracked objects:
 15393 ;;		On entry : 0/0
 15394 ;;		On exit  : 0/0
 15395 ;;		Unchanged: 0/0
 15396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15401 ;;Total ram usage:        0 bytes
 15402 ;; Hardware stack levels used:    1
 15403 ;; Hardware stack levels required when called:   15
 15404 ;; This function calls:
 15405 ;;		Nothing
 15406 ;; This function is called by:
 15407 ;;		_rule_to_secs
 15408 ;; This function uses a reentrant model
 15409 ;;
 15410                           
 15411                           	psect	text44
 15412  0000B6                     __ptext44:
 15413                           	opt callstack 0
 15414  0000B6                     ___month_to_secs:
 15415                           	opt callstack 0
 15416                           
 15417                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15418  0000B6  52E6               	movf	postinc1,f,c
 15419  0000B8  52E6               	movf	postinc1,f,c
 15420  0000BA  52E6               	movf	postinc1,f,c
 15421  0000BC  52E6               	movf	postinc1,f,c
 15422                           
 15423                           ;stkvar	_month @ sp[(-4)+-2]
 15424                           
 15425                           ;incstack = 0
 15426  0000BE  0EFA               	movlw	-6
 15427  0000C0  006F FF8C  F034    	movff	plusw1,btemp+10
 15428  0000C6  0EFB               	movlw	-5
 15429  0000C8  006F FF8C  F035    	movff	plusw1,btemp+11
 15430  0000CE  90D8               	bcf	status,0,c
 15431  0000D0  3634               	rlcf	(btemp+10)^0,f,c
 15432  0000D2  3635               	rlcf	(btemp+11)^0,f,c
 15433  0000D4  90D8               	bcf	status,0,c
 15434  0000D6  3634               	rlcf	(btemp+10)^0,f,c
 15435  0000D8  3635               	rlcf	(btemp+11)^0,f,c
 15436  0000DA  0E7B               	movlw	low ___month_to_secs@secs_through_month
 15437  0000DC  2434               	addwf	(btemp+10)^0,w,c
 15438  0000DE  6EF6               	movwf	tblptrl,c
 15439  0000E0  0EF8               	movlw	high ___month_to_secs@secs_through_month
 15440  0000E2  2035               	addwfc	(btemp+11)^0,w,c
 15441  0000E4  6EF7               	movwf	tblptrh,c
 15442  0000E6                     	if	1	;There are 3 active tblptr bytes
 15443  0000E6  6AF8               	clrf	tblptru,c
 15444  0000E8  0E00               	movlw	low (__mediumconst shr (0+16))
 15445  0000EA  22F8               	addwfc	tblptru,f,c
 15446  0000EC                     	endif
 15447  0000EC  0009               	tblrd		*+
 15448  0000EE  006F FFD4  F032    	movff	tablat,btemp+8
 15449  0000F4  0009               	tblrd		*+
 15450  0000F6  006F FFD4  F033    	movff	tablat,btemp+9
 15451  0000FC  0009               	tblrd		*+
 15452  0000FE  006F FFD4  F034    	movff	tablat,btemp+10
 15453  000104  0009               	tblrd		*+
 15454  000106  006F FFD4  F035    	movff	tablat,btemp+11
 15455                           
 15456                           ;stkvar	_t @ sp[(-4)+0]
 15457  00010C  0EFC               	movlw	-4
 15458  00010E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15459  000114  0EFD               	movlw	-3
 15460  000116  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15461  00011C  0EFE               	movlw	-2
 15462  00011E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15463  000124  0EFF               	movlw	-1
 15464  000126  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15465                           
 15466                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15467  00012C  0EF8               	movlw	-8
 15468  00012E  006F FF8C  F02A    	movff	plusw1,btemp
 15469  000134  0EF9               	movlw	-7
 15470  000136  50E3               	movf	plusw1,w,c
 15471  000138  102A               	iorwf	btemp^0,w,c
 15472  00013A  B4D8               	btfsc	status,2,c
 15473  00013C  D01D               	goto	l11724
 15474                           
 15475                           ;stkvar	_month @ sp[(-4)+-2]
 15476  00013E  0EFB               	movlw	-5
 15477  000140  BEE3               	btfsc	plusw1,7,c
 15478  000142  D01A               	goto	l11724
 15479  000144  0EFB               	movlw	-5
 15480  000146  50E3               	movf	plusw1,w,c
 15481  000148  E108               	bnz	u10850
 15482  00014A  0EFA               	movlw	-6
 15483  00014C  006F FF8C  F02A    	movff	plusw1,btemp
 15484  000152  0E02               	movlw	2
 15485  000154  5E2A               	subwf	btemp^0,f,c
 15486  000156  A0D8               	btfss	status,0,c
 15487  000158  D00F               	goto	l11724
 15488  00015A                     u10850:
 15489                           
 15490                           ;stkvar	_t @ sp[(-4)+0]
 15491  00015A  50E1               	movf	fsr1l,w,c
 15492  00015C  0FFC               	addlw	-4
 15493  00015E  6ED9               	movwf	fsr2l,c
 15494  000160  50E2               	movf	fsr1h,w,c
 15495  000162  6EDA               	movwf	fsr2h,c
 15496  000164  0EFF               	movlw	255
 15497  000166  22DA               	addwfc	fsr2h,f,c
 15498  000168  0E80               	movlw	128
 15499  00016A  26DE               	addwf	postinc2,f,c
 15500  00016C  0E51               	movlw	81
 15501  00016E  22DE               	addwfc	postinc2,f,c
 15502  000170  0E01               	movlw	1
 15503  000172  22DE               	addwfc	postinc2,f,c
 15504  000174  0E00               	movlw	0
 15505  000176  22DE               	addwfc	postinc2,f,c
 15506  000178                     l11724:
 15507                           
 15508                           ;stkvar	_t @ sp[(-4)+0]
 15509  000178  0EFC               	movlw	-4
 15510  00017A  006F FF8C  F02A    	movff	plusw1,btemp
 15511  000180  0EFD               	movlw	-3
 15512  000182  006F FF8C  F02B    	movff	plusw1,btemp+1
 15513  000188  0EFE               	movlw	-2
 15514  00018A  006F FF8C  F02C    	movff	plusw1,btemp+2
 15515  000190  0EFF               	movlw	-1
 15516  000192  006F FF8C  F02D    	movff	plusw1,btemp+3
 15517                           
 15518                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15519  000198  0EF8               	movlw	248
 15520  00019A  26E1               	addwf	fsr1l,f,c
 15521  00019C  0EFF               	movlw	255
 15522  00019E  22E2               	addwfc	fsr1h,f,c
 15523  0001A0  0012               	return		;funcret
 15524  0001A2                     __end_of___month_to_secs:
 15525                           	opt callstack 0
 15526                           
 15527 ;; *************** function _do_tzset *****************
 15528 ;; Defined at:
 15529 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15530 ;; Parameters:    Size  Location     Type
 15531 ;;		None
 15532 ;; Auto vars:     Size  Location     Type
 15533 ;;  s               2  [STACK] PTR const unsigned char 
 15534 ;;		 -> __gmt(4), 
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1  [STACK] void 
 15537 ;; Registers used:
 15538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/39
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15548 ;;Total ram usage:        0 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; Hardware stack levels required when called:   18
 15551 ;; This function calls:
 15552 ;;		_getname
 15553 ;;		_getoff
 15554 ;;		_getrule
 15555 ;; This function is called by:
 15556 ;;		___secs_to_zone
 15557 ;; This function uses a reentrant model
 15558 ;;
 15559                           
 15560                           	psect	text45
 15561  01BCCE                     __ptext45:
 15562                           	opt callstack 0
 15563  01BCCE                     _do_tzset:
 15564                           	opt callstack 0
 15565                           
 15566                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15567  01BCCE  52E6               	movf	postinc1,f,c
 15568  01BCD0  52E6               	movf	postinc1,f,c
 15569                           
 15570                           ;stkvar	_s @ sp[(-2)+0]
 15571                           
 15572                           ;incstack = 0
 15573  01BCD2  0EF9               	movlw	high ___gmt
 15574  01BCD4  6E2A               	movwf	btemp^0,c
 15575  01BCD6  0EFF               	movlw	-1
 15576  01BCD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 15577  01BCDE  0EE7               	movlw	low ___gmt
 15578  01BCE0  6E2A               	movwf	btemp^0,c
 15579  01BCE2  0EFE               	movlw	-2
 15580  01BCE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 15581                           
 15582                           ;stkvar	_s @ sp[(-2)+0]
 15583  01BCEA  0EFE               	movlw	254
 15584  01BCEC  24E1               	addwf	fsr1l,w,c
 15585  01BCEE  6E2A               	movwf	btemp^0,c
 15586  01BCF0  0EFF               	movlw	255
 15587  01BCF2  20E2               	addwfc	fsr1h,w,c
 15588  01BCF4  6E2B               	movwf	(btemp+1)^0,c
 15589  01BCF6  0060  F0AB  FFE6   	movff	btemp,postinc1
 15590  01BCFC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15591  01BD02  0EF6               	movlw	low _std_name
 15592  01BD04  6EE6               	movwf	postinc1,c
 15593  01BD06  0E01               	movlw	high _std_name
 15594  01BD08  6EE6               	movwf	postinc1,c
 15595  01BD0A  EC3B  F0D7         	call	_getname	;wreg free
 15596  01BD0E  0EF6               	movlw	low _std_name
 15597  01BD10  0100               	movlb	0	; () banked
 15598  01BD12  6F6C               	movwf	___tzname& (0+255),b
 15599  01BD14  0E01               	movlw	high _std_name
 15600  01BD16  6F6D               	movwf	(___tzname+1)& (0+255),b
 15601                           
 15602                           ; BSR set to: 0
 15603                           ;stkvar	_s @ sp[(-2)+0]
 15604  01BD18  0EFE               	movlw	254
 15605  01BD1A  24E1               	addwf	fsr1l,w,c
 15606  01BD1C  6E2A               	movwf	btemp^0,c
 15607  01BD1E  0EFF               	movlw	255
 15608  01BD20  20E2               	addwfc	fsr1h,w,c
 15609  01BD22  6E2B               	movwf	(btemp+1)^0,c
 15610  01BD24  0060  F0AB  FFE6   	movff	btemp,postinc1
 15611  01BD2A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15612  01BD30  ECC6  F0E6         	call	_getoff	;wreg free
 15613  01BD34  0060  F0A8  F070   	movff	btemp,___timezone
 15614  01BD3A  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15615  01BD40  0100               	movlb	0	; () banked
 15616  01BD42  0E00               	movlw	0
 15617  01BD44  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15618  01BD46  0EFF               	movlw	-1
 15619  01BD48  6F72               	movwf	(___timezone+2)& (0+255),b
 15620  01BD4A  6F73               	movwf	(___timezone+3)& (0+255),b
 15621                           
 15622                           ; BSR set to: 0
 15623                           ;stkvar	_s @ sp[(-2)+0]
 15624  01BD4C  0EFE               	movlw	254
 15625  01BD4E  24E1               	addwf	fsr1l,w,c
 15626  01BD50  6E2A               	movwf	btemp^0,c
 15627  01BD52  0EFF               	movlw	255
 15628  01BD54  20E2               	addwfc	fsr1h,w,c
 15629  01BD56  6E2B               	movwf	(btemp+1)^0,c
 15630  01BD58  0060  F0AB  FFE6   	movff	btemp,postinc1
 15631  01BD5E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15632  01BD64  0EEF               	movlw	low _dst_name
 15633  01BD66  6EE6               	movwf	postinc1,c
 15634  01BD68  0E01               	movlw	high _dst_name
 15635  01BD6A  6EE6               	movwf	postinc1,c
 15636  01BD6C  EC3B  F0D7         	call	_getname	;wreg free
 15637  01BD70  0EEF               	movlw	low _dst_name
 15638  01BD72  0100               	movlb	0	; () banked
 15639  01BD74  6F6E               	movwf	(___tzname+2)& (0+255),b
 15640  01BD76  0E01               	movlw	high _dst_name
 15641  01BD78  6F6F               	movwf	(___tzname+3)& (0+255),b
 15642                           
 15643                           ; BSR set to: 0
 15644  01BD7A  0101               	movlb	1	; () banked
 15645  01BD7C  51EF               	movf	_dst_name& (0+255),w,b
 15646  01BD7E  B4D8               	btfsc	status,2,c
 15647  01BD80  D070               	goto	l3969
 15648                           
 15649                           ; BSR set to: 1
 15650  01BD82  0E00               	movlw	0
 15651  01BD84  0100               	movlb	0	; () banked
 15652  01BD86  6FB9               	movwf	(___daylight+1)& (0+255),b
 15653  01BD88  0E01               	movlw	1
 15654  01BD8A  6FB8               	movwf	___daylight& (0+255),b
 15655                           
 15656                           ; BSR set to: 0
 15657                           ;stkvar	_s @ sp[(-2)+0]
 15658  01BD8C  50E1               	movf	fsr1l,w,c
 15659  01BD8E  0FFE               	addlw	-2
 15660  01BD90  6ED9               	movwf	fsr2l,c
 15661  01BD92  50E2               	movf	fsr1h,w,c
 15662  01BD94  6EDA               	movwf	fsr2h,c
 15663  01BD96  0EFF               	movlw	255
 15664  01BD98  22DA               	addwfc	fsr2h,f,c
 15665  01BD9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15666  01BDA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15667  01BDA6                     	if	0	;tblptru may be non-zero
 15668  01BDA6                     	endif
 15669  01BDA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15670  01BDA6  0E00               	movlw	low (__mediumconst shr (0+16))
 15671  01BDA8  6EF8               	movwf	tblptru,c
 15672  01BDAA                     	endif
 15673  01BDAA  0008               	tblrd		*
 15674  01BDAC  50F5               	movf	tablat,w,c
 15675  01BDAE  0A2B               	xorlw	43
 15676  01BDB0  B4D8               	btfsc	status,2,c
 15677  01BDB2  D035               	goto	u16010
 15678                           
 15679                           ; BSR set to: 0
 15680                           ;stkvar	_s @ sp[(-2)+0]
 15681  01BDB4  50E1               	movf	fsr1l,w,c
 15682  01BDB6  0FFE               	addlw	-2
 15683  01BDB8  6ED9               	movwf	fsr2l,c
 15684  01BDBA  50E2               	movf	fsr1h,w,c
 15685  01BDBC  6EDA               	movwf	fsr2h,c
 15686  01BDBE  0EFF               	movlw	255
 15687  01BDC0  22DA               	addwfc	fsr2h,f,c
 15688  01BDC2  006F FF7B FFF6     	movff	postinc2,tblptrl
 15689  01BDC8  006F FF77 FFF7     	movff	postdec2,tblptrh
 15690  01BDCE                     	if	0	;tblptru may be non-zero
 15691  01BDCE                     	endif
 15692  01BDCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15693  01BDCE  0E00               	movlw	low (__mediumconst shr (0+16))
 15694  01BDD0  6EF8               	movwf	tblptru,c
 15695  01BDD2                     	endif
 15696  01BDD2  0008               	tblrd		*
 15697  01BDD4  50F5               	movf	tablat,w,c
 15698  01BDD6  0A2D               	xorlw	45
 15699  01BDD8  B4D8               	btfsc	status,2,c
 15700  01BDDA  D021               	goto	u16010
 15701                           
 15702                           ; BSR set to: 0
 15703  01BDDC  0ED0               	movlw	208
 15704  01BDDE  6E34               	movwf	(btemp+10)^0,c
 15705  01BDE0  0EFF               	movlw	255
 15706  01BDE2  6E35               	movwf	(btemp+11)^0,c
 15707                           
 15708                           ;stkvar	_s @ sp[(-2)+0]
 15709  01BDE4  50E1               	movf	fsr1l,w,c
 15710  01BDE6  0FFE               	addlw	-2
 15711  01BDE8  6ED9               	movwf	fsr2l,c
 15712  01BDEA  50E2               	movf	fsr1h,w,c
 15713  01BDEC  6EDA               	movwf	fsr2h,c
 15714  01BDEE  0EFF               	movlw	255
 15715  01BDF0  22DA               	addwfc	fsr2h,f,c
 15716  01BDF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 15717  01BDF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 15718  01BDFE                     	if	0	;tblptru may be non-zero
 15719  01BDFE                     	endif
 15720  01BDFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15721  01BDFE  0E00               	movlw	low (__mediumconst shr (0+16))
 15722  01BE00  6EF8               	movwf	tblptru,c
 15723  01BE02                     	endif
 15724  01BE02  0008               	tblrd		*
 15725  01BE04  50F5               	movf	tablat,w,c
 15726  01BE06  6E32               	movwf	(btemp+8)^0,c
 15727  01BE08  6A33               	clrf	(btemp+9)^0,c
 15728  01BE0A  5034               	movf	(btemp+10)^0,w,c
 15729  01BE0C  2632               	addwf	(btemp+8)^0,f,c
 15730  01BE0E  5035               	movf	(btemp+11)^0,w,c
 15731  01BE10  2233               	addwfc	(btemp+9)^0,f,c
 15732  01BE12  5033               	movf	(btemp+9)^0,w,c
 15733  01BE14  E119               	bnz	l16406
 15734  01BE16  0E0A               	movlw	10
 15735  01BE18  5C32               	subwf	(btemp+8)^0,w,c
 15736  01BE1A  B0D8               	btfsc	status,0,c
 15737  01BE1C  D015               	goto	l16406
 15738  01BE1E                     u16010:
 15739                           
 15740                           ; BSR set to: 0
 15741                           ;stkvar	_s @ sp[(-2)+0]
 15742  01BE1E  0EFE               	movlw	254
 15743  01BE20  24E1               	addwf	fsr1l,w,c
 15744  01BE22  6E2A               	movwf	btemp^0,c
 15745  01BE24  0EFF               	movlw	255
 15746  01BE26  20E2               	addwfc	fsr1h,w,c
 15747  01BE28  6E2B               	movwf	(btemp+1)^0,c
 15748  01BE2A  0060  F0AB  FFE6   	movff	btemp,postinc1
 15749  01BE30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15750  01BE36  ECC6  F0E6         	call	_getoff	;wreg free
 15751  01BE3A  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15752  01BE40  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15753  01BE46  D012               	goto	l16408
 15754  01BE48                     l16406:
 15755                           
 15756                           ; BSR set to: 0
 15757  01BE48  0060  F1C0  F034   	movff	___timezone,btemp+10
 15758  01BE4E  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15759  01BE54  0EF0               	movlw	240
 15760  01BE56  2434               	addwf	(btemp+10)^0,w,c
 15761  01BE58  6FB6               	movwf	_dst_off& (0+255),b
 15762  01BE5A  0EF1               	movlw	241
 15763  01BE5C  2035               	addwfc	(btemp+11)^0,w,c
 15764  01BE5E  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15765  01BE60  D005               	goto	l16408
 15766  01BE62                     l3969:
 15767                           
 15768                           ; BSR set to: 1
 15769  01BE62  0100               	movlb	0	; () banked
 15770  01BE64  6BB8               	clrf	___daylight& (0+255),b
 15771  01BE66  6BB9               	clrf	(___daylight+1)& (0+255),b
 15772  01BE68  6BB6               	clrf	_dst_off& (0+255),b
 15773  01BE6A  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15774  01BE6C                     l16408:
 15775                           
 15776                           ;stkvar	_s @ sp[(-2)+0]
 15777  01BE6C  50E1               	movf	fsr1l,w,c
 15778  01BE6E  0FFE               	addlw	-2
 15779  01BE70  6ED9               	movwf	fsr2l,c
 15780  01BE72  50E2               	movf	fsr1h,w,c
 15781  01BE74  6EDA               	movwf	fsr2h,c
 15782  01BE76  0EFF               	movlw	255
 15783  01BE78  22DA               	addwfc	fsr2h,f,c
 15784  01BE7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15785  01BE80  006F FF77 FFF7     	movff	postdec2,tblptrh
 15786  01BE86                     	if	0	;tblptru may be non-zero
 15787  01BE86                     	endif
 15788  01BE86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15789  01BE86  0E00               	movlw	low (__mediumconst shr (0+16))
 15790  01BE88  6EF8               	movwf	tblptru,c
 15791  01BE8A                     	endif
 15792  01BE8A  0008               	tblrd		*
 15793  01BE8C  50F5               	movf	tablat,w,c
 15794  01BE8E  0A2C               	xorlw	44
 15795  01BE90  A4D8               	btfss	status,2,c
 15796  01BE92  D023               	goto	l16414
 15797                           
 15798                           ;stkvar	_s @ sp[(-2)+0]
 15799  01BE94  0EFE               	movlw	-2
 15800  01BE96  50E3               	movf	plusw1,w,c
 15801  01BE98  0F01               	addlw	1
 15802  01BE9A  6E2A               	movwf	btemp^0,c
 15803  01BE9C  0EFE               	movlw	-2
 15804  01BE9E  0060  F0AB  FFE3   	movff	btemp,plusw1
 15805  01BEA4  6A2A               	clrf	btemp^0,c
 15806  01BEA6  0EFF               	movlw	-1
 15807  01BEA8  50E3               	movf	plusw1,w,c
 15808  01BEAA  202A               	addwfc	btemp^0,w,c
 15809  01BEAC  6E2A               	movwf	btemp^0,c
 15810  01BEAE  0EFF               	movlw	-1
 15811  01BEB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 15812  01BEB6  0EE5               	movlw	low _r0
 15813  01BEB8  6EE6               	movwf	postinc1,c
 15814  01BEBA  0E01               	movlw	high _r0
 15815  01BEBC  6EE6               	movwf	postinc1,c
 15816                           
 15817                           ;stkvar	_s @ sp[(-4)+0]
 15818  01BEBE  0EFC               	movlw	252
 15819  01BEC0  24E1               	addwf	fsr1l,w,c
 15820  01BEC2  6E2A               	movwf	btemp^0,c
 15821  01BEC4  0EFF               	movlw	255
 15822  01BEC6  20E2               	addwfc	fsr1h,w,c
 15823  01BEC8  6E2B               	movwf	(btemp+1)^0,c
 15824  01BECA  0060  F0AB  FFE6   	movff	btemp,postinc1
 15825  01BED0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15826  01BED6  ECA7  F0DF         	call	_getrule	;wreg free
 15827  01BEDA                     l16414:
 15828                           
 15829                           ;stkvar	_s @ sp[(-2)+0]
 15830  01BEDA  50E1               	movf	fsr1l,w,c
 15831  01BEDC  0FFE               	addlw	-2
 15832  01BEDE  6ED9               	movwf	fsr2l,c
 15833  01BEE0  50E2               	movf	fsr1h,w,c
 15834  01BEE2  6EDA               	movwf	fsr2h,c
 15835  01BEE4  0EFF               	movlw	255
 15836  01BEE6  22DA               	addwfc	fsr2h,f,c
 15837  01BEE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15838  01BEEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15839  01BEF4                     	if	0	;tblptru may be non-zero
 15840  01BEF4                     	endif
 15841  01BEF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15842  01BEF4  0E00               	movlw	low (__mediumconst shr (0+16))
 15843  01BEF6  6EF8               	movwf	tblptru,c
 15844  01BEF8                     	endif
 15845  01BEF8  0008               	tblrd		*
 15846  01BEFA  50F5               	movf	tablat,w,c
 15847  01BEFC  0A2C               	xorlw	44
 15848  01BEFE  A4D8               	btfss	status,2,c
 15849  01BF00  D023               	goto	l3977
 15850                           
 15851                           ;stkvar	_s @ sp[(-2)+0]
 15852  01BF02  0EFE               	movlw	-2
 15853  01BF04  50E3               	movf	plusw1,w,c
 15854  01BF06  0F01               	addlw	1
 15855  01BF08  6E2A               	movwf	btemp^0,c
 15856  01BF0A  0EFE               	movlw	-2
 15857  01BF0C  0060  F0AB  FFE3   	movff	btemp,plusw1
 15858  01BF12  6A2A               	clrf	btemp^0,c
 15859  01BF14  0EFF               	movlw	-1
 15860  01BF16  50E3               	movf	plusw1,w,c
 15861  01BF18  202A               	addwfc	btemp^0,w,c
 15862  01BF1A  6E2A               	movwf	btemp^0,c
 15863  01BF1C  0EFF               	movlw	-1
 15864  01BF1E  0060  F0AB  FFE3   	movff	btemp,plusw1
 15865  01BF24  0EDB               	movlw	low _r1
 15866  01BF26  6EE6               	movwf	postinc1,c
 15867  01BF28  0E01               	movlw	high _r1
 15868  01BF2A  6EE6               	movwf	postinc1,c
 15869                           
 15870                           ;stkvar	_s @ sp[(-4)+0]
 15871  01BF2C  0EFC               	movlw	252
 15872  01BF2E  24E1               	addwf	fsr1l,w,c
 15873  01BF30  6E2A               	movwf	btemp^0,c
 15874  01BF32  0EFF               	movlw	255
 15875  01BF34  20E2               	addwfc	fsr1h,w,c
 15876  01BF36  6E2B               	movwf	(btemp+1)^0,c
 15877  01BF38  0060  F0AB  FFE6   	movff	btemp,postinc1
 15878  01BF3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15879  01BF44  ECA7  F0DF         	call	_getrule	;wreg free
 15880  01BF48                     l3977:
 15881                           
 15882                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15883  01BF48  52E5               	movf	postdec1,f,c
 15884  01BF4A  52E5               	movf	postdec1,f,c
 15885  01BF4C  0012               	return		;funcret
 15886  01BF4E                     __end_of_do_tzset:
 15887                           	opt callstack 0
 15888                           
 15889 ;; *************** function _getrule *****************
 15890 ;; Defined at:
 15891 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15892 ;; Parameters:    Size  Location     Type
 15893 ;;  p               2  [STACK] PTR PTR const unsigned c
 15894 ;;		 -> s(2), 
 15895 ;;  rule            2  [STACK] PTR int 
 15896 ;;		 -> r1(10), r0(10), 
 15897 ;; Auto vars:     Size  Location     Type
 15898 ;;  r               2  [STACK] int 
 15899 ;; Return value:  Size  Location     Type
 15900 ;;                  1  [STACK] void 
 15901 ;; Registers used:
 15902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15903 ;; Tracked objects:
 15904 ;;		On entry : 0/0
 15905 ;;		On exit  : 0/0
 15906 ;;		Unchanged: 0/0
 15907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15912 ;;Total ram usage:        0 bytes
 15913 ;; Hardware stack levels used:    1
 15914 ;; Hardware stack levels required when called:   17
 15915 ;; This function calls:
 15916 ;;		_getint
 15917 ;;		_getoff
 15918 ;; This function is called by:
 15919 ;;		_do_tzset
 15920 ;; This function uses a reentrant model
 15921 ;;
 15922                           
 15923                           	psect	text46
 15924  01BF4E                     __ptext46:
 15925                           	opt callstack 0
 15926  01BF4E                     _getrule:
 15927                           	opt callstack 0
 15928                           
 15929                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15930  01BF4E  52E6               	movf	postinc1,f,c
 15931  01BF50  52E6               	movf	postinc1,f,c
 15932                           
 15933                           ;stkvar	_p @ sp[(-2)+-2]
 15934                           
 15935                           ;incstack = 0
 15936  01BF52  0EFC               	movlw	-4
 15937  01BF54  006F FF8F FFD9     	movff	plusw1,fsr2l
 15938  01BF5A  0EFD               	movlw	-3
 15939  01BF5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15940  01BF62  006F FF7B FFF6     	movff	postinc2,tblptrl
 15941  01BF68  006F FF77 FFF7     	movff	postdec2,tblptrh
 15942  01BF6E                     	if	0	;tblptru may be non-zero
 15943  01BF6E                     	endif
 15944  01BF6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15945  01BF6E  0E00               	movlw	low (__mediumconst shr (0+16))
 15946  01BF70  6EF8               	movwf	tblptru,c
 15947  01BF72                     	endif
 15948  01BF72  0008               	tblrd		*
 15949  01BF74  50F5               	movf	tablat,w,c
 15950  01BF76  6E34               	movwf	(btemp+10)^0,c
 15951  01BF78  6A35               	clrf	(btemp+11)^0,c
 15952                           
 15953                           ;stkvar	_rule @ sp[(-2)+-4]
 15954  01BF7A  0EFA               	movlw	-6
 15955  01BF7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15956  01BF82  0EFB               	movlw	-5
 15957  01BF84  006F FF8F FFDA     	movff	plusw1,fsr2h
 15958  01BF8A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15959  01BF90  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15960  01BF96  006F FF78  F034    	movff	postinc2,btemp+10
 15961  01BF9C  006F FF74  F035    	movff	postdec2,btemp+11
 15962                           
 15963                           ;stkvar	_r @ sp[(-2)+0]
 15964  01BFA2  0EFE               	movlw	-2
 15965  01BFA4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15966  01BFAA  0EFF               	movlw	-1
 15967  01BFAC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15968                           
 15969                           ;stkvar	_r @ sp[(-2)+0]
 15970  01BFB2  0EFE               	movlw	-2
 15971  01BFB4  006F FF8C  F02A    	movff	plusw1,btemp
 15972  01BFBA  0E4D               	movlw	77
 15973  01BFBC  182A               	xorwf	btemp^0,w,c
 15974  01BFBE  E104               	bnz	u15590
 15975  01BFC0  0EFF               	movlw	-1
 15976  01BFC2  50E3               	movf	plusw1,w,c
 15977  01BFC4  B4D8               	btfsc	status,2,c
 15978  01BFC6  D036               	goto	l16104
 15979  01BFC8                     u15590:
 15980                           
 15981                           ;stkvar	_r @ sp[(-2)+0]
 15982  01BFC8  0EFE               	movlw	-2
 15983  01BFCA  006F FF8C  F02A    	movff	plusw1,btemp
 15984  01BFD0  0E4A               	movlw	74
 15985  01BFD2  182A               	xorwf	btemp^0,w,c
 15986  01BFD4  E110               	bnz	l16100
 15987  01BFD6  0EFF               	movlw	-1
 15988  01BFD8  50E3               	movf	plusw1,w,c
 15989  01BFDA  A4D8               	btfss	status,2,c
 15990  01BFDC  D00C               	goto	l16100
 15991                           
 15992                           ;stkvar	_p @ sp[(-2)+-2]
 15993  01BFDE  0EFC               	movlw	-4
 15994  01BFE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15995  01BFE6  0EFD               	movlw	-3
 15996  01BFE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15997  01BFEE  2ADE               	incf	postinc2,f,c
 15998  01BFF0  0E00               	movlw	0
 15999  01BFF2  22DD               	addwfc	postdec2,f,c
 16000  01BFF4  D00C               	goto	l16102
 16001  01BFF6                     l16100:
 16002                           
 16003                           ;stkvar	_rule @ sp[(-2)+-4]
 16004  01BFF6  0EFA               	movlw	-6
 16005  01BFF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16006  01BFFE  0EFB               	movlw	-5
 16007  01C000  006F FF8F FFDA     	movff	plusw1,fsr2h
 16008  01C006  0E00               	movlw	0
 16009  01C008  6EDE               	movwf	postinc2,c
 16010  01C00A  0E00               	movlw	0
 16011  01C00C  6EDD               	movwf	postdec2,c
 16012  01C00E                     l16102:
 16013                           
 16014                           ;stkvar	_p @ sp[(-2)+-2]
 16015  01C00E  0EFC               	movlw	-4
 16016  01C010  006F FF8F FFE6     	movff	plusw1,postinc1
 16017  01C016  006F FF8F FFE6     	movff	plusw1,postinc1
 16018  01C01C  EC46  F0FF         	call	_getint	;wreg free
 16019                           
 16020                           ;stkvar	_rule @ sp[(-2)+-4]
 16021  01C020  0EFA               	movlw	-6
 16022  01C022  006F FF8C  F034    	movff	plusw1,btemp+10
 16023  01C028  0EFB               	movlw	-5
 16024  01C02A  006F FF8C  F035    	movff	plusw1,btemp+11
 16025  01C030  0E02               	movlw	2
 16026  01C032  D06D               	goto	L16
 16027  01C034                     l16104:
 16028                           
 16029                           ;stkvar	_p @ sp[(-2)+-2]
 16030  01C034  0EFC               	movlw	-4
 16031  01C036  006F FF8F FFD9     	movff	plusw1,fsr2l
 16032  01C03C  0EFD               	movlw	-3
 16033  01C03E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16034  01C044  2ADE               	incf	postinc2,f,c
 16035  01C046  0E00               	movlw	0
 16036  01C048  22DD               	addwfc	postdec2,f,c
 16037                           
 16038                           ;stkvar	_p @ sp[(-2)+-2]
 16039  01C04A  0EFC               	movlw	-4
 16040  01C04C  006F FF8F FFE6     	movff	plusw1,postinc1
 16041  01C052  006F FF8F FFE6     	movff	plusw1,postinc1
 16042  01C058  EC46  F0FF         	call	_getint	;wreg free
 16043                           
 16044                           ;stkvar	_rule @ sp[(-2)+-4]
 16045  01C05C  0EFA               	movlw	-6
 16046  01C05E  006F FF8C  F034    	movff	plusw1,btemp+10
 16047  01C064  0EFB               	movlw	-5
 16048  01C066  006F FF8C  F035    	movff	plusw1,btemp+11
 16049  01C06C  0E02               	movlw	2
 16050  01C06E  2434               	addwf	(btemp+10)^0,w,c
 16051  01C070  6ED9               	movwf	fsr2l,c
 16052  01C072  0E00               	movlw	0
 16053  01C074  2035               	addwfc	(btemp+11)^0,w,c
 16054  01C076  6EDA               	movwf	fsr2h,c
 16055  01C078  0060  F0AB  FFDE   	movff	btemp,postinc2
 16056  01C07E  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16057                           
 16058                           ;stkvar	_p @ sp[(-2)+-2]
 16059  01C084  0EFC               	movlw	-4
 16060  01C086  006F FF8F FFD9     	movff	plusw1,fsr2l
 16061  01C08C  0EFD               	movlw	-3
 16062  01C08E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16063  01C094  2ADE               	incf	postinc2,f,c
 16064  01C096  0E00               	movlw	0
 16065  01C098  22DD               	addwfc	postdec2,f,c
 16066                           
 16067                           ;stkvar	_p @ sp[(-2)+-2]
 16068  01C09A  0EFC               	movlw	-4
 16069  01C09C  006F FF8F FFE6     	movff	plusw1,postinc1
 16070  01C0A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16071  01C0A8  EC46  F0FF         	call	_getint	;wreg free
 16072                           
 16073                           ;stkvar	_rule @ sp[(-2)+-4]
 16074  01C0AC  0EFA               	movlw	-6
 16075  01C0AE  006F FF8C  F034    	movff	plusw1,btemp+10
 16076  01C0B4  0EFB               	movlw	-5
 16077  01C0B6  006F FF8C  F035    	movff	plusw1,btemp+11
 16078  01C0BC  0E04               	movlw	4
 16079  01C0BE  2434               	addwf	(btemp+10)^0,w,c
 16080  01C0C0  6ED9               	movwf	fsr2l,c
 16081  01C0C2  0E00               	movlw	0
 16082  01C0C4  2035               	addwfc	(btemp+11)^0,w,c
 16083  01C0C6  6EDA               	movwf	fsr2h,c
 16084  01C0C8  0060  F0AB  FFDE   	movff	btemp,postinc2
 16085  01C0CE  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16086                           
 16087                           ;stkvar	_p @ sp[(-2)+-2]
 16088  01C0D4  0EFC               	movlw	-4
 16089  01C0D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16090  01C0DC  0EFD               	movlw	-3
 16091  01C0DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16092  01C0E4  2ADE               	incf	postinc2,f,c
 16093  01C0E6  0E00               	movlw	0
 16094  01C0E8  22DD               	addwfc	postdec2,f,c
 16095                           
 16096                           ;stkvar	_p @ sp[(-2)+-2]
 16097  01C0EA  0EFC               	movlw	-4
 16098  01C0EC  006F FF8F FFE6     	movff	plusw1,postinc1
 16099  01C0F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16100  01C0F8  EC46  F0FF         	call	_getint	;wreg free
 16101                           
 16102                           ;stkvar	_rule @ sp[(-2)+-4]
 16103  01C0FC  0EFA               	movlw	-6
 16104  01C0FE  006F FF8C  F034    	movff	plusw1,btemp+10
 16105  01C104  0EFB               	movlw	-5
 16106  01C106  006F FF8C  F035    	movff	plusw1,btemp+11
 16107  01C10C  0E06               	movlw	6
 16108  01C10E                     L16:
 16109  01C10E  2434               	addwf	(btemp+10)^0,w,c
 16110  01C110  6ED9               	movwf	fsr2l,c
 16111  01C112  0E00               	movlw	0
 16112  01C114  2035               	addwfc	(btemp+11)^0,w,c
 16113  01C116  6EDA               	movwf	fsr2h,c
 16114  01C118  0060  F0AB  FFDE   	movff	btemp,postinc2
 16115  01C11E  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16116                           
 16117                           ;stkvar	_p @ sp[(-2)+-2]
 16118  01C124  0EFC               	movlw	-4
 16119  01C126  006F FF8F FFD9     	movff	plusw1,fsr2l
 16120  01C12C  0EFD               	movlw	-3
 16121  01C12E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16122  01C134  006F FF7B FFF6     	movff	postinc2,tblptrl
 16123  01C13A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16124  01C140                     	if	0	;tblptru may be non-zero
 16125  01C140                     	endif
 16126  01C140                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16127  01C140  0E00               	movlw	low (__mediumconst shr (0+16))
 16128  01C142  6EF8               	movwf	tblptru,c
 16129  01C144                     	endif
 16130  01C144  0008               	tblrd		*
 16131  01C146  50F5               	movf	tablat,w,c
 16132  01C148  0A2F               	xorlw	47
 16133  01C14A  A4D8               	btfss	status,2,c
 16134  01C14C  D029               	goto	l16120
 16135                           
 16136                           ;stkvar	_p @ sp[(-2)+-2]
 16137  01C14E  0EFC               	movlw	-4
 16138  01C150  006F FF8F FFD9     	movff	plusw1,fsr2l
 16139  01C156  0EFD               	movlw	-3
 16140  01C158  006F FF8F FFDA     	movff	plusw1,fsr2h
 16141  01C15E  2ADE               	incf	postinc2,f,c
 16142  01C160  0E00               	movlw	0
 16143  01C162  22DD               	addwfc	postdec2,f,c
 16144                           
 16145                           ;stkvar	_p @ sp[(-2)+-2]
 16146  01C164  0EFC               	movlw	-4
 16147  01C166  006F FF8F FFE6     	movff	plusw1,postinc1
 16148  01C16C  006F FF8F FFE6     	movff	plusw1,postinc1
 16149  01C172  ECC6  F0E6         	call	_getoff	;wreg free
 16150                           
 16151                           ;stkvar	_rule @ sp[(-2)+-4]
 16152  01C176  0EFA               	movlw	-6
 16153  01C178  006F FF8C  F034    	movff	plusw1,btemp+10
 16154  01C17E  0EFB               	movlw	-5
 16155  01C180  006F FF8C  F035    	movff	plusw1,btemp+11
 16156  01C186  0E08               	movlw	8
 16157  01C188  2434               	addwf	(btemp+10)^0,w,c
 16158  01C18A  6ED9               	movwf	fsr2l,c
 16159  01C18C  0E00               	movlw	0
 16160  01C18E  2035               	addwfc	(btemp+11)^0,w,c
 16161  01C190  6EDA               	movwf	fsr2h,c
 16162  01C192  0060  F0AB  FFDE   	movff	btemp,postinc2
 16163  01C198  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16164  01C19E  D012               	goto	l3942
 16165  01C1A0                     l16120:
 16166                           
 16167                           ;stkvar	_rule @ sp[(-2)+-4]
 16168  01C1A0  0EFA               	movlw	-6
 16169  01C1A2  006F FF8C  F034    	movff	plusw1,btemp+10
 16170  01C1A8  0EFB               	movlw	-5
 16171  01C1AA  006F FF8C  F035    	movff	plusw1,btemp+11
 16172  01C1B0  0E08               	movlw	8
 16173  01C1B2  2434               	addwf	(btemp+10)^0,w,c
 16174  01C1B4  6ED9               	movwf	fsr2l,c
 16175  01C1B6  0E00               	movlw	0
 16176  01C1B8  2035               	addwfc	(btemp+11)^0,w,c
 16177  01C1BA  6EDA               	movwf	fsr2h,c
 16178  01C1BC  0E20               	movlw	32
 16179  01C1BE  6EDE               	movwf	postinc2,c
 16180  01C1C0  0E1C               	movlw	28
 16181  01C1C2  6EDD               	movwf	postdec2,c
 16182  01C1C4                     l3942:
 16183                           
 16184                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16185  01C1C4  0EFA               	movlw	250
 16186  01C1C6  26E1               	addwf	fsr1l,f,c
 16187  01C1C8  0EFF               	movlw	255
 16188  01C1CA  22E2               	addwfc	fsr1h,f,c
 16189  01C1CC  0012               	return		;funcret
 16190  01C1CE                     __end_of_getrule:
 16191                           	opt callstack 0
 16192                           
 16193 ;; *************** function _getoff *****************
 16194 ;; Defined at:
 16195 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;  p               2  [STACK] PTR PTR const unsigned c
 16198 ;;		 -> s(2), 
 16199 ;; Auto vars:     Size  Location     Type
 16200 ;;  off             2  [STACK] int 
 16201 ;;  neg             2  [STACK] int 
 16202 ;; Return value:  Size  Location     Type
 16203 ;;                  2  [STACK] int 
 16204 ;; Registers used:
 16205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16206 ;; Tracked objects:
 16207 ;;		On entry : 0/0
 16208 ;;		On exit  : 0/0
 16209 ;;		Unchanged: 0/0
 16210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16215 ;;Total ram usage:        0 bytes
 16216 ;; Hardware stack levels used:    1
 16217 ;; Hardware stack levels required when called:   16
 16218 ;; This function calls:
 16219 ;;		_getint
 16220 ;; This function is called by:
 16221 ;;		_getrule
 16222 ;;		_do_tzset
 16223 ;; This function uses a reentrant model
 16224 ;;
 16225                           
 16226                           	psect	text47
 16227  01CD8C                     __ptext47:
 16228                           	opt callstack 0
 16229  01CD8C                     _getoff:
 16230                           	opt callstack 0
 16231                           
 16232                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16233  01CD8C  52E6               	movf	postinc1,f,c
 16234  01CD8E  52E6               	movf	postinc1,f,c
 16235  01CD90  52E6               	movf	postinc1,f,c
 16236  01CD92  52E6               	movf	postinc1,f,c
 16237                           
 16238                           ;stkvar	_neg @ sp[(-4)+2]
 16239                           
 16240                           ;incstack = 0
 16241  01CD94  0EFE               	movlw	-2
 16242  01CD96  6AE3               	clrf	plusw1,c
 16243  01CD98  0EFF               	movlw	-1
 16244  01CD9A  6AE3               	clrf	plusw1,c
 16245                           
 16246                           ;stkvar	_p @ sp[(-4)+-2]
 16247  01CD9C  0EFA               	movlw	-6
 16248  01CD9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16249  01CDA4  0EFB               	movlw	-5
 16250  01CDA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16251  01CDAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16252  01CDB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16253  01CDB8                     	if	0	;tblptru may be non-zero
 16254  01CDB8                     	endif
 16255  01CDB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16256  01CDB8  0E00               	movlw	low (__mediumconst shr (0+16))
 16257  01CDBA  6EF8               	movwf	tblptru,c
 16258  01CDBC                     	endif
 16259  01CDBC  0008               	tblrd		*
 16260  01CDBE  50F5               	movf	tablat,w,c
 16261  01CDC0  0A2D               	xorlw	45
 16262  01CDC2  A4D8               	btfss	status,2,c
 16263  01CDC4  D018               	goto	l10860
 16264                           
 16265                           ;stkvar	_p @ sp[(-4)+-2]
 16266  01CDC6  0EFA               	movlw	-6
 16267  01CDC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16268  01CDCE  0EFB               	movlw	-5
 16269  01CDD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16270  01CDD6  2ADE               	incf	postinc2,f,c
 16271  01CDD8  0E00               	movlw	0
 16272  01CDDA  22DD               	addwfc	postdec2,f,c
 16273  01CDDC  0E01               	movlw	1
 16274  01CDDE  6E34               	movwf	(btemp+10)^0,c
 16275  01CDE0  0E00               	movlw	0
 16276  01CDE2  6E35               	movwf	(btemp+11)^0,c
 16277                           
 16278                           ;stkvar	_neg @ sp[(-4)+2]
 16279  01CDE4  0EFE               	movlw	-2
 16280  01CDE6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16281  01CDEC  0EFF               	movlw	-1
 16282  01CDEE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16283  01CDF4  D020               	goto	l10864
 16284  01CDF6                     l10860:
 16285                           
 16286                           ;stkvar	_p @ sp[(-4)+-2]
 16287  01CDF6  0EFA               	movlw	-6
 16288  01CDF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16289  01CDFE  0EFB               	movlw	-5
 16290  01CE00  006F FF8F FFDA     	movff	plusw1,fsr2h
 16291  01CE06  006F FF7B FFF6     	movff	postinc2,tblptrl
 16292  01CE0C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16293  01CE12                     	if	0	;tblptru may be non-zero
 16294  01CE12                     	endif
 16295  01CE12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16296  01CE12  0E00               	movlw	low (__mediumconst shr (0+16))
 16297  01CE14  6EF8               	movwf	tblptru,c
 16298  01CE16                     	endif
 16299  01CE16  0008               	tblrd		*
 16300  01CE18  50F5               	movf	tablat,w,c
 16301  01CE1A  0A2B               	xorlw	43
 16302  01CE1C  A4D8               	btfss	status,2,c
 16303  01CE1E  D00B               	goto	l10864
 16304                           
 16305                           ;stkvar	_p @ sp[(-4)+-2]
 16306  01CE20  0EFA               	movlw	-6
 16307  01CE22  006F FF8F FFD9     	movff	plusw1,fsr2l
 16308  01CE28  0EFB               	movlw	-5
 16309  01CE2A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16310  01CE30  2ADE               	incf	postinc2,f,c
 16311  01CE32  0E00               	movlw	0
 16312  01CE34  22DD               	addwfc	postdec2,f,c
 16313  01CE36                     l10864:
 16314                           
 16315                           ;stkvar	_p @ sp[(-4)+-2]
 16316  01CE36  0EFA               	movlw	-6
 16317  01CE38  006F FF8F FFE6     	movff	plusw1,postinc1
 16318  01CE3E  006F FF8F FFE6     	movff	plusw1,postinc1
 16319  01CE44  EC46  F0FF         	call	_getint	;wreg free
 16320  01CE48  0060  F0A8  F034   	movff	btemp,btemp+10
 16321  01CE4E  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16322  01CE54  0E10               	movlw	16
 16323  01CE56  0234               	mulwf	(btemp+10)^0,c
 16324  01CE58  006F FFCC  F032    	movff	prodl,btemp+8
 16325  01CE5E  006F FFD0  F033    	movff	prodh,btemp+9
 16326  01CE64  0235               	mulwf	(btemp+11)^0,c
 16327  01CE66  50F3               	movf	prodl,w,c
 16328  01CE68  2633               	addwf	(btemp+9)^0,f,c
 16329  01CE6A  0E0E               	movlw	14
 16330  01CE6C  0234               	mulwf	(btemp+10)^0,c
 16331  01CE6E  50F3               	movf	prodl,w,c
 16332  01CE70  2633               	addwf	(btemp+9)^0,f,c
 16333                           
 16334                           ;stkvar	_off @ sp[(-4)+0]
 16335  01CE72  0EFC               	movlw	-4
 16336  01CE74  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16337  01CE7A  0EFD               	movlw	-3
 16338  01CE7C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16339                           
 16340                           ;stkvar	_p @ sp[(-4)+-2]
 16341  01CE82  0EFA               	movlw	-6
 16342  01CE84  006F FF8F FFD9     	movff	plusw1,fsr2l
 16343  01CE8A  0EFB               	movlw	-5
 16344  01CE8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16345  01CE92  006F FF7B FFF6     	movff	postinc2,tblptrl
 16346  01CE98  006F FF77 FFF7     	movff	postdec2,tblptrh
 16347  01CE9E                     	if	0	;tblptru may be non-zero
 16348  01CE9E                     	endif
 16349  01CE9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16350  01CE9E  0E00               	movlw	low (__mediumconst shr (0+16))
 16351  01CEA0  6EF8               	movwf	tblptru,c
 16352  01CEA2                     	endif
 16353  01CEA2  0008               	tblrd		*
 16354  01CEA4  50F5               	movf	tablat,w,c
 16355  01CEA6  0A3A               	xorlw	58
 16356  01CEA8  A4D8               	btfss	status,2,c
 16357  01CEAA  D064               	goto	l10878
 16358                           
 16359                           ;stkvar	_p @ sp[(-4)+-2]
 16360  01CEAC  0EFA               	movlw	-6
 16361  01CEAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16362  01CEB4  0EFB               	movlw	-5
 16363  01CEB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16364  01CEBC  2ADE               	incf	postinc2,f,c
 16365  01CEBE  0E00               	movlw	0
 16366  01CEC0  22DD               	addwfc	postdec2,f,c
 16367                           
 16368                           ;stkvar	_p @ sp[(-4)+-2]
 16369  01CEC2  0EFA               	movlw	-6
 16370  01CEC4  006F FF8F FFE6     	movff	plusw1,postinc1
 16371  01CECA  006F FF8F FFE6     	movff	plusw1,postinc1
 16372  01CED0  EC46  F0FF         	call	_getint	;wreg free
 16373  01CED4  0060  F0A8  F034   	movff	btemp,btemp+10
 16374  01CEDA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16375  01CEE0  0E3C               	movlw	60
 16376  01CEE2  0234               	mulwf	(btemp+10)^0,c
 16377  01CEE4  006F FFCC  F032    	movff	prodl,btemp+8
 16378  01CEEA  006F FFD0  F033    	movff	prodh,btemp+9
 16379  01CEF0  0235               	mulwf	(btemp+11)^0,c
 16380  01CEF2  50F3               	movf	prodl,w,c
 16381  01CEF4  2633               	addwf	(btemp+9)^0,f,c
 16382                           
 16383                           ;stkvar	_off @ sp[(-4)+0]
 16384  01CEF6  50E1               	movf	fsr1l,w,c
 16385  01CEF8  0FFC               	addlw	-4
 16386  01CEFA  6ED9               	movwf	fsr2l,c
 16387  01CEFC  50E2               	movf	fsr1h,w,c
 16388  01CEFE  6EDA               	movwf	fsr2h,c
 16389  01CF00  0EFF               	movlw	255
 16390  01CF02  22DA               	addwfc	fsr2h,f,c
 16391  01CF04  5032               	movf	(btemp+8)^0,w,c
 16392  01CF06  26DE               	addwf	postinc2,f,c
 16393  01CF08  5033               	movf	(btemp+9)^0,w,c
 16394  01CF0A  22DD               	addwfc	postdec2,f,c
 16395                           
 16396                           ;stkvar	_p @ sp[(-4)+-2]
 16397  01CF0C  0EFA               	movlw	-6
 16398  01CF0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16399  01CF14  0EFB               	movlw	-5
 16400  01CF16  006F FF8F FFDA     	movff	plusw1,fsr2h
 16401  01CF1C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16402  01CF22  006F FF77 FFF7     	movff	postdec2,tblptrh
 16403  01CF28                     	if	0	;tblptru may be non-zero
 16404  01CF28                     	endif
 16405  01CF28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16406  01CF28  0E00               	movlw	low (__mediumconst shr (0+16))
 16407  01CF2A  6EF8               	movwf	tblptru,c
 16408  01CF2C                     	endif
 16409  01CF2C  0008               	tblrd		*
 16410  01CF2E  50F5               	movf	tablat,w,c
 16411  01CF30  0A3A               	xorlw	58
 16412  01CF32  A4D8               	btfss	status,2,c
 16413  01CF34  D01F               	goto	l10878
 16414                           
 16415                           ;stkvar	_p @ sp[(-4)+-2]
 16416  01CF36  0EFA               	movlw	-6
 16417  01CF38  006F FF8F FFD9     	movff	plusw1,fsr2l
 16418  01CF3E  0EFB               	movlw	-5
 16419  01CF40  006F FF8F FFDA     	movff	plusw1,fsr2h
 16420  01CF46  2ADE               	incf	postinc2,f,c
 16421  01CF48  0E00               	movlw	0
 16422  01CF4A  22DD               	addwfc	postdec2,f,c
 16423                           
 16424                           ;stkvar	_p @ sp[(-4)+-2]
 16425  01CF4C  0EFA               	movlw	-6
 16426  01CF4E  006F FF8F FFE6     	movff	plusw1,postinc1
 16427  01CF54  006F FF8F FFE6     	movff	plusw1,postinc1
 16428  01CF5A  EC46  F0FF         	call	_getint	;wreg free
 16429                           
 16430                           ;stkvar	_off @ sp[(-4)+0]
 16431  01CF5E  50E1               	movf	fsr1l,w,c
 16432  01CF60  0FFC               	addlw	-4
 16433  01CF62  6ED9               	movwf	fsr2l,c
 16434  01CF64  50E2               	movf	fsr1h,w,c
 16435  01CF66  6EDA               	movwf	fsr2h,c
 16436  01CF68  0EFF               	movlw	255
 16437  01CF6A  22DA               	addwfc	fsr2h,f,c
 16438  01CF6C  502A               	movf	btemp^0,w,c
 16439  01CF6E  26DE               	addwf	postinc2,f,c
 16440  01CF70  502B               	movf	(btemp+1)^0,w,c
 16441  01CF72  22DD               	addwfc	postdec2,f,c
 16442  01CF74                     l10878:
 16443                           
 16444                           ;stkvar	_neg @ sp[(-4)+2]
 16445  01CF74  0EFE               	movlw	-2
 16446  01CF76  006F FF8C  F02A    	movff	plusw1,btemp
 16447  01CF7C  0EFF               	movlw	-1
 16448  01CF7E  50E3               	movf	plusw1,w,c
 16449  01CF80  102A               	iorwf	btemp^0,w,c
 16450  01CF82  A4D8               	btfss	status,2,c
 16451  01CF84  D009               	goto	l10882
 16452                           
 16453                           ;stkvar	_off @ sp[(-4)+0]
 16454  01CF86  0EFC               	movlw	-4
 16455  01CF88  006F FF8C  F02A    	movff	plusw1,btemp
 16456  01CF8E  0EFD               	movlw	-3
 16457  01CF90  006F FF8C  F02B    	movff	plusw1,btemp+1
 16458  01CF96  D00D               	goto	l3933
 16459  01CF98                     l10882:
 16460                           
 16461                           ;stkvar	_off @ sp[(-4)+0]
 16462  01CF98  0EFC               	movlw	-4
 16463  01CF9A  006F FF8C  F02A    	movff	plusw1,btemp
 16464  01CFA0  1E2A               	comf	btemp^0,f,c
 16465  01CFA2  0EFD               	movlw	-3
 16466  01CFA4  006F FF8C  F02B    	movff	plusw1,btemp+1
 16467  01CFAA  1E2B               	comf	(btemp+1)^0,f,c
 16468  01CFAC  2A2A               	incf	btemp^0,f,c
 16469  01CFAE  B4D8               	btfsc	status,2,c
 16470  01CFB0  2A2B               	incf	(btemp+1)^0,f,c
 16471  01CFB2                     l3933:
 16472                           
 16473                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16474  01CFB2  0EFA               	movlw	250
 16475  01CFB4  26E1               	addwf	fsr1l,f,c
 16476  01CFB6  0EFF               	movlw	255
 16477  01CFB8  22E2               	addwfc	fsr1h,f,c
 16478  01CFBA  0012               	return		;funcret
 16479  01CFBC                     __end_of_getoff:
 16480                           	opt callstack 0
 16481                           
 16482 ;; *************** function _getint *****************
 16483 ;; Defined at:
 16484 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16485 ;; Parameters:    Size  Location     Type
 16486 ;;  p               2  [STACK] PTR PTR const unsigned c
 16487 ;;		 -> s(2), 
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;  x               2  [STACK] unsigned int 
 16490 ;; Return value:  Size  Location     Type
 16491 ;;                  2  [STACK] int 
 16492 ;; Registers used:
 16493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16494 ;; Tracked objects:
 16495 ;;		On entry : 0/0
 16496 ;;		On exit  : 0/0
 16497 ;;		Unchanged: 0/0
 16498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16503 ;;Total ram usage:        0 bytes
 16504 ;; Hardware stack levels used:    1
 16505 ;; Hardware stack levels required when called:   15
 16506 ;; This function calls:
 16507 ;;		Nothing
 16508 ;; This function is called by:
 16509 ;;		_getoff
 16510 ;;		_getrule
 16511 ;; This function uses a reentrant model
 16512 ;;
 16513                           
 16514                           	psect	text48
 16515  01FE8C                     __ptext48:
 16516                           	opt callstack 0
 16517  01FE8C                     _getint:
 16518                           	opt callstack 0
 16519                           
 16520                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16521  01FE8C  52E6               	movf	postinc1,f,c
 16522  01FE8E  52E6               	movf	postinc1,f,c
 16523                           
 16524                           ;stkvar	_x @ sp[(-2)+0]
 16525                           
 16526                           ;incstack = 0
 16527  01FE90  0EFE               	movlw	-2
 16528  01FE92  6AE3               	clrf	plusw1,c
 16529  01FE94  0EFF               	movlw	-1
 16530  01FE96  6AE3               	clrf	plusw1,c
 16531  01FE98  D043               	goto	l10016
 16532  01FE9A                     l10012:
 16533  01FE9A  0ED0               	movlw	208
 16534  01FE9C  6E34               	movwf	(btemp+10)^0,c
 16535  01FE9E  0EFF               	movlw	255
 16536  01FEA0  6E35               	movwf	(btemp+11)^0,c
 16537                           
 16538                           ;stkvar	_x @ sp[(-2)+0]
 16539  01FEA2  0EFE               	movlw	-2
 16540  01FEA4  006F FF8C  F032    	movff	plusw1,btemp+8
 16541  01FEAA  0EFF               	movlw	-1
 16542  01FEAC  006F FF8C  F033    	movff	plusw1,btemp+9
 16543  01FEB2  0E0A               	movlw	10
 16544  01FEB4  0232               	mulwf	(btemp+8)^0,c
 16545  01FEB6  006F FFCC  F030    	movff	prodl,btemp+6
 16546  01FEBC  006F FFD0  F031    	movff	prodh,btemp+7
 16547  01FEC2  0233               	mulwf	(btemp+9)^0,c
 16548  01FEC4  50F3               	movf	prodl,w,c
 16549  01FEC6  2631               	addwf	(btemp+7)^0,f,c
 16550                           
 16551                           ;stkvar	_p @ sp[(-2)+-2]
 16552  01FEC8  0EFC               	movlw	-4
 16553  01FECA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16554  01FED0  0EFD               	movlw	-3
 16555  01FED2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16556  01FED8  006F FF7B FFF6     	movff	postinc2,tblptrl
 16557  01FEDE  006F FF77 FFF7     	movff	postdec2,tblptrh
 16558  01FEE4                     	if	0	;tblptru may be non-zero
 16559  01FEE4                     	endif
 16560  01FEE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16561  01FEE4  0E00               	movlw	low (__mediumconst shr (0+16))
 16562  01FEE6  6EF8               	movwf	tblptru,c
 16563  01FEE8                     	endif
 16564  01FEE8  0008               	tblrd		*
 16565  01FEEA  50F5               	movf	tablat,w,c
 16566  01FEEC  2630               	addwf	(btemp+6)^0,f,c
 16567  01FEEE  0E00               	movlw	0
 16568  01FEF0  2231               	addwfc	(btemp+7)^0,f,c
 16569  01FEF2  5034               	movf	(btemp+10)^0,w,c
 16570  01FEF4  2630               	addwf	(btemp+6)^0,f,c
 16571  01FEF6  5035               	movf	(btemp+11)^0,w,c
 16572  01FEF8  2231               	addwfc	(btemp+7)^0,f,c
 16573                           
 16574                           ;stkvar	_x @ sp[(-2)+0]
 16575  01FEFA  0EFE               	movlw	-2
 16576  01FEFC  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16577  01FF02  0EFF               	movlw	-1
 16578  01FF04  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16579                           
 16580                           ;stkvar	_p @ sp[(-2)+-2]
 16581  01FF0A  0EFC               	movlw	-4
 16582  01FF0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16583  01FF12  0EFD               	movlw	-3
 16584  01FF14  006F FF8F FFDA     	movff	plusw1,fsr2h
 16585  01FF1A  2ADE               	incf	postinc2,f,c
 16586  01FF1C  0E00               	movlw	0
 16587  01FF1E  22DD               	addwfc	postdec2,f,c
 16588  01FF20                     l10016:
 16589  01FF20  0ED0               	movlw	208
 16590  01FF22  6E34               	movwf	(btemp+10)^0,c
 16591  01FF24  0EFF               	movlw	255
 16592  01FF26  6E35               	movwf	(btemp+11)^0,c
 16593                           
 16594                           ;stkvar	_p @ sp[(-2)+-2]
 16595  01FF28  0EFC               	movlw	-4
 16596  01FF2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16597  01FF30  0EFD               	movlw	-3
 16598  01FF32  006F FF8F FFDA     	movff	plusw1,fsr2h
 16599  01FF38  006F FF7B FFF6     	movff	postinc2,tblptrl
 16600  01FF3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16601  01FF44                     	if	0	;tblptru may be non-zero
 16602  01FF44                     	endif
 16603  01FF44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16604  01FF44  0E00               	movlw	low (__mediumconst shr (0+16))
 16605  01FF46  6EF8               	movwf	tblptru,c
 16606  01FF48                     	endif
 16607  01FF48  0008               	tblrd		*
 16608  01FF4A  50F5               	movf	tablat,w,c
 16609  01FF4C  6E32               	movwf	(btemp+8)^0,c
 16610  01FF4E  6A33               	clrf	(btemp+9)^0,c
 16611  01FF50  5034               	movf	(btemp+10)^0,w,c
 16612  01FF52  2632               	addwf	(btemp+8)^0,f,c
 16613  01FF54  5035               	movf	(btemp+11)^0,w,c
 16614  01FF56  2233               	addwfc	(btemp+9)^0,f,c
 16615  01FF58  5033               	movf	(btemp+9)^0,w,c
 16616  01FF5A  E104               	bnz	u7640
 16617  01FF5C  0E0A               	movlw	10
 16618  01FF5E  5C32               	subwf	(btemp+8)^0,w,c
 16619  01FF60  A0D8               	btfss	status,0,c
 16620  01FF62  D79B               	goto	l10012
 16621  01FF64                     u7640:
 16622                           
 16623                           ;stkvar	_x @ sp[(-2)+0]
 16624  01FF64  0EFE               	movlw	-2
 16625  01FF66  006F FF8C  F02A    	movff	plusw1,btemp
 16626  01FF6C  0EFF               	movlw	-1
 16627  01FF6E  006F FF8C  F02B    	movff	plusw1,btemp+1
 16628                           
 16629                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16630  01FF74  52E5               	movf	postdec1,f,c
 16631  01FF76  52E5               	movf	postdec1,f,c
 16632  01FF78  52E5               	movf	postdec1,f,c
 16633  01FF7A  52E5               	movf	postdec1,f,c
 16634  01FF7C  0012               	return		;funcret
 16635  01FF7E                     __end_of_getint:
 16636                           	opt callstack 0
 16637                           
 16638 ;; *************** function _getname *****************
 16639 ;; Defined at:
 16640 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16641 ;; Parameters:    Size  Location     Type
 16642 ;;  d               2  [STACK] PTR unsigned char 
 16643 ;;		 -> dst_name(7), std_name(7), 
 16644 ;;  p               2  [STACK] PTR PTR const unsigned c
 16645 ;;		 -> s(2), 
 16646 ;; Auto vars:     Size  Location     Type
 16647 ;;  i               2  [STACK] int 
 16648 ;; Return value:  Size  Location     Type
 16649 ;;                  1  [STACK] void 
 16650 ;; Registers used:
 16651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16652 ;; Tracked objects:
 16653 ;;		On entry : 0/39
 16654 ;;		On exit  : 0/0
 16655 ;;		Unchanged: 0/0
 16656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16661 ;;Total ram usage:        0 bytes
 16662 ;; Hardware stack levels used:    1
 16663 ;; Hardware stack levels required when called:   15
 16664 ;; This function calls:
 16665 ;;		Nothing
 16666 ;; This function is called by:
 16667 ;;		_do_tzset
 16668 ;; This function uses a reentrant model
 16669 ;;
 16670                           
 16671                           	psect	text49
 16672  01AE76                     __ptext49:
 16673                           	opt callstack 0
 16674  01AE76                     _getname:
 16675                           	opt callstack 0
 16676                           
 16677                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16678  01AE76  52E6               	movf	postinc1,f,c
 16679  01AE78  52E6               	movf	postinc1,f,c
 16680                           
 16681                           ;stkvar	_p @ sp[(-2)+-4]
 16682                           
 16683                           ;incstack = 0
 16684  01AE7A  0EFA               	movlw	-6
 16685  01AE7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16686  01AE82  0EFB               	movlw	-5
 16687  01AE84  006F FF8F FFDA     	movff	plusw1,fsr2h
 16688  01AE8A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16689  01AE90  006F FF77 FFF7     	movff	postdec2,tblptrh
 16690  01AE96                     	if	0	;tblptru may be non-zero
 16691  01AE96                     	endif
 16692  01AE96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16693  01AE96  0E00               	movlw	low (__mediumconst shr (0+16))
 16694  01AE98  6EF8               	movwf	tblptru,c
 16695  01AE9A                     	endif
 16696  01AE9A  0008               	tblrd		*
 16697  01AE9C  50F5               	movf	tablat,w,c
 16698  01AE9E  0A3C               	xorlw	60
 16699  01AEA0  A4D8               	btfss	status,2,c
 16700  01AEA2  D09E               	goto	l16138
 16701                           
 16702                           ;stkvar	_p @ sp[(-2)+-4]
 16703  01AEA4  0EFA               	movlw	-6
 16704  01AEA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16705  01AEAC  0EFB               	movlw	-5
 16706  01AEAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16707  01AEB4  2ADE               	incf	postinc2,f,c
 16708  01AEB6  0E00               	movlw	0
 16709  01AEB8  22DD               	addwfc	postdec2,f,c
 16710                           
 16711                           ;stkvar	_i @ sp[(-2)+0]
 16712  01AEBA  0EFE               	movlw	-2
 16713  01AEBC  6AE3               	clrf	plusw1,c
 16714  01AEBE  0EFF               	movlw	-1
 16715  01AEC0  6AE3               	clrf	plusw1,c
 16716  01AEC2  D04D               	goto	l16132
 16717  01AEC4                     l16128:
 16718                           
 16719                           ;stkvar	_i @ sp[(-2)+0]
 16720  01AEC4  0EFE               	movlw	-2
 16721  01AEC6  006F FF8C  F034    	movff	plusw1,btemp+10
 16722  01AECC  0EFF               	movlw	-1
 16723  01AECE  006F FF8C  F035    	movff	plusw1,btemp+11
 16724                           
 16725                           ;stkvar	_p @ sp[(-2)+-4]
 16726  01AED4  0EFA               	movlw	-6
 16727  01AED6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16728  01AEDC  0EFB               	movlw	-5
 16729  01AEDE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16730  01AEE4  006F FF78  F032    	movff	postinc2,btemp+8
 16731  01AEEA  006F FF74  F033    	movff	postdec2,btemp+9
 16732  01AEF0  5034               	movf	(btemp+10)^0,w,c
 16733  01AEF2  2632               	addwf	(btemp+8)^0,f,c
 16734  01AEF4  5035               	movf	(btemp+11)^0,w,c
 16735  01AEF6  2233               	addwfc	(btemp+9)^0,f,c
 16736  01AEF8  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16737  01AEFE  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16738  01AF04                     	if	0	;tblptru may be non-zero
 16739  01AF04                     	endif
 16740  01AF04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16741  01AF04  0E00               	movlw	low (__mediumconst shr (0+16))
 16742  01AF06  6EF8               	movwf	tblptru,c
 16743  01AF08                     	endif
 16744                           
 16745                           ;stkvar	_i @ sp[(-2)+0]
 16746  01AF08  0EFE               	movlw	-2
 16747  01AF0A  006F FF8C  F034    	movff	plusw1,btemp+10
 16748  01AF10  0EFF               	movlw	-1
 16749  01AF12  006F FF8C  F035    	movff	plusw1,btemp+11
 16750                           
 16751                           ;stkvar	_d @ sp[(-2)+-2]
 16752  01AF18  0EFC               	movlw	-4
 16753  01AF1A  006F FF8C  F032    	movff	plusw1,btemp+8
 16754  01AF20  0EFD               	movlw	-3
 16755  01AF22  006F FF8C  F033    	movff	plusw1,btemp+9
 16756  01AF28  5034               	movf	(btemp+10)^0,w,c
 16757  01AF2A  2432               	addwf	(btemp+8)^0,w,c
 16758  01AF2C  6ED9               	movwf	fsr2l,c
 16759  01AF2E  5035               	movf	(btemp+11)^0,w,c
 16760  01AF30  2033               	addwfc	(btemp+9)^0,w,c
 16761  01AF32  6EDA               	movwf	fsr2h,c
 16762  01AF34  0008               	tblrd		*
 16763  01AF36  006F FFD7 FFDF     	movff	tablat,indf2
 16764                           
 16765                           ;stkvar	_i @ sp[(-2)+0]
 16766  01AF3C  0EFE               	movlw	-2
 16767  01AF3E  50E3               	movf	plusw1,w,c
 16768  01AF40  0F01               	addlw	1
 16769  01AF42  6E2A               	movwf	btemp^0,c
 16770  01AF44  0EFE               	movlw	-2
 16771  01AF46  0060  F0AB  FFE3   	movff	btemp,plusw1
 16772  01AF4C  6A2A               	clrf	btemp^0,c
 16773  01AF4E  0EFF               	movlw	-1
 16774  01AF50  50E3               	movf	plusw1,w,c
 16775  01AF52  202A               	addwfc	btemp^0,w,c
 16776  01AF54  6E2A               	movwf	btemp^0,c
 16777  01AF56  0EFF               	movlw	-1
 16778  01AF58  0060  F0AB  FFE3   	movff	btemp,plusw1
 16779  01AF5E                     l16132:
 16780                           
 16781                           ;stkvar	_i @ sp[(-2)+0]
 16782  01AF5E  0EFE               	movlw	-2
 16783  01AF60  006F FF8C  F034    	movff	plusw1,btemp+10
 16784  01AF66  0EFF               	movlw	-1
 16785  01AF68  006F FF8C  F035    	movff	plusw1,btemp+11
 16786                           
 16787                           ;stkvar	_p @ sp[(-2)+-4]
 16788  01AF6E  0EFA               	movlw	-6
 16789  01AF70  006F FF8F FFD9     	movff	plusw1,fsr2l
 16790  01AF76  0EFB               	movlw	-5
 16791  01AF78  006F FF8F FFDA     	movff	plusw1,fsr2h
 16792  01AF7E  006F FF78  F032    	movff	postinc2,btemp+8
 16793  01AF84  006F FF74  F033    	movff	postdec2,btemp+9
 16794  01AF8A  5034               	movf	(btemp+10)^0,w,c
 16795  01AF8C  2632               	addwf	(btemp+8)^0,f,c
 16796  01AF8E  5035               	movf	(btemp+11)^0,w,c
 16797  01AF90  2233               	addwfc	(btemp+9)^0,f,c
 16798  01AF92  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16799  01AF98  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16800  01AF9E                     	if	0	;tblptru may be non-zero
 16801  01AF9E                     	endif
 16802  01AF9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16803  01AF9E  0E00               	movlw	low (__mediumconst shr (0+16))
 16804  01AFA0  6EF8               	movwf	tblptru,c
 16805  01AFA2                     	endif
 16806  01AFA2  0008               	tblrd		*
 16807  01AFA4  50F5               	movf	tablat,w,c
 16808  01AFA6  0A3E               	xorlw	62
 16809  01AFA8  B4D8               	btfsc	status,2,c
 16810  01AFAA  D00E               	goto	u15640
 16811                           
 16812                           ;stkvar	_i @ sp[(-2)+0]
 16813  01AFAC  0EFF               	movlw	-1
 16814  01AFAE  BEE3               	btfsc	plusw1,7,c
 16815  01AFB0  D789               	goto	l16128
 16816  01AFB2  0EFF               	movlw	-1
 16817  01AFB4  50E3               	movf	plusw1,w,c
 16818  01AFB6  E108               	bnz	u15640
 16819  01AFB8  0EFE               	movlw	-2
 16820  01AFBA  006F FF8C  F02A    	movff	plusw1,btemp
 16821  01AFC0  0E06               	movlw	6
 16822  01AFC2  5E2A               	subwf	btemp^0,f,c
 16823  01AFC4  A0D8               	btfss	status,0,c
 16824  01AFC6  D77E               	goto	l16128
 16825  01AFC8                     u15640:
 16826                           
 16827                           ;stkvar	_p @ sp[(-2)+-4]
 16828  01AFC8  0EFA               	movlw	-6
 16829  01AFCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16830  01AFD0  0EFB               	movlw	-5
 16831  01AFD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16832  01AFD8  2ADE               	incf	postinc2,f,c
 16833  01AFDA  0E00               	movlw	0
 16834  01AFDC  22DD               	addwfc	postdec2,f,c
 16835  01AFDE  D098               	goto	u15660
 16836  01AFE0                     l16138:
 16837                           
 16838                           ;stkvar	_i @ sp[(-2)+0]
 16839  01AFE0  0EFE               	movlw	-2
 16840  01AFE2  6AE3               	clrf	plusw1,c
 16841  01AFE4  0EFF               	movlw	-1
 16842  01AFE6  6AE3               	clrf	plusw1,c
 16843  01AFE8  D04D               	goto	l16144
 16844  01AFEA                     l16140:
 16845                           
 16846                           ;stkvar	_i @ sp[(-2)+0]
 16847  01AFEA  0EFE               	movlw	-2
 16848  01AFEC  006F FF8C  F034    	movff	plusw1,btemp+10
 16849  01AFF2  0EFF               	movlw	-1
 16850  01AFF4  006F FF8C  F035    	movff	plusw1,btemp+11
 16851                           
 16852                           ;stkvar	_p @ sp[(-2)+-4]
 16853  01AFFA  0EFA               	movlw	-6
 16854  01AFFC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16855  01B002  0EFB               	movlw	-5
 16856  01B004  006F FF8F FFDA     	movff	plusw1,fsr2h
 16857  01B00A  006F FF78  F032    	movff	postinc2,btemp+8
 16858  01B010  006F FF74  F033    	movff	postdec2,btemp+9
 16859  01B016  5034               	movf	(btemp+10)^0,w,c
 16860  01B018  2632               	addwf	(btemp+8)^0,f,c
 16861  01B01A  5035               	movf	(btemp+11)^0,w,c
 16862  01B01C  2233               	addwfc	(btemp+9)^0,f,c
 16863  01B01E  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16864  01B024  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16865  01B02A                     	if	0	;tblptru may be non-zero
 16866  01B02A                     	endif
 16867  01B02A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16868  01B02A  0E00               	movlw	low (__mediumconst shr (0+16))
 16869  01B02C  6EF8               	movwf	tblptru,c
 16870  01B02E                     	endif
 16871                           
 16872                           ;stkvar	_i @ sp[(-2)+0]
 16873  01B02E  0EFE               	movlw	-2
 16874  01B030  006F FF8C  F034    	movff	plusw1,btemp+10
 16875  01B036  0EFF               	movlw	-1
 16876  01B038  006F FF8C  F035    	movff	plusw1,btemp+11
 16877                           
 16878                           ;stkvar	_d @ sp[(-2)+-2]
 16879  01B03E  0EFC               	movlw	-4
 16880  01B040  006F FF8C  F032    	movff	plusw1,btemp+8
 16881  01B046  0EFD               	movlw	-3
 16882  01B048  006F FF8C  F033    	movff	plusw1,btemp+9
 16883  01B04E  5034               	movf	(btemp+10)^0,w,c
 16884  01B050  2432               	addwf	(btemp+8)^0,w,c
 16885  01B052  6ED9               	movwf	fsr2l,c
 16886  01B054  5035               	movf	(btemp+11)^0,w,c
 16887  01B056  2033               	addwfc	(btemp+9)^0,w,c
 16888  01B058  6EDA               	movwf	fsr2h,c
 16889  01B05A  0008               	tblrd		*
 16890  01B05C  006F FFD7 FFDF     	movff	tablat,indf2
 16891                           
 16892                           ;stkvar	_i @ sp[(-2)+0]
 16893  01B062  0EFE               	movlw	-2
 16894  01B064  50E3               	movf	plusw1,w,c
 16895  01B066  0F01               	addlw	1
 16896  01B068  6E2A               	movwf	btemp^0,c
 16897  01B06A  0EFE               	movlw	-2
 16898  01B06C  0060  F0AB  FFE3   	movff	btemp,plusw1
 16899  01B072  6A2A               	clrf	btemp^0,c
 16900  01B074  0EFF               	movlw	-1
 16901  01B076  50E3               	movf	plusw1,w,c
 16902  01B078  202A               	addwfc	btemp^0,w,c
 16903  01B07A  6E2A               	movwf	btemp^0,c
 16904  01B07C  0EFF               	movlw	-1
 16905  01B07E  0060  F0AB  FFE3   	movff	btemp,plusw1
 16906  01B084                     l16144:
 16907  01B084  0E9F               	movlw	159
 16908  01B086  6E34               	movwf	(btemp+10)^0,c
 16909  01B088  0EFF               	movlw	255
 16910  01B08A  6E35               	movwf	(btemp+11)^0,c
 16911                           
 16912                           ;stkvar	_i @ sp[(-2)+0]
 16913  01B08C  0EFE               	movlw	-2
 16914  01B08E  006F FF8C  F032    	movff	plusw1,btemp+8
 16915  01B094  0EFF               	movlw	-1
 16916  01B096  006F FF8C  F033    	movff	plusw1,btemp+9
 16917                           
 16918                           ;stkvar	_p @ sp[(-2)+-4]
 16919  01B09C  0EFA               	movlw	-6
 16920  01B09E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16921  01B0A4  0EFB               	movlw	-5
 16922  01B0A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16923  01B0AC  006F FF78  F030    	movff	postinc2,btemp+6
 16924  01B0B2  006F FF74  F031    	movff	postdec2,btemp+7
 16925  01B0B8  5032               	movf	(btemp+8)^0,w,c
 16926  01B0BA  2630               	addwf	(btemp+6)^0,f,c
 16927  01B0BC  5033               	movf	(btemp+9)^0,w,c
 16928  01B0BE  2231               	addwfc	(btemp+7)^0,f,c
 16929  01B0C0  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16930  01B0C6  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16931  01B0CC                     	if	0	;tblptru may be non-zero
 16932  01B0CC                     	endif
 16933  01B0CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16934  01B0CC  0E00               	movlw	low (__mediumconst shr (0+16))
 16935  01B0CE  6EF8               	movwf	tblptru,c
 16936  01B0D0                     	endif
 16937  01B0D0  0008               	tblrd		*
 16938  01B0D2  50F5               	movf	tablat,w,c
 16939  01B0D4  6E32               	movwf	(btemp+8)^0,c
 16940  01B0D6  6A33               	clrf	(btemp+9)^0,c
 16941  01B0D8  0E20               	movlw	32
 16942  01B0DA  1232               	iorwf	(btemp+8)^0,f,c
 16943  01B0DC  0E00               	movlw	0
 16944  01B0DE  1233               	iorwf	(btemp+9)^0,f,c
 16945  01B0E0  5034               	movf	(btemp+10)^0,w,c
 16946  01B0E2  2632               	addwf	(btemp+8)^0,f,c
 16947  01B0E4  5035               	movf	(btemp+11)^0,w,c
 16948  01B0E6  2233               	addwfc	(btemp+9)^0,f,c
 16949  01B0E8  5033               	movf	(btemp+9)^0,w,c
 16950  01B0EA  E112               	bnz	l16148
 16951  01B0EC  0E1A               	movlw	26
 16952  01B0EE  5C32               	subwf	(btemp+8)^0,w,c
 16953  01B0F0  B0D8               	btfsc	status,0,c
 16954  01B0F2  D00E               	goto	u15660
 16955                           
 16956                           ;stkvar	_i @ sp[(-2)+0]
 16957  01B0F4  0EFF               	movlw	-1
 16958  01B0F6  BEE3               	btfsc	plusw1,7,c
 16959  01B0F8  D778               	goto	l16140
 16960  01B0FA  0EFF               	movlw	-1
 16961  01B0FC  50E3               	movf	plusw1,w,c
 16962  01B0FE  E108               	bnz	u15660
 16963  01B100  0EFE               	movlw	-2
 16964  01B102  006F FF8C  F02A    	movff	plusw1,btemp
 16965  01B108  0E06               	movlw	6
 16966  01B10A  5E2A               	subwf	btemp^0,f,c
 16967  01B10C  A0D8               	btfss	status,0,c
 16968  01B10E  D76D               	goto	l16140
 16969  01B110                     u15660:
 16970  01B110                     l16148:
 16971                           
 16972                           ;stkvar	_i @ sp[(-2)+0]
 16973  01B110  0EFE               	movlw	-2
 16974  01B112  006F FF8C  F034    	movff	plusw1,btemp+10
 16975  01B118  0EFF               	movlw	-1
 16976  01B11A  006F FF8C  F035    	movff	plusw1,btemp+11
 16977                           
 16978                           ;stkvar	_p @ sp[(-2)+-4]
 16979  01B120  0EFA               	movlw	-6
 16980  01B122  006F FF8F FFD9     	movff	plusw1,fsr2l
 16981  01B128  0EFB               	movlw	-5
 16982  01B12A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16983  01B130  5034               	movf	(btemp+10)^0,w,c
 16984  01B132  26DE               	addwf	postinc2,f,c
 16985  01B134  5035               	movf	(btemp+11)^0,w,c
 16986  01B136  22DD               	addwfc	postdec2,f,c
 16987                           
 16988                           ;stkvar	_i @ sp[(-2)+0]
 16989  01B138  0EFE               	movlw	-2
 16990  01B13A  006F FF8C  F034    	movff	plusw1,btemp+10
 16991  01B140  0EFF               	movlw	-1
 16992  01B142  006F FF8C  F035    	movff	plusw1,btemp+11
 16993                           
 16994                           ;stkvar	_d @ sp[(-2)+-2]
 16995  01B148  0EFC               	movlw	-4
 16996  01B14A  006F FF8C  F032    	movff	plusw1,btemp+8
 16997  01B150  0EFD               	movlw	-3
 16998  01B152  006F FF8C  F033    	movff	plusw1,btemp+9
 16999  01B158  5034               	movf	(btemp+10)^0,w,c
 17000  01B15A  2432               	addwf	(btemp+8)^0,w,c
 17001  01B15C  6ED9               	movwf	fsr2l,c
 17002  01B15E  5035               	movf	(btemp+11)^0,w,c
 17003  01B160  2033               	addwfc	(btemp+9)^0,w,c
 17004  01B162  6EDA               	movwf	fsr2h,c
 17005  01B164  0E00               	movlw	0
 17006  01B166  6EDF               	movwf	indf2,c
 17007                           
 17008                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17009  01B168  0EFA               	movlw	250
 17010  01B16A  26E1               	addwf	fsr1l,f,c
 17011  01B16C  0EFF               	movlw	255
 17012  01B16E  22E2               	addwfc	fsr1h,f,c
 17013  01B170  0012               	return		;funcret
 17014  01B172                     __end_of_getname:
 17015                           	opt callstack 0
 17016                           
 17017 ;; *************** function ___secs_to_tm *****************
 17018 ;; Defined at:
 17019 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 17020 ;; Parameters:    Size  Location     Type
 17021 ;;  t               8  [STACK] long long 
 17022 ;;  tm              2  [STACK] PTR struct tm
 17023 ;;		 -> localtime@tm(24), 
 17024 ;; Auto vars:     Size  Location     Type
 17025 ;;  years           8  [STACK] long long 
 17026 ;;  days            8  [STACK] long long 
 17027 ;;  secs            8  [STACK] long long 
 17028 ;;  remdays         4  [STACK] long 
 17029 ;;  q_cycles        4  [STACK] long 
 17030 ;;  c_cycles        4  [STACK] long 
 17031 ;;  remyears        4  [STACK] long 
 17032 ;;  remsecs         4  [STACK] long 
 17033 ;;  qc_cycles       4  [STACK] long 
 17034 ;;  months          2  [STACK] int 
 17035 ;;  leap            2  [STACK] int 
 17036 ;;  yday            2  [STACK] int 
 17037 ;;  wday            2  [STACK] int 
 17038 ;; Return value:  Size  Location     Type
 17039 ;;                  4  [STACK] long 
 17040 ;; Registers used:
 17041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 17042 ;; Tracked objects:
 17043 ;;		On entry : 0/39
 17044 ;;		On exit  : 0/0
 17045 ;;		Unchanged: 0/0
 17046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17051 ;;Total ram usage:        0 bytes
 17052 ;; Hardware stack levels used:    1
 17053 ;; Hardware stack levels required when called:   16
 17054 ;; This function calls:
 17055 ;;		___aldiv
 17056 ;;		___almod
 17057 ;;		___aodiv
 17058 ;;		___aomod
 17059 ;;		___lmul
 17060 ;;		___omul
 17061 ;; This function is called by:
 17062 ;;		___localtime_r
 17063 ;; This function uses a reentrant model
 17064 ;;
 17065                           
 17066                           	psect	text50
 17067  0128BA                     __ptext50:
 17068                           	opt callstack 0
 17069  0128BA                     ___secs_to_tm:
 17070                           	opt callstack 0
 17071                           
 17072                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17073  0128BA  0E39               	movlw	57
 17074  0128BC  26E1               	addwf	fsr1l,f,c
 17075  0128BE  0E00               	movlw	0
 17076  0128C0  22E2               	addwfc	fsr1h,f,c
 17077                           
 17078                           ;stkvar	_t @ sp[(-57)+-8]
 17079                           
 17080                           ;incstack = 0
 17081  0128C2  0EC6               	movlw	-58
 17082  0128C4  AEE3               	btfss	plusw1,7,c
 17083  0128C6  D026               	goto	u16280
 17084  0128C8  0EC1               	movlw	-63
 17085  0128CA  006F FF8C  F02A    	movff	plusw1,btemp
 17086  0128D0  0E80               	movlw	128
 17087  0128D2  5E2A               	subwf	btemp^0,f,c
 17088  0128D4  0EC2               	movlw	-62
 17089  0128D6  006F FF8C  F02A    	movff	plusw1,btemp
 17090  0128DC  0EBD               	movlw	189
 17091  0128DE  5A2A               	subwfb	btemp^0,f,c
 17092  0128E0  0EC3               	movlw	-61
 17093  0128E2  006F FF8C  F02A    	movff	plusw1,btemp
 17094  0128E8  0E0E               	movlw	14
 17095  0128EA  5A2A               	subwfb	btemp^0,f,c
 17096  0128EC  0EC4               	movlw	-60
 17097  0128EE  006F FF8C  F02A    	movff	plusw1,btemp
 17098  0128F4  0EFF               	movlw	255
 17099  0128F6  5A2A               	subwfb	btemp^0,f,c
 17100  0128F8  0EC5               	movlw	-59
 17101  0128FA  006F FF8C  F02A    	movff	plusw1,btemp
 17102  012900  0EFF               	movlw	255
 17103  012902  5A2A               	subwfb	btemp^0,f,c
 17104  012904  0EC6               	movlw	-58
 17105  012906  006F FF8C  F02A    	movff	plusw1,btemp
 17106  01290C  0EFF               	movlw	255
 17107  01290E  5A2A               	subwfb	btemp^0,f,c
 17108  012910  A0D8               	btfss	status,0,c
 17109  012912  D028               	goto	u16290
 17110  012914                     u16280:
 17111                           
 17112                           ;stkvar	_t @ sp[(-57)+-8]
 17113  012914  0EC6               	movlw	-58
 17114  012916  BEE3               	btfsc	plusw1,7,c
 17115  012918  D02F               	goto	l16716
 17116  01291A  0EC6               	movlw	-58
 17117  01291C  50E3               	movf	plusw1,w,c
 17118  01291E  E122               	bnz	u16290
 17119  012920  0EC5               	movlw	-59
 17120  012922  50E3               	movf	plusw1,w,c
 17121  012924  E11F               	bnz	u16290
 17122  012926  0EC4               	movlw	-60
 17123  012928  50E3               	movf	plusw1,w,c
 17124  01292A  E11C               	bnz	u16290
 17125  01292C  0EBF               	movlw	-65
 17126  01292E  04E3               	decf	plusw1,w,c
 17127  012930  0EC0               	movlw	-64
 17128  012932  006F FF8C  F02A    	movff	plusw1,btemp
 17129  012938  0E7B               	movlw	123
 17130  01293A  5A2A               	subwfb	btemp^0,f,c
 17131  01293C  0EC1               	movlw	-63
 17132  01293E  006F FF8C  F02A    	movff	plusw1,btemp
 17133  012944  0E9D               	movlw	157
 17134  012946  5A2A               	subwfb	btemp^0,f,c
 17135  012948  0EC2               	movlw	-62
 17136  01294A  006F FF8C  F02A    	movff	plusw1,btemp
 17137  012950  0E40               	movlw	64
 17138  012952  5A2A               	subwfb	btemp^0,f,c
 17139  012954  0EC3               	movlw	-61
 17140  012956  006F FF8C  F02A    	movff	plusw1,btemp
 17141  01295C  0EF1               	movlw	241
 17142  01295E  5A2A               	subwfb	btemp^0,f,c
 17143  012960  A0D8               	btfss	status,0,c
 17144  012962  D00A               	goto	l16716
 17145  012964                     u16290:
 17146  012964  0EFF               	movlw	255
 17147  012966  6E2A               	movwf	btemp^0,c
 17148  012968  0EFF               	movlw	255
 17149  01296A  6E2B               	movwf	(btemp+1)^0,c
 17150  01296C  0EFF               	movlw	255
 17151  01296E  6E2C               	movwf	(btemp+2)^0,c
 17152  012970  0EFF               	movlw	255
 17153  012972  6E2D               	movwf	(btemp+3)^0,c
 17154  012974  EFC1  F09C         	goto	l3849
 17155  012978                     l16716:
 17156                           
 17157                           ;stkvar	_t @ sp[(-57)+-8]
 17158  012978  0EBF               	movlw	-65
 17159  01297A  50E3               	movf	plusw1,w,c
 17160  01297C  0F80               	addlw	128
 17161  01297E  6E3A               	movwf	(btemp+16)^0,c
 17162  012980  0EC0               	movlw	-64
 17163  012982  006F FF8C  F03B    	movff	plusw1,btemp+17
 17164  012988  0EA2               	movlw	162
 17165  01298A  223B               	addwfc	(btemp+17)^0,f,c
 17166  01298C  0EC1               	movlw	-63
 17167  01298E  006F FF8C  F03C    	movff	plusw1,btemp+18
 17168  012994  0E43               	movlw	67
 17169  012996  223C               	addwfc	(btemp+18)^0,f,c
 17170  012998  0EC2               	movlw	-62
 17171  01299A  006F FF8C  F03D    	movff	plusw1,btemp+19
 17172  0129A0  0EC7               	movlw	199
 17173  0129A2  223D               	addwfc	(btemp+19)^0,f,c
 17174  0129A4  0EC3               	movlw	-61
 17175  0129A6  006F FF8C  F03E    	movff	plusw1,btemp+20
 17176  0129AC  0EFF               	movlw	255
 17177  0129AE  223E               	addwfc	(btemp+20)^0,f,c
 17178  0129B0  0EC4               	movlw	-60
 17179  0129B2  006F FF8C  F03F    	movff	plusw1,btemp+21
 17180  0129B8  0EFF               	movlw	255
 17181  0129BA  223F               	addwfc	(btemp+21)^0,f,c
 17182  0129BC  0EC5               	movlw	-59
 17183  0129BE  006F FF8C  F040    	movff	plusw1,btemp+22
 17184  0129C4  0EFF               	movlw	255
 17185  0129C6  2240               	addwfc	(btemp+22)^0,f,c
 17186  0129C8  0EC6               	movlw	-58
 17187  0129CA  006F FF8C  F041    	movff	plusw1,btemp+23
 17188  0129D0  0EFF               	movlw	255
 17189  0129D2  2241               	addwfc	(btemp+23)^0,f,c
 17190                           
 17191                           ;stkvar	_secs @ sp[(-57)+17]
 17192  0129D4  0ED8               	movlw	-40
 17193  0129D6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17194  0129DC  0ED9               	movlw	-39
 17195  0129DE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17196  0129E4  0EDA               	movlw	-38
 17197  0129E6  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17198  0129EC  0EDB               	movlw	-37
 17199  0129EE  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17200  0129F4  0EDC               	movlw	-36
 17201  0129F6  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17202  0129FC  0EDD               	movlw	-35
 17203  0129FE  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17204  012A04  0EDE               	movlw	-34
 17205  012A06  0060  F103  FFE3   	movff	btemp+22,plusw1
 17206  012A0C  0EDF               	movlw	-33
 17207  012A0E  0060  F107  FFE3   	movff	btemp+23,plusw1
 17208  012A14  0E80               	movlw	128
 17209  012A16  6EE6               	movwf	postinc1,c
 17210  012A18  0E51               	movlw	81
 17211  012A1A  6EE6               	movwf	postinc1,c
 17212  012A1C  0E01               	movlw	1
 17213  012A1E  6EE6               	movwf	postinc1,c
 17214  012A20  0E00               	movlw	0
 17215  012A22  6EE6               	movwf	postinc1,c
 17216  012A24  0E00               	movlw	0
 17217  012A26  6EE6               	movwf	postinc1,c
 17218  012A28  0E00               	movlw	0
 17219  012A2A  6EE6               	movwf	postinc1,c
 17220  012A2C  0E00               	movlw	0
 17221  012A2E  6EE6               	movwf	postinc1,c
 17222  012A30  0E00               	movlw	0
 17223  012A32  6EE6               	movwf	postinc1,c
 17224                           
 17225                           ;stkvar	_secs @ sp[(-65)+17]
 17226  012A34  50E1               	movf	fsr1l,w,c
 17227  012A36  0FD0               	addlw	-48
 17228  012A38  6ED9               	movwf	fsr2l,c
 17229  012A3A  50E2               	movf	fsr1h,w,c
 17230  012A3C  6EDA               	movwf	fsr2h,c
 17231  012A3E  0EFF               	movlw	255
 17232  012A40  22DA               	addwfc	fsr2h,f,c
 17233  012A42  006F FF7B FFE6     	movff	postinc2,postinc1
 17234  012A48  006F FF7B FFE6     	movff	postinc2,postinc1
 17235  012A4E  006F FF7B FFE6     	movff	postinc2,postinc1
 17236  012A54  006F FF7B FFE6     	movff	postinc2,postinc1
 17237  012A5A  006F FF7B FFE6     	movff	postinc2,postinc1
 17238  012A60  006F FF7B FFE6     	movff	postinc2,postinc1
 17239  012A66  006F FF7B FFE6     	movff	postinc2,postinc1
 17240  012A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 17241  012A72  ECE7  F0E0         	call	___aodiv	;wreg free
 17242  012A76  52E5               	movf	postdec1,f,c
 17243  012A78  006F FF9C  F041    	movff	indf1,btemp+23
 17244  012A7E  52E5               	movf	postdec1,f,c
 17245  012A80  006F FF9C  F040    	movff	indf1,btemp+22
 17246  012A86  52E5               	movf	postdec1,f,c
 17247  012A88  006F FF9C  F03F    	movff	indf1,btemp+21
 17248  012A8E  52E5               	movf	postdec1,f,c
 17249  012A90  006F FF9C  F03E    	movff	indf1,btemp+20
 17250  012A96  52E5               	movf	postdec1,f,c
 17251  012A98  006F FF9C  F03D    	movff	indf1,btemp+19
 17252  012A9E  52E5               	movf	postdec1,f,c
 17253  012AA0  006F FF9C  F03C    	movff	indf1,btemp+18
 17254  012AA6  52E5               	movf	postdec1,f,c
 17255  012AA8  006F FF9C  F03B    	movff	indf1,btemp+17
 17256  012AAE  52E5               	movf	postdec1,f,c
 17257  012AB0  006F FF9C  F03A    	movff	indf1,btemp+16
 17258  012AB6  0EF8               	movlw	248
 17259  012AB8  26E1               	addwf	fsr1l,f,c
 17260  012ABA  0EFF               	movlw	255
 17261  012ABC  22E2               	addwfc	fsr1h,f,c
 17262                           
 17263                           ;stkvar	_days @ sp[(-57)+9]
 17264  012ABE  0ED0               	movlw	-48
 17265  012AC0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17266  012AC6  0ED1               	movlw	-47
 17267  012AC8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17268  012ACE  0ED2               	movlw	-46
 17269  012AD0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17270  012AD6  0ED3               	movlw	-45
 17271  012AD8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17272  012ADE  0ED4               	movlw	-44
 17273  012AE0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17274  012AE6  0ED5               	movlw	-43
 17275  012AE8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17276  012AEE  0ED6               	movlw	-42
 17277  012AF0  0060  F103  FFE3   	movff	btemp+22,plusw1
 17278  012AF6  0ED7               	movlw	-41
 17279  012AF8  0060  F107  FFE3   	movff	btemp+23,plusw1
 17280  012AFE  0E80               	movlw	128
 17281  012B00  6EE6               	movwf	postinc1,c
 17282  012B02  0E51               	movlw	81
 17283  012B04  6EE6               	movwf	postinc1,c
 17284  012B06  0E01               	movlw	1
 17285  012B08  6EE6               	movwf	postinc1,c
 17286  012B0A  0E00               	movlw	0
 17287  012B0C  6EE6               	movwf	postinc1,c
 17288  012B0E  0E00               	movlw	0
 17289  012B10  6EE6               	movwf	postinc1,c
 17290  012B12  0E00               	movlw	0
 17291  012B14  6EE6               	movwf	postinc1,c
 17292  012B16  0E00               	movlw	0
 17293  012B18  6EE6               	movwf	postinc1,c
 17294  012B1A  0E00               	movlw	0
 17295  012B1C  6EE6               	movwf	postinc1,c
 17296                           
 17297                           ;stkvar	_secs @ sp[(-65)+17]
 17298  012B1E  50E1               	movf	fsr1l,w,c
 17299  012B20  0FD0               	addlw	-48
 17300  012B22  6ED9               	movwf	fsr2l,c
 17301  012B24  50E2               	movf	fsr1h,w,c
 17302  012B26  6EDA               	movwf	fsr2h,c
 17303  012B28  0EFF               	movlw	255
 17304  012B2A  22DA               	addwfc	fsr2h,f,c
 17305  012B2C  006F FF7B FFE6     	movff	postinc2,postinc1
 17306  012B32  006F FF7B FFE6     	movff	postinc2,postinc1
 17307  012B38  006F FF7B FFE6     	movff	postinc2,postinc1
 17308  012B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 17309  012B44  006F FF7B FFE6     	movff	postinc2,postinc1
 17310  012B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 17311  012B50  006F FF7B FFE6     	movff	postinc2,postinc1
 17312  012B56  006F FF7B FFE6     	movff	postinc2,postinc1
 17313  012B5C  ECA6  F0E5         	call	___aomod	;wreg free
 17314  012B60  52E5               	movf	postdec1,f,c
 17315  012B62  006F FF9C  F041    	movff	indf1,btemp+23
 17316  012B68  52E5               	movf	postdec1,f,c
 17317  012B6A  006F FF9C  F040    	movff	indf1,btemp+22
 17318  012B70  52E5               	movf	postdec1,f,c
 17319  012B72  006F FF9C  F03F    	movff	indf1,btemp+21
 17320  012B78  52E5               	movf	postdec1,f,c
 17321  012B7A  006F FF9C  F03E    	movff	indf1,btemp+20
 17322  012B80  52E5               	movf	postdec1,f,c
 17323  012B82  006F FF9C  F03D    	movff	indf1,btemp+19
 17324  012B88  52E5               	movf	postdec1,f,c
 17325  012B8A  006F FF9C  F03C    	movff	indf1,btemp+18
 17326  012B90  52E5               	movf	postdec1,f,c
 17327  012B92  006F FF9C  F03B    	movff	indf1,btemp+17
 17328  012B98  52E5               	movf	postdec1,f,c
 17329  012B9A  006F FF9C  F03A    	movff	indf1,btemp+16
 17330  012BA0  0EF8               	movlw	248
 17331  012BA2  26E1               	addwf	fsr1l,f,c
 17332  012BA4  0EFF               	movlw	255
 17333  012BA6  22E2               	addwfc	fsr1h,f,c
 17334  012BA8  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17335  012BAE  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17336  012BB4  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17337  012BBA  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17338                           
 17339                           ;stkvar	_remsecs @ sp[(-57)+41]
 17340  012BC0  0EF0               	movlw	-16
 17341  012BC2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17342  012BC8  0EF1               	movlw	-15
 17343  012BCA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17344  012BD0  0EF2               	movlw	-14
 17345  012BD2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17346  012BD8  0EF3               	movlw	-13
 17347  012BDA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17348                           
 17349                           ;stkvar	_remsecs @ sp[(-57)+41]
 17350  012BE0  0EF3               	movlw	-13
 17351  012BE2  AEE3               	btfss	plusw1,7,c
 17352  012BE4  D01F               	goto	l16728
 17353                           
 17354                           ;stkvar	_remsecs @ sp[(-57)+41]
 17355  012BE6  50E1               	movf	fsr1l,w,c
 17356  012BE8  0FF0               	addlw	-16
 17357  012BEA  6ED9               	movwf	fsr2l,c
 17358  012BEC  50E2               	movf	fsr1h,w,c
 17359  012BEE  6EDA               	movwf	fsr2h,c
 17360  012BF0  0EFF               	movlw	255
 17361  012BF2  22DA               	addwfc	fsr2h,f,c
 17362  012BF4  0E80               	movlw	128
 17363  012BF6  26DE               	addwf	postinc2,f,c
 17364  012BF8  0E51               	movlw	81
 17365  012BFA  22DE               	addwfc	postinc2,f,c
 17366  012BFC  0E01               	movlw	1
 17367  012BFE  22DE               	addwfc	postinc2,f,c
 17368  012C00  0E00               	movlw	0
 17369  012C02  22DE               	addwfc	postinc2,f,c
 17370                           
 17371                           ;stkvar	_days @ sp[(-57)+9]
 17372  012C04  50E1               	movf	fsr1l,w,c
 17373  012C06  0FD0               	addlw	-48
 17374  012C08  6ED9               	movwf	fsr2l,c
 17375  012C0A  50E2               	movf	fsr1h,w,c
 17376  012C0C  6EDA               	movwf	fsr2h,c
 17377  012C0E  0EFF               	movlw	255
 17378  012C10  22DA               	addwfc	fsr2h,f,c
 17379  012C12  06DE               	decf	postinc2,f,c
 17380  012C14  0E00               	movlw	0
 17381  012C16  5ADE               	subwfb	postinc2,f,c
 17382  012C18  5ADE               	subwfb	postinc2,f,c
 17383  012C1A  5ADE               	subwfb	postinc2,f,c
 17384  012C1C  5ADE               	subwfb	postinc2,f,c
 17385  012C1E  5ADE               	subwfb	postinc2,f,c
 17386  012C20  5ADE               	subwfb	postinc2,f,c
 17387  012C22  5ADE               	subwfb	postinc2,f,c
 17388  012C24                     l16728:
 17389  012C24  0E07               	movlw	7
 17390  012C26  6EE6               	movwf	postinc1,c
 17391  012C28  0E00               	movlw	0
 17392  012C2A  6EE6               	movwf	postinc1,c
 17393  012C2C  0E00               	movlw	0
 17394  012C2E  6EE6               	movwf	postinc1,c
 17395  012C30  0E00               	movlw	0
 17396  012C32  6EE6               	movwf	postinc1,c
 17397  012C34  0E00               	movlw	0
 17398  012C36  6EE6               	movwf	postinc1,c
 17399  012C38  0E00               	movlw	0
 17400  012C3A  6EE6               	movwf	postinc1,c
 17401  012C3C  0E00               	movlw	0
 17402  012C3E  6EE6               	movwf	postinc1,c
 17403  012C40  0E00               	movlw	0
 17404  012C42  6EE6               	movwf	postinc1,c
 17405                           
 17406                           ;stkvar	_days @ sp[(-65)+9]
 17407  012C44  0EC8               	movlw	-56
 17408  012C46  50E3               	movf	plusw1,w,c
 17409  012C48  0F03               	addlw	3
 17410  012C4A  6E3A               	movwf	(btemp+16)^0,c
 17411  012C4C  0EC9               	movlw	-55
 17412  012C4E  006F FF8C  F03B    	movff	plusw1,btemp+17
 17413  012C54  0E00               	movlw	0
 17414  012C56  223B               	addwfc	(btemp+17)^0,f,c
 17415  012C58  0ECA               	movlw	-54
 17416  012C5A  006F FF8C  F03C    	movff	plusw1,btemp+18
 17417  012C60  0E00               	movlw	0
 17418  012C62  223C               	addwfc	(btemp+18)^0,f,c
 17419  012C64  0ECB               	movlw	-53
 17420  012C66  006F FF8C  F03D    	movff	plusw1,btemp+19
 17421  012C6C  0E00               	movlw	0
 17422  012C6E  223D               	addwfc	(btemp+19)^0,f,c
 17423  012C70  0ECC               	movlw	-52
 17424  012C72  006F FF8C  F03E    	movff	plusw1,btemp+20
 17425  012C78  0E00               	movlw	0
 17426  012C7A  223E               	addwfc	(btemp+20)^0,f,c
 17427  012C7C  0ECD               	movlw	-51
 17428  012C7E  006F FF8C  F03F    	movff	plusw1,btemp+21
 17429  012C84  0E00               	movlw	0
 17430  012C86  223F               	addwfc	(btemp+21)^0,f,c
 17431  012C88  0ECE               	movlw	-50
 17432  012C8A  006F FF8C  F040    	movff	plusw1,btemp+22
 17433  012C90  0E00               	movlw	0
 17434  012C92  2240               	addwfc	(btemp+22)^0,f,c
 17435  012C94  0ECF               	movlw	-49
 17436  012C96  006F FF8C  F041    	movff	plusw1,btemp+23
 17437  012C9C  0E00               	movlw	0
 17438  012C9E  2241               	addwfc	(btemp+23)^0,f,c
 17439  012CA0  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17440  012CA6  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17441  012CAC  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17442  012CB2  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17443  012CB8  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17444  012CBE  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17445  012CC4  0060  F103  FFE6   	movff	btemp+22,postinc1
 17446  012CCA  0060  F107  FFE6   	movff	btemp+23,postinc1
 17447  012CD0  ECA6  F0E5         	call	___aomod	;wreg free
 17448  012CD4  52E5               	movf	postdec1,f,c
 17449  012CD6  006F FF9C  F041    	movff	indf1,btemp+23
 17450  012CDC  52E5               	movf	postdec1,f,c
 17451  012CDE  006F FF9C  F040    	movff	indf1,btemp+22
 17452  012CE4  52E5               	movf	postdec1,f,c
 17453  012CE6  006F FF9C  F03F    	movff	indf1,btemp+21
 17454  012CEC  52E5               	movf	postdec1,f,c
 17455  012CEE  006F FF9C  F03E    	movff	indf1,btemp+20
 17456  012CF4  52E5               	movf	postdec1,f,c
 17457  012CF6  006F FF9C  F03D    	movff	indf1,btemp+19
 17458  012CFC  52E5               	movf	postdec1,f,c
 17459  012CFE  006F FF9C  F03C    	movff	indf1,btemp+18
 17460  012D04  52E5               	movf	postdec1,f,c
 17461  012D06  006F FF9C  F03B    	movff	indf1,btemp+17
 17462  012D0C  52E5               	movf	postdec1,f,c
 17463  012D0E  006F FF9C  F03A    	movff	indf1,btemp+16
 17464  012D14  0EF8               	movlw	248
 17465  012D16  26E1               	addwf	fsr1l,f,c
 17466  012D18  0EFF               	movlw	255
 17467  012D1A  22E2               	addwfc	fsr1h,f,c
 17468  012D1C  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17469  012D22  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17470                           
 17471                           ;stkvar	_wday @ sp[(-57)+55]
 17472  012D28  0EFE               	movlw	-2
 17473  012D2A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17474  012D30  0EFF               	movlw	-1
 17475  012D32  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17476                           
 17477                           ;stkvar	_wday @ sp[(-57)+55]
 17478  012D38  0EFF               	movlw	-1
 17479  012D3A  AEE3               	btfss	plusw1,7,c
 17480  012D3C  D011               	goto	l16734
 17481                           
 17482                           ;stkvar	_wday @ sp[(-57)+55]
 17483  012D3E  0EFE               	movlw	-2
 17484  012D40  50E3               	movf	plusw1,w,c
 17485  012D42  0F07               	addlw	7
 17486  012D44  6E2A               	movwf	btemp^0,c
 17487  012D46  0EFE               	movlw	-2
 17488  012D48  0060  F0AB  FFE3   	movff	btemp,plusw1
 17489  012D4E  6A2A               	clrf	btemp^0,c
 17490  012D50  0EFF               	movlw	-1
 17491  012D52  50E3               	movf	plusw1,w,c
 17492  012D54  202A               	addwfc	btemp^0,w,c
 17493  012D56  6E2A               	movwf	btemp^0,c
 17494  012D58  0EFF               	movlw	-1
 17495  012D5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 17496  012D60                     l16734:
 17497  012D60  0EB1               	movlw	177
 17498  012D62  6EE6               	movwf	postinc1,c
 17499  012D64  0E3A               	movlw	58
 17500  012D66  6EE6               	movwf	postinc1,c
 17501  012D68  0E02               	movlw	2
 17502  012D6A  6EE6               	movwf	postinc1,c
 17503  012D6C  0E00               	movlw	0
 17504  012D6E  6EE6               	movwf	postinc1,c
 17505  012D70  0E00               	movlw	0
 17506  012D72  6EE6               	movwf	postinc1,c
 17507  012D74  0E00               	movlw	0
 17508  012D76  6EE6               	movwf	postinc1,c
 17509  012D78  0E00               	movlw	0
 17510  012D7A  6EE6               	movwf	postinc1,c
 17511  012D7C  0E00               	movlw	0
 17512  012D7E  6EE6               	movwf	postinc1,c
 17513                           
 17514                           ;stkvar	_days @ sp[(-65)+9]
 17515  012D80  50E1               	movf	fsr1l,w,c
 17516  012D82  0FC8               	addlw	-56
 17517  012D84  6ED9               	movwf	fsr2l,c
 17518  012D86  50E2               	movf	fsr1h,w,c
 17519  012D88  6EDA               	movwf	fsr2h,c
 17520  012D8A  0EFF               	movlw	255
 17521  012D8C  22DA               	addwfc	fsr2h,f,c
 17522  012D8E  006F FF7B FFE6     	movff	postinc2,postinc1
 17523  012D94  006F FF7B FFE6     	movff	postinc2,postinc1
 17524  012D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 17525  012DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 17526  012DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 17527  012DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 17528  012DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 17529  012DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 17530  012DBE  ECE7  F0E0         	call	___aodiv	;wreg free
 17531  012DC2  52E5               	movf	postdec1,f,c
 17532  012DC4  006F FF9C  F041    	movff	indf1,btemp+23
 17533  012DCA  52E5               	movf	postdec1,f,c
 17534  012DCC  006F FF9C  F040    	movff	indf1,btemp+22
 17535  012DD2  52E5               	movf	postdec1,f,c
 17536  012DD4  006F FF9C  F03F    	movff	indf1,btemp+21
 17537  012DDA  52E5               	movf	postdec1,f,c
 17538  012DDC  006F FF9C  F03E    	movff	indf1,btemp+20
 17539  012DE2  52E5               	movf	postdec1,f,c
 17540  012DE4  006F FF9C  F03D    	movff	indf1,btemp+19
 17541  012DEA  52E5               	movf	postdec1,f,c
 17542  012DEC  006F FF9C  F03C    	movff	indf1,btemp+18
 17543  012DF2  52E5               	movf	postdec1,f,c
 17544  012DF4  006F FF9C  F03B    	movff	indf1,btemp+17
 17545  012DFA  52E5               	movf	postdec1,f,c
 17546  012DFC  006F FF9C  F03A    	movff	indf1,btemp+16
 17547  012E02  0EF8               	movlw	248
 17548  012E04  26E1               	addwf	fsr1l,f,c
 17549  012E06  0EFF               	movlw	255
 17550  012E08  22E2               	addwfc	fsr1h,f,c
 17551  012E0A  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17552  012E10  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17553  012E16  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17554  012E1C  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17555                           
 17556                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17557  012E22  0EF4               	movlw	-12
 17558  012E24  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17559  012E2A  0EF5               	movlw	-11
 17560  012E2C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17561  012E32  0EF6               	movlw	-10
 17562  012E34  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17563  012E3A  0EF7               	movlw	-9
 17564  012E3C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17565  012E42  0EB1               	movlw	177
 17566  012E44  6EE6               	movwf	postinc1,c
 17567  012E46  0E3A               	movlw	58
 17568  012E48  6EE6               	movwf	postinc1,c
 17569  012E4A  0E02               	movlw	2
 17570  012E4C  6EE6               	movwf	postinc1,c
 17571  012E4E  0E00               	movlw	0
 17572  012E50  6EE6               	movwf	postinc1,c
 17573  012E52  0E00               	movlw	0
 17574  012E54  6EE6               	movwf	postinc1,c
 17575  012E56  0E00               	movlw	0
 17576  012E58  6EE6               	movwf	postinc1,c
 17577  012E5A  0E00               	movlw	0
 17578  012E5C  6EE6               	movwf	postinc1,c
 17579  012E5E  0E00               	movlw	0
 17580  012E60  6EE6               	movwf	postinc1,c
 17581                           
 17582                           ;stkvar	_days @ sp[(-65)+9]
 17583  012E62  50E1               	movf	fsr1l,w,c
 17584  012E64  0FC8               	addlw	-56
 17585  012E66  6ED9               	movwf	fsr2l,c
 17586  012E68  50E2               	movf	fsr1h,w,c
 17587  012E6A  6EDA               	movwf	fsr2h,c
 17588  012E6C  0EFF               	movlw	255
 17589  012E6E  22DA               	addwfc	fsr2h,f,c
 17590  012E70  006F FF7B FFE6     	movff	postinc2,postinc1
 17591  012E76  006F FF7B FFE6     	movff	postinc2,postinc1
 17592  012E7C  006F FF7B FFE6     	movff	postinc2,postinc1
 17593  012E82  006F FF7B FFE6     	movff	postinc2,postinc1
 17594  012E88  006F FF7B FFE6     	movff	postinc2,postinc1
 17595  012E8E  006F FF7B FFE6     	movff	postinc2,postinc1
 17596  012E94  006F FF7B FFE6     	movff	postinc2,postinc1
 17597  012E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 17598  012EA0  ECA6  F0E5         	call	___aomod	;wreg free
 17599  012EA4  52E5               	movf	postdec1,f,c
 17600  012EA6  006F FF9C  F041    	movff	indf1,btemp+23
 17601  012EAC  52E5               	movf	postdec1,f,c
 17602  012EAE  006F FF9C  F040    	movff	indf1,btemp+22
 17603  012EB4  52E5               	movf	postdec1,f,c
 17604  012EB6  006F FF9C  F03F    	movff	indf1,btemp+21
 17605  012EBC  52E5               	movf	postdec1,f,c
 17606  012EBE  006F FF9C  F03E    	movff	indf1,btemp+20
 17607  012EC4  52E5               	movf	postdec1,f,c
 17608  012EC6  006F FF9C  F03D    	movff	indf1,btemp+19
 17609  012ECC  52E5               	movf	postdec1,f,c
 17610  012ECE  006F FF9C  F03C    	movff	indf1,btemp+18
 17611  012ED4  52E5               	movf	postdec1,f,c
 17612  012ED6  006F FF9C  F03B    	movff	indf1,btemp+17
 17613  012EDC  52E5               	movf	postdec1,f,c
 17614  012EDE  006F FF9C  F03A    	movff	indf1,btemp+16
 17615  012EE4  0EF8               	movlw	248
 17616  012EE6  26E1               	addwf	fsr1l,f,c
 17617  012EE8  0EFF               	movlw	255
 17618  012EEA  22E2               	addwfc	fsr1h,f,c
 17619  012EEC  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17620  012EF2  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17621  012EF8  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17622  012EFE  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17623                           
 17624                           ;stkvar	_remdays @ sp[(-57)+25]
 17625  012F04  0EE0               	movlw	-32
 17626  012F06  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17627  012F0C  0EE1               	movlw	-31
 17628  012F0E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17629  012F14  0EE2               	movlw	-30
 17630  012F16  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17631  012F1C  0EE3               	movlw	-29
 17632  012F1E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17633                           
 17634                           ;stkvar	_remdays @ sp[(-57)+25]
 17635  012F24  0EE3               	movlw	-29
 17636  012F26  AEE3               	btfss	plusw1,7,c
 17637  012F28  D01B               	goto	l16742
 17638                           
 17639                           ;stkvar	_remdays @ sp[(-57)+25]
 17640  012F2A  50E1               	movf	fsr1l,w,c
 17641  012F2C  0FE0               	addlw	-32
 17642  012F2E  6ED9               	movwf	fsr2l,c
 17643  012F30  50E2               	movf	fsr1h,w,c
 17644  012F32  6EDA               	movwf	fsr2h,c
 17645  012F34  0EFF               	movlw	255
 17646  012F36  22DA               	addwfc	fsr2h,f,c
 17647  012F38  0EB1               	movlw	177
 17648  012F3A  26DE               	addwf	postinc2,f,c
 17649  012F3C  0E3A               	movlw	58
 17650  012F3E  22DE               	addwfc	postinc2,f,c
 17651  012F40  0E02               	movlw	2
 17652  012F42  22DE               	addwfc	postinc2,f,c
 17653  012F44  0E00               	movlw	0
 17654  012F46  22DE               	addwfc	postinc2,f,c
 17655                           
 17656                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17657  012F48  50E1               	movf	fsr1l,w,c
 17658  012F4A  0FF4               	addlw	-12
 17659  012F4C  6ED9               	movwf	fsr2l,c
 17660  012F4E  50E2               	movf	fsr1h,w,c
 17661  012F50  6EDA               	movwf	fsr2h,c
 17662  012F52  0EFF               	movlw	255
 17663  012F54  22DA               	addwfc	fsr2h,f,c
 17664  012F56  06DE               	decf	postinc2,f,c
 17665  012F58  0E00               	movlw	0
 17666  012F5A  5ADE               	subwfb	postinc2,f,c
 17667  012F5C  5ADE               	subwfb	postinc2,f,c
 17668  012F5E  5ADE               	subwfb	postinc2,f,c
 17669  012F60                     l16742:
 17670  012F60  0EAC               	movlw	172
 17671  012F62  6EE6               	movwf	postinc1,c
 17672  012F64  0E8E               	movlw	142
 17673  012F66  6EE6               	movwf	postinc1,c
 17674  012F68  0E00               	movlw	0
 17675  012F6A  6EE6               	movwf	postinc1,c
 17676  012F6C  0E00               	movlw	0
 17677  012F6E  6EE6               	movwf	postinc1,c
 17678                           
 17679                           ;stkvar	_remdays @ sp[(-61)+25]
 17680  012F70  0EDC               	movlw	-36
 17681  012F72  006F FF8F FFE6     	movff	plusw1,postinc1
 17682  012F78  006F FF8F FFE6     	movff	plusw1,postinc1
 17683  012F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 17684  012F84  006F FF8F FFE6     	movff	plusw1,postinc1
 17685  012F8A  EC66  F0EF         	call	___aldiv	;wreg free
 17686                           
 17687                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17688  012F8E  0EE8               	movlw	-24
 17689  012F90  0060  F0AB  FFE3   	movff	btemp,plusw1
 17690  012F96  0EE9               	movlw	-23
 17691  012F98  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17692  012F9E  0EEA               	movlw	-22
 17693  012FA0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17694  012FA6  0EEB               	movlw	-21
 17695  012FA8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17696                           
 17697                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17698  012FAE  0EE8               	movlw	-24
 17699  012FB0  006F FF8C  F02A    	movff	plusw1,btemp
 17700  012FB6  0E04               	movlw	4
 17701  012FB8  182A               	xorwf	btemp^0,w,c
 17702  012FBA  E116               	bnz	l16748
 17703  012FBC  0EE9               	movlw	-23
 17704  012FBE  50E3               	movf	plusw1,w,c
 17705  012FC0  E113               	bnz	l16748
 17706  012FC2  0EEA               	movlw	-22
 17707  012FC4  50E3               	movf	plusw1,w,c
 17708  012FC6  E110               	bnz	l16748
 17709  012FC8  0EEB               	movlw	-21
 17710  012FCA  50E3               	movf	plusw1,w,c
 17711  012FCC  A4D8               	btfss	status,2,c
 17712  012FCE  D00C               	goto	l16748
 17713                           
 17714                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17715  012FD0  50E1               	movf	fsr1l,w,c
 17716  012FD2  0FE8               	addlw	-24
 17717  012FD4  6ED9               	movwf	fsr2l,c
 17718  012FD6  50E2               	movf	fsr1h,w,c
 17719  012FD8  6EDA               	movwf	fsr2h,c
 17720  012FDA  0EFF               	movlw	255
 17721  012FDC  22DA               	addwfc	fsr2h,f,c
 17722  012FDE  06DE               	decf	postinc2,f,c
 17723  012FE0  0E00               	movlw	0
 17724  012FE2  5ADE               	subwfb	postinc2,f,c
 17725  012FE4  5ADE               	subwfb	postinc2,f,c
 17726  012FE6  5ADE               	subwfb	postinc2,f,c
 17727  012FE8                     l16748:
 17728  012FE8  0EAC               	movlw	172
 17729  012FEA  6EE6               	movwf	postinc1,c
 17730  012FEC  0E8E               	movlw	142
 17731  012FEE  6EE6               	movwf	postinc1,c
 17732  012FF0  0E00               	movlw	0
 17733  012FF2  6EE6               	movwf	postinc1,c
 17734  012FF4  0E00               	movlw	0
 17735  012FF6  6EE6               	movwf	postinc1,c
 17736                           
 17737                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17738  012FF8  0EE4               	movlw	-28
 17739  012FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17740  013000  006F FF8F FFE6     	movff	plusw1,postinc1
 17741  013006  006F FF8F FFE6     	movff	plusw1,postinc1
 17742  01300C  006F FF8F FFE6     	movff	plusw1,postinc1
 17743  013012  EC46  F001         	call	___lmul	;wreg free
 17744                           
 17745                           ;stkvar	_remdays @ sp[(-57)+25]
 17746  013016  50E1               	movf	fsr1l,w,c
 17747  013018  0FE0               	addlw	-32
 17748  01301A  6ED9               	movwf	fsr2l,c
 17749  01301C  50E2               	movf	fsr1h,w,c
 17750  01301E  6EDA               	movwf	fsr2h,c
 17751  013020  0EFF               	movlw	255
 17752  013022  22DA               	addwfc	fsr2h,f,c
 17753  013024  502A               	movf	btemp^0,w,c
 17754  013026  5EDE               	subwf	postinc2,f,c
 17755  013028  502B               	movf	(btemp+1)^0,w,c
 17756  01302A  5ADE               	subwfb	postinc2,f,c
 17757  01302C  502C               	movf	(btemp+2)^0,w,c
 17758  01302E  5ADE               	subwfb	postinc2,f,c
 17759  013030  502D               	movf	(btemp+3)^0,w,c
 17760  013032  5ADE               	subwfb	postinc2,f,c
 17761  013034  0EB5               	movlw	181
 17762  013036  6EE6               	movwf	postinc1,c
 17763  013038  0E05               	movlw	5
 17764  01303A  6EE6               	movwf	postinc1,c
 17765  01303C  0E00               	movlw	0
 17766  01303E  6EE6               	movwf	postinc1,c
 17767  013040  0E00               	movlw	0
 17768  013042  6EE6               	movwf	postinc1,c
 17769                           
 17770                           ;stkvar	_remdays @ sp[(-61)+25]
 17771  013044  0EDC               	movlw	-36
 17772  013046  006F FF8F FFE6     	movff	plusw1,postinc1
 17773  01304C  006F FF8F FFE6     	movff	plusw1,postinc1
 17774  013052  006F FF8F FFE6     	movff	plusw1,postinc1
 17775  013058  006F FF8F FFE6     	movff	plusw1,postinc1
 17776  01305E  EC66  F0EF         	call	___aldiv	;wreg free
 17777                           
 17778                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17779  013062  0EE4               	movlw	-28
 17780  013064  0060  F0AB  FFE3   	movff	btemp,plusw1
 17781  01306A  0EE5               	movlw	-27
 17782  01306C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17783  013072  0EE6               	movlw	-26
 17784  013074  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17785  01307A  0EE7               	movlw	-25
 17786  01307C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17787                           
 17788                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17789  013082  0EE4               	movlw	-28
 17790  013084  006F FF8C  F02A    	movff	plusw1,btemp
 17791  01308A  0E19               	movlw	25
 17792  01308C  182A               	xorwf	btemp^0,w,c
 17793  01308E  E116               	bnz	l16756
 17794  013090  0EE5               	movlw	-27
 17795  013092  50E3               	movf	plusw1,w,c
 17796  013094  E113               	bnz	l16756
 17797  013096  0EE6               	movlw	-26
 17798  013098  50E3               	movf	plusw1,w,c
 17799  01309A  E110               	bnz	l16756
 17800  01309C  0EE7               	movlw	-25
 17801  01309E  50E3               	movf	plusw1,w,c
 17802  0130A0  A4D8               	btfss	status,2,c
 17803  0130A2  D00C               	goto	l16756
 17804                           
 17805                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17806  0130A4  50E1               	movf	fsr1l,w,c
 17807  0130A6  0FE4               	addlw	-28
 17808  0130A8  6ED9               	movwf	fsr2l,c
 17809  0130AA  50E2               	movf	fsr1h,w,c
 17810  0130AC  6EDA               	movwf	fsr2h,c
 17811  0130AE  0EFF               	movlw	255
 17812  0130B0  22DA               	addwfc	fsr2h,f,c
 17813  0130B2  06DE               	decf	postinc2,f,c
 17814  0130B4  0E00               	movlw	0
 17815  0130B6  5ADE               	subwfb	postinc2,f,c
 17816  0130B8  5ADE               	subwfb	postinc2,f,c
 17817  0130BA  5ADE               	subwfb	postinc2,f,c
 17818  0130BC                     l16756:
 17819  0130BC  0EB5               	movlw	181
 17820  0130BE  6EE6               	movwf	postinc1,c
 17821  0130C0  0E05               	movlw	5
 17822  0130C2  6EE6               	movwf	postinc1,c
 17823  0130C4  0E00               	movlw	0
 17824  0130C6  6EE6               	movwf	postinc1,c
 17825  0130C8  0E00               	movlw	0
 17826  0130CA  6EE6               	movwf	postinc1,c
 17827                           
 17828                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17829  0130CC  0EE0               	movlw	-32
 17830  0130CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17831  0130D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17832  0130DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17833  0130E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17834  0130E6  EC46  F001         	call	___lmul	;wreg free
 17835                           
 17836                           ;stkvar	_remdays @ sp[(-57)+25]
 17837  0130EA  50E1               	movf	fsr1l,w,c
 17838  0130EC  0FE0               	addlw	-32
 17839  0130EE  6ED9               	movwf	fsr2l,c
 17840  0130F0  50E2               	movf	fsr1h,w,c
 17841  0130F2  6EDA               	movwf	fsr2h,c
 17842  0130F4  0EFF               	movlw	255
 17843  0130F6  22DA               	addwfc	fsr2h,f,c
 17844  0130F8  502A               	movf	btemp^0,w,c
 17845  0130FA  5EDE               	subwf	postinc2,f,c
 17846  0130FC  502B               	movf	(btemp+1)^0,w,c
 17847  0130FE  5ADE               	subwfb	postinc2,f,c
 17848  013100  502C               	movf	(btemp+2)^0,w,c
 17849  013102  5ADE               	subwfb	postinc2,f,c
 17850  013104  502D               	movf	(btemp+3)^0,w,c
 17851  013106  5ADE               	subwfb	postinc2,f,c
 17852  013108  0E6D               	movlw	109
 17853  01310A  6EE6               	movwf	postinc1,c
 17854  01310C  0E01               	movlw	1
 17855  01310E  6EE6               	movwf	postinc1,c
 17856  013110  0E00               	movlw	0
 17857  013112  6EE6               	movwf	postinc1,c
 17858  013114  0E00               	movlw	0
 17859  013116  6EE6               	movwf	postinc1,c
 17860                           
 17861                           ;stkvar	_remdays @ sp[(-61)+25]
 17862  013118  0EDC               	movlw	-36
 17863  01311A  006F FF8F FFE6     	movff	plusw1,postinc1
 17864  013120  006F FF8F FFE6     	movff	plusw1,postinc1
 17865  013126  006F FF8F FFE6     	movff	plusw1,postinc1
 17866  01312C  006F FF8F FFE6     	movff	plusw1,postinc1
 17867  013132  EC66  F0EF         	call	___aldiv	;wreg free
 17868                           
 17869                           ;stkvar	_remyears @ sp[(-57)+37]
 17870  013136  0EEC               	movlw	-20
 17871  013138  0060  F0AB  FFE3   	movff	btemp,plusw1
 17872  01313E  0EED               	movlw	-19
 17873  013140  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17874  013146  0EEE               	movlw	-18
 17875  013148  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17876  01314E  0EEF               	movlw	-17
 17877  013150  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17878                           
 17879                           ;stkvar	_remyears @ sp[(-57)+37]
 17880  013156  0EEC               	movlw	-20
 17881  013158  006F FF8C  F02A    	movff	plusw1,btemp
 17882  01315E  0E04               	movlw	4
 17883  013160  182A               	xorwf	btemp^0,w,c
 17884  013162  E116               	bnz	l16764
 17885  013164  0EED               	movlw	-19
 17886  013166  50E3               	movf	plusw1,w,c
 17887  013168  E113               	bnz	l16764
 17888  01316A  0EEE               	movlw	-18
 17889  01316C  50E3               	movf	plusw1,w,c
 17890  01316E  E110               	bnz	l16764
 17891  013170  0EEF               	movlw	-17
 17892  013172  50E3               	movf	plusw1,w,c
 17893  013174  A4D8               	btfss	status,2,c
 17894  013176  D00C               	goto	l16764
 17895                           
 17896                           ;stkvar	_remyears @ sp[(-57)+37]
 17897  013178  50E1               	movf	fsr1l,w,c
 17898  01317A  0FEC               	addlw	-20
 17899  01317C  6ED9               	movwf	fsr2l,c
 17900  01317E  50E2               	movf	fsr1h,w,c
 17901  013180  6EDA               	movwf	fsr2h,c
 17902  013182  0EFF               	movlw	255
 17903  013184  22DA               	addwfc	fsr2h,f,c
 17904  013186  06DE               	decf	postinc2,f,c
 17905  013188  0E00               	movlw	0
 17906  01318A  5ADE               	subwfb	postinc2,f,c
 17907  01318C  5ADE               	subwfb	postinc2,f,c
 17908  01318E  5ADE               	subwfb	postinc2,f,c
 17909  013190                     l16764:
 17910  013190  0E6D               	movlw	109
 17911  013192  6EE6               	movwf	postinc1,c
 17912  013194  0E01               	movlw	1
 17913  013196  6EE6               	movwf	postinc1,c
 17914  013198  0E00               	movlw	0
 17915  01319A  6EE6               	movwf	postinc1,c
 17916  01319C  0E00               	movlw	0
 17917  01319E  6EE6               	movwf	postinc1,c
 17918                           
 17919                           ;stkvar	_remyears @ sp[(-61)+37]
 17920  0131A0  0EE8               	movlw	-24
 17921  0131A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17922  0131A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17923  0131AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17924  0131B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17925  0131BA  EC46  F001         	call	___lmul	;wreg free
 17926                           
 17927                           ;stkvar	_remdays @ sp[(-57)+25]
 17928  0131BE  50E1               	movf	fsr1l,w,c
 17929  0131C0  0FE0               	addlw	-32
 17930  0131C2  6ED9               	movwf	fsr2l,c
 17931  0131C4  50E2               	movf	fsr1h,w,c
 17932  0131C6  6EDA               	movwf	fsr2h,c
 17933  0131C8  0EFF               	movlw	255
 17934  0131CA  22DA               	addwfc	fsr2h,f,c
 17935  0131CC  502A               	movf	btemp^0,w,c
 17936  0131CE  5EDE               	subwf	postinc2,f,c
 17937  0131D0  502B               	movf	(btemp+1)^0,w,c
 17938  0131D2  5ADE               	subwfb	postinc2,f,c
 17939  0131D4  502C               	movf	(btemp+2)^0,w,c
 17940  0131D6  5ADE               	subwfb	postinc2,f,c
 17941  0131D8  502D               	movf	(btemp+3)^0,w,c
 17942  0131DA  5ADE               	subwfb	postinc2,f,c
 17943                           
 17944                           ;stkvar	___secs_to_tm$7625 @ sp[(-57)+0]
 17945  0131DC  0EC7               	movlw	-57
 17946  0131DE  6AE3               	clrf	plusw1,c
 17947                           
 17948                           ;stkvar	_remyears @ sp[(-57)+37]
 17949  0131E0  0EEC               	movlw	-20
 17950  0131E2  50E3               	movf	plusw1,w,c
 17951  0131E4  E127               	bnz	l16776
 17952  0131E6  0EED               	movlw	-19
 17953  0131E8  50E3               	movf	plusw1,w,c
 17954  0131EA  E124               	bnz	l16776
 17955  0131EC  0EEE               	movlw	-18
 17956  0131EE  50E3               	movf	plusw1,w,c
 17957  0131F0  E121               	bnz	l16776
 17958  0131F2  0EEF               	movlw	-17
 17959  0131F4  50E3               	movf	plusw1,w,c
 17960  0131F6  A4D8               	btfss	status,2,c
 17961  0131F8  D01D               	goto	l16776
 17962                           
 17963                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17964  0131FA  0EE4               	movlw	-28
 17965  0131FC  50E3               	movf	plusw1,w,c
 17966  0131FE  E117               	bnz	l16774
 17967  013200  0EE5               	movlw	-27
 17968  013202  50E3               	movf	plusw1,w,c
 17969  013204  E114               	bnz	l16774
 17970  013206  0EE6               	movlw	-26
 17971  013208  50E3               	movf	plusw1,w,c
 17972  01320A  E111               	bnz	l16774
 17973  01320C  0EE7               	movlw	-25
 17974  01320E  50E3               	movf	plusw1,w,c
 17975  013210  A4D8               	btfss	status,2,c
 17976  013212  D00D               	goto	u16380
 17977                           
 17978                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17979  013214  0EE8               	movlw	-24
 17980  013216  50E3               	movf	plusw1,w,c
 17981  013218  E10D               	bnz	l16776
 17982  01321A  0EE9               	movlw	-23
 17983  01321C  50E3               	movf	plusw1,w,c
 17984  01321E  E10A               	bnz	l16776
 17985  013220  0EEA               	movlw	-22
 17986  013222  50E3               	movf	plusw1,w,c
 17987  013224  E107               	bnz	l16776
 17988  013226  0EEB               	movlw	-21
 17989  013228  50E3               	movf	plusw1,w,c
 17990  01322A  A4D8               	btfss	status,2,c
 17991  01322C  D003               	goto	l16776
 17992  01322E                     u16380:
 17993  01322E                     l16774:
 17994                           
 17995                           ;stkvar	___secs_to_tm$7625 @ sp[(-57)+0]
 17996  01322E  0EC7               	movlw	-57
 17997  013230  6AE3               	clrf	plusw1,c
 17998  013232  2AE3               	incf	plusw1,f,c
 17999  013234                     l16776:
 18000                           
 18001                           ;stkvar	___secs_to_tm$7625 @ sp[(-57)+0]
 18002  013234  0EC7               	movlw	-57
 18003  013236  50E3               	movf	plusw1,w,c
 18004  013238  6E34               	movwf	(btemp+10)^0,c
 18005  01323A  6A35               	clrf	(btemp+11)^0,c
 18006                           
 18007                           ;stkvar	_leap @ sp[(-57)+51]
 18008  01323C  0EFA               	movlw	-6
 18009  01323E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18010  013244  0EFB               	movlw	-5
 18011  013246  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18012                           
 18013                           ;stkvar	_remdays @ sp[(-57)+25]
 18014                           ;stkvar	_leap @ sp[(-57)+51]
 18015  01324C  0EFA               	movlw	-6
 18016  01324E  006F FF8C  F034    	movff	plusw1,btemp+10
 18017  013254  0EFB               	movlw	-5
 18018  013256  006F FF8C  F035    	movff	plusw1,btemp+11
 18019  01325C  0EE0               	movlw	-32
 18020  01325E  50E3               	movf	plusw1,w,c
 18021  013260  2634               	addwf	(btemp+10)^0,f,c
 18022  013262  0EE1               	movlw	-31
 18023  013264  50E3               	movf	plusw1,w,c
 18024  013266  2235               	addwfc	(btemp+11)^0,f,c
 18025  013268  0E3B               	movlw	59
 18026  01326A  2634               	addwf	(btemp+10)^0,f,c
 18027  01326C  0E00               	movlw	0
 18028  01326E  2235               	addwfc	(btemp+11)^0,f,c
 18029                           
 18030                           ;stkvar	_yday @ sp[(-57)+53]
 18031  013270  0EFC               	movlw	-4
 18032  013272  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18033  013278  0EFD               	movlw	-3
 18034  01327A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18035                           
 18036                           ;stkvar	_leap @ sp[(-57)+51]
 18037  013280  0EFA               	movlw	-6
 18038  013282  50E3               	movf	plusw1,w,c
 18039  013284  0F6D               	addlw	109
 18040  013286  6E34               	movwf	(btemp+10)^0,c
 18041  013288  0EFB               	movlw	-5
 18042  01328A  006F FF8C  F035    	movff	plusw1,btemp+11
 18043  013290  0E01               	movlw	1
 18044  013292  2235               	addwfc	(btemp+11)^0,f,c
 18045                           
 18046                           ;stkvar	_yday @ sp[(-57)+53]
 18047  013294  0EFC               	movlw	-4
 18048  013296  006F FF8C  F02A    	movff	plusw1,btemp
 18049  01329C  5034               	movf	(btemp+10)^0,w,c
 18050  01329E  5C2A               	subwf	btemp^0,w,c
 18051  0132A0  0EFD               	movlw	-3
 18052  0132A2  50E3               	movf	plusw1,w,c
 18053  0132A4  0A80               	xorlw	128
 18054  0132A6  6E2A               	movwf	btemp^0,c
 18055  0132A8  5035               	movf	(btemp+11)^0,w,c
 18056  0132AA  0A80               	xorlw	128
 18057  0132AC  582A               	subwfb	btemp^0,w,c
 18058  0132AE  A0D8               	btfss	status,0,c
 18059  0132B0  D01E               	goto	l16784
 18060                           
 18061                           ;stkvar	_leap @ sp[(-57)+51]
 18062  0132B2  0EFA               	movlw	-6
 18063  0132B4  50E3               	movf	plusw1,w,c
 18064  0132B6  0F6D               	addlw	109
 18065  0132B8  6E34               	movwf	(btemp+10)^0,c
 18066  0132BA  0EFB               	movlw	-5
 18067  0132BC  006F FF8C  F035    	movff	plusw1,btemp+11
 18068  0132C2  0E01               	movlw	1
 18069  0132C4  2235               	addwfc	(btemp+11)^0,f,c
 18070                           
 18071                           ;stkvar	_yday @ sp[(-57)+53]
 18072  0132C6  0EFC               	movlw	-4
 18073  0132C8  006F FF8C  F02A    	movff	plusw1,btemp
 18074  0132CE  5034               	movf	(btemp+10)^0,w,c
 18075  0132D0  5E2A               	subwf	btemp^0,f,c
 18076  0132D2  0EFC               	movlw	-4
 18077  0132D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18078  0132DA  0EFD               	movlw	-3
 18079  0132DC  006F FF8C  F02A    	movff	plusw1,btemp
 18080  0132E2  5035               	movf	(btemp+11)^0,w,c
 18081  0132E4  5A2A               	subwfb	btemp^0,f,c
 18082  0132E6  0EFD               	movlw	-3
 18083  0132E8  0060  F0AB  FFE3   	movff	btemp,plusw1
 18084  0132EE                     l16784:
 18085                           
 18086                           ;stkvar	_remyears @ sp[(-57)+37]
 18087                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18088  0132EE  0EE4               	movlw	-28
 18089  0132F0  006F FF8C  F032    	movff	plusw1,btemp+8
 18090  0132F6  0EE5               	movlw	-27
 18091  0132F8  006F FF8C  F033    	movff	plusw1,btemp+9
 18092  0132FE  0EE6               	movlw	-26
 18093  013300  006F FF8C  F034    	movff	plusw1,btemp+10
 18094  013306  0EE7               	movlw	-25
 18095  013308  006F FF8C  F035    	movff	plusw1,btemp+11
 18096  01330E  0E02               	movlw	2
 18097  013310                     u16405:
 18098  013310  90D8               	bcf	status,0,c
 18099  013312  3632               	rlcf	(btemp+8)^0,f,c
 18100  013314  3633               	rlcf	(btemp+9)^0,f,c
 18101  013316  3634               	rlcf	(btemp+10)^0,f,c
 18102  013318  3635               	rlcf	(btemp+11)^0,f,c
 18103  01331A  2EE8               	decfsz	wreg,f,c
 18104  01331C  D7F9               	goto	u16405
 18105  01331E  0E64               	movlw	100
 18106  013320  6EE6               	movwf	postinc1,c
 18107  013322  0E00               	movlw	0
 18108  013324  6EE6               	movwf	postinc1,c
 18109  013326  0E00               	movlw	0
 18110  013328  6EE6               	movwf	postinc1,c
 18111  01332A  0E00               	movlw	0
 18112  01332C  6EE6               	movwf	postinc1,c
 18113                           
 18114                           ;stkvar	_c_cycles @ sp[(-61)+33]
 18115  01332E  0EE4               	movlw	-28
 18116  013330  006F FF8F FFE6     	movff	plusw1,postinc1
 18117  013336  006F FF8F FFE6     	movff	plusw1,postinc1
 18118  01333C  006F FF8F FFE6     	movff	plusw1,postinc1
 18119  013342  006F FF8F FFE6     	movff	plusw1,postinc1
 18120  013348  EC46  F001         	call	___lmul	;wreg free
 18121  01334C  5032               	movf	(btemp+8)^0,w,c
 18122  01334E  242A               	addwf	btemp^0,w,c
 18123  013350  6E2E               	movwf	(btemp+4)^0,c
 18124  013352  5033               	movf	(btemp+9)^0,w,c
 18125  013354  202B               	addwfc	(btemp+1)^0,w,c
 18126  013356  6E2F               	movwf	(btemp+5)^0,c
 18127  013358  5034               	movf	(btemp+10)^0,w,c
 18128  01335A  202C               	addwfc	(btemp+2)^0,w,c
 18129  01335C  6E30               	movwf	(btemp+6)^0,c
 18130  01335E  5035               	movf	(btemp+11)^0,w,c
 18131  013360  202D               	addwfc	(btemp+3)^0,w,c
 18132  013362  6E31               	movwf	(btemp+7)^0,c
 18133  013364  0EEC               	movlw	-20
 18134  013366  50E3               	movf	plusw1,w,c
 18135  013368  262E               	addwf	(btemp+4)^0,f,c
 18136  01336A  0EED               	movlw	-19
 18137  01336C  50E3               	movf	plusw1,w,c
 18138  01336E  222F               	addwfc	(btemp+5)^0,f,c
 18139  013370  0EEE               	movlw	-18
 18140  013372  50E3               	movf	plusw1,w,c
 18141  013374  2230               	addwfc	(btemp+6)^0,f,c
 18142  013376  0EEF               	movlw	-17
 18143  013378  50E3               	movf	plusw1,w,c
 18144  01337A  2231               	addwfc	(btemp+7)^0,f,c
 18145  01337C  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 18146  013382  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 18147  013388  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 18148  01338E  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 18149  013394  6A3E               	clrf	(btemp+20)^0,c
 18150  013396  BE3D               	btfsc	(btemp+19)^0,7,c
 18151  013398  683E               	setf	(btemp+20)^0,c
 18152  01339A  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 18153  0133A0  0060  F0F8  F040   	movff	btemp+20,btemp+22
 18154  0133A6  0060  F0F8  F041   	movff	btemp+20,btemp+23
 18155  0133AC  0E90               	movlw	144
 18156  0133AE  6EE6               	movwf	postinc1,c
 18157  0133B0  0E01               	movlw	1
 18158  0133B2  6EE6               	movwf	postinc1,c
 18159  0133B4  0E00               	movlw	0
 18160  0133B6  6EE6               	movwf	postinc1,c
 18161  0133B8  0E00               	movlw	0
 18162  0133BA  6EE6               	movwf	postinc1,c
 18163  0133BC  0E00               	movlw	0
 18164  0133BE  6EE6               	movwf	postinc1,c
 18165  0133C0  0E00               	movlw	0
 18166  0133C2  6EE6               	movwf	postinc1,c
 18167  0133C4  0E00               	movlw	0
 18168  0133C6  6EE6               	movwf	postinc1,c
 18169  0133C8  0E00               	movlw	0
 18170  0133CA  6EE6               	movwf	postinc1,c
 18171                           
 18172                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 18173  0133CC  0EEC               	movlw	-20
 18174  0133CE  006F FF8C  F042    	movff	plusw1,btemp+24
 18175  0133D4  0EED               	movlw	-19
 18176  0133D6  006F FF8C  F043    	movff	plusw1,btemp+25
 18177  0133DC  0EEE               	movlw	-18
 18178  0133DE  006F FF8C  F044    	movff	plusw1,btemp+26
 18179  0133E4  0EEF               	movlw	-17
 18180  0133E6  006F FF8C  F045    	movff	plusw1,btemp+27
 18181  0133EC  6A46               	clrf	(btemp+28)^0,c
 18182  0133EE  BE45               	btfsc	(btemp+27)^0,7,c
 18183  0133F0  6846               	setf	(btemp+28)^0,c
 18184  0133F2  0060  F118  F047   	movff	btemp+28,btemp+29
 18185  0133F8  0060  F118  F048   	movff	btemp+28,btemp+30
 18186  0133FE  0060  F118  F049   	movff	btemp+28,btemp+31
 18187  013404  0060  F10B  FFE6   	movff	btemp+24,postinc1
 18188  01340A  0060  F10F  FFE6   	movff	btemp+25,postinc1
 18189  013410  0060  F113  FFE6   	movff	btemp+26,postinc1
 18190  013416  0060  F117  FFE6   	movff	btemp+27,postinc1
 18191  01341C  0060  F11B  FFE6   	movff	btemp+28,postinc1
 18192  013422  0060  F11F  FFE6   	movff	btemp+29,postinc1
 18193  013428  0060  F123  FFE6   	movff	btemp+30,postinc1
 18194  01342E  0060  F127  FFE6   	movff	btemp+31,postinc1
 18195  013434  ECB1  F0F6         	call	___omul	;wreg free
 18196  013438  52E5               	movf	postdec1,f,c
 18197  01343A  006F FF9C  F049    	movff	indf1,btemp+31
 18198  013440  52E5               	movf	postdec1,f,c
 18199  013442  006F FF9C  F048    	movff	indf1,btemp+30
 18200  013448  52E5               	movf	postdec1,f,c
 18201  01344A  006F FF9C  F047    	movff	indf1,btemp+29
 18202  013450  52E5               	movf	postdec1,f,c
 18203  013452  006F FF9C  F046    	movff	indf1,btemp+28
 18204  013458  52E5               	movf	postdec1,f,c
 18205  01345A  006F FF9C  F045    	movff	indf1,btemp+27
 18206  013460  52E5               	movf	postdec1,f,c
 18207  013462  006F FF9C  F044    	movff	indf1,btemp+26
 18208  013468  52E5               	movf	postdec1,f,c
 18209  01346A  006F FF9C  F043    	movff	indf1,btemp+25
 18210  013470  52E5               	movf	postdec1,f,c
 18211  013472  006F FF9C  F042    	movff	indf1,btemp+24
 18212  013478  0EF8               	movlw	248
 18213  01347A  26E1               	addwf	fsr1l,f,c
 18214  01347C  0EFF               	movlw	255
 18215  01347E  22E2               	addwfc	fsr1h,f,c
 18216  013480  503A               	movf	(btemp+16)^0,w,c
 18217  013482  2442               	addwf	(btemp+24)^0,w,c
 18218  013484  6E32               	movwf	(btemp+8)^0,c
 18219  013486  503B               	movf	(btemp+17)^0,w,c
 18220  013488  2043               	addwfc	(btemp+25)^0,w,c
 18221  01348A  6E33               	movwf	(btemp+9)^0,c
 18222  01348C  503C               	movf	(btemp+18)^0,w,c
 18223  01348E  2044               	addwfc	(btemp+26)^0,w,c
 18224  013490  6E34               	movwf	(btemp+10)^0,c
 18225  013492  503D               	movf	(btemp+19)^0,w,c
 18226  013494  2045               	addwfc	(btemp+27)^0,w,c
 18227  013496  6E35               	movwf	(btemp+11)^0,c
 18228  013498  503E               	movf	(btemp+20)^0,w,c
 18229  01349A  2046               	addwfc	(btemp+28)^0,w,c
 18230  01349C  6E36               	movwf	(btemp+12)^0,c
 18231  01349E  503F               	movf	(btemp+21)^0,w,c
 18232  0134A0  2047               	addwfc	(btemp+29)^0,w,c
 18233  0134A2  6E37               	movwf	(btemp+13)^0,c
 18234  0134A4  5040               	movf	(btemp+22)^0,w,c
 18235  0134A6  2048               	addwfc	(btemp+30)^0,w,c
 18236  0134A8  6E38               	movwf	(btemp+14)^0,c
 18237  0134AA  5041               	movf	(btemp+23)^0,w,c
 18238  0134AC  2049               	addwfc	(btemp+31)^0,w,c
 18239  0134AE  6E39               	movwf	(btemp+15)^0,c
 18240                           
 18241                           ;stkvar	_years @ sp[(-57)+1]
 18242  0134B0  0EC8               	movlw	-56
 18243  0134B2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18244  0134B8  0EC9               	movlw	-55
 18245  0134BA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18246  0134C0  0ECA               	movlw	-54
 18247  0134C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18248  0134C8  0ECB               	movlw	-53
 18249  0134CA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18250  0134D0  0ECC               	movlw	-52
 18251  0134D2  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 18252  0134D8  0ECD               	movlw	-51
 18253  0134DA  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 18254  0134E0  0ECE               	movlw	-50
 18255  0134E2  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 18256  0134E8  0ECF               	movlw	-49
 18257  0134EA  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 18258                           
 18259                           ;stkvar	_months @ sp[(-57)+49]
 18260  0134F0  0EF8               	movlw	-8
 18261  0134F2  6AE3               	clrf	plusw1,c
 18262  0134F4  0EF9               	movlw	-7
 18263  0134F6  6AE3               	clrf	plusw1,c
 18264  0134F8  D030               	goto	l16792
 18265  0134FA                     l16788:
 18266                           
 18267                           ;stkvar	_remdays @ sp[(-57)+25]
 18268  0134FA  50E1               	movf	fsr1l,w,c
 18269  0134FC  0FE0               	addlw	-32
 18270  0134FE  6ED9               	movwf	fsr2l,c
 18271  013500  50E2               	movf	fsr1h,w,c
 18272  013502  6EDA               	movwf	fsr2h,c
 18273  013504  0EFF               	movlw	255
 18274  013506  22DA               	addwfc	fsr2h,f,c
 18275                           
 18276                           ;stkvar	_months @ sp[(-57)+49]
 18277  013508  0EF8               	movlw	-8
 18278  01350A  006F FF8C  F034    	movff	plusw1,btemp+10
 18279  013510  0EF9               	movlw	-7
 18280  013512  006F FF8C  F035    	movff	plusw1,btemp+11
 18281  013518  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18282  01351A  2434               	addwf	(btemp+10)^0,w,c
 18283  01351C  6EF6               	movwf	tblptrl,c
 18284  01351E  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18285  013520  2035               	addwfc	(btemp+11)^0,w,c
 18286  013522  6EF7               	movwf	tblptrh,c
 18287  013524                     	if	1	;There are 3 active tblptr bytes
 18288  013524  6AF8               	clrf	tblptru,c
 18289  013526  0E00               	movlw	low (__mediumconst shr (0+16))
 18290  013528  22F8               	addwfc	tblptru,f,c
 18291  01352A                     	endif
 18292  01352A  0008               	tblrd		*
 18293  01352C  50F5               	movf	tablat,w,c
 18294  01352E  5EDE               	subwf	postinc2,f,c
 18295  013530  0E00               	movlw	0
 18296  013532  5ADE               	subwfb	postinc2,f,c
 18297  013534  5ADE               	subwfb	postinc2,f,c
 18298  013536  5ADE               	subwfb	postinc2,f,c
 18299                           
 18300                           ;stkvar	_months @ sp[(-57)+49]
 18301  013538  0EF8               	movlw	-8
 18302  01353A  50E3               	movf	plusw1,w,c
 18303  01353C  0F01               	addlw	1
 18304  01353E  6E2A               	movwf	btemp^0,c
 18305  013540  0EF8               	movlw	-8
 18306  013542  0060  F0AB  FFE3   	movff	btemp,plusw1
 18307  013548  6A2A               	clrf	btemp^0,c
 18308  01354A  0EF9               	movlw	-7
 18309  01354C  50E3               	movf	plusw1,w,c
 18310  01354E  202A               	addwfc	btemp^0,w,c
 18311  013550  6E2A               	movwf	btemp^0,c
 18312  013552  0EF9               	movlw	-7
 18313  013554  0060  F0AB  FFE3   	movff	btemp,plusw1
 18314  01355A                     l16792:
 18315                           
 18316                           ;stkvar	_months @ sp[(-57)+49]
 18317  01355A  0EF8               	movlw	-8
 18318  01355C  006F FF8C  F034    	movff	plusw1,btemp+10
 18319  013562  0EF9               	movlw	-7
 18320  013564  006F FF8C  F035    	movff	plusw1,btemp+11
 18321  01356A  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18322  01356C  2434               	addwf	(btemp+10)^0,w,c
 18323  01356E  6EF6               	movwf	tblptrl,c
 18324  013570  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18325  013572  2035               	addwfc	(btemp+11)^0,w,c
 18326  013574  6EF7               	movwf	tblptrh,c
 18327  013576                     	if	1	;There are 3 active tblptr bytes
 18328  013576  6AF8               	clrf	tblptru,c
 18329  013578  0E00               	movlw	low (__mediumconst shr (0+16))
 18330  01357A  22F8               	addwfc	tblptru,f,c
 18331  01357C                     	endif
 18332  01357C  0008               	tblrd		*
 18333  01357E  006F FFD4  F035    	movff	tablat,btemp+11
 18334  013584  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 18335  01358A  6A2F               	clrf	(btemp+5)^0,c
 18336  01358C  6A30               	clrf	(btemp+6)^0,c
 18337  01358E  6A31               	clrf	(btemp+7)^0,c
 18338                           
 18339                           ;stkvar	_remdays @ sp[(-57)+25]
 18340  013590  0EE0               	movlw	-32
 18341  013592  006F FF8C  F02A    	movff	plusw1,btemp
 18342  013598  502E               	movf	(btemp+4)^0,w,c
 18343  01359A  5C2A               	subwf	btemp^0,w,c
 18344  01359C  0EE1               	movlw	-31
 18345  01359E  006F FF8C  F02A    	movff	plusw1,btemp
 18346  0135A4  502F               	movf	(btemp+5)^0,w,c
 18347  0135A6  582A               	subwfb	btemp^0,w,c
 18348  0135A8  0EE2               	movlw	-30
 18349  0135AA  006F FF8C  F02A    	movff	plusw1,btemp
 18350  0135B0  5030               	movf	(btemp+6)^0,w,c
 18351  0135B2  582A               	subwfb	btemp^0,w,c
 18352  0135B4  0EE3               	movlw	-29
 18353  0135B6  50E3               	movf	plusw1,w,c
 18354  0135B8  0A80               	xorlw	128
 18355  0135BA  6E2A               	movwf	btemp^0,c
 18356  0135BC  5031               	movf	(btemp+7)^0,w,c
 18357  0135BE  0A80               	xorlw	128
 18358  0135C0  582A               	subwfb	btemp^0,w,c
 18359  0135C2  B0D8               	btfsc	status,0,c
 18360  0135C4  D79A               	goto	l16788
 18361                           
 18362                           ;stkvar	_months @ sp[(-57)+49]
 18363  0135C6  0EF9               	movlw	-7
 18364  0135C8  BEE3               	btfsc	plusw1,7,c
 18365  0135CA  D026               	goto	l16800
 18366  0135CC  0EF9               	movlw	-7
 18367  0135CE  50E3               	movf	plusw1,w,c
 18368  0135D0  E108               	bnz	u16420
 18369  0135D2  0EF8               	movlw	-8
 18370  0135D4  006F FF8C  F02A    	movff	plusw1,btemp
 18371  0135DA  0E0A               	movlw	10
 18372  0135DC  5E2A               	subwf	btemp^0,f,c
 18373  0135DE  A0D8               	btfss	status,0,c
 18374  0135E0  D01B               	goto	l16800
 18375  0135E2                     u16420:
 18376                           
 18377                           ;stkvar	_months @ sp[(-57)+49]
 18378  0135E2  50E1               	movf	fsr1l,w,c
 18379  0135E4  0FF8               	addlw	-8
 18380  0135E6  6ED9               	movwf	fsr2l,c
 18381  0135E8  50E2               	movf	fsr1h,w,c
 18382  0135EA  6EDA               	movwf	fsr2h,c
 18383  0135EC  0EFF               	movlw	255
 18384  0135EE  22DA               	addwfc	fsr2h,f,c
 18385  0135F0  0EF4               	movlw	244
 18386  0135F2  26DE               	addwf	postinc2,f,c
 18387  0135F4  0EFF               	movlw	255
 18388  0135F6  22DD               	addwfc	postdec2,f,c
 18389                           
 18390                           ;stkvar	_years @ sp[(-57)+1]
 18391  0135F8  50E1               	movf	fsr1l,w,c
 18392  0135FA  0FC8               	addlw	-56
 18393  0135FC  6ED9               	movwf	fsr2l,c
 18394  0135FE  50E2               	movf	fsr1h,w,c
 18395  013600  6EDA               	movwf	fsr2h,c
 18396  013602  0EFF               	movlw	255
 18397  013604  22DA               	addwfc	fsr2h,f,c
 18398  013606  2ADE               	incf	postinc2,f,c
 18399  013608  0E00               	movlw	0
 18400  01360A  22DE               	addwfc	postinc2,f,c
 18401  01360C  22DE               	addwfc	postinc2,f,c
 18402  01360E  22DE               	addwfc	postinc2,f,c
 18403  013610  22DE               	addwfc	postinc2,f,c
 18404  013612  22DE               	addwfc	postinc2,f,c
 18405  013614  22DE               	addwfc	postinc2,f,c
 18406  013616  22DE               	addwfc	postinc2,f,c
 18407  013618                     l16800:
 18408                           
 18409                           ;stkvar	_years @ sp[(-57)+1]
 18410  013618  0EC8               	movlw	-56
 18411  01361A  50E3               	movf	plusw1,w,c
 18412  01361C  0F64               	addlw	100
 18413  01361E  6E3A               	movwf	(btemp+16)^0,c
 18414  013620  0EC9               	movlw	-55
 18415  013622  006F FF8C  F03B    	movff	plusw1,btemp+17
 18416  013628  0E00               	movlw	0
 18417  01362A  223B               	addwfc	(btemp+17)^0,f,c
 18418  01362C  0ECA               	movlw	-54
 18419  01362E  006F FF8C  F03C    	movff	plusw1,btemp+18
 18420  013634  0E00               	movlw	0
 18421  013636  223C               	addwfc	(btemp+18)^0,f,c
 18422  013638  0ECB               	movlw	-53
 18423  01363A  006F FF8C  F03D    	movff	plusw1,btemp+19
 18424  013640  0E00               	movlw	0
 18425  013642  223D               	addwfc	(btemp+19)^0,f,c
 18426  013644  0ECC               	movlw	-52
 18427  013646  006F FF8C  F03E    	movff	plusw1,btemp+20
 18428  01364C  0E00               	movlw	0
 18429  01364E  223E               	addwfc	(btemp+20)^0,f,c
 18430  013650  0ECD               	movlw	-51
 18431  013652  006F FF8C  F03F    	movff	plusw1,btemp+21
 18432  013658  0E00               	movlw	0
 18433  01365A  223F               	addwfc	(btemp+21)^0,f,c
 18434  01365C  0ECE               	movlw	-50
 18435  01365E  006F FF8C  F040    	movff	plusw1,btemp+22
 18436  013664  0E00               	movlw	0
 18437  013666  2240               	addwfc	(btemp+22)^0,f,c
 18438  013668  0ECF               	movlw	-49
 18439  01366A  006F FF8C  F041    	movff	plusw1,btemp+23
 18440  013670  0E00               	movlw	0
 18441  013672  2241               	addwfc	(btemp+23)^0,f,c
 18442  013674  BE41               	btfsc	(btemp+23)^0,7,c
 18443  013676  D00C               	goto	u16430
 18444  013678  5041               	movf	(btemp+23)^0,w,c
 18445  01367A  1040               	iorwf	(btemp+22)^0,w,c
 18446  01367C  103F               	iorwf	(btemp+21)^0,w,c
 18447  01367E  103E               	iorwf	(btemp+20)^0,w,c
 18448  013680  103D               	iorwf	(btemp+19)^0,w,c
 18449  013682  103C               	iorwf	(btemp+18)^0,w,c
 18450  013684  E103               	bnz	u16431
 18451  013686  0E80               	movlw	128
 18452  013688  5C3B               	subwf	(btemp+17)^0,w,c
 18453  01368A  B0D8               	btfsc	status,0,c
 18454  01368C                     u16431:
 18455  01368C  EFB2  F094         	goto	u16290
 18456  013690                     u16430:
 18457                           
 18458                           ;stkvar	_years @ sp[(-57)+1]
 18459  013690  0EC8               	movlw	-56
 18460  013692  50E3               	movf	plusw1,w,c
 18461  013694  0F64               	addlw	100
 18462  013696  6E3A               	movwf	(btemp+16)^0,c
 18463  013698  0EC9               	movlw	-55
 18464  01369A  006F FF8C  F03B    	movff	plusw1,btemp+17
 18465  0136A0  0E00               	movlw	0
 18466  0136A2  223B               	addwfc	(btemp+17)^0,f,c
 18467  0136A4  0ECA               	movlw	-54
 18468  0136A6  006F FF8C  F03C    	movff	plusw1,btemp+18
 18469  0136AC  0E00               	movlw	0
 18470  0136AE  223C               	addwfc	(btemp+18)^0,f,c
 18471  0136B0  0ECB               	movlw	-53
 18472  0136B2  006F FF8C  F03D    	movff	plusw1,btemp+19
 18473  0136B8  0E00               	movlw	0
 18474  0136BA  223D               	addwfc	(btemp+19)^0,f,c
 18475  0136BC  0ECC               	movlw	-52
 18476  0136BE  006F FF8C  F03E    	movff	plusw1,btemp+20
 18477  0136C4  0E00               	movlw	0
 18478  0136C6  223E               	addwfc	(btemp+20)^0,f,c
 18479  0136C8  0ECD               	movlw	-51
 18480  0136CA  006F FF8C  F03F    	movff	plusw1,btemp+21
 18481  0136D0  0E00               	movlw	0
 18482  0136D2  223F               	addwfc	(btemp+21)^0,f,c
 18483  0136D4  0ECE               	movlw	-50
 18484  0136D6  006F FF8C  F040    	movff	plusw1,btemp+22
 18485  0136DC  0E00               	movlw	0
 18486  0136DE  2240               	addwfc	(btemp+22)^0,f,c
 18487  0136E0  0ECF               	movlw	-49
 18488  0136E2  006F FF8C  F041    	movff	plusw1,btemp+23
 18489  0136E8  0E00               	movlw	0
 18490  0136EA  2241               	addwfc	(btemp+23)^0,f,c
 18491  0136EC  AE41               	btfss	(btemp+23)^0,7,c
 18492  0136EE  D011               	goto	l16808
 18493  0136F0  0E80               	movlw	128
 18494  0136F2  5C3B               	subwf	(btemp+17)^0,w,c
 18495  0136F4  0EFF               	movlw	255
 18496  0136F6  583C               	subwfb	(btemp+18)^0,w,c
 18497  0136F8  0EFF               	movlw	255
 18498  0136FA  583D               	subwfb	(btemp+19)^0,w,c
 18499  0136FC  0EFF               	movlw	255
 18500  0136FE  583E               	subwfb	(btemp+20)^0,w,c
 18501  013700  0EFF               	movlw	255
 18502  013702  583F               	subwfb	(btemp+21)^0,w,c
 18503  013704  0EFF               	movlw	255
 18504  013706  5840               	subwfb	(btemp+22)^0,w,c
 18505  013708  0EFF               	movlw	255
 18506  01370A  5841               	subwfb	(btemp+23)^0,w,c
 18507  01370C  A0D8               	btfss	status,0,c
 18508  01370E  EFB2  F094         	goto	u16290
 18509  013712                     l16808:
 18510                           
 18511                           ;stkvar	_years @ sp[(-57)+1]
 18512  013712  0EC8               	movlw	-56
 18513  013714  50E3               	movf	plusw1,w,c
 18514  013716  0F64               	addlw	100
 18515  013718  6E34               	movwf	(btemp+10)^0,c
 18516  01371A  0EC9               	movlw	-55
 18517  01371C  006F FF8C  F035    	movff	plusw1,btemp+11
 18518  013722  0E00               	movlw	0
 18519  013724  2235               	addwfc	(btemp+11)^0,f,c
 18520                           
 18521                           ;stkvar	_tm @ sp[(-57)+-10]
 18522  013726  0EBD               	movlw	-67
 18523  013728  006F FF8C  F032    	movff	plusw1,btemp+8
 18524  01372E  0EBE               	movlw	-66
 18525  013730  006F FF8C  F033    	movff	plusw1,btemp+9
 18526  013736  0E0A               	movlw	10
 18527  013738  2432               	addwf	(btemp+8)^0,w,c
 18528  01373A  6ED9               	movwf	fsr2l,c
 18529  01373C  0E00               	movlw	0
 18530  01373E  2033               	addwfc	(btemp+9)^0,w,c
 18531  013740  6EDA               	movwf	fsr2h,c
 18532  013742  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18533  013748  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18534                           
 18535                           ;stkvar	_months @ sp[(-57)+49]
 18536  01374E  0EF8               	movlw	-8
 18537  013750  50E3               	movf	plusw1,w,c
 18538  013752  0F02               	addlw	2
 18539  013754  6E34               	movwf	(btemp+10)^0,c
 18540  013756  0EF9               	movlw	-7
 18541  013758  006F FF8C  F035    	movff	plusw1,btemp+11
 18542  01375E  0E00               	movlw	0
 18543  013760  2235               	addwfc	(btemp+11)^0,f,c
 18544                           
 18545                           ;stkvar	_tm @ sp[(-57)+-10]
 18546  013762  0EBD               	movlw	-67
 18547  013764  006F FF8C  F032    	movff	plusw1,btemp+8
 18548  01376A  0EBE               	movlw	-66
 18549  01376C  006F FF8C  F033    	movff	plusw1,btemp+9
 18550  013772  0E08               	movlw	8
 18551  013774  2432               	addwf	(btemp+8)^0,w,c
 18552  013776  6ED9               	movwf	fsr2l,c
 18553  013778  0E00               	movlw	0
 18554  01377A  2033               	addwfc	(btemp+9)^0,w,c
 18555  01377C  6EDA               	movwf	fsr2h,c
 18556  01377E  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18557  013784  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18558                           
 18559                           ;stkvar	_remdays @ sp[(-57)+25]
 18560  01378A  0EE0               	movlw	-32
 18561  01378C  50E3               	movf	plusw1,w,c
 18562  01378E  0F01               	addlw	1
 18563  013790  6E34               	movwf	(btemp+10)^0,c
 18564  013792  0EE1               	movlw	-31
 18565  013794  006F FF8C  F035    	movff	plusw1,btemp+11
 18566  01379A  0E00               	movlw	0
 18567  01379C  2235               	addwfc	(btemp+11)^0,f,c
 18568                           
 18569                           ;stkvar	_tm @ sp[(-57)+-10]
 18570  01379E  0EBD               	movlw	-67
 18571  0137A0  006F FF8C  F032    	movff	plusw1,btemp+8
 18572  0137A6  0EBE               	movlw	-66
 18573  0137A8  006F FF8C  F033    	movff	plusw1,btemp+9
 18574  0137AE  0E06               	movlw	6
 18575  0137B0  2432               	addwf	(btemp+8)^0,w,c
 18576  0137B2  6ED9               	movwf	fsr2l,c
 18577  0137B4  0E00               	movlw	0
 18578  0137B6  2033               	addwfc	(btemp+9)^0,w,c
 18579  0137B8  6EDA               	movwf	fsr2h,c
 18580  0137BA  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18581  0137C0  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18582                           
 18583                           ;stkvar	_wday @ sp[(-57)+55]
 18584  0137C6  50E1               	movf	fsr1l,w,c
 18585  0137C8  0FFE               	addlw	-2
 18586  0137CA  6ED9               	movwf	fsr2l,c
 18587  0137CC  50E2               	movf	fsr1h,w,c
 18588  0137CE  6EDA               	movwf	fsr2h,c
 18589  0137D0  0EFF               	movlw	255
 18590  0137D2  22DA               	addwfc	fsr2h,f,c
 18591                           
 18592                           ;stkvar	_tm @ sp[(-57)+-10]
 18593  0137D4  0EBD               	movlw	-67
 18594  0137D6  006F FF8C  F034    	movff	plusw1,btemp+10
 18595  0137DC  0EBE               	movlw	-66
 18596  0137DE  006F FF8C  F035    	movff	plusw1,btemp+11
 18597  0137E4  0E0C               	movlw	12
 18598  0137E6  2434               	addwf	(btemp+10)^0,w,c
 18599  0137E8  6EE9               	movwf	fsr0l,c
 18600  0137EA  0E00               	movlw	0
 18601  0137EC  2035               	addwfc	(btemp+11)^0,w,c
 18602  0137EE  6EEA               	movwf	fsr0h,c
 18603  0137F0  006F FF7B FFEE     	movff	postinc2,postinc0
 18604  0137F6  006F FF77 FFED     	movff	postdec2,postdec0
 18605                           
 18606                           ;stkvar	_yday @ sp[(-57)+53]
 18607  0137FC  50E1               	movf	fsr1l,w,c
 18608  0137FE  0FFC               	addlw	-4
 18609  013800  6ED9               	movwf	fsr2l,c
 18610  013802  50E2               	movf	fsr1h,w,c
 18611  013804  6EDA               	movwf	fsr2h,c
 18612  013806  0EFF               	movlw	255
 18613  013808  22DA               	addwfc	fsr2h,f,c
 18614                           
 18615                           ;stkvar	_tm @ sp[(-57)+-10]
 18616  01380A  0EBD               	movlw	-67
 18617  01380C  006F FF8C  F034    	movff	plusw1,btemp+10
 18618  013812  0EBE               	movlw	-66
 18619  013814  006F FF8C  F035    	movff	plusw1,btemp+11
 18620  01381A  0E0E               	movlw	14
 18621  01381C  2434               	addwf	(btemp+10)^0,w,c
 18622  01381E  6EE9               	movwf	fsr0l,c
 18623  013820  0E00               	movlw	0
 18624  013822  2035               	addwfc	(btemp+11)^0,w,c
 18625  013824  6EEA               	movwf	fsr0h,c
 18626  013826  006F FF7B FFEE     	movff	postinc2,postinc0
 18627  01382C  006F FF77 FFED     	movff	postdec2,postdec0
 18628  013832  0E10               	movlw	16
 18629  013834  6EE6               	movwf	postinc1,c
 18630  013836  0E0E               	movlw	14
 18631  013838  6EE6               	movwf	postinc1,c
 18632  01383A  0E00               	movlw	0
 18633  01383C  6EE6               	movwf	postinc1,c
 18634  01383E  0E00               	movlw	0
 18635  013840  6EE6               	movwf	postinc1,c
 18636                           
 18637                           ;stkvar	_remsecs @ sp[(-61)+41]
 18638  013842  0EEC               	movlw	-20
 18639  013844  006F FF8F FFE6     	movff	plusw1,postinc1
 18640  01384A  006F FF8F FFE6     	movff	plusw1,postinc1
 18641  013850  006F FF8F FFE6     	movff	plusw1,postinc1
 18642  013856  006F FF8F FFE6     	movff	plusw1,postinc1
 18643  01385C  EC66  F0EF         	call	___aldiv	;wreg free
 18644  013860  0060  F0A8  F034   	movff	btemp,btemp+10
 18645  013866  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18646                           
 18647                           ;stkvar	_tm @ sp[(-57)+-10]
 18648  01386C  0EBD               	movlw	-67
 18649  01386E  006F FF8C  F032    	movff	plusw1,btemp+8
 18650  013874  0EBE               	movlw	-66
 18651  013876  006F FF8C  F033    	movff	plusw1,btemp+9
 18652  01387C  0E04               	movlw	4
 18653  01387E  2432               	addwf	(btemp+8)^0,w,c
 18654  013880  6ED9               	movwf	fsr2l,c
 18655  013882  0E00               	movlw	0
 18656  013884  2033               	addwfc	(btemp+9)^0,w,c
 18657  013886  6EDA               	movwf	fsr2h,c
 18658  013888  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18659  01388E  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18660  013894  0E3C               	movlw	60
 18661  013896  6EE6               	movwf	postinc1,c
 18662  013898  0E00               	movlw	0
 18663  01389A  6EE6               	movwf	postinc1,c
 18664  01389C  0E00               	movlw	0
 18665  01389E  6EE6               	movwf	postinc1,c
 18666  0138A0  0E00               	movlw	0
 18667  0138A2  6EE6               	movwf	postinc1,c
 18668  0138A4  0E3C               	movlw	60
 18669  0138A6  6EE6               	movwf	postinc1,c
 18670  0138A8  0E00               	movlw	0
 18671  0138AA  6EE6               	movwf	postinc1,c
 18672  0138AC  0E00               	movlw	0
 18673  0138AE  6EE6               	movwf	postinc1,c
 18674  0138B0  0E00               	movlw	0
 18675  0138B2  6EE6               	movwf	postinc1,c
 18676                           
 18677                           ;stkvar	_remsecs @ sp[(-65)+41]
 18678  0138B4  0EE8               	movlw	-24
 18679  0138B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18680  0138BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18681  0138C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18682  0138C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18683  0138CE  EC66  F0EF         	call	___aldiv	;wreg free
 18684  0138D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 18685  0138D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18686  0138DE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18687  0138E4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18688  0138EA  ECEC  F0F3         	call	___almod	;wreg free
 18689  0138EE  0060  F0A8  F034   	movff	btemp,btemp+10
 18690  0138F4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18691                           
 18692                           ;stkvar	_tm @ sp[(-57)+-10]
 18693  0138FA  0EBD               	movlw	-67
 18694  0138FC  006F FF8C  F032    	movff	plusw1,btemp+8
 18695  013902  0EBE               	movlw	-66
 18696  013904  006F FF8C  F033    	movff	plusw1,btemp+9
 18697  01390A  0E02               	movlw	2
 18698  01390C  2432               	addwf	(btemp+8)^0,w,c
 18699  01390E  6ED9               	movwf	fsr2l,c
 18700  013910  0E00               	movlw	0
 18701  013912  2033               	addwfc	(btemp+9)^0,w,c
 18702  013914  6EDA               	movwf	fsr2h,c
 18703  013916  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18704  01391C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18705  013922  0E3C               	movlw	60
 18706  013924  6EE6               	movwf	postinc1,c
 18707  013926  0E00               	movlw	0
 18708  013928  6EE6               	movwf	postinc1,c
 18709  01392A  0E00               	movlw	0
 18710  01392C  6EE6               	movwf	postinc1,c
 18711  01392E  0E00               	movlw	0
 18712  013930  6EE6               	movwf	postinc1,c
 18713                           
 18714                           ;stkvar	_remsecs @ sp[(-61)+41]
 18715  013932  0EEC               	movlw	-20
 18716  013934  006F FF8F FFE6     	movff	plusw1,postinc1
 18717  01393A  006F FF8F FFE6     	movff	plusw1,postinc1
 18718  013940  006F FF8F FFE6     	movff	plusw1,postinc1
 18719  013946  006F FF8F FFE6     	movff	plusw1,postinc1
 18720  01394C  ECEC  F0F3         	call	___almod	;wreg free
 18721  013950  0060  F0A8  F034   	movff	btemp,btemp+10
 18722  013956  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18723                           
 18724                           ;stkvar	_tm @ sp[(-57)+-10]
 18725  01395C  0EBD               	movlw	-67
 18726  01395E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18727  013964  0EBE               	movlw	-66
 18728  013966  006F FF8F FFDA     	movff	plusw1,fsr2h
 18729  01396C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18730  013972  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18731  013978  0E00               	movlw	0
 18732  01397A  6E2A               	movwf	btemp^0,c
 18733  01397C  6A2B               	clrf	(btemp+1)^0,c
 18734  01397E  6A2C               	clrf	(btemp+2)^0,c
 18735  013980  6A2D               	clrf	(btemp+3)^0,c
 18736  013982                     l3849:
 18737                           
 18738                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18739  013982  0EBD               	movlw	189
 18740  013984  26E1               	addwf	fsr1l,f,c
 18741  013986  0EFF               	movlw	255
 18742  013988  22E2               	addwfc	fsr1h,f,c
 18743  01398A  0012               	return		;funcret
 18744  01398C                     __end_of___secs_to_tm:
 18745                           	opt callstack 0
 18746                           
 18747 ;; *************** function ___omul *****************
 18748 ;; Defined at:
 18749 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18750 ;; Parameters:    Size  Location     Type
 18751 ;;  multiplier      8  [STACK] unsigned long long 
 18752 ;;  multiplicand    8  [STACK] unsigned long long 
 18753 ;; Auto vars:     Size  Location     Type
 18754 ;;  product         8  [STACK] unsigned long long 
 18755 ;; Return value:  Size  Location     Type
 18756 ;;                  8  [STACK] unsigned long long 
 18757 ;; Registers used:
 18758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18759 ;; Tracked objects:
 18760 ;;		On entry : 0/0
 18761 ;;		On exit  : 0/0
 18762 ;;		Unchanged: 0/0
 18763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18768 ;;Total ram usage:        0 bytes
 18769 ;; Hardware stack levels used:    1
 18770 ;; Hardware stack levels required when called:   15
 18771 ;; This function calls:
 18772 ;;		Nothing
 18773 ;; This function is called by:
 18774 ;;		___secs_to_tm
 18775 ;;		___year_to_secs
 18776 ;; This function uses a reentrant model
 18777 ;;
 18778                           
 18779                           	psect	text51
 18780  01ED62                     __ptext51:
 18781                           	opt callstack 0
 18782  01ED62                     ___omul:
 18783                           	opt callstack 0
 18784                           
 18785                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18786  01ED62  0E08               	movlw	8
 18787  01ED64  26E1               	addwf	fsr1l,f,c
 18788  01ED66  0E00               	movlw	0
 18789  01ED68  22E2               	addwfc	fsr1h,f,c
 18790                           
 18791                           ;stkvar	_product @ sp[(-8)+0]
 18792                           
 18793                           ;incstack = 0
 18794  01ED6A  0E07               	movlw	7
 18795  01ED6C  6E2A               	movwf	btemp^0,c
 18796  01ED6E  0EF8               	movlw	-8
 18797  01ED70                     u8061:
 18798  01ED70  6AE3               	clrf	plusw1,c
 18799  01ED72  2AE8               	incf	wreg,f,c
 18800  01ED74  062A               	decf	btemp^0,f,c
 18801  01ED76  E2FC               	bc	u8061
 18802  01ED78                     l10210:
 18803                           
 18804                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18805  01ED78  0EF0               	movlw	-16
 18806  01ED7A  A0E3               	btfss	plusw1,0,c
 18807  01ED7C  D050               	goto	l10214
 18808                           
 18809                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18810                           ;stkvar	_product @ sp[(-8)+0]
 18811  01ED7E  0EF8               	movlw	-8
 18812  01ED80  50E3               	movf	plusw1,w,c
 18813  01ED82  6E2A               	movwf	btemp^0,c
 18814  01ED84  0EE8               	movlw	-24
 18815  01ED86  50E3               	movf	plusw1,w,c
 18816  01ED88  262A               	addwf	btemp^0,f,c
 18817  01ED8A  0EF8               	movlw	-8
 18818  01ED8C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18819  01ED92  0EF9               	movlw	-7
 18820  01ED94  50E3               	movf	plusw1,w,c
 18821  01ED96  6E2A               	movwf	btemp^0,c
 18822  01ED98  0EE9               	movlw	-23
 18823  01ED9A  50E3               	movf	plusw1,w,c
 18824  01ED9C  222A               	addwfc	btemp^0,f,c
 18825  01ED9E  0EF9               	movlw	-7
 18826  01EDA0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18827  01EDA6  0EFA               	movlw	-6
 18828  01EDA8  50E3               	movf	plusw1,w,c
 18829  01EDAA  6E2A               	movwf	btemp^0,c
 18830  01EDAC  0EEA               	movlw	-22
 18831  01EDAE  50E3               	movf	plusw1,w,c
 18832  01EDB0  222A               	addwfc	btemp^0,f,c
 18833  01EDB2  0EFA               	movlw	-6
 18834  01EDB4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18835  01EDBA  0EFB               	movlw	-5
 18836  01EDBC  50E3               	movf	plusw1,w,c
 18837  01EDBE  6E2A               	movwf	btemp^0,c
 18838  01EDC0  0EEB               	movlw	-21
 18839  01EDC2  50E3               	movf	plusw1,w,c
 18840  01EDC4  222A               	addwfc	btemp^0,f,c
 18841  01EDC6  0EFB               	movlw	-5
 18842  01EDC8  0060  F0AB  FFE3   	movff	btemp,plusw1
 18843  01EDCE  0EFC               	movlw	-4
 18844  01EDD0  50E3               	movf	plusw1,w,c
 18845  01EDD2  6E2A               	movwf	btemp^0,c
 18846  01EDD4  0EEC               	movlw	-20
 18847  01EDD6  50E3               	movf	plusw1,w,c
 18848  01EDD8  222A               	addwfc	btemp^0,f,c
 18849  01EDDA  0EFC               	movlw	-4
 18850  01EDDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18851  01EDE2  0EFD               	movlw	-3
 18852  01EDE4  50E3               	movf	plusw1,w,c
 18853  01EDE6  6E2A               	movwf	btemp^0,c
 18854  01EDE8  0EED               	movlw	-19
 18855  01EDEA  50E3               	movf	plusw1,w,c
 18856  01EDEC  222A               	addwfc	btemp^0,f,c
 18857  01EDEE  0EFD               	movlw	-3
 18858  01EDF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18859  01EDF6  0EFE               	movlw	-2
 18860  01EDF8  50E3               	movf	plusw1,w,c
 18861  01EDFA  6E2A               	movwf	btemp^0,c
 18862  01EDFC  0EEE               	movlw	-18
 18863  01EDFE  50E3               	movf	plusw1,w,c
 18864  01EE00  222A               	addwfc	btemp^0,f,c
 18865  01EE02  0EFE               	movlw	-2
 18866  01EE04  0060  F0AB  FFE3   	movff	btemp,plusw1
 18867  01EE0A  0EFF               	movlw	-1
 18868  01EE0C  50E3               	movf	plusw1,w,c
 18869  01EE0E  6E2A               	movwf	btemp^0,c
 18870  01EE10  0EEF               	movlw	-17
 18871  01EE12  50E3               	movf	plusw1,w,c
 18872  01EE14  222A               	addwfc	btemp^0,f,c
 18873  01EE16  0EFF               	movlw	-1
 18874  01EE18  0060  F0AB  FFE3   	movff	btemp,plusw1
 18875  01EE1E                     l10214:
 18876                           
 18877                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18878  01EE1E  90D8               	bcf	status,0,c
 18879  01EE20  0EE8               	movlw	-24
 18880  01EE22  36E3               	rlcf	plusw1,f,c
 18881  01EE24  0EE9               	movlw	-23
 18882  01EE26  36E3               	rlcf	plusw1,f,c
 18883  01EE28  0EEA               	movlw	-22
 18884  01EE2A  36E3               	rlcf	plusw1,f,c
 18885  01EE2C  0EEB               	movlw	-21
 18886  01EE2E  36E3               	rlcf	plusw1,f,c
 18887  01EE30  0EEC               	movlw	-20
 18888  01EE32  36E3               	rlcf	plusw1,f,c
 18889  01EE34  0EED               	movlw	-19
 18890  01EE36  36E3               	rlcf	plusw1,f,c
 18891  01EE38  0EEE               	movlw	-18
 18892  01EE3A  36E3               	rlcf	plusw1,f,c
 18893  01EE3C  0EEF               	movlw	-17
 18894  01EE3E  36E3               	rlcf	plusw1,f,c
 18895                           
 18896                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18897  01EE40  90D8               	bcf	status,0,c
 18898  01EE42  0EF7               	movlw	-9
 18899  01EE44  32E3               	rrcf	plusw1,f,c
 18900  01EE46  0EF6               	movlw	-10
 18901  01EE48  32E3               	rrcf	plusw1,f,c
 18902  01EE4A  0EF5               	movlw	-11
 18903  01EE4C  32E3               	rrcf	plusw1,f,c
 18904  01EE4E  0EF4               	movlw	-12
 18905  01EE50  32E3               	rrcf	plusw1,f,c
 18906  01EE52  0EF3               	movlw	-13
 18907  01EE54  32E3               	rrcf	plusw1,f,c
 18908  01EE56  0EF2               	movlw	-14
 18909  01EE58  32E3               	rrcf	plusw1,f,c
 18910  01EE5A  0EF1               	movlw	-15
 18911  01EE5C  32E3               	rrcf	plusw1,f,c
 18912  01EE5E  0EF0               	movlw	-16
 18913  01EE60  32E3               	rrcf	plusw1,f,c
 18914                           
 18915                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18916  01EE62  0EF0               	movlw	-16
 18917  01EE64  50E3               	movf	plusw1,w,c
 18918  01EE66  E188               	bnz	l10210
 18919  01EE68  0EF1               	movlw	-15
 18920  01EE6A  50E3               	movf	plusw1,w,c
 18921  01EE6C  E185               	bnz	l10210
 18922  01EE6E  0EF2               	movlw	-14
 18923  01EE70  50E3               	movf	plusw1,w,c
 18924  01EE72  E182               	bnz	l10210
 18925  01EE74  0EF3               	movlw	-13
 18926  01EE76  50E3               	movf	plusw1,w,c
 18927  01EE78  E10C               	bnz	u8081
 18928  01EE7A  0EF4               	movlw	-12
 18929  01EE7C  50E3               	movf	plusw1,w,c
 18930  01EE7E  E109               	bnz	u8081
 18931  01EE80  0EF5               	movlw	-11
 18932  01EE82  50E3               	movf	plusw1,w,c
 18933  01EE84  E106               	bnz	u8081
 18934  01EE86  0EF6               	movlw	-10
 18935  01EE88  50E3               	movf	plusw1,w,c
 18936  01EE8A  E103               	bnz	u8081
 18937  01EE8C  0EF7               	movlw	-9
 18938  01EE8E  50E3               	movf	plusw1,w,c
 18939  01EE90  A4D8               	btfss	status,2,c
 18940  01EE92                     u8081:
 18941  01EE92  D772               	goto	l10210
 18942                           
 18943                           ;stkvar	_product @ sp[(-8)+0]
 18944  01EE94  0EF8               	movlw	248
 18945  01EE96  24E1               	addwf	fsr1l,w,c
 18946  01EE98  6ED9               	movwf	fsr2l,c
 18947  01EE9A  0EFF               	movlw	255
 18948  01EE9C  20E2               	addwfc	fsr1h,w,c
 18949  01EE9E  6EDA               	movwf	fsr2h,c
 18950                           
 18951                           ;stkvar	?___omul @ sp[(-8)+-8]
 18952  01EEA0  0E08               	movlw	8
 18953  01EEA2  6E2A               	movwf	btemp^0,c
 18954  01EEA4  0EF0               	movlw	-16
 18955  01EEA6                     us809999:
 18956  01EEA6  006F FF7B FFE3     	movff	postinc2,plusw1
 18957  01EEAC  28E8               	incf	wreg,w,c
 18958  01EEAE  2E2A               	decfsz	btemp^0,f,c
 18959  01EEB0  D7FA               	bra	us809999
 18960                           
 18961                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18962  01EEB2  0EF8               	movlw	248
 18963  01EEB4  26E1               	addwf	fsr1l,f,c
 18964  01EEB6  0EFF               	movlw	255
 18965  01EEB8  22E2               	addwfc	fsr1h,f,c
 18966  01EEBA  0012               	return		;funcret
 18967  01EEBC                     __end_of___omul:
 18968                           	opt callstack 0
 18969                           
 18970 ;; *************** function ___lmul *****************
 18971 ;; Defined at:
 18972 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18973 ;; Parameters:    Size  Location     Type
 18974 ;;  multiplier      4  [STACK] unsigned long 
 18975 ;;  multiplicand    4  [STACK] unsigned long 
 18976 ;; Auto vars:     Size  Location     Type
 18977 ;;  product         4  [STACK] unsigned long 
 18978 ;; Return value:  Size  Location     Type
 18979 ;;                  4  [STACK] unsigned long 
 18980 ;; Registers used:
 18981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18982 ;; Tracked objects:
 18983 ;;		On entry : 0/0
 18984 ;;		On exit  : 0/0
 18985 ;;		Unchanged: 0/0
 18986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18991 ;;Total ram usage:        0 bytes
 18992 ;; Hardware stack levels used:    1
 18993 ;; Hardware stack levels required when called:   15
 18994 ;; This function calls:
 18995 ;;		Nothing
 18996 ;; This function is called by:
 18997 ;;		___secs_to_tm
 18998 ;;		_rule_to_secs
 18999 ;;		___year_to_secs
 19000 ;; This function uses a reentrant model
 19001 ;;
 19002                           
 19003                           	psect	text52
 19004  00028C                     __ptext52:
 19005                           	opt callstack 0
 19006  00028C                     ___lmul:
 19007                           	opt callstack 0
 19008                           
 19009                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19010  00028C  52E6               	movf	postinc1,f,c
 19011  00028E  52E6               	movf	postinc1,f,c
 19012  000290  52E6               	movf	postinc1,f,c
 19013  000292  52E6               	movf	postinc1,f,c
 19014                           
 19015                           ;stkvar	_product @ sp[(-4)+0]
 19016                           
 19017                           ;incstack = 0
 19018  000294  0EFC               	movlw	-4
 19019  000296  6AE3               	clrf	plusw1,c
 19020  000298  0EFD               	movlw	-3
 19021  00029A  6AE3               	clrf	plusw1,c
 19022  00029C  0EFE               	movlw	-2
 19023  00029E  6AE3               	clrf	plusw1,c
 19024  0002A0  0EFF               	movlw	-1
 19025  0002A2  6AE3               	clrf	plusw1,c
 19026  0002A4                     l2733:
 19027                           
 19028                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19029  0002A4  0EF8               	movlw	-8
 19030  0002A6  A0E3               	btfss	plusw1,0,c
 19031  0002A8  D028               	goto	l10200
 19032                           
 19033                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19034                           ;stkvar	_product @ sp[(-4)+0]
 19035  0002AA  0EFC               	movlw	-4
 19036  0002AC  50E3               	movf	plusw1,w,c
 19037  0002AE  6E2A               	movwf	btemp^0,c
 19038  0002B0  0EF4               	movlw	-12
 19039  0002B2  50E3               	movf	plusw1,w,c
 19040  0002B4  262A               	addwf	btemp^0,f,c
 19041  0002B6  0EFC               	movlw	-4
 19042  0002B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19043  0002BE  0EFD               	movlw	-3
 19044  0002C0  50E3               	movf	plusw1,w,c
 19045  0002C2  6E2A               	movwf	btemp^0,c
 19046  0002C4  0EF5               	movlw	-11
 19047  0002C6  50E3               	movf	plusw1,w,c
 19048  0002C8  222A               	addwfc	btemp^0,f,c
 19049  0002CA  0EFD               	movlw	-3
 19050  0002CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19051  0002D2  0EFE               	movlw	-2
 19052  0002D4  50E3               	movf	plusw1,w,c
 19053  0002D6  6E2A               	movwf	btemp^0,c
 19054  0002D8  0EF6               	movlw	-10
 19055  0002DA  50E3               	movf	plusw1,w,c
 19056  0002DC  222A               	addwfc	btemp^0,f,c
 19057  0002DE  0EFE               	movlw	-2
 19058  0002E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19059  0002E6  0EFF               	movlw	-1
 19060  0002E8  50E3               	movf	plusw1,w,c
 19061  0002EA  6E2A               	movwf	btemp^0,c
 19062  0002EC  0EF7               	movlw	-9
 19063  0002EE  50E3               	movf	plusw1,w,c
 19064  0002F0  222A               	addwfc	btemp^0,f,c
 19065  0002F2  0EFF               	movlw	-1
 19066  0002F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19067  0002FA                     l10200:
 19068                           
 19069                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19070  0002FA  90D8               	bcf	status,0,c
 19071  0002FC  0EF4               	movlw	-12
 19072  0002FE  36E3               	rlcf	plusw1,f,c
 19073  000300  0EF5               	movlw	-11
 19074  000302  36E3               	rlcf	plusw1,f,c
 19075  000304  0EF6               	movlw	-10
 19076  000306  36E3               	rlcf	plusw1,f,c
 19077  000308  0EF7               	movlw	-9
 19078  00030A  36E3               	rlcf	plusw1,f,c
 19079                           
 19080                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19081  00030C  90D8               	bcf	status,0,c
 19082  00030E  0EFB               	movlw	-5
 19083  000310  32E3               	rrcf	plusw1,f,c
 19084  000312  0EFA               	movlw	-6
 19085  000314  32E3               	rrcf	plusw1,f,c
 19086  000316  0EF9               	movlw	-7
 19087  000318  32E3               	rrcf	plusw1,f,c
 19088  00031A  0EF8               	movlw	-8
 19089  00031C  32E3               	rrcf	plusw1,f,c
 19090                           
 19091                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19092  00031E  0EF8               	movlw	-8
 19093  000320  50E3               	movf	plusw1,w,c
 19094  000322  E1C0               	bnz	l2733
 19095  000324  0EF9               	movlw	-7
 19096  000326  50E3               	movf	plusw1,w,c
 19097  000328  E1BD               	bnz	l2733
 19098  00032A  0EFA               	movlw	-6
 19099  00032C  50E3               	movf	plusw1,w,c
 19100  00032E  E1BA               	bnz	l2733
 19101  000330  0EFB               	movlw	-5
 19102  000332  50E3               	movf	plusw1,w,c
 19103  000334  A4D8               	btfss	status,2,c
 19104  000336  D7B6               	goto	l2733
 19105                           
 19106                           ;stkvar	_product @ sp[(-4)+0]
 19107  000338  0EFC               	movlw	-4
 19108  00033A  006F FF8C  F02A    	movff	plusw1,btemp
 19109  000340  0EFD               	movlw	-3
 19110  000342  006F FF8C  F02B    	movff	plusw1,btemp+1
 19111  000348  0EFE               	movlw	-2
 19112  00034A  006F FF8C  F02C    	movff	plusw1,btemp+2
 19113  000350  0EFF               	movlw	-1
 19114  000352  006F FF8C  F02D    	movff	plusw1,btemp+3
 19115                           
 19116                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19117  000358  0EF4               	movlw	244
 19118  00035A  26E1               	addwf	fsr1l,f,c
 19119  00035C  0EFF               	movlw	255
 19120  00035E  22E2               	addwfc	fsr1h,f,c
 19121  000360  0012               	return		;funcret
 19122  000362                     __end_of___lmul:
 19123                           	opt callstack 0
 19124                           
 19125 ;; *************** function ___almod *****************
 19126 ;; Defined at:
 19127 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 19128 ;; Parameters:    Size  Location     Type
 19129 ;;  dividend        4  [STACK] long 
 19130 ;;  divisor         4  [STACK] long 
 19131 ;; Auto vars:     Size  Location     Type
 19132 ;;  sign            1  [STACK] unsigned char 
 19133 ;;  counter         1  [STACK] unsigned char 
 19134 ;; Return value:  Size  Location     Type
 19135 ;;                  4  [STACK] long 
 19136 ;; Registers used:
 19137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19138 ;; Tracked objects:
 19139 ;;		On entry : 0/39
 19140 ;;		On exit  : 0/0
 19141 ;;		Unchanged: 0/0
 19142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19147 ;;Total ram usage:        0 bytes
 19148 ;; Hardware stack levels used:    1
 19149 ;; Hardware stack levels required when called:   15
 19150 ;; This function calls:
 19151 ;;		Nothing
 19152 ;; This function is called by:
 19153 ;;		___secs_to_tm
 19154 ;; This function uses a reentrant model
 19155 ;;
 19156                           
 19157                           	psect	text53
 19158  01E7D8                     __ptext53:
 19159                           	opt callstack 0
 19160  01E7D8                     ___almod:
 19161                           	opt callstack 0
 19162                           
 19163                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19164  01E7D8  52E6               	movf	postinc1,f,c
 19165  01E7DA  52E6               	movf	postinc1,f,c
 19166                           
 19167                           ;stkvar	_sign @ sp[(-2)+0]
 19168                           
 19169                           ;incstack = 0
 19170  01E7DC  0EFE               	movlw	-2
 19171  01E7DE  6AE3               	clrf	plusw1,c
 19172                           
 19173                           ;stkvar	_dividend @ sp[(-2)+-4]
 19174  01E7E0  0EFD               	movlw	-3
 19175  01E7E2  AEE3               	btfss	plusw1,7,c
 19176  01E7E4  D014               	goto	l11978
 19177                           
 19178                           ;stkvar	_dividend @ sp[(-2)+-4]
 19179                           ;stkvar	_dividend @ sp[(-2)+-4]
 19180  01E7E6  0EFA               	movlw	-6
 19181  01E7E8  6CE3               	negf	plusw1,c
 19182  01E7EA  0EFB               	movlw	-5
 19183  01E7EC  1EE3               	comf	plusw1,f,c
 19184  01E7EE  0EFC               	movlw	-4
 19185  01E7F0  1EE3               	comf	plusw1,f,c
 19186  01E7F2  0EFD               	movlw	-3
 19187  01E7F4  1EE3               	comf	plusw1,f,c
 19188  01E7F6  E308               	bnc	u11200
 19189  01E7F8  0EFB               	movlw	-5
 19190  01E7FA  2AE3               	incf	plusw1,f,c
 19191  01E7FC  E305               	bnc	u11200
 19192  01E7FE  0EFC               	movlw	-4
 19193  01E800  2AE3               	incf	plusw1,f,c
 19194  01E802  E302               	bnc	u11200
 19195  01E804  0EFD               	movlw	-3
 19196  01E806  2AE3               	incf	plusw1,f,c
 19197  01E808                     u11200:
 19198                           
 19199                           ;stkvar	_sign @ sp[(-2)+0]
 19200  01E808  0EFE               	movlw	-2
 19201  01E80A  6AE3               	clrf	plusw1,c
 19202  01E80C  2AE3               	incf	plusw1,f,c
 19203  01E80E                     l11978:
 19204                           
 19205                           ;stkvar	_divisor @ sp[(-2)+-8]
 19206  01E80E  0EF9               	movlw	-7
 19207  01E810  AEE3               	btfss	plusw1,7,c
 19208  01E812  D011               	goto	u11220
 19209                           
 19210                           ;stkvar	_divisor @ sp[(-2)+-8]
 19211                           ;stkvar	_divisor @ sp[(-2)+-8]
 19212  01E814  0EF6               	movlw	-10
 19213  01E816  6CE3               	negf	plusw1,c
 19214  01E818  0EF7               	movlw	-9
 19215  01E81A  1EE3               	comf	plusw1,f,c
 19216  01E81C  0EF8               	movlw	-8
 19217  01E81E  1EE3               	comf	plusw1,f,c
 19218  01E820  0EF9               	movlw	-7
 19219  01E822  1EE3               	comf	plusw1,f,c
 19220  01E824  E308               	bnc	u11220
 19221  01E826  0EF7               	movlw	-9
 19222  01E828  2AE3               	incf	plusw1,f,c
 19223  01E82A  E305               	bnc	u11220
 19224  01E82C  0EF8               	movlw	-8
 19225  01E82E  2AE3               	incf	plusw1,f,c
 19226  01E830  E302               	bnc	u11220
 19227  01E832  0EF9               	movlw	-7
 19228  01E834  2AE3               	incf	plusw1,f,c
 19229  01E836                     u11220:
 19230                           
 19231                           ;stkvar	_divisor @ sp[(-2)+-8]
 19232  01E836  0EF6               	movlw	-10
 19233  01E838  50E3               	movf	plusw1,w,c
 19234  01E83A  E10A               	bnz	u11230
 19235  01E83C  0EF7               	movlw	-9
 19236  01E83E  50E3               	movf	plusw1,w,c
 19237  01E840  E107               	bnz	u11230
 19238  01E842  0EF8               	movlw	-8
 19239  01E844  50E3               	movf	plusw1,w,c
 19240  01E846  E104               	bnz	u11230
 19241  01E848  0EF9               	movlw	-7
 19242  01E84A  50E3               	movf	plusw1,w,c
 19243  01E84C  B4D8               	btfsc	status,2,c
 19244  01E84E  D04D               	goto	u11260
 19245  01E850                     u11230:
 19246                           
 19247                           ;stkvar	_counter @ sp[(-2)+1]
 19248  01E850  0EFF               	movlw	-1
 19249  01E852  6AE3               	clrf	plusw1,c
 19250  01E854  D00A               	goto	L17
 19251  01E856                     l11986:
 19252                           
 19253                           ;stkvar	_divisor @ sp[(-2)+-8]
 19254  01E856  90D8               	bcf	status,0,c
 19255  01E858  0EF6               	movlw	-10
 19256  01E85A  36E3               	rlcf	plusw1,f,c
 19257  01E85C  0EF7               	movlw	-9
 19258  01E85E  36E3               	rlcf	plusw1,f,c
 19259  01E860  0EF8               	movlw	-8
 19260  01E862  36E3               	rlcf	plusw1,f,c
 19261  01E864  0EF9               	movlw	-7
 19262  01E866  36E3               	rlcf	plusw1,f,c
 19263                           
 19264                           ;stkvar	_counter @ sp[(-2)+1]
 19265  01E868  0EFF               	movlw	-1
 19266  01E86A                     L17:
 19267  01E86A  2AE3               	incf	plusw1,f,c
 19268                           
 19269                           ;stkvar	_divisor @ sp[(-2)+-8]
 19270  01E86C  0EF9               	movlw	-7
 19271  01E86E  AEE3               	btfss	plusw1,7,c
 19272  01E870  D7F2               	goto	l11986
 19273  01E872                     u11240:
 19274                           
 19275                           ;stkvar	_divisor @ sp[(-2)+-8]
 19276                           ;stkvar	_dividend @ sp[(-2)+-4]
 19277  01E872  50E1               	movf	fsr1l,w,c
 19278  01E874  0FFA               	addlw	-6
 19279  01E876  6ED9               	movwf	fsr2l,c
 19280  01E878  50E2               	movf	fsr1h,w,c
 19281  01E87A  6EDA               	movwf	fsr2h,c
 19282  01E87C  0EFF               	movlw	255
 19283  01E87E  22DA               	addwfc	fsr2h,f,c
 19284  01E880  0EF6               	movlw	-10
 19285  01E882  50E3               	movf	plusw1,w,c
 19286  01E884  5CDE               	subwf	postinc2,w,c
 19287  01E886  0EF7               	movlw	-9
 19288  01E888  50E3               	movf	plusw1,w,c
 19289  01E88A  58DE               	subwfb	postinc2,w,c
 19290  01E88C  0EF8               	movlw	-8
 19291  01E88E  50E3               	movf	plusw1,w,c
 19292  01E890  58DE               	subwfb	postinc2,w,c
 19293  01E892  0EF9               	movlw	-7
 19294  01E894  50E3               	movf	plusw1,w,c
 19295  01E896  58DE               	subwfb	postinc2,w,c
 19296  01E898  A0D8               	btfss	status,0,c
 19297  01E89A  D013               	goto	l11994
 19298                           
 19299                           ;stkvar	_divisor @ sp[(-2)+-8]
 19300                           ;stkvar	_dividend @ sp[(-2)+-4]
 19301  01E89C  50E1               	movf	fsr1l,w,c
 19302  01E89E  0FFA               	addlw	-6
 19303  01E8A0  6ED9               	movwf	fsr2l,c
 19304  01E8A2  50E2               	movf	fsr1h,w,c
 19305  01E8A4  6EDA               	movwf	fsr2h,c
 19306  01E8A6  0EFF               	movlw	255
 19307  01E8A8  22DA               	addwfc	fsr2h,f,c
 19308  01E8AA  0EF6               	movlw	-10
 19309  01E8AC  50E3               	movf	plusw1,w,c
 19310  01E8AE  5EDE               	subwf	postinc2,f,c
 19311  01E8B0  0EF7               	movlw	-9
 19312  01E8B2  50E3               	movf	plusw1,w,c
 19313  01E8B4  5ADE               	subwfb	postinc2,f,c
 19314  01E8B6  0EF8               	movlw	-8
 19315  01E8B8  50E3               	movf	plusw1,w,c
 19316  01E8BA  5ADE               	subwfb	postinc2,f,c
 19317  01E8BC  0EF9               	movlw	-7
 19318  01E8BE  50E3               	movf	plusw1,w,c
 19319  01E8C0  5ADE               	subwfb	postinc2,f,c
 19320  01E8C2                     l11994:
 19321                           
 19322                           ;stkvar	_divisor @ sp[(-2)+-8]
 19323  01E8C2  90D8               	bcf	status,0,c
 19324  01E8C4  0EF9               	movlw	-7
 19325  01E8C6  32E3               	rrcf	plusw1,f,c
 19326  01E8C8  0EF8               	movlw	-8
 19327  01E8CA  32E3               	rrcf	plusw1,f,c
 19328  01E8CC  0EF7               	movlw	-9
 19329  01E8CE  32E3               	rrcf	plusw1,f,c
 19330  01E8D0  0EF6               	movlw	-10
 19331  01E8D2  32E3               	rrcf	plusw1,f,c
 19332                           
 19333                           ;stkvar	_counter @ sp[(-2)+1]
 19334  01E8D4  0EFF               	movlw	-1
 19335  01E8D6  50E3               	movf	plusw1,w,c
 19336  01E8D8  6E2A               	movwf	btemp^0,c
 19337  01E8DA  0E01               	movlw	1
 19338  01E8DC  5E2A               	subwf	btemp^0,f,c
 19339  01E8DE  0EFF               	movlw	-1
 19340  01E8E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19341  01E8E6  A4D8               	btfss	status,2,c
 19342  01E8E8  D7C4               	goto	u11240
 19343  01E8EA                     u11260:
 19344                           
 19345                           ;stkvar	_sign @ sp[(-2)+0]
 19346  01E8EA  0EFE               	movlw	-2
 19347  01E8EC  50E3               	movf	plusw1,w,c
 19348  01E8EE  B4D8               	btfsc	status,2,c
 19349  01E8F0  D011               	goto	u11280
 19350                           
 19351                           ;stkvar	_dividend @ sp[(-2)+-4]
 19352                           ;stkvar	_dividend @ sp[(-2)+-4]
 19353  01E8F2  0EFA               	movlw	-6
 19354  01E8F4  6CE3               	negf	plusw1,c
 19355  01E8F6  0EFB               	movlw	-5
 19356  01E8F8  1EE3               	comf	plusw1,f,c
 19357  01E8FA  0EFC               	movlw	-4
 19358  01E8FC  1EE3               	comf	plusw1,f,c
 19359  01E8FE  0EFD               	movlw	-3
 19360  01E900  1EE3               	comf	plusw1,f,c
 19361  01E902  E308               	bnc	u11280
 19362  01E904  0EFB               	movlw	-5
 19363  01E906  2AE3               	incf	plusw1,f,c
 19364  01E908  E305               	bnc	u11280
 19365  01E90A  0EFC               	movlw	-4
 19366  01E90C  2AE3               	incf	plusw1,f,c
 19367  01E90E  E302               	bnc	u11280
 19368  01E910  0EFD               	movlw	-3
 19369  01E912  2AE3               	incf	plusw1,f,c
 19370  01E914                     u11280:
 19371                           
 19372                           ;stkvar	_dividend @ sp[(-2)+-4]
 19373  01E914  0EFA               	movlw	-6
 19374  01E916  006F FF8C  F02A    	movff	plusw1,btemp
 19375  01E91C  0EFB               	movlw	-5
 19376  01E91E  006F FF8C  F02B    	movff	plusw1,btemp+1
 19377  01E924  0EFC               	movlw	-4
 19378  01E926  006F FF8C  F02C    	movff	plusw1,btemp+2
 19379  01E92C  0EFD               	movlw	-3
 19380  01E92E  006F FF8C  F02D    	movff	plusw1,btemp+3
 19381                           
 19382                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19383  01E934  0EF6               	movlw	246
 19384  01E936  26E1               	addwf	fsr1l,f,c
 19385  01E938  0EFF               	movlw	255
 19386  01E93A  22E2               	addwfc	fsr1h,f,c
 19387  01E93C  0012               	return		;funcret
 19388  01E93E                     __end_of___almod:
 19389                           	opt callstack 0
 19390                           
 19391 ;; *************** function ___aldiv *****************
 19392 ;; Defined at:
 19393 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19394 ;; Parameters:    Size  Location     Type
 19395 ;;  dividend        4  [STACK] long 
 19396 ;;  divisor         4  [STACK] long 
 19397 ;; Auto vars:     Size  Location     Type
 19398 ;;  quotient        4  [STACK] long 
 19399 ;;  sign            1  [STACK] unsigned char 
 19400 ;;  counter         1  [STACK] unsigned char 
 19401 ;; Return value:  Size  Location     Type
 19402 ;;                  4  [STACK] long 
 19403 ;; Registers used:
 19404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19405 ;; Tracked objects:
 19406 ;;		On entry : 0/0
 19407 ;;		On exit  : 0/0
 19408 ;;		Unchanged: 0/0
 19409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19414 ;;Total ram usage:        0 bytes
 19415 ;; Hardware stack levels used:    1
 19416 ;; Hardware stack levels required when called:   15
 19417 ;; This function calls:
 19418 ;;		Nothing
 19419 ;; This function is called by:
 19420 ;;		___secs_to_tm
 19421 ;;		_rule_to_secs
 19422 ;; This function uses a reentrant model
 19423 ;;
 19424                           
 19425                           	psect	text54
 19426  01DECC                     __ptext54:
 19427                           	opt callstack 0
 19428  01DECC                     ___aldiv:
 19429                           	opt callstack 0
 19430                           
 19431                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19432  01DECC  0E06               	movlw	6
 19433  01DECE  26E1               	addwf	fsr1l,f,c
 19434  01DED0  0E00               	movlw	0
 19435  01DED2  22E2               	addwfc	fsr1h,f,c
 19436                           
 19437                           ;stkvar	_sign @ sp[(-6)+4]
 19438                           
 19439                           ;incstack = 0
 19440  01DED4  0EFE               	movlw	-2
 19441  01DED6  6AE3               	clrf	plusw1,c
 19442                           
 19443                           ;stkvar	_divisor @ sp[(-6)+-8]
 19444  01DED8  0EF5               	movlw	-11
 19445  01DEDA  AEE3               	btfss	plusw1,7,c
 19446  01DEDC  D014               	goto	l11520
 19447                           
 19448                           ;stkvar	_divisor @ sp[(-6)+-8]
 19449                           ;stkvar	_divisor @ sp[(-6)+-8]
 19450  01DEDE  0EF2               	movlw	-14
 19451  01DEE0  6CE3               	negf	plusw1,c
 19452  01DEE2  0EF3               	movlw	-13
 19453  01DEE4  1EE3               	comf	plusw1,f,c
 19454  01DEE6  0EF4               	movlw	-12
 19455  01DEE8  1EE3               	comf	plusw1,f,c
 19456  01DEEA  0EF5               	movlw	-11
 19457  01DEEC  1EE3               	comf	plusw1,f,c
 19458  01DEEE  E308               	bnc	u10520
 19459  01DEF0  0EF3               	movlw	-13
 19460  01DEF2  2AE3               	incf	plusw1,f,c
 19461  01DEF4  E305               	bnc	u10520
 19462  01DEF6  0EF4               	movlw	-12
 19463  01DEF8  2AE3               	incf	plusw1,f,c
 19464  01DEFA  E302               	bnc	u10520
 19465  01DEFC  0EF5               	movlw	-11
 19466  01DEFE  2AE3               	incf	plusw1,f,c
 19467  01DF00                     u10520:
 19468                           
 19469                           ;stkvar	_sign @ sp[(-6)+4]
 19470  01DF00  0EFE               	movlw	-2
 19471  01DF02  6AE3               	clrf	plusw1,c
 19472  01DF04  2AE3               	incf	plusw1,f,c
 19473  01DF06                     l11520:
 19474                           
 19475                           ;stkvar	_dividend @ sp[(-6)+-4]
 19476  01DF06  0EF9               	movlw	-7
 19477  01DF08  AEE3               	btfss	plusw1,7,c
 19478  01DF0A  D013               	goto	l11526
 19479                           
 19480                           ;stkvar	_dividend @ sp[(-6)+-4]
 19481                           ;stkvar	_dividend @ sp[(-6)+-4]
 19482  01DF0C  0EF6               	movlw	-10
 19483  01DF0E  6CE3               	negf	plusw1,c
 19484  01DF10  0EF7               	movlw	-9
 19485  01DF12  1EE3               	comf	plusw1,f,c
 19486  01DF14  0EF8               	movlw	-8
 19487  01DF16  1EE3               	comf	plusw1,f,c
 19488  01DF18  0EF9               	movlw	-7
 19489  01DF1A  1EE3               	comf	plusw1,f,c
 19490  01DF1C  E308               	bnc	u10540
 19491  01DF1E  0EF7               	movlw	-9
 19492  01DF20  2AE3               	incf	plusw1,f,c
 19493  01DF22  E305               	bnc	u10540
 19494  01DF24  0EF8               	movlw	-8
 19495  01DF26  2AE3               	incf	plusw1,f,c
 19496  01DF28  E302               	bnc	u10540
 19497  01DF2A  0EF9               	movlw	-7
 19498  01DF2C  2AE3               	incf	plusw1,f,c
 19499  01DF2E                     u10540:
 19500                           
 19501                           ;stkvar	_sign @ sp[(-6)+4]
 19502  01DF2E  0EFE               	movlw	-2
 19503  01DF30  70E3               	btg	plusw1,0,c
 19504  01DF32                     l11526:
 19505                           
 19506                           ;stkvar	_quotient @ sp[(-6)+0]
 19507  01DF32  0EFA               	movlw	-6
 19508  01DF34  6AE3               	clrf	plusw1,c
 19509  01DF36  0EFB               	movlw	-5
 19510  01DF38  6AE3               	clrf	plusw1,c
 19511  01DF3A  0EFC               	movlw	-4
 19512  01DF3C  6AE3               	clrf	plusw1,c
 19513  01DF3E  0EFD               	movlw	-3
 19514  01DF40  6AE3               	clrf	plusw1,c
 19515                           
 19516                           ;stkvar	_divisor @ sp[(-6)+-8]
 19517  01DF42  0EF2               	movlw	-14
 19518  01DF44  50E3               	movf	plusw1,w,c
 19519  01DF46  E10A               	bnz	u10550
 19520  01DF48  0EF3               	movlw	-13
 19521  01DF4A  50E3               	movf	plusw1,w,c
 19522  01DF4C  E107               	bnz	u10550
 19523  01DF4E  0EF4               	movlw	-12
 19524  01DF50  50E3               	movf	plusw1,w,c
 19525  01DF52  E104               	bnz	u10550
 19526  01DF54  0EF5               	movlw	-11
 19527  01DF56  50E3               	movf	plusw1,w,c
 19528  01DF58  B4D8               	btfsc	status,2,c
 19529  01DF5A  D058               	goto	u10580
 19530  01DF5C                     u10550:
 19531                           
 19532                           ;stkvar	_counter @ sp[(-6)+5]
 19533  01DF5C  0EFF               	movlw	-1
 19534  01DF5E  6AE3               	clrf	plusw1,c
 19535  01DF60  D00A               	goto	L18
 19536  01DF62                     l11532:
 19537                           
 19538                           ;stkvar	_divisor @ sp[(-6)+-8]
 19539  01DF62  90D8               	bcf	status,0,c
 19540  01DF64  0EF2               	movlw	-14
 19541  01DF66  36E3               	rlcf	plusw1,f,c
 19542  01DF68  0EF3               	movlw	-13
 19543  01DF6A  36E3               	rlcf	plusw1,f,c
 19544  01DF6C  0EF4               	movlw	-12
 19545  01DF6E  36E3               	rlcf	plusw1,f,c
 19546  01DF70  0EF5               	movlw	-11
 19547  01DF72  36E3               	rlcf	plusw1,f,c
 19548                           
 19549                           ;stkvar	_counter @ sp[(-6)+5]
 19550  01DF74  0EFF               	movlw	-1
 19551  01DF76                     L18:
 19552  01DF76  2AE3               	incf	plusw1,f,c
 19553                           
 19554                           ;stkvar	_divisor @ sp[(-6)+-8]
 19555  01DF78  0EF5               	movlw	-11
 19556  01DF7A  AEE3               	btfss	plusw1,7,c
 19557  01DF7C  D7F2               	goto	l11532
 19558  01DF7E                     u10560:
 19559                           
 19560                           ;stkvar	_quotient @ sp[(-6)+0]
 19561  01DF7E  90D8               	bcf	status,0,c
 19562  01DF80  0EFA               	movlw	-6
 19563  01DF82  36E3               	rlcf	plusw1,f,c
 19564  01DF84  0EFB               	movlw	-5
 19565  01DF86  36E3               	rlcf	plusw1,f,c
 19566  01DF88  0EFC               	movlw	-4
 19567  01DF8A  36E3               	rlcf	plusw1,f,c
 19568  01DF8C  0EFD               	movlw	-3
 19569  01DF8E  36E3               	rlcf	plusw1,f,c
 19570                           
 19571                           ;stkvar	_divisor @ sp[(-6)+-8]
 19572                           ;stkvar	_dividend @ sp[(-6)+-4]
 19573  01DF90  50E1               	movf	fsr1l,w,c
 19574  01DF92  0FF6               	addlw	-10
 19575  01DF94  6ED9               	movwf	fsr2l,c
 19576  01DF96  50E2               	movf	fsr1h,w,c
 19577  01DF98  6EDA               	movwf	fsr2h,c
 19578  01DF9A  0EFF               	movlw	255
 19579  01DF9C  22DA               	addwfc	fsr2h,f,c
 19580  01DF9E  0EF2               	movlw	-14
 19581  01DFA0  50E3               	movf	plusw1,w,c
 19582  01DFA2  5CDE               	subwf	postinc2,w,c
 19583  01DFA4  0EF3               	movlw	-13
 19584  01DFA6  50E3               	movf	plusw1,w,c
 19585  01DFA8  58DE               	subwfb	postinc2,w,c
 19586  01DFAA  0EF4               	movlw	-12
 19587  01DFAC  50E3               	movf	plusw1,w,c
 19588  01DFAE  58DE               	subwfb	postinc2,w,c
 19589  01DFB0  0EF5               	movlw	-11
 19590  01DFB2  50E3               	movf	plusw1,w,c
 19591  01DFB4  58DE               	subwfb	postinc2,w,c
 19592  01DFB6  A0D8               	btfss	status,0,c
 19593  01DFB8  D015               	goto	l11544
 19594                           
 19595                           ;stkvar	_divisor @ sp[(-6)+-8]
 19596                           ;stkvar	_dividend @ sp[(-6)+-4]
 19597  01DFBA  50E1               	movf	fsr1l,w,c
 19598  01DFBC  0FF6               	addlw	-10
 19599  01DFBE  6ED9               	movwf	fsr2l,c
 19600  01DFC0  50E2               	movf	fsr1h,w,c
 19601  01DFC2  6EDA               	movwf	fsr2h,c
 19602  01DFC4  0EFF               	movlw	255
 19603  01DFC6  22DA               	addwfc	fsr2h,f,c
 19604  01DFC8  0EF2               	movlw	-14
 19605  01DFCA  50E3               	movf	plusw1,w,c
 19606  01DFCC  5EDE               	subwf	postinc2,f,c
 19607  01DFCE  0EF3               	movlw	-13
 19608  01DFD0  50E3               	movf	plusw1,w,c
 19609  01DFD2  5ADE               	subwfb	postinc2,f,c
 19610  01DFD4  0EF4               	movlw	-12
 19611  01DFD6  50E3               	movf	plusw1,w,c
 19612  01DFD8  5ADE               	subwfb	postinc2,f,c
 19613  01DFDA  0EF5               	movlw	-11
 19614  01DFDC  50E3               	movf	plusw1,w,c
 19615  01DFDE  5ADE               	subwfb	postinc2,f,c
 19616                           
 19617                           ;stkvar	_quotient @ sp[(-6)+0]
 19618  01DFE0  0EFA               	movlw	-6
 19619  01DFE2  80E3               	bsf	plusw1,0,c
 19620  01DFE4                     l11544:
 19621                           
 19622                           ;stkvar	_divisor @ sp[(-6)+-8]
 19623  01DFE4  90D8               	bcf	status,0,c
 19624  01DFE6  0EF5               	movlw	-11
 19625  01DFE8  32E3               	rrcf	plusw1,f,c
 19626  01DFEA  0EF4               	movlw	-12
 19627  01DFEC  32E3               	rrcf	plusw1,f,c
 19628  01DFEE  0EF3               	movlw	-13
 19629  01DFF0  32E3               	rrcf	plusw1,f,c
 19630  01DFF2  0EF2               	movlw	-14
 19631  01DFF4  32E3               	rrcf	plusw1,f,c
 19632                           
 19633                           ;stkvar	_counter @ sp[(-6)+5]
 19634  01DFF6  0EFF               	movlw	-1
 19635  01DFF8  50E3               	movf	plusw1,w,c
 19636  01DFFA  6E2A               	movwf	btemp^0,c
 19637  01DFFC  0E01               	movlw	1
 19638  01DFFE  5E2A               	subwf	btemp^0,f,c
 19639  01E000  0EFF               	movlw	-1
 19640  01E002  0060  F0AB  FFE3   	movff	btemp,plusw1
 19641  01E008  A4D8               	btfss	status,2,c
 19642  01E00A  D7B9               	goto	u10560
 19643  01E00C                     u10580:
 19644                           
 19645                           ;stkvar	_sign @ sp[(-6)+4]
 19646  01E00C  0EFE               	movlw	-2
 19647  01E00E  50E3               	movf	plusw1,w,c
 19648  01E010  B4D8               	btfsc	status,2,c
 19649  01E012  D011               	goto	u10600
 19650                           
 19651                           ;stkvar	_quotient @ sp[(-6)+0]
 19652                           ;stkvar	_quotient @ sp[(-6)+0]
 19653  01E014  0EFA               	movlw	-6
 19654  01E016  6CE3               	negf	plusw1,c
 19655  01E018  0EFB               	movlw	-5
 19656  01E01A  1EE3               	comf	plusw1,f,c
 19657  01E01C  0EFC               	movlw	-4
 19658  01E01E  1EE3               	comf	plusw1,f,c
 19659  01E020  0EFD               	movlw	-3
 19660  01E022  1EE3               	comf	plusw1,f,c
 19661  01E024  E308               	bnc	u10600
 19662  01E026  0EFB               	movlw	-5
 19663  01E028  2AE3               	incf	plusw1,f,c
 19664  01E02A  E305               	bnc	u10600
 19665  01E02C  0EFC               	movlw	-4
 19666  01E02E  2AE3               	incf	plusw1,f,c
 19667  01E030  E302               	bnc	u10600
 19668  01E032  0EFD               	movlw	-3
 19669  01E034  2AE3               	incf	plusw1,f,c
 19670  01E036                     u10600:
 19671                           
 19672                           ;stkvar	_quotient @ sp[(-6)+0]
 19673  01E036  0EFA               	movlw	-6
 19674  01E038  006F FF8C  F02A    	movff	plusw1,btemp
 19675  01E03E  0EFB               	movlw	-5
 19676  01E040  006F FF8C  F02B    	movff	plusw1,btemp+1
 19677  01E046  0EFC               	movlw	-4
 19678  01E048  006F FF8C  F02C    	movff	plusw1,btemp+2
 19679  01E04E  0EFD               	movlw	-3
 19680  01E050  006F FF8C  F02D    	movff	plusw1,btemp+3
 19681                           
 19682                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19683  01E056  0EF2               	movlw	242
 19684  01E058  26E1               	addwf	fsr1l,f,c
 19685  01E05A  0EFF               	movlw	255
 19686  01E05C  22E2               	addwfc	fsr1h,f,c
 19687  01E05E  0012               	return		;funcret
 19688  01E060                     __end_of___aldiv:
 19689                           	opt callstack 0
 19690                           
 19691 ;; *************** function _asctime *****************
 19692 ;; Defined at:
 19693 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19694 ;; Parameters:    Size  Location     Type
 19695 ;;  tim             2  [STACK] PTR const struct tm
 19696 ;;		 -> localtime@tm(24), NULL(0), 
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;  cp              2  [STACK] PTR unsigned char 
 19699 ;;		 -> asctime@buf(27), 
 19700 ;;  s               2  [STACK] PTR const unsigned char 
 19701 ;;		 -> STR_132(37), STR_131(22), 
 19702 ;; Return value:  Size  Location     Type
 19703 ;;                  2  [STACK] PTR unsigned char 
 19704 ;; Registers used:
 19705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19706 ;; Tracked objects:
 19707 ;;		On entry : 0/39
 19708 ;;		On exit  : 0/0
 19709 ;;		Unchanged: 0/0
 19710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19715 ;;Total ram usage:        0 bytes
 19716 ;; Hardware stack levels used:    1
 19717 ;; Hardware stack levels required when called:   17
 19718 ;; This function calls:
 19719 ;;		___awdiv
 19720 ;;		___awmod
 19721 ;;		_put2d
 19722 ;; This function is called by:
 19723 ;;		_main
 19724 ;;		_display_history
 19725 ;; This function uses a reentrant model
 19726 ;;
 19727                           
 19728                           	psect	text55
 19729  0181D6                     __ptext55:
 19730                           	opt callstack 0
 19731  0181D6                     _asctime:
 19732                           	opt callstack 0
 19733                           
 19734                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19735  0181D6  52E6               	movf	postinc1,f,c
 19736  0181D8  52E6               	movf	postinc1,f,c
 19737  0181DA  52E6               	movf	postinc1,f,c
 19738  0181DC  52E6               	movf	postinc1,f,c
 19739                           
 19740                           ;stkvar	_tim @ sp[(-4)+-2]
 19741                           
 19742                           ;incstack = 0
 19743  0181DE  0EFA               	movlw	-6
 19744  0181E0  006F FF8C  F034    	movff	plusw1,btemp+10
 19745  0181E6  0EFB               	movlw	-5
 19746  0181E8  006F FF8C  F035    	movff	plusw1,btemp+11
 19747  0181EE  0E0C               	movlw	12
 19748  0181F0  2434               	addwf	(btemp+10)^0,w,c
 19749  0181F2  6ED9               	movwf	fsr2l,c
 19750  0181F4  0E00               	movlw	0
 19751  0181F6  2035               	addwfc	(btemp+11)^0,w,c
 19752  0181F8  6EDA               	movwf	fsr2h,c
 19753  0181FA  006F FF78  F034    	movff	postinc2,btemp+10
 19754  018200  006F FF74  F035    	movff	postdec2,btemp+11
 19755  018206  0E03               	movlw	3
 19756  018208  0234               	mulwf	(btemp+10)^0,c
 19757  01820A  006F FFCC  F032    	movff	prodl,btemp+8
 19758  018210  006F FFD0  F033    	movff	prodh,btemp+9
 19759  018216  0235               	mulwf	(btemp+11)^0,c
 19760  018218  50F3               	movf	prodl,w,c
 19761  01821A  2633               	addwf	(btemp+9)^0,f,c
 19762  01821C  0E27               	movlw	low STR_131
 19763  01821E  6E34               	movwf	(btemp+10)^0,c
 19764  018220  0EFD               	movlw	high STR_131
 19765  018222  6E35               	movwf	(btemp+11)^0,c
 19766  018224  5032               	movf	(btemp+8)^0,w,c
 19767  018226  2634               	addwf	(btemp+10)^0,f,c
 19768  018228  5033               	movf	(btemp+9)^0,w,c
 19769  01822A  2235               	addwfc	(btemp+11)^0,f,c
 19770                           
 19771                           ;stkvar	_s @ sp[(-4)+2]
 19772  01822C  0EFF               	movlw	-1
 19773  01822E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19774  018234  0EFE               	movlw	-2
 19775  018236  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19776                           
 19777                           ;stkvar	_cp @ sp[(-4)+0]
 19778  01823C  0E03               	movlw	high asctime@buf
 19779  01823E  6E2A               	movwf	btemp^0,c
 19780  018240  0EFD               	movlw	-3
 19781  018242  0060  F0AB  FFE3   	movff	btemp,plusw1
 19782  018248  0EC4               	movlw	low asctime@buf
 19783  01824A  6E2A               	movwf	btemp^0,c
 19784  01824C  0EFC               	movlw	-4
 19785  01824E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19786                           
 19787                           ;stkvar	_s @ sp[(-4)+2]
 19788  018254  50E1               	movf	fsr1l,w,c
 19789  018256  0FFE               	addlw	-2
 19790  018258  6ED9               	movwf	fsr2l,c
 19791  01825A  50E2               	movf	fsr1h,w,c
 19792  01825C  6EDA               	movwf	fsr2h,c
 19793  01825E  0EFF               	movlw	255
 19794  018260  22DA               	addwfc	fsr2h,f,c
 19795  018262  006F FF7B FFF6     	movff	postinc2,tblptrl
 19796  018268  006F FF77 FFF7     	movff	postdec2,tblptrh
 19797  01826E                     	if	0	;tblptru may be non-zero
 19798  01826E                     	endif
 19799  01826E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19800  01826E  0E00               	movlw	low (__mediumconst shr (0+16))
 19801  018270  6EF8               	movwf	tblptru,c
 19802  018272                     	endif
 19803                           
 19804                           ;stkvar	_cp @ sp[(-4)+0]
 19805  018272  0EFC               	movlw	-4
 19806  018274  006F FF8F FFD9     	movff	plusw1,fsr2l
 19807  01827A  0EFD               	movlw	-3
 19808  01827C  006F FF8F FFDA     	movff	plusw1,fsr2h
 19809  018282  0008               	tblrd		*
 19810  018284  006F FFD7 FFDF     	movff	tablat,indf2
 19811                           
 19812                           ;stkvar	_s @ sp[(-4)+2]
 19813  01828A  0EFE               	movlw	-2
 19814  01828C  50E3               	movf	plusw1,w,c
 19815  01828E  0F01               	addlw	1
 19816  018290  6E2A               	movwf	btemp^0,c
 19817  018292  0EFE               	movlw	-2
 19818  018294  0060  F0AB  FFE3   	movff	btemp,plusw1
 19819  01829A  6A2A               	clrf	btemp^0,c
 19820  01829C  0EFF               	movlw	-1
 19821  01829E  50E3               	movf	plusw1,w,c
 19822  0182A0  202A               	addwfc	btemp^0,w,c
 19823  0182A2  6E2A               	movwf	btemp^0,c
 19824  0182A4  0EFF               	movlw	-1
 19825  0182A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19826                           
 19827                           ;stkvar	_cp @ sp[(-4)+0]
 19828  0182AC  0EFC               	movlw	-4
 19829  0182AE  50E3               	movf	plusw1,w,c
 19830  0182B0  0F01               	addlw	1
 19831  0182B2  6E2A               	movwf	btemp^0,c
 19832  0182B4  0EFC               	movlw	-4
 19833  0182B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19834  0182BC  6A2A               	clrf	btemp^0,c
 19835  0182BE  0EFD               	movlw	-3
 19836  0182C0  50E3               	movf	plusw1,w,c
 19837  0182C2  202A               	addwfc	btemp^0,w,c
 19838  0182C4  6E2A               	movwf	btemp^0,c
 19839  0182C6  0EFD               	movlw	-3
 19840  0182C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19841                           
 19842                           ;stkvar	_s @ sp[(-4)+2]
 19843  0182CE  50E1               	movf	fsr1l,w,c
 19844  0182D0  0FFE               	addlw	-2
 19845  0182D2  6ED9               	movwf	fsr2l,c
 19846  0182D4  50E2               	movf	fsr1h,w,c
 19847  0182D6  6EDA               	movwf	fsr2h,c
 19848  0182D8  0EFF               	movlw	255
 19849  0182DA  22DA               	addwfc	fsr2h,f,c
 19850  0182DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 19851  0182E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19852  0182E8                     	if	0	;tblptru may be non-zero
 19853  0182E8                     	endif
 19854  0182E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19855  0182E8  0E00               	movlw	low (__mediumconst shr (0+16))
 19856  0182EA  6EF8               	movwf	tblptru,c
 19857  0182EC                     	endif
 19858                           
 19859                           ;stkvar	_cp @ sp[(-4)+0]
 19860  0182EC  0EFC               	movlw	-4
 19861  0182EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 19862  0182F4  0EFD               	movlw	-3
 19863  0182F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 19864  0182FC  0008               	tblrd		*
 19865  0182FE  006F FFD7 FFDF     	movff	tablat,indf2
 19866                           
 19867                           ;stkvar	_s @ sp[(-4)+2]
 19868  018304  0EFE               	movlw	-2
 19869  018306  50E3               	movf	plusw1,w,c
 19870  018308  0F01               	addlw	1
 19871  01830A  6E2A               	movwf	btemp^0,c
 19872  01830C  0EFE               	movlw	-2
 19873  01830E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19874  018314  6A2A               	clrf	btemp^0,c
 19875  018316  0EFF               	movlw	-1
 19876  018318  50E3               	movf	plusw1,w,c
 19877  01831A  202A               	addwfc	btemp^0,w,c
 19878  01831C  6E2A               	movwf	btemp^0,c
 19879  01831E  0EFF               	movlw	-1
 19880  018320  0060  F0AB  FFE3   	movff	btemp,plusw1
 19881                           
 19882                           ;stkvar	_cp @ sp[(-4)+0]
 19883  018326  0EFC               	movlw	-4
 19884  018328  50E3               	movf	plusw1,w,c
 19885  01832A  0F01               	addlw	1
 19886  01832C  6E2A               	movwf	btemp^0,c
 19887  01832E  0EFC               	movlw	-4
 19888  018330  0060  F0AB  FFE3   	movff	btemp,plusw1
 19889  018336  6A2A               	clrf	btemp^0,c
 19890  018338  0EFD               	movlw	-3
 19891  01833A  50E3               	movf	plusw1,w,c
 19892  01833C  202A               	addwfc	btemp^0,w,c
 19893  01833E  6E2A               	movwf	btemp^0,c
 19894  018340  0EFD               	movlw	-3
 19895  018342  0060  F0AB  FFE3   	movff	btemp,plusw1
 19896                           
 19897                           ;stkvar	_s @ sp[(-4)+2]
 19898  018348  50E1               	movf	fsr1l,w,c
 19899  01834A  0FFE               	addlw	-2
 19900  01834C  6ED9               	movwf	fsr2l,c
 19901  01834E  50E2               	movf	fsr1h,w,c
 19902  018350  6EDA               	movwf	fsr2h,c
 19903  018352  0EFF               	movlw	255
 19904  018354  22DA               	addwfc	fsr2h,f,c
 19905  018356  006F FF7B FFF6     	movff	postinc2,tblptrl
 19906  01835C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19907  018362                     	if	0	;tblptru may be non-zero
 19908  018362                     	endif
 19909  018362                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19910  018362  0E00               	movlw	low (__mediumconst shr (0+16))
 19911  018364  6EF8               	movwf	tblptru,c
 19912  018366                     	endif
 19913                           
 19914                           ;stkvar	_cp @ sp[(-4)+0]
 19915  018366  0EFC               	movlw	-4
 19916  018368  006F FF8F FFD9     	movff	plusw1,fsr2l
 19917  01836E  0EFD               	movlw	-3
 19918  018370  006F FF8F FFDA     	movff	plusw1,fsr2h
 19919  018376  0008               	tblrd		*
 19920  018378  006F FFD7 FFDF     	movff	tablat,indf2
 19921                           
 19922                           ;stkvar	_cp @ sp[(-4)+0]
 19923  01837E  0EFC               	movlw	-4
 19924  018380  50E3               	movf	plusw1,w,c
 19925  018382  0F01               	addlw	1
 19926  018384  6E2A               	movwf	btemp^0,c
 19927  018386  0EFC               	movlw	-4
 19928  018388  0060  F0AB  FFE3   	movff	btemp,plusw1
 19929  01838E  6A2A               	clrf	btemp^0,c
 19930  018390  0EFD               	movlw	-3
 19931  018392  50E3               	movf	plusw1,w,c
 19932  018394  202A               	addwfc	btemp^0,w,c
 19933  018396  6E2A               	movwf	btemp^0,c
 19934  018398  0EFD               	movlw	-3
 19935  01839A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19936                           
 19937                           ;stkvar	_cp @ sp[(-4)+0]
 19938  0183A0  0EFC               	movlw	-4
 19939  0183A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 19940  0183A8  0EFD               	movlw	-3
 19941  0183AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 19942  0183B0  0E20               	movlw	32
 19943  0183B2  6EDF               	movwf	indf2,c
 19944                           
 19945                           ;stkvar	_cp @ sp[(-4)+0]
 19946  0183B4  0EFC               	movlw	-4
 19947  0183B6  50E3               	movf	plusw1,w,c
 19948  0183B8  0F01               	addlw	1
 19949  0183BA  6E2A               	movwf	btemp^0,c
 19950  0183BC  0EFC               	movlw	-4
 19951  0183BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19952  0183C4  6A2A               	clrf	btemp^0,c
 19953  0183C6  0EFD               	movlw	-3
 19954  0183C8  50E3               	movf	plusw1,w,c
 19955  0183CA  202A               	addwfc	btemp^0,w,c
 19956  0183CC  6E2A               	movwf	btemp^0,c
 19957  0183CE  0EFD               	movlw	-3
 19958  0183D0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19959                           
 19960                           ;stkvar	_tim @ sp[(-4)+-2]
 19961  0183D6  0EFA               	movlw	-6
 19962  0183D8  006F FF8C  F034    	movff	plusw1,btemp+10
 19963  0183DE  0EFB               	movlw	-5
 19964  0183E0  006F FF8C  F035    	movff	plusw1,btemp+11
 19965  0183E6  0E08               	movlw	8
 19966  0183E8  2434               	addwf	(btemp+10)^0,w,c
 19967  0183EA  6ED9               	movwf	fsr2l,c
 19968  0183EC  0E00               	movlw	0
 19969  0183EE  2035               	addwfc	(btemp+11)^0,w,c
 19970  0183F0  6EDA               	movwf	fsr2h,c
 19971  0183F2  006F FF78  F034    	movff	postinc2,btemp+10
 19972  0183F8  006F FF74  F035    	movff	postdec2,btemp+11
 19973  0183FE  0E03               	movlw	3
 19974  018400  0234               	mulwf	(btemp+10)^0,c
 19975  018402  006F FFCC  F032    	movff	prodl,btemp+8
 19976  018408  006F FFD0  F033    	movff	prodh,btemp+9
 19977  01840E  0235               	mulwf	(btemp+11)^0,c
 19978  018410  50F3               	movf	prodl,w,c
 19979  018412  2633               	addwf	(btemp+9)^0,f,c
 19980  018414  0E76               	movlw	low STR_132
 19981  018416  6E34               	movwf	(btemp+10)^0,c
 19982  018418  0EFA               	movlw	high STR_132
 19983  01841A  6E35               	movwf	(btemp+11)^0,c
 19984  01841C  5032               	movf	(btemp+8)^0,w,c
 19985  01841E  2634               	addwf	(btemp+10)^0,f,c
 19986  018420  5033               	movf	(btemp+9)^0,w,c
 19987  018422  2235               	addwfc	(btemp+11)^0,f,c
 19988                           
 19989                           ;stkvar	_s @ sp[(-4)+2]
 19990  018424  0EFF               	movlw	-1
 19991  018426  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19992  01842C  0EFE               	movlw	-2
 19993  01842E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19994                           
 19995                           ;stkvar	_s @ sp[(-4)+2]
 19996  018434  50E1               	movf	fsr1l,w,c
 19997  018436  0FFE               	addlw	-2
 19998  018438  6ED9               	movwf	fsr2l,c
 19999  01843A  50E2               	movf	fsr1h,w,c
 20000  01843C  6EDA               	movwf	fsr2h,c
 20001  01843E  0EFF               	movlw	255
 20002  018440  22DA               	addwfc	fsr2h,f,c
 20003  018442  006F FF7B FFF6     	movff	postinc2,tblptrl
 20004  018448  006F FF77 FFF7     	movff	postdec2,tblptrh
 20005  01844E                     	if	0	;tblptru may be non-zero
 20006  01844E                     	endif
 20007  01844E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20008  01844E  0E00               	movlw	low (__mediumconst shr (0+16))
 20009  018450  6EF8               	movwf	tblptru,c
 20010  018452                     	endif
 20011                           
 20012                           ;stkvar	_cp @ sp[(-4)+0]
 20013  018452  0EFC               	movlw	-4
 20014  018454  006F FF8F FFD9     	movff	plusw1,fsr2l
 20015  01845A  0EFD               	movlw	-3
 20016  01845C  006F FF8F FFDA     	movff	plusw1,fsr2h
 20017  018462  0008               	tblrd		*
 20018  018464  006F FFD7 FFDF     	movff	tablat,indf2
 20019                           
 20020                           ;stkvar	_s @ sp[(-4)+2]
 20021  01846A  0EFE               	movlw	-2
 20022  01846C  50E3               	movf	plusw1,w,c
 20023  01846E  0F01               	addlw	1
 20024  018470  6E2A               	movwf	btemp^0,c
 20025  018472  0EFE               	movlw	-2
 20026  018474  0060  F0AB  FFE3   	movff	btemp,plusw1
 20027  01847A  6A2A               	clrf	btemp^0,c
 20028  01847C  0EFF               	movlw	-1
 20029  01847E  50E3               	movf	plusw1,w,c
 20030  018480  202A               	addwfc	btemp^0,w,c
 20031  018482  6E2A               	movwf	btemp^0,c
 20032  018484  0EFF               	movlw	-1
 20033  018486  0060  F0AB  FFE3   	movff	btemp,plusw1
 20034                           
 20035                           ;stkvar	_cp @ sp[(-4)+0]
 20036  01848C  0EFC               	movlw	-4
 20037  01848E  50E3               	movf	plusw1,w,c
 20038  018490  0F01               	addlw	1
 20039  018492  6E2A               	movwf	btemp^0,c
 20040  018494  0EFC               	movlw	-4
 20041  018496  0060  F0AB  FFE3   	movff	btemp,plusw1
 20042  01849C  6A2A               	clrf	btemp^0,c
 20043  01849E  0EFD               	movlw	-3
 20044  0184A0  50E3               	movf	plusw1,w,c
 20045  0184A2  202A               	addwfc	btemp^0,w,c
 20046  0184A4  6E2A               	movwf	btemp^0,c
 20047  0184A6  0EFD               	movlw	-3
 20048  0184A8  0060  F0AB  FFE3   	movff	btemp,plusw1
 20049                           
 20050                           ;stkvar	_s @ sp[(-4)+2]
 20051  0184AE  50E1               	movf	fsr1l,w,c
 20052  0184B0  0FFE               	addlw	-2
 20053  0184B2  6ED9               	movwf	fsr2l,c
 20054  0184B4  50E2               	movf	fsr1h,w,c
 20055  0184B6  6EDA               	movwf	fsr2h,c
 20056  0184B8  0EFF               	movlw	255
 20057  0184BA  22DA               	addwfc	fsr2h,f,c
 20058  0184BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20059  0184C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20060  0184C8                     	if	0	;tblptru may be non-zero
 20061  0184C8                     	endif
 20062  0184C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20063  0184C8  0E00               	movlw	low (__mediumconst shr (0+16))
 20064  0184CA  6EF8               	movwf	tblptru,c
 20065  0184CC                     	endif
 20066                           
 20067                           ;stkvar	_cp @ sp[(-4)+0]
 20068  0184CC  0EFC               	movlw	-4
 20069  0184CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 20070  0184D4  0EFD               	movlw	-3
 20071  0184D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 20072  0184DC  0008               	tblrd		*
 20073  0184DE  006F FFD7 FFDF     	movff	tablat,indf2
 20074                           
 20075                           ;stkvar	_s @ sp[(-4)+2]
 20076  0184E4  0EFE               	movlw	-2
 20077  0184E6  50E3               	movf	plusw1,w,c
 20078  0184E8  0F01               	addlw	1
 20079  0184EA  6E2A               	movwf	btemp^0,c
 20080  0184EC  0EFE               	movlw	-2
 20081  0184EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 20082  0184F4  6A2A               	clrf	btemp^0,c
 20083  0184F6  0EFF               	movlw	-1
 20084  0184F8  50E3               	movf	plusw1,w,c
 20085  0184FA  202A               	addwfc	btemp^0,w,c
 20086  0184FC  6E2A               	movwf	btemp^0,c
 20087  0184FE  0EFF               	movlw	-1
 20088  018500  0060  F0AB  FFE3   	movff	btemp,plusw1
 20089                           
 20090                           ;stkvar	_cp @ sp[(-4)+0]
 20091  018506  0EFC               	movlw	-4
 20092  018508  50E3               	movf	plusw1,w,c
 20093  01850A  0F01               	addlw	1
 20094  01850C  6E2A               	movwf	btemp^0,c
 20095  01850E  0EFC               	movlw	-4
 20096  018510  0060  F0AB  FFE3   	movff	btemp,plusw1
 20097  018516  6A2A               	clrf	btemp^0,c
 20098  018518  0EFD               	movlw	-3
 20099  01851A  50E3               	movf	plusw1,w,c
 20100  01851C  202A               	addwfc	btemp^0,w,c
 20101  01851E  6E2A               	movwf	btemp^0,c
 20102  018520  0EFD               	movlw	-3
 20103  018522  0060  F0AB  FFE3   	movff	btemp,plusw1
 20104                           
 20105                           ;stkvar	_s @ sp[(-4)+2]
 20106  018528  50E1               	movf	fsr1l,w,c
 20107  01852A  0FFE               	addlw	-2
 20108  01852C  6ED9               	movwf	fsr2l,c
 20109  01852E  50E2               	movf	fsr1h,w,c
 20110  018530  6EDA               	movwf	fsr2h,c
 20111  018532  0EFF               	movlw	255
 20112  018534  22DA               	addwfc	fsr2h,f,c
 20113  018536  006F FF7B FFF6     	movff	postinc2,tblptrl
 20114  01853C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20115  018542                     	if	0	;tblptru may be non-zero
 20116  018542                     	endif
 20117  018542                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20118  018542  0E00               	movlw	low (__mediumconst shr (0+16))
 20119  018544  6EF8               	movwf	tblptru,c
 20120  018546                     	endif
 20121                           
 20122                           ;stkvar	_cp @ sp[(-4)+0]
 20123  018546  0EFC               	movlw	-4
 20124  018548  006F FF8F FFD9     	movff	plusw1,fsr2l
 20125  01854E  0EFD               	movlw	-3
 20126  018550  006F FF8F FFDA     	movff	plusw1,fsr2h
 20127  018556  0008               	tblrd		*
 20128  018558  006F FFD7 FFDF     	movff	tablat,indf2
 20129  01855E  0E20               	movlw	32
 20130  018560  0103               	movlb	3	; () banked
 20131  018562  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 20132                           
 20133                           ; BSR set to: 3
 20134  018564  0E20               	movlw	32
 20135  018566  6EE6               	movwf	postinc1,c
 20136  018568  0E20               	movlw	32
 20137  01856A  6EE6               	movwf	postinc1,c
 20138                           
 20139                           ;stkvar	_tim @ sp[(-6)+-2]
 20140  01856C  0EF8               	movlw	-8
 20141  01856E  006F FF8C  F034    	movff	plusw1,btemp+10
 20142  018574  0EF9               	movlw	-7
 20143  018576  006F FF8C  F035    	movff	plusw1,btemp+11
 20144  01857C  0E06               	movlw	6
 20145  01857E  2434               	addwf	(btemp+10)^0,w,c
 20146  018580  6ED9               	movwf	fsr2l,c
 20147  018582  0E00               	movlw	0
 20148  018584  2035               	addwfc	(btemp+11)^0,w,c
 20149  018586  6EDA               	movwf	fsr2h,c
 20150  018588  50DF               	movf	indf2,w,c
 20151  01858A  6EE6               	movwf	postinc1,c
 20152  01858C  0ECE               	movlw	low (asctime@buf+10)
 20153  01858E  6EE6               	movwf	postinc1,c
 20154  018590  0E03               	movlw	high (asctime@buf+10)
 20155  018592  6EE6               	movwf	postinc1,c
 20156  018594  EC20  F0FB         	call	_put2d	;wreg free
 20157  018598  0E3A               	movlw	58
 20158  01859A  6EE6               	movwf	postinc1,c
 20159  01859C  0E30               	movlw	48
 20160  01859E  6EE6               	movwf	postinc1,c
 20161                           
 20162                           ;stkvar	_tim @ sp[(-6)+-2]
 20163  0185A0  0EF8               	movlw	-8
 20164  0185A2  006F FF8C  F034    	movff	plusw1,btemp+10
 20165  0185A8  0EF9               	movlw	-7
 20166  0185AA  006F FF8C  F035    	movff	plusw1,btemp+11
 20167  0185B0  0E04               	movlw	4
 20168  0185B2  2434               	addwf	(btemp+10)^0,w,c
 20169  0185B4  6ED9               	movwf	fsr2l,c
 20170  0185B6  0E00               	movlw	0
 20171  0185B8  2035               	addwfc	(btemp+11)^0,w,c
 20172  0185BA  6EDA               	movwf	fsr2h,c
 20173  0185BC  50DF               	movf	indf2,w,c
 20174  0185BE  6EE6               	movwf	postinc1,c
 20175  0185C0  0ED1               	movlw	low (asctime@buf+13)
 20176  0185C2  6EE6               	movwf	postinc1,c
 20177  0185C4  0E03               	movlw	high (asctime@buf+13)
 20178  0185C6  6EE6               	movwf	postinc1,c
 20179  0185C8  EC20  F0FB         	call	_put2d	;wreg free
 20180  0185CC  0E3A               	movlw	58
 20181  0185CE  6EE6               	movwf	postinc1,c
 20182  0185D0  0E30               	movlw	48
 20183  0185D2  6EE6               	movwf	postinc1,c
 20184                           
 20185                           ;stkvar	_tim @ sp[(-6)+-2]
 20186  0185D4  0EF8               	movlw	-8
 20187  0185D6  006F FF8C  F034    	movff	plusw1,btemp+10
 20188  0185DC  0EF9               	movlw	-7
 20189  0185DE  006F FF8C  F035    	movff	plusw1,btemp+11
 20190  0185E4  0E02               	movlw	2
 20191  0185E6  2434               	addwf	(btemp+10)^0,w,c
 20192  0185E8  6ED9               	movwf	fsr2l,c
 20193  0185EA  0E00               	movlw	0
 20194  0185EC  2035               	addwfc	(btemp+11)^0,w,c
 20195  0185EE  6EDA               	movwf	fsr2h,c
 20196  0185F0  50DF               	movf	indf2,w,c
 20197  0185F2  6EE6               	movwf	postinc1,c
 20198  0185F4  0ED4               	movlw	low (asctime@buf+16)
 20199  0185F6  6EE6               	movwf	postinc1,c
 20200  0185F8  0E03               	movlw	high (asctime@buf+16)
 20201  0185FA  6EE6               	movwf	postinc1,c
 20202  0185FC  EC20  F0FB         	call	_put2d	;wreg free
 20203  018600  0E20               	movlw	32
 20204  018602  6EE6               	movwf	postinc1,c
 20205  018604  0E30               	movlw	48
 20206  018606  6EE6               	movwf	postinc1,c
 20207                           
 20208                           ;stkvar	_tim @ sp[(-6)+-2]
 20209  018608  0EF8               	movlw	-8
 20210  01860A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20211  018610  0EF9               	movlw	-7
 20212  018612  006F FF8F FFDA     	movff	plusw1,fsr2h
 20213  018618  50DF               	movf	indf2,w,c
 20214  01861A  6EE6               	movwf	postinc1,c
 20215  01861C  0ED7               	movlw	low (asctime@buf+19)
 20216  01861E  6EE6               	movwf	postinc1,c
 20217  018620  0E03               	movlw	high (asctime@buf+19)
 20218  018622  6EE6               	movwf	postinc1,c
 20219  018624  EC20  F0FB         	call	_put2d	;wreg free
 20220  018628  0E00               	movlw	0
 20221  01862A  6EE6               	movwf	postinc1,c
 20222  01862C  0E20               	movlw	32
 20223  01862E  6EE6               	movwf	postinc1,c
 20224  018630  0E64               	movlw	100
 20225  018632  6EE6               	movwf	postinc1,c
 20226  018634  0E00               	movlw	0
 20227  018636  6EE6               	movwf	postinc1,c
 20228                           
 20229                           ;stkvar	_tim @ sp[(-8)+-2]
 20230  018638  0EF6               	movlw	-10
 20231  01863A  006F FF8C  F034    	movff	plusw1,btemp+10
 20232  018640  0EF7               	movlw	-9
 20233  018642  006F FF8C  F035    	movff	plusw1,btemp+11
 20234  018648  0E0A               	movlw	10
 20235  01864A  2434               	addwf	(btemp+10)^0,w,c
 20236  01864C  6ED9               	movwf	fsr2l,c
 20237  01864E  0E00               	movlw	0
 20238  018650  2035               	addwfc	(btemp+11)^0,w,c
 20239  018652  6EDA               	movwf	fsr2h,c
 20240  018654  006F FF78  F034    	movff	postinc2,btemp+10
 20241  01865A  006F FF74  F035    	movff	postdec2,btemp+11
 20242  018660  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20243  018666  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20244  01866C  EC0A  F0F8         	call	___awdiv	;wreg free
 20245  018670  502A               	movf	btemp^0,w,c
 20246  018672  0F13               	addlw	19
 20247  018674  6EE6               	movwf	postinc1,c
 20248  018676  0EDA               	movlw	low (asctime@buf+22)
 20249  018678  6EE6               	movwf	postinc1,c
 20250  01867A  0E03               	movlw	high (asctime@buf+22)
 20251  01867C  6EE6               	movwf	postinc1,c
 20252  01867E  EC20  F0FB         	call	_put2d	;wreg free
 20253  018682  0E0A               	movlw	10
 20254  018684  6EE6               	movwf	postinc1,c
 20255  018686  0E30               	movlw	48
 20256  018688  6EE6               	movwf	postinc1,c
 20257  01868A  0E64               	movlw	100
 20258  01868C  6EE6               	movwf	postinc1,c
 20259  01868E  0E00               	movlw	0
 20260  018690  6EE6               	movwf	postinc1,c
 20261                           
 20262                           ;stkvar	_tim @ sp[(-8)+-2]
 20263  018692  0EF6               	movlw	-10
 20264  018694  006F FF8C  F034    	movff	plusw1,btemp+10
 20265  01869A  0EF7               	movlw	-9
 20266  01869C  006F FF8C  F035    	movff	plusw1,btemp+11
 20267  0186A2  0E0A               	movlw	10
 20268  0186A4  2434               	addwf	(btemp+10)^0,w,c
 20269  0186A6  6ED9               	movwf	fsr2l,c
 20270  0186A8  0E00               	movlw	0
 20271  0186AA  2035               	addwfc	(btemp+11)^0,w,c
 20272  0186AC  6EDA               	movwf	fsr2h,c
 20273  0186AE  006F FF78  F034    	movff	postinc2,btemp+10
 20274  0186B4  006F FF74  F035    	movff	postdec2,btemp+11
 20275  0186BA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20276  0186C0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20277  0186C6  EC39  F0FC         	call	___awmod	;wreg free
 20278  0186CA  502A               	movf	btemp^0,w,c
 20279  0186CC  6EE6               	movwf	postinc1,c
 20280  0186CE  0EDC               	movlw	low (asctime@buf+24)
 20281  0186D0  6EE6               	movwf	postinc1,c
 20282  0186D2  0E03               	movlw	high (asctime@buf+24)
 20283  0186D4  6EE6               	movwf	postinc1,c
 20284  0186D6  EC20  F0FB         	call	_put2d	;wreg free
 20285  0186DA  0EC4               	movlw	low asctime@buf
 20286  0186DC  6E2A               	movwf	btemp^0,c
 20287  0186DE  0E03               	movlw	high asctime@buf
 20288  0186E0  6E2B               	movwf	(btemp+1)^0,c
 20289                           
 20290                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20291  0186E2  0EFA               	movlw	250
 20292  0186E4  26E1               	addwf	fsr1l,f,c
 20293  0186E6  0EFF               	movlw	255
 20294  0186E8  22E2               	addwfc	fsr1h,f,c
 20295  0186EA  0012               	return		;funcret
 20296  0186EC                     __end_of_asctime:
 20297                           	opt callstack 0
 20298                           
 20299 ;; *************** function _put2d *****************
 20300 ;; Defined at:
 20301 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 20302 ;; Parameters:    Size  Location     Type
 20303 ;;  cp              2  [STACK] PTR unsigned char 
 20304 ;;		 -> asctime@buf(27), 
 20305 ;;  i               1  [STACK] unsigned char 
 20306 ;;  cl              1  [STACK] unsigned char 
 20307 ;;  ct              1  [STACK] unsigned char 
 20308 ;; Auto vars:     Size  Location     Type
 20309 ;;		None
 20310 ;; Return value:  Size  Location     Type
 20311 ;;                  1  [STACK] void 
 20312 ;; Registers used:
 20313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20314 ;; Tracked objects:
 20315 ;;		On entry : 0/3
 20316 ;;		On exit  : 0/0
 20317 ;;		Unchanged: 0/0
 20318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20323 ;;Total ram usage:        0 bytes
 20324 ;; Hardware stack levels used:    1
 20325 ;; Hardware stack levels required when called:   16
 20326 ;; This function calls:
 20327 ;;		___awdiv
 20328 ;;		___lbmod
 20329 ;; This function is called by:
 20330 ;;		_asctime
 20331 ;; This function uses a reentrant model
 20332 ;;
 20333                           
 20334                           	psect	text56
 20335  01F640                     __ptext56:
 20336                           	opt callstack 0
 20337  01F640                     _put2d:
 20338                           	opt callstack 12
 20339                           
 20340                           ;stkvar	_ct @ sp[(0)+-5]
 20341                           ;stkvar	_cp @ sp[(0)+-2]
 20342                           
 20343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20344                           ;incstack = 0
 20345  01F640  0EFE               	movlw	-2
 20346  01F642  006F FF8F FFD9     	movff	plusw1,fsr2l
 20347  01F648  0EFF               	movlw	-1
 20348  01F64A  006F FF8F FFDA     	movff	plusw1,fsr2h
 20349  01F650  0EFB               	movlw	-5
 20350  01F652  006F FF8F FFDF     	movff	plusw1,indf2
 20351  01F658  0E0A               	movlw	10
 20352  01F65A  6EE6               	movwf	postinc1,c
 20353                           
 20354                           ;stkvar	_i @ sp[(-1)+-3]
 20355  01F65C  0EFC               	movlw	-4
 20356  01F65E  50E3               	movf	plusw1,w,c
 20357  01F660  6EE6               	movwf	postinc1,c
 20358  01F662  EC4E  F006         	call	___lbmod	;wreg free
 20359  01F666  0E30               	movlw	48
 20360  01F668  262A               	addwf	btemp^0,f,c
 20361                           
 20362                           ;stkvar	_cp @ sp[(0)+-2]
 20363  01F66A  0EFE               	movlw	-2
 20364  01F66C  006F FF8C  F02B    	movff	plusw1,btemp+1
 20365  01F672  0E01               	movlw	1
 20366  01F674  5E2B               	subwf	(btemp+1)^0,f,c
 20367  01F676  0EFE               	movlw	-2
 20368  01F678  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20369  01F67E  0EFF               	movlw	-1
 20370  01F680  006F FF8C  F02B    	movff	plusw1,btemp+1
 20371  01F686  0E00               	movlw	0
 20372  01F688  5A2B               	subwfb	(btemp+1)^0,f,c
 20373  01F68A  0EFF               	movlw	-1
 20374  01F68C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20375  01F692  0EFE               	movlw	-2
 20376  01F694  006F FF8F FFD9     	movff	plusw1,fsr2l
 20377  01F69A  0EFF               	movlw	-1
 20378  01F69C  006F FF8F FFDA     	movff	plusw1,fsr2h
 20379  01F6A2  0060  F0AB  FFDF   	movff	btemp,indf2
 20380  01F6A8  0E0A               	movlw	10
 20381  01F6AA  6EE6               	movwf	postinc1,c
 20382  01F6AC  0E00               	movlw	0
 20383  01F6AE  6EE6               	movwf	postinc1,c
 20384                           
 20385                           ;stkvar	_i @ sp[(-2)+-3]
 20386  01F6B0  0EFB               	movlw	-5
 20387  01F6B2  50E3               	movf	plusw1,w,c
 20388  01F6B4  6EE6               	movwf	postinc1,c
 20389  01F6B6  0E00               	movlw	0
 20390  01F6B8  6EE6               	movwf	postinc1,c
 20391  01F6BA  EC0A  F0F8         	call	___awdiv	;wreg free
 20392                           
 20393                           ;stkvar	_i @ sp[(0)+-3]
 20394  01F6BE  0EFD               	movlw	-3
 20395  01F6C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 20396  01F6C6  0EFD               	movlw	-3
 20397  01F6C8  50E3               	movf	plusw1,w,c
 20398  01F6CA  B4D8               	btfsc	status,2,c
 20399  01F6CC  D021               	goto	l16876
 20400                           
 20401                           ;stkvar	_cp @ sp[(0)+-2]
 20402  01F6CE  0EFE               	movlw	-2
 20403  01F6D0  006F FF8C  F02A    	movff	plusw1,btemp
 20404  01F6D6  0E01               	movlw	1
 20405  01F6D8  5E2A               	subwf	btemp^0,f,c
 20406  01F6DA  0EFE               	movlw	-2
 20407  01F6DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 20408  01F6E2  0EFF               	movlw	-1
 20409  01F6E4  006F FF8C  F02A    	movff	plusw1,btemp
 20410  01F6EA  0E00               	movlw	0
 20411  01F6EC  5A2A               	subwfb	btemp^0,f,c
 20412  01F6EE  0EFF               	movlw	-1
 20413  01F6F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 20414  01F6F6  0EFE               	movlw	-2
 20415  01F6F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 20416  01F6FE  0EFF               	movlw	-1
 20417  01F700  006F FF8F FFDA     	movff	plusw1,fsr2h
 20418                           
 20419                           ;stkvar	_i @ sp[(0)+-3]
 20420  01F706  0EFD               	movlw	-3
 20421  01F708  50E3               	movf	plusw1,w,c
 20422  01F70A  0F30               	addlw	48
 20423  01F70C  6EDF               	movwf	indf2,c
 20424  01F70E  D020               	goto	l3418
 20425  01F710                     l16876:
 20426                           
 20427                           ;stkvar	_cl @ sp[(0)+-4]
 20428                           ;stkvar	_cp @ sp[(0)+-2]
 20429  01F710  0EFE               	movlw	-2
 20430  01F712  006F FF8C  F02A    	movff	plusw1,btemp
 20431  01F718  0E01               	movlw	1
 20432  01F71A  5E2A               	subwf	btemp^0,f,c
 20433  01F71C  0EFE               	movlw	-2
 20434  01F71E  0060  F0AB  FFE3   	movff	btemp,plusw1
 20435  01F724  0EFF               	movlw	-1
 20436  01F726  006F FF8C  F02A    	movff	plusw1,btemp
 20437  01F72C  0E00               	movlw	0
 20438  01F72E  5A2A               	subwfb	btemp^0,f,c
 20439  01F730  0EFF               	movlw	-1
 20440  01F732  0060  F0AB  FFE3   	movff	btemp,plusw1
 20441  01F738  0EFE               	movlw	-2
 20442  01F73A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20443  01F740  0EFF               	movlw	-1
 20444  01F742  006F FF8F FFDA     	movff	plusw1,fsr2h
 20445  01F748  0EFC               	movlw	-4
 20446  01F74A  006F FF8F FFDF     	movff	plusw1,indf2
 20447  01F750                     l3418:
 20448                           
 20449                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20450  01F750  0EFB               	movlw	251
 20451  01F752  26E1               	addwf	fsr1l,f,c
 20452  01F754  0EFF               	movlw	255
 20453  01F756  22E2               	addwfc	fsr1h,f,c
 20454  01F758  0012               	return		;funcret
 20455  01F75A                     __end_of_put2d:
 20456                           	opt callstack 0
 20457                           
 20458 ;; *************** function ___lbmod *****************
 20459 ;; Defined at:
 20460 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20461 ;; Parameters:    Size  Location     Type
 20462 ;;  dividend        1  [STACK] unsigned char 
 20463 ;;  divisor         1  [STACK] unsigned char 
 20464 ;; Auto vars:     Size  Location     Type
 20465 ;;  rem             1  [STACK] unsigned char 
 20466 ;;  counter         1  [STACK] unsigned char 
 20467 ;; Return value:  Size  Location     Type
 20468 ;;                  1  [STACK] unsigned char 
 20469 ;; Registers used:
 20470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20471 ;; Tracked objects:
 20472 ;;		On entry : 0/3
 20473 ;;		On exit  : 0/0
 20474 ;;		Unchanged: 0/0
 20475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20480 ;;Total ram usage:        0 bytes
 20481 ;; Hardware stack levels used:    1
 20482 ;; Hardware stack levels required when called:   15
 20483 ;; This function calls:
 20484 ;;		Nothing
 20485 ;; This function is called by:
 20486 ;;		_put2d
 20487 ;; This function uses a reentrant model
 20488 ;;
 20489                           
 20490                           	psect	text57
 20491  000C9C                     __ptext57:
 20492                           	opt callstack 0
 20493  000C9C                     ___lbmod:
 20494                           	opt callstack 0
 20495                           
 20496                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20497  000C9C  52E6               	movf	postinc1,f,c
 20498  000C9E  52E6               	movf	postinc1,f,c
 20499                           
 20500                           ;stkvar	_counter @ sp[(-2)+1]
 20501                           
 20502                           ;incstack = 0
 20503  000CA0  0EFF               	movlw	-1
 20504  000CA2  6AE3               	clrf	plusw1,c
 20505  000CA4  86E3               	bsf	plusw1,3,c
 20506                           
 20507                           ;stkvar	_rem @ sp[(-2)+0]
 20508  000CA6  0EFE               	movlw	-2
 20509  000CA8  6AE3               	clrf	plusw1,c
 20510  000CAA                     l16616:
 20511                           
 20512                           ;stkvar	_dividend @ sp[(-2)+-1]
 20513  000CAA  0EFD               	movlw	-3
 20514  000CAC  006F FF8C  F035    	movff	plusw1,btemp+11
 20515                           
 20516                           ;stkvar	_rem @ sp[(-2)+0]
 20517  000CB2  0EFE               	movlw	-2
 20518  000CB4  006F FF8C  F034    	movff	plusw1,btemp+10
 20519  000CBA  90D8               	bcf	status,0,c
 20520  000CBC  3435               	rlcf	(btemp+11)^0,w,c
 20521  000CBE  3434               	rlcf	(btemp+10)^0,w,c
 20522  000CC0  6E35               	movwf	(btemp+11)^0,c
 20523                           
 20524                           ;stkvar	_rem @ sp[(-2)+0]
 20525  000CC2  0EFE               	movlw	-2
 20526  000CC4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20527                           
 20528                           ;stkvar	_dividend @ sp[(-2)+-1]
 20529  000CCA  50E1               	movf	fsr1l,w,c
 20530  000CCC  0FFD               	addlw	-3
 20531  000CCE  6ED9               	movwf	fsr2l,c
 20532  000CD0  50E2               	movf	fsr1h,w,c
 20533  000CD2  6EDA               	movwf	fsr2h,c
 20534  000CD4  0EFF               	movlw	255
 20535  000CD6  22DA               	addwfc	fsr2h,f,c
 20536  000CD8  90D8               	bcf	status,0,c
 20537  000CDA  36DF               	rlcf	indf2,f,c
 20538                           
 20539                           ;stkvar	_divisor @ sp[(-2)+-2]
 20540                           ;stkvar	_rem @ sp[(-2)+0]
 20541  000CDC  50E1               	movf	fsr1l,w,c
 20542  000CDE  0FFE               	addlw	-2
 20543  000CE0  6ED9               	movwf	fsr2l,c
 20544  000CE2  50E2               	movf	fsr1h,w,c
 20545  000CE4  6EDA               	movwf	fsr2h,c
 20546  000CE6  0EFF               	movlw	255
 20547  000CE8  22DA               	addwfc	fsr2h,f,c
 20548  000CEA  0EFC               	movlw	-4
 20549  000CEC  50E3               	movf	plusw1,w,c
 20550  000CEE  5CDE               	subwf	postinc2,w,c
 20551  000CF0  A0D8               	btfss	status,0,c
 20552  000CF2  D00D               	goto	l16624
 20553                           
 20554                           ;stkvar	_divisor @ sp[(-2)+-2]
 20555  000CF4  0EFC               	movlw	-4
 20556  000CF6  006F FF8C  F035    	movff	plusw1,btemp+11
 20557                           
 20558                           ;stkvar	_rem @ sp[(-2)+0]
 20559  000CFC  50E1               	movf	fsr1l,w,c
 20560  000CFE  0FFE               	addlw	-2
 20561  000D00  6ED9               	movwf	fsr2l,c
 20562  000D02  50E2               	movf	fsr1h,w,c
 20563  000D04  6EDA               	movwf	fsr2h,c
 20564  000D06  0EFF               	movlw	255
 20565  000D08  22DA               	addwfc	fsr2h,f,c
 20566  000D0A  5035               	movf	(btemp+11)^0,w,c
 20567  000D0C  5EDF               	subwf	indf2,f,c
 20568  000D0E                     l16624:
 20569                           
 20570                           ;stkvar	_counter @ sp[(-2)+1]
 20571  000D0E  0EFF               	movlw	-1
 20572  000D10  50E3               	movf	plusw1,w,c
 20573  000D12  6E2A               	movwf	btemp^0,c
 20574  000D14  0E01               	movlw	1
 20575  000D16  5E2A               	subwf	btemp^0,f,c
 20576  000D18  0EFF               	movlw	-1
 20577  000D1A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20578  000D20  A4D8               	btfss	status,2,c
 20579  000D22  D7C3               	goto	l16616
 20580                           
 20581                           ;stkvar	_rem @ sp[(-2)+0]
 20582  000D24  0EFE               	movlw	-2
 20583  000D26  006F FF8C  F02A    	movff	plusw1,btemp
 20584                           
 20585                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20586  000D2C  52E5               	movf	postdec1,f,c
 20587  000D2E  52E5               	movf	postdec1,f,c
 20588  000D30  52E5               	movf	postdec1,f,c
 20589  000D32  52E5               	movf	postdec1,f,c
 20590  000D34  0012               	return		;funcret
 20591  000D36                     __end_of___lbmod:
 20592                           	opt callstack 0
 20593                           
 20594 ;; *************** function _current_sensor_cal *****************
 20595 ;; Defined at:
 20596 ;;		line 516 in file "main.c"
 20597 ;; Parameters:    Size  Location     Type
 20598 ;;		None
 20599 ;; Auto vars:     Size  Location     Type
 20600 ;;  cp              4  [STACK] unsigned long 
 20601 ;;  cb              4  [STACK] unsigned long 
 20602 ;;  x               1  [STACK] unsigned char 
 20603 ;; Return value:  Size  Location     Type
 20604 ;;                  1  [STACK] _Bool 
 20605 ;; Registers used:
 20606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20607 ;; Tracked objects:
 20608 ;;		On entry : 0/2
 20609 ;;		On exit  : 0/0
 20610 ;;		Unchanged: 0/0
 20611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20616 ;;Total ram usage:        0 bytes
 20617 ;; Hardware stack levels used:    1
 20618 ;; Hardware stack levels required when called:   27
 20619 ;; This function calls:
 20620 ;;		_WaitMs
 20621 ;;		_cal_current_zero
 20622 ;;		_clear_adc_scan
 20623 ;;		_get_raw_result
 20624 ;;		_get_switch
 20625 ;;		_get_vterm_ptr
 20626 ;;		_spinners
 20627 ;;		_sprintf
 20628 ;;		_start_adc_scan
 20629 ;;		_update_lcd
 20630 ;;		_write_cal_data
 20631 ;; This function is called by:
 20632 ;;		_main
 20633 ;; This function uses a reentrant model
 20634 ;;
 20635                           
 20636                           	psect	text58
 20637  019028                     __ptext58:
 20638                           	opt callstack 0
 20639  019028                     _current_sensor_cal:
 20640                           	opt callstack 0
 20641                           
 20642                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20643  019028  0E09               	movlw	9
 20644  01902A  26E1               	addwf	fsr1l,f,c
 20645  01902C  0E00               	movlw	0
 20646  01902E  22E2               	addwfc	fsr1h,f,c
 20647                           
 20648                           ;main.c: 518:  uint8_t x = 0;
 20649                           ;stkvar	_x @ sp[(-9)+8]
 20650                           
 20651                           ;incstack = 0
 20652  019030  0EFF               	movlw	-1
 20653  019032  6AE3               	clrf	plusw1,c
 20654                           
 20655                           ;main.c: 519:  uint32_t cb = 0, cp = 0;
 20656                           ;stkvar	_cb @ sp[(-9)+4]
 20657  019034  0EFB               	movlw	-5
 20658  019036  6AE3               	clrf	plusw1,c
 20659  019038  0EFC               	movlw	-4
 20660  01903A  6AE3               	clrf	plusw1,c
 20661  01903C  0EFD               	movlw	-3
 20662  01903E  6AE3               	clrf	plusw1,c
 20663  019040  0EFE               	movlw	-2
 20664  019042  6AE3               	clrf	plusw1,c
 20665                           
 20666                           ;stkvar	_cp @ sp[(-9)+0]
 20667  019044  0EF7               	movlw	-9
 20668  019046  6AE3               	clrf	plusw1,c
 20669  019048  0EF8               	movlw	-8
 20670  01904A  6AE3               	clrf	plusw1,c
 20671  01904C  0EF9               	movlw	-7
 20672  01904E  6AE3               	clrf	plusw1,c
 20673  019050  0EFA               	movlw	-6
 20674  019052  6AE3               	clrf	plusw1,c
 20675                           
 20676                           ;main.c: 521:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20677  019054  0E03               	movlw	low STR_56
 20678  019056  6EE6               	movwf	postinc1,c
 20679  019058  0EFE               	movlw	high STR_56
 20680  01905A  6EE6               	movwf	postinc1,c
 20681  01905C  0E00               	movlw	0
 20682  01905E  6EE6               	movwf	postinc1,c
 20683  019060  0E00               	movlw	0
 20684  019062  6EE6               	movwf	postinc1,c
 20685  019064  EC81  F011         	call	_get_vterm_ptr	;wreg free
 20686  019068  0060  F0AB  FFE6   	movff	btemp,postinc1
 20687  01906E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20688  019074  0E04               	movlw	4
 20689  019076  6EE6               	movwf	postinc1,c
 20690  019078  EC4F  F0FD         	call	_sprintf	;wreg free
 20691                           
 20692                           ; BSR set to: 0
 20693                           ;main.c: 522:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 20694  01907C  0ED7               	movlw	low STR_57
 20695  01907E  6EE6               	movwf	postinc1,c
 20696  019080  0EFD               	movlw	high STR_57
 20697  019082  6EE6               	movwf	postinc1,c
 20698  019084  0E00               	movlw	0
 20699  019086  6EE6               	movwf	postinc1,c
 20700  019088  0E01               	movlw	1
 20701  01908A  6EE6               	movwf	postinc1,c
 20702  01908C  EC81  F011         	call	_get_vterm_ptr	;wreg free
 20703  019090  0060  F0AB  FFE6   	movff	btemp,postinc1
 20704  019096  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20705  01909C  0E04               	movlw	4
 20706  01909E  6EE6               	movwf	postinc1,c
 20707  0190A0  EC4F  F0FD         	call	_sprintf	;wreg free
 20708                           
 20709                           ; BSR set to: 0
 20710                           ;main.c: 523:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 20711  0190A4  0EC1               	movlw	low STR_58
 20712  0190A6  6EE6               	movwf	postinc1,c
 20713  0190A8  0EFD               	movlw	high STR_58
 20714  0190AA  6EE6               	movwf	postinc1,c
 20715  0190AC  0E00               	movlw	0
 20716  0190AE  6EE6               	movwf	postinc1,c
 20717  0190B0  0E02               	movlw	2
 20718  0190B2  6EE6               	movwf	postinc1,c
 20719  0190B4  EC81  F011         	call	_get_vterm_ptr	;wreg free
 20720  0190B8  0060  F0AB  FFE6   	movff	btemp,postinc1
 20721  0190BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20722  0190C4  0E04               	movlw	4
 20723  0190C6  6EE6               	movwf	postinc1,c
 20724  0190C8  EC4F  F0FD         	call	_sprintf	;wreg free
 20725                           
 20726                           ; BSR set to: 0
 20727                           ;main.c: 524:  update_lcd(0);
 20728  0190CC  0E00               	movlw	0
 20729  0190CE  6EE6               	movwf	postinc1,c
 20730  0190D0  EC01  F0F6         	call	_update_lcd	;wreg free
 20731                           
 20732                           ;main.c: 525:  WaitMs(2000);
 20733  0190D4  0ED0               	movlw	208
 20734  0190D6  6EE6               	movwf	postinc1,c
 20735  0190D8  0E07               	movlw	7
 20736  0190DA  6EE6               	movwf	postinc1,c
 20737  0190DC  EC85  F010         	call	_WaitMs	;wreg free
 20738  0190E0                     l17204:
 20739                           
 20740                           ;main.c: 527:   if (++x > 64)
 20741                           ;stkvar	_x @ sp[(-9)+8]
 20742  0190E0  0EFF               	movlw	-1
 20743  0190E2  2AE3               	incf	plusw1,f,c
 20744  0190E4  0EFF               	movlw	-1
 20745  0190E6  006F FF8C  F02A    	movff	plusw1,btemp
 20746  0190EC  0E40               	movlw	64
 20747  0190EE  642A               	cpfsgt	btemp^0,c
 20748  0190F0  D001               	goto	l17208
 20749  0190F2  D1CF               	goto	l1520
 20750  0190F4                     l17208:
 20751                           
 20752                           ;main.c: 529:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 20753  0190F4  0E00               	movlw	0
 20754  0190F6  6EE6               	movwf	postinc1,c
 20755  0190F8  0E04               	movlw	4
 20756  0190FA  6EE6               	movwf	postinc1,c
 20757  0190FC  ECCB  F0FE         	call	_spinners	;wreg free
 20758  019100  502A               	movf	btemp^0,w,c
 20759  019102  6EE6               	movwf	postinc1,c
 20760  019104  0E00               	movlw	0
 20761  019106  6EE6               	movwf	postinc1,c
 20762  019108  0E47               	movlw	low STR_59
 20763  01910A  6EE6               	movwf	postinc1,c
 20764  01910C  0EFF               	movlw	high STR_59
 20765  01910E  6EE6               	movwf	postinc1,c
 20766  019110  0E00               	movlw	0
 20767  019112  6EE6               	movwf	postinc1,c
 20768  019114  0E02               	movlw	2
 20769  019116  6EE6               	movwf	postinc1,c
 20770  019118  EC81  F011         	call	_get_vterm_ptr	;wreg free
 20771  01911C  0060  F0AB  FFE6   	movff	btemp,postinc1
 20772  019122  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20773  019128  0E06               	movlw	6
 20774  01912A  6EE6               	movwf	postinc1,c
 20775  01912C  EC4F  F0FD         	call	_sprintf	;wreg free
 20776                           
 20777                           ;main.c: 530:   update_lcd(0);
 20778  019130  0E00               	movlw	0
 20779  019132  6EE6               	movwf	postinc1,c
 20780  019134  EC01  F0F6         	call	_update_lcd	;wreg free
 20781                           
 20782                           ;main.c: 531:   WaitMs(100);
 20783  019138  0E64               	movlw	100
 20784  01913A  6EE6               	movwf	postinc1,c
 20785  01913C  0E00               	movlw	0
 20786  01913E  6EE6               	movwf	postinc1,c
 20787  019140  EC85  F010         	call	_WaitMs	;wreg free
 20788                           
 20789                           ;main.c: 532:  } while (get_switch(SCALIB));
 20790  019144  0E04               	movlw	4
 20791  019146  6EE6               	movwf	postinc1,c
 20792  019148  EC98  F011         	call	_get_switch	;wreg free
 20793  01914C  502A               	movf	btemp^0,w,c
 20794  01914E  A4D8               	btfss	status,2,c
 20795  019150  D7C7               	goto	l17204
 20796                           
 20797                           ;main.c: 534:  x = 0;
 20798                           ;stkvar	_x @ sp[(-9)+8]
 20799  019152  0EFF               	movlw	-1
 20800  019154  6AE3               	clrf	plusw1,c
 20801  019156                     l17216:
 20802                           
 20803                           ;main.c: 536:   cb += get_raw_result(C_BATT);
 20804  019156  0E00               	movlw	0
 20805  019158  6EE6               	movwf	postinc1,c
 20806  01915A  EC88  F013         	call	_get_raw_result	;wreg free
 20807                           
 20808                           ;stkvar	_cb @ sp[(-9)+4]
 20809  01915E  50E1               	movf	fsr1l,w,c
 20810  019160  0FFB               	addlw	-5
 20811  019162  6ED9               	movwf	fsr2l,c
 20812  019164  50E2               	movf	fsr1h,w,c
 20813  019166  6EDA               	movwf	fsr2h,c
 20814  019168  0EFF               	movlw	255
 20815  01916A  22DA               	addwfc	fsr2h,f,c
 20816  01916C  502A               	movf	btemp^0,w,c
 20817  01916E  26DE               	addwf	postinc2,f,c
 20818  019170  502B               	movf	(btemp+1)^0,w,c
 20819  019172  22DE               	addwfc	postinc2,f,c
 20820  019174  0E00               	movlw	0
 20821  019176  22DE               	addwfc	postinc2,f,c
 20822  019178  22DE               	addwfc	postinc2,f,c
 20823                           
 20824                           ;main.c: 537:   cp += get_raw_result(C_PV);
 20825  01917A  0E01               	movlw	1
 20826  01917C  6EE6               	movwf	postinc1,c
 20827  01917E  EC88  F013         	call	_get_raw_result	;wreg free
 20828                           
 20829                           ;stkvar	_cp @ sp[(-9)+0]
 20830  019182  50E1               	movf	fsr1l,w,c
 20831  019184  0FF7               	addlw	-9
 20832  019186  6ED9               	movwf	fsr2l,c
 20833  019188  50E2               	movf	fsr1h,w,c
 20834  01918A  6EDA               	movwf	fsr2h,c
 20835  01918C  0EFF               	movlw	255
 20836  01918E  22DA               	addwfc	fsr2h,f,c
 20837  019190  502A               	movf	btemp^0,w,c
 20838  019192  26DE               	addwf	postinc2,f,c
 20839  019194  502B               	movf	(btemp+1)^0,w,c
 20840  019196  22DE               	addwfc	postinc2,f,c
 20841  019198  0E00               	movlw	0
 20842  01919A  22DE               	addwfc	postinc2,f,c
 20843  01919C  22DE               	addwfc	postinc2,f,c
 20844                           
 20845                           ;main.c: 538:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 20846  01919E  0E45               	movlw	low STR_60
 20847  0191A0  6EE6               	movwf	postinc1,c
 20848  0191A2  0EFE               	movlw	high STR_60
 20849  0191A4  6EE6               	movwf	postinc1,c
 20850  0191A6  0E00               	movlw	0
 20851  0191A8  6EE6               	movwf	postinc1,c
 20852  0191AA  0E00               	movlw	0
 20853  0191AC  6EE6               	movwf	postinc1,c
 20854  0191AE  EC81  F011         	call	_get_vterm_ptr	;wreg free
 20855  0191B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20856  0191B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20857  0191BE  0E04               	movlw	4
 20858  0191C0  6EE6               	movwf	postinc1,c
 20859  0191C2  EC4F  F0FD         	call	_sprintf	;wreg free
 20860                           
 20861                           ; BSR set to: 0
 20862                           ;main.c: 539:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20863  0191C6  0E01               	movlw	1
 20864  0191C8  6EE6               	movwf	postinc1,c
 20865  0191CA  EC88  F013         	call	_get_raw_result	;wreg free
 20866  0191CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 20867  0191D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20868  0191DA  0E00               	movlw	0
 20869  0191DC  6EE6               	movwf	postinc1,c
 20870  0191DE  EC88  F013         	call	_get_raw_result	;wreg free
 20871  0191E2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20872  0191E8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20873  0191EE  0E3D               	movlw	low STR_61
 20874  0191F0  6EE6               	movwf	postinc1,c
 20875  0191F2  0EFD               	movlw	high STR_61
 20876  0191F4  6EE6               	movwf	postinc1,c
 20877  0191F6  0E00               	movlw	0
 20878  0191F8  6EE6               	movwf	postinc1,c
 20879  0191FA  0E01               	movlw	1
 20880  0191FC  6EE6               	movwf	postinc1,c
 20881  0191FE  EC81  F011         	call	_get_vterm_ptr	;wreg free
 20882  019202  0060  F0AB  FFE6   	movff	btemp,postinc1
 20883  019208  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20884  01920E  0E08               	movlw	8
 20885  019210  6EE6               	movwf	postinc1,c
 20886  019212  EC4F  F0FD         	call	_sprintf	;wreg free
 20887                           
 20888                           ; BSR set to: 0
 20889                           ;main.c: 540:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 20890                           ;stkvar	_x @ sp[(-9)+8]
 20891  019216  0EFF               	movlw	-1
 20892  019218  50E3               	movf	plusw1,w,c
 20893  01921A  6EE6               	movwf	postinc1,c
 20894  01921C  0E00               	movlw	0
 20895  01921E  6EE6               	movwf	postinc1,c
 20896  019220  0E9D               	movlw	low STR_62
 20897  019222  6EE6               	movwf	postinc1,c
 20898  019224  0EFE               	movlw	high STR_62
 20899  019226  6EE6               	movwf	postinc1,c
 20900  019228  0E00               	movlw	0
 20901  01922A  6EE6               	movwf	postinc1,c
 20902  01922C  0E02               	movlw	2
 20903  01922E  6EE6               	movwf	postinc1,c
 20904  019230  EC81  F011         	call	_get_vterm_ptr	;wreg free
 20905  019234  0060  F0AB  FFE6   	movff	btemp,postinc1
 20906  01923A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20907  019240  0E06               	movlw	6
 20908  019242  6EE6               	movwf	postinc1,c
 20909  019244  EC4F  F0FD         	call	_sprintf	;wreg free
 20910                           
 20911                           ; BSR set to: 0
 20912                           ;main.c: 541:   update_lcd(0);
 20913  019248  0E00               	movlw	0
 20914  01924A  6EE6               	movwf	postinc1,c
 20915  01924C  EC01  F0F6         	call	_update_lcd	;wreg free
 20916                           
 20917                           ;main.c: 542:   clear_adc_scan();
 20918  019250  EC1B  F015         	call	_clear_adc_scan	;wreg free
 20919                           
 20920                           ; BSR set to: 1
 20921                           ;main.c: 543:   start_adc_scan();
 20922  019254  ECB7  F00B         	call	_start_adc_scan	;wreg free
 20923                           
 20924                           ;main.c: 544:   WaitMs(100);
 20925  019258  0E64               	movlw	100
 20926  01925A  6EE6               	movwf	postinc1,c
 20927  01925C  0E00               	movlw	0
 20928  01925E  6EE6               	movwf	postinc1,c
 20929  019260  EC85  F010         	call	_WaitMs	;wreg free
 20930                           
 20931                           ;main.c: 545:  } while (++x < 64);
 20932                           ;stkvar	_x @ sp[(-9)+8]
 20933  019264  0EFF               	movlw	-1
 20934  019266  2AE3               	incf	plusw1,f,c
 20935  019268  0EFF               	movlw	-1
 20936  01926A  006F FF8C  F02A    	movff	plusw1,btemp
 20937  019270  0E3F               	movlw	63
 20938  019272  642A               	cpfsgt	btemp^0,c
 20939  019274  D770               	goto	l17216
 20940                           
 20941                           ;main.c: 546:  cb = cb >> 6;
 20942  019276  0E06               	movlw	6
 20943  019278  6E35               	movwf	(btemp+11)^0,c
 20944                           
 20945                           ;stkvar	_cb @ sp[(-9)+4]
 20946  01927A  50E1               	movf	fsr1l,w,c
 20947  01927C  0FFB               	addlw	-5
 20948  01927E  6ED9               	movwf	fsr2l,c
 20949  019280  50E2               	movf	fsr1h,w,c
 20950  019282  6EDA               	movwf	fsr2h,c
 20951  019284  0EFF               	movlw	255
 20952  019286  22DA               	addwfc	fsr2h,f,c
 20953  019288  2835               	incf	(btemp+11)^0,w,c
 20954  01928A  52DE               	movf	postinc2,f,c
 20955  01928C  D007               	goto	u16820
 20956  01928E                     u16825:
 20957  01928E  52DE               	movf	postinc2,f,c
 20958  019290  52DE               	movf	postinc2,f,c
 20959  019292  90D8               	bcf	status,0,c
 20960  019294  32DD               	rrcf	postdec2,f,c
 20961  019296  32DD               	rrcf	postdec2,f,c
 20962  019298  32DD               	rrcf	postdec2,f,c
 20963  01929A  32DE               	rrcf	postinc2,f,c
 20964  01929C                     u16820:
 20965  01929C  2EE8               	decfsz	wreg,f,c
 20966  01929E  D7F7               	goto	u16825
 20967                           
 20968                           ;main.c: 547:  cp = cp >> 6;
 20969  0192A0  0E06               	movlw	6
 20970  0192A2  6E35               	movwf	(btemp+11)^0,c
 20971                           
 20972                           ;stkvar	_cp @ sp[(-9)+0]
 20973  0192A4  50E1               	movf	fsr1l,w,c
 20974  0192A6  0FF7               	addlw	-9
 20975  0192A8  6ED9               	movwf	fsr2l,c
 20976  0192AA  50E2               	movf	fsr1h,w,c
 20977  0192AC  6EDA               	movwf	fsr2h,c
 20978  0192AE  0EFF               	movlw	255
 20979  0192B0  22DA               	addwfc	fsr2h,f,c
 20980  0192B2  2835               	incf	(btemp+11)^0,w,c
 20981  0192B4  52DE               	movf	postinc2,f,c
 20982  0192B6  D007               	goto	u16830
 20983  0192B8                     u16835:
 20984  0192B8  52DE               	movf	postinc2,f,c
 20985  0192BA  52DE               	movf	postinc2,f,c
 20986  0192BC  90D8               	bcf	status,0,c
 20987  0192BE  32DD               	rrcf	postdec2,f,c
 20988  0192C0  32DD               	rrcf	postdec2,f,c
 20989  0192C2  32DD               	rrcf	postdec2,f,c
 20990  0192C4  32DE               	rrcf	postinc2,f,c
 20991  0192C6                     u16830:
 20992  0192C6  2EE8               	decfsz	wreg,f,c
 20993  0192C8  D7F7               	goto	u16835
 20994                           
 20995                           ;main.c: 549:  if (cal_current_zero(0, cb, cp)) {
 20996                           ;stkvar	_cp @ sp[(-9)+0]
 20997  0192CA  0EF7               	movlw	-9
 20998  0192CC  006F FF8F FFE6     	movff	plusw1,postinc1
 20999  0192D2  006F FF8F FFE6     	movff	plusw1,postinc1
 21000                           
 21001                           ;stkvar	_cb @ sp[(-11)+4]
 21002  0192D8  0EF9               	movlw	-7
 21003  0192DA  006F FF8F FFE6     	movff	plusw1,postinc1
 21004  0192E0  006F FF8F FFE6     	movff	plusw1,postinc1
 21005  0192E6  0E00               	movlw	0
 21006  0192E8  6EE6               	movwf	postinc1,c
 21007  0192EA  ECE7  F006         	call	_cal_current_zero	;wreg free
 21008  0192EE  502A               	movf	btemp^0,w,c
 21009  0192F0  B4D8               	btfsc	status,2,c
 21010  0192F2  D075               	goto	l17254
 21011                           
 21012                           ;main.c: 550:   cal_current_zero(1, cb, cp);
 21013                           ;stkvar	_cp @ sp[(-9)+0]
 21014  0192F4  0EF7               	movlw	-9
 21015  0192F6  006F FF8F FFE6     	movff	plusw1,postinc1
 21016  0192FC  006F FF8F FFE6     	movff	plusw1,postinc1
 21017                           
 21018                           ;stkvar	_cb @ sp[(-11)+4]
 21019  019302  0EF9               	movlw	-7
 21020  019304  006F FF8F FFE6     	movff	plusw1,postinc1
 21021  01930A  006F FF8F FFE6     	movff	plusw1,postinc1
 21022  019310  0E01               	movlw	1
 21023  019312  6EE6               	movwf	postinc1,c
 21024  019314  ECE7  F006         	call	_cal_current_zero	;wreg free
 21025                           
 21026                           ;main.c: 551:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21027  019318  0E03               	movlw	low STR_56
 21028  01931A  6EE6               	movwf	postinc1,c
 21029  01931C  0EFE               	movlw	high STR_56
 21030  01931E  6EE6               	movwf	postinc1,c
 21031  019320  0E00               	movlw	0
 21032  019322  6EE6               	movwf	postinc1,c
 21033  019324  0E00               	movlw	0
 21034  019326  6EE6               	movwf	postinc1,c
 21035  019328  EC81  F011         	call	_get_vterm_ptr	;wreg free
 21036  01932C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21037  019332  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21038  019338  0E04               	movlw	4
 21039  01933A  6EE6               	movwf	postinc1,c
 21040  01933C  EC4F  F0FD         	call	_sprintf	;wreg free
 21041                           
 21042                           ; BSR set to: 0
 21043                           ;main.c: 552:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 21044                           ;stkvar	_cp @ sp[(-9)+0]
 21045  019340  0EF7               	movlw	-9
 21046  019342  006F FF8F FFE6     	movff	plusw1,postinc1
 21047  019348  006F FF8F FFE6     	movff	plusw1,postinc1
 21048  01934E  006F FF8F FFE6     	movff	plusw1,postinc1
 21049  019354  006F FF8F FFE6     	movff	plusw1,postinc1
 21050                           
 21051                           ;stkvar	_cb @ sp[(-13)+4]
 21052  01935A  0EF7               	movlw	-9
 21053  01935C  006F FF8F FFE6     	movff	plusw1,postinc1
 21054  019362  006F FF8F FFE6     	movff	plusw1,postinc1
 21055  019368  006F FF8F FFE6     	movff	plusw1,postinc1
 21056  01936E  006F FF8F FFE6     	movff	plusw1,postinc1
 21057  019374  0E53               	movlw	low STR_64
 21058  019376  6EE6               	movwf	postinc1,c
 21059  019378  0EFD               	movlw	high STR_64
 21060  01937A  6EE6               	movwf	postinc1,c
 21061  01937C  0E00               	movlw	0
 21062  01937E  6EE6               	movwf	postinc1,c
 21063  019380  0E01               	movlw	1
 21064  019382  6EE6               	movwf	postinc1,c
 21065  019384  EC81  F011         	call	_get_vterm_ptr	;wreg free
 21066  019388  0060  F0AB  FFE6   	movff	btemp,postinc1
 21067  01938E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21068  019394  0E0C               	movlw	12
 21069  019396  6EE6               	movwf	postinc1,c
 21070  019398  EC4F  F0FD         	call	_sprintf	;wreg free
 21071                           
 21072                           ; BSR set to: 0
 21073                           ;main.c: 553:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 21074  01939C  0EED               	movlw	low STR_65
 21075  01939E  6EE6               	movwf	postinc1,c
 21076  0193A0  0EFD               	movlw	high STR_65
 21077  0193A2  6EE6               	movwf	postinc1,c
 21078  0193A4  0E00               	movlw	0
 21079  0193A6  6EE6               	movwf	postinc1,c
 21080  0193A8  0E02               	movlw	2
 21081  0193AA  6EE6               	movwf	postinc1,c
 21082  0193AC  EC81  F011         	call	_get_vterm_ptr	;wreg free
 21083  0193B0  0060  F0AB  FFE6   	movff	btemp,postinc1
 21084  0193B6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21085  0193BC  0E04               	movlw	4
 21086  0193BE  6EE6               	movwf	postinc1,c
 21087  0193C0  EC4F  F0FD         	call	_sprintf	;wreg free
 21088                           
 21089                           ; BSR set to: 0
 21090                           ;main.c: 554:   update_lcd(0);
 21091  0193C4  0E00               	movlw	0
 21092  0193C6  6EE6               	movwf	postinc1,c
 21093  0193C8  EC01  F0F6         	call	_update_lcd	;wreg free
 21094                           
 21095                           ;main.c: 555:   WaitMs(2000);
 21096  0193CC  0ED0               	movlw	208
 21097  0193CE  6EE6               	movwf	postinc1,c
 21098  0193D0  0E07               	movlw	7
 21099  0193D2  6EE6               	movwf	postinc1,c
 21100  0193D4  EC85  F010         	call	_WaitMs	;wreg free
 21101                           
 21102                           ;main.c: 556:   write_cal_data();
 21103  0193D8  EC5E  F0F7         	call	_write_cal_data	;wreg free
 21104                           
 21105                           ;main.c: 557:  } else {
 21106  0193DC  D05A               	goto	l1520
 21107  0193DE                     l17254:
 21108                           
 21109                           ;main.c: 558:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21110  0193DE  0E03               	movlw	low STR_56
 21111  0193E0  6EE6               	movwf	postinc1,c
 21112  0193E2  0EFE               	movlw	high STR_56
 21113  0193E4  6EE6               	movwf	postinc1,c
 21114  0193E6  0E00               	movlw	0
 21115  0193E8  6EE6               	movwf	postinc1,c
 21116  0193EA  0E00               	movlw	0
 21117  0193EC  6EE6               	movwf	postinc1,c
 21118  0193EE  EC81  F011         	call	_get_vterm_ptr	;wreg free
 21119  0193F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 21120  0193F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21121  0193FE  0E04               	movlw	4
 21122  019400  6EE6               	movwf	postinc1,c
 21123  019402  EC4F  F0FD         	call	_sprintf	;wreg free
 21124                           
 21125                           ;main.c: 559:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21126  019406  0E01               	movlw	1
 21127  019408  6EE6               	movwf	postinc1,c
 21128  01940A  EC88  F013         	call	_get_raw_result	;wreg free
 21129  01940E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21130  019414  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21131  01941A  0E00               	movlw	0
 21132  01941C  6EE6               	movwf	postinc1,c
 21133  01941E  EC88  F013         	call	_get_raw_result	;wreg free
 21134  019422  0060  F0AB  FFE6   	movff	btemp,postinc1
 21135  019428  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21136  01942E  0E53               	movlw	low STR_64
 21137  019430  6EE6               	movwf	postinc1,c
 21138  019432  0EFD               	movlw	high STR_64
 21139  019434  6EE6               	movwf	postinc1,c
 21140  019436  0E00               	movlw	0
 21141  019438  6EE6               	movwf	postinc1,c
 21142  01943A  0E01               	movlw	1
 21143  01943C  6EE6               	movwf	postinc1,c
 21144  01943E  EC81  F011         	call	_get_vterm_ptr	;wreg free
 21145  019442  0060  F0AB  FFE6   	movff	btemp,postinc1
 21146  019448  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21147  01944E  0E08               	movlw	8
 21148  019450  6EE6               	movwf	postinc1,c
 21149  019452  EC4F  F0FD         	call	_sprintf	;wreg free
 21150                           
 21151                           ;main.c: 560:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 21152  019456  0E71               	movlw	low STR_68
 21153  019458  6EE6               	movwf	postinc1,c
 21154  01945A  0EFE               	movlw	high STR_68
 21155  01945C  6EE6               	movwf	postinc1,c
 21156  01945E  0E00               	movlw	0
 21157  019460  6EE6               	movwf	postinc1,c
 21158  019462  0E02               	movlw	2
 21159  019464  6EE6               	movwf	postinc1,c
 21160  019466  EC81  F011         	call	_get_vterm_ptr	;wreg free
 21161  01946A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21162  019470  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21163  019476  0E04               	movlw	4
 21164  019478  6EE6               	movwf	postinc1,c
 21165  01947A  EC4F  F0FD         	call	_sprintf	;wreg free
 21166                           
 21167                           ;main.c: 561:   update_lcd(0);
 21168  01947E  0E00               	movlw	0
 21169  019480  6EE6               	movwf	postinc1,c
 21170  019482  EC01  F0F6         	call	_update_lcd	;wreg free
 21171                           
 21172                           ;main.c: 562:   WaitMs(2000);
 21173  019486  0ED0               	movlw	208
 21174  019488  6EE6               	movwf	postinc1,c
 21175  01948A  0E07               	movlw	7
 21176  01948C  6EE6               	movwf	postinc1,c
 21177  01948E  EC85  F010         	call	_WaitMs	;wreg free
 21178  019492                     l1520:
 21179                           
 21180                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 21181  019492  0EF7               	movlw	247
 21182  019494  26E1               	addwf	fsr1l,f,c
 21183  019496  0EFF               	movlw	255
 21184  019498  22E2               	addwfc	fsr1h,f,c
 21185  01949A  0012               	return		;funcret
 21186  01949C                     __end_of_current_sensor_cal:
 21187                           	opt callstack 0
 21188                           
 21189 ;; *************** function _write_cal_data *****************
 21190 ;; Defined at:
 21191 ;;		line 408 in file "daq.c"
 21192 ;; Parameters:    Size  Location     Type
 21193 ;;		None
 21194 ;; Auto vars:     Size  Location     Type
 21195 ;;  x               2  [STACK] unsigned short 
 21196 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21197 ;;		 -> R(155), 
 21198 ;;  y               2  [STACK] unsigned short 
 21199 ;;  crcVal          1  [STACK] unsigned char 
 21200 ;; Return value:  Size  Location     Type
 21201 ;;                  1  [STACK] void 
 21202 ;; Registers used:
 21203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21204 ;; Tracked objects:
 21205 ;;		On entry : 0/39
 21206 ;;		On exit  : 0/0
 21207 ;;		Unchanged: 0/0
 21208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21213 ;;Total ram usage:        0 bytes
 21214 ;; Hardware stack levels used:    1
 21215 ;; Hardware stack levels required when called:   17
 21216 ;; This function calls:
 21217 ;;		_CRC_8BitDataWrite
 21218 ;;		_CRC_CalculatedResultGet
 21219 ;;		_CRC_Initialize
 21220 ;;		_CRC_IsBusy
 21221 ;;		_CRC_Start
 21222 ;;		_DATAEE_WriteByte
 21223 ;; This function is called by:
 21224 ;;		_main
 21225 ;;		_current_sensor_cal
 21226 ;; This function uses a reentrant model
 21227 ;;
 21228                           
 21229                           	psect	text59
 21230  01EEBC                     __ptext59:
 21231                           	opt callstack 0
 21232  01EEBC                     _write_cal_data:
 21233                           	opt callstack 0
 21234                           
 21235                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21236  01EEBC  0E07               	movlw	7
 21237  01EEBE  26E1               	addwf	fsr1l,f,c
 21238  01EEC0  0E00               	movlw	0
 21239  01EEC2  22E2               	addwfc	fsr1h,f,c
 21240                           
 21241                           ;daq.c: 410:  uint16_t x = 0, y;
 21242                           ;stkvar	_x @ sp[(-7)+0]
 21243                           
 21244                           ;incstack = 0
 21245  01EEC4  0EF9               	movlw	-7
 21246  01EEC6  6AE3               	clrf	plusw1,c
 21247  01EEC8  0EFA               	movlw	-6
 21248  01EECA  6AE3               	clrf	plusw1,c
 21249                           
 21250                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 21251  01EECC  0E9B               	movlw	155
 21252  01EECE  6E34               	movwf	(btemp+10)^0,c
 21253  01EED0  0E00               	movlw	0
 21254  01EED2  6E35               	movwf	(btemp+11)^0,c
 21255                           
 21256                           ;stkvar	_y @ sp[(-7)+4]
 21257  01EED4  0EFD               	movlw	-3
 21258  01EED6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21259  01EEDC  0EFE               	movlw	-2
 21260  01EEDE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21261                           
 21262                           ;daq.c: 414:  R.crc = 0x42;
 21263  01EEE4  0E42               	movlw	66
 21264  01EEE6  0101               	movlb	1	; () banked
 21265  01EEE8  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 21266                           
 21267                           ; BSR set to: 1
 21268                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 21269                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21270  01EEEA  0E01               	movlw	high _R
 21271  01EEEC  6E2A               	movwf	btemp^0,c
 21272  01EEEE  0EFC               	movlw	-4
 21273  01EEF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 21274  01EEF6  0E00               	movlw	low _R
 21275  01EEF8  6E2A               	movwf	btemp^0,c
 21276  01EEFA  0EFB               	movlw	-5
 21277  01EEFC  0060  F0AB  FFE3   	movff	btemp,plusw1
 21278                           
 21279                           ; BSR set to: 1
 21280                           ;daq.c: 416:  R.checkmark = 0x1957;
 21281  01EF02  0E19               	movlw	25
 21282  01EF04  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 21283  01EF06  0E57               	movlw	87
 21284  01EF08  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 21285                           
 21286                           ; BSR set to: 1
 21287                           ;daq.c: 418:  CRC_Initialize();
 21288  01EF0A  EC0B  F008         	call	_CRC_Initialize	;wreg free
 21289                           
 21290                           ; BSR set to: 0
 21291                           ;daq.c: 421:  CRC_Start();
 21292  01EF0E  EC18  F015         	call	_CRC_Start	;wreg free
 21293  01EF12                     l13512:
 21294                           
 21295                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 21296                           ;stkvar	_x @ sp[(-7)+0]
 21297  01EF12  0EF9               	movlw	-7
 21298  01EF14  006F FF8C  F034    	movff	plusw1,btemp+10
 21299  01EF1A  0EFA               	movlw	-6
 21300  01EF1C  006F FF8C  F035    	movff	plusw1,btemp+11
 21301                           
 21302                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21303  01EF22  0EFB               	movlw	-5
 21304  01EF24  006F FF8C  F032    	movff	plusw1,btemp+8
 21305  01EF2A  0EFC               	movlw	-4
 21306  01EF2C  006F FF8C  F033    	movff	plusw1,btemp+9
 21307  01EF32  5034               	movf	(btemp+10)^0,w,c
 21308  01EF34  2432               	addwf	(btemp+8)^0,w,c
 21309  01EF36  6ED9               	movwf	fsr2l,c
 21310  01EF38  5035               	movf	(btemp+11)^0,w,c
 21311  01EF3A  2033               	addwfc	(btemp+9)^0,w,c
 21312  01EF3C  6EDA               	movwf	fsr2h,c
 21313  01EF3E  50DF               	movf	indf2,w,c
 21314  01EF40  6EE6               	movwf	postinc1,c
 21315                           
 21316                           ;stkvar	_x @ sp[(-8)+0]
 21317  01EF42  0EF8               	movlw	-8
 21318  01EF44  006F FF8F FFE6     	movff	plusw1,postinc1
 21319  01EF4A  006F FF8F FFE6     	movff	plusw1,postinc1
 21320  01EF50  ECEB  F00A         	call	_DATAEE_WriteByte	;wreg free
 21321                           
 21322                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 21323                           ;stkvar	_x @ sp[(-7)+0]
 21324  01EF54  0EF9               	movlw	-7
 21325  01EF56  006F FF8C  F034    	movff	plusw1,btemp+10
 21326  01EF5C  0EFA               	movlw	-6
 21327  01EF5E  006F FF8C  F035    	movff	plusw1,btemp+11
 21328                           
 21329                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21330  01EF64  0EFB               	movlw	-5
 21331  01EF66  006F FF8C  F032    	movff	plusw1,btemp+8
 21332  01EF6C  0EFC               	movlw	-4
 21333  01EF6E  006F FF8C  F033    	movff	plusw1,btemp+9
 21334  01EF74  5034               	movf	(btemp+10)^0,w,c
 21335  01EF76  2432               	addwf	(btemp+8)^0,w,c
 21336  01EF78  6ED9               	movwf	fsr2l,c
 21337  01EF7A  5035               	movf	(btemp+11)^0,w,c
 21338  01EF7C  2033               	addwfc	(btemp+9)^0,w,c
 21339  01EF7E  6EDA               	movwf	fsr2h,c
 21340  01EF80  50DF               	movf	indf2,w,c
 21341  01EF82  6EE6               	movwf	postinc1,c
 21342  01EF84  EC7F  F014         	call	_CRC_8BitDataWrite	;wreg free
 21343  01EF88                     l13516:
 21344  01EF88  ECA1  F014         	call	_CRC_IsBusy	;wreg free
 21345  01EF8C  502A               	movf	btemp^0,w,c
 21346  01EF8E  A4D8               	btfss	status,2,c
 21347  01EF90  D7FB               	goto	l13516
 21348                           
 21349                           ;daq.c: 427:  } while (++x < y);
 21350                           ;stkvar	_y @ sp[(-7)+4]
 21351  01EF92  0EFD               	movlw	-3
 21352  01EF94  006F FF8C  F034    	movff	plusw1,btemp+10
 21353  01EF9A  0EFE               	movlw	-2
 21354  01EF9C  006F FF8C  F035    	movff	plusw1,btemp+11
 21355                           
 21356                           ;stkvar	_x @ sp[(-7)+0]
 21357  01EFA2  0EF9               	movlw	-7
 21358  01EFA4  50E3               	movf	plusw1,w,c
 21359  01EFA6  0F01               	addlw	1
 21360  01EFA8  6E2A               	movwf	btemp^0,c
 21361  01EFAA  0EF9               	movlw	-7
 21362  01EFAC  0060  F0AB  FFE3   	movff	btemp,plusw1
 21363  01EFB2  6A2A               	clrf	btemp^0,c
 21364  01EFB4  0EFA               	movlw	-6
 21365  01EFB6  50E3               	movf	plusw1,w,c
 21366  01EFB8  202A               	addwfc	btemp^0,w,c
 21367  01EFBA  6E2A               	movwf	btemp^0,c
 21368  01EFBC  0EFA               	movlw	-6
 21369  01EFBE  0060  F0AB  FFE3   	movff	btemp,plusw1
 21370  01EFC4  0EF9               	movlw	-7
 21371  01EFC6  006F FF8C  F032    	movff	plusw1,btemp+8
 21372  01EFCC  0EFA               	movlw	-6
 21373  01EFCE  006F FF8C  F033    	movff	plusw1,btemp+9
 21374  01EFD4  5034               	movf	(btemp+10)^0,w,c
 21375  01EFD6  5C32               	subwf	(btemp+8)^0,w,c
 21376  01EFD8  5035               	movf	(btemp+11)^0,w,c
 21377  01EFDA  5833               	subwfb	(btemp+9)^0,w,c
 21378  01EFDC  A0D8               	btfss	status,0,c
 21379  01EFDE  D799               	goto	l13512
 21380                           
 21381                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 21382  01EFE0  0E00               	movlw	0
 21383  01EFE2  6EE6               	movwf	postinc1,c
 21384  01EFE4  0E00               	movlw	0
 21385  01EFE6  6EE6               	movwf	postinc1,c
 21386  01EFE8  0E00               	movlw	0
 21387  01EFEA  6EE6               	movwf	postinc1,c
 21388  01EFEC  EC7A  F0F2         	call	_CRC_CalculatedResultGet	;wreg free
 21389                           
 21390                           ;stkvar	_crcVal @ sp[(-7)+6]
 21391  01EFF0  0EFF               	movlw	-1
 21392  01EFF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 21393                           
 21394                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 21395                           ;stkvar	_crcVal @ sp[(-7)+6]
 21396  01EFF8  0EFF               	movlw	-1
 21397  01EFFA  50E3               	movf	plusw1,w,c
 21398  01EFFC  6EE6               	movwf	postinc1,c
 21399  01EFFE  0E9A               	movlw	154
 21400  01F000  6EE6               	movwf	postinc1,c
 21401  01F002  0E00               	movlw	0
 21402  01F004  6EE6               	movwf	postinc1,c
 21403  01F006  ECEB  F00A         	call	_DATAEE_WriteByte	;wreg free
 21404                           
 21405                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21406  01F00A  0EF9               	movlw	249
 21407  01F00C  26E1               	addwf	fsr1l,f,c
 21408  01F00E  0EFF               	movlw	255
 21409  01F010  22E2               	addwfc	fsr1h,f,c
 21410  01F012  0012               	return		;funcret
 21411  01F014                     __end_of_write_cal_data:
 21412                           	opt callstack 0
 21413                           
 21414 ;; *************** function _DATAEE_WriteByte *****************
 21415 ;; Defined at:
 21416 ;;		line 172 in file "mcc_generated_files/memory.c"
 21417 ;; Parameters:    Size  Location     Type
 21418 ;;  bAdd            2  [STACK] unsigned short 
 21419 ;;  bData           1  [STACK] unsigned char 
 21420 ;; Auto vars:     Size  Location     Type
 21421 ;;  GIEBitValue     1  [STACK] unsigned char 
 21422 ;; Return value:  Size  Location     Type
 21423 ;;                  1  [STACK] void 
 21424 ;; Registers used:
 21425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21426 ;; Tracked objects:
 21427 ;;		On entry : 0/39
 21428 ;;		On exit  : 0/0
 21429 ;;		Unchanged: 0/0
 21430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21435 ;;Total ram usage:        0 bytes
 21436 ;; Hardware stack levels used:    1
 21437 ;; Hardware stack levels required when called:   15
 21438 ;; This function calls:
 21439 ;;		Nothing
 21440 ;; This function is called by:
 21441 ;;		_write_cal_data
 21442 ;; This function uses a reentrant model
 21443 ;;
 21444                           
 21445                           	psect	text60
 21446  0015D6                     __ptext60:
 21447                           	opt callstack 0
 21448  0015D6                     _DATAEE_WriteByte:
 21449                           	opt callstack 0
 21450                           
 21451                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21452  0015D6  52E6               	movf	postinc1,f,c
 21453                           
 21454                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 21455                           
 21456                           ;incstack = 0
 21457  0015D8  AED2               	btfss	210,7,c	;volatile
 21458  0015DA  D003               	goto	u12060
 21459  0015DC  6A35               	clrf	(btemp+11)^0,c
 21460  0015DE  2A35               	incf	(btemp+11)^0,f,c
 21461  0015E0  D001               	goto	u12068
 21462  0015E2                     u12060:
 21463  0015E2  6A35               	clrf	(btemp+11)^0,c
 21464  0015E4                     u12068:
 21465                           
 21466                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21467  0015E4  0EFF               	movlw	-1
 21468  0015E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21469                           
 21470                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 21471                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21472  0015EC  0EFE               	movlw	254
 21473  0015EE  24E1               	addwf	fsr1l,w,c
 21474  0015F0  6ED9               	movwf	fsr2l,c
 21475  0015F2  0EFF               	movlw	255
 21476  0015F4  20E2               	addwfc	fsr1h,w,c
 21477  0015F6  6EDA               	movwf	fsr2h,c
 21478  0015F8  50DF               	movf	indf2,w,c
 21479  0015FA  0B03               	andlw	3
 21480  0015FC  0139               	movlb	57	; () banked
 21481  0015FE  6FE1               	movwf	225,b	;volatile
 21482                           
 21483                           ; BSR set to: 57
 21484                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 21485                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21486  001600  0EFD               	movlw	-3
 21487  001602  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 21488                           
 21489                           ; BSR set to: 57
 21490                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 21491                           ;stkvar	_bData @ sp[(-1)+-3]
 21492  001608  0EFC               	movlw	-4
 21493  00160A  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 21494                           
 21495                           ; BSR set to: 57
 21496                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 21497  001610  0E3F               	movlw	-193
 21498  001612  17E5               	andwf	229,f,b	;volsfr
 21499                           
 21500                           ; BSR set to: 57
 21501                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 21502  001614  85E5               	bsf	229,2,b	;volsfr
 21503                           
 21504                           ; BSR set to: 57
 21505                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 21506  001616  9ED2               	bcf	210,7,c	;volatile
 21507                           
 21508                           ; BSR set to: 57
 21509                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 21510  001618  0E55               	movlw	85
 21511  00161A  6FE6               	movwf	230,b	;volsfr
 21512                           
 21513                           ; BSR set to: 57
 21514                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 21515  00161C  0EAA               	movlw	170
 21516  00161E  6FE6               	movwf	230,b	;volsfr
 21517                           
 21518                           ; BSR set to: 57
 21519                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 21520  001620  83E5               	bsf	229,1,b	;volsfr
 21521  001622                     l942:
 21522                           
 21523                           ; BSR set to: 57
 21524                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 21525  001622  B3E5               	btfsc	229,1,b	;volsfr
 21526  001624  D7FE               	goto	l942
 21527                           
 21528                           ; BSR set to: 57
 21529                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 21530  001626  95E5               	bcf	229,2,b	;volsfr
 21531                           
 21532                           ; BSR set to: 57
 21533                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 21534                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21535  001628  0EFF               	movlw	-1
 21536  00162A  B0E3               	btfsc	plusw1,0,c
 21537  00162C  D002               	bra	u12085
 21538  00162E  9ED2               	bcf	210,7,c	;volatile
 21539  001630  D001               	bra	u12086
 21540  001632                     u12085:
 21541  001632  8ED2               	bsf	210,7,c	;volatile
 21542  001634                     u12086:
 21543                           
 21544                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21545  001634  52E5               	movf	postdec1,f,c
 21546  001636  52E5               	movf	postdec1,f,c
 21547  001638  52E5               	movf	postdec1,f,c
 21548  00163A  52E5               	movf	postdec1,f,c
 21549  00163C  0012               	return		;funcret
 21550  00163E                     __end_of_DATAEE_WriteByte:
 21551                           	opt callstack 0
 21552                           
 21553 ;; *************** function _CRC_Start *****************
 21554 ;; Defined at:
 21555 ;;		line 119 in file "mcc_generated_files/crc.c"
 21556 ;; Parameters:    Size  Location     Type
 21557 ;;		None
 21558 ;; Auto vars:     Size  Location     Type
 21559 ;;		None
 21560 ;; Return value:  Size  Location     Type
 21561 ;;                  1  [STACK] void 
 21562 ;; Registers used:
 21563 ;;		None
 21564 ;; Tracked objects:
 21565 ;;		On entry : 3F/0
 21566 ;;		On exit  : 3F/39
 21567 ;;		Unchanged: 0/0
 21568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21573 ;;Total ram usage:        0 bytes
 21574 ;; Hardware stack levels used:    1
 21575 ;; Hardware stack levels required when called:   15
 21576 ;; This function calls:
 21577 ;;		Nothing
 21578 ;; This function is called by:
 21579 ;;		_read_cal_data
 21580 ;;		_write_cal_data
 21581 ;; This function uses a reentrant model
 21582 ;;
 21583                           
 21584                           	psect	text61
 21585  002A30                     __ptext61:
 21586                           	opt callstack 0
 21587  002A30                     _CRC_Start:
 21588                           	opt callstack 14
 21589                           
 21590                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 21591                           
 21592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21593                           ;incstack = 0
 21594  002A30  0139               	movlb	57	; () banked
 21595  002A32  8D68               	bsf	104,6,b	;volatile
 21596                           
 21597                           ; BSR set to: 57
 21598                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21599  002A34  0012               	return		;funcret
 21600  002A36                     __end_of_CRC_Start:
 21601                           	opt callstack 0
 21602                           
 21603 ;; *************** function _CRC_IsBusy *****************
 21604 ;; Defined at:
 21605 ;;		line 201 in file "mcc_generated_files/crc.c"
 21606 ;; Parameters:    Size  Location     Type
 21607 ;;		None
 21608 ;; Auto vars:     Size  Location     Type
 21609 ;;		None
 21610 ;; Return value:  Size  Location     Type
 21611 ;;                  1  [STACK] _Bool 
 21612 ;; Registers used:
 21613 ;;		btemp
 21614 ;; Tracked objects:
 21615 ;;		On entry : 0/39
 21616 ;;		On exit  : 0/0
 21617 ;;		Unchanged: 0/0
 21618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21623 ;;Total ram usage:        0 bytes
 21624 ;; Hardware stack levels used:    1
 21625 ;; Hardware stack levels required when called:   15
 21626 ;; This function calls:
 21627 ;;		Nothing
 21628 ;; This function is called by:
 21629 ;;		_read_cal_data
 21630 ;;		_write_cal_data
 21631 ;; This function uses a reentrant model
 21632 ;;
 21633                           
 21634                           	psect	text62
 21635  002942                     __ptext62:
 21636                           	opt callstack 0
 21637  002942                     _CRC_IsBusy:
 21638                           	opt callstack 14
 21639                           
 21640                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 21641                           
 21642                           ; BSR set to: 57
 21643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21644                           ;incstack = 0
 21645  002942  0139               	movlb	57	; () banked
 21646  002944  AB68               	btfss	104,5,b	;volatile
 21647  002946  D003               	goto	u12290
 21648  002948  6A2A               	clrf	btemp^0,c
 21649  00294A  2A2A               	incf	btemp^0,f,c
 21650  00294C  0012               	return	
 21651  00294E                     u12290:
 21652  00294E  6A2A               	clrf	btemp^0,c
 21653                           
 21654                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21655  002950  0012               	return		;funcret
 21656  002952                     __end_of_CRC_IsBusy:
 21657                           	opt callstack 0
 21658                           
 21659 ;; *************** function _CRC_CalculatedResultGet *****************
 21660 ;; Defined at:
 21661 ;;		line 159 in file "mcc_generated_files/crc.c"
 21662 ;; Parameters:    Size  Location     Type
 21663 ;;  reverse         1  [STACK] _Bool 
 21664 ;;  xorValue        2  [STACK] unsigned short 
 21665 ;; Auto vars:     Size  Location     Type
 21666 ;;  result          2  [STACK] unsigned short 
 21667 ;;  mask            2  [STACK] unsigned short 
 21668 ;; Return value:  Size  Location     Type
 21669 ;;                  2  [STACK] unsigned short 
 21670 ;; Registers used:
 21671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 21672 ;; Tracked objects:
 21673 ;;		On entry : 0/39
 21674 ;;		On exit  : 0/0
 21675 ;;		Unchanged: 0/0
 21676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21681 ;;Total ram usage:        0 bytes
 21682 ;; Hardware stack levels used:    1
 21683 ;; Hardware stack levels required when called:   16
 21684 ;; This function calls:
 21685 ;;		_CRC_ReverseValue
 21686 ;; This function is called by:
 21687 ;;		_read_cal_data
 21688 ;;		_write_cal_data
 21689 ;; This function uses a reentrant model
 21690 ;;
 21691                           
 21692                           	psect	text63
 21693  01E4F4                     __ptext63:
 21694                           	opt callstack 0
 21695  01E4F4                     _CRC_CalculatedResultGet:
 21696                           	opt callstack 0
 21697                           
 21698                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21699  01E4F4  52E6               	movf	postinc1,f,c
 21700  01E4F6  52E6               	movf	postinc1,f,c
 21701  01E4F8  52E6               	movf	postinc1,f,c
 21702  01E4FA  52E6               	movf	postinc1,f,c
 21703                           
 21704                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 21705                           
 21706                           ;incstack = 0
 21707  01E4FC  0139               	movlb	57	; () banked
 21708  01E4FE  9D68               	bcf	104,6,b	;volatile
 21709                           
 21710                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 21711  01E500  9DA0               	bcf	160,6,b	;volatile
 21712                           
 21713                           ; BSR set to: 57
 21714                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 21715  01E502  5169               	movf	105,w,b	;volatile
 21716  01E504  0B0F               	andlw	15
 21717  01E506  6E35               	movwf	(btemp+11)^0,c
 21718  01E508  3A35               	swapf	(btemp+11)^0,f,c
 21719  01E50A  5169               	movf	105,w,b	;volatile
 21720  01E50C  1835               	xorwf	(btemp+11)^0,w,c
 21721  01E50E  0B0F               	andlw	-241
 21722  01E510  1835               	xorwf	(btemp+11)^0,w,c
 21723  01E512  6F69               	movwf	105,b	;volatile
 21724                           
 21725                           ; BSR set to: 57
 21726                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 21727  01E514  0E08               	movlw	8
 21728  01E516  0100               	movlb	0	; () banked
 21729  01E518  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 21730  01E51A  D003               	goto	l1282
 21731                           
 21732                           ; BSR set to: 0
 21733                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 21734  01E51C  0139               	movlb	57	; () banked
 21735  01E51E  6B61               	clrf	97,b	;volatile
 21736  01E520  D001               	goto	L19
 21737  01E522                     l1282:
 21738                           
 21739                           ; BSR set to: 0
 21740                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 21741  01E522  0139               	movlb	57	; () banked
 21742  01E524                     L19:
 21743  01E524  6B60               	clrf	96,b	;volatile
 21744                           
 21745                           ; BSR set to: 57
 21746                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 21747                           
 21748                           ;mcc_generated_files/crc.c: 176:      }
 21749  01E526  8D68               	bsf	104,6,b	;volatile
 21750  01E528                     l1284:
 21751                           
 21752                           ; BSR set to: 57
 21753  01E528  ADA0               	btfss	160,6,b	;volatile
 21754  01E52A  D7FE               	goto	l1284
 21755                           
 21756                           ; BSR set to: 57
 21757                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 21758  01E52C  9DA0               	bcf	160,6,b	;volatile
 21759                           
 21760                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 21761  01E52E  9D68               	bcf	104,6,b	;volatile
 21762                           
 21763                           ; BSR set to: 57
 21764                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 21765  01E530  0060  F388  F035   	movff	_crcObj,btemp+11
 21766  01E536  0EFF               	movlw	255
 21767  01E538  2635               	addwf	(btemp+11)^0,f,c
 21768  01E53A  3A35               	swapf	(btemp+11)^0,f,c
 21769  01E53C  5169               	movf	105,w,b	;volatile
 21770  01E53E  1835               	xorwf	(btemp+11)^0,w,c
 21771  01E540  0B0F               	andlw	-241
 21772  01E542  1835               	xorwf	(btemp+11)^0,w,c
 21773  01E544  6F69               	movwf	105,b	;volatile
 21774                           
 21775                           ; BSR set to: 57
 21776                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 21777  01E546  5162               	movf	98,w,b	;volatile
 21778  01E548  006E F58C  F02A    	movff	14691,btemp	;volatile
 21779  01E54E  6A2B               	clrf	(btemp+1)^0,c
 21780  01E550  0060  F0A8  F02B   	movff	btemp,btemp+1
 21781  01E556  6A2A               	clrf	btemp^0,c
 21782  01E558  122A               	iorwf	btemp^0,f,c
 21783  01E55A  0E00               	movlw	0
 21784  01E55C  122B               	iorwf	(btemp+1)^0,f,c
 21785                           
 21786                           ;stkvar	_result @ sp[(-4)+0]
 21787  01E55E  0EFC               	movlw	-4
 21788  01E560  0060  F0AB  FFE3   	movff	btemp,plusw1
 21789  01E566  0EFD               	movlw	-3
 21790  01E568  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21791                           
 21792                           ; BSR set to: 57
 21793                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 21794  01E56E  0E10               	movlw	16
 21795  01E570  0100               	movlb	0	; () banked
 21796  01E572  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 21797  01E574  D03A               	goto	l12784
 21798                           
 21799                           ; BSR set to: 0
 21800                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 21801  01E576  0EFF               	movlw	255
 21802  01E578  6E34               	movwf	(btemp+10)^0,c
 21803  01E57A  0EFF               	movlw	255
 21804  01E57C  6E35               	movwf	(btemp+11)^0,c
 21805  01E57E  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 21806  01E584  0E01               	movlw	1
 21807  01E586  6E30               	movwf	(btemp+6)^0,c
 21808  01E588  0E00               	movlw	0
 21809  01E58A  6E31               	movwf	(btemp+7)^0,c
 21810  01E58C  2A33               	incf	(btemp+9)^0,f,c
 21811  01E58E  D003               	goto	u12274
 21812  01E590                     u12275:
 21813  01E590  90D8               	bcf	status,0,c
 21814  01E592  3630               	rlcf	(btemp+6)^0,f,c
 21815  01E594  3631               	rlcf	(btemp+7)^0,f,c
 21816  01E596                     u12274:
 21817  01E596  2E33               	decfsz	(btemp+9)^0,f,c
 21818  01E598  D7FB               	goto	u12275
 21819  01E59A  5034               	movf	(btemp+10)^0,w,c
 21820  01E59C  2630               	addwf	(btemp+6)^0,f,c
 21821  01E59E  5035               	movf	(btemp+11)^0,w,c
 21822  01E5A0  2231               	addwfc	(btemp+7)^0,f,c
 21823                           
 21824                           ;stkvar	_mask @ sp[(-4)+2]
 21825  01E5A2  0EFE               	movlw	-2
 21826  01E5A4  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 21827  01E5AA  0EFF               	movlw	-1
 21828  01E5AC  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 21829                           
 21830                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 21831                           ;stkvar	_mask @ sp[(-4)+2]
 21832  01E5B2  0EFE               	movlw	-2
 21833  01E5B4  006F FF8C  F034    	movff	plusw1,btemp+10
 21834  01E5BA  0EFF               	movlw	-1
 21835  01E5BC  006F FF8C  F035    	movff	plusw1,btemp+11
 21836                           
 21837                           ;stkvar	_result @ sp[(-4)+0]
 21838  01E5C2  0EFC               	movlw	-4
 21839  01E5C4  006F FF8C  F02A    	movff	plusw1,btemp
 21840  01E5CA  5034               	movf	(btemp+10)^0,w,c
 21841  01E5CC  162A               	andwf	btemp^0,f,c
 21842  01E5CE  0EFC               	movlw	-4
 21843  01E5D0  0060  F0AB  FFE3   	movff	btemp,plusw1
 21844  01E5D6  0EFD               	movlw	-3
 21845  01E5D8  006F FF8C  F02A    	movff	plusw1,btemp
 21846  01E5DE  5035               	movf	(btemp+11)^0,w,c
 21847  01E5E0  162A               	andwf	btemp^0,f,c
 21848  01E5E2  0EFD               	movlw	-3
 21849  01E5E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 21850  01E5EA                     l12784:
 21851                           
 21852                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 21853                           ;stkvar	_reverse @ sp[(-4)+-1]
 21854  01E5EA  0EFB               	movlw	-5
 21855  01E5EC  50E3               	movf	plusw1,w,c
 21856  01E5EE  B4D8               	btfsc	status,2,c
 21857  01E5F0  D011               	goto	l12788
 21858                           
 21859                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 21860                           ;stkvar	_result @ sp[(-4)+0]
 21861  01E5F2  0EFC               	movlw	-4
 21862  01E5F4  006F FF8F FFE6     	movff	plusw1,postinc1
 21863  01E5FA  006F FF8F FFE6     	movff	plusw1,postinc1
 21864  01E600  EC1B  F002         	call	_CRC_ReverseValue	;wreg free
 21865                           
 21866                           ;stkvar	_result @ sp[(-4)+0]
 21867  01E604  0EFC               	movlw	-4
 21868  01E606  0060  F0AB  FFE3   	movff	btemp,plusw1
 21869  01E60C  0EFD               	movlw	-3
 21870  01E60E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21871  01E614                     l12788:
 21872                           
 21873                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 21874                           ;stkvar	_xorValue @ sp[(-4)+-3]
 21875  01E614  0EF9               	movlw	-7
 21876  01E616  006F FF8C  F034    	movff	plusw1,btemp+10
 21877  01E61C  0EFA               	movlw	-6
 21878  01E61E  006F FF8C  F035    	movff	plusw1,btemp+11
 21879                           
 21880                           ;stkvar	_result @ sp[(-4)+0]
 21881  01E624  0EFC               	movlw	-4
 21882  01E626  006F FF8C  F02A    	movff	plusw1,btemp
 21883  01E62C  5034               	movf	(btemp+10)^0,w,c
 21884  01E62E  1A2A               	xorwf	btemp^0,f,c
 21885  01E630  0EFC               	movlw	-4
 21886  01E632  0060  F0AB  FFE3   	movff	btemp,plusw1
 21887  01E638  0EFD               	movlw	-3
 21888  01E63A  006F FF8C  F02A    	movff	plusw1,btemp
 21889  01E640  5035               	movf	(btemp+11)^0,w,c
 21890  01E642  1A2A               	xorwf	btemp^0,f,c
 21891  01E644  0EFD               	movlw	-3
 21892  01E646  0060  F0AB  FFE3   	movff	btemp,plusw1
 21893                           
 21894                           ;mcc_generated_files/crc.c: 198:     return result;
 21895                           ;stkvar	_result @ sp[(-4)+0]
 21896  01E64C  0EFC               	movlw	-4
 21897  01E64E  006F FF8C  F02A    	movff	plusw1,btemp
 21898  01E654  0EFD               	movlw	-3
 21899  01E656  006F FF8C  F02B    	movff	plusw1,btemp+1
 21900                           
 21901                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 21902  01E65C  0EF9               	movlw	249
 21903  01E65E  26E1               	addwf	fsr1l,f,c
 21904  01E660  0EFF               	movlw	255
 21905  01E662  22E2               	addwfc	fsr1h,f,c
 21906  01E664  0012               	return		;funcret
 21907  01E666                     __end_of_CRC_CalculatedResultGet:
 21908                           	opt callstack 0
 21909                           
 21910 ;; *************** function _CRC_ReverseValue *****************
 21911 ;; Defined at:
 21912 ;;		line 138 in file "mcc_generated_files/crc.c"
 21913 ;; Parameters:    Size  Location     Type
 21914 ;;  crc             2  [STACK] unsigned short 
 21915 ;; Auto vars:     Size  Location     Type
 21916 ;;  mask            2  [STACK] unsigned short 
 21917 ;;  reverse         2  [STACK] unsigned short 
 21918 ;; Return value:  Size  Location     Type
 21919 ;;                  2  [STACK] unsigned short 
 21920 ;; Registers used:
 21921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21922 ;; Tracked objects:
 21923 ;;		On entry : 0/0
 21924 ;;		On exit  : 0/0
 21925 ;;		Unchanged: 0/0
 21926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21931 ;;Total ram usage:        0 bytes
 21932 ;; Hardware stack levels used:    1
 21933 ;; Hardware stack levels required when called:   15
 21934 ;; This function calls:
 21935 ;;		Nothing
 21936 ;; This function is called by:
 21937 ;;		_CRC_CalculatedResultGet
 21938 ;; This function uses a reentrant model
 21939 ;;
 21940                           
 21941                           	psect	text64
 21942  000436                     __ptext64:
 21943                           	opt callstack 0
 21944  000436                     _CRC_ReverseValue:
 21945                           	opt callstack 0
 21946                           
 21947                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21948  000436  52E6               	movf	postinc1,f,c
 21949  000438  52E6               	movf	postinc1,f,c
 21950  00043A  52E6               	movf	postinc1,f,c
 21951  00043C  52E6               	movf	postinc1,f,c
 21952                           
 21953                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 21954                           
 21955                           ;incstack = 0
 21956  00043E  0E01               	movlw	1
 21957  000440  6E34               	movwf	(btemp+10)^0,c
 21958  000442  0E00               	movlw	0
 21959  000444  6E35               	movwf	(btemp+11)^0,c
 21960                           
 21961                           ;stkvar	_mask @ sp[(-4)+0]
 21962  000446  0EFC               	movlw	-4
 21963  000448  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21964  00044E  0EFD               	movlw	-3
 21965  000450  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21966                           
 21967                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 21968  000456  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 21969  00045C  0EFF               	movlw	255
 21970  00045E  2635               	addwf	(btemp+11)^0,f,c
 21971                           
 21972                           ;stkvar	_mask @ sp[(-4)+0]
 21973  000460  50E1               	movf	fsr1l,w,c
 21974  000462  0FFC               	addlw	-4
 21975  000464  6ED9               	movwf	fsr2l,c
 21976  000466  50E2               	movf	fsr1h,w,c
 21977  000468  6EDA               	movwf	fsr2h,c
 21978  00046A  0EFF               	movlw	255
 21979  00046C  22DA               	addwfc	fsr2h,f,c
 21980  00046E  2835               	incf	(btemp+11)^0,w,c
 21981  000470  D003               	goto	u11540
 21982  000472                     u11545:
 21983  000472  90D8               	bcf	status,0,c
 21984  000474  36DE               	rlcf	postinc2,f,c
 21985  000476  36DD               	rlcf	postdec2,f,c
 21986  000478                     u11540:
 21987  000478  2EE8               	decfsz	wreg,f,c
 21988  00047A  D7FB               	goto	u11545
 21989                           
 21990                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 21991                           ;stkvar	_reverse @ sp[(-4)+2]
 21992  00047C  0EFE               	movlw	-2
 21993  00047E  6AE3               	clrf	plusw1,c
 21994  000480  0EFF               	movlw	-1
 21995  000482  6AE3               	clrf	plusw1,c
 21996                           
 21997                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21998  000484  D029               	goto	l12268
 21999  000486                     l12260:
 22000                           
 22001                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 22002                           ;stkvar	_crc @ sp[(-4)+-2]
 22003  000486  0EFA               	movlw	-6
 22004  000488  A0E3               	btfss	plusw1,0,c
 22005  00048A  D01C               	goto	l12264
 22006                           
 22007                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 22008                           ;stkvar	_mask @ sp[(-4)+0]
 22009  00048C  0EFC               	movlw	-4
 22010  00048E  006F FF8C  F034    	movff	plusw1,btemp+10
 22011  000494  0EFD               	movlw	-3
 22012  000496  006F FF8C  F035    	movff	plusw1,btemp+11
 22013                           
 22014                           ;stkvar	_reverse @ sp[(-4)+2]
 22015  00049C  0EFE               	movlw	-2
 22016  00049E  006F FF8C  F02A    	movff	plusw1,btemp
 22017  0004A4  5034               	movf	(btemp+10)^0,w,c
 22018  0004A6  122A               	iorwf	btemp^0,f,c
 22019  0004A8  0EFE               	movlw	-2
 22020  0004AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 22021  0004B0  0EFF               	movlw	-1
 22022  0004B2  006F FF8C  F02A    	movff	plusw1,btemp
 22023  0004B8  5035               	movf	(btemp+11)^0,w,c
 22024  0004BA  122A               	iorwf	btemp^0,f,c
 22025  0004BC  0EFF               	movlw	-1
 22026  0004BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 22027  0004C4                     l12264:
 22028                           
 22029                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 22030                           ;stkvar	_mask @ sp[(-4)+0]
 22031  0004C4  90D8               	bcf	status,0,c
 22032  0004C6  0EFD               	movlw	-3
 22033  0004C8  32E3               	rrcf	plusw1,f,c
 22034  0004CA  0EFC               	movlw	-4
 22035  0004CC  32E3               	rrcf	plusw1,f,c
 22036                           
 22037                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 22038                           ;stkvar	_crc @ sp[(-4)+-2]
 22039  0004CE  90D8               	bcf	status,0,c
 22040  0004D0  0EFB               	movlw	-5
 22041  0004D2  32E3               	rrcf	plusw1,f,c
 22042  0004D4  0EFA               	movlw	-6
 22043  0004D6  32E3               	rrcf	plusw1,f,c
 22044  0004D8                     l12268:
 22045                           
 22046                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22047                           ;stkvar	_crc @ sp[(-4)+-2]
 22048  0004D8  0EFA               	movlw	-6
 22049  0004DA  006F FF8C  F02A    	movff	plusw1,btemp
 22050  0004E0  0EFB               	movlw	-5
 22051  0004E2  50E3               	movf	plusw1,w,c
 22052  0004E4  102A               	iorwf	btemp^0,w,c
 22053  0004E6  A4D8               	btfss	status,2,c
 22054  0004E8  D7CE               	goto	l12260
 22055                           
 22056                           ;mcc_generated_files/crc.c: 156:     return reverse;
 22057                           ;stkvar	_reverse @ sp[(-4)+2]
 22058  0004EA  0EFE               	movlw	-2
 22059  0004EC  006F FF8C  F02A    	movff	plusw1,btemp
 22060  0004F2  0EFF               	movlw	-1
 22061  0004F4  006F FF8C  F02B    	movff	plusw1,btemp+1
 22062                           
 22063                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22064  0004FA  0EFA               	movlw	250
 22065  0004FC  26E1               	addwf	fsr1l,f,c
 22066  0004FE  0EFF               	movlw	255
 22067  000500  22E2               	addwfc	fsr1h,f,c
 22068  000502  0012               	return		;funcret
 22069  000504                     __end_of_CRC_ReverseValue:
 22070                           	opt callstack 0
 22071                           
 22072 ;; *************** function _CRC_8BitDataWrite *****************
 22073 ;; Defined at:
 22074 ;;		line 125 in file "mcc_generated_files/crc.c"
 22075 ;; Parameters:    Size  Location     Type
 22076 ;;  data            1  [STACK] unsigned char 
 22077 ;; Auto vars:     Size  Location     Type
 22078 ;;		None
 22079 ;; Return value:  Size  Location     Type
 22080 ;;                  1  [STACK] _Bool 
 22081 ;; Registers used:
 22082 ;;		fsr1l, fsr1h
 22083 ;; Tracked objects:
 22084 ;;		On entry : 0/4
 22085 ;;		On exit  : 3F/39
 22086 ;;		Unchanged: 0/0
 22087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22092 ;;Total ram usage:        0 bytes
 22093 ;; Hardware stack levels used:    1
 22094 ;; Hardware stack levels required when called:   15
 22095 ;; This function calls:
 22096 ;;		Nothing
 22097 ;; This function is called by:
 22098 ;;		_read_cal_data
 22099 ;;		_write_cal_data
 22100 ;; This function uses a reentrant model
 22101 ;;
 22102                           
 22103                           	psect	text65
 22104  0028FE                     __ptext65:
 22105                           	opt callstack 0
 22106  0028FE                     _CRC_8BitDataWrite:
 22107                           	opt callstack 14
 22108                           
 22109                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 22110                           
 22111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22112                           ;incstack = 0
 22113  0028FE  0139               	movlb	57	; () banked
 22114  002900  B168               	btfsc	104,0,b	;volatile
 22115  002902  D004               	goto	l1271
 22116                           
 22117                           ; BSR set to: 57
 22118                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 22119                           ;stkvar	_data @ sp[(0)+-1]
 22120  002904  0EFF               	movlw	-1
 22121  002906  006F FF8F F960     	movff	plusw1,14688	;volatile
 22122  00290C                     l1271:
 22123                           
 22124                           ; BSR set to: 57
 22125                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 22126  00290C  52E5               	movf	postdec1,f,c
 22127  00290E  0012               	return		;funcret
 22128  002910                     __end_of_CRC_8BitDataWrite:
 22129                           	opt callstack 0
 22130                           
 22131 ;; *************** function _start_adc_scan *****************
 22132 ;; Defined at:
 22133 ;;		line 72 in file "daq.c"
 22134 ;; Parameters:    Size  Location     Type
 22135 ;;		None
 22136 ;; Auto vars:     Size  Location     Type
 22137 ;;		None
 22138 ;; Return value:  Size  Location     Type
 22139 ;;                  1  [STACK] _Bool 
 22140 ;; Registers used:
 22141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22142 ;; Tracked objects:
 22143 ;;		On entry : 0/0
 22144 ;;		On exit  : 0/0
 22145 ;;		Unchanged: 0/0
 22146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22151 ;;Total ram usage:        0 bytes
 22152 ;; Hardware stack levels used:    1
 22153 ;; Hardware stack levels required when called:   16
 22154 ;; This function calls:
 22155 ;;		_ADCC_DischargeSampleCapacitor
 22156 ;;		_ADCC_SetADIInterruptHandler
 22157 ;;		_ADCC_SetADTIInterruptHandler
 22158 ;;		_ADCC_StartConversion
 22159 ;; This function is called by:
 22160 ;;		_main
 22161 ;;		_current_sensor_cal
 22162 ;;		_update_adc_result
 22163 ;; This function uses a reentrant model
 22164 ;;
 22165                           
 22166                           	psect	text66
 22167  00176E                     __ptext66:
 22168                           	opt callstack 0
 22169  00176E                     _start_adc_scan:
 22170                           	opt callstack 14
 22171                           
 22172                           ;daq.c: 74:  if (R.done)
 22173                           
 22174                           ; BSR set to: 57
 22175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22176                           ;incstack = 0
 22177  00176E  0101               	movlb	1	; () banked
 22178  001770  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 22179  001772  A4D8               	btfss	status,2,c
 22180  001774  0012               	return	
 22181                           
 22182                           ; BSR set to: 1
 22183                           ;daq.c: 77:  R.scan_index = 0;
 22184  001776  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22185                           
 22186                           ; BSR set to: 1
 22187                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22188  001778  013A               	movlb	58	; () banked
 22189  00177A  5140               	movf	64,w,b	;volatile
 22190  00177C  006E F940  F02A    	movff	14928,btemp	;volatile
 22191  001782  6A2B               	clrf	(btemp+1)^0,c
 22192  001784  0060  F0A8  F02B   	movff	btemp,btemp+1
 22193  00178A  6A2A               	clrf	btemp^0,c
 22194  00178C  262A               	addwf	btemp^0,f,c
 22195  00178E  0E00               	movlw	0
 22196  001790  222B               	addwfc	(btemp+1)^0,f,c
 22197  001792  0E77               	movlw	119
 22198  001794  142A               	andwf	btemp^0,w,c
 22199  001796  0101               	movlb	1	; () banked
 22200  001798  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22201  00179A  0E3C               	movlw	60
 22202  00179C  142B               	andwf	(btemp+1)^0,w,c
 22203  00179E  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22204                           
 22205                           ; BSR set to: 1
 22206                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22207  0017A0  0E5E               	movlw	low _adc_int_handler
 22208  0017A2  6EE6               	movwf	postinc1,c
 22209  0017A4  0E2A               	movlw	high _adc_int_handler
 22210  0017A6  6EE6               	movwf	postinc1,c
 22211  0017A8  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22212  0017AA  6EE6               	movwf	postinc1,c
 22213  0017AC  ECCB  F012         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22214                           
 22215                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22216  0017B0  0E7E               	movlw	low _adc_int_t_handler
 22217  0017B2  6EE6               	movwf	postinc1,c
 22218  0017B4  0EFF               	movlw	high _adc_int_t_handler
 22219  0017B6  6EE6               	movwf	postinc1,c
 22220  0017B8  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 22221  0017BA  6EE6               	movwf	postinc1,c
 22222  0017BC  ECB7  F012         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22223                           
 22224                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 22225  0017C0  EC05  F015         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22226                           
 22227                           ; BSR set to: 62
 22228                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 22229  0017C4  0101               	movlb	1	; () banked
 22230  0017C6  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 22231  0017C8  0B0F               	andlw	15
 22232  0017CA  6EE6               	movwf	postinc1,c
 22233  0017CC  EC88  F014         	call	_ADCC_StartConversion	;wreg free
 22234                           
 22235                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22236  0017D0  0012               	return		;funcret
 22237  0017D2                     __end_of_start_adc_scan:
 22238                           	opt callstack 0
 22239                           
 22240 ;; *************** function _ADCC_StartConversion *****************
 22241 ;; Defined at:
 22242 ;;		line 128 in file "mcc_generated_files/adcc.c"
 22243 ;; Parameters:    Size  Location     Type
 22244 ;;  channel         1  [STACK] enum E16136
 22245 ;; Auto vars:     Size  Location     Type
 22246 ;;		None
 22247 ;; Return value:  Size  Location     Type
 22248 ;;                  1  [STACK] void 
 22249 ;; Registers used:
 22250 ;;		fsr1l, fsr1h
 22251 ;; Tracked objects:
 22252 ;;		On entry : 3F/1
 22253 ;;		On exit  : 3F/3E
 22254 ;;		Unchanged: 0/0
 22255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22260 ;;Total ram usage:        0 bytes
 22261 ;; Hardware stack levels used:    1
 22262 ;; Hardware stack levels required when called:   15
 22263 ;; This function calls:
 22264 ;;		Nothing
 22265 ;; This function is called by:
 22266 ;;		_start_adc_scan
 22267 ;;		_adc_int_t_handler
 22268 ;; This function uses a reentrant model
 22269 ;;
 22270                           
 22271                           	psect	text67
 22272  002910                     __ptext67:
 22273                           	opt callstack 0
 22274  002910                     _ADCC_StartConversion:
 22275                           	opt callstack 0
 22276                           
 22277                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 22278                           ;stkvar	_channel @ sp[(0)+-1]
 22279                           
 22280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22281                           ;incstack = 0
 22282 ;; hardware stack exceeded
 22283  002910  0EFF               	movlw	-1
 22284  002912  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 22285                           
 22286                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 22287  002918  013E               	movlb	62	; () banked
 22288  00291A  8FF8               	bsf	248,7,b	;volatile
 22289                           
 22290                           ; BSR set to: 62
 22291                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 22292  00291C  81F8               	bsf	248,0,b	;volatile
 22293                           
 22294                           ; BSR set to: 62
 22295                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 22296  00291E  52E5               	movf	postdec1,f,c
 22297  002920  0012               	return		;funcret
 22298  002922                     __end_of_ADCC_StartConversion:
 22299                           	opt callstack 0
 22300                           
 22301 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 22302 ;; Defined at:
 22303 ;;		line 189 in file "mcc_generated_files/adcc.c"
 22304 ;; Parameters:    Size  Location     Type
 22305 ;;		None
 22306 ;; Auto vars:     Size  Location     Type
 22307 ;;		None
 22308 ;; Return value:  Size  Location     Type
 22309 ;;                  1  [STACK] void 
 22310 ;; Registers used:
 22311 ;;		wreg, status,2
 22312 ;; Tracked objects:
 22313 ;;		On entry : 0/1
 22314 ;;		On exit  : 3F/3E
 22315 ;;		Unchanged: 0/0
 22316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22321 ;;Total ram usage:        0 bytes
 22322 ;; Hardware stack levels used:    1
 22323 ;; Hardware stack levels required when called:   15
 22324 ;; This function calls:
 22325 ;;		Nothing
 22326 ;; This function is called by:
 22327 ;;		_start_adc_scan
 22328 ;;		_adc_int_t_handler
 22329 ;; This function uses a reentrant model
 22330 ;;
 22331                           
 22332                           	psect	text68
 22333  002A0A                     __ptext68:
 22334                           	opt callstack 0
 22335  002A0A                     _ADCC_DischargeSampleCapacitor:
 22336                           	opt callstack 0
 22337                           
 22338                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 22339                           
 22340                           ; BSR set to: 62
 22341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22342                           ;incstack = 0
 22343 ;; hardware stack exceeded
 22344  002A0A  0E3B               	movlw	59
 22345  002A0C  013E               	movlb	62	; () banked
 22346  002A0E  6FF1               	movwf	241,b	;volatile
 22347                           
 22348                           ; BSR set to: 62
 22349                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 22350  002A10  0012               	return		;funcret
 22351  002A12                     __end_of_ADCC_DischargeSampleCapacitor:
 22352                           	opt callstack 0
 22353                           
 22354 ;; *************** function _spinners *****************
 22355 ;; Defined at:
 22356 ;;		line 147 in file "mbmc.c"
 22357 ;; Parameters:    Size  Location     Type
 22358 ;;  shape           1  [STACK] unsigned char 
 22359 ;;  reset           1  [STACK] const unsigned char 
 22360 ;; Auto vars:     Size  Location     Type
 22361 ;;  c               1  [STACK] unsigned char 
 22362 ;; Return value:  Size  Location     Type
 22363 ;;                  1  [STACK] unsigned char 
 22364 ;; Registers used:
 22365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 22366 ;; Tracked objects:
 22367 ;;		On entry : 0/0
 22368 ;;		On exit  : 0/0
 22369 ;;		Unchanged: 0/0
 22370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22375 ;;Total ram usage:        0 bytes
 22376 ;; Hardware stack levels used:    1
 22377 ;; Hardware stack levels required when called:   16
 22378 ;; This function calls:
 22379 ;;		_strlen
 22380 ;; This function is called by:
 22381 ;;		_main
 22382 ;;		_current_sensor_cal
 22383 ;; This function uses a reentrant model
 22384 ;;
 22385                           
 22386                           	psect	text69
 22387  01FD96                     __ptext69:
 22388                           	opt callstack 0
 22389  01FD96                     _spinners:
 22390                           	opt callstack 0
 22391                           
 22392                           ; BSR set to: 62
 22393                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22394  01FD96  52E6               	movf	postinc1,f,c
 22395                           
 22396                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 22397                           ;stkvar	_shape @ sp[(-1)+-1]
 22398                           
 22399                           ;incstack = 0
 22400  01FD98  0EFE               	movlw	-2
 22401  01FD9A  006F FF8C  F02A    	movff	plusw1,btemp
 22402  01FDA0  0E05               	movlw	5
 22403  01FDA2  642A               	cpfsgt	btemp^0,c
 22404  01FDA4  D002               	goto	l2184
 22405                           
 22406                           ;mbmc.c: 153:   shape = 0;
 22407                           ;stkvar	_shape @ sp[(-1)+-1]
 22408  01FDA6  0EFE               	movlw	-2
 22409  01FDA8  6AE3               	clrf	plusw1,c
 22410  01FDAA                     l2184:
 22411                           
 22412                           ;mbmc.c: 154:  if (reset)
 22413                           ;stkvar	_reset @ sp[(-1)+-2]
 22414  01FDAA  0EFD               	movlw	-3
 22415  01FDAC  50E3               	movf	plusw1,w,c
 22416  01FDAE  B4D8               	btfsc	status,2,c
 22417  01FDB0  D00C               	goto	l16932
 22418                           
 22419                           ;mbmc.c: 155:   s[shape] = 0;
 22420                           ;stkvar	_shape @ sp[(-1)+-1]
 22421  01FDB2  0EFE               	movlw	-2
 22422  01FDB4  50E3               	movf	plusw1,w,c
 22423  01FDB6  6E34               	movwf	(btemp+10)^0,c
 22424  01FDB8  6A35               	clrf	(btemp+11)^0,c
 22425  01FDBA  0ECD               	movlw	low spinners@s
 22426  01FDBC  2434               	addwf	(btemp+10)^0,w,c
 22427  01FDBE  6ED9               	movwf	fsr2l,c
 22428  01FDC0  0E01               	movlw	high spinners@s
 22429  01FDC2  2035               	addwfc	(btemp+11)^0,w,c
 22430  01FDC4  6EDA               	movwf	fsr2h,c
 22431  01FDC6  0E00               	movlw	0
 22432  01FDC8  6EDF               	movwf	indf2,c
 22433  01FDCA                     l16932:
 22434                           
 22435                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 22436                           ;stkvar	_shape @ sp[(-1)+-1]
 22437  01FDCA  0EFE               	movlw	-2
 22438  01FDCC  50E3               	movf	plusw1,w,c
 22439  01FDCE  0D14               	mullw	20
 22440  01FDD0  0E67               	movlw	low _spin
 22441  01FDD2  6E34               	movwf	(btemp+10)^0,c
 22442  01FDD4  0EF9               	movlw	high _spin
 22443  01FDD6  6E35               	movwf	(btemp+11)^0,c
 22444  01FDD8  50F3               	movf	243,w,c
 22445  01FDDA  2634               	addwf	(btemp+10)^0,f,c
 22446  01FDDC  50F4               	movf	244,w,c
 22447  01FDDE  2235               	addwfc	(btemp+11)^0,f,c
 22448                           
 22449                           ;stkvar	_shape @ sp[(-1)+-1]
 22450  01FDE0  0EFE               	movlw	-2
 22451  01FDE2  50E3               	movf	plusw1,w,c
 22452  01FDE4  6E32               	movwf	(btemp+8)^0,c
 22453  01FDE6  6A33               	clrf	(btemp+9)^0,c
 22454  01FDE8  0ECD               	movlw	low spinners@s
 22455  01FDEA  2432               	addwf	(btemp+8)^0,w,c
 22456  01FDEC  6ED9               	movwf	fsr2l,c
 22457  01FDEE  0E01               	movlw	high spinners@s
 22458  01FDF0  2033               	addwfc	(btemp+9)^0,w,c
 22459  01FDF2  6EDA               	movwf	fsr2h,c
 22460  01FDF4  50DF               	movf	indf2,w,c
 22461  01FDF6  2634               	addwf	(btemp+10)^0,f,c
 22462  01FDF8  0E00               	movlw	0
 22463  01FDFA  2235               	addwfc	(btemp+11)^0,f,c
 22464  01FDFC  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 22465  01FE02  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 22466  01FE08                     	if	0	;tblptru may be non-zero
 22467  01FE08                     	endif
 22468  01FE08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22469  01FE08  0E00               	movlw	low (__mediumconst shr (0+16))
 22470  01FE0A  6EF8               	movwf	tblptru,c
 22471  01FE0C                     	endif
 22472                           
 22473                           ;stkvar	_c @ sp[(-1)+0]
 22474  01FE0C  0008               	tblrd		*
 22475  01FE0E  0EFF               	movlw	-1
 22476  01FE10  006F FFD7 FFE3     	movff	tablat,plusw1
 22477                           
 22478                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 22479                           ;stkvar	_shape @ sp[(-1)+-1]
 22480  01FE16  0EFE               	movlw	-2
 22481  01FE18  50E3               	movf	plusw1,w,c
 22482  01FE1A  0D14               	mullw	20
 22483  01FE1C  0E67               	movlw	low _spin
 22484  01FE1E  6E34               	movwf	(btemp+10)^0,c
 22485  01FE20  0EF9               	movlw	high _spin
 22486  01FE22  6E35               	movwf	(btemp+11)^0,c
 22487  01FE24  50F3               	movf	243,w,c
 22488  01FE26  2634               	addwf	(btemp+10)^0,f,c
 22489  01FE28  50F4               	movf	244,w,c
 22490  01FE2A  2235               	addwfc	(btemp+11)^0,f,c
 22491  01FE2C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22492  01FE32  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22493  01FE38  ECFD  F005         	call	_strlen	;wreg free
 22494                           
 22495                           ;stkvar	_shape @ sp[(-1)+-1]
 22496  01FE3C  0EFE               	movlw	-2
 22497  01FE3E  50E3               	movf	plusw1,w,c
 22498  01FE40  6E34               	movwf	(btemp+10)^0,c
 22499  01FE42  6A35               	clrf	(btemp+11)^0,c
 22500  01FE44  0ECD               	movlw	low spinners@s
 22501  01FE46  2434               	addwf	(btemp+10)^0,w,c
 22502  01FE48  6ED9               	movwf	fsr2l,c
 22503  01FE4A  0E01               	movlw	high spinners@s
 22504  01FE4C  2035               	addwfc	(btemp+11)^0,w,c
 22505  01FE4E  6EDA               	movwf	fsr2h,c
 22506  01FE50  2ADF               	incf	indf2,f,c
 22507  01FE52  50DF               	movf	indf2,w,c
 22508  01FE54  6E34               	movwf	(btemp+10)^0,c
 22509  01FE56  6A35               	clrf	(btemp+11)^0,c
 22510  01FE58  502A               	movf	btemp^0,w,c
 22511  01FE5A  5C34               	subwf	(btemp+10)^0,w,c
 22512  01FE5C  502B               	movf	(btemp+1)^0,w,c
 22513  01FE5E  5835               	subwfb	(btemp+11)^0,w,c
 22514  01FE60  A0D8               	btfss	status,0,c
 22515  01FE62  D00C               	goto	l16938
 22516                           
 22517                           ;mbmc.c: 158:   s[shape] = 0;
 22518                           ;stkvar	_shape @ sp[(-1)+-1]
 22519  01FE64  0EFE               	movlw	-2
 22520  01FE66  50E3               	movf	plusw1,w,c
 22521  01FE68  6E34               	movwf	(btemp+10)^0,c
 22522  01FE6A  6A35               	clrf	(btemp+11)^0,c
 22523  01FE6C  0ECD               	movlw	low spinners@s
 22524  01FE6E  2434               	addwf	(btemp+10)^0,w,c
 22525  01FE70  6ED9               	movwf	fsr2l,c
 22526  01FE72  0E01               	movlw	high spinners@s
 22527  01FE74  2035               	addwfc	(btemp+11)^0,w,c
 22528  01FE76  6EDA               	movwf	fsr2h,c
 22529  01FE78  0E00               	movlw	0
 22530  01FE7A  6EDF               	movwf	indf2,c
 22531  01FE7C                     l16938:
 22532                           
 22533                           ;mbmc.c: 159:  return c;
 22534                           ;stkvar	_c @ sp[(-1)+0]
 22535  01FE7C  0EFF               	movlw	-1
 22536  01FE7E  006F FF8C  F02A    	movff	plusw1,btemp
 22537                           
 22538                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 22539  01FE84  52E5               	movf	postdec1,f,c
 22540  01FE86  52E5               	movf	postdec1,f,c
 22541  01FE88  52E5               	movf	postdec1,f,c
 22542  01FE8A  0012               	return		;funcret
 22543  01FE8C                     __end_of_spinners:
 22544                           	opt callstack 0
 22545                           
 22546 ;; *************** function _get_switch *****************
 22547 ;; Defined at:
 22548 ;;		line 18 in file "dio.c"
 22549 ;; Parameters:    Size  Location     Type
 22550 ;;  i               1  [STACK] const unsigned char 
 22551 ;; Auto vars:     Size  Location     Type
 22552 ;;		None
 22553 ;; Return value:  Size  Location     Type
 22554 ;;                  1  [STACK] enum E17187
 22555 ;; Registers used:
 22556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22557 ;; Tracked objects:
 22558 ;;		On entry : 0/0
 22559 ;;		On exit  : 0/0
 22560 ;;		Unchanged: 0/0
 22561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22566 ;;Total ram usage:        0 bytes
 22567 ;; Hardware stack levels used:    1
 22568 ;; Hardware stack levels required when called:   15
 22569 ;; This function calls:
 22570 ;;		Nothing
 22571 ;; This function is called by:
 22572 ;;		_main
 22573 ;;		_current_sensor_cal
 22574 ;;		_display_history
 22575 ;;		_hid_input
 22576 ;; This function uses a reentrant model
 22577 ;;
 22578                           
 22579                           	psect	text70
 22580  002330                     __ptext70:
 22581                           	opt callstack 0
 22582  002330                     _get_switch:
 22583                           	opt callstack 13
 22584                           
 22585                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 22586                           ;stkvar	_i @ sp[(0)+-1]
 22587                           
 22588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22589                           ;incstack = 0
 22590  002330  0EFF               	movlw	-1
 22591  002332  006F FF8C  F02A    	movff	plusw1,btemp
 22592  002338  0E05               	movlw	5
 22593  00233A  642A               	cpfsgt	btemp^0,c
 22594  00233C  D002               	goto	l12854
 22595                           
 22596                           ;dio.c: 21:   return SW_OFF;
 22597  00233E  0E00               	movlw	0
 22598  002340  D00A               	goto	L20
 22599  002342                     l12854:
 22600                           
 22601                           ;dio.c: 23:  return S.button[i].sw;
 22602                           ;stkvar	_i @ sp[(0)+-1]
 22603  002342  0EFF               	movlw	-1
 22604  002344  50E3               	movf	plusw1,w,c
 22605  002346  0D05               	mullw	5
 22606  002348  0EA4               	movlw	low _S
 22607  00234A  24F3               	addwf	243,w,c
 22608  00234C  6ED9               	movwf	fsr2l,c
 22609  00234E  0E01               	movlw	high _S
 22610  002350  20F4               	addwfc	prodh,w,c
 22611  002352  6EDA               	movwf	fsr2h,c
 22612  002354  50DF               	movf	indf2,w,c
 22613  002356                     L20:
 22614  002356  6E2A               	movwf	btemp^0,c
 22615                           
 22616                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22617  002358  52E5               	movf	postdec1,f,c
 22618  00235A  0012               	return		;funcret
 22619  00235C                     __end_of_get_switch:
 22620                           	opt callstack 0
 22621                           
 22622 ;; *************** function _clear_adc_scan *****************
 22623 ;; Defined at:
 22624 ;;		line 103 in file "daq.c"
 22625 ;; Parameters:    Size  Location     Type
 22626 ;;		None
 22627 ;; Auto vars:     Size  Location     Type
 22628 ;;		None
 22629 ;; Return value:  Size  Location     Type
 22630 ;;                  1  [STACK] void 
 22631 ;; Registers used:
 22632 ;;		None
 22633 ;; Tracked objects:
 22634 ;;		On entry : 0/0
 22635 ;;		On exit  : 3F/1
 22636 ;;		Unchanged: 0/0
 22637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22642 ;;Total ram usage:        0 bytes
 22643 ;; Hardware stack levels used:    1
 22644 ;; Hardware stack levels required when called:   15
 22645 ;; This function calls:
 22646 ;;		Nothing
 22647 ;; This function is called by:
 22648 ;;		_main
 22649 ;;		_current_sensor_cal
 22650 ;;		_update_adc_result
 22651 ;; This function uses a reentrant model
 22652 ;;
 22653                           
 22654                           	psect	text71
 22655  002A36                     __ptext71:
 22656                           	opt callstack 0
 22657  002A36                     _clear_adc_scan:
 22658                           	opt callstack 13
 22659                           
 22660                           ;daq.c: 105:  R.done = 0;
 22661                           
 22662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22663                           ;incstack = 0
 22664  002A36  0101               	movlb	1	; () banked
 22665  002A38  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 22666                           
 22667                           ; BSR set to: 1
 22668                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22669  002A3A  0012               	return		;funcret
 22670  002A3C                     __end_of_clear_adc_scan:
 22671                           	opt callstack 0
 22672                           
 22673 ;; *************** function _cal_current_zero *****************
 22674 ;; Defined at:
 22675 ;;		line 329 in file "daq.c"
 22676 ;; Parameters:    Size  Location     Type
 22677 ;;  mode            1  [STACK] const _Bool 
 22678 ;;  cb              2  [STACK] const short 
 22679 ;;  cp              2  [STACK] const short 
 22680 ;; Auto vars:     Size  Location     Type
 22681 ;;		None
 22682 ;; Return value:  Size  Location     Type
 22683 ;;                  1  [STACK] _Bool 
 22684 ;; Registers used:
 22685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22686 ;; Tracked objects:
 22687 ;;		On entry : 0/1
 22688 ;;		On exit  : 0/0
 22689 ;;		Unchanged: 0/0
 22690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22695 ;;Total ram usage:        0 bytes
 22696 ;; Hardware stack levels used:    1
 22697 ;; Hardware stack levels required when called:   16
 22698 ;; This function calls:
 22699 ;;		_check_range
 22700 ;; This function is called by:
 22701 ;;		_current_sensor_cal
 22702 ;; This function uses a reentrant model
 22703 ;;
 22704                           
 22705                           	psect	text72
 22706  000DCE                     __ptext72:
 22707                           	opt callstack 0
 22708  000DCE                     _cal_current_zero:
 22709                           	opt callstack 13
 22710                           
 22711                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 22712                           
 22713                           ; BSR set to: 1
 22714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22715                           ;incstack = 0
 22716  000DCE  0EA0               	movlw	160
 22717  000DD0  6EE6               	movwf	postinc1,c
 22718  000DD2  0E0F               	movlw	15
 22719  000DD4  6EE6               	movwf	postinc1,c
 22720  000DD6  0E64               	movlw	100
 22721  000DD8  6EE6               	movwf	postinc1,c
 22722  000DDA  0E00               	movlw	0
 22723  000DDC  6EE6               	movwf	postinc1,c
 22724                           
 22725                           ;stkvar	_cb @ sp[(-4)+-3]
 22726  000DDE  0EF9               	movlw	-7
 22727  000DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 22728  000DE6  006F FF8F FFE6     	movff	plusw1,postinc1
 22729  000DEC  EC1C  F009         	call	_check_range	;wreg free
 22730  000DF0  502A               	movf	btemp^0,w,c
 22731  000DF2  A4D8               	btfss	status,2,c
 22732  000DF4  D002               	goto	l13554
 22733  000DF6                     u12620:
 22734                           
 22735                           ;daq.c: 333:   return 0;
 22736  000DF6  0E00               	movlw	0
 22737  000DF8  D019               	goto	L21
 22738  000DFA                     l13554:
 22739                           
 22740                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 22741  000DFA  0EA0               	movlw	160
 22742  000DFC  6EE6               	movwf	postinc1,c
 22743  000DFE  0E0F               	movlw	15
 22744  000E00  6EE6               	movwf	postinc1,c
 22745  000E02  0E64               	movlw	100
 22746  000E04  6EE6               	movwf	postinc1,c
 22747  000E06  0E00               	movlw	0
 22748  000E08  6EE6               	movwf	postinc1,c
 22749                           
 22750                           ;stkvar	_cp @ sp[(-4)+-5]
 22751  000E0A  0EF7               	movlw	-9
 22752  000E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 22753  000E12  006F FF8F FFE6     	movff	plusw1,postinc1
 22754  000E18  EC1C  F009         	call	_check_range	;wreg free
 22755  000E1C  502A               	movf	btemp^0,w,c
 22756  000E1E  B4D8               	btfsc	status,2,c
 22757  000E20  D7EA               	goto	u12620
 22758                           
 22759                           ;daq.c: 338:  if (!mode)
 22760                           ;stkvar	_mode @ sp[(0)+-1]
 22761  000E22  0EFF               	movlw	-1
 22762  000E24  50E3               	movf	plusw1,w,c
 22763  000E26  A4D8               	btfss	status,2,c
 22764  000E28  D003               	goto	l13566
 22765  000E2A                     u12640:
 22766                           
 22767                           ;daq.c: 339:   return 1;
 22768  000E2A  0E01               	movlw	1
 22769  000E2C                     L21:
 22770  000E2C  6E2A               	movwf	btemp^0,c
 22771  000E2E  D013               	goto	l2058
 22772  000E30                     l13566:
 22773                           
 22774                           ;daq.c: 341:  R.n_offset[0] = cb;
 22775                           ;stkvar	_cb @ sp[(0)+-3]
 22776  000E30  0EFD               	movlw	-3
 22777  000E32  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 22778  000E38  0EFE               	movlw	-2
 22779  000E3A  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 22780                           
 22781                           ;daq.c: 342:  R.n_offset[1] = cp;
 22782                           ;stkvar	_cp @ sp[(0)+-5]
 22783  000E40  0EFB               	movlw	-5
 22784  000E42  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 22785  000E48  0EFC               	movlw	-4
 22786  000E4A  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 22787                           
 22788                           ;daq.c: 343:  R.c_zero_cal = 1;
 22789  000E50  0101               	movlb	1	; () banked
 22790  000E52  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 22791  000E54  D7EA               	goto	u12640
 22792  000E56                     l2058:
 22793                           
 22794                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 22795  000E56  0EFB               	movlw	251
 22796  000E58  26E1               	addwf	fsr1l,f,c
 22797  000E5A  0EFF               	movlw	255
 22798  000E5C  22E2               	addwfc	fsr1h,f,c
 22799  000E5E  0012               	return		;funcret
 22800  000E60                     __end_of_cal_current_zero:
 22801                           	opt callstack 0
 22802                           
 22803 ;; *************** function _check_range *****************
 22804 ;; Defined at:
 22805 ;;		line 317 in file "daq.c"
 22806 ;; Parameters:    Size  Location     Type
 22807 ;;  value           2  [STACK] const short 
 22808 ;;  window          2  [STACK] const short 
 22809 ;;  standard        2  [STACK] const short 
 22810 ;; Auto vars:     Size  Location     Type
 22811 ;;		None
 22812 ;; Return value:  Size  Location     Type
 22813 ;;                  1  [STACK] _Bool 
 22814 ;; Registers used:
 22815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22816 ;; Tracked objects:
 22817 ;;		On entry : 0/1
 22818 ;;		On exit  : 0/0
 22819 ;;		Unchanged: 0/0
 22820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22825 ;;Total ram usage:        0 bytes
 22826 ;; Hardware stack levels used:    1
 22827 ;; Hardware stack levels required when called:   15
 22828 ;; This function calls:
 22829 ;;		Nothing
 22830 ;; This function is called by:
 22831 ;;		_cal_current_zero
 22832 ;; This function uses a reentrant model
 22833 ;;
 22834                           
 22835                           	psect	text73
 22836  001238                     __ptext73:
 22837                           	opt callstack 0
 22838  001238                     _check_range:
 22839                           	opt callstack 13
 22840                           
 22841                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 22842                           ;stkvar	_value @ sp[(0)+-2]
 22843                           ;stkvar	_window @ sp[(0)+-4]
 22844                           ;stkvar	_standard @ sp[(0)+-6]
 22845                           
 22846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22847                           ;incstack = 0
 22848  001238  0EFA               	movlw	-6
 22849  00123A  006F FF8C  F034    	movff	plusw1,btemp+10
 22850  001240  0EFB               	movlw	-5
 22851  001242  006F FF8C  F035    	movff	plusw1,btemp+11
 22852  001248  0EFC               	movlw	-4
 22853  00124A  50E3               	movf	plusw1,w,c
 22854  00124C  2634               	addwf	(btemp+10)^0,f,c
 22855  00124E  0EFD               	movlw	-3
 22856  001250  50E3               	movf	plusw1,w,c
 22857  001252  2235               	addwfc	(btemp+11)^0,f,c
 22858  001254  0EFE               	movlw	-2
 22859  001256  50E3               	movf	plusw1,w,c
 22860  001258  5C34               	subwf	(btemp+10)^0,w,c
 22861  00125A  5035               	movf	(btemp+11)^0,w,c
 22862  00125C  0A80               	xorlw	128
 22863  00125E  6E2A               	movwf	btemp^0,c
 22864  001260  0EFF               	movlw	-1
 22865  001262  50E3               	movf	plusw1,w,c
 22866  001264  0A80               	xorlw	128
 22867  001266  582A               	subwfb	btemp^0,w,c
 22868  001268  B0D8               	btfsc	status,0,c
 22869  00126A  D002               	goto	l12926
 22870  00126C                     u12350:
 22871                           
 22872                           ;daq.c: 320:   return 0;
 22873  00126C  0E00               	movlw	0
 22874  00126E  D01E               	goto	L22
 22875  001270                     l12926:
 22876                           
 22877                           ;daq.c: 321:  if (value < (standard - window))
 22878                           ;stkvar	_window @ sp[(0)+-4]
 22879                           ;stkvar	_standard @ sp[(0)+-6]
 22880  001270  0EFA               	movlw	-6
 22881  001272  006F FF8C  F034    	movff	plusw1,btemp+10
 22882  001278  0EFB               	movlw	-5
 22883  00127A  006F FF8C  F035    	movff	plusw1,btemp+11
 22884  001280  0EFC               	movlw	-4
 22885  001282  50E3               	movf	plusw1,w,c
 22886  001284  5E34               	subwf	(btemp+10)^0,f,c
 22887  001286  0EFD               	movlw	-3
 22888  001288  50E3               	movf	plusw1,w,c
 22889  00128A  5A35               	subwfb	(btemp+11)^0,f,c
 22890                           
 22891                           ;stkvar	_value @ sp[(0)+-2]
 22892  00128C  0EFE               	movlw	-2
 22893  00128E  006F FF8C  F02A    	movff	plusw1,btemp
 22894  001294  5034               	movf	(btemp+10)^0,w,c
 22895  001296  5C2A               	subwf	btemp^0,w,c
 22896  001298  0EFF               	movlw	-1
 22897  00129A  50E3               	movf	plusw1,w,c
 22898  00129C  0A80               	xorlw	128
 22899  00129E  6E2A               	movwf	btemp^0,c
 22900  0012A0  5035               	movf	(btemp+11)^0,w,c
 22901  0012A2  0A80               	xorlw	128
 22902  0012A4  582A               	subwfb	btemp^0,w,c
 22903  0012A6  A0D8               	btfss	status,0,c
 22904  0012A8  D7E1               	goto	u12350
 22905                           
 22906                           ;daq.c: 323:  return 1;
 22907  0012AA  0E01               	movlw	1
 22908  0012AC                     L22:
 22909  0012AC  6E2A               	movwf	btemp^0,c
 22910                           
 22911                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 22912  0012AE  0EFA               	movlw	250
 22913  0012B0  26E1               	addwf	fsr1l,f,c
 22914  0012B2  0EFF               	movlw	255
 22915  0012B4  22E2               	addwfc	fsr1h,f,c
 22916  0012B6  0012               	return		;funcret
 22917  0012B8                     __end_of_check_range:
 22918                           	opt callstack 0
 22919                           
 22920 ;; *************** function _convert_adc_data *****************
 22921 ;; Defined at:
 22922 ;;		line 51 in file "mbmc.c"
 22923 ;; Parameters:    Size  Location     Type
 22924 ;;		None
 22925 ;; Auto vars:     Size  Location     Type
 22926 ;;  i               1  [STACK] unsigned char 
 22927 ;; Return value:  Size  Location     Type
 22928 ;;                  1  [STACK] void 
 22929 ;; Registers used:
 22930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22931 ;; Tracked objects:
 22932 ;;		On entry : 0/2
 22933 ;;		On exit  : 0/0
 22934 ;;		Unchanged: 0/0
 22935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22940 ;;Total ram usage:        0 bytes
 22941 ;; Hardware stack levels used:    1
 22942 ;; Hardware stack levels required when called:   18
 22943 ;; This function calls:
 22944 ;;		_conv_raw_result
 22945 ;;		_lp_filter
 22946 ;; This function is called by:
 22947 ;;		_main
 22948 ;; This function uses a reentrant model
 22949 ;;
 22950                           
 22951                           	psect	text74
 22952  00073E                     __ptext74:
 22953                           	opt callstack 0
 22954  00073E                     _convert_adc_data:
 22955                           	opt callstack 0
 22956                           
 22957                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22958  00073E  52E6               	movf	postinc1,f,c
 22959                           
 22960                           ;mbmc.c: 53:  uint8_t i = 0;
 22961                           ;stkvar	_i @ sp[(-1)+0]
 22962                           
 22963                           ;incstack = 0
 22964  000740  0EFF               	movlw	-1
 22965  000742  6AE3               	clrf	plusw1,c
 22966  000744                     l14368:
 22967                           
 22968                           ;mbmc.c: 56:   if (V.calib) {
 22969  000744  0102               	movlb	2	; () banked
 22970  000746  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 22971  000748  B4D8               	btfsc	status,2,c
 22972  00074A  D01B               	goto	l14372
 22973                           
 22974                           ; BSR set to: 2
 22975                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 22976  00074C  0E01               	movlw	1
 22977  00074E  6EE6               	movwf	postinc1,c
 22978                           
 22979                           ;stkvar	_i @ sp[(-2)+0]
 22980  000750  0EFE               	movlw	-2
 22981  000752  50E3               	movf	plusw1,w,c
 22982  000754  6EE6               	movwf	postinc1,c
 22983  000756  0E01               	movlw	1
 22984  000758  6EE6               	movwf	postinc1,c
 22985                           
 22986                           ;stkvar	_i @ sp[(-4)+0]
 22987  00075A  0EFC               	movlw	-4
 22988  00075C  50E3               	movf	plusw1,w,c
 22989  00075E  6EE6               	movwf	postinc1,c
 22990  000760  EC76  F0C3         	call	_conv_raw_result	;wreg free
 22991  000764  0060  F0AB  FFE6   	movff	btemp,postinc1
 22992  00076A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22993  000770  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 22994  000776  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 22995  00077C  ECEC  F0EC         	call	_lp_filter	;wreg free
 22996  000780  D01A               	goto	L23
 22997  000782                     l14372:
 22998                           
 22999                           ; BSR set to: 2
 23000                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 23001  000782  0E00               	movlw	0
 23002  000784  6EE6               	movwf	postinc1,c
 23003                           
 23004                           ;stkvar	_i @ sp[(-2)+0]
 23005  000786  0EFE               	movlw	-2
 23006  000788  50E3               	movf	plusw1,w,c
 23007  00078A  6EE6               	movwf	postinc1,c
 23008  00078C  0E00               	movlw	0
 23009  00078E  6EE6               	movwf	postinc1,c
 23010                           
 23011                           ;stkvar	_i @ sp[(-4)+0]
 23012  000790  0EFC               	movlw	-4
 23013  000792  50E3               	movf	plusw1,w,c
 23014  000794  6EE6               	movwf	postinc1,c
 23015  000796  EC76  F0C3         	call	_conv_raw_result	;wreg free
 23016  00079A  0060  F0AB  FFE6   	movff	btemp,postinc1
 23017  0007A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23018  0007A6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23019  0007AC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23020  0007B2  ECEC  F0EC         	call	_lp_filter	;wreg free
 23021  0007B6                     L23:
 23022                           
 23023                           ;stkvar	_i @ sp[(-1)+0]
 23024  0007B6  0EFF               	movlw	-1
 23025  0007B8  50E3               	movf	plusw1,w,c
 23026  0007BA  0D04               	mullw	4
 23027  0007BC  0EFF               	movlw	low _C
 23028  0007BE  24F3               	addwf	243,w,c
 23029  0007C0  6ED9               	movwf	fsr2l,c
 23030  0007C2  0E08               	movlw	high _C
 23031  0007C4  20F4               	addwfc	prodh,w,c
 23032  0007C6  6EDA               	movwf	fsr2h,c
 23033  0007C8  0060  F0AB  FFDE   	movff	btemp,postinc2
 23034  0007CE  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 23035  0007D4  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 23036  0007DA  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 23037                           
 23038                           ;mbmc.c: 61:  } while (++i < 16);
 23039                           ;stkvar	_i @ sp[(-1)+0]
 23040  0007E0  0EFF               	movlw	-1
 23041  0007E2  2AE3               	incf	plusw1,f,c
 23042  0007E4  0EFF               	movlw	-1
 23043  0007E6  006F FF8C  F02A    	movff	plusw1,btemp
 23044  0007EC  0E0F               	movlw	15
 23045  0007EE  642A               	cpfsgt	btemp^0,c
 23046  0007F0  D7A9               	goto	l14368
 23047                           
 23048                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23049  0007F2  52E5               	movf	postdec1,f,c
 23050  0007F4  0012               	return		;funcret
 23051  0007F6                     __end_of_convert_adc_data:
 23052                           	opt callstack 0
 23053                           
 23054 ;; *************** function _clear_hid_pflags *****************
 23055 ;; Defined at:
 23056 ;;		line 67 in file "hid.c"
 23057 ;; Parameters:    Size  Location     Type
 23058 ;;  h               2  [STACK] PTR struct H_data
 23059 ;;		 -> H(9), 
 23060 ;; Auto vars:     Size  Location     Type
 23061 ;;		None
 23062 ;; Return value:  Size  Location     Type
 23063 ;;                  1  [STACK] void 
 23064 ;; Registers used:
 23065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 23066 ;; Tracked objects:
 23067 ;;		On entry : 3E/0
 23068 ;;		On exit  : 0/0
 23069 ;;		Unchanged: 0/0
 23070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23075 ;;Total ram usage:        0 bytes
 23076 ;; Hardware stack levels used:    1
 23077 ;; Hardware stack levels required when called:   15
 23078 ;; This function calls:
 23079 ;;		Nothing
 23080 ;; This function is called by:
 23081 ;;		_main
 23082 ;; This function uses a reentrant model
 23083 ;;
 23084                           
 23085                           	psect	text75
 23086  00163E                     __ptext75:
 23087                           	opt callstack 0
 23088  00163E                     _clear_hid_pflags:
 23089                           	opt callstack 15
 23090                           
 23091                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 23092                           ;stkvar	_h @ sp[(0)+-2]
 23093                           
 23094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23095                           ;incstack = 0
 23096  00163E  0EFE               	movlw	-2
 23097  001640  006F FF8C  F034    	movff	plusw1,btemp+10
 23098  001646  0EFF               	movlw	-1
 23099  001648  006F FF8C  F035    	movff	plusw1,btemp+11
 23100  00164E  0E03               	movlw	3
 23101  001650  2434               	addwf	(btemp+10)^0,w,c
 23102  001652  6ED9               	movwf	fsr2l,c
 23103  001654  0E00               	movlw	0
 23104  001656  2035               	addwfc	(btemp+11)^0,w,c
 23105  001658  6EDA               	movwf	fsr2h,c
 23106  00165A  0E00               	movlw	0
 23107  00165C  6EDF               	movwf	indf2,c
 23108                           
 23109                           ;hid.c: 70:  h->enter_p = SW_OFF;
 23110                           ;stkvar	_h @ sp[(0)+-2]
 23111  00165E  0EFE               	movlw	-2
 23112  001660  006F FF8C  F034    	movff	plusw1,btemp+10
 23113  001666  0EFF               	movlw	-1
 23114  001668  006F FF8C  F035    	movff	plusw1,btemp+11
 23115  00166E  0E05               	movlw	5
 23116  001670  2434               	addwf	(btemp+10)^0,w,c
 23117  001672  6ED9               	movwf	fsr2l,c
 23118  001674  0E00               	movlw	0
 23119  001676  2035               	addwfc	(btemp+11)^0,w,c
 23120  001678  6EDA               	movwf	fsr2h,c
 23121  00167A  0E00               	movlw	0
 23122  00167C  6EDF               	movwf	indf2,c
 23123                           
 23124                           ;hid.c: 71:  h->calib_p = SW_OFF;
 23125                           ;stkvar	_h @ sp[(0)+-2]
 23126  00167E  0EFE               	movlw	-2
 23127  001680  006F FF8C  F034    	movff	plusw1,btemp+10
 23128  001686  0EFF               	movlw	-1
 23129  001688  006F FF8C  F035    	movff	plusw1,btemp+11
 23130  00168E  0E07               	movlw	7
 23131  001690  2434               	addwf	(btemp+10)^0,w,c
 23132  001692  6ED9               	movwf	fsr2l,c
 23133  001694  0E00               	movlw	0
 23134  001696  2035               	addwfc	(btemp+11)^0,w,c
 23135  001698  6EDA               	movwf	fsr2h,c
 23136  00169A  0E00               	movlw	0
 23137  00169C  6EDF               	movwf	indf2,c
 23138                           
 23139                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 23140  00169E  52E5               	movf	postdec1,f,c
 23141  0016A0  52E5               	movf	postdec1,f,c
 23142  0016A2  0012               	return		;funcret
 23143  0016A4                     __end_of_clear_hid_pflags:
 23144                           	opt callstack 0
 23145                           
 23146 ;; *************** function _check_help *****************
 23147 ;; Defined at:
 23148 ;;		line 40 in file "mconfig.c"
 23149 ;; Parameters:    Size  Location     Type
 23150 ;;  flipper         1  [STACK] const _Bool 
 23151 ;; Auto vars:     Size  Location     Type
 23152 ;;  estatus         1    0        _Bool 
 23153 ;; Return value:  Size  Location     Type
 23154 ;;                  1  [STACK] _Bool 
 23155 ;; Registers used:
 23156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23157 ;; Tracked objects:
 23158 ;;		On entry : 3F/2
 23159 ;;		On exit  : 0/0
 23160 ;;		Unchanged: 0/0
 23161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23166 ;;Total ram usage:        0 bytes
 23167 ;; Hardware stack levels used:    1
 23168 ;; Hardware stack levels required when called:   27
 23169 ;; This function calls:
 23170 ;;		_StartTimer
 23171 ;;		_TimerDone
 23172 ;;		_display_help
 23173 ;;		_display_info
 23174 ;;		_get_vterm_ptr
 23175 ;;		_help_button
 23176 ;;		_mode_lamp_bright
 23177 ;;		_mode_lamp_dim
 23178 ;;		_set_display_info
 23179 ;;		_set_temp_display_help
 23180 ;;		_set_vterm
 23181 ;;		_sprintf
 23182 ;;		_update_lcd
 23183 ;;		_vterm_dump
 23184 ;; This function is called by:
 23185 ;;		_main
 23186 ;; This function uses a reentrant model
 23187 ;;
 23188                           
 23189                           	psect	text76
 23190  01D3F8                     __ptext76:
 23191                           	opt callstack 0
 23192  01D3F8                     _check_help:
 23193                           	opt callstack 3
 23194                           
 23195                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 23196                           
 23197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23198                           ;incstack = 0
 23199  01D3F8  EC32  F010         	call	_help_button	;wreg free
 23200  01D3FC  502A               	movf	btemp^0,w,c
 23201  01D3FE  B4D8               	btfsc	status,2,c
 23202  01D400  D0D0               	goto	l17376
 23203  01D402  EC09  F015         	call	_display_info	;wreg free
 23204  01D406  042A               	decf	btemp^0,w,c
 23205  01D408  B4D8               	btfsc	status,2,c
 23206  01D40A  D0CB               	goto	l17376
 23207                           
 23208                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 23209  01D40C  0EDC               	movlw	220
 23210  01D40E  6EE6               	movwf	postinc1,c
 23211  01D410  0E05               	movlw	5
 23212  01D412  6EE6               	movwf	postinc1,c
 23213  01D414  0E0B               	movlw	11
 23214  01D416  6EE6               	movwf	postinc1,c
 23215  01D418  EC78  F00F         	call	_StartTimer	;wreg free
 23216                           
 23217                           ;mconfig.c: 48:   if (V.debug)
 23218  01D41C  0102               	movlb	2	; () banked
 23219  01D41E  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 23220                           
 23221                           ; BSR set to: 2
 23222                           ;mconfig.c: 49:    vterm_dump();
 23223  01D420  EC30  F0F0         	call	_vterm_dump	;wreg free
 23224                           
 23225                           ;mconfig.c: 51:   set_vterm(1);
 23226  01D424  0E01               	movlw	1
 23227  01D426  6EE6               	movwf	postinc1,c
 23228  01D428  ECF9  F013         	call	_set_vterm	;wreg free
 23229                           
 23230                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 23231  01D42C  EC09  F015         	call	_display_info	;wreg free
 23232  01D430  502A               	movf	btemp^0,w,c
 23233  01D432  6EE6               	movwf	postinc1,c
 23234  01D434  ECA9  F014         	call	_set_temp_display_help	;wreg free
 23235                           
 23236                           ; BSR set to: 2
 23237                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 23238  01D438  0E01               	movlw	1
 23239  01D43A  6EE6               	movwf	postinc1,c
 23240  01D43C  EC08  F014         	call	_set_display_info	;wreg free
 23241                           
 23242                           ;mconfig.c: 54:   if (flipper) {
 23243                           ;stkvar	_flipper @ sp[(0)+-1]
 23244  01D440  0EFF               	movlw	-1
 23245  01D442  50E3               	movf	plusw1,w,c
 23246  01D444  B4D8               	btfsc	status,2,c
 23247  01D446  D019               	goto	l17362
 23248                           
 23249                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 23250  01D448  0EB6               	movlw	low STR_74
 23251  01D44A  6EE6               	movwf	postinc1,c
 23252  01D44C  0EFF               	movlw	high STR_74
 23253  01D44E  6EE6               	movwf	postinc1,c
 23254  01D450  0E71               	movlw	low STR_76
 23255  01D452  6EE6               	movwf	postinc1,c
 23256  01D454  0EFF               	movlw	high STR_76
 23257  01D456  6EE6               	movwf	postinc1,c
 23258  01D458  0E01               	movlw	1
 23259  01D45A  6EE6               	movwf	postinc1,c
 23260  01D45C  0E00               	movlw	0
 23261  01D45E  6EE6               	movwf	postinc1,c
 23262  01D460  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23263  01D464  0060  F0AB  FFE6   	movff	btemp,postinc1
 23264  01D46A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23265  01D470  0E06               	movlw	6
 23266  01D472  6EE6               	movwf	postinc1,c
 23267  01D474  EC4F  F0FD         	call	_sprintf	;wreg free
 23268                           
 23269                           ;mconfig.c: 56:   } else {
 23270  01D478  D018               	goto	l1829
 23271  01D47A                     l17362:
 23272                           
 23273                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 23274  01D47A  0ECC               	movlw	low STR_75
 23275  01D47C  6EE6               	movwf	postinc1,c
 23276  01D47E  0EFF               	movlw	high STR_75
 23277  01D480  6EE6               	movwf	postinc1,c
 23278  01D482  0E71               	movlw	low STR_76
 23279  01D484  6EE6               	movwf	postinc1,c
 23280  01D486  0EFF               	movlw	high STR_76
 23281  01D488  6EE6               	movwf	postinc1,c
 23282  01D48A  0E01               	movlw	1
 23283  01D48C  6EE6               	movwf	postinc1,c
 23284  01D48E  0E00               	movlw	0
 23285  01D490  6EE6               	movwf	postinc1,c
 23286  01D492  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23287  01D496  0060  F0AB  FFE6   	movff	btemp,postinc1
 23288  01D49C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23289  01D4A2  0E06               	movlw	6
 23290  01D4A4  6EE6               	movwf	postinc1,c
 23291  01D4A6  EC4F  F0FD         	call	_sprintf	;wreg free
 23292  01D4AA                     l1829:
 23293                           
 23294                           ; BSR set to: 0
 23295                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 23296  01D4AA  0102               	movlb	2	; () banked
 23297  01D4AC  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23298  01D4AE  32E8               	rrcf	wreg,f,c
 23299  01D4B0  32E8               	rrcf	wreg,f,c
 23300  01D4B2  0B03               	andlw	3
 23301  01D4B4  0D2C               	mullw	44
 23302  01D4B6  0E16               	movlw	22
 23303  01D4B8  26F3               	addwf	243,f,c
 23304  01D4BA  0E00               	movlw	0
 23305  01D4BC  22F4               	addwfc	244,f,c
 23306  01D4BE  0EB7               	movlw	low _T
 23307  01D4C0  6E34               	movwf	(btemp+10)^0,c
 23308  01D4C2  0EF8               	movlw	high _T
 23309  01D4C4  6E35               	movwf	(btemp+11)^0,c
 23310  01D4C6  50F3               	movf	243,w,c
 23311  01D4C8  2634               	addwf	(btemp+10)^0,f,c
 23312  01D4CA  50F4               	movf	244,w,c
 23313  01D4CC  2235               	addwfc	(btemp+11)^0,f,c
 23314  01D4CE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23315  01D4D4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23316  01D4DA  0EC2               	movlw	low STR_78
 23317  01D4DC  6EE6               	movwf	postinc1,c
 23318  01D4DE  0EFF               	movlw	high STR_78
 23319  01D4E0  6EE6               	movwf	postinc1,c
 23320  01D4E2  0E01               	movlw	1
 23321  01D4E4  6EE6               	movwf	postinc1,c
 23322  01D4E6  0E01               	movlw	1
 23323  01D4E8  6EE6               	movwf	postinc1,c
 23324  01D4EA  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23325  01D4EE  0060  F0AB  FFE6   	movff	btemp,postinc1
 23326  01D4F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23327  01D4FA  0E06               	movlw	6
 23328  01D4FC  6EE6               	movwf	postinc1,c
 23329  01D4FE  EC4F  F0FD         	call	_sprintf	;wreg free
 23330                           
 23331                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 23332  01D502  0102               	movlb	2	; () banked
 23333  01D504  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23334  01D506  32E8               	rrcf	wreg,f,c
 23335  01D508  32E8               	rrcf	wreg,f,c
 23336  01D50A  0B03               	andlw	3
 23337  01D50C  0D2C               	mullw	44
 23338  01D50E  0EB7               	movlw	low _T
 23339  01D510  6E34               	movwf	(btemp+10)^0,c
 23340  01D512  0EF8               	movlw	high _T
 23341  01D514  6E35               	movwf	(btemp+11)^0,c
 23342  01D516  50F3               	movf	243,w,c
 23343  01D518  2634               	addwf	(btemp+10)^0,f,c
 23344  01D51A  50F4               	movf	244,w,c
 23345  01D51C  2235               	addwfc	(btemp+11)^0,f,c
 23346  01D51E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23347  01D524  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23348  01D52A  0EC2               	movlw	low STR_78
 23349  01D52C  6EE6               	movwf	postinc1,c
 23350  01D52E  0EFF               	movlw	high STR_78
 23351  01D530  6EE6               	movwf	postinc1,c
 23352  01D532  0E01               	movlw	1
 23353  01D534  6EE6               	movwf	postinc1,c
 23354  01D536  0E02               	movlw	2
 23355  01D538  6EE6               	movwf	postinc1,c
 23356  01D53A  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23357  01D53E  0060  F0AB  FFE6   	movff	btemp,postinc1
 23358  01D544  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23359  01D54A  0E06               	movlw	6
 23360  01D54C  6EE6               	movwf	postinc1,c
 23361  01D54E  EC4F  F0FD         	call	_sprintf	;wreg free
 23362                           
 23363                           ; BSR set to: 0
 23364                           ;mconfig.c: 61:   V.help_id++;
 23365  01D552  EE20  F29F         	lfsr	2,_V+152	;volatile
 23366  01D556  38DF               	swapf	223,w,c
 23367  01D558  6E35               	movwf	(btemp+11)^0,c
 23368  01D55A  3235               	rrcf	(btemp+11)^0,f,c
 23369  01D55C  3035               	rrcf	(btemp+11)^0,w,c
 23370  01D55E  0B03               	andlw	3
 23371  01D560  6E35               	movwf	(btemp+11)^0,c
 23372  01D562  2A35               	incf	(btemp+11)^0,f,c
 23373  01D564  3A35               	swapf	(btemp+11)^0,f,c
 23374  01D566  3635               	rlcf	(btemp+11)^0,f,c
 23375  01D568  3635               	rlcf	(btemp+11)^0,f,c
 23376  01D56A  50DF               	movf	223,w,c
 23377  01D56C  1835               	xorwf	(btemp+11)^0,w,c
 23378  01D56E  0B3F               	andlw	-193
 23379  01D570  1835               	xorwf	(btemp+11)^0,w,c
 23380  01D572  6EDF               	movwf	223,c
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 23384  01D574  0EB8               	movlw	184
 23385  01D576  6EE6               	movwf	postinc1,c
 23386  01D578  0E0B               	movlw	11
 23387  01D57A  6EE6               	movwf	postinc1,c
 23388  01D57C  0E09               	movlw	9
 23389  01D57E  6EE6               	movwf	postinc1,c
 23390  01D580  EC78  F00F         	call	_StartTimer	;wreg free
 23391                           
 23392                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 23393  01D584  0EB8               	movlw	184
 23394  01D586  6EE6               	movwf	postinc1,c
 23395  01D588  0E0B               	movlw	11
 23396  01D58A  6EE6               	movwf	postinc1,c
 23397  01D58C  0E07               	movlw	7
 23398  01D58E  6EE6               	movwf	postinc1,c
 23399  01D590  EC78  F00F         	call	_StartTimer	;wreg free
 23400                           
 23401                           ;mconfig.c: 64:   mode_lamp_bright();
 23402  01D594  ECC7  F014         	call	_mode_lamp_bright	;wreg free
 23403                           
 23404                           ;mconfig.c: 65:   update_lcd(1);
 23405  01D598  0E01               	movlw	1
 23406  01D59A  6EE6               	movwf	postinc1,c
 23407  01D59C  EC01  F0F6         	call	_update_lcd	;wreg free
 23408                           
 23409                           ;mconfig.c: 67:  } else {
 23410  01D5A0  D032               	goto	l1830
 23411  01D5A2                     l17376:
 23412                           
 23413                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 23414  01D5A2  0E09               	movlw	9
 23415  01D5A4  6EE6               	movwf	postinc1,c
 23416  01D5A6  EC03  F012         	call	_TimerDone	;wreg free
 23417  01D5AA  502A               	movf	btemp^0,w,c
 23418  01D5AC  B4D8               	btfsc	status,2,c
 23419  01D5AE  D02B               	goto	l1830
 23420                           
 23421                           ;mconfig.c: 69:    set_vterm(0);
 23422  01D5B0  0E00               	movlw	0
 23423  01D5B2  6EE6               	movwf	postinc1,c
 23424  01D5B4  ECF9  F013         	call	_set_vterm	;wreg free
 23425                           
 23426                           ;mconfig.c: 70:    V.help = 0;
 23427  01D5B8  0102               	movlb	2	; () banked
 23428  01D5BA  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 23429                           
 23430                           ; BSR set to: 2
 23431                           ;mconfig.c: 71:    set_display_info(display_help());
 23432  01D5BC  EC0D  F015         	call	_display_help	;wreg free
 23433  01D5C0  502A               	movf	btemp^0,w,c
 23434  01D5C2  6EE6               	movwf	postinc1,c
 23435  01D5C4  EC08  F014         	call	_set_display_info	;wreg free
 23436                           
 23437                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 23438  01D5C8  0060  FA67  FFE6   	movff	_V+146,postinc1
 23439  01D5CE  0060  FA6B  FFE6   	movff	_V+147,postinc1
 23440  01D5D4  EC31  F014         	call	_mode_lamp_dim	;wreg free
 23441                           
 23442                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 23443  01D5D8  0E0B               	movlw	11
 23444  01D5DA  6EE6               	movwf	postinc1,c
 23445  01D5DC  EC03  F012         	call	_TimerDone	;wreg free
 23446  01D5E0  502A               	movf	btemp^0,w,c
 23447  01D5E2  B4D8               	btfsc	status,2,c
 23448  01D5E4  D010               	goto	l1830
 23449                           
 23450                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 23451  01D5E6  0102               	movlb	2	; () banked
 23452  01D5E8  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 23453  01D5EA  A4D8               	btfss	status,2,c
 23454  01D5EC  D002               	goto	u16980
 23455  01D5EE  0E01               	movlw	1
 23456  01D5F0  D001               	goto	u16990
 23457  01D5F2                     u16980:
 23458  01D5F2  0E00               	movlw	0
 23459  01D5F4                     u16990:
 23460  01D5F4  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 23461                           
 23462                           ; BSR set to: 2
 23463                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 23464  01D5F6  0EDC               	movlw	220
 23465  01D5F8  6EE6               	movwf	postinc1,c
 23466  01D5FA  0E05               	movlw	5
 23467  01D5FC  6EE6               	movwf	postinc1,c
 23468  01D5FE  0E0B               	movlw	11
 23469  01D600  6EE6               	movwf	postinc1,c
 23470  01D602  EC78  F00F         	call	_StartTimer	;wreg free
 23471  01D606                     l1830:
 23472                           
 23473                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23474  01D606  52E5               	movf	postdec1,f,c
 23475  01D608  0012               	return		;funcret
 23476  01D60A                     __end_of_check_help:
 23477                           	opt callstack 0
 23478                           
 23479 ;; *************** function _vterm_dump *****************
 23480 ;; Defined at:
 23481 ;;		line 124 in file "mconfig.c"
 23482 ;; Parameters:    Size  Location     Type
 23483 ;;		None
 23484 ;; Auto vars:     Size  Location     Type
 23485 ;;		None
 23486 ;; Return value:  Size  Location     Type
 23487 ;;                  1  [STACK] void 
 23488 ;; Registers used:
 23489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23490 ;; Tracked objects:
 23491 ;;		On entry : 3F/2
 23492 ;;		On exit  : 0/0
 23493 ;;		Unchanged: 0/0
 23494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23499 ;;Total ram usage:        0 bytes
 23500 ;; Hardware stack levels used:    1
 23501 ;; Hardware stack levels required when called:   26
 23502 ;; This function calls:
 23503 ;;		_WaitMs
 23504 ;;		_eaDogM_WriteStringAtPos
 23505 ;;		_get_vterm_ptr
 23506 ;;		_sprintf
 23507 ;;		_wait_lcd_done
 23508 ;; This function is called by:
 23509 ;;		_check_help
 23510 ;; This function uses a reentrant model
 23511 ;;
 23512                           
 23513                           	psect	text77
 23514  01E060                     __ptext77:
 23515                           	opt callstack 0
 23516  01E060                     _vterm_dump:
 23517                           	opt callstack 3
 23518                           
 23519                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 23520                           
 23521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23522                           ;incstack = 0
 23523  01E060  0E01               	movlw	1
 23524  01E062  6EE6               	movwf	postinc1,c
 23525  01E064  0E00               	movlw	0
 23526  01E066  6EE6               	movwf	postinc1,c
 23527  01E068  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23528  01E06C  0060  F0AB  FFE6   	movff	btemp,postinc1
 23529  01E072  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23530  01E078  0E00               	movlw	0
 23531  01E07A  6EE6               	movwf	postinc1,c
 23532  01E07C  0E00               	movlw	0
 23533  01E07E  6EE6               	movwf	postinc1,c
 23534  01E080  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23535  01E084  0060  F0AB  FFE6   	movff	btemp,postinc1
 23536  01E08A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23537  01E090  0EA7               	movlw	low STR_80
 23538  01E092  6EE6               	movwf	postinc1,c
 23539  01E094  0EFF               	movlw	high STR_80
 23540  01E096  6EE6               	movwf	postinc1,c
 23541  01E098  0E08               	movlw	low (_V+1)
 23542  01E09A  6EE6               	movwf	postinc1,c
 23543  01E09C  0E02               	movlw	high (_V+1)
 23544  01E09E  6EE6               	movwf	postinc1,c
 23545  01E0A0  0E08               	movlw	8
 23546  01E0A2  6EE6               	movwf	postinc1,c
 23547  01E0A4  EC4F  F0FD         	call	_sprintf	;wreg free
 23548                           
 23549                           ; BSR set to: 0
 23550                           ;mconfig.c: 127:  wait_lcd_done();
 23551  01E0A8  ECC0  F014         	call	_wait_lcd_done	;wreg free
 23552                           
 23553                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 23554  01E0AC  0E08               	movlw	low (_V+1)
 23555  01E0AE  6EE6               	movwf	postinc1,c
 23556  01E0B0  0E02               	movlw	high (_V+1)
 23557  01E0B2  6EE6               	movwf	postinc1,c
 23558  01E0B4  0E00               	movlw	0
 23559  01E0B6  6EE6               	movwf	postinc1,c
 23560  01E0B8  0E00               	movlw	0
 23561  01E0BA  6EE6               	movwf	postinc1,c
 23562  01E0BC  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23563                           
 23564                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 23565  01E0C0  0E01               	movlw	1
 23566  01E0C2  6EE6               	movwf	postinc1,c
 23567  01E0C4  0E01               	movlw	1
 23568  01E0C6  6EE6               	movwf	postinc1,c
 23569  01E0C8  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23570  01E0CC  0060  F0AB  FFE6   	movff	btemp,postinc1
 23571  01E0D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23572  01E0D8  0E00               	movlw	0
 23573  01E0DA  6EE6               	movwf	postinc1,c
 23574  01E0DC  0E01               	movlw	1
 23575  01E0DE  6EE6               	movwf	postinc1,c
 23576  01E0E0  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23577  01E0E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 23578  01E0EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23579  01E0F0  0EA7               	movlw	low STR_80
 23580  01E0F2  6EE6               	movwf	postinc1,c
 23581  01E0F4  0EFF               	movlw	high STR_80
 23582  01E0F6  6EE6               	movwf	postinc1,c
 23583  01E0F8  0E08               	movlw	low (_V+1)
 23584  01E0FA  6EE6               	movwf	postinc1,c
 23585  01E0FC  0E02               	movlw	high (_V+1)
 23586  01E0FE  6EE6               	movwf	postinc1,c
 23587  01E100  0E08               	movlw	8
 23588  01E102  6EE6               	movwf	postinc1,c
 23589  01E104  EC4F  F0FD         	call	_sprintf	;wreg free
 23590                           
 23591                           ; BSR set to: 0
 23592                           ;mconfig.c: 130:  wait_lcd_done();
 23593  01E108  ECC0  F014         	call	_wait_lcd_done	;wreg free
 23594                           
 23595                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 23596  01E10C  0E08               	movlw	low (_V+1)
 23597  01E10E  6EE6               	movwf	postinc1,c
 23598  01E110  0E02               	movlw	high (_V+1)
 23599  01E112  6EE6               	movwf	postinc1,c
 23600  01E114  0E00               	movlw	0
 23601  01E116  6EE6               	movwf	postinc1,c
 23602  01E118  0E01               	movlw	1
 23603  01E11A  6EE6               	movwf	postinc1,c
 23604  01E11C  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23605                           
 23606                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 23607  01E120  0E01               	movlw	1
 23608  01E122  6EE6               	movwf	postinc1,c
 23609  01E124  0E02               	movlw	2
 23610  01E126  6EE6               	movwf	postinc1,c
 23611  01E128  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23612  01E12C  0060  F0AB  FFE6   	movff	btemp,postinc1
 23613  01E132  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23614  01E138  0E00               	movlw	0
 23615  01E13A  6EE6               	movwf	postinc1,c
 23616  01E13C  0E02               	movlw	2
 23617  01E13E  6EE6               	movwf	postinc1,c
 23618  01E140  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23619  01E144  0060  F0AB  FFE6   	movff	btemp,postinc1
 23620  01E14A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23621  01E150  0EA7               	movlw	low STR_80
 23622  01E152  6EE6               	movwf	postinc1,c
 23623  01E154  0EFF               	movlw	high STR_80
 23624  01E156  6EE6               	movwf	postinc1,c
 23625  01E158  0E08               	movlw	low (_V+1)
 23626  01E15A  6EE6               	movwf	postinc1,c
 23627  01E15C  0E02               	movlw	high (_V+1)
 23628  01E15E  6EE6               	movwf	postinc1,c
 23629  01E160  0E08               	movlw	8
 23630  01E162  6EE6               	movwf	postinc1,c
 23631  01E164  EC4F  F0FD         	call	_sprintf	;wreg free
 23632                           
 23633                           ; BSR set to: 0
 23634                           ;mconfig.c: 133:  wait_lcd_done();
 23635  01E168  ECC0  F014         	call	_wait_lcd_done	;wreg free
 23636                           
 23637                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 23638  01E16C  0E08               	movlw	low (_V+1)
 23639  01E16E  6EE6               	movwf	postinc1,c
 23640  01E170  0E02               	movlw	high (_V+1)
 23641  01E172  6EE6               	movwf	postinc1,c
 23642  01E174  0E00               	movlw	0
 23643  01E176  6EE6               	movwf	postinc1,c
 23644  01E178  0E02               	movlw	2
 23645  01E17A  6EE6               	movwf	postinc1,c
 23646  01E17C  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23647                           
 23648                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 23649  01E180  0E01               	movlw	1
 23650  01E182  6EE6               	movwf	postinc1,c
 23651  01E184  0E03               	movlw	3
 23652  01E186  6EE6               	movwf	postinc1,c
 23653  01E188  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23654  01E18C  0060  F0AB  FFE6   	movff	btemp,postinc1
 23655  01E192  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23656  01E198  0E00               	movlw	0
 23657  01E19A  6EE6               	movwf	postinc1,c
 23658  01E19C  0E03               	movlw	3
 23659  01E19E  6EE6               	movwf	postinc1,c
 23660  01E1A0  EC81  F011         	call	_get_vterm_ptr	;wreg free
 23661  01E1A4  0060  F0AB  FFE6   	movff	btemp,postinc1
 23662  01E1AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23663  01E1B0  0EA7               	movlw	low STR_80
 23664  01E1B2  6EE6               	movwf	postinc1,c
 23665  01E1B4  0EFF               	movlw	high STR_80
 23666  01E1B6  6EE6               	movwf	postinc1,c
 23667  01E1B8  0E08               	movlw	low (_V+1)
 23668  01E1BA  6EE6               	movwf	postinc1,c
 23669  01E1BC  0E02               	movlw	high (_V+1)
 23670  01E1BE  6EE6               	movwf	postinc1,c
 23671  01E1C0  0E08               	movlw	8
 23672  01E1C2  6EE6               	movwf	postinc1,c
 23673  01E1C4  EC4F  F0FD         	call	_sprintf	;wreg free
 23674                           
 23675                           ; BSR set to: 0
 23676                           ;mconfig.c: 136:  wait_lcd_done();
 23677  01E1C8  ECC0  F014         	call	_wait_lcd_done	;wreg free
 23678                           
 23679                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 23680  01E1CC  0E08               	movlw	low (_V+1)
 23681  01E1CE  6EE6               	movwf	postinc1,c
 23682  01E1D0  0E02               	movlw	high (_V+1)
 23683  01E1D2  6EE6               	movwf	postinc1,c
 23684  01E1D4  0E00               	movlw	0
 23685  01E1D6  6EE6               	movwf	postinc1,c
 23686  01E1D8  0E03               	movlw	3
 23687  01E1DA  6EE6               	movwf	postinc1,c
 23688  01E1DC  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23689                           
 23690                           ; BSR set to: 59
 23691                           ;mconfig.c: 138:  WaitMs(3000);
 23692  01E1E0  0EB8               	movlw	184
 23693  01E1E2  6EE6               	movwf	postinc1,c
 23694  01E1E4  0E0B               	movlw	11
 23695  01E1E6  6EE6               	movwf	postinc1,c
 23696  01E1E8  EC85  F010         	call	_WaitMs	;wreg free
 23697                           
 23698                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23699  01E1EC  0012               	return		;funcret
 23700  01E1EE                     __end_of_vterm_dump:
 23701                           	opt callstack 0
 23702                           
 23703 ;; *************** function _sprintf *****************
 23704 ;; Defined at:
 23705 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 23706 ;; Parameters:    Size  Location     Type
 23707 ;;  s               2  [STACK] PTR unsigned char 
 23708 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 23709 ;;  fmt             2  [STACK] PTR const unsigned char 
 23710 ;;		 -> STR_94(127), STR_92(3), STR_91(3), STR_90(21), 
 23711 ;;		 -> STR_89(21), STR_88(21), STR_87(21), STR_86(21), 
 23712 ;;		 -> STR_85(21), STR_84(26), STR_83(15), STR_82(15), 
 23713 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 23714 ;;		 -> STR_77(19), STR_76(19), STR_72(14), STR_71(28), 
 23715 ;;		 -> STR_70(28), STR_69(28), STR_68(22), STR_67(22), 
 23716 ;;		 -> STR_66(22), STR_65(22), STR_64(22), STR_63(22), 
 23717 ;;		 -> STR_62(22), STR_61(22), STR_60(22), STR_59(21), 
 23718 ;;		 -> STR_58(22), STR_57(22), STR_56(22), STR_55(22), 
 23719 ;;		 -> STR_54(22), STR_53(22), STR_52(24), STR_51(24), 
 23720 ;;		 -> STR_50(24), STR_49(30), STR_48(24), STR_47(24), 
 23721 ;;		 -> STR_46(23), STR_45(23), STR_44(23), STR_43(23), 
 23722 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(23), 
 23723 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 23724 ;;		 -> STR_34(18), STR_33(17), STR_32(17), STR_31(22), 
 23725 ;;		 -> STR_30(22), STR_29(22), STR_28(14), STR_27(27), 
 23726 ;;		 -> STR_26(27), STR_25(23), STR_24(22), STR_23(22), 
 23727 ;;		 -> STR_22(22), STR_21(22), STR_20(23), STR_19(23), 
 23728 ;;		 -> STR_18(23), STR_17(26), STR_16(22), STR_15(21), 
 23729 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(21), 
 23730 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 23731 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 23732 ;;		 -> STR_1(21), 
 23733 ;; Auto vars:     Size  Location     Type
 23734 ;;  f               6  [STACK] struct _IO_FILE
 23735 ;;  ap              2  [STACK] PTR void [1]
 23736 ;;		 -> ?_printf(2), ?_sprintf(2), 
 23737 ;;  ret             2    0        int 
 23738 ;; Return value:  Size  Location     Type
 23739 ;;                  2  [STACK] int 
 23740 ;; Registers used:
 23741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23742 ;; Tracked objects:
 23743 ;;		On entry : 0/2
 23744 ;;		On exit  : 3F/0
 23745 ;;		Unchanged: 0/0
 23746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23751 ;;Total ram usage:        0 bytes
 23752 ;; Hardware stack levels used:    1
 23753 ;; Hardware stack levels required when called:   23
 23754 ;; This function calls:
 23755 ;;		_vfprintf
 23756 ;; This function is called by:
 23757 ;;		_main
 23758 ;;		_current_sensor_cal
 23759 ;;		_display_history
 23760 ;;		_check_help
 23761 ;;		_vterm_dump
 23762 ;;		_calc_bsoc
 23763 ;; This function uses a reentrant model
 23764 ;;
 23765                           
 23766                           	psect	text78
 23767  01FA9E                     __ptext78:
 23768                           	opt callstack 0
 23769  01FA9E                     _sprintf:
 23770                           	opt callstack 0
 23771                           
 23772                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23773  01FA9E  0E08               	movlw	8
 23774  01FAA0  26E1               	addwf	fsr1l,f,c
 23775  01FAA2  0E00               	movlw	0
 23776  01FAA4  22E2               	addwfc	fsr1h,f,c
 23777                           
 23778                           ;incstack = 0
 23779 ;; hardware stack exceeded
 23780  01FAA6  0EFE               	movlw	254
 23781  01FAA8  6E34               	movwf	(btemp+10)^0,c
 23782  01FAAA  0EFF               	movlw	255
 23783  01FAAC  6E35               	movwf	(btemp+11)^0,c
 23784                           
 23785                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 23786  01FAAE  0EF5               	movlw	245
 23787  01FAB0  24E1               	addwf	fsr1l,w,c
 23788  01FAB2  6E32               	movwf	(btemp+8)^0,c
 23789  01FAB4  0EFF               	movlw	255
 23790  01FAB6  20E2               	addwfc	fsr1h,w,c
 23791  01FAB8  6E33               	movwf	(btemp+9)^0,c
 23792  01FABA  5034               	movf	(btemp+10)^0,w,c
 23793  01FABC  2632               	addwf	(btemp+8)^0,f,c
 23794  01FABE  5035               	movf	(btemp+11)^0,w,c
 23795  01FAC0  2233               	addwfc	(btemp+9)^0,f,c
 23796                           
 23797                           ;stkvar	_ap @ sp[(-8)+6]
 23798  01FAC2  0EFF               	movlw	-1
 23799  01FAC4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 23800  01FACA  0EFE               	movlw	-2
 23801  01FACC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 23802                           
 23803                           ;stkvar	_s @ sp[(-8)+-3]
 23804  01FAD2  0EF5               	movlw	-11
 23805  01FAD4  006F FF8C  F034    	movff	plusw1,btemp+10
 23806  01FADA  0EF6               	movlw	-10
 23807  01FADC  006F FF8C  F035    	movff	plusw1,btemp+11
 23808                           
 23809                           ;stkvar	_f @ sp[(-8)+0]
 23810  01FAE2  0EF9               	movlw	-7
 23811  01FAE4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 23812  01FAEA  0EF8               	movlw	-8
 23813  01FAEC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 23814                           
 23815                           ;stkvar	_f @ sp[(-8)+0]
 23816  01FAF2  0EFA               	movlw	250
 23817  01FAF4  24E1               	addwf	fsr1l,w,c
 23818  01FAF6  6ED9               	movwf	fsr2l,c
 23819  01FAF8  0EFF               	movlw	255
 23820  01FAFA  20E2               	addwfc	fsr1h,w,c
 23821  01FAFC  6EDA               	movwf	fsr2h,c
 23822  01FAFE  0E00               	movlw	0
 23823  01FB00  6EDE               	movwf	postinc2,c
 23824  01FB02  0E00               	movlw	0
 23825  01FB04  6EDD               	movwf	postdec2,c
 23826                           
 23827                           ;stkvar	_f @ sp[(-8)+0]
 23828  01FB06  0EFC               	movlw	252
 23829  01FB08  24E1               	addwf	fsr1l,w,c
 23830  01FB0A  6ED9               	movwf	fsr2l,c
 23831  01FB0C  0EFF               	movlw	255
 23832  01FB0E  20E2               	addwfc	fsr1h,w,c
 23833  01FB10  6EDA               	movwf	fsr2h,c
 23834  01FB12  0E00               	movlw	0
 23835  01FB14  6EDE               	movwf	postinc2,c
 23836  01FB16  0E00               	movlw	0
 23837  01FB18  6EDD               	movwf	postdec2,c
 23838                           
 23839                           ;stkvar	_ap @ sp[(-8)+6]
 23840  01FB1A  0EFE               	movlw	254
 23841  01FB1C  24E1               	addwf	fsr1l,w,c
 23842  01FB1E  6E2A               	movwf	btemp^0,c
 23843  01FB20  0EFF               	movlw	255
 23844  01FB22  20E2               	addwfc	fsr1h,w,c
 23845  01FB24  6E2B               	movwf	(btemp+1)^0,c
 23846  01FB26  0060  F0AB  FFE6   	movff	btemp,postinc1
 23847  01FB2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23848                           
 23849                           ;stkvar	_fmt @ sp[(-10)+-5]
 23850  01FB32  0EF1               	movlw	-15
 23851  01FB34  006F FF8F FFE6     	movff	plusw1,postinc1
 23852  01FB3A  006F FF8F FFE6     	movff	plusw1,postinc1
 23853                           
 23854                           ;stkvar	_f @ sp[(-12)+0]
 23855  01FB40  0EF4               	movlw	244
 23856  01FB42  24E1               	addwf	fsr1l,w,c
 23857  01FB44  6E2A               	movwf	btemp^0,c
 23858  01FB46  0EFF               	movlw	255
 23859  01FB48  20E2               	addwfc	fsr1h,w,c
 23860  01FB4A  6E2B               	movwf	(btemp+1)^0,c
 23861  01FB4C  0060  F0AB  FFE6   	movff	btemp,postinc1
 23862  01FB52  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23863  01FB58  ECAD  F004         	call	_vfprintf	;wreg free
 23864                           
 23865                           ; BSR set to: 0
 23866                           ;stkvar	_f @ sp[(-8)+0]
 23867  01FB5C  0EFA               	movlw	250
 23868  01FB5E  24E1               	addwf	fsr1l,w,c
 23869  01FB60  6ED9               	movwf	fsr2l,c
 23870  01FB62  0EFF               	movlw	255
 23871  01FB64  20E2               	addwfc	fsr1h,w,c
 23872  01FB66  6EDA               	movwf	fsr2h,c
 23873  01FB68  006F FF78  F034    	movff	postinc2,btemp+10
 23874  01FB6E  006F FF74  F035    	movff	postdec2,btemp+11
 23875                           
 23876                           ;stkvar	_s @ sp[(-8)+-3]
 23877  01FB74  0EF5               	movlw	-11
 23878  01FB76  006F FF8C  F032    	movff	plusw1,btemp+8
 23879  01FB7C  0EF6               	movlw	-10
 23880  01FB7E  006F FF8C  F033    	movff	plusw1,btemp+9
 23881  01FB84  5034               	movf	(btemp+10)^0,w,c
 23882  01FB86  2432               	addwf	(btemp+8)^0,w,c
 23883  01FB88  6ED9               	movwf	fsr2l,c
 23884  01FB8A  5035               	movf	(btemp+11)^0,w,c
 23885  01FB8C  2033               	addwfc	(btemp+9)^0,w,c
 23886  01FB8E  6EDA               	movwf	fsr2h,c
 23887  01FB90  0E00               	movlw	0
 23888  01FB92  6EDF               	movwf	indf2,c
 23889                           
 23890                           ; BSR set to: 0
 23891                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 23892  01FB94  0EF8               	movlw	248
 23893  01FB96  26E1               	addwf	fsr1l,f,c
 23894  01FB98  0EFF               	movlw	255
 23895  01FB9A  22E2               	addwfc	fsr1h,f,c
 23896  01FB9C  52E5               	movf	postdec1,f,c
 23897  01FB9E  50E7               	movf	indf1,w,c
 23898  01FBA0  5EE1               	subwf	fsr1l,f,c
 23899  01FBA2  0E00               	movlw	0
 23900  01FBA4  5AE2               	subwfb	fsr1h,f,c
 23901  01FBA6  0012               	return		;funcret
 23902  01FBA8                     __end_of_sprintf:
 23903                           	opt callstack 0
 23904                           
 23905 ;; *************** function _get_vterm_ptr *****************
 23906 ;; Defined at:
 23907 ;;		line 119 in file "mconfig.c"
 23908 ;; Parameters:    Size  Location     Type
 23909 ;;  line            1  [STACK] const unsigned char 
 23910 ;;  vterm           1  [STACK] const unsigned char 
 23911 ;; Auto vars:     Size  Location     Type
 23912 ;;		None
 23913 ;; Return value:  Size  Location     Type
 23914 ;;                  2  [STACK] PTR unsigned char 
 23915 ;; Registers used:
 23916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23917 ;; Tracked objects:
 23918 ;;		On entry : 0/2
 23919 ;;		On exit  : 0/0
 23920 ;;		Unchanged: 0/0
 23921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23926 ;;Total ram usage:        0 bytes
 23927 ;; Hardware stack levels used:    1
 23928 ;; Hardware stack levels required when called:   15
 23929 ;; This function calls:
 23930 ;;		Nothing
 23931 ;; This function is called by:
 23932 ;;		_main
 23933 ;;		_current_sensor_cal
 23934 ;;		_display_history
 23935 ;;		_check_help
 23936 ;;		_vterm_dump
 23937 ;; This function uses a reentrant model
 23938 ;;
 23939                           
 23940                           	psect	text79
 23941  002302                     __ptext79:
 23942                           	opt callstack 0
 23943  002302                     _get_vterm_ptr:
 23944                           	opt callstack 15
 23945                           
 23946                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 23947                           ;stkvar	_vterm @ sp[(0)+-2]
 23948                           
 23949                           ; BSR set to: 0
 23950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23951                           ;incstack = 0
 23952  002302  0EFE               	movlw	-2
 23953  002304  50E3               	movf	plusw1,w,c
 23954  002306  0B03               	andlw	3
 23955  002308  0DA0               	mullw	160
 23956  00230A  0E3F               	movlw	low _D
 23957  00230C  6E2A               	movwf	btemp^0,c
 23958  00230E  0E0A               	movlw	high _D
 23959  002310  6E2B               	movwf	(btemp+1)^0,c
 23960  002312  50F3               	movf	243,w,c
 23961  002314  262A               	addwf	btemp^0,f,c
 23962  002316  50F4               	movf	244,w,c
 23963  002318  222B               	addwfc	(btemp+1)^0,f,c
 23964                           
 23965                           ;stkvar	_line @ sp[(0)+-1]
 23966  00231A  0EFF               	movlw	-1
 23967  00231C  50E3               	movf	plusw1,w,c
 23968  00231E  0B03               	andlw	3
 23969  002320  0D28               	mullw	40
 23970  002322  50F3               	movf	243,w,c
 23971  002324  262A               	addwf	btemp^0,f,c
 23972  002326  50F4               	movf	244,w,c
 23973  002328  222B               	addwfc	(btemp+1)^0,f,c
 23974                           
 23975                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23976  00232A  52E5               	movf	postdec1,f,c
 23977  00232C  52E5               	movf	postdec1,f,c
 23978  00232E  0012               	return		;funcret
 23979  002330                     __end_of_get_vterm_ptr:
 23980                           	opt callstack 0
 23981                           
 23982 ;; *************** function _WaitMs *****************
 23983 ;; Defined at:
 23984 ;;		line 32 in file "timers.c"
 23985 ;; Parameters:    Size  Location     Type
 23986 ;;  numMilliseco    2  [STACK] const unsigned short 
 23987 ;; Auto vars:     Size  Location     Type
 23988 ;;		None
 23989 ;; Return value:  Size  Location     Type
 23990 ;;                  1  [STACK] void 
 23991 ;; Registers used:
 23992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23993 ;; Tracked objects:
 23994 ;;		On entry : 0/2
 23995 ;;		On exit  : 0/0
 23996 ;;		Unchanged: 0/0
 23997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24002 ;;Total ram usage:        0 bytes
 24003 ;; Hardware stack levels used:    1
 24004 ;; Hardware stack levels required when called:   16
 24005 ;; This function calls:
 24006 ;;		_StartTimer
 24007 ;;		_TimerDone
 24008 ;; This function is called by:
 24009 ;;		_main
 24010 ;;		_current_sensor_cal
 24011 ;;		_display_history
 24012 ;;		_vterm_dump
 24013 ;; This function uses a reentrant model
 24014 ;;
 24015                           
 24016                           	psect	text80
 24017  00210A                     __ptext80:
 24018                           	opt callstack 0
 24019  00210A                     _WaitMs:
 24020                           	opt callstack 13
 24021                           
 24022                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 24023                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 24024                           
 24025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24026                           ;incstack = 0
 24027  00210A  0EFE               	movlw	-2
 24028  00210C  006F FF8F FFE6     	movff	plusw1,postinc1
 24029  002112  006F FF8F FFE6     	movff	plusw1,postinc1
 24030  002118  0E00               	movlw	0
 24031  00211A  6EE6               	movwf	postinc1,c
 24032  00211C  EC78  F00F         	call	_StartTimer	;wreg free
 24033                           
 24034                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24035  002120  D005               	goto	l12800
 24036  002122                     l1761:
 24037                           
 24038                           ;timers.c: 36:   __nop();
 24039  002122  F000               	nop	
 24040                           
 24041                           ;timers.c: 37:   __nop();
 24042  002124  F000               	nop	
 24043                           
 24044                           ;timers.c: 38:   __nop();
 24045  002126  F000               	nop	
 24046                           
 24047                           ;timers.c: 39:   __nop();
 24048  002128  F000               	nop	
 24049  00212A  0004               	clrwdt		;# 
 24050  00212C                     l12800:
 24051                           
 24052                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24053  00212C  0E00               	movlw	0
 24054  00212E  6EE6               	movwf	postinc1,c
 24055  002130  EC03  F012         	call	_TimerDone	;wreg free
 24056  002134  502A               	movf	btemp^0,w,c
 24057  002136  B4D8               	btfsc	status,2,c
 24058  002138  D7F4               	goto	l1761
 24059                           
 24060                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24061  00213A  52E5               	movf	postdec1,f,c
 24062  00213C  52E5               	movf	postdec1,f,c
 24063  00213E  0012               	return		;funcret
 24064  002140                     __end_of_WaitMs:
 24065                           	opt callstack 0
 24066                           
 24067 ;; *************** function _update_lcd *****************
 24068 ;; Defined at:
 24069 ;;		line 85 in file "mconfig.c"
 24070 ;; Parameters:    Size  Location     Type
 24071 ;;  vterm           1  [STACK] unsigned char 
 24072 ;; Auto vars:     Size  Location     Type
 24073 ;;		None
 24074 ;; Return value:  Size  Location     Type
 24075 ;;                  1  [STACK] unsigned char 
 24076 ;; Registers used:
 24077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24078 ;; Tracked objects:
 24079 ;;		On entry : 0/0
 24080 ;;		On exit  : 0/0
 24081 ;;		Unchanged: 0/0
 24082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24087 ;;Total ram usage:        0 bytes
 24088 ;; Hardware stack levels used:    1
 24089 ;; Hardware stack levels required when called:   26
 24090 ;; This function calls:
 24091 ;;		_eaDogM_WriteStringAtPos
 24092 ;;		_wait_lcd_done
 24093 ;; This function is called by:
 24094 ;;		_main
 24095 ;;		_current_sensor_cal
 24096 ;;		_display_history
 24097 ;;		_check_help
 24098 ;; This function uses a reentrant model
 24099 ;;
 24100                           
 24101                           	psect	text81
 24102  01EC02                     __ptext81:
 24103                           	opt callstack 0
 24104  01EC02                     _update_lcd:
 24105                           	opt callstack 4
 24106                           
 24107                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 24108                           ;stkvar	_vterm @ sp[(0)+-1]
 24109                           
 24110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24111                           ;incstack = 0
 24112  01EC02  0EFF               	movlw	-1
 24113  01EC04  006F FF8C  F02A    	movff	plusw1,btemp
 24114  01EC0A  0E03               	movlw	3
 24115  01EC0C  162A               	andwf	btemp^0,f,c
 24116  01EC0E  0EFF               	movlw	-1
 24117  01EC10  0060  F0AB  FFE3   	movff	btemp,plusw1
 24118                           
 24119                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 24120  01EC16  EE23  F0BF         	lfsr	2,_D+640
 24121  01EC1A  A0DF               	btfss	indf2,0,c
 24122  01EC1C  D004               	goto	l16906
 24123                           
 24124                           ;stkvar	_vterm @ sp[(0)+-1]
 24125  01EC1E  0EFF               	movlw	-1
 24126  01EC20  50E3               	movf	plusw1,w,c
 24127  01EC22  B4D8               	btfsc	status,2,c
 24128  01EC24  D09C               	goto	l1837
 24129  01EC26                     l16906:
 24130                           
 24131                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 24132                           ;stkvar	_vterm @ sp[(0)+-1]
 24133  01EC26  0EFF               	movlw	-1
 24134  01EC28  50E3               	movf	plusw1,w,c
 24135  01EC2A  0DA0               	mullw	160
 24136  01EC2C  0E53               	movlw	low (_D+20)
 24137  01EC2E  24F3               	addwf	243,w,c
 24138  01EC30  6ED9               	movwf	fsr2l,c
 24139  01EC32  0E0A               	movlw	high (_D+20)
 24140  01EC34  20F4               	addwfc	prodh,w,c
 24141  01EC36  6EDA               	movwf	fsr2h,c
 24142  01EC38  0E00               	movlw	0
 24143  01EC3A  6EDF               	movwf	indf2,c
 24144                           
 24145                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 24146                           ;stkvar	_vterm @ sp[(0)+-1]
 24147  01EC3C  0EFF               	movlw	-1
 24148  01EC3E  50E3               	movf	plusw1,w,c
 24149  01EC40  0DA0               	mullw	160
 24150  01EC42  0E7B               	movlw	low (_D+60)
 24151  01EC44  24F3               	addwf	243,w,c
 24152  01EC46  6ED9               	movwf	fsr2l,c
 24153  01EC48  0E0A               	movlw	high (_D+60)
 24154  01EC4A  20F4               	addwfc	prodh,w,c
 24155  01EC4C  6EDA               	movwf	fsr2h,c
 24156  01EC4E  0E00               	movlw	0
 24157  01EC50  6EDF               	movwf	indf2,c
 24158                           
 24159                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 24160                           ;stkvar	_vterm @ sp[(0)+-1]
 24161  01EC52  0EFF               	movlw	-1
 24162  01EC54  50E3               	movf	plusw1,w,c
 24163  01EC56  0DA0               	mullw	160
 24164  01EC58  0EA3               	movlw	low (_D+100)
 24165  01EC5A  24F3               	addwf	243,w,c
 24166  01EC5C  6ED9               	movwf	fsr2l,c
 24167  01EC5E  0E0A               	movlw	high (_D+100)
 24168  01EC60  20F4               	addwfc	prodh,w,c
 24169  01EC62  6EDA               	movwf	fsr2h,c
 24170  01EC64  0E00               	movlw	0
 24171  01EC66  6EDF               	movwf	indf2,c
 24172                           
 24173                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 24174                           ;stkvar	_vterm @ sp[(0)+-1]
 24175  01EC68  0EFF               	movlw	-1
 24176  01EC6A  50E3               	movf	plusw1,w,c
 24177  01EC6C  0DA0               	mullw	160
 24178  01EC6E  0ECB               	movlw	low (_D+140)
 24179  01EC70  24F3               	addwf	243,w,c
 24180  01EC72  6ED9               	movwf	fsr2l,c
 24181  01EC74  0E0A               	movlw	high (_D+140)
 24182  01EC76  20F4               	addwfc	prodh,w,c
 24183  01EC78  6EDA               	movwf	fsr2h,c
 24184  01EC7A  0E00               	movlw	0
 24185  01EC7C  6EDF               	movwf	indf2,c
 24186                           
 24187                           ;mconfig.c: 96:  wait_lcd_done();
 24188  01EC7E  ECC0  F014         	call	_wait_lcd_done	;wreg free
 24189                           
 24190                           ; BSR set to: 61
 24191                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 24192                           ;stkvar	_vterm @ sp[(0)+-1]
 24193  01EC82  0EFF               	movlw	-1
 24194  01EC84  50E3               	movf	plusw1,w,c
 24195  01EC86  0DA0               	mullw	160
 24196  01EC88  0E3F               	movlw	low _D
 24197  01EC8A  6E34               	movwf	(btemp+10)^0,c
 24198  01EC8C  0E0A               	movlw	high _D
 24199  01EC8E  6E35               	movwf	(btemp+11)^0,c
 24200  01EC90  50F3               	movf	243,w,c
 24201  01EC92  2634               	addwf	(btemp+10)^0,f,c
 24202  01EC94  50F4               	movf	244,w,c
 24203  01EC96  2235               	addwfc	(btemp+11)^0,f,c
 24204  01EC98  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24205  01EC9E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24206  01ECA4  0E00               	movlw	0
 24207  01ECA6  6EE6               	movwf	postinc1,c
 24208  01ECA8  0E00               	movlw	0
 24209  01ECAA  6EE6               	movwf	postinc1,c
 24210  01ECAC  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24211                           
 24212                           ; BSR set to: 59
 24213                           ;mconfig.c: 98:  wait_lcd_done();
 24214  01ECB0  ECC0  F014         	call	_wait_lcd_done	;wreg free
 24215                           
 24216                           ; BSR set to: 61
 24217                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 24218                           ;stkvar	_vterm @ sp[(0)+-1]
 24219  01ECB4  0EFF               	movlw	-1
 24220  01ECB6  50E3               	movf	plusw1,w,c
 24221  01ECB8  0DA0               	mullw	160
 24222  01ECBA  0E3F               	movlw	low _D
 24223  01ECBC  6E34               	movwf	(btemp+10)^0,c
 24224  01ECBE  0E0A               	movlw	high _D
 24225  01ECC0  6E35               	movwf	(btemp+11)^0,c
 24226  01ECC2  0E28               	movlw	40
 24227  01ECC4  2634               	addwf	(btemp+10)^0,f,c
 24228  01ECC6  0E00               	movlw	0
 24229  01ECC8  2235               	addwfc	(btemp+11)^0,f,c
 24230  01ECCA  50F3               	movf	243,w,c
 24231  01ECCC  2634               	addwf	(btemp+10)^0,f,c
 24232  01ECCE  50F4               	movf	244,w,c
 24233  01ECD0  2235               	addwfc	(btemp+11)^0,f,c
 24234  01ECD2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24235  01ECD8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24236  01ECDE  0E00               	movlw	0
 24237  01ECE0  6EE6               	movwf	postinc1,c
 24238  01ECE2  0E01               	movlw	1
 24239  01ECE4  6EE6               	movwf	postinc1,c
 24240  01ECE6  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24241                           
 24242                           ; BSR set to: 59
 24243                           ;mconfig.c: 100:  wait_lcd_done();
 24244  01ECEA  ECC0  F014         	call	_wait_lcd_done	;wreg free
 24245                           
 24246                           ; BSR set to: 61
 24247                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 24248                           ;stkvar	_vterm @ sp[(0)+-1]
 24249  01ECEE  0EFF               	movlw	-1
 24250  01ECF0  50E3               	movf	plusw1,w,c
 24251  01ECF2  0DA0               	mullw	160
 24252  01ECF4  0E3F               	movlw	low _D
 24253  01ECF6  6E34               	movwf	(btemp+10)^0,c
 24254  01ECF8  0E0A               	movlw	high _D
 24255  01ECFA  6E35               	movwf	(btemp+11)^0,c
 24256  01ECFC  0E50               	movlw	80
 24257  01ECFE  2634               	addwf	(btemp+10)^0,f,c
 24258  01ED00  0E00               	movlw	0
 24259  01ED02  2235               	addwfc	(btemp+11)^0,f,c
 24260  01ED04  50F3               	movf	243,w,c
 24261  01ED06  2634               	addwf	(btemp+10)^0,f,c
 24262  01ED08  50F4               	movf	244,w,c
 24263  01ED0A  2235               	addwfc	(btemp+11)^0,f,c
 24264  01ED0C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24265  01ED12  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24266  01ED18  0E00               	movlw	0
 24267  01ED1A  6EE6               	movwf	postinc1,c
 24268  01ED1C  0E02               	movlw	2
 24269  01ED1E  6EE6               	movwf	postinc1,c
 24270  01ED20  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24271                           
 24272                           ; BSR set to: 59
 24273                           ;mconfig.c: 102:  wait_lcd_done();
 24274  01ED24  ECC0  F014         	call	_wait_lcd_done	;wreg free
 24275                           
 24276                           ; BSR set to: 61
 24277                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 24278                           ;stkvar	_vterm @ sp[(0)+-1]
 24279  01ED28  0EFF               	movlw	-1
 24280  01ED2A  50E3               	movf	plusw1,w,c
 24281  01ED2C  0DA0               	mullw	160
 24282  01ED2E  0E3F               	movlw	low _D
 24283  01ED30  6E34               	movwf	(btemp+10)^0,c
 24284  01ED32  0E0A               	movlw	high _D
 24285  01ED34  6E35               	movwf	(btemp+11)^0,c
 24286  01ED36  0E78               	movlw	120
 24287  01ED38  2634               	addwf	(btemp+10)^0,f,c
 24288  01ED3A  0E00               	movlw	0
 24289  01ED3C  2235               	addwfc	(btemp+11)^0,f,c
 24290  01ED3E  50F3               	movf	243,w,c
 24291  01ED40  2634               	addwf	(btemp+10)^0,f,c
 24292  01ED42  50F4               	movf	244,w,c
 24293  01ED44  2235               	addwfc	(btemp+11)^0,f,c
 24294  01ED46  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24295  01ED4C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24296  01ED52  0E00               	movlw	0
 24297  01ED54  6EE6               	movwf	postinc1,c
 24298  01ED56  0E03               	movlw	3
 24299  01ED58  6EE6               	movwf	postinc1,c
 24300  01ED5A  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24301  01ED5E                     l1837:
 24302                           
 24303                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24304  01ED5E  52E5               	movf	postdec1,f,c
 24305  01ED60  0012               	return		;funcret
 24306  01ED62                     __end_of_update_lcd:
 24307                           	opt callstack 0
 24308                           
 24309 ;; *************** function _eaDogM_WriteStringAtPos *****************
 24310 ;; Defined at:
 24311 ;;		line 195 in file "eadog.c"
 24312 ;; Parameters:    Size  Location     Type
 24313 ;;  r               1  [STACK] const unsigned char 
 24314 ;;  c               1  [STACK] const unsigned char 
 24315 ;;  strPtr          2  [STACK] PTR unsigned char 
 24316 ;;		 -> D.lcd(640), D(642), V(181), 
 24317 ;; Auto vars:     Size  Location     Type
 24318 ;;  row             1  [STACK] unsigned char 
 24319 ;; Return value:  Size  Location     Type
 24320 ;;                  1  [STACK] void 
 24321 ;; Registers used:
 24322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24323 ;; Tracked objects:
 24324 ;;		On entry : 3F/3D
 24325 ;;		On exit  : 3F/3B
 24326 ;;		Unchanged: 0/0
 24327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24332 ;;Total ram usage:        0 bytes
 24333 ;; Hardware stack levels used:    1
 24334 ;; Hardware stack levels required when called:   25
 24335 ;; This function calls:
 24336 ;;		_eaDogM_WriteString
 24337 ;;		_send_lcd_cmd_dma
 24338 ;;		_send_lcd_data_dma
 24339 ;;		_wait_lcd_done
 24340 ;; This function is called by:
 24341 ;;		_update_lcd
 24342 ;;		_vterm_dump
 24343 ;; This function uses a reentrant model
 24344 ;;
 24345                           
 24346                           	psect	text82
 24347  000E60                     __ptext82:
 24348                           	opt callstack 0
 24349  000E60                     _eaDogM_WriteStringAtPos:
 24350                           	opt callstack 0
 24351                           
 24352                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24353  000E60  52E6               	movf	postinc1,f,c
 24354                           
 24355                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 24356                           
 24357                           ;incstack = 0
 24358  000E62  D013               	goto	l16852
 24359  000E64                     l16840:
 24360                           
 24361                           ;eadog.c: 201:   row = 0x40;
 24362                           ;stkvar	_row @ sp[(-1)+0]
 24363  000E64  0EFF               	movlw	-1
 24364  000E66  6AE3               	clrf	plusw1,c
 24365  000E68  8CE3               	bsf	plusw1,6,c
 24366                           
 24367                           ;eadog.c: 202:   break;
 24368  000E6A  D025               	goto	l16854
 24369  000E6C                     l16842:
 24370                           
 24371                           ;eadog.c: 204:   row = 0x14;
 24372                           ;stkvar	_row @ sp[(-1)+0]
 24373  000E6C  0EFF               	movlw	-1
 24374  000E6E  6AE3               	clrf	plusw1,c
 24375  000E70  84E3               	bsf	plusw1,2,c
 24376  000E72  88E3               	bsf	plusw1,4,c	;indir
 24377                           
 24378                           ;eadog.c: 205:   break;
 24379  000E74  D020               	goto	l16854
 24380  000E76                     l16844:
 24381                           
 24382                           ;eadog.c: 207:   row = 0x54;
 24383  000E76  0E54               	movlw	84
 24384  000E78  6E35               	movwf	(btemp+11)^0,c
 24385                           
 24386                           ;stkvar	_row @ sp[(-1)+0]
 24387  000E7A  0EFF               	movlw	-1
 24388  000E7C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24389                           
 24390                           ;eadog.c: 208:   break;
 24391  000E82  D019               	goto	l16854
 24392  000E84                     l16846:
 24393                           
 24394                           ;eadog.c: 210:   row = 0x00;
 24395                           ;stkvar	_row @ sp[(-1)+0]
 24396  000E84  0EFF               	movlw	-1
 24397  000E86  6AE3               	clrf	plusw1,c
 24398                           
 24399                           ;eadog.c: 211:   break;
 24400  000E88  D016               	goto	l16854
 24401  000E8A                     l16852:
 24402                           
 24403                           ;stkvar	_r @ sp[(-1)+-1]
 24404  000E8A  0EFE               	movlw	-2
 24405  000E8C  50E3               	movf	plusw1,w,c
 24406  000E8E  6E34               	movwf	(btemp+10)^0,c
 24407  000E90  6A35               	clrf	(btemp+11)^0,c
 24408                           
 24409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24410                           ; Switch size 1, requested type "simple"
 24411                           ; Number of cases is 1, Range of values is 0 to 0
 24412                           ; switch strategies available:
 24413                           ; Name         Instructions Cycles
 24414                           ; simple_byte            4     3 (average)
 24415                           ;	Chosen strategy is simple_byte
 24416  000E92  5035               	movf	(btemp+11)^0,w,c
 24417  000E94  0A00               	xorlw	0	; case 0
 24418  000E96  A4D8               	btfss	status,2,c
 24419  000E98  D7E5               	goto	l16840
 24420                           
 24421                           ; Switch size 1, requested type "simple"
 24422                           ; Number of cases is 4, Range of values is 0 to 3
 24423                           ; switch strategies available:
 24424                           ; Name         Instructions Cycles
 24425                           ; simple_byte           13     7 (average)
 24426                           ;	Chosen strategy is simple_byte
 24427  000E9A  5034               	movf	(btemp+10)^0,w,c
 24428  000E9C  0A00               	xorlw	0	; case 0
 24429  000E9E  B4D8               	btfsc	status,2,c
 24430  000EA0  D7E1               	goto	l16840
 24431  000EA2  0A01               	xorlw	1	; case 1
 24432  000EA4  B4D8               	btfsc	status,2,c
 24433  000EA6  D7E2               	goto	l16842
 24434  000EA8  0A03               	xorlw	3	; case 2
 24435  000EAA  B4D8               	btfsc	status,2,c
 24436  000EAC  D7E4               	goto	l16844
 24437  000EAE  0A01               	xorlw	1	; case 3
 24438  000EB0  B4D8               	btfsc	status,2,c
 24439  000EB2  D7E8               	goto	l16846
 24440  000EB4  D7D7               	goto	l16840
 24441  000EB6                     l16854:
 24442                           
 24443                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 24444  000EB6  0E45               	movlw	69
 24445  000EB8  6EE6               	movwf	postinc1,c
 24446  000EBA  ECEA  F013         	call	_send_lcd_cmd_dma	;wreg free
 24447                           
 24448                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 24449                           ;stkvar	_c @ sp[(-1)+-2]
 24450  000EBE  0EFD               	movlw	-3
 24451  000EC0  006F FF8C  F035    	movff	plusw1,btemp+11
 24452                           
 24453                           ;stkvar	_row @ sp[(-1)+0]
 24454  000EC6  0EFF               	movlw	-1
 24455  000EC8  50E3               	movf	plusw1,w,c
 24456  000ECA  2435               	addwf	(btemp+11)^0,w,c
 24457  000ECC  6EE6               	movwf	postinc1,c
 24458  000ECE  EC8C  F00E         	call	_send_lcd_data_dma	;wreg free
 24459                           
 24460                           ; BSR set to: 59
 24461                           ;eadog.c: 218:  wait_lcd_done();
 24462  000ED2  ECC0  F014         	call	_wait_lcd_done	;wreg free
 24463                           
 24464                           ; BSR set to: 61
 24465                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 24466                           ;stkvar	_strPtr @ sp[(-1)+-4]
 24467  000ED6  0EFB               	movlw	-5
 24468  000ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 24469  000EDE  006F FF8F FFE6     	movff	plusw1,postinc1
 24470  000EE4  EC58  F005         	call	_eaDogM_WriteString	;wreg free
 24471                           
 24472                           ; BSR set to: 59
 24473                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 24474  000EE8  0EFB               	movlw	251
 24475  000EEA  26E1               	addwf	fsr1l,f,c
 24476  000EEC  0EFF               	movlw	255
 24477  000EEE  22E2               	addwfc	fsr1h,f,c
 24478  000EF0  0012               	return		;funcret
 24479  000EF2                     __end_of_eaDogM_WriteStringAtPos:
 24480                           	opt callstack 0
 24481                           
 24482 ;; *************** function _send_lcd_cmd_dma *****************
 24483 ;; Defined at:
 24484 ;;		line 171 in file "eadog.c"
 24485 ;; Parameters:    Size  Location     Type
 24486 ;;  strPtr          1  [STACK] const unsigned char 
 24487 ;; Auto vars:     Size  Location     Type
 24488 ;;		None
 24489 ;; Return value:  Size  Location     Type
 24490 ;;                  1  [STACK] void 
 24491 ;; Registers used:
 24492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24493 ;; Tracked objects:
 24494 ;;		On entry : 0/3D
 24495 ;;		On exit  : 3F/3D
 24496 ;;		Unchanged: 0/0
 24497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24502 ;;Total ram usage:        0 bytes
 24503 ;; Hardware stack levels used:    1
 24504 ;; Hardware stack levels required when called:   18
 24505 ;; This function calls:
 24506 ;;		_send_lcd_data_dma
 24507 ;;		_wait_lcd_done
 24508 ;; This function is called by:
 24509 ;;		_eaDogM_WriteStringAtPos
 24510 ;;		_eaDogM_WriteCommand
 24511 ;; This function uses a reentrant model
 24512 ;;
 24513                           
 24514                           	psect	text83
 24515  0027D4                     __ptext83:
 24516                           	opt callstack 0
 24517  0027D4                     _send_lcd_cmd_dma:
 24518                           	opt callstack 10
 24519                           
 24520                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 24521                           
 24522                           ; BSR set to: 59
 24523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24524                           ;incstack = 0
 24525  0027D4  0EFE               	movlw	254
 24526  0027D6  6EE6               	movwf	postinc1,c
 24527  0027D8  EC8C  F00E         	call	_send_lcd_data_dma	;wreg free
 24528                           
 24529                           ; BSR set to: 59
 24530                           ;eadog.c: 174:  wait_lcd_done();
 24531  0027DC  ECC0  F014         	call	_wait_lcd_done	;wreg free
 24532                           
 24533                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 24534                           ;stkvar	_strPtr @ sp[(0)+-1]
 24535  0027E0  0EFF               	movlw	-1
 24536  0027E2  50E3               	movf	plusw1,w,c
 24537  0027E4  6EE6               	movwf	postinc1,c
 24538  0027E6  EC8C  F00E         	call	_send_lcd_data_dma	;wreg free
 24539                           
 24540                           ; BSR set to: 59
 24541                           ;eadog.c: 176:  wait_lcd_done();
 24542  0027EA  ECC0  F014         	call	_wait_lcd_done	;wreg free
 24543                           
 24544                           ; BSR set to: 61
 24545                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 24546  0027EE  52E5               	movf	postdec1,f,c
 24547  0027F0  0012               	return		;funcret
 24548  0027F2                     __end_of_send_lcd_cmd_dma:
 24549                           	opt callstack 0
 24550                           
 24551 ;; *************** function _wait_lcd_done *****************
 24552 ;; Defined at:
 24553 ;;		line 443 in file "eadog.c"
 24554 ;; Parameters:    Size  Location     Type
 24555 ;;		None
 24556 ;; Auto vars:     Size  Location     Type
 24557 ;;		None
 24558 ;; Return value:  Size  Location     Type
 24559 ;;                  1  [STACK] void 
 24560 ;; Registers used:
 24561 ;;		None
 24562 ;; Tracked objects:
 24563 ;;		On entry : 0/2
 24564 ;;		On exit  : 3F/3D
 24565 ;;		Unchanged: 0/0
 24566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24571 ;;Total ram usage:        0 bytes
 24572 ;; Hardware stack levels used:    1
 24573 ;; Hardware stack levels required when called:   15
 24574 ;; This function calls:
 24575 ;;		Nothing
 24576 ;; This function is called by:
 24577 ;;		_main
 24578 ;;		_send_lcd_cmd_dma
 24579 ;;		_eaDogM_WriteStringAtPos
 24580 ;;		_update_lcd
 24581 ;;		_vterm_dump
 24582 ;; This function uses a reentrant model
 24583 ;;
 24584                           
 24585                           	psect	text84
 24586  002980                     __ptext84:
 24587                           	opt callstack 0
 24588  002980                     _wait_lcd_done:
 24589                           	opt callstack 15
 24590                           
 24591                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 24592                           
 24593                           ; BSR set to: 61
 24594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24595                           ;incstack = 0
 24596  002980  0100               	movlb	0	; () banked
 24597  002982  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 24598  002984  D7FD               	goto	_wait_lcd_done
 24599  002986                     u10860:
 24600  002986  013D               	movlb	61	; () banked
 24601  002988  BB17               	btfsc	23,5,b	;volatile
 24602  00298A  0012               	return	
 24603  00298C  D7FC               	goto	u10860
 24604  00298E                     __end_of_wait_lcd_done:
 24605                           	opt callstack 0
 24606                           
 24607 ;; *************** function _send_lcd_data_dma *****************
 24608 ;; Defined at:
 24609 ;;		line 182 in file "eadog.c"
 24610 ;; Parameters:    Size  Location     Type
 24611 ;;  strPtr          1  [STACK] const unsigned char 
 24612 ;; Auto vars:     Size  Location     Type
 24613 ;;		None
 24614 ;; Return value:  Size  Location     Type
 24615 ;;                  1  [STACK] void 
 24616 ;; Registers used:
 24617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24618 ;; Tracked objects:
 24619 ;;		On entry : 0/3D
 24620 ;;		On exit  : 3F/3B
 24621 ;;		Unchanged: 0/0
 24622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24627 ;;Total ram usage:        0 bytes
 24628 ;; Hardware stack levels used:    1
 24629 ;; Hardware stack levels required when called:   17
 24630 ;; This function calls:
 24631 ;;		_ringBufS_flush
 24632 ;;		_ringBufS_put_dma
 24633 ;;		_start_lcd
 24634 ;;		_wait_lcd_set
 24635 ;; This function is called by:
 24636 ;;		_send_lcd_cmd_dma
 24637 ;;		_eaDogM_WriteStringAtPos
 24638 ;; This function uses a reentrant model
 24639 ;;
 24640                           
 24641                           	psect	text85
 24642  001D18                     __ptext85:
 24643                           	opt callstack 0
 24644  001D18                     _send_lcd_data_dma:
 24645                           	opt callstack 11
 24646                           
 24647                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 24648                           
 24649                           ; BSR set to: 61
 24650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24651                           ;incstack = 0
 24652  001D18  EC1E  F015         	call	_wait_lcd_set	;wreg free
 24653                           
 24654                           ; BSR set to: 0
 24655                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 24656  001D1C  0E00               	movlw	0
 24657  001D1E  6EE6               	movwf	postinc1,c
 24658  001D20  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24659  001D26  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24660  001D2C  EC79  F007         	call	_ringBufS_flush	;wreg free
 24661  001D30  94BC               	bcf	188,2,c	;volatile
 24662                           
 24663                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 24664  001D32  013B               	movlb	59	; () banked
 24665  001D34  9FFC               	bcf	252,7,b	;volatile
 24666                           
 24667                           ; BSR set to: 59
 24668                           ;eadog.c: 189:  DMA1SSZ = 1;
 24669  001D36  0E00               	movlw	0
 24670  001D38  6FF8               	movwf	248,b	;volatile
 24671  001D3A  0E01               	movlw	1
 24672  001D3C  6FF7               	movwf	247,b	;volatile
 24673                           
 24674                           ; BSR set to: 59
 24675                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 24676  001D3E  8FFC               	bsf	252,7,b	;volatile
 24677                           
 24678                           ; BSR set to: 59
 24679                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 24680                           ;stkvar	_strPtr @ sp[(0)+-1]
 24681  001D40  0EFF               	movlw	-1
 24682  001D42  50E3               	movf	plusw1,w,c
 24683  001D44  6EE6               	movwf	postinc1,c
 24684  001D46  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24685  001D4C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24686  001D52  EC03  F005         	call	_ringBufS_put_dma	;wreg free
 24687                           
 24688                           ;eadog.c: 192:  start_lcd();
 24689  001D56  EC21  F015         	call	_start_lcd	;wreg free
 24690                           
 24691                           ; BSR set to: 59
 24692                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 24693  001D5A  52E5               	movf	postdec1,f,c
 24694  001D5C  0012               	return		;funcret
 24695  001D5E                     __end_of_send_lcd_data_dma:
 24696                           	opt callstack 0
 24697                           
 24698 ;; *************** function _eaDogM_WriteString *****************
 24699 ;; Defined at:
 24700 ;;		line 151 in file "eadog.c"
 24701 ;; Parameters:    Size  Location     Type
 24702 ;;  strPtr          2  [STACK] PTR unsigned char 
 24703 ;;		 -> D.lcd(640), D(642), V(181), 
 24704 ;; Auto vars:     Size  Location     Type
 24705 ;;		None
 24706 ;; Return value:  Size  Location     Type
 24707 ;;                  1  [STACK] void 
 24708 ;; Registers used:
 24709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24710 ;; Tracked objects:
 24711 ;;		On entry : 3F/3D
 24712 ;;		On exit  : 3F/3B
 24713 ;;		Unchanged: 0/0
 24714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24719 ;;Total ram usage:        0 bytes
 24720 ;; Hardware stack levels used:    1
 24721 ;; Hardware stack levels required when called:   24
 24722 ;; This function calls:
 24723 ;;		_printf
 24724 ;;		_ringBufS_flush
 24725 ;;		_start_lcd
 24726 ;;		_strlen
 24727 ;;		_wait_lcd_set
 24728 ;; This function is called by:
 24729 ;;		_eaDogM_WriteStringAtPos
 24730 ;; This function uses a reentrant model
 24731 ;;
 24732                           
 24733                           	psect	text86
 24734  000AB0                     __ptext86:
 24735                           	opt callstack 0
 24736  000AB0                     _eaDogM_WriteString:
 24737                           	opt callstack 4
 24738                           
 24739                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 24740                           
 24741                           ; BSR set to: 59
 24742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24743                           ;incstack = 0
 24744  000AB0  EC1E  F015         	call	_wait_lcd_set	;wreg free
 24745                           
 24746                           ; BSR set to: 0
 24747                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 24748  000AB4  0E00               	movlw	0
 24749  000AB6  6EE6               	movwf	postinc1,c
 24750  000AB8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24751  000ABE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24752  000AC4  EC79  F007         	call	_ringBufS_flush	;wreg free
 24753  000AC8  94BC               	bcf	188,2,c	;volatile
 24754                           
 24755                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 24756                           ;stkvar	_strPtr @ sp[(0)+-2]
 24757  000ACA  0EFE               	movlw	-2
 24758  000ACC  006F FF8F FFE6     	movff	plusw1,postinc1
 24759  000AD2  006F FF8F FFE6     	movff	plusw1,postinc1
 24760  000AD8  ECFD  F005         	call	_strlen	;wreg free
 24761  000ADC  502B               	movf	(btemp+1)^0,w,c
 24762  000ADE  E104               	bnz	u16130
 24763  000AE0  0E41               	movlw	65
 24764  000AE2  5C2A               	subwf	btemp^0,w,c
 24765  000AE4  A0D8               	btfss	status,0,c
 24766  000AE6  D010               	goto	l16584
 24767  000AE8                     u16130:
 24768                           
 24769                           ;stkvar	_strPtr @ sp[(0)+-2]
 24770  000AE8  0EFE               	movlw	-2
 24771  000AEA  006F FF8C  F034    	movff	plusw1,btemp+10
 24772  000AF0  0EFF               	movlw	-1
 24773  000AF2  006F FF8C  F035    	movff	plusw1,btemp+11
 24774  000AF8  0E40               	movlw	64
 24775  000AFA  2434               	addwf	(btemp+10)^0,w,c
 24776  000AFC  6ED9               	movwf	fsr2l,c
 24777  000AFE  0E00               	movlw	0
 24778  000B00  2035               	addwfc	(btemp+11)^0,w,c
 24779  000B02  6EDA               	movwf	fsr2h,c
 24780  000B04  0E00               	movlw	0
 24781  000B06  6EDF               	movwf	indf2,c
 24782  000B08                     l16584:
 24783                           
 24784                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 24785  000B08  013B               	movlb	59	; () banked
 24786  000B0A  9FFC               	bcf	252,7,b	;volatile
 24787                           
 24788                           ; BSR set to: 59
 24789                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 24790                           ;stkvar	_strPtr @ sp[(0)+-2]
 24791  000B0C  0EFE               	movlw	-2
 24792  000B0E  006F FF8F FFE6     	movff	plusw1,postinc1
 24793  000B14  006F FF8F FFE6     	movff	plusw1,postinc1
 24794  000B1A  ECFD  F005         	call	_strlen	;wreg free
 24795  000B1E  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 24796  000B24  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 24797                           
 24798                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 24799  000B2A  013B               	movlb	59	; () banked
 24800  000B2C  8FFC               	bsf	252,7,b	;volatile
 24801                           
 24802                           ; BSR set to: 59
 24803                           ;eadog.c: 161:  printf("%s", strPtr);
 24804                           ;stkvar	_strPtr @ sp[(0)+-2]
 24805  000B2E  0EFE               	movlw	-2
 24806  000B30  006F FF8F FFE6     	movff	plusw1,postinc1
 24807  000B36  006F FF8F FFE6     	movff	plusw1,postinc1
 24808  000B3C  0EFC               	movlw	low STR_73
 24809  000B3E  6EE6               	movwf	postinc1,c
 24810  000B40  0EFF               	movlw	high STR_73
 24811  000B42  6EE6               	movwf	postinc1,c
 24812  000B44  0E04               	movlw	4
 24813  000B46  6EE6               	movwf	postinc1,c
 24814  000B48  ECE9  F00B         	call	_printf	;wreg free
 24815                           
 24816                           ; BSR set to: 0
 24817                           ;eadog.c: 162:  start_lcd();
 24818  000B4C  EC21  F015         	call	_start_lcd	;wreg free
 24819                           
 24820                           ; BSR set to: 59
 24821                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24822  000B50  52E5               	movf	postdec1,f,c
 24823  000B52  52E5               	movf	postdec1,f,c
 24824  000B54  0012               	return		;funcret
 24825  000B56                     __end_of_eaDogM_WriteString:
 24826                           	opt callstack 0
 24827                           
 24828 ;; *************** function _wait_lcd_set *****************
 24829 ;; Defined at:
 24830 ;;		line 433 in file "eadog.c"
 24831 ;; Parameters:    Size  Location     Type
 24832 ;;		None
 24833 ;; Auto vars:     Size  Location     Type
 24834 ;;		None
 24835 ;; Return value:  Size  Location     Type
 24836 ;;                  1  [STACK] void 
 24837 ;; Registers used:
 24838 ;;		None
 24839 ;; Tracked objects:
 24840 ;;		On entry : 0/3D
 24841 ;;		On exit  : 3F/0
 24842 ;;		Unchanged: 0/0
 24843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24848 ;;Total ram usage:        0 bytes
 24849 ;; Hardware stack levels used:    1
 24850 ;; Hardware stack levels required when called:   15
 24851 ;; This function calls:
 24852 ;;		Nothing
 24853 ;; This function is called by:
 24854 ;;		_eaDogM_WriteString
 24855 ;;		_send_lcd_data_dma
 24856 ;; This function uses a reentrant model
 24857 ;;
 24858                           
 24859                           	psect	text87
 24860  002A3C                     __ptext87:
 24861                           	opt callstack 0
 24862  002A3C                     _wait_lcd_set:
 24863                           	opt callstack 12
 24864                           
 24865                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 24866                           
 24867                           ; BSR set to: 59
 24868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24869                           ;incstack = 0
 24870  002A3C  0100               	movlb	0	; () banked
 24871  002A3E  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 24872                           
 24873                           ; BSR set to: 0
 24874                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24875  002A40  0012               	return		;funcret
 24876  002A42                     __end_of_wait_lcd_set:
 24877                           	opt callstack 0
 24878                           
 24879 ;; *************** function _start_lcd *****************
 24880 ;; Defined at:
 24881 ;;		line 428 in file "eadog.c"
 24882 ;; Parameters:    Size  Location     Type
 24883 ;;		None
 24884 ;; Auto vars:     Size  Location     Type
 24885 ;;		None
 24886 ;; Return value:  Size  Location     Type
 24887 ;;                  1  [STACK] void 
 24888 ;; Registers used:
 24889 ;;		None
 24890 ;; Tracked objects:
 24891 ;;		On entry : 0/3B
 24892 ;;		On exit  : 3F/3B
 24893 ;;		Unchanged: 0/0
 24894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24899 ;;Total ram usage:        0 bytes
 24900 ;; Hardware stack levels used:    1
 24901 ;; Hardware stack levels required when called:   15
 24902 ;; This function calls:
 24903 ;;		Nothing
 24904 ;; This function is called by:
 24905 ;;		_eaDogM_WriteString
 24906 ;;		_send_lcd_data_dma
 24907 ;; This function uses a reentrant model
 24908 ;;
 24909                           
 24910                           	psect	text88
 24911  002A42                     __ptext88:
 24912                           	opt callstack 0
 24913  002A42                     _start_lcd:
 24914                           	opt callstack 12
 24915                           
 24916                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 24917                           
 24918                           ; BSR set to: 0
 24919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24920                           ;incstack = 0
 24921  002A42  013B               	movlb	59	; () banked
 24922  002A44  8DFC               	bsf	252,6,b	;volatile
 24923                           
 24924                           ; BSR set to: 59
 24925                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24926  002A46  0012               	return		;funcret
 24927  002A48                     __end_of_start_lcd:
 24928                           	opt callstack 0
 24929                           
 24930 ;; *************** function _ringBufS_flush *****************
 24931 ;; Defined at:
 24932 ;;		line 76 in file "ringbufs.c"
 24933 ;; Parameters:    Size  Location     Type
 24934 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24935 ;;		 -> ring_buf1(67), 
 24936 ;;  clearBuffer     1  [STACK] const char 
 24937 ;; Auto vars:     Size  Location     Type
 24938 ;;		None
 24939 ;; Return value:  Size  Location     Type
 24940 ;;                  1  [STACK] void 
 24941 ;; Registers used:
 24942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24943 ;; Tracked objects:
 24944 ;;		On entry : 3F/0
 24945 ;;		On exit  : 0/0
 24946 ;;		Unchanged: 0/0
 24947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24952 ;;Total ram usage:        0 bytes
 24953 ;; Hardware stack levels used:    1
 24954 ;; Hardware stack levels required when called:   16
 24955 ;; This function calls:
 24956 ;;		_memset
 24957 ;; This function is called by:
 24958 ;;		_eaDogM_WriteString
 24959 ;;		_send_lcd_data_dma
 24960 ;; This function uses a reentrant model
 24961 ;;
 24962                           
 24963                           	psect	text89
 24964  000EF2                     __ptext89:
 24965                           	opt callstack 0
 24966  000EF2                     _ringBufS_flush:
 24967                           	opt callstack 11
 24968                           
 24969                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 24970                           ;stkvar	__this @ sp[(0)+-2]
 24971                           
 24972                           ; BSR set to: 59
 24973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24974                           ;incstack = 0
 24975  000EF2  0EFE               	movlw	-2
 24976  000EF4  006F FF8C  F034    	movff	plusw1,btemp+10
 24977  000EFA  0EFF               	movlw	-1
 24978  000EFC  006F FF8C  F035    	movff	plusw1,btemp+11
 24979  000F02  0E42               	movlw	66
 24980  000F04  2434               	addwf	(btemp+10)^0,w,c
 24981  000F06  6ED9               	movwf	fsr2l,c
 24982  000F08  0E00               	movlw	0
 24983  000F0A  2035               	addwfc	(btemp+11)^0,w,c
 24984  000F0C  6EDA               	movwf	fsr2h,c
 24985  000F0E  0E00               	movlw	0
 24986  000F10  6EDF               	movwf	indf2,c
 24987                           
 24988                           ;ringbufs.c: 79:  _this->head = 0;
 24989                           ;stkvar	__this @ sp[(0)+-2]
 24990  000F12  0EFE               	movlw	-2
 24991  000F14  006F FF8C  F034    	movff	plusw1,btemp+10
 24992  000F1A  0EFF               	movlw	-1
 24993  000F1C  006F FF8C  F035    	movff	plusw1,btemp+11
 24994  000F22  0E40               	movlw	64
 24995  000F24  2434               	addwf	(btemp+10)^0,w,c
 24996  000F26  6ED9               	movwf	fsr2l,c
 24997  000F28  0E00               	movlw	0
 24998  000F2A  2035               	addwfc	(btemp+11)^0,w,c
 24999  000F2C  6EDA               	movwf	fsr2h,c
 25000  000F2E  0E00               	movlw	0
 25001  000F30  6EDF               	movwf	indf2,c
 25002                           
 25003                           ;ringbufs.c: 80:  _this->tail = 0;
 25004                           ;stkvar	__this @ sp[(0)+-2]
 25005  000F32  0EFE               	movlw	-2
 25006  000F34  006F FF8C  F034    	movff	plusw1,btemp+10
 25007  000F3A  0EFF               	movlw	-1
 25008  000F3C  006F FF8C  F035    	movff	plusw1,btemp+11
 25009  000F42  0E41               	movlw	65
 25010  000F44  2434               	addwf	(btemp+10)^0,w,c
 25011  000F46  6ED9               	movwf	fsr2l,c
 25012  000F48  0E00               	movlw	0
 25013  000F4A  2035               	addwfc	(btemp+11)^0,w,c
 25014  000F4C  6EDA               	movwf	fsr2h,c
 25015  000F4E  0E00               	movlw	0
 25016  000F50  6EDF               	movwf	indf2,c
 25017                           
 25018                           ;ringbufs.c: 81:  if (clearBuffer) {
 25019                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 25020  000F52  0EFD               	movlw	-3
 25021  000F54  50E3               	movf	plusw1,w,c
 25022  000F56  B4D8               	btfsc	status,2,c
 25023  000F58  D011               	goto	l1746
 25024                           
 25025                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 25026  000F5A  0E40               	movlw	64
 25027  000F5C  6EE6               	movwf	postinc1,c
 25028  000F5E  0E00               	movlw	0
 25029  000F60  6EE6               	movwf	postinc1,c
 25030  000F62  0E00               	movlw	0
 25031  000F64  6EE6               	movwf	postinc1,c
 25032  000F66  0E00               	movlw	0
 25033  000F68  6EE6               	movwf	postinc1,c
 25034                           
 25035                           ;stkvar	__this @ sp[(-4)+-2]
 25036  000F6A  0EFA               	movlw	-6
 25037  000F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 25038  000F72  006F FF8F FFE6     	movff	plusw1,postinc1
 25039  000F78  ECB9  F0D8         	call	_memset	;wreg free
 25040  000F7C                     l1746:
 25041                           
 25042                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 25043  000F7C  52E5               	movf	postdec1,f,c
 25044  000F7E  52E5               	movf	postdec1,f,c
 25045  000F80  52E5               	movf	postdec1,f,c
 25046  000F82  0012               	return		;funcret
 25047  000F84                     __end_of_ringBufS_flush:
 25048                           	opt callstack 0
 25049                           
 25050 ;; *************** function _memset *****************
 25051 ;; Defined at:
 25052 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 25053 ;; Parameters:    Size  Location     Type
 25054 ;;  dest            2  [STACK] PTR void 
 25055 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25056 ;;  c               2  [STACK] int 
 25057 ;;  n               2  [STACK] unsigned int 
 25058 ;; Auto vars:     Size  Location     Type
 25059 ;;  s               2  [STACK] PTR unsigned char 
 25060 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25061 ;;  k               2  [STACK] unsigned int 
 25062 ;; Return value:  Size  Location     Type
 25063 ;;                  2  [STACK] PTR void 
 25064 ;; Registers used:
 25065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25066 ;; Tracked objects:
 25067 ;;		On entry : 0/0
 25068 ;;		On exit  : 0/0
 25069 ;;		Unchanged: 0/0
 25070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25075 ;;Total ram usage:        0 bytes
 25076 ;; Hardware stack levels used:    1
 25077 ;; Hardware stack levels required when called:   15
 25078 ;; This function calls:
 25079 ;;		Nothing
 25080 ;; This function is called by:
 25081 ;;		_ringBufS_init
 25082 ;;		_ringBufS_flush
 25083 ;; This function uses a reentrant model
 25084 ;;
 25085                           
 25086                           	psect	text90
 25087  01B172                     __ptext90:
 25088                           	opt callstack 0
 25089  01B172                     _memset:
 25090                           	opt callstack 0
 25091                           
 25092                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25093  01B172  52E6               	movf	postinc1,f,c
 25094  01B174  52E6               	movf	postinc1,f,c
 25095  01B176  52E6               	movf	postinc1,f,c
 25096  01B178  52E6               	movf	postinc1,f,c
 25097                           
 25098                           ;stkvar	_dest @ sp[(-4)+-2]
 25099                           
 25100                           ;incstack = 0
 25101  01B17A  0EFA               	movlw	-6
 25102  01B17C  006F FF8C  F034    	movff	plusw1,btemp+10
 25103  01B182  0EFB               	movlw	-5
 25104  01B184  006F FF8C  F035    	movff	plusw1,btemp+11
 25105                           
 25106                           ;stkvar	_s @ sp[(-4)+0]
 25107  01B18A  0EFD               	movlw	-3
 25108  01B18C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25109  01B192  0EFC               	movlw	-4
 25110  01B194  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25111                           
 25112                           ;stkvar	_n @ sp[(-4)+-6]
 25113  01B19A  0EF6               	movlw	-10
 25114  01B19C  006F FF8C  F02A    	movff	plusw1,btemp
 25115  01B1A2  0EF7               	movlw	-9
 25116  01B1A4  50E3               	movf	plusw1,w,c
 25117  01B1A6  102A               	iorwf	btemp^0,w,c
 25118  01B1A8  B4D8               	btfsc	status,2,c
 25119  01B1AA  D154               	goto	u14310
 25120                           
 25121                           ;stkvar	_c @ sp[(-4)+-4]
 25122                           ;stkvar	_s @ sp[(-4)+0]
 25123  01B1AC  0EFC               	movlw	-4
 25124  01B1AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25125  01B1B4  0EFD               	movlw	-3
 25126  01B1B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25127  01B1BC  0EF8               	movlw	-8
 25128  01B1BE  006F FF8F FFDF     	movff	plusw1,indf2
 25129                           
 25130                           ;stkvar	_c @ sp[(-4)+-4]
 25131                           ;stkvar	_n @ sp[(-4)+-6]
 25132                           ;stkvar	_s @ sp[(-4)+0]
 25133  01B1C4  0EFC               	movlw	-4
 25134  01B1C6  006F FF8C  F034    	movff	plusw1,btemp+10
 25135  01B1CC  0EFD               	movlw	-3
 25136  01B1CE  006F FF8C  F035    	movff	plusw1,btemp+11
 25137  01B1D4  0EF6               	movlw	-10
 25138  01B1D6  50E3               	movf	plusw1,w,c
 25139  01B1D8  2634               	addwf	(btemp+10)^0,f,c
 25140  01B1DA  0EF7               	movlw	-9
 25141  01B1DC  50E3               	movf	plusw1,w,c
 25142  01B1DE  2235               	addwfc	(btemp+11)^0,f,c
 25143  01B1E0  0EFF               	movlw	255
 25144  01B1E2  2434               	addwf	(btemp+10)^0,w,c
 25145  01B1E4  6ED9               	movwf	fsr2l,c
 25146  01B1E6  0EFF               	movlw	255
 25147  01B1E8  2035               	addwfc	(btemp+11)^0,w,c
 25148  01B1EA  6EDA               	movwf	fsr2h,c
 25149  01B1EC  0EF8               	movlw	-8
 25150  01B1EE  006F FF8F FFDF     	movff	plusw1,indf2
 25151                           
 25152                           ;stkvar	_n @ sp[(-4)+-6]
 25153  01B1F4  0EF7               	movlw	-9
 25154  01B1F6  50E3               	movf	plusw1,w,c
 25155  01B1F8  E108               	bnz	l15400
 25156  01B1FA  0EF6               	movlw	-10
 25157  01B1FC  006F FF8C  F02A    	movff	plusw1,btemp
 25158  01B202  0E03               	movlw	3
 25159  01B204  5E2A               	subwf	btemp^0,f,c
 25160  01B206  A0D8               	btfss	status,0,c
 25161  01B208  D125               	goto	u14310
 25162  01B20A                     l15400:
 25163                           
 25164                           ;stkvar	_c @ sp[(-4)+-4]
 25165                           ;stkvar	_s @ sp[(-4)+0]
 25166  01B20A  0EFC               	movlw	-4
 25167  01B20C  006F FF8C  F034    	movff	plusw1,btemp+10
 25168  01B212  0EFD               	movlw	-3
 25169  01B214  006F FF8C  F035    	movff	plusw1,btemp+11
 25170  01B21A  0E01               	movlw	1
 25171  01B21C  2434               	addwf	(btemp+10)^0,w,c
 25172  01B21E  6ED9               	movwf	fsr2l,c
 25173  01B220  0E00               	movlw	0
 25174  01B222  2035               	addwfc	(btemp+11)^0,w,c
 25175  01B224  6EDA               	movwf	fsr2h,c
 25176  01B226  0EF8               	movlw	-8
 25177  01B228  006F FF8F FFDF     	movff	plusw1,indf2
 25178                           
 25179                           ;stkvar	_c @ sp[(-4)+-4]
 25180                           ;stkvar	_s @ sp[(-4)+0]
 25181  01B22E  0EFC               	movlw	-4
 25182  01B230  006F FF8C  F034    	movff	plusw1,btemp+10
 25183  01B236  0EFD               	movlw	-3
 25184  01B238  006F FF8C  F035    	movff	plusw1,btemp+11
 25185  01B23E  0E02               	movlw	2
 25186  01B240  2434               	addwf	(btemp+10)^0,w,c
 25187  01B242  6ED9               	movwf	fsr2l,c
 25188  01B244  0E00               	movlw	0
 25189  01B246  2035               	addwfc	(btemp+11)^0,w,c
 25190  01B248  6EDA               	movwf	fsr2h,c
 25191  01B24A  0EF8               	movlw	-8
 25192  01B24C  006F FF8F FFDF     	movff	plusw1,indf2
 25193                           
 25194                           ;stkvar	_c @ sp[(-4)+-4]
 25195                           ;stkvar	_n @ sp[(-4)+-6]
 25196                           ;stkvar	_s @ sp[(-4)+0]
 25197  01B252  0EFC               	movlw	-4
 25198  01B254  006F FF8C  F034    	movff	plusw1,btemp+10
 25199  01B25A  0EFD               	movlw	-3
 25200  01B25C  006F FF8C  F035    	movff	plusw1,btemp+11
 25201  01B262  0EF6               	movlw	-10
 25202  01B264  50E3               	movf	plusw1,w,c
 25203  01B266  2634               	addwf	(btemp+10)^0,f,c
 25204  01B268  0EF7               	movlw	-9
 25205  01B26A  50E3               	movf	plusw1,w,c
 25206  01B26C  2235               	addwfc	(btemp+11)^0,f,c
 25207  01B26E  0EFE               	movlw	254
 25208  01B270  2434               	addwf	(btemp+10)^0,w,c
 25209  01B272  6ED9               	movwf	fsr2l,c
 25210  01B274  0EFF               	movlw	255
 25211  01B276  2035               	addwfc	(btemp+11)^0,w,c
 25212  01B278  6EDA               	movwf	fsr2h,c
 25213  01B27A  0EF8               	movlw	-8
 25214  01B27C  006F FF8F FFDF     	movff	plusw1,indf2
 25215                           
 25216                           ;stkvar	_c @ sp[(-4)+-4]
 25217                           ;stkvar	_n @ sp[(-4)+-6]
 25218                           ;stkvar	_s @ sp[(-4)+0]
 25219  01B282  0EFC               	movlw	-4
 25220  01B284  006F FF8C  F034    	movff	plusw1,btemp+10
 25221  01B28A  0EFD               	movlw	-3
 25222  01B28C  006F FF8C  F035    	movff	plusw1,btemp+11
 25223  01B292  0EF6               	movlw	-10
 25224  01B294  50E3               	movf	plusw1,w,c
 25225  01B296  2634               	addwf	(btemp+10)^0,f,c
 25226  01B298  0EF7               	movlw	-9
 25227  01B29A  50E3               	movf	plusw1,w,c
 25228  01B29C  2235               	addwfc	(btemp+11)^0,f,c
 25229  01B29E  0EFD               	movlw	253
 25230  01B2A0  2434               	addwf	(btemp+10)^0,w,c
 25231  01B2A2  6ED9               	movwf	fsr2l,c
 25232  01B2A4  0EFF               	movlw	255
 25233  01B2A6  2035               	addwfc	(btemp+11)^0,w,c
 25234  01B2A8  6EDA               	movwf	fsr2h,c
 25235  01B2AA  0EF8               	movlw	-8
 25236  01B2AC  006F FF8F FFDF     	movff	plusw1,indf2
 25237                           
 25238                           ;stkvar	_n @ sp[(-4)+-6]
 25239  01B2B2  0EF7               	movlw	-9
 25240  01B2B4  50E3               	movf	plusw1,w,c
 25241  01B2B6  E108               	bnz	l15406
 25242  01B2B8  0EF6               	movlw	-10
 25243  01B2BA  006F FF8C  F02A    	movff	plusw1,btemp
 25244  01B2C0  0E07               	movlw	7
 25245  01B2C2  5E2A               	subwf	btemp^0,f,c
 25246  01B2C4  A0D8               	btfss	status,0,c
 25247  01B2C6  D0C6               	goto	u14310
 25248  01B2C8                     l15406:
 25249                           
 25250                           ;stkvar	_c @ sp[(-4)+-4]
 25251                           ;stkvar	_s @ sp[(-4)+0]
 25252  01B2C8  0EFC               	movlw	-4
 25253  01B2CA  006F FF8C  F034    	movff	plusw1,btemp+10
 25254  01B2D0  0EFD               	movlw	-3
 25255  01B2D2  006F FF8C  F035    	movff	plusw1,btemp+11
 25256  01B2D8  0E03               	movlw	3
 25257  01B2DA  2434               	addwf	(btemp+10)^0,w,c
 25258  01B2DC  6ED9               	movwf	fsr2l,c
 25259  01B2DE  0E00               	movlw	0
 25260  01B2E0  2035               	addwfc	(btemp+11)^0,w,c
 25261  01B2E2  6EDA               	movwf	fsr2h,c
 25262  01B2E4  0EF8               	movlw	-8
 25263  01B2E6  006F FF8F FFDF     	movff	plusw1,indf2
 25264                           
 25265                           ;stkvar	_c @ sp[(-4)+-4]
 25266                           ;stkvar	_n @ sp[(-4)+-6]
 25267                           ;stkvar	_s @ sp[(-4)+0]
 25268  01B2EC  0EFC               	movlw	-4
 25269  01B2EE  006F FF8C  F034    	movff	plusw1,btemp+10
 25270  01B2F4  0EFD               	movlw	-3
 25271  01B2F6  006F FF8C  F035    	movff	plusw1,btemp+11
 25272  01B2FC  0EF6               	movlw	-10
 25273  01B2FE  50E3               	movf	plusw1,w,c
 25274  01B300  2634               	addwf	(btemp+10)^0,f,c
 25275  01B302  0EF7               	movlw	-9
 25276  01B304  50E3               	movf	plusw1,w,c
 25277  01B306  2235               	addwfc	(btemp+11)^0,f,c
 25278  01B308  0EFC               	movlw	252
 25279  01B30A  2434               	addwf	(btemp+10)^0,w,c
 25280  01B30C  6ED9               	movwf	fsr2l,c
 25281  01B30E  0EFF               	movlw	255
 25282  01B310  2035               	addwfc	(btemp+11)^0,w,c
 25283  01B312  6EDA               	movwf	fsr2h,c
 25284  01B314  0EF8               	movlw	-8
 25285  01B316  006F FF8F FFDF     	movff	plusw1,indf2
 25286                           
 25287                           ;stkvar	_n @ sp[(-4)+-6]
 25288  01B31C  0EF7               	movlw	-9
 25289  01B31E  50E3               	movf	plusw1,w,c
 25290  01B320  E108               	bnz	l15412
 25291  01B322  0EF6               	movlw	-10
 25292  01B324  006F FF8C  F02A    	movff	plusw1,btemp
 25293  01B32A  0E09               	movlw	9
 25294  01B32C  5E2A               	subwf	btemp^0,f,c
 25295  01B32E  A0D8               	btfss	status,0,c
 25296  01B330  D091               	goto	u14310
 25297  01B332                     l15412:
 25298                           
 25299                           ;stkvar	_s @ sp[(-4)+0]
 25300  01B332  0EFC               	movlw	-4
 25301  01B334  006F FF8C  F034    	movff	plusw1,btemp+10
 25302  01B33A  1E34               	comf	(btemp+10)^0,f,c
 25303  01B33C  0EFD               	movlw	-3
 25304  01B33E  006F FF8C  F035    	movff	plusw1,btemp+11
 25305  01B344  1E35               	comf	(btemp+11)^0,f,c
 25306  01B346  2A34               	incf	(btemp+10)^0,f,c
 25307  01B348  B4D8               	btfsc	status,2,c
 25308  01B34A  2A35               	incf	(btemp+11)^0,f,c
 25309  01B34C  0E03               	movlw	3
 25310  01B34E  1634               	andwf	(btemp+10)^0,f,c
 25311  01B350  0E00               	movlw	0
 25312  01B352  1635               	andwf	(btemp+11)^0,f,c
 25313                           
 25314                           ;stkvar	_k @ sp[(-4)+2]
 25315  01B354  0EFE               	movlw	-2
 25316  01B356  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25317  01B35C  0EFF               	movlw	-1
 25318  01B35E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25319                           
 25320                           ;stkvar	_k @ sp[(-4)+2]
 25321                           ;stkvar	_s @ sp[(-4)+0]
 25322  01B364  0EFC               	movlw	-4
 25323  01B366  50E3               	movf	plusw1,w,c
 25324  01B368  6E2A               	movwf	btemp^0,c
 25325  01B36A  0EFE               	movlw	-2
 25326  01B36C  50E3               	movf	plusw1,w,c
 25327  01B36E  262A               	addwf	btemp^0,f,c
 25328  01B370  0EFC               	movlw	-4
 25329  01B372  0060  F0AB  FFE3   	movff	btemp,plusw1
 25330  01B378  0EFD               	movlw	-3
 25331  01B37A  50E3               	movf	plusw1,w,c
 25332  01B37C  6E2A               	movwf	btemp^0,c
 25333  01B37E  0EFF               	movlw	-1
 25334  01B380  50E3               	movf	plusw1,w,c
 25335  01B382  222A               	addwfc	btemp^0,f,c
 25336  01B384  0EFD               	movlw	-3
 25337  01B386  0060  F0AB  FFE3   	movff	btemp,plusw1
 25338                           
 25339                           ;stkvar	_k @ sp[(-4)+2]
 25340                           ;stkvar	_n @ sp[(-4)+-6]
 25341  01B38C  0EF6               	movlw	-10
 25342  01B38E  50E3               	movf	plusw1,w,c
 25343  01B390  6E2A               	movwf	btemp^0,c
 25344  01B392  0EFE               	movlw	-2
 25345  01B394  50E3               	movf	plusw1,w,c
 25346  01B396  5E2A               	subwf	btemp^0,f,c
 25347  01B398  0EF6               	movlw	-10
 25348  01B39A  0060  F0AB  FFE3   	movff	btemp,plusw1
 25349  01B3A0  0EF7               	movlw	-9
 25350  01B3A2  50E3               	movf	plusw1,w,c
 25351  01B3A4  6E2A               	movwf	btemp^0,c
 25352  01B3A6  0EFF               	movlw	-1
 25353  01B3A8  50E3               	movf	plusw1,w,c
 25354  01B3AA  5A2A               	subwfb	btemp^0,f,c
 25355  01B3AC  0EF7               	movlw	-9
 25356  01B3AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 25357  01B3B4  0EFC               	movlw	252
 25358  01B3B6  6E34               	movwf	(btemp+10)^0,c
 25359  01B3B8  0EFF               	movlw	255
 25360  01B3BA  6E35               	movwf	(btemp+11)^0,c
 25361                           
 25362                           ;stkvar	_n @ sp[(-4)+-6]
 25363  01B3BC  0EF6               	movlw	-10
 25364  01B3BE  006F FF8C  F02A    	movff	plusw1,btemp
 25365  01B3C4  5034               	movf	(btemp+10)^0,w,c
 25366  01B3C6  162A               	andwf	btemp^0,f,c
 25367  01B3C8  0EF6               	movlw	-10
 25368  01B3CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 25369  01B3D0  0EF7               	movlw	-9
 25370  01B3D2  006F FF8C  F02A    	movff	plusw1,btemp
 25371  01B3D8  5035               	movf	(btemp+11)^0,w,c
 25372  01B3DA  162A               	andwf	btemp^0,f,c
 25373  01B3DC  0EF7               	movlw	-9
 25374  01B3DE  D02E               	goto	L24
 25375  01B3E0                     l15420:
 25376                           
 25377                           ;stkvar	_c @ sp[(-4)+-4]
 25378                           ;stkvar	_s @ sp[(-4)+0]
 25379  01B3E0  0EFC               	movlw	-4
 25380  01B3E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25381  01B3E8  0EFD               	movlw	-3
 25382  01B3EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25383  01B3F0  0EF8               	movlw	-8
 25384  01B3F2  006F FF8F FFDF     	movff	plusw1,indf2
 25385                           
 25386                           ;stkvar	_n @ sp[(-4)+-6]
 25387  01B3F8  0EF6               	movlw	-10
 25388  01B3FA  006F FF8C  F02A    	movff	plusw1,btemp
 25389  01B400  0E01               	movlw	1
 25390  01B402  5E2A               	subwf	btemp^0,f,c
 25391  01B404  0EF6               	movlw	-10
 25392  01B406  0060  F0AB  FFE3   	movff	btemp,plusw1
 25393  01B40C  0EF7               	movlw	-9
 25394  01B40E  006F FF8C  F02A    	movff	plusw1,btemp
 25395  01B414  0E00               	movlw	0
 25396  01B416  5A2A               	subwfb	btemp^0,f,c
 25397  01B418  0EF7               	movlw	-9
 25398  01B41A  0060  F0AB  FFE3   	movff	btemp,plusw1
 25399                           
 25400                           ;stkvar	_s @ sp[(-4)+0]
 25401  01B420  0EFC               	movlw	-4
 25402  01B422  50E3               	movf	plusw1,w,c
 25403  01B424  0F01               	addlw	1
 25404  01B426  6E2A               	movwf	btemp^0,c
 25405  01B428  0EFC               	movlw	-4
 25406  01B42A  0060  F0AB  FFE3   	movff	btemp,plusw1
 25407  01B430  6A2A               	clrf	btemp^0,c
 25408  01B432  0EFD               	movlw	-3
 25409  01B434  50E3               	movf	plusw1,w,c
 25410  01B436  202A               	addwfc	btemp^0,w,c
 25411  01B438  6E2A               	movwf	btemp^0,c
 25412  01B43A  0EFD               	movlw	-3
 25413  01B43C                     L24:
 25414  01B43C  0060  F0AB  FFE3   	movff	btemp,plusw1
 25415                           
 25416                           ;stkvar	_n @ sp[(-4)+-6]
 25417  01B442  0EF6               	movlw	-10
 25418  01B444  006F FF8C  F02A    	movff	plusw1,btemp
 25419  01B44A  0EF7               	movlw	-9
 25420  01B44C  50E3               	movf	plusw1,w,c
 25421  01B44E  102A               	iorwf	btemp^0,w,c
 25422  01B450  A4D8               	btfss	status,2,c
 25423  01B452  D7C6               	goto	l15420
 25424  01B454                     u14310:
 25425                           
 25426                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 25427  01B454  0EF6               	movlw	246
 25428  01B456  26E1               	addwf	fsr1l,f,c
 25429  01B458  0EFF               	movlw	255
 25430  01B45A  22E2               	addwfc	fsr1h,f,c
 25431  01B45C  0012               	return		;funcret
 25432  01B45E                     __end_of_memset:
 25433                           	opt callstack 0
 25434                           
 25435 ;; *************** function _printf *****************
 25436 ;; Defined at:
 25437 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 25438 ;; Parameters:    Size  Location     Type
 25439 ;;  fmt             2  [STACK] PTR const unsigned char 
 25440 ;;		 -> STR_73(3), 
 25441 ;; Auto vars:     Size  Location     Type
 25442 ;;  ap              2  [STACK] PTR void [1]
 25443 ;;		 -> ?_printf(2), ?_sprintf(2), 
 25444 ;;  ret             2    0        int 
 25445 ;; Return value:  Size  Location     Type
 25446 ;;                  2  [STACK] int 
 25447 ;; Registers used:
 25448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25449 ;; Tracked objects:
 25450 ;;		On entry : 3F/3B
 25451 ;;		On exit  : 3F/0
 25452 ;;		Unchanged: 0/0
 25453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25458 ;;Total ram usage:        0 bytes
 25459 ;; Hardware stack levels used:    1
 25460 ;; Hardware stack levels required when called:   23
 25461 ;; This function calls:
 25462 ;;		_vfprintf
 25463 ;; This function is called by:
 25464 ;;		_eaDogM_WriteString
 25465 ;; This function uses a reentrant model
 25466 ;;
 25467                           
 25468                           	psect	text91
 25469  0017D2                     __ptext91:
 25470                           	opt callstack 0
 25471  0017D2                     _printf:
 25472                           	opt callstack 0
 25473                           
 25474                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25475  0017D2  52E6               	movf	postinc1,f,c
 25476  0017D4  52E6               	movf	postinc1,f,c
 25477                           
 25478                           ;stkvar	?_printf @ sp[(-2)+-3]
 25479                           
 25480                           ;incstack = 0
 25481  0017D6  0EFB               	movlw	251
 25482  0017D8  24E1               	addwf	fsr1l,w,c
 25483  0017DA  6E34               	movwf	(btemp+10)^0,c
 25484  0017DC  0EFF               	movlw	255
 25485  0017DE  20E2               	addwfc	fsr1h,w,c
 25486  0017E0  6E35               	movwf	(btemp+11)^0,c
 25487                           
 25488                           ;stkvar	_ap @ sp[(-2)+0]
 25489  0017E2  0EFF               	movlw	-1
 25490  0017E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25491  0017EA  0EFE               	movlw	-2
 25492  0017EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25493                           
 25494                           ;stkvar	_ap @ sp[(-2)+0]
 25495  0017F2  0EFE               	movlw	254
 25496  0017F4  24E1               	addwf	fsr1l,w,c
 25497  0017F6  6E2A               	movwf	btemp^0,c
 25498  0017F8  0EFF               	movlw	255
 25499  0017FA  20E2               	addwfc	fsr1h,w,c
 25500  0017FC  6E2B               	movwf	(btemp+1)^0,c
 25501  0017FE  0060  F0AB  FFE6   	movff	btemp,postinc1
 25502  001804  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25503                           
 25504                           ;stkvar	_fmt @ sp[(-4)+-3]
 25505  00180A  0EF9               	movlw	-7
 25506  00180C  006F FF8F FFE6     	movff	plusw1,postinc1
 25507  001812  006F FF8F FFE6     	movff	plusw1,postinc1
 25508  001818  0E00               	movlw	0
 25509  00181A  6EE6               	movwf	postinc1,c
 25510  00181C  0E00               	movlw	0
 25511  00181E  6EE6               	movwf	postinc1,c
 25512  001820  ECAD  F004         	call	_vfprintf	;wreg free
 25513                           
 25514                           ; BSR set to: 0
 25515                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 25516  001824  52E5               	movf	postdec1,f,c
 25517  001826  52E5               	movf	postdec1,f,c
 25518  001828  52E5               	movf	postdec1,f,c
 25519  00182A  50E7               	movf	indf1,w,c
 25520  00182C  5EE1               	subwf	fsr1l,f,c
 25521  00182E  0E00               	movlw	0
 25522  001830  5AE2               	subwfb	fsr1h,f,c
 25523  001832  0012               	return		;funcret
 25524  001834                     __end_of_printf:
 25525                           	opt callstack 0
 25526                           
 25527 ;; *************** function _vfprintf *****************
 25528 ;; Defined at:
 25529 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25530 ;; Parameters:    Size  Location     Type
 25531 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25532 ;;		 -> f(6), NULL(0), 
 25533 ;;  fmt             2  [STACK] PTR const unsigned char 
 25534 ;;		 -> STR_94(127), STR_92(3), STR_91(3), STR_90(21), 
 25535 ;;		 -> STR_89(21), STR_88(21), STR_87(21), STR_86(21), 
 25536 ;;		 -> STR_85(21), STR_84(26), STR_83(15), STR_82(15), 
 25537 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 25538 ;;		 -> STR_77(19), STR_76(19), STR_73(3), STR_72(14), 
 25539 ;;		 -> STR_71(28), STR_70(28), STR_69(28), STR_68(22), 
 25540 ;;		 -> STR_67(22), STR_66(22), STR_65(22), STR_64(22), 
 25541 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 25542 ;;		 -> STR_59(21), STR_58(22), STR_57(22), STR_56(22), 
 25543 ;;		 -> STR_55(22), STR_54(22), STR_53(22), STR_52(24), 
 25544 ;;		 -> STR_51(24), STR_50(24), STR_49(30), STR_48(24), 
 25545 ;;		 -> STR_47(24), STR_46(23), STR_45(23), STR_44(23), 
 25546 ;;		 -> STR_43(23), STR_42(23), STR_41(23), STR_40(23), 
 25547 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 25548 ;;		 -> STR_35(23), STR_34(18), STR_33(17), STR_32(17), 
 25549 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(14), 
 25550 ;;		 -> STR_27(27), STR_26(27), STR_25(23), STR_24(22), 
 25551 ;;		 -> STR_23(22), STR_22(22), STR_21(22), STR_20(23), 
 25552 ;;		 -> STR_19(23), STR_18(23), STR_17(26), STR_16(22), 
 25553 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 25554 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 25555 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 25556 ;;		 -> STR_2(21), STR_1(21), 
 25557 ;;  ap              2  [STACK] PTR PTR void 
 25558 ;;		 -> ap(2), ap(2), 
 25559 ;; Auto vars:     Size  Location     Type
 25560 ;;  cfmt            2  [STACK] PTR unsigned char 
 25561 ;;		 -> STR_94(127), STR_92(3), STR_91(3), STR_90(21), 
 25562 ;;		 -> STR_89(21), STR_88(21), STR_87(21), STR_86(21), 
 25563 ;;		 -> STR_85(21), STR_84(26), STR_83(15), STR_82(15), 
 25564 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 25565 ;;		 -> STR_77(19), STR_76(19), STR_73(3), STR_72(14), 
 25566 ;;		 -> STR_71(28), STR_70(28), STR_69(28), STR_68(22), 
 25567 ;;		 -> STR_67(22), STR_66(22), STR_65(22), STR_64(22), 
 25568 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 25569 ;;		 -> STR_59(21), STR_58(22), STR_57(22), STR_56(22), 
 25570 ;;		 -> STR_55(22), STR_54(22), STR_53(22), STR_52(24), 
 25571 ;;		 -> STR_51(24), STR_50(24), STR_49(30), STR_48(24), 
 25572 ;;		 -> STR_47(24), STR_46(23), STR_45(23), STR_44(23), 
 25573 ;;		 -> STR_43(23), STR_42(23), STR_41(23), STR_40(23), 
 25574 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 25575 ;;		 -> STR_35(23), STR_34(18), STR_33(17), STR_32(17), 
 25576 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(14), 
 25577 ;;		 -> STR_27(27), STR_26(27), STR_25(23), STR_24(22), 
 25578 ;;		 -> STR_23(22), STR_22(22), STR_21(22), STR_20(23), 
 25579 ;;		 -> STR_19(23), STR_18(23), STR_17(26), STR_16(22), 
 25580 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 25581 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 25582 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 25583 ;;		 -> STR_2(21), STR_1(21), 
 25584 ;; Return value:  Size  Location     Type
 25585 ;;                  2  [STACK] int 
 25586 ;; Registers used:
 25587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25588 ;; Tracked objects:
 25589 ;;		On entry : 0/2
 25590 ;;		On exit  : 3F/0
 25591 ;;		Unchanged: 0/0
 25592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25597 ;;Total ram usage:        0 bytes
 25598 ;; Hardware stack levels used:    1
 25599 ;; Hardware stack levels required when called:   22
 25600 ;; This function calls:
 25601 ;;		_vfpfcnvrt
 25602 ;; This function is called by:
 25603 ;;		_sprintf
 25604 ;;		_printf
 25605 ;; This function uses a reentrant model
 25606 ;;
 25607                           
 25608                           	psect	text92
 25609  00095A                     __ptext92:
 25610                           	opt callstack 0
 25611  00095A                     _vfprintf:
 25612                           	opt callstack 0
 25613                           
 25614                           ; BSR set to: 0
 25615                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25616  00095A  52E6               	movf	postinc1,f,c
 25617  00095C  52E6               	movf	postinc1,f,c
 25618                           
 25619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 25620                           ;stkvar	_fmt @ sp[(-2)+-4]
 25621                           
 25622                           ;incstack = 0
 25623 ;; hardware stack exceeded
 25624  00095E  0EFA               	movlw	-6
 25625  000960  006F FF8C  F034    	movff	plusw1,btemp+10
 25626  000966  0EFB               	movlw	-5
 25627  000968  006F FF8C  F035    	movff	plusw1,btemp+11
 25628                           
 25629                           ;stkvar	_cfmt @ sp[(-2)+0]
 25630  00096E  0EFF               	movlw	-1
 25631  000970  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25632  000976  0EFE               	movlw	-2
 25633  000978  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25634                           
 25635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 25636  00097E  0100               	movlb	0	; () banked
 25637  000980  6BBA               	clrf	_nout& (0+255),b
 25638  000982  6BBB               	clrf	(_nout+1)& (0+255),b
 25639                           
 25640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25641  000984  D021               	goto	l16606
 25642  000986                     l16604:
 25643                           
 25644                           ; BSR set to: 0
 25645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 25646                           ;stkvar	_ap @ sp[(-2)+-6]
 25647  000986  0EF8               	movlw	-8
 25648  000988  006F FF8F FFE6     	movff	plusw1,postinc1
 25649  00098E  006F FF8F FFE6     	movff	plusw1,postinc1
 25650                           
 25651                           ;stkvar	_cfmt @ sp[(-4)+0]
 25652  000994  0EFC               	movlw	252
 25653  000996  24E1               	addwf	fsr1l,w,c
 25654  000998  6E2A               	movwf	btemp^0,c
 25655  00099A  0EFF               	movlw	255
 25656  00099C  20E2               	addwfc	fsr1h,w,c
 25657  00099E  6E2B               	movwf	(btemp+1)^0,c
 25658  0009A0  0060  F0AB  FFE6   	movff	btemp,postinc1
 25659  0009A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25660                           
 25661                           ;stkvar	_fp @ sp[(-6)+-2]
 25662  0009AC  0EF8               	movlw	-8
 25663  0009AE  006F FF8F FFE6     	movff	plusw1,postinc1
 25664  0009B4  006F FF8F FFE6     	movff	plusw1,postinc1
 25665  0009BA  ECC6  F09C         	call	_vfpfcnvrt	;wreg free
 25666  0009BE  502A               	movf	btemp^0,w,c
 25667  0009C0  0100               	movlb	0	; () banked
 25668  0009C2  27BA               	addwf	_nout& (0+255),f,b
 25669  0009C4  502B               	movf	(btemp+1)^0,w,c
 25670  0009C6  23BB               	addwfc	(_nout+1)& (0+255),f,b
 25671  0009C8                     l16606:
 25672                           
 25673                           ; BSR set to: 0
 25674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25675                           ;stkvar	_cfmt @ sp[(-2)+0]
 25676  0009C8  50E1               	movf	fsr1l,w,c
 25677  0009CA  0FFE               	addlw	-2
 25678  0009CC  6ED9               	movwf	fsr2l,c
 25679  0009CE  50E2               	movf	fsr1h,w,c
 25680  0009D0  6EDA               	movwf	fsr2h,c
 25681  0009D2  0EFF               	movlw	255
 25682  0009D4  22DA               	addwfc	fsr2h,f,c
 25683  0009D6  006F FF7B FFF6     	movff	postinc2,tblptrl
 25684  0009DC  006F FF77 FFF7     	movff	postdec2,tblptrh
 25685  0009E2                     	if	0	;tblptru may be non-zero
 25686  0009E2                     	endif
 25687  0009E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25688  0009E2  0E00               	movlw	low (__mediumconst shr (0+16))
 25689  0009E4  6EF8               	movwf	tblptru,c
 25690  0009E6                     	endif
 25691  0009E6  0008               	tblrd		*
 25692  0009E8  50F5               	movf	tablat,w,c
 25693  0009EA  0900               	iorlw	0
 25694  0009EC  A4D8               	btfss	status,2,c
 25695  0009EE  D7CB               	goto	l16604
 25696                           
 25697                           ; BSR set to: 0
 25698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 25699  0009F0  0060  F2E8  F02A   	movff	_nout,btemp
 25700  0009F6  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 25701                           
 25702                           ; BSR set to: 0
 25703                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 25704  0009FC  0EF8               	movlw	248
 25705  0009FE  26E1               	addwf	fsr1l,f,c
 25706  000A00  0EFF               	movlw	255
 25707  000A02  22E2               	addwfc	fsr1h,f,c
 25708  000A04  0012               	return		;funcret
 25709  000A06                     __end_of_vfprintf:
 25710                           	opt callstack 0
 25711                           
 25712 ;; *************** function _vfpfcnvrt *****************
 25713 ;; Defined at:
 25714 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25715 ;; Parameters:    Size  Location     Type
 25716 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25717 ;;		 -> f(6), NULL(0), 
 25718 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 25719 ;;		 -> cfmt(2), 
 25720 ;;  ap              2  [STACK] PTR PTR void 
 25721 ;;		 -> ap(2), ap(2), 
 25722 ;; Auto vars:     Size  Location     Type
 25723 ;;  llu             8  [STACK] unsigned long long 
 25724 ;;  ll              8  [STACK] long long 
 25725 ;;  f               4  [STACK] long long 
 25726 ;;  ct              3  [STACK] unsigned char [3]
 25727 ;;  vp              3    0        PTR void 
 25728 ;;  cp              2  [STACK] PTR unsigned char 
 25729 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_75(9), 
 25730 ;;		 -> STR_74(12), D.lcd(640), D(642), T(176), 
 25731 ;;		 -> STR_3(5), V(181), 
 25732 ;;  i               2    0        int 
 25733 ;;  done            2    0        int 
 25734 ;;  c               1  [STACK] unsigned char 
 25735 ;; Return value:  Size  Location     Type
 25736 ;;                  2  [STACK] int 
 25737 ;; Registers used:
 25738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25739 ;; Tracked objects:
 25740 ;;		On entry : 0/0
 25741 ;;		On exit  : 0/0
 25742 ;;		Unchanged: 0/0
 25743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25748 ;;Total ram usage:        0 bytes
 25749 ;; Hardware stack levels used:    1
 25750 ;; Hardware stack levels required when called:   21
 25751 ;; This function calls:
 25752 ;;		_atoi
 25753 ;;		_ctoa
 25754 ;;		_dtoa
 25755 ;;		_efgtoa
 25756 ;;		_fputc
 25757 ;;		_isdigit
 25758 ;;		_isupper
 25759 ;;		_stoa
 25760 ;;		_strncmp
 25761 ;;		_tolower
 25762 ;;		_utoa
 25763 ;;		_xtoa
 25764 ;; This function is called by:
 25765 ;;		_vfprintf
 25766 ;; This function uses a reentrant model
 25767 ;;
 25768                           
 25769                           	psect	text93
 25770  01398C                     __ptext93:
 25771                           	opt callstack 0
 25772  01398C                     _vfpfcnvrt:
 25773                           	opt callstack 0
 25774                           
 25775                           ; BSR set to: 0
 25776                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25777  01398C  0E20               	movlw	32
 25778  01398E  26E1               	addwf	fsr1l,f,c
 25779  013990  0E00               	movlw	0
 25780  013992  22E2               	addwfc	fsr1h,f,c
 25781                           
 25782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 25783                           ;stkvar	_fmt @ sp[(-32)+-4]
 25784                           
 25785                           ;incstack = 0
 25786 ;; hardware stack exceeded
 25787  013994  0EDC               	movlw	-36
 25788  013996  006F FF8F FFD9     	movff	plusw1,fsr2l
 25789  01399C  0EDD               	movlw	-35
 25790  01399E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25791  0139A4  006F FF7B FFF6     	movff	postinc2,tblptrl
 25792  0139AA  006F FF77 FFF7     	movff	postdec2,tblptrh
 25793  0139B0                     	if	0	;tblptru may be non-zero
 25794  0139B0                     	endif
 25795  0139B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25796  0139B0  0E00               	movlw	low (__mediumconst shr (0+16))
 25797  0139B2  6EF8               	movwf	tblptru,c
 25798  0139B4                     	endif
 25799  0139B4  0008               	tblrd		*
 25800  0139B6  50F5               	movf	tablat,w,c
 25801  0139B8  0A25               	xorlw	37
 25802  0139BA  A4D8               	btfss	status,2,c
 25803  0139BC  EF6D  F0A4         	goto	l16374
 25804                           
 25805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 25806                           ;stkvar	_fmt @ sp[(-32)+-4]
 25807  0139C0  0EDC               	movlw	-36
 25808  0139C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25809  0139C8  0EDD               	movlw	-35
 25810  0139CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25811  0139D0  2ADE               	incf	postinc2,f,c
 25812  0139D2  0E00               	movlw	0
 25813  0139D4  22DD               	addwfc	postdec2,f,c
 25814                           
 25815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 25816  0139D6  6A4A               	clrf	_width^0,c
 25817  0139D8  6A4B               	clrf	(_width+1)^0,c
 25818  0139DA  6A4E               	clrf	_flags^0,c
 25819  0139DC  6A4F               	clrf	(_flags+1)^0,c
 25820                           
 25821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 25822  0139DE  684C               	setf	_prec^0,c
 25823  0139E0  684D               	setf	(_prec+1)^0,c
 25824                           
 25825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 25826                           ;stkvar	_fmt @ sp[(-32)+-4]
 25827  0139E2  0EDC               	movlw	-36
 25828  0139E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 25829  0139EA  0EDD               	movlw	-35
 25830  0139EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 25831  0139F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 25832  0139F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 25833  0139FE                     	if	0	;tblptru may be non-zero
 25834  0139FE                     	endif
 25835  0139FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25836  0139FE  0E00               	movlw	low (__mediumconst shr (0+16))
 25837  013A00  6EF8               	movwf	tblptru,c
 25838  013A02                     	endif
 25839  013A02  0008               	tblrd		*
 25840  013A04  50F5               	movf	tablat,w,c
 25841  013A06  0A2A               	xorlw	42
 25842  013A08  A4D8               	btfss	status,2,c
 25843  013A0A  D031               	goto	l16192
 25844                           
 25845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 25846                           ;stkvar	_fmt @ sp[(-32)+-4]
 25847  013A0C  0EDC               	movlw	-36
 25848  013A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25849  013A14  0EDD               	movlw	-35
 25850  013A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 25851  013A1C  2ADE               	incf	postinc2,f,c
 25852  013A1E  0E00               	movlw	0
 25853  013A20  22DD               	addwfc	postdec2,f,c
 25854                           
 25855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 25856                           ;stkvar	_ap @ sp[(-32)+-6]
 25857  013A22  0EDA               	movlw	-38
 25858  013A24  006F FF8F FFD9     	movff	plusw1,fsr2l
 25859  013A2A  0EDB               	movlw	-37
 25860  013A2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25861  013A32  0E02               	movlw	2
 25862  013A34  5EDE               	subwf	postinc2,f,c
 25863  013A36  0E00               	movlw	0
 25864  013A38  5ADD               	subwfb	postdec2,f,c
 25865  013A3A  006F FF78  F034    	movff	postinc2,btemp+10
 25866  013A40  006F FF74  F035    	movff	postdec2,btemp+11
 25867  013A46  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25868  013A4C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25869  013A52  006F FF78  F04A    	movff	postinc2,_width
 25870  013A58  006F FF74  F04B    	movff	postdec2,_width+1
 25871                           
 25872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 25873  013A5E  AE4B               	btfss	(_width+1)^0,7,c
 25874  013A60  D066               	goto	u15720
 25875                           
 25876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 25877  013A62  804E               	bsf	_flags^0,0,c
 25878                           
 25879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 25880  013A64  6C4A               	negf	_width^0,c
 25881  013A66  1E4B               	comf	(_width+1)^0,f,c
 25882  013A68  B0D8               	btfsc	status,0,c
 25883  013A6A  2A4B               	incf	(_width+1)^0,f,c
 25884  013A6C  D060               	goto	u15720
 25885  013A6E                     l16192:
 25886                           
 25887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 25888                           ;stkvar	_fmt @ sp[(-32)+-4]
 25889  013A6E  0EDC               	movlw	-36
 25890  013A70  006F FF8F FFD9     	movff	plusw1,fsr2l
 25891  013A76  0EDD               	movlw	-35
 25892  013A78  006F FF8F FFDA     	movff	plusw1,fsr2h
 25893  013A7E  006F FF78  F034    	movff	postinc2,btemp+10
 25894  013A84  006F FF74  F035    	movff	postdec2,btemp+11
 25895  013A8A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25896  013A90  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25897  013A96  EC27  F0E2         	call	_atoi	;wreg free
 25898  013A9A  0060  F0A8  F04A   	movff	btemp,_width
 25899  013AA0  0060  F0AC  F04B   	movff	btemp+1,_width+1
 25900                           
 25901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25902  013AA6  D00B               	goto	l16196
 25903  013AA8                     l16194:
 25904                           
 25905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 25906                           ;stkvar	_fmt @ sp[(-32)+-4]
 25907  013AA8  0EDC               	movlw	-36
 25908  013AAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25909  013AB0  0EDD               	movlw	-35
 25910  013AB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25911  013AB8  2ADE               	incf	postinc2,f,c
 25912  013ABA  0E00               	movlw	0
 25913  013ABC  22DD               	addwfc	postdec2,f,c
 25914  013ABE                     l16196:
 25915  013ABE  0ED0               	movlw	208
 25916  013AC0  6E34               	movwf	(btemp+10)^0,c
 25917  013AC2  0EFF               	movlw	255
 25918  013AC4  6E35               	movwf	(btemp+11)^0,c
 25919                           
 25920                           ;stkvar	_fmt @ sp[(-32)+-4]
 25921  013AC6  0EDC               	movlw	-36
 25922  013AC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 25923  013ACE  0EDD               	movlw	-35
 25924  013AD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 25925  013AD6  006F FF7B FFF6     	movff	postinc2,tblptrl
 25926  013ADC  006F FF77 FFF7     	movff	postdec2,tblptrh
 25927  013AE2                     	if	0	;tblptru may be non-zero
 25928  013AE2                     	endif
 25929  013AE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25930  013AE2  0E00               	movlw	low (__mediumconst shr (0+16))
 25931  013AE4  6EF8               	movwf	tblptru,c
 25932  013AE6                     	endif
 25933  013AE6  0008               	tblrd		*
 25934  013AE8  50F5               	movf	tablat,w,c
 25935  013AEA  6E32               	movwf	(btemp+8)^0,c
 25936  013AEC  6A33               	clrf	(btemp+9)^0,c
 25937  013AEE  5034               	movf	(btemp+10)^0,w,c
 25938  013AF0  2632               	addwf	(btemp+8)^0,f,c
 25939  013AF2  5035               	movf	(btemp+11)^0,w,c
 25940  013AF4  2233               	addwfc	(btemp+9)^0,f,c
 25941  013AF6  5033               	movf	(btemp+9)^0,w,c
 25942  013AF8  E106               	bnz	u15700
 25943  013AFA  0E0A               	movlw	10
 25944  013AFC  5C32               	subwf	(btemp+8)^0,w,c
 25945  013AFE  B0D8               	btfsc	status,0,c
 25946  013B00  D002               	goto	u15700
 25947  013B02  0E01               	movlw	1
 25948  013B04  D001               	goto	u15710
 25949  013B06                     u15700:
 25950  013B06  0E00               	movlw	0
 25951  013B08                     u15710:
 25952  013B08  6E34               	movwf	(btemp+10)^0,c
 25953  013B0A  6A35               	clrf	(btemp+11)^0,c
 25954                           
 25955                           ;stkvar	_vfpfcnvrt$6665 @ sp[(-32)+4]
 25956  013B0C  0EE4               	movlw	-28
 25957  013B0E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25958  013B14  0EE5               	movlw	-27
 25959  013B16  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25960                           
 25961                           ;stkvar	_vfpfcnvrt$6665 @ sp[(-32)+4]
 25962  013B1C  0EE4               	movlw	-28
 25963  013B1E  006F FF8C  F02A    	movff	plusw1,btemp
 25964  013B24  0EE5               	movlw	-27
 25965  013B26  50E3               	movf	plusw1,w,c
 25966  013B28  102A               	iorwf	btemp^0,w,c
 25967  013B2A  A4D8               	btfss	status,2,c
 25968  013B2C  D7BD               	goto	l16194
 25969  013B2E                     u15720:
 25970                           
 25971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 25972                           ;stkvar	_fmt @ sp[(-32)+-4]
 25973  013B2E  0EDC               	movlw	-36
 25974  013B30  006F FF8F FFD9     	movff	plusw1,fsr2l
 25975  013B36  0EDD               	movlw	-35
 25976  013B38  006F FF8F FFDA     	movff	plusw1,fsr2h
 25977  013B3E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25978  013B44  006F FF77 FFF7     	movff	postdec2,tblptrh
 25979  013B4A                     	if	0	;tblptru may be non-zero
 25980  013B4A                     	endif
 25981  013B4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25982  013B4A  0E00               	movlw	low (__mediumconst shr (0+16))
 25983  013B4C  6EF8               	movwf	tblptru,c
 25984  013B4E                     	endif
 25985  013B4E  0008               	tblrd		*
 25986  013B50  50F5               	movf	tablat,w,c
 25987  013B52  0A2E               	xorlw	46
 25988  013B54  A4D8               	btfss	status,2,c
 25989  013B56  D0AC               	goto	u15770
 25990                           
 25991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 25992  013B58  6A4C               	clrf	_prec^0,c
 25993  013B5A  6A4D               	clrf	(_prec+1)^0,c
 25994                           
 25995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 25996                           ;stkvar	_fmt @ sp[(-32)+-4]
 25997  013B5C  0EDC               	movlw	-36
 25998  013B5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25999  013B64  0EDD               	movlw	-35
 26000  013B66  006F FF8F FFDA     	movff	plusw1,fsr2h
 26001  013B6C  2ADE               	incf	postinc2,f,c
 26002  013B6E  0E00               	movlw	0
 26003  013B70  22DD               	addwfc	postdec2,f,c
 26004                           
 26005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 26006                           ;stkvar	_fmt @ sp[(-32)+-4]
 26007  013B72  0EDC               	movlw	-36
 26008  013B74  006F FF8F FFD9     	movff	plusw1,fsr2l
 26009  013B7A  0EDD               	movlw	-35
 26010  013B7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26011  013B82  006F FF7B FFF6     	movff	postinc2,tblptrl
 26012  013B88  006F FF77 FFF7     	movff	postdec2,tblptrh
 26013  013B8E                     	if	0	;tblptru may be non-zero
 26014  013B8E                     	endif
 26015  013B8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26016  013B8E  0E00               	movlw	low (__mediumconst shr (0+16))
 26017  013B90  6EF8               	movwf	tblptru,c
 26018  013B92                     	endif
 26019  013B92  0008               	tblrd		*
 26020  013B94  50F5               	movf	tablat,w,c
 26021  013B96  0A2A               	xorlw	42
 26022  013B98  A4D8               	btfss	status,2,c
 26023  013B9A  D02A               	goto	l16214
 26024                           
 26025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 26026                           ;stkvar	_fmt @ sp[(-32)+-4]
 26027  013B9C  0EDC               	movlw	-36
 26028  013B9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26029  013BA4  0EDD               	movlw	-35
 26030  013BA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26031  013BAC  2ADE               	incf	postinc2,f,c
 26032  013BAE  0E00               	movlw	0
 26033  013BB0  22DD               	addwfc	postdec2,f,c
 26034                           
 26035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 26036                           ;stkvar	_ap @ sp[(-32)+-6]
 26037  013BB2  0EDA               	movlw	-38
 26038  013BB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26039  013BBA  0EDB               	movlw	-37
 26040  013BBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26041  013BC2  0E02               	movlw	2
 26042  013BC4  5EDE               	subwf	postinc2,f,c
 26043  013BC6  0E00               	movlw	0
 26044  013BC8  5ADD               	subwfb	postdec2,f,c
 26045  013BCA  006F FF78  F034    	movff	postinc2,btemp+10
 26046  013BD0  006F FF74  F035    	movff	postdec2,btemp+11
 26047  013BD6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26048  013BDC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26049  013BE2  006F FF78  F04C    	movff	postinc2,_prec
 26050  013BE8  006F FF74  F04D    	movff	postdec2,_prec+1
 26051                           
 26052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 26053  013BEE  D060               	goto	u15770
 26054  013BF0                     l16214:
 26055                           
 26056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 26057                           ;stkvar	_fmt @ sp[(-32)+-4]
 26058  013BF0  0EDC               	movlw	-36
 26059  013BF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26060  013BF8  0EDD               	movlw	-35
 26061  013BFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26062  013C00  006F FF78  F034    	movff	postinc2,btemp+10
 26063  013C06  006F FF74  F035    	movff	postdec2,btemp+11
 26064  013C0C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26065  013C12  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26066  013C18  EC27  F0E2         	call	_atoi	;wreg free
 26067  013C1C  0060  F0A8  F04C   	movff	btemp,_prec
 26068  013C22  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 26069                           
 26070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26071  013C28  D00B               	goto	l16218
 26072  013C2A                     l16216:
 26073                           
 26074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 26075                           ;stkvar	_fmt @ sp[(-32)+-4]
 26076  013C2A  0EDC               	movlw	-36
 26077  013C2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26078  013C32  0EDD               	movlw	-35
 26079  013C34  006F FF8F FFDA     	movff	plusw1,fsr2h
 26080  013C3A  2ADE               	incf	postinc2,f,c
 26081  013C3C  0E00               	movlw	0
 26082  013C3E  22DD               	addwfc	postdec2,f,c
 26083  013C40                     l16218:
 26084  013C40  0ED0               	movlw	208
 26085  013C42  6E34               	movwf	(btemp+10)^0,c
 26086  013C44  0EFF               	movlw	255
 26087  013C46  6E35               	movwf	(btemp+11)^0,c
 26088                           
 26089                           ;stkvar	_fmt @ sp[(-32)+-4]
 26090  013C48  0EDC               	movlw	-36
 26091  013C4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26092  013C50  0EDD               	movlw	-35
 26093  013C52  006F FF8F FFDA     	movff	plusw1,fsr2h
 26094  013C58  006F FF7B FFF6     	movff	postinc2,tblptrl
 26095  013C5E  006F FF77 FFF7     	movff	postdec2,tblptrh
 26096  013C64                     	if	0	;tblptru may be non-zero
 26097  013C64                     	endif
 26098  013C64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26099  013C64  0E00               	movlw	low (__mediumconst shr (0+16))
 26100  013C66  6EF8               	movwf	tblptru,c
 26101  013C68                     	endif
 26102  013C68  0008               	tblrd		*
 26103  013C6A  50F5               	movf	tablat,w,c
 26104  013C6C  6E32               	movwf	(btemp+8)^0,c
 26105  013C6E  6A33               	clrf	(btemp+9)^0,c
 26106  013C70  5034               	movf	(btemp+10)^0,w,c
 26107  013C72  2632               	addwf	(btemp+8)^0,f,c
 26108  013C74  5035               	movf	(btemp+11)^0,w,c
 26109  013C76  2233               	addwfc	(btemp+9)^0,f,c
 26110  013C78  5033               	movf	(btemp+9)^0,w,c
 26111  013C7A  E106               	bnz	u15750
 26112  013C7C  0E0A               	movlw	10
 26113  013C7E  5C32               	subwf	(btemp+8)^0,w,c
 26114  013C80  B0D8               	btfsc	status,0,c
 26115  013C82  D002               	goto	u15750
 26116  013C84  0E01               	movlw	1
 26117  013C86  D001               	goto	u15760
 26118  013C88                     u15750:
 26119  013C88  0E00               	movlw	0
 26120  013C8A                     u15760:
 26121  013C8A  6E34               	movwf	(btemp+10)^0,c
 26122  013C8C  6A35               	clrf	(btemp+11)^0,c
 26123                           
 26124                           ;stkvar	_vfpfcnvrt$6666 @ sp[(-32)+0]
 26125  013C8E  0EE0               	movlw	-32
 26126  013C90  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26127  013C96  0EE1               	movlw	-31
 26128  013C98  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26129                           
 26130                           ;stkvar	_vfpfcnvrt$6666 @ sp[(-32)+0]
 26131  013C9E  0EE0               	movlw	-32
 26132  013CA0  006F FF8C  F02A    	movff	plusw1,btemp
 26133  013CA6  0EE1               	movlw	-31
 26134  013CA8  50E3               	movf	plusw1,w,c
 26135  013CAA  102A               	iorwf	btemp^0,w,c
 26136  013CAC  A4D8               	btfss	status,2,c
 26137  013CAE  D7BD               	goto	l16216
 26138  013CB0                     u15770:
 26139                           
 26140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 26141                           ;stkvar	_fmt @ sp[(-32)+-4]
 26142  013CB0  0EDC               	movlw	-36
 26143  013CB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26144  013CB8  0EDD               	movlw	-35
 26145  013CBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26146  013CC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 26147  013CC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 26148  013CCC                     	if	0	;tblptru may be non-zero
 26149  013CCC                     	endif
 26150  013CCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26151  013CCC  0E00               	movlw	low (__mediumconst shr (0+16))
 26152  013CCE  6EF8               	movwf	tblptru,c
 26153  013CD0                     	endif
 26154  013CD0  0008               	tblrd		*
 26155  013CD2  50F5               	movf	tablat,w,c
 26156  013CD4  6EE6               	movwf	postinc1,c
 26157  013CD6  0E00               	movlw	0
 26158  013CD8  6EE6               	movwf	postinc1,c
 26159  013CDA  ECDA  F008         	call	_tolower	;wreg free
 26160                           
 26161                           ;stkvar	_ct @ sp[(-32)+26]
 26162  013CDE  0EFA               	movlw	-6
 26163  013CE0  0060  F0AB  FFE3   	movff	btemp,plusw1
 26164                           
 26165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 26166                           ;stkvar	_ct @ sp[(-32)+26]
 26167  013CE6  0EFA               	movlw	-6
 26168  013CE8  50E3               	movf	plusw1,w,c
 26169  013CEA  B4D8               	btfsc	status,2,c
 26170  013CEC  D05B               	goto	l16234
 26171                           
 26172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 26173                           ;stkvar	_ct @ sp[(-32)+26]
 26174  013CEE  0EFB               	movlw	251
 26175  013CF0  24E1               	addwf	fsr1l,w,c
 26176  013CF2  6ED9               	movwf	fsr2l,c
 26177  013CF4  0EFF               	movlw	255
 26178  013CF6  20E2               	addwfc	fsr1h,w,c
 26179  013CF8  6EDA               	movwf	fsr2h,c
 26180                           
 26181                           ;stkvar	_fmt @ sp[(-32)+-4]
 26182  013CFA  0EDC               	movlw	-36
 26183  013CFC  006F FF8F FFE9     	movff	plusw1,fsr0l
 26184  013D02  0EDD               	movlw	-35
 26185  013D04  006F FF8F FFEA     	movff	plusw1,fsr0h
 26186  013D0A  006F FFB8  F034    	movff	postinc0,btemp+10
 26187  013D10  006F FFB4  F035    	movff	postdec0,btemp+11
 26188  013D16  0E01               	movlw	1
 26189  013D18  2634               	addwf	(btemp+10)^0,f,c
 26190  013D1A  0E00               	movlw	0
 26191  013D1C  2235               	addwfc	(btemp+11)^0,f,c
 26192  013D1E  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26193  013D24  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26194  013D2A                     	if	0	;tblptru may be non-zero
 26195  013D2A                     	endif
 26196  013D2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26197  013D2A  0E00               	movlw	low (__mediumconst shr (0+16))
 26198  013D2C  6EF8               	movwf	tblptru,c
 26199  013D2E                     	endif
 26200  013D2E  0008               	tblrd		*
 26201  013D30  50F5               	movf	tablat,w,c
 26202  013D32  6EE6               	movwf	postinc1,c
 26203  013D34  0E00               	movlw	0
 26204  013D36  6EE6               	movwf	postinc1,c
 26205  013D38  ECDA  F008         	call	_tolower	;wreg free
 26206  013D3C  502A               	movf	btemp^0,w,c
 26207  013D3E  6EDF               	movwf	indf2,c
 26208                           
 26209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 26210                           ;stkvar	_ct @ sp[(-32)+26]
 26211  013D40  0EFB               	movlw	251
 26212  013D42  24E1               	addwf	fsr1l,w,c
 26213  013D44  6ED9               	movwf	fsr2l,c
 26214  013D46  0EFF               	movlw	255
 26215  013D48  20E2               	addwfc	fsr1h,w,c
 26216  013D4A  6EDA               	movwf	fsr2h,c
 26217  013D4C  50DF               	movf	indf2,w,c
 26218  013D4E  B4D8               	btfsc	status,2,c
 26219  013D50  D029               	goto	l16234
 26220                           
 26221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 26222                           ;stkvar	_ct @ sp[(-32)+26]
 26223  013D52  0EFC               	movlw	252
 26224  013D54  24E1               	addwf	fsr1l,w,c
 26225  013D56  6ED9               	movwf	fsr2l,c
 26226  013D58  0EFF               	movlw	255
 26227  013D5A  20E2               	addwfc	fsr1h,w,c
 26228  013D5C  6EDA               	movwf	fsr2h,c
 26229                           
 26230                           ;stkvar	_fmt @ sp[(-32)+-4]
 26231  013D5E  0EDC               	movlw	-36
 26232  013D60  006F FF8F FFE9     	movff	plusw1,fsr0l
 26233  013D66  0EDD               	movlw	-35
 26234  013D68  006F FF8F FFEA     	movff	plusw1,fsr0h
 26235  013D6E  006F FFB8  F034    	movff	postinc0,btemp+10
 26236  013D74  006F FFB4  F035    	movff	postdec0,btemp+11
 26237  013D7A  0E02               	movlw	2
 26238  013D7C  2634               	addwf	(btemp+10)^0,f,c
 26239  013D7E  0E00               	movlw	0
 26240  013D80  2235               	addwfc	(btemp+11)^0,f,c
 26241  013D82  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26242  013D88  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26243  013D8E                     	if	0	;tblptru may be non-zero
 26244  013D8E                     	endif
 26245  013D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26246  013D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 26247  013D90  6EF8               	movwf	tblptru,c
 26248  013D92                     	endif
 26249  013D92  0008               	tblrd		*
 26250  013D94  50F5               	movf	tablat,w,c
 26251  013D96  6EE6               	movwf	postinc1,c
 26252  013D98  0E00               	movlw	0
 26253  013D9A  6EE6               	movwf	postinc1,c
 26254  013D9C  ECDA  F008         	call	_tolower	;wreg free
 26255  013DA0  502A               	movf	btemp^0,w,c
 26256  013DA2  6EDF               	movwf	indf2,c
 26257  013DA4                     l16234:
 26258                           
 26259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 26260                           ;stkvar	_fmt @ sp[(-32)+-4]
 26261  013DA4  0EDC               	movlw	-36
 26262  013DA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26263  013DAC  0EDD               	movlw	-35
 26264  013DAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26265  013DB4  006F FF7B FFF6     	movff	postinc2,tblptrl
 26266  013DBA  006F FF77 FFF7     	movff	postdec2,tblptrh
 26267  013DC0                     	if	0	;tblptru may be non-zero
 26268  013DC0                     	endif
 26269  013DC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26270  013DC0  0E00               	movlw	low (__mediumconst shr (0+16))
 26271  013DC2  6EF8               	movwf	tblptru,c
 26272  013DC4                     	endif
 26273  013DC4  0008               	tblrd		*
 26274  013DC6  50F5               	movf	tablat,w,c
 26275  013DC8  0A63               	xorlw	99
 26276  013DCA  A4D8               	btfss	status,2,c
 26277  013DCC  D037               	goto	l16244
 26278                           
 26279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 26280                           ;stkvar	_fmt @ sp[(-32)+-4]
 26281  013DCE  0EDC               	movlw	-36
 26282  013DD0  006F FF8F FFD9     	movff	plusw1,fsr2l
 26283  013DD6  0EDD               	movlw	-35
 26284  013DD8  006F FF8F FFDA     	movff	plusw1,fsr2h
 26285  013DDE  2ADE               	incf	postinc2,f,c
 26286  013DE0  0E00               	movlw	0
 26287  013DE2  22DD               	addwfc	postdec2,f,c
 26288                           
 26289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 26290                           ;stkvar	_ap @ sp[(-32)+-6]
 26291  013DE4  0EDA               	movlw	-38
 26292  013DE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26293  013DEC  0EDB               	movlw	-37
 26294  013DEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26295  013DF4  0E02               	movlw	2
 26296  013DF6  5EDE               	subwf	postinc2,f,c
 26297  013DF8  0E00               	movlw	0
 26298  013DFA  5ADD               	subwfb	postdec2,f,c
 26299  013DFC  006F FF78  F034    	movff	postinc2,btemp+10
 26300  013E02  006F FF74  F035    	movff	postdec2,btemp+11
 26301  013E08  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26302  013E0E  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26303  013E14  50DF               	movf	indf2,w,c
 26304  013E16  6E35               	movwf	(btemp+11)^0,c
 26305                           
 26306                           ;stkvar	_c @ sp[(-32)+31]
 26307  013E18  0EFF               	movlw	-1
 26308  013E1A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26309                           
 26310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 26311                           ;stkvar	_c @ sp[(-32)+31]
 26312  013E20  0EFF               	movlw	-1
 26313  013E22  50E3               	movf	plusw1,w,c
 26314  013E24  6EE6               	movwf	postinc1,c
 26315                           
 26316                           ;stkvar	_fp @ sp[(-33)+-2]
 26317  013E26  0EDD               	movlw	-35
 26318  013E28  006F FF8F FFE6     	movff	plusw1,postinc1
 26319  013E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 26320  013E34  EC54  F008         	call	_ctoa	;wreg free
 26321  013E38  EF97  F0A4         	goto	l2691
 26322  013E3C                     l16244:
 26323                           
 26324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 26325                           ;stkvar	_fmt @ sp[(-32)+-4]
 26326  013E3C  0EDC               	movlw	-36
 26327  013E3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26328  013E44  0EDD               	movlw	-35
 26329  013E46  006F FF8F FFDA     	movff	plusw1,fsr2h
 26330  013E4C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26331  013E52  006F FF77 FFF7     	movff	postdec2,tblptrh
 26332  013E58                     	if	0	;tblptru may be non-zero
 26333  013E58                     	endif
 26334  013E58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26335  013E58  0E00               	movlw	low (__mediumconst shr (0+16))
 26336  013E5A  6EF8               	movwf	tblptru,c
 26337  013E5C                     	endif
 26338  013E5C  0008               	tblrd		*
 26339  013E5E  50F5               	movf	tablat,w,c
 26340  013E60  0A64               	xorlw	100
 26341  013E62  B4D8               	btfsc	status,2,c
 26342  013E64  D015               	goto	u15820
 26343                           
 26344                           ;stkvar	_fmt @ sp[(-32)+-4]
 26345  013E66  0EDC               	movlw	-36
 26346  013E68  006F FF8F FFD9     	movff	plusw1,fsr2l
 26347  013E6E  0EDD               	movlw	-35
 26348  013E70  006F FF8F FFDA     	movff	plusw1,fsr2h
 26349  013E76  006F FF7B FFF6     	movff	postinc2,tblptrl
 26350  013E7C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26351  013E82                     	if	0	;tblptru may be non-zero
 26352  013E82                     	endif
 26353  013E82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26354  013E82  0E00               	movlw	low (__mediumconst shr (0+16))
 26355  013E84  6EF8               	movwf	tblptru,c
 26356  013E86                     	endif
 26357  013E86  0008               	tblrd		*
 26358  013E88  50F5               	movf	tablat,w,c
 26359  013E8A  0A69               	xorlw	105
 26360  013E8C  A4D8               	btfss	status,2,c
 26361  013E8E  D076               	goto	l16256
 26362  013E90                     u15820:
 26363                           
 26364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 26365                           ;stkvar	_fmt @ sp[(-32)+-4]
 26366  013E90  0EDC               	movlw	-36
 26367  013E92  006F FF8F FFD9     	movff	plusw1,fsr2l
 26368  013E98  0EDD               	movlw	-35
 26369  013E9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26370  013EA0  2ADE               	incf	postinc2,f,c
 26371  013EA2  0E00               	movlw	0
 26372  013EA4  22DD               	addwfc	postdec2,f,c
 26373                           
 26374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 26375                           ;stkvar	_ap @ sp[(-32)+-6]
 26376  013EA6  0EDA               	movlw	-38
 26377  013EA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26378  013EAE  0EDB               	movlw	-37
 26379  013EB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26380  013EB6  0E02               	movlw	2
 26381  013EB8  5EDE               	subwf	postinc2,f,c
 26382  013EBA  0E00               	movlw	0
 26383  013EBC  5ADD               	subwfb	postdec2,f,c
 26384  013EBE  006F FF78  F034    	movff	postinc2,btemp+10
 26385  013EC4  006F FF74  F035    	movff	postdec2,btemp+11
 26386  013ECA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26387  013ED0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26388  013ED6  006F FF78  F034    	movff	postinc2,btemp+10
 26389  013EDC  006F FF74  F035    	movff	postdec2,btemp+11
 26390                           
 26391                           ;stkvar	_ll @ sp[(-32)+14]
 26392  013EE2  0EEE               	movlw	-18
 26393  013EE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26394  013EEA  0EEF               	movlw	-17
 26395  013EEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26396  013EF2  6A2A               	clrf	btemp^0,c
 26397  013EF4  BEE3               	btfsc	plusw1,7,c
 26398  013EF6  682A               	setf	btemp^0,c
 26399  013EF8  0EF0               	movlw	-16
 26400  013EFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26401  013F00  0EF1               	movlw	-15
 26402  013F02  0060  F0AB  FFE3   	movff	btemp,plusw1
 26403  013F08  0EF2               	movlw	-14
 26404  013F0A  0060  F0AB  FFE3   	movff	btemp,plusw1
 26405  013F10  0EF3               	movlw	-13
 26406  013F12  0060  F0AB  FFE3   	movff	btemp,plusw1
 26407  013F18  0EF4               	movlw	-12
 26408  013F1A  0060  F0AB  FFE3   	movff	btemp,plusw1
 26409  013F20  0EF5               	movlw	-11
 26410  013F22  0060  F0AB  FFE3   	movff	btemp,plusw1
 26411  013F28                     l16252:
 26412                           
 26413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 26414                           ;stkvar	_ll @ sp[(-32)+14]
 26415  013F28  50E1               	movf	fsr1l,w,c
 26416  013F2A  0FEE               	addlw	-18
 26417  013F2C  6ED9               	movwf	fsr2l,c
 26418  013F2E  50E2               	movf	fsr1h,w,c
 26419  013F30  6EDA               	movwf	fsr2h,c
 26420  013F32  0EFF               	movlw	255
 26421  013F34  22DA               	addwfc	fsr2h,f,c
 26422  013F36  006F FF7B FFE6     	movff	postinc2,postinc1
 26423  013F3C  006F FF7B FFE6     	movff	postinc2,postinc1
 26424  013F42  006F FF7B FFE6     	movff	postinc2,postinc1
 26425  013F48  006F FF7B FFE6     	movff	postinc2,postinc1
 26426  013F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 26427  013F54  006F FF7B FFE6     	movff	postinc2,postinc1
 26428  013F5A  006F FF7B FFE6     	movff	postinc2,postinc1
 26429  013F60  006F FF7B FFE6     	movff	postinc2,postinc1
 26430                           
 26431                           ;stkvar	_fp @ sp[(-40)+-2]
 26432  013F66  0ED6               	movlw	-42
 26433  013F68  006F FF8F FFE6     	movff	plusw1,postinc1
 26434  013F6E  006F FF8F FFE6     	movff	plusw1,postinc1
 26435  013F74  ECD4  F0C5         	call	_dtoa	;wreg free
 26436  013F78  EF97  F0A4         	goto	l2691
 26437  013F7C                     l16256:
 26438                           
 26439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 26440  013F7C  0E02               	movlw	2
 26441  013F7E  6EE6               	movwf	postinc1,c
 26442  013F80  0E00               	movlw	0
 26443  013F82  6EE6               	movwf	postinc1,c
 26444  013F84  0EED               	movlw	low STR_103
 26445  013F86  6EE6               	movwf	postinc1,c
 26446  013F88  0EFF               	movlw	high STR_103
 26447  013F8A  6EE6               	movwf	postinc1,c
 26448                           
 26449                           ;stkvar	_fmt @ sp[(-36)+-4]
 26450  013F8C  0ED8               	movlw	-40
 26451  013F8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26452  013F94  0ED9               	movlw	-39
 26453  013F96  006F FF8F FFDA     	movff	plusw1,fsr2h
 26454  013F9C  006F FF78  F034    	movff	postinc2,btemp+10
 26455  013FA2  006F FF74  F035    	movff	postdec2,btemp+11
 26456  013FA8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26457  013FAE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26458  013FB4  ECDE  F0E7         	call	_strncmp	;wreg free
 26459  013FB8  502A               	movf	btemp^0,w,c
 26460  013FBA  102B               	iorwf	(btemp+1)^0,w,c
 26461  013FBC  B4D8               	btfsc	status,2,c
 26462  013FBE  D022               	goto	u15840
 26463  013FC0  0E02               	movlw	2
 26464  013FC2  6EE6               	movwf	postinc1,c
 26465  013FC4  0E00               	movlw	0
 26466  013FC6  6EE6               	movwf	postinc1,c
 26467  013FC8  0EF3               	movlw	low STR_107
 26468  013FCA  6EE6               	movwf	postinc1,c
 26469  013FCC  0EFF               	movlw	high STR_107
 26470  013FCE  6EE6               	movwf	postinc1,c
 26471                           
 26472                           ;stkvar	_fmt @ sp[(-36)+-4]
 26473  013FD0  0ED8               	movlw	-40
 26474  013FD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26475  013FD8  0ED9               	movlw	-39
 26476  013FDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26477  013FE0  006F FF78  F034    	movff	postinc2,btemp+10
 26478  013FE6  006F FF74  F035    	movff	postdec2,btemp+11
 26479  013FEC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26480  013FF2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26481  013FF8  ECDE  F0E7         	call	_strncmp	;wreg free
 26482  013FFC  502A               	movf	btemp^0,w,c
 26483  013FFE  102B               	iorwf	(btemp+1)^0,w,c
 26484  014000  A4D8               	btfss	status,2,c
 26485  014002  D069               	goto	l16268
 26486  014004                     u15840:
 26487                           
 26488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 26489                           ;stkvar	_fmt @ sp[(-32)+-4]
 26490  014004  0EDC               	movlw	-36
 26491  014006  006F FF8F FFD9     	movff	plusw1,fsr2l
 26492  01400C  0EDD               	movlw	-35
 26493  01400E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26494  014014  0E02               	movlw	2
 26495  014016  26DE               	addwf	postinc2,f,c
 26496  014018  0E00               	movlw	0
 26497  01401A  22DD               	addwfc	postdec2,f,c
 26498                           
 26499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 26500                           ;stkvar	_ap @ sp[(-32)+-6]
 26501  01401C  0EDA               	movlw	-38
 26502  01401E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26503  014024  0EDB               	movlw	-37
 26504  014026  006F FF8F FFDA     	movff	plusw1,fsr2h
 26505  01402C  0E04               	movlw	4
 26506  01402E  5EDE               	subwf	postinc2,f,c
 26507  014030  0E00               	movlw	0
 26508  014032  5ADD               	subwfb	postdec2,f,c
 26509  014034  006F FF78  F034    	movff	postinc2,btemp+10
 26510  01403A  006F FF74  F035    	movff	postdec2,btemp+11
 26511  014040  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26512  014046  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26513  01404C  006F FF78  F032    	movff	postinc2,btemp+8
 26514  014052  006F FF78  F033    	movff	postinc2,btemp+9
 26515  014058  006F FF78  F034    	movff	postinc2,btemp+10
 26516  01405E  006F FF78  F035    	movff	postinc2,btemp+11
 26517  014064  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 26518  01406A  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 26519  014070  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 26520  014076  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 26521  01407C  6A3E               	clrf	(btemp+20)^0,c
 26522  01407E  BE3D               	btfsc	(btemp+19)^0,7,c
 26523  014080  683E               	setf	(btemp+20)^0,c
 26524  014082  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 26525  014088  0060  F0F8  F040   	movff	btemp+20,btemp+22
 26526  01408E  0060  F0F8  F041   	movff	btemp+20,btemp+23
 26527                           
 26528                           ;stkvar	_ll @ sp[(-32)+14]
 26529  014094  0EEE               	movlw	-18
 26530  014096  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26531  01409C  0EEF               	movlw	-17
 26532  01409E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26533  0140A4  0EF0               	movlw	-16
 26534  0140A6  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26535  0140AC  0EF1               	movlw	-15
 26536  0140AE  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26537  0140B4  0EF2               	movlw	-14
 26538  0140B6  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26539  0140BC  0EF3               	movlw	-13
 26540  0140BE  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26541  0140C4  0EF4               	movlw	-12
 26542  0140C6  0060  F103  FFE3   	movff	btemp+22,plusw1
 26543  0140CC  0EF5               	movlw	-11
 26544  0140CE  0060  F107  FFE3   	movff	btemp+23,plusw1
 26545  0140D4  D729               	goto	l16252
 26546  0140D6                     l16268:
 26547                           
 26548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 26549                           ;stkvar	_ct @ sp[(-32)+26]
 26550  0140D6  0EFA               	movlw	-6
 26551  0140D8  006F FF8C  F02A    	movff	plusw1,btemp
 26552  0140DE  0E66               	movlw	102
 26553  0140E0  182A               	xorwf	btemp^0,w,c
 26554  0140E2  A4D8               	btfss	status,2,c
 26555  0140E4  D06E               	goto	l16280
 26556                           
 26557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 26558                           ;stkvar	_fmt @ sp[(-32)+-4]
 26559  0140E6  0EDC               	movlw	-36
 26560  0140E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26561  0140EE  0EDD               	movlw	-35
 26562  0140F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26563  0140F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26564  0140FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26565  014102                     	if	0	;tblptru may be non-zero
 26566  014102                     	endif
 26567  014102                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26568  014102  0E00               	movlw	low (__mediumconst shr (0+16))
 26569  014104  6EF8               	movwf	tblptru,c
 26570  014106                     	endif
 26571                           
 26572                           ;stkvar	_c @ sp[(-32)+31]
 26573  014106  0008               	tblrd		*
 26574  014108  0EFF               	movlw	-1
 26575  01410A  006F FFD7 FFE3     	movff	tablat,plusw1
 26576                           
 26577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 26578                           ;stkvar	_fmt @ sp[(-32)+-4]
 26579  014110  0EDC               	movlw	-36
 26580  014112  006F FF8F FFD9     	movff	plusw1,fsr2l
 26581  014118  0EDD               	movlw	-35
 26582  01411A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26583  014120  2ADE               	incf	postinc2,f,c
 26584  014122  0E00               	movlw	0
 26585  014124  22DD               	addwfc	postdec2,f,c
 26586                           
 26587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 26588                           ;stkvar	_ap @ sp[(-32)+-6]
 26589  014126  0EDA               	movlw	-38
 26590  014128  006F FF8F FFD9     	movff	plusw1,fsr2l
 26591  01412E  0EDB               	movlw	-37
 26592  014130  006F FF8F FFDA     	movff	plusw1,fsr2h
 26593  014136  0E04               	movlw	4
 26594  014138  5EDE               	subwf	postinc2,f,c
 26595  01413A  0E00               	movlw	0
 26596  01413C  5ADD               	subwfb	postdec2,f,c
 26597  01413E  006F FF78  F034    	movff	postinc2,btemp+10
 26598  014144  006F FF74  F035    	movff	postdec2,btemp+11
 26599  01414A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26600  014150  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26601  014156  006F FF78  F032    	movff	postinc2,btemp+8
 26602  01415C  006F FF78  F033    	movff	postinc2,btemp+9
 26603  014162  006F FF78  F034    	movff	postinc2,btemp+10
 26604  014168  006F FF78  F035    	movff	postinc2,btemp+11
 26605                           
 26606                           ;stkvar	_f @ sp[(-32)+22]
 26607  01416E  0EF6               	movlw	-10
 26608  014170  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26609  014176  0EF7               	movlw	-9
 26610  014178  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26611  01417E  0EF8               	movlw	-8
 26612  014180  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26613  014186  0EF9               	movlw	-7
 26614  014188  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26615  01418E                     l16276:
 26616                           
 26617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 26618                           ;stkvar	_c @ sp[(-32)+31]
 26619  01418E  0EFF               	movlw	-1
 26620  014190  50E3               	movf	plusw1,w,c
 26621  014192  6EE6               	movwf	postinc1,c
 26622                           
 26623                           ;stkvar	_f @ sp[(-33)+22]
 26624  014194  0EF5               	movlw	-11
 26625  014196  006F FF8F FFE6     	movff	plusw1,postinc1
 26626  01419C  006F FF8F FFE6     	movff	plusw1,postinc1
 26627  0141A2  006F FF8F FFE6     	movff	plusw1,postinc1
 26628  0141A8  006F FF8F FFE6     	movff	plusw1,postinc1
 26629                           
 26630                           ;stkvar	_fp @ sp[(-37)+-2]
 26631  0141AE  0ED9               	movlw	-39
 26632  0141B0  006F FF8F FFE6     	movff	plusw1,postinc1
 26633  0141B6  006F FF8F FFE6     	movff	plusw1,postinc1
 26634  0141BC  EC3B  F08B         	call	_efgtoa	;wreg free
 26635  0141C0  D3B6               	goto	l2691
 26636  0141C2                     l16280:
 26637                           
 26638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 26639  0141C2  0E02               	movlw	2
 26640  0141C4  6EE6               	movwf	postinc1,c
 26641  0141C6  0E00               	movlw	0
 26642  0141C8  6EE6               	movwf	postinc1,c
 26643  0141CA  0EF0               	movlw	low STR_112
 26644  0141CC  6EE6               	movwf	postinc1,c
 26645  0141CE  0EFF               	movlw	high STR_112
 26646  0141D0  6EE6               	movwf	postinc1,c
 26647                           
 26648                           ;stkvar	_ct @ sp[(-36)+26]
 26649  0141D2  0EF6               	movlw	246
 26650  0141D4  24E1               	addwf	fsr1l,w,c
 26651  0141D6  6E2A               	movwf	btemp^0,c
 26652  0141D8  0EFF               	movlw	255
 26653  0141DA  20E2               	addwfc	fsr1h,w,c
 26654  0141DC  6E2B               	movwf	(btemp+1)^0,c
 26655  0141DE  0060  F0AB  FFE6   	movff	btemp,postinc1
 26656  0141E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26657  0141EA  ECDE  F0E7         	call	_strncmp	;wreg free
 26658  0141EE  502A               	movf	btemp^0,w,c
 26659  0141F0  102B               	iorwf	(btemp+1)^0,w,c
 26660  0141F2  A4D8               	btfss	status,2,c
 26661  0141F4  D096               	goto	l16300
 26662                           
 26663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 26664                           ;stkvar	_fmt @ sp[(-32)+-4]
 26665  0141F6  0EDC               	movlw	-36
 26666  0141F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26667  0141FE  0EDD               	movlw	-35
 26668  014200  006F FF8F FFDA     	movff	plusw1,fsr2h
 26669  014206  006F FF78  F034    	movff	postinc2,btemp+10
 26670  01420C  006F FF74  F035    	movff	postdec2,btemp+11
 26671  014212  0E01               	movlw	1
 26672  014214  2634               	addwf	(btemp+10)^0,f,c
 26673  014216  0E00               	movlw	0
 26674  014218  2235               	addwfc	(btemp+11)^0,f,c
 26675  01421A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26676  014220  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26677  014226                     	if	0	;tblptru may be non-zero
 26678  014226                     	endif
 26679  014226                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26680  014226  0E00               	movlw	low (__mediumconst shr (0+16))
 26681  014228  6EF8               	movwf	tblptru,c
 26682  01422A                     	endif
 26683                           
 26684                           ;stkvar	_c @ sp[(-32)+31]
 26685  01422A  0008               	tblrd		*
 26686  01422C  0EFF               	movlw	-1
 26687  01422E  006F FFD7 FFE3     	movff	tablat,plusw1
 26688  014234  0EBF               	movlw	191
 26689  014236  6E34               	movwf	(btemp+10)^0,c
 26690  014238  0EFF               	movlw	255
 26691  01423A  6E35               	movwf	(btemp+11)^0,c
 26692                           
 26693                           ;stkvar	_fmt @ sp[(-32)+-4]
 26694  01423C  0EDC               	movlw	-36
 26695  01423E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26696  014244  0EDD               	movlw	-35
 26697  014246  006F FF8F FFDA     	movff	plusw1,fsr2h
 26698  01424C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26699  014252  006F FF77 FFF7     	movff	postdec2,tblptrh
 26700  014258                     	if	0	;tblptru may be non-zero
 26701  014258                     	endif
 26702  014258                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26703  014258  0E00               	movlw	low (__mediumconst shr (0+16))
 26704  01425A  6EF8               	movwf	tblptru,c
 26705  01425C                     	endif
 26706  01425C  0008               	tblrd		*
 26707  01425E  50F5               	movf	tablat,w,c
 26708  014260  6E32               	movwf	(btemp+8)^0,c
 26709  014262  6A33               	clrf	(btemp+9)^0,c
 26710  014264  5034               	movf	(btemp+10)^0,w,c
 26711  014266  2632               	addwf	(btemp+8)^0,f,c
 26712  014268  5035               	movf	(btemp+11)^0,w,c
 26713  01426A  2233               	addwfc	(btemp+9)^0,f,c
 26714  01426C  5033               	movf	(btemp+9)^0,w,c
 26715  01426E  E106               	bnz	u15870
 26716  014270  0E1A               	movlw	26
 26717  014272  5C32               	subwf	(btemp+8)^0,w,c
 26718  014274  B0D8               	btfsc	status,0,c
 26719  014276  D002               	goto	u15870
 26720  014278  0E01               	movlw	1
 26721  01427A  D001               	goto	u15880
 26722  01427C                     u15870:
 26723  01427C  0E00               	movlw	0
 26724  01427E                     u15880:
 26725  01427E  6E34               	movwf	(btemp+10)^0,c
 26726  014280  6A35               	clrf	(btemp+11)^0,c
 26727                           
 26728                           ;stkvar	_vfpfcnvrt$6677 @ sp[(-32)+2]
 26729  014282  0EE2               	movlw	-30
 26730  014284  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26731  01428A  0EE3               	movlw	-29
 26732  01428C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26733                           
 26734                           ;stkvar	_vfpfcnvrt$6677 @ sp[(-32)+2]
 26735  014292  0EE2               	movlw	-30
 26736  014294  006F FF8C  F02A    	movff	plusw1,btemp
 26737  01429A  0EE3               	movlw	-29
 26738  01429C  50E3               	movf	plusw1,w,c
 26739  01429E  102A               	iorwf	btemp^0,w,c
 26740                           
 26741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 26742                           ;stkvar	_ap @ sp[(-32)+-6]
 26743                           
 26744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 26745                           
 26746                           ;stkvar	_f @ sp[(-32)+22]
 26747                           
 26748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 26749                           ;stkvar	_ap @ sp[(-32)+-6]
 26750  0142A0  0EDA               	movlw	-38
 26751  0142A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26752  0142A8  0EDB               	movlw	-37
 26753  0142AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26754  0142B0  0E04               	movlw	4
 26755  0142B2  5EDE               	subwf	postinc2,f,c
 26756  0142B4  0E00               	movlw	0
 26757  0142B6  5ADD               	subwfb	postdec2,f,c
 26758  0142B8  006F FF78  F034    	movff	postinc2,btemp+10
 26759  0142BE  006F FF74  F035    	movff	postdec2,btemp+11
 26760  0142C4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26761  0142CA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26762  0142D0  006F FF78  F032    	movff	postinc2,btemp+8
 26763  0142D6  006F FF78  F033    	movff	postinc2,btemp+9
 26764  0142DC  006F FF78  F034    	movff	postinc2,btemp+10
 26765  0142E2  006F FF78  F035    	movff	postinc2,btemp+11
 26766                           
 26767                           ;stkvar	_f @ sp[(-32)+22]
 26768  0142E8  0EF6               	movlw	-10
 26769  0142EA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26770  0142F0  0EF7               	movlw	-9
 26771  0142F2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26772  0142F8  0EF8               	movlw	-8
 26773  0142FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26774  014300  0EF9               	movlw	-7
 26775  014302  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26776                           
 26777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 26778                           ;stkvar	_fmt @ sp[(-32)+-4]
 26779  014308  0EDC               	movlw	-36
 26780  01430A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26781  014310  0EDD               	movlw	-35
 26782  014312  006F FF8F FFDA     	movff	plusw1,fsr2h
 26783  014318  0E02               	movlw	2
 26784  01431A  26DE               	addwf	postinc2,f,c
 26785  01431C  0E00               	movlw	0
 26786  01431E  22DD               	addwfc	postdec2,f,c
 26787  014320  D736               	goto	l16276
 26788  014322                     l16300:
 26789                           
 26790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 26791                           ;stkvar	_fmt @ sp[(-32)+-4]
 26792  014322  0EDC               	movlw	-36
 26793  014324  006F FF8F FFD9     	movff	plusw1,fsr2l
 26794  01432A  0EDD               	movlw	-35
 26795  01432C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26796  014332  006F FF7B FFF6     	movff	postinc2,tblptrl
 26797  014338  006F FF77 FFF7     	movff	postdec2,tblptrh
 26798  01433E                     	if	0	;tblptru may be non-zero
 26799  01433E                     	endif
 26800  01433E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26801  01433E  0E00               	movlw	low (__mediumconst shr (0+16))
 26802  014340  6EF8               	movwf	tblptru,c
 26803  014342                     	endif
 26804  014342  0008               	tblrd		*
 26805  014344  50F5               	movf	tablat,w,c
 26806  014346  0A73               	xorlw	115
 26807  014348  A4D8               	btfss	status,2,c
 26808  01434A  D042               	goto	l16310
 26809                           
 26810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 26811                           ;stkvar	_fmt @ sp[(-32)+-4]
 26812  01434C  0EDC               	movlw	-36
 26813  01434E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26814  014354  0EDD               	movlw	-35
 26815  014356  006F FF8F FFDA     	movff	plusw1,fsr2h
 26816  01435C  2ADE               	incf	postinc2,f,c
 26817  01435E  0E00               	movlw	0
 26818  014360  22DD               	addwfc	postdec2,f,c
 26819                           
 26820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 26821                           ;stkvar	_ap @ sp[(-32)+-6]
 26822  014362  0EDA               	movlw	-38
 26823  014364  006F FF8F FFD9     	movff	plusw1,fsr2l
 26824  01436A  0EDB               	movlw	-37
 26825  01436C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26826  014372  0E02               	movlw	2
 26827  014374  5EDE               	subwf	postinc2,f,c
 26828  014376  0E00               	movlw	0
 26829  014378  5ADD               	subwfb	postdec2,f,c
 26830  01437A  006F FF78  F034    	movff	postinc2,btemp+10
 26831  014380  006F FF74  F035    	movff	postdec2,btemp+11
 26832  014386  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26833  01438C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26834  014392  006F FF78  F034    	movff	postinc2,btemp+10
 26835  014398  006F FF74  F035    	movff	postdec2,btemp+11
 26836                           
 26837                           ;stkvar	_cp @ sp[(-32)+29]
 26838  01439E  0EFE               	movlw	-2
 26839  0143A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26840  0143A6  0EFD               	movlw	-3
 26841  0143A8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26842                           
 26843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 26844                           ;stkvar	_cp @ sp[(-32)+29]
 26845  0143AE  0EFD               	movlw	-3
 26846  0143B0  006F FF8F FFE6     	movff	plusw1,postinc1
 26847  0143B6  006F FF8F FFE6     	movff	plusw1,postinc1
 26848                           
 26849                           ;stkvar	_fp @ sp[(-34)+-2]
 26850  0143BC  0EDC               	movlw	-36
 26851  0143BE  006F FF8F FFE6     	movff	plusw1,postinc1
 26852  0143C4  006F FF8F FFE6     	movff	plusw1,postinc1
 26853  0143CA  EC08  F0DD         	call	_stoa	;wreg free
 26854  0143CE  D2AF               	goto	l2691
 26855  0143D0                     l16310:
 26856                           
 26857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 26858                           ;stkvar	_fmt @ sp[(-32)+-4]
 26859  0143D0  0EDC               	movlw	-36
 26860  0143D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26861  0143D8  0EDD               	movlw	-35
 26862  0143DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26863  0143E0  006F FF7B FFF6     	movff	postinc2,tblptrl
 26864  0143E6  006F FF77 FFF7     	movff	postdec2,tblptrh
 26865  0143EC                     	if	0	;tblptru may be non-zero
 26866  0143EC                     	endif
 26867  0143EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26868  0143EC  0E00               	movlw	low (__mediumconst shr (0+16))
 26869  0143EE  6EF8               	movwf	tblptru,c
 26870  0143F0                     	endif
 26871  0143F0  0008               	tblrd		*
 26872  0143F2  50F5               	movf	tablat,w,c
 26873  0143F4  0A75               	xorlw	117
 26874  0143F6  A4D8               	btfss	status,2,c
 26875  0143F8  D07C               	goto	l16320
 26876                           
 26877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 26878                           ;stkvar	_fmt @ sp[(-32)+-4]
 26879  0143FA  0EDC               	movlw	-36
 26880  0143FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26881  014402  0EDD               	movlw	-35
 26882  014404  006F FF8F FFDA     	movff	plusw1,fsr2h
 26883  01440A  2ADE               	incf	postinc2,f,c
 26884  01440C  0E00               	movlw	0
 26885  01440E  22DD               	addwfc	postdec2,f,c
 26886                           
 26887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26888                           ;stkvar	_ap @ sp[(-32)+-6]
 26889  014410  0EDA               	movlw	-38
 26890  014412  006F FF8F FFD9     	movff	plusw1,fsr2l
 26891  014418  0EDB               	movlw	-37
 26892  01441A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26893  014420  0E02               	movlw	2
 26894  014422  5EDE               	subwf	postinc2,f,c
 26895  014424  0E00               	movlw	0
 26896  014426  5ADD               	subwfb	postdec2,f,c
 26897  014428  006F FF78  F034    	movff	postinc2,btemp+10
 26898  01442E  006F FF74  F035    	movff	postdec2,btemp+11
 26899  014434  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26900  01443A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26901  014440  006F FF78  F034    	movff	postinc2,btemp+10
 26902  014446  006F FF74  F035    	movff	postdec2,btemp+11
 26903  01444C  5034               	movf	(btemp+10)^0,w,c
 26904  01444E  6E3A               	movwf	(btemp+16)^0,c
 26905  014450  5035               	movf	(btemp+11)^0,w,c
 26906  014452  6E3B               	movwf	(btemp+17)^0,c
 26907  014454  6A3C               	clrf	(btemp+18)^0,c
 26908  014456  6A3D               	clrf	(btemp+19)^0,c
 26909  014458  6A3E               	clrf	(btemp+20)^0,c
 26910  01445A  6A3F               	clrf	(btemp+21)^0,c
 26911  01445C  6A40               	clrf	(btemp+22)^0,c
 26912  01445E  6A41               	clrf	(btemp+23)^0,c
 26913                           
 26914                           ;stkvar	_llu @ sp[(-32)+6]
 26915  014460  0EE6               	movlw	-26
 26916  014462  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26917  014468  0EE7               	movlw	-25
 26918  01446A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26919  014470  0EE8               	movlw	-24
 26920  014472  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26921  014478  0EE9               	movlw	-23
 26922  01447A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26923  014480  0EEA               	movlw	-22
 26924  014482  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26925  014488  0EEB               	movlw	-21
 26926  01448A  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26927  014490  0EEC               	movlw	-20
 26928  014492  0060  F103  FFE3   	movff	btemp+22,plusw1
 26929  014498  0EED               	movlw	-19
 26930  01449A  0060  F107  FFE3   	movff	btemp+23,plusw1
 26931                           
 26932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 26933                           ;stkvar	_llu @ sp[(-32)+6]
 26934  0144A0  50E1               	movf	fsr1l,w,c
 26935  0144A2  0FE6               	addlw	-26
 26936  0144A4  6ED9               	movwf	fsr2l,c
 26937  0144A6  50E2               	movf	fsr1h,w,c
 26938  0144A8  6EDA               	movwf	fsr2h,c
 26939  0144AA  0EFF               	movlw	255
 26940  0144AC  22DA               	addwfc	fsr2h,f,c
 26941  0144AE  006F FF7B FFE6     	movff	postinc2,postinc1
 26942  0144B4  006F FF7B FFE6     	movff	postinc2,postinc1
 26943  0144BA  006F FF7B FFE6     	movff	postinc2,postinc1
 26944  0144C0  006F FF7B FFE6     	movff	postinc2,postinc1
 26945  0144C6  006F FF7B FFE6     	movff	postinc2,postinc1
 26946  0144CC  006F FF7B FFE6     	movff	postinc2,postinc1
 26947  0144D2  006F FF7B FFE6     	movff	postinc2,postinc1
 26948  0144D8  006F FF7B FFE6     	movff	postinc2,postinc1
 26949                           
 26950                           ;stkvar	_fp @ sp[(-40)+-2]
 26951  0144DE  0ED6               	movlw	-42
 26952  0144E0  006F FF8F FFE6     	movff	plusw1,postinc1
 26953  0144E6  006F FF8F FFE6     	movff	plusw1,postinc1
 26954  0144EC  EC9B  F0D5         	call	_utoa	;wreg free
 26955  0144F0  D21E               	goto	l2691
 26956  0144F2                     l16320:
 26957                           
 26958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 26959  0144F2  0E02               	movlw	2
 26960  0144F4  6EE6               	movwf	postinc1,c
 26961  0144F6  0E00               	movlw	0
 26962  0144F8  6EE6               	movwf	postinc1,c
 26963  0144FA  0EF6               	movlw	low STR_117
 26964  0144FC  6EE6               	movwf	postinc1,c
 26965  0144FE  0EFF               	movlw	high STR_117
 26966  014500  6EE6               	movwf	postinc1,c
 26967                           
 26968                           ;stkvar	_fmt @ sp[(-36)+-4]
 26969  014502  0ED8               	movlw	-40
 26970  014504  006F FF8F FFD9     	movff	plusw1,fsr2l
 26971  01450A  0ED9               	movlw	-39
 26972  01450C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26973  014512  006F FF78  F034    	movff	postinc2,btemp+10
 26974  014518  006F FF74  F035    	movff	postdec2,btemp+11
 26975  01451E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26976  014524  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26977  01452A  ECDE  F0E7         	call	_strncmp	;wreg free
 26978  01452E  502A               	movf	btemp^0,w,c
 26979  014530  102B               	iorwf	(btemp+1)^0,w,c
 26980  014532  A4D8               	btfss	status,2,c
 26981  014534  D039               	goto	l16330
 26982                           
 26983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 26984                           ;stkvar	_fmt @ sp[(-32)+-4]
 26985  014536  0EDC               	movlw	-36
 26986  014538  006F FF8F FFD9     	movff	plusw1,fsr2l
 26987  01453E  0EDD               	movlw	-35
 26988  014540  006F FF8F FFDA     	movff	plusw1,fsr2h
 26989  014546  0E02               	movlw	2
 26990  014548  26DE               	addwf	postinc2,f,c
 26991  01454A  0E00               	movlw	0
 26992  01454C  22DD               	addwfc	postdec2,f,c
 26993                           
 26994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 26995                           ;stkvar	_ap @ sp[(-32)+-6]
 26996  01454E  0EDA               	movlw	-38
 26997  014550  006F FF8F FFD9     	movff	plusw1,fsr2l
 26998  014556  0EDB               	movlw	-37
 26999  014558  006F FF8F FFDA     	movff	plusw1,fsr2h
 27000  01455E  0E04               	movlw	4
 27001  014560  5EDE               	subwf	postinc2,f,c
 27002  014562  0E00               	movlw	0
 27003  014564  5ADD               	subwfb	postdec2,f,c
 27004  014566  006F FF78  F034    	movff	postinc2,btemp+10
 27005  01456C  006F FF74  F035    	movff	postdec2,btemp+11
 27006  014572  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27007  014578  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27008  01457E  006F FF78  F032    	movff	postinc2,btemp+8
 27009  014584  006F FF78  F033    	movff	postinc2,btemp+9
 27010  01458A  006F FF78  F034    	movff	postinc2,btemp+10
 27011  014590  006F FF78  F035    	movff	postinc2,btemp+11
 27012  014596  5032               	movf	(btemp+8)^0,w,c
 27013  014598  6E3A               	movwf	(btemp+16)^0,c
 27014  01459A  5033               	movf	(btemp+9)^0,w,c
 27015  01459C  6E3B               	movwf	(btemp+17)^0,c
 27016  01459E  5034               	movf	(btemp+10)^0,w,c
 27017  0145A0  6E3C               	movwf	(btemp+18)^0,c
 27018  0145A2  5035               	movf	(btemp+11)^0,w,c
 27019  0145A4  6E3D               	movwf	(btemp+19)^0,c
 27020  0145A6  D758               	goto	L25
 27021  0145A8                     l16330:
 27022                           
 27023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 27024                           ;stkvar	_fmt @ sp[(-32)+-4]
 27025  0145A8  0EDC               	movlw	-36
 27026  0145AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27027  0145B0  0EDD               	movlw	-35
 27028  0145B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27029  0145B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 27030  0145BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 27031  0145C4                     	if	0	;tblptru may be non-zero
 27032  0145C4                     	endif
 27033  0145C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27034  0145C4  0E00               	movlw	low (__mediumconst shr (0+16))
 27035  0145C6  6EF8               	movwf	tblptru,c
 27036  0145C8                     	endif
 27037  0145C8  0008               	tblrd		*
 27038  0145CA  50F5               	movf	tablat,w,c
 27039  0145CC  0A78               	xorlw	120
 27040  0145CE  B4D8               	btfsc	status,2,c
 27041  0145D0  D015               	goto	u15940
 27042                           
 27043                           ;stkvar	_fmt @ sp[(-32)+-4]
 27044  0145D2  0EDC               	movlw	-36
 27045  0145D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27046  0145DA  0EDD               	movlw	-35
 27047  0145DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27048  0145E2  006F FF7B FFF6     	movff	postinc2,tblptrl
 27049  0145E8  006F FF77 FFF7     	movff	postdec2,tblptrh
 27050  0145EE                     	if	0	;tblptru may be non-zero
 27051  0145EE                     	endif
 27052  0145EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27053  0145EE  0E00               	movlw	low (__mediumconst shr (0+16))
 27054  0145F0  6EF8               	movwf	tblptru,c
 27055  0145F2                     	endif
 27056  0145F2  0008               	tblrd		*
 27057  0145F4  50F5               	movf	tablat,w,c
 27058  0145F6  0A58               	xorlw	88
 27059  0145F8  A4D8               	btfss	status,2,c
 27060  0145FA  D094               	goto	l16344
 27061  0145FC                     u15940:
 27062                           
 27063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 27064                           ;stkvar	_fmt @ sp[(-32)+-4]
 27065  0145FC  0EDC               	movlw	-36
 27066  0145FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27067  014604  0EDD               	movlw	-35
 27068  014606  006F FF8F FFDA     	movff	plusw1,fsr2h
 27069  01460C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27070  014612  006F FF77 FFF7     	movff	postdec2,tblptrh
 27071  014618                     	if	0	;tblptru may be non-zero
 27072  014618                     	endif
 27073  014618                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27074  014618  0E00               	movlw	low (__mediumconst shr (0+16))
 27075  01461A  6EF8               	movwf	tblptru,c
 27076  01461C                     	endif
 27077                           
 27078                           ;stkvar	_c @ sp[(-32)+31]
 27079  01461C  0008               	tblrd		*
 27080  01461E  0EFF               	movlw	-1
 27081  014620  006F FFD7 FFE3     	movff	tablat,plusw1
 27082                           
 27083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 27084                           ;stkvar	_fmt @ sp[(-32)+-4]
 27085  014626  0EDC               	movlw	-36
 27086  014628  006F FF8F FFD9     	movff	plusw1,fsr2l
 27087  01462E  0EDD               	movlw	-35
 27088  014630  006F FF8F FFDA     	movff	plusw1,fsr2h
 27089  014636  2ADE               	incf	postinc2,f,c
 27090  014638  0E00               	movlw	0
 27091  01463A  22DD               	addwfc	postdec2,f,c
 27092                           
 27093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27094                           ;stkvar	_ap @ sp[(-32)+-6]
 27095  01463C  0EDA               	movlw	-38
 27096  01463E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27097  014644  0EDB               	movlw	-37
 27098  014646  006F FF8F FFDA     	movff	plusw1,fsr2h
 27099  01464C  0E02               	movlw	2
 27100  01464E  5EDE               	subwf	postinc2,f,c
 27101  014650  0E00               	movlw	0
 27102  014652  5ADD               	subwfb	postdec2,f,c
 27103  014654  006F FF78  F034    	movff	postinc2,btemp+10
 27104  01465A  006F FF74  F035    	movff	postdec2,btemp+11
 27105  014660  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27106  014666  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27107  01466C  006F FF78  F034    	movff	postinc2,btemp+10
 27108  014672  006F FF74  F035    	movff	postdec2,btemp+11
 27109  014678  5034               	movf	(btemp+10)^0,w,c
 27110  01467A  6E3A               	movwf	(btemp+16)^0,c
 27111  01467C  5035               	movf	(btemp+11)^0,w,c
 27112  01467E  6E3B               	movwf	(btemp+17)^0,c
 27113  014680  6A3C               	clrf	(btemp+18)^0,c
 27114  014682  6A3D               	clrf	(btemp+19)^0,c
 27115  014684  6A3E               	clrf	(btemp+20)^0,c
 27116  014686  6A3F               	clrf	(btemp+21)^0,c
 27117  014688  6A40               	clrf	(btemp+22)^0,c
 27118  01468A  6A41               	clrf	(btemp+23)^0,c
 27119                           
 27120                           ;stkvar	_llu @ sp[(-32)+6]
 27121  01468C  0EE6               	movlw	-26
 27122  01468E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27123  014694  0EE7               	movlw	-25
 27124  014696  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27125  01469C  0EE8               	movlw	-24
 27126  01469E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27127  0146A4  0EE9               	movlw	-23
 27128  0146A6  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27129  0146AC  0EEA               	movlw	-22
 27130  0146AE  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27131  0146B4  0EEB               	movlw	-21
 27132  0146B6  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27133  0146BC  0EEC               	movlw	-20
 27134  0146BE  0060  F103  FFE3   	movff	btemp+22,plusw1
 27135  0146C4  0EED               	movlw	-19
 27136  0146C6  0060  F107  FFE3   	movff	btemp+23,plusw1
 27137                           
 27138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 27139                           ;stkvar	_c @ sp[(-32)+31]
 27140  0146CC  0EFF               	movlw	-1
 27141  0146CE  50E3               	movf	plusw1,w,c
 27142  0146D0  6EE6               	movwf	postinc1,c
 27143                           
 27144                           ;stkvar	_llu @ sp[(-33)+6]
 27145  0146D2  50E1               	movf	fsr1l,w,c
 27146  0146D4  0FE5               	addlw	-27
 27147  0146D6  6ED9               	movwf	fsr2l,c
 27148  0146D8  50E2               	movf	fsr1h,w,c
 27149  0146DA  6EDA               	movwf	fsr2h,c
 27150  0146DC  0EFF               	movlw	255
 27151  0146DE  22DA               	addwfc	fsr2h,f,c
 27152  0146E0  006F FF7B FFE6     	movff	postinc2,postinc1
 27153  0146E6  006F FF7B FFE6     	movff	postinc2,postinc1
 27154  0146EC  006F FF7B FFE6     	movff	postinc2,postinc1
 27155  0146F2  006F FF7B FFE6     	movff	postinc2,postinc1
 27156  0146F8  006F FF7B FFE6     	movff	postinc2,postinc1
 27157  0146FE  006F FF7B FFE6     	movff	postinc2,postinc1
 27158  014704  006F FF7B FFE6     	movff	postinc2,postinc1
 27159  01470A  006F FF7B FFE6     	movff	postinc2,postinc1
 27160                           
 27161                           ;stkvar	_fp @ sp[(-41)+-2]
 27162  014710  0ED5               	movlw	-43
 27163  014712  006F FF8F FFE6     	movff	plusw1,postinc1
 27164  014718  006F FF8F FFE6     	movff	plusw1,postinc1
 27165  01471E  ECAE  F0CE         	call	_xtoa	;wreg free
 27166  014722  D105               	goto	l2691
 27167  014724                     l16344:
 27168                           
 27169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 27170  014724  0E02               	movlw	2
 27171  014726  6EE6               	movwf	postinc1,c
 27172  014728  0E00               	movlw	0
 27173  01472A  6EE6               	movwf	postinc1,c
 27174  01472C  0EF9               	movlw	low STR_122
 27175  01472E  6EE6               	movwf	postinc1,c
 27176  014730  0EFF               	movlw	high STR_122
 27177  014732  6EE6               	movwf	postinc1,c
 27178                           
 27179                           ;stkvar	_fmt @ sp[(-36)+-4]
 27180  014734  0ED8               	movlw	-40
 27181  014736  006F FF8F FFD9     	movff	plusw1,fsr2l
 27182  01473C  0ED9               	movlw	-39
 27183  01473E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27184  014744  006F FF78  F034    	movff	postinc2,btemp+10
 27185  01474A  006F FF74  F035    	movff	postdec2,btemp+11
 27186  014750  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27187  014756  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27188  01475C  ECDE  F0E7         	call	_strncmp	;wreg free
 27189  014760  502A               	movf	btemp^0,w,c
 27190  014762  102B               	iorwf	(btemp+1)^0,w,c
 27191  014764  B4D8               	btfsc	status,2,c
 27192  014766  D022               	goto	u15960
 27193  014768  0E02               	movlw	2
 27194  01476A  6EE6               	movwf	postinc1,c
 27195  01476C  0E00               	movlw	0
 27196  01476E  6EE6               	movwf	postinc1,c
 27197  014770  0EEA               	movlw	low STR_126
 27198  014772  6EE6               	movwf	postinc1,c
 27199  014774  0EFF               	movlw	high STR_126
 27200  014776  6EE6               	movwf	postinc1,c
 27201                           
 27202                           ;stkvar	_fmt @ sp[(-36)+-4]
 27203  014778  0ED8               	movlw	-40
 27204  01477A  006F FF8F FFD9     	movff	plusw1,fsr2l
 27205  014780  0ED9               	movlw	-39
 27206  014782  006F FF8F FFDA     	movff	plusw1,fsr2h
 27207  014788  006F FF78  F034    	movff	postinc2,btemp+10
 27208  01478E  006F FF74  F035    	movff	postdec2,btemp+11
 27209  014794  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27210  01479A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27211  0147A0  ECDE  F0E7         	call	_strncmp	;wreg free
 27212  0147A4  502A               	movf	btemp^0,w,c
 27213  0147A6  102B               	iorwf	(btemp+1)^0,w,c
 27214  0147A8  A4D8               	btfss	status,2,c
 27215  0147AA  D058               	goto	l16358
 27216  0147AC                     u15960:
 27217                           
 27218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 27219                           ;stkvar	_fmt @ sp[(-32)+-4]
 27220  0147AC  0EDC               	movlw	-36
 27221  0147AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27222  0147B4  0EDD               	movlw	-35
 27223  0147B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27224  0147BC  006F FF78  F034    	movff	postinc2,btemp+10
 27225  0147C2  006F FF74  F035    	movff	postdec2,btemp+11
 27226  0147C8  0E01               	movlw	1
 27227  0147CA  2634               	addwf	(btemp+10)^0,f,c
 27228  0147CC  0E00               	movlw	0
 27229  0147CE  2235               	addwfc	(btemp+11)^0,f,c
 27230  0147D0  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27231  0147D6  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27232  0147DC                     	if	0	;tblptru may be non-zero
 27233  0147DC                     	endif
 27234  0147DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27235  0147DC  0E00               	movlw	low (__mediumconst shr (0+16))
 27236  0147DE  6EF8               	movwf	tblptru,c
 27237  0147E0                     	endif
 27238                           
 27239                           ;stkvar	_c @ sp[(-32)+31]
 27240  0147E0  0008               	tblrd		*
 27241  0147E2  0EFF               	movlw	-1
 27242  0147E4  006F FFD7 FFE3     	movff	tablat,plusw1
 27243                           
 27244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 27245                           ;stkvar	_fmt @ sp[(-32)+-4]
 27246  0147EA  0EDC               	movlw	-36
 27247  0147EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27248  0147F2  0EDD               	movlw	-35
 27249  0147F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27250  0147FA  0E02               	movlw	2
 27251  0147FC  26DE               	addwf	postinc2,f,c
 27252  0147FE  0E00               	movlw	0
 27253  014800  22DD               	addwfc	postdec2,f,c
 27254                           
 27255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27256                           ;stkvar	_ap @ sp[(-32)+-6]
 27257  014802  0EDA               	movlw	-38
 27258  014804  006F FF8F FFD9     	movff	plusw1,fsr2l
 27259  01480A  0EDB               	movlw	-37
 27260  01480C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27261  014812  0E04               	movlw	4
 27262  014814  5EDE               	subwf	postinc2,f,c
 27263  014816  0E00               	movlw	0
 27264  014818  5ADD               	subwfb	postdec2,f,c
 27265  01481A  006F FF78  F034    	movff	postinc2,btemp+10
 27266  014820  006F FF74  F035    	movff	postdec2,btemp+11
 27267  014826  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27268  01482C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27269  014832  006F FF78  F032    	movff	postinc2,btemp+8
 27270  014838  006F FF78  F033    	movff	postinc2,btemp+9
 27271  01483E  006F FF78  F034    	movff	postinc2,btemp+10
 27272  014844  006F FF78  F035    	movff	postinc2,btemp+11
 27273  01484A  5032               	movf	(btemp+8)^0,w,c
 27274  01484C  6E3A               	movwf	(btemp+16)^0,c
 27275  01484E  5033               	movf	(btemp+9)^0,w,c
 27276  014850  6E3B               	movwf	(btemp+17)^0,c
 27277  014852  5034               	movf	(btemp+10)^0,w,c
 27278  014854  6E3C               	movwf	(btemp+18)^0,c
 27279  014856  5035               	movf	(btemp+11)^0,w,c
 27280  014858  6E3D               	movwf	(btemp+19)^0,c
 27281  01485A  D714               	goto	L26
 27282  01485C                     l16358:
 27283                           
 27284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 27285                           ;stkvar	_fmt @ sp[(-32)+-4]
 27286  01485C  0EDC               	movlw	-36
 27287  01485E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27288  014864  0EDD               	movlw	-35
 27289  014866  006F FF8F FFDA     	movff	plusw1,fsr2h
 27290  01486C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27291  014872  006F FF77 FFF7     	movff	postdec2,tblptrh
 27292  014878                     	if	0	;tblptru may be non-zero
 27293  014878                     	endif
 27294  014878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27295  014878  0E00               	movlw	low (__mediumconst shr (0+16))
 27296  01487A  6EF8               	movwf	tblptru,c
 27297  01487C                     	endif
 27298  01487C  0008               	tblrd		*
 27299  01487E  50F5               	movf	tablat,w,c
 27300  014880  0A25               	xorlw	37
 27301  014882  A4D8               	btfss	status,2,c
 27302  014884  D01A               	goto	l16368
 27303                           
 27304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 27305                           ;stkvar	_fmt @ sp[(-32)+-4]
 27306  014886  0EDC               	movlw	-36
 27307  014888  006F FF8F FFD9     	movff	plusw1,fsr2l
 27308  01488E  0EDD               	movlw	-35
 27309  014890  006F FF8F FFDA     	movff	plusw1,fsr2h
 27310  014896  2ADE               	incf	postinc2,f,c
 27311  014898  0E00               	movlw	0
 27312  01489A  22DD               	addwfc	postdec2,f,c
 27313                           
 27314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 27315                           ;stkvar	_fp @ sp[(-32)+-2]
 27316  01489C  0EDE               	movlw	-34
 27317  01489E  006F FF8F FFE6     	movff	plusw1,postinc1
 27318  0148A4  006F FF8F FFE6     	movff	plusw1,postinc1
 27319  0148AA  0E25               	movlw	37
 27320  0148AC  6EE6               	movwf	postinc1,c
 27321  0148AE  0E00               	movlw	0
 27322  0148B0  6EE6               	movwf	postinc1,c
 27323  0148B2  EC8E  F0FA         	call	_fputc	;wreg free
 27324  0148B6                     l16364:
 27325                           
 27326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 27327  0148B6  0E01               	movlw	1
 27328  0148B8  D00C               	goto	L27
 27329  0148BA                     l16368:
 27330                           
 27331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 27332                           ;stkvar	_fmt @ sp[(-32)+-4]
 27333  0148BA  0EDC               	movlw	-36
 27334  0148BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27335  0148C2  0EDD               	movlw	-35
 27336  0148C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27337  0148CA  2ADE               	incf	postinc2,f,c
 27338  0148CC  0E00               	movlw	0
 27339  0148CE  22DD               	addwfc	postdec2,f,c
 27340                           
 27341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 27342  0148D0  0E00               	movlw	0
 27343  0148D2                     L27:
 27344  0148D2  6E2A               	movwf	btemp^0,c
 27345  0148D4  0E00               	movlw	0
 27346  0148D6  6E2B               	movwf	(btemp+1)^0,c
 27347  0148D8  D02A               	goto	l2691
 27348  0148DA                     l16374:
 27349                           
 27350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 27351                           ;stkvar	_fp @ sp[(-32)+-2]
 27352  0148DA  0EDE               	movlw	-34
 27353  0148DC  006F FF8F FFE6     	movff	plusw1,postinc1
 27354  0148E2  006F FF8F FFE6     	movff	plusw1,postinc1
 27355                           
 27356                           ;stkvar	_fmt @ sp[(-34)+-4]
 27357  0148E8  0EDA               	movlw	-38
 27358  0148EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27359  0148F0  0EDB               	movlw	-37
 27360  0148F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27361  0148F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 27362  0148FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 27363  014904                     	if	0	;tblptru may be non-zero
 27364  014904                     	endif
 27365  014904                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27366  014904  0E00               	movlw	low (__mediumconst shr (0+16))
 27367  014906  6EF8               	movwf	tblptru,c
 27368  014908                     	endif
 27369  014908  0008               	tblrd		*
 27370  01490A  50F5               	movf	tablat,w,c
 27371  01490C  6EE6               	movwf	postinc1,c
 27372  01490E  0E00               	movlw	0
 27373  014910  6EE6               	movwf	postinc1,c
 27374  014912  EC8E  F0FA         	call	_fputc	;wreg free
 27375                           
 27376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 27377                           ;stkvar	_fmt @ sp[(-32)+-4]
 27378  014916  0EDC               	movlw	-36
 27379  014918  006F FF8F FFD9     	movff	plusw1,fsr2l
 27380  01491E  0EDD               	movlw	-35
 27381  014920  006F FF8F FFDA     	movff	plusw1,fsr2h
 27382  014926  2ADE               	incf	postinc2,f,c
 27383  014928  0E00               	movlw	0
 27384  01492A  22DD               	addwfc	postdec2,f,c
 27385  01492C  D7C4               	goto	l16364
 27386  01492E                     l2691:
 27387                           
 27388                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 27389  01492E  0EDA               	movlw	218
 27390  014930  26E1               	addwf	fsr1l,f,c
 27391  014932  0EFF               	movlw	255
 27392  014934  22E2               	addwfc	fsr1h,f,c
 27393  014936  0012               	return		;funcret
 27394  014938                     __end_of_vfpfcnvrt:
 27395                           	opt callstack 0
 27396                           
 27397 ;; *************** function _xtoa *****************
 27398 ;; Defined at:
 27399 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27400 ;; Parameters:    Size  Location     Type
 27401 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27402 ;;		 -> f(6), NULL(0), 
 27403 ;;  d               8  [STACK] unsigned long long 
 27404 ;;  x               1  [STACK] unsigned char 
 27405 ;; Auto vars:     Size  Location     Type
 27406 ;;  n               8  [STACK] unsigned long long 
 27407 ;;  c               2  [STACK] int 
 27408 ;;  i               2  [STACK] int 
 27409 ;;  w               2  [STACK] int 
 27410 ;;  p               2  [STACK] int 
 27411 ;; Return value:  Size  Location     Type
 27412 ;;                  2  [STACK] int 
 27413 ;; Registers used:
 27414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 27415 ;; Tracked objects:
 27416 ;;		On entry : 0/0
 27417 ;;		On exit  : 0/0
 27418 ;;		Unchanged: 0/0
 27419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27424 ;;Total ram usage:        0 bytes
 27425 ;; Hardware stack levels used:    1
 27426 ;; Hardware stack levels required when called:   20
 27427 ;; This function calls:
 27428 ;;		_isalpha
 27429 ;;		_isupper
 27430 ;;		_pad
 27431 ;;		_toupper
 27432 ;; This function is called by:
 27433 ;;		_vfpfcnvrt
 27434 ;; This function uses a reentrant model
 27435 ;;
 27436                           
 27437                           	psect	text94
 27438  019D5C                     __ptext94:
 27439                           	opt callstack 0
 27440  019D5C                     _xtoa:
 27441                           	opt callstack 0
 27442                           
 27443                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 27444  019D5C  0E14               	movlw	20
 27445  019D5E  26E1               	addwf	fsr1l,f,c
 27446  019D60  0E00               	movlw	0
 27447  019D62  22E2               	addwfc	fsr1h,f,c
 27448                           
 27449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 27450                           
 27451                           ;incstack = 0
 27452 ;; hardware stack exceeded
 27453  019D64  AE4D               	btfss	(_prec+1)^0,7,c
 27454                           
 27455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 27456  019D66  924E               	bcf	_flags^0,1,c
 27457                           
 27458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 27459  019D68  BE4D               	btfsc	(_prec+1)^0,7,c
 27460  019D6A  D005               	goto	u15420
 27461  019D6C  504D               	movf	(_prec+1)^0,w,c
 27462  019D6E  E110               	bnz	l16028
 27463  019D70  044C               	decf	_prec^0,w,c
 27464  019D72  B0D8               	btfsc	status,0,c
 27465  019D74  D00D               	goto	l16028
 27466  019D76                     u15420:
 27467  019D76  0E01               	movlw	1
 27468  019D78  6E34               	movwf	(btemp+10)^0,c
 27469  019D7A  0E00               	movlw	0
 27470  019D7C  6E35               	movwf	(btemp+11)^0,c
 27471                           
 27472                           ;stkvar	_p @ sp[(-20)+18]
 27473  019D7E  0EFE               	movlw	-2
 27474  019D80  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27475  019D86  0EFF               	movlw	-1
 27476  019D88  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27477  019D8E  D008               	goto	l2641
 27478  019D90                     l16028:
 27479                           
 27480                           ;stkvar	_p @ sp[(-20)+18]
 27481  019D90  0EFE               	movlw	-2
 27482  019D92  0060  F133  FFE3   	movff	_prec,plusw1
 27483  019D98  0EFF               	movlw	-1
 27484  019D9A  0060  F137  FFE3   	movff	_prec+1,plusw1
 27485  019DA0                     l2641:
 27486                           
 27487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 27488                           ;stkvar	_w @ sp[(-20)+16]
 27489  019DA0  0EFC               	movlw	-4
 27490  019DA2  0060  F12B  FFE3   	movff	_width,plusw1
 27491  019DA8  0EFD               	movlw	-3
 27492  019DAA  0060  F12F  FFE3   	movff	_width+1,plusw1
 27493                           
 27494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 27495  019DB0  A84E               	btfss	_flags^0,4,c
 27496  019DB2  D00B               	goto	l16034
 27497                           
 27498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 27499                           ;stkvar	_w @ sp[(-20)+16]
 27500  019DB4  50E1               	movf	fsr1l,w,c
 27501  019DB6  0FFC               	addlw	-4
 27502  019DB8  6ED9               	movwf	fsr2l,c
 27503  019DBA  50E2               	movf	fsr1h,w,c
 27504  019DBC  6EDA               	movwf	fsr2h,c
 27505  019DBE  0EFF               	movlw	255
 27506  019DC0  22DA               	addwfc	fsr2h,f,c
 27507  019DC2  0EFE               	movlw	254
 27508  019DC4  26DE               	addwf	postinc2,f,c
 27509  019DC6  0EFF               	movlw	255
 27510  019DC8  22DD               	addwfc	postdec2,f,c
 27511  019DCA                     l16034:
 27512                           
 27513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 27514                           ;stkvar	_d @ sp[(-20)+-10]
 27515  019DCA  0EE2               	movlw	226
 27516  019DCC  24E1               	addwf	fsr1l,w,c
 27517  019DCE  6ED9               	movwf	fsr2l,c
 27518  019DD0  0EFF               	movlw	255
 27519  019DD2  20E2               	addwfc	fsr1h,w,c
 27520  019DD4  6EDA               	movwf	fsr2h,c
 27521                           
 27522                           ;stkvar	_n @ sp[(-20)+4]
 27523  019DD6  0E08               	movlw	8
 27524  019DD8  6E2A               	movwf	btemp^0,c
 27525  019DDA  0EF0               	movlw	-16
 27526  019DDC                     us1544999:
 27527  019DDC  006F FF7B FFE3     	movff	postinc2,plusw1
 27528  019DE2  28E8               	incf	wreg,w,c
 27529  019DE4  2E2A               	decfsz	btemp^0,f,c
 27530  019DE6  D7FA               	bra	us1544999
 27531                           
 27532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 27533  019DE8  0E4F               	movlw	79
 27534  019DEA  6E34               	movwf	(btemp+10)^0,c
 27535  019DEC  0E00               	movlw	0
 27536  019DEE  6E35               	movwf	(btemp+11)^0,c
 27537                           
 27538                           ;stkvar	_i @ sp[(-20)+14]
 27539  019DF0  0EFA               	movlw	-6
 27540  019DF2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27541  019DF8  0EFB               	movlw	-5
 27542  019DFA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27543                           
 27544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 27545  019E00  0103               	movlb	3	; () banked
 27546  019E02  6BA3               	clrf	(_dbuf+79)& (0+255),b
 27547                           
 27548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27549  019E04  D0EE               	goto	l16072
 27550  019E06                     l16040:
 27551                           
 27552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 27553                           ;stkvar	_i @ sp[(-20)+14]
 27554  019E06  50E1               	movf	fsr1l,w,c
 27555  019E08  0FFA               	addlw	-6
 27556  019E0A  6ED9               	movwf	fsr2l,c
 27557  019E0C  50E2               	movf	fsr1h,w,c
 27558  019E0E  6EDA               	movwf	fsr2h,c
 27559  019E10  0EFF               	movlw	255
 27560  019E12  22DA               	addwfc	fsr2h,f,c
 27561  019E14  06DE               	decf	postinc2,f,c
 27562  019E16  0E00               	movlw	0
 27563  019E18  5ADD               	subwfb	postdec2,f,c
 27564                           
 27565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 27566                           ;stkvar	_n @ sp[(-20)+4]
 27567  019E1A  0EF0               	movlw	-16
 27568  019E1C  006F FF8C  F034    	movff	plusw1,btemp+10
 27569  019E22  0EF1               	movlw	-15
 27570  019E24  006F FF8C  F035    	movff	plusw1,btemp+11
 27571  019E2A  0E0F               	movlw	15
 27572  019E2C  1634               	andwf	(btemp+10)^0,f,c
 27573  019E2E  0E00               	movlw	0
 27574  019E30  1635               	andwf	(btemp+11)^0,f,c
 27575                           
 27576                           ;stkvar	_c @ sp[(-20)+12]
 27577  019E32  0EF8               	movlw	-8
 27578  019E34  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27579  019E3A  0EF9               	movlw	-7
 27580  019E3C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27581                           
 27582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 27583                           ;stkvar	_c @ sp[(-20)+12]
 27584  019E42  0EF9               	movlw	-7
 27585  019E44  BEE3               	btfsc	plusw1,7,c
 27586  019E46  D00F               	goto	l16048
 27587  019E48  0EF9               	movlw	-7
 27588  019E4A  50E3               	movf	plusw1,w,c
 27589  019E4C  E108               	bnz	u15450
 27590  019E4E  0EF8               	movlw	-8
 27591  019E50  006F FF8C  F02A    	movff	plusw1,btemp
 27592  019E56  0E0A               	movlw	10
 27593  019E58  5E2A               	subwf	btemp^0,f,c
 27594  019E5A  A0D8               	btfss	status,0,c
 27595  019E5C  D004               	goto	l16048
 27596  019E5E                     u15450:
 27597                           
 27598                           ;stkvar	_c @ sp[(-20)+12]
 27599  019E5E  0EF8               	movlw	-8
 27600  019E60  50E3               	movf	plusw1,w,c
 27601  019E62  0F57               	addlw	87
 27602  019E64  D003               	goto	L28
 27603  019E66                     l16048:
 27604                           
 27605                           ;stkvar	_c @ sp[(-20)+12]
 27606  019E66  0EF8               	movlw	-8
 27607  019E68  50E3               	movf	plusw1,w,c
 27608  019E6A  0F30               	addlw	48
 27609  019E6C                     L28:
 27610  019E6C  6E34               	movwf	(btemp+10)^0,c
 27611  019E6E  0EF9               	movlw	-7
 27612  019E70  006F FF8C  F035    	movff	plusw1,btemp+11
 27613  019E76  0E00               	movlw	0
 27614  019E78  2235               	addwfc	(btemp+11)^0,f,c
 27615                           
 27616                           ;stkvar	_c @ sp[(-20)+12]
 27617  019E7A  0EF8               	movlw	-8
 27618  019E7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27619  019E82  0EF9               	movlw	-7
 27620  019E84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27621  019E8A  0EBF               	movlw	191
 27622  019E8C  6E34               	movwf	(btemp+10)^0,c
 27623  019E8E  0EFF               	movlw	255
 27624  019E90  6E35               	movwf	(btemp+11)^0,c
 27625                           
 27626                           ;stkvar	_x @ sp[(-20)+-11]
 27627  019E92  0EE1               	movlw	-31
 27628  019E94  50E3               	movf	plusw1,w,c
 27629  019E96  6E32               	movwf	(btemp+8)^0,c
 27630  019E98  6A33               	clrf	(btemp+9)^0,c
 27631  019E9A  5034               	movf	(btemp+10)^0,w,c
 27632  019E9C  2632               	addwf	(btemp+8)^0,f,c
 27633  019E9E  5035               	movf	(btemp+11)^0,w,c
 27634  019EA0  2233               	addwfc	(btemp+9)^0,f,c
 27635  019EA2  5033               	movf	(btemp+9)^0,w,c
 27636  019EA4  E106               	bnz	u15460
 27637  019EA6  0E1A               	movlw	26
 27638  019EA8  5C32               	subwf	(btemp+8)^0,w,c
 27639  019EAA  B0D8               	btfsc	status,0,c
 27640  019EAC  D002               	goto	u15460
 27641  019EAE  0E01               	movlw	1
 27642  019EB0  D001               	goto	u15470
 27643  019EB2                     u15460:
 27644  019EB2  0E00               	movlw	0
 27645  019EB4                     u15470:
 27646  019EB4  6E34               	movwf	(btemp+10)^0,c
 27647  019EB6  6A35               	clrf	(btemp+11)^0,c
 27648                           
 27649                           ;stkvar	_xtoa$6650 @ sp[(-20)+2]
 27650  019EB8  0EEE               	movlw	-18
 27651  019EBA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27652  019EC0  0EEF               	movlw	-17
 27653  019EC2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27654                           
 27655                           ;stkvar	_xtoa$6650 @ sp[(-20)+2]
 27656  019EC8  0EEE               	movlw	-18
 27657  019ECA  006F FF8C  F02A    	movff	plusw1,btemp
 27658  019ED0  0EEF               	movlw	-17
 27659  019ED2  50E3               	movf	plusw1,w,c
 27660  019ED4  102A               	iorwf	btemp^0,w,c
 27661  019ED6  B4D8               	btfsc	status,2,c
 27662  019ED8  D041               	goto	l16064
 27663  019EDA  0E9F               	movlw	159
 27664  019EDC  6E34               	movwf	(btemp+10)^0,c
 27665  019EDE  0EFF               	movlw	255
 27666  019EE0  6E35               	movwf	(btemp+11)^0,c
 27667                           
 27668                           ;stkvar	_c @ sp[(-20)+12]
 27669  019EE2  0EF8               	movlw	-8
 27670  019EE4  006F FF8C  F032    	movff	plusw1,btemp+8
 27671  019EEA  0EF9               	movlw	-7
 27672  019EEC  006F FF8C  F033    	movff	plusw1,btemp+9
 27673  019EF2  0E20               	movlw	32
 27674  019EF4  1232               	iorwf	(btemp+8)^0,f,c
 27675  019EF6  0E00               	movlw	0
 27676  019EF8  1233               	iorwf	(btemp+9)^0,f,c
 27677  019EFA  5034               	movf	(btemp+10)^0,w,c
 27678  019EFC  2632               	addwf	(btemp+8)^0,f,c
 27679  019EFE  5035               	movf	(btemp+11)^0,w,c
 27680  019F00  2233               	addwfc	(btemp+9)^0,f,c
 27681  019F02  5033               	movf	(btemp+9)^0,w,c
 27682  019F04  E106               	bnz	u15490
 27683  019F06  0E1A               	movlw	26
 27684  019F08  5C32               	subwf	(btemp+8)^0,w,c
 27685  019F0A  B0D8               	btfsc	status,0,c
 27686  019F0C  D002               	goto	u15490
 27687  019F0E  0E01               	movlw	1
 27688  019F10  D001               	goto	u15500
 27689  019F12                     u15490:
 27690  019F12  0E00               	movlw	0
 27691  019F14                     u15500:
 27692  019F14  6E34               	movwf	(btemp+10)^0,c
 27693  019F16  6A35               	clrf	(btemp+11)^0,c
 27694                           
 27695                           ;stkvar	_xtoa$6651 @ sp[(-20)+0]
 27696  019F18  0EEC               	movlw	-20
 27697  019F1A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27698  019F20  0EED               	movlw	-19
 27699  019F22  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27700                           
 27701                           ;stkvar	_xtoa$6651 @ sp[(-20)+0]
 27702  019F28  0EEC               	movlw	-20
 27703  019F2A  006F FF8C  F02A    	movff	plusw1,btemp
 27704  019F30  0EED               	movlw	-19
 27705  019F32  50E3               	movf	plusw1,w,c
 27706  019F34  102A               	iorwf	btemp^0,w,c
 27707  019F36  B4D8               	btfsc	status,2,c
 27708  019F38  D011               	goto	l16064
 27709                           
 27710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 27711                           ;stkvar	_c @ sp[(-20)+12]
 27712  019F3A  0EF8               	movlw	-8
 27713  019F3C  006F FF8F FFE6     	movff	plusw1,postinc1
 27714  019F42  006F FF8F FFE6     	movff	plusw1,postinc1
 27715  019F48  EC98  F008         	call	_toupper	;wreg free
 27716                           
 27717                           ;stkvar	_c @ sp[(-20)+12]
 27718  019F4C  0EF8               	movlw	-8
 27719  019F4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 27720  019F54  0EF9               	movlw	-7
 27721  019F56  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 27722  019F5C                     l16064:
 27723                           
 27724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 27725                           ;stkvar	_c @ sp[(-20)+12]
 27726                           ;stkvar	_i @ sp[(-20)+14]
 27727  019F5C  0EFA               	movlw	-6
 27728  019F5E  006F FF8C  F034    	movff	plusw1,btemp+10
 27729  019F64  0EFB               	movlw	-5
 27730  019F66  006F FF8C  F035    	movff	plusw1,btemp+11
 27731  019F6C  0E54               	movlw	low _dbuf
 27732  019F6E  2434               	addwf	(btemp+10)^0,w,c
 27733  019F70  6ED9               	movwf	fsr2l,c
 27734  019F72  0E03               	movlw	high _dbuf
 27735  019F74  2035               	addwfc	(btemp+11)^0,w,c
 27736  019F76  6EDA               	movwf	fsr2h,c
 27737  019F78  0EF8               	movlw	-8
 27738  019F7A  006F FF8F FFDF     	movff	plusw1,indf2
 27739                           
 27740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 27741                           ;stkvar	_p @ sp[(-20)+18]
 27742  019F80  50E1               	movf	fsr1l,w,c
 27743  019F82  0FFE               	addlw	-2
 27744  019F84  6ED9               	movwf	fsr2l,c
 27745  019F86  50E2               	movf	fsr1h,w,c
 27746  019F88  6EDA               	movwf	fsr2h,c
 27747  019F8A  0EFF               	movlw	255
 27748  019F8C  22DA               	addwfc	fsr2h,f,c
 27749  019F8E  06DE               	decf	postinc2,f,c
 27750  019F90  0E00               	movlw	0
 27751  019F92  5ADD               	subwfb	postdec2,f,c
 27752                           
 27753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 27754                           ;stkvar	_w @ sp[(-20)+16]
 27755  019F94  50E1               	movf	fsr1l,w,c
 27756  019F96  0FFC               	addlw	-4
 27757  019F98  6ED9               	movwf	fsr2l,c
 27758  019F9A  50E2               	movf	fsr1h,w,c
 27759  019F9C  6EDA               	movwf	fsr2h,c
 27760  019F9E  0EFF               	movlw	255
 27761  019FA0  22DA               	addwfc	fsr2h,f,c
 27762  019FA2  06DE               	decf	postinc2,f,c
 27763  019FA4  0E00               	movlw	0
 27764  019FA6  5ADD               	subwfb	postdec2,f,c
 27765                           
 27766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 27767  019FA8  0E04               	movlw	4
 27768  019FAA  6E35               	movwf	(btemp+11)^0,c
 27769                           
 27770                           ;stkvar	_n @ sp[(-20)+4]
 27771  019FAC  50E1               	movf	fsr1l,w,c
 27772  019FAE  0FF0               	addlw	-16
 27773  019FB0  6ED9               	movwf	fsr2l,c
 27774  019FB2  50E2               	movf	fsr1h,w,c
 27775  019FB4  6EDA               	movwf	fsr2h,c
 27776  019FB6  0EFF               	movlw	255
 27777  019FB8  22DA               	addwfc	fsr2h,f,c
 27778  019FBA  2835               	incf	(btemp+11)^0,w,c
 27779  019FBC  52DE               	movf	postinc2,f,c
 27780  019FBE  D00F               	goto	u15520
 27781  019FC0                     u15525:
 27782  019FC0  52DE               	movf	postinc2,f,c
 27783  019FC2  52DE               	movf	postinc2,f,c
 27784  019FC4  52DE               	movf	postinc2,f,c
 27785  019FC6  52DE               	movf	postinc2,f,c
 27786  019FC8  52DE               	movf	postinc2,f,c
 27787  019FCA  52DE               	movf	postinc2,f,c
 27788  019FCC  90D8               	bcf	status,0,c
 27789  019FCE  32DD               	rrcf	postdec2,f,c
 27790  019FD0  32DD               	rrcf	postdec2,f,c
 27791  019FD2  32DD               	rrcf	postdec2,f,c
 27792  019FD4  32DD               	rrcf	postdec2,f,c
 27793  019FD6  32DD               	rrcf	postdec2,f,c
 27794  019FD8  32DD               	rrcf	postdec2,f,c
 27795  019FDA  32DD               	rrcf	postdec2,f,c
 27796  019FDC  32DE               	rrcf	postinc2,f,c
 27797  019FDE                     u15520:
 27798  019FDE  2EE8               	decfsz	wreg,f,c
 27799  019FE0  D7EF               	goto	u15525
 27800  019FE2                     l16072:
 27801                           
 27802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27803                           ;stkvar	_i @ sp[(-20)+14]
 27804  019FE2  0EFB               	movlw	-5
 27805  019FE4  BEE3               	btfsc	plusw1,7,c
 27806  019FE6  D03A               	goto	u15570
 27807  019FE8  0EFB               	movlw	-5
 27808  019FEA  50E3               	movf	plusw1,w,c
 27809  019FEC  E108               	bnz	u15530
 27810  019FEE  0EFA               	movlw	-6
 27811  019FF0  006F FF8C  F02A    	movff	plusw1,btemp
 27812  019FF6  0E02               	movlw	2
 27813  019FF8  5E2A               	subwf	btemp^0,f,c
 27814  019FFA  A0D8               	btfss	status,0,c
 27815  019FFC  D02F               	goto	u15570
 27816  019FFE                     u15530:
 27817                           
 27818                           ;stkvar	_n @ sp[(-20)+4]
 27819  019FFE  0EF0               	movlw	-16
 27820  01A000  50E3               	movf	plusw1,w,c
 27821  01A002  E115               	bnz	u15541
 27822  01A004  0EF1               	movlw	-15
 27823  01A006  50E3               	movf	plusw1,w,c
 27824  01A008  E112               	bnz	u15541
 27825  01A00A  0EF2               	movlw	-14
 27826  01A00C  50E3               	movf	plusw1,w,c
 27827  01A00E  E10F               	bnz	u15541
 27828  01A010  0EF3               	movlw	-13
 27829  01A012  50E3               	movf	plusw1,w,c
 27830  01A014  E10C               	bnz	u15541
 27831  01A016  0EF4               	movlw	-12
 27832  01A018  50E3               	movf	plusw1,w,c
 27833  01A01A  E109               	bnz	u15541
 27834  01A01C  0EF5               	movlw	-11
 27835  01A01E  50E3               	movf	plusw1,w,c
 27836  01A020  E106               	bnz	u15541
 27837  01A022  0EF6               	movlw	-10
 27838  01A024  50E3               	movf	plusw1,w,c
 27839  01A026  E103               	bnz	u15541
 27840  01A028  0EF7               	movlw	-9
 27841  01A02A  50E3               	movf	plusw1,w,c
 27842  01A02C  A4D8               	btfss	status,2,c
 27843  01A02E                     u15541:
 27844  01A02E  D6EB               	goto	l16040
 27845                           
 27846                           ;stkvar	_p @ sp[(-20)+18]
 27847  01A030  0EFF               	movlw	-1
 27848  01A032  BEE3               	btfsc	plusw1,7,c
 27849  01A034  D007               	goto	u15550
 27850  01A036  0EFF               	movlw	-1
 27851  01A038  50E3               	movf	plusw1,w,c
 27852  01A03A  E103               	bnz	u15551
 27853  01A03C  0EFE               	movlw	-2
 27854  01A03E  04E3               	decf	plusw1,w,c
 27855  01A040  B0D8               	btfsc	status,0,c
 27856  01A042                     u15551:
 27857  01A042  D6E1               	goto	l16040
 27858  01A044                     u15550:
 27859                           
 27860                           ;stkvar	_w @ sp[(-20)+16]
 27861  01A044  0EFD               	movlw	-3
 27862  01A046  BEE3               	btfsc	plusw1,7,c
 27863  01A048  D009               	goto	u15570
 27864  01A04A  0EFD               	movlw	-3
 27865  01A04C  50E3               	movf	plusw1,w,c
 27866  01A04E  E104               	bnz	u15560
 27867  01A050  0EFC               	movlw	-4
 27868  01A052  04E3               	decf	plusw1,w,c
 27869  01A054  A0D8               	btfss	status,0,c
 27870  01A056  D002               	goto	u15570
 27871  01A058                     u15560:
 27872  01A058  B24E               	btfsc	_flags^0,1,c
 27873  01A05A  D6D5               	goto	l16040
 27874  01A05C                     u15570:
 27875                           
 27876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 27877  01A05C  A84E               	btfss	_flags^0,4,c
 27878  01A05E  D036               	goto	l16088
 27879                           
 27880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 27881                           ;stkvar	_i @ sp[(-20)+14]
 27882  01A060  50E1               	movf	fsr1l,w,c
 27883  01A062  0FFA               	addlw	-6
 27884  01A064  6ED9               	movwf	fsr2l,c
 27885  01A066  50E2               	movf	fsr1h,w,c
 27886  01A068  6EDA               	movwf	fsr2h,c
 27887  01A06A  0EFF               	movlw	255
 27888  01A06C  22DA               	addwfc	fsr2h,f,c
 27889  01A06E  06DE               	decf	postinc2,f,c
 27890  01A070  0E00               	movlw	0
 27891  01A072  5ADD               	subwfb	postdec2,f,c
 27892                           
 27893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 27894                           ;stkvar	_x @ sp[(-20)+-11]
 27895                           ;stkvar	_i @ sp[(-20)+14]
 27896  01A074  0EFA               	movlw	-6
 27897  01A076  006F FF8C  F034    	movff	plusw1,btemp+10
 27898  01A07C  0EFB               	movlw	-5
 27899  01A07E  006F FF8C  F035    	movff	plusw1,btemp+11
 27900  01A084  0E54               	movlw	low _dbuf
 27901  01A086  2434               	addwf	(btemp+10)^0,w,c
 27902  01A088  6ED9               	movwf	fsr2l,c
 27903  01A08A  0E03               	movlw	high _dbuf
 27904  01A08C  2035               	addwfc	(btemp+11)^0,w,c
 27905  01A08E  6EDA               	movwf	fsr2h,c
 27906  01A090  0EE1               	movlw	-31
 27907  01A092  006F FF8F FFDF     	movff	plusw1,indf2
 27908                           
 27909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 27910                           ;stkvar	_i @ sp[(-20)+14]
 27911  01A098  50E1               	movf	fsr1l,w,c
 27912  01A09A  0FFA               	addlw	-6
 27913  01A09C  6ED9               	movwf	fsr2l,c
 27914  01A09E  50E2               	movf	fsr1h,w,c
 27915  01A0A0  6EDA               	movwf	fsr2h,c
 27916  01A0A2  0EFF               	movlw	255
 27917  01A0A4  22DA               	addwfc	fsr2h,f,c
 27918  01A0A6  06DE               	decf	postinc2,f,c
 27919  01A0A8  0E00               	movlw	0
 27920  01A0AA  5ADD               	subwfb	postdec2,f,c
 27921                           
 27922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 27923                           ;stkvar	_i @ sp[(-20)+14]
 27924  01A0AC  0EFA               	movlw	-6
 27925  01A0AE  006F FF8C  F034    	movff	plusw1,btemp+10
 27926  01A0B4  0EFB               	movlw	-5
 27927  01A0B6  006F FF8C  F035    	movff	plusw1,btemp+11
 27928  01A0BC  0E54               	movlw	low _dbuf
 27929  01A0BE  2434               	addwf	(btemp+10)^0,w,c
 27930  01A0C0  6ED9               	movwf	fsr2l,c
 27931  01A0C2  0E03               	movlw	high _dbuf
 27932  01A0C4  2035               	addwfc	(btemp+11)^0,w,c
 27933  01A0C6  6EDA               	movwf	fsr2h,c
 27934  01A0C8  0E30               	movlw	48
 27935  01A0CA  6EDF               	movwf	indf2,c
 27936  01A0CC                     l16088:
 27937                           
 27938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 27939                           ;stkvar	_w @ sp[(-20)+16]
 27940  01A0CC  0EFC               	movlw	-4
 27941  01A0CE  006F FF8F FFE6     	movff	plusw1,postinc1
 27942  01A0D4  006F FF8F FFE6     	movff	plusw1,postinc1
 27943                           
 27944                           ;stkvar	_i @ sp[(-22)+14]
 27945  01A0DA  0E54               	movlw	low _dbuf
 27946  01A0DC  6E34               	movwf	(btemp+10)^0,c
 27947  01A0DE  0E03               	movlw	high _dbuf
 27948  01A0E0  6E35               	movwf	(btemp+11)^0,c
 27949  01A0E2  0EF8               	movlw	-8
 27950  01A0E4  50E3               	movf	plusw1,w,c
 27951  01A0E6  2634               	addwf	(btemp+10)^0,f,c
 27952  01A0E8  0EF9               	movlw	-7
 27953  01A0EA  50E3               	movf	plusw1,w,c
 27954  01A0EC  2235               	addwfc	(btemp+11)^0,f,c
 27955  01A0EE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27956  01A0F4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27957                           
 27958                           ;stkvar	_fp @ sp[(-24)+-2]
 27959  01A0FA  0EE6               	movlw	-26
 27960  01A0FC  006F FF8F FFE6     	movff	plusw1,postinc1
 27961  01A102  006F FF8F FFE6     	movff	plusw1,postinc1
 27962  01A108  ECC5  F0FC         	call	_pad	;wreg free
 27963                           
 27964                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 27965  01A10C  0EE1               	movlw	225
 27966  01A10E  26E1               	addwf	fsr1l,f,c
 27967  01A110  0EFF               	movlw	255
 27968  01A112  22E2               	addwfc	fsr1h,f,c
 27969  01A114  0012               	return		;funcret
 27970  01A116                     __end_of_xtoa:
 27971                           	opt callstack 0
 27972                           
 27973 ;; *************** function _toupper *****************
 27974 ;; Defined at:
 27975 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 27976 ;; Parameters:    Size  Location     Type
 27977 ;;  c               2  [STACK] int 
 27978 ;; Auto vars:     Size  Location     Type
 27979 ;;		None
 27980 ;; Return value:  Size  Location     Type
 27981 ;;                  2  [STACK] int 
 27982 ;; Registers used:
 27983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 27984 ;; Tracked objects:
 27985 ;;		On entry : 0/3
 27986 ;;		On exit  : 0/0
 27987 ;;		Unchanged: 0/0
 27988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27993 ;;Total ram usage:        0 bytes
 27994 ;; Hardware stack levels used:    1
 27995 ;; Hardware stack levels required when called:   16
 27996 ;; This function calls:
 27997 ;;		_islower
 27998 ;; This function is called by:
 27999 ;;		_xtoa
 28000 ;; This function uses a reentrant model
 28001 ;;
 28002                           
 28003                           	psect	text95
 28004  001130                     __ptext95:
 28005                           	opt callstack 0
 28006  001130                     _toupper:
 28007                           	opt callstack 0
 28008                           
 28009                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28010  001130  52E6               	movf	postinc1,f,c
 28011  001132  52E6               	movf	postinc1,f,c
 28012                           
 28013                           ;stkvar	_c @ sp[(-2)+-2]
 28014                           
 28015                           ;incstack = 0
 28016 ;; hardware stack exceeded
 28017  001134  0EFC               	movlw	-4
 28018  001136  50E3               	movf	plusw1,w,c
 28019  001138  0F9F               	addlw	159
 28020  00113A  6E34               	movwf	(btemp+10)^0,c
 28021  00113C  0EFD               	movlw	-3
 28022  00113E  006F FF8C  F035    	movff	plusw1,btemp+11
 28023  001144  0EFF               	movlw	255
 28024  001146  2235               	addwfc	(btemp+11)^0,f,c
 28025  001148  5035               	movf	(btemp+11)^0,w,c
 28026  00114A  E106               	bnz	u7990
 28027  00114C  0E1A               	movlw	26
 28028  00114E  5C34               	subwf	(btemp+10)^0,w,c
 28029  001150  B0D8               	btfsc	status,0,c
 28030  001152  D002               	goto	u7990
 28031  001154  0E01               	movlw	1
 28032  001156  D001               	goto	u8000
 28033  001158                     u7990:
 28034  001158  0E00               	movlw	0
 28035  00115A                     u8000:
 28036  00115A  6E34               	movwf	(btemp+10)^0,c
 28037  00115C  6A35               	clrf	(btemp+11)^0,c
 28038                           
 28039                           ;stkvar	_toupper$7592 @ sp[(-2)+0]
 28040  00115E  0EFE               	movlw	-2
 28041  001160  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28042  001166  0EFF               	movlw	-1
 28043  001168  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28044                           
 28045                           ;stkvar	_toupper$7592 @ sp[(-2)+0]
 28046  00116E  0EFE               	movlw	-2
 28047  001170  006F FF8C  F02A    	movff	plusw1,btemp
 28048  001176  0EFF               	movlw	-1
 28049  001178  50E3               	movf	plusw1,w,c
 28050  00117A  102A               	iorwf	btemp^0,w,c
 28051  00117C  B4D8               	btfsc	status,2,c
 28052  00117E  D00D               	goto	l10188
 28053                           
 28054                           ;stkvar	_c @ sp[(-2)+-2]
 28055  001180  0EFC               	movlw	-4
 28056  001182  006F FF8C  F02A    	movff	plusw1,btemp
 28057  001188  0EFD               	movlw	-3
 28058  00118A  006F FF8C  F02B    	movff	plusw1,btemp+1
 28059  001190  0E5F               	movlw	95
 28060  001192  162A               	andwf	btemp^0,f,c
 28061  001194  0E00               	movlw	0
 28062  001196  162B               	andwf	(btemp+1)^0,f,c
 28063  001198  D008               	goto	l3838
 28064  00119A                     l10188:
 28065                           
 28066                           ;stkvar	_c @ sp[(-2)+-2]
 28067  00119A  0EFC               	movlw	-4
 28068  00119C  006F FF8C  F02A    	movff	plusw1,btemp
 28069  0011A2  0EFD               	movlw	-3
 28070  0011A4  006F FF8C  F02B    	movff	plusw1,btemp+1
 28071  0011AA                     l3838:
 28072                           
 28073                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28074  0011AA  52E5               	movf	postdec1,f,c
 28075  0011AC  52E5               	movf	postdec1,f,c
 28076  0011AE  52E5               	movf	postdec1,f,c
 28077  0011B0  52E5               	movf	postdec1,f,c
 28078  0011B2  0012               	return		;funcret
 28079  0011B4                     __end_of_toupper:
 28080                           	opt callstack 0
 28081                           
 28082 ;; *************** function _islower *****************
 28083 ;; Defined at:
 28084 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 28085 ;; Parameters:    Size  Location     Type
 28086 ;;  c               2  [STACK] int 
 28087 ;; Auto vars:     Size  Location     Type
 28088 ;;		None
 28089 ;; Return value:  Size  Location     Type
 28090 ;;                  2  [STACK] int 
 28091 ;; Registers used:
 28092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 28093 ;; Tracked objects:
 28094 ;;		On entry : 0/0
 28095 ;;		On exit  : 0/0
 28096 ;;		Unchanged: 0/0
 28097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28102 ;;Total ram usage:        0 bytes
 28103 ;; Hardware stack levels used:    1
 28104 ;; Hardware stack levels required when called:   15
 28105 ;; This function calls:
 28106 ;;		Nothing
 28107 ;; This function is called by:
 28108 ;;		_toupper
 28109 ;; This function uses a reentrant model
 28110 ;;
 28111                           
 28112                           	psect	text96
 28113  002272                     __ptext96:
 28114                           	opt callstack 0
 28115  002272                     _islower:
 28116                           	opt callstack 0
 28117                           
 28118                           ;stkvar	_c @ sp[(0)+-2]
 28119                           
 28120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28121                           ;incstack = 0
 28122 ;; hardware stack exceeded
 28123  002272  0EFE               	movlw	-2
 28124  002274  50E3               	movf	plusw1,w,c
 28125  002276  0F9F               	addlw	159
 28126  002278  6E34               	movwf	(btemp+10)^0,c
 28127  00227A  0EFF               	movlw	-1
 28128  00227C  006F FF8C  F035    	movff	plusw1,btemp+11
 28129  002282  0EFF               	movlw	255
 28130  002284  2235               	addwfc	(btemp+11)^0,f,c
 28131  002286  5035               	movf	(btemp+11)^0,w,c
 28132  002288  E106               	bnz	u7620
 28133  00228A  0E1A               	movlw	26
 28134  00228C  5C34               	subwf	(btemp+10)^0,w,c
 28135  00228E  B0D8               	btfsc	status,0,c
 28136  002290  D002               	goto	u7620
 28137  002292  0E01               	movlw	1
 28138  002294  D001               	goto	u7630
 28139  002296                     u7620:
 28140  002296  0E00               	movlw	0
 28141  002298                     u7630:
 28142  002298  6E2A               	movwf	btemp^0,c
 28143  00229A  6A2B               	clrf	(btemp+1)^0,c
 28144                           
 28145                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28146  00229C  52E5               	movf	postdec1,f,c
 28147  00229E  52E5               	movf	postdec1,f,c
 28148  0022A0  0012               	return		;funcret
 28149  0022A2                     __end_of_islower:
 28150                           	opt callstack 0
 28151                           
 28152 ;; *************** function _isalpha *****************
 28153 ;; Defined at:
 28154 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 28155 ;; Parameters:    Size  Location     Type
 28156 ;;  c               2  [STACK] int 
 28157 ;; Auto vars:     Size  Location     Type
 28158 ;;		None
 28159 ;; Return value:  Size  Location     Type
 28160 ;;                  2  [STACK] int 
 28161 ;; Registers used:
 28162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 28163 ;; Tracked objects:
 28164 ;;		On entry : 0/0
 28165 ;;		On exit  : 0/0
 28166 ;;		Unchanged: 0/0
 28167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28172 ;;Total ram usage:        0 bytes
 28173 ;; Hardware stack levels used:    1
 28174 ;; Hardware stack levels required when called:   15
 28175 ;; This function calls:
 28176 ;;		Nothing
 28177 ;; This function is called by:
 28178 ;;		_xtoa
 28179 ;; This function uses a reentrant model
 28180 ;;
 28181                           
 28182                           	psect	text97
 28183  001DEA                     __ptext97:
 28184                           	opt callstack 0
 28185  001DEA                     _isalpha:
 28186                           	opt callstack 0
 28187                           
 28188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28189                           ;incstack = 0
 28190 ;; hardware stack exceeded
 28191  001DEA  0E9F               	movlw	159
 28192  001DEC  6E34               	movwf	(btemp+10)^0,c
 28193  001DEE  0EFF               	movlw	255
 28194  001DF0  6E35               	movwf	(btemp+11)^0,c
 28195                           
 28196                           ;stkvar	_c @ sp[(0)+-2]
 28197  001DF2  0EFE               	movlw	-2
 28198  001DF4  006F FF8C  F032    	movff	plusw1,btemp+8
 28199  001DFA  0EFF               	movlw	-1
 28200  001DFC  006F FF8C  F033    	movff	plusw1,btemp+9
 28201  001E02  0E20               	movlw	32
 28202  001E04  1232               	iorwf	(btemp+8)^0,f,c
 28203  001E06  0E00               	movlw	0
 28204  001E08  1233               	iorwf	(btemp+9)^0,f,c
 28205  001E0A  5034               	movf	(btemp+10)^0,w,c
 28206  001E0C  2632               	addwf	(btemp+8)^0,f,c
 28207  001E0E  5035               	movf	(btemp+11)^0,w,c
 28208  001E10  2233               	addwfc	(btemp+9)^0,f,c
 28209  001E12  5033               	movf	(btemp+9)^0,w,c
 28210  001E14  E106               	bnz	u7970
 28211  001E16  0E1A               	movlw	26
 28212  001E18  5C32               	subwf	(btemp+8)^0,w,c
 28213  001E1A  B0D8               	btfsc	status,0,c
 28214  001E1C  D002               	goto	u7970
 28215  001E1E  0E01               	movlw	1
 28216  001E20  D001               	goto	u7980
 28217  001E22                     u7970:
 28218  001E22  0E00               	movlw	0
 28219  001E24                     u7980:
 28220  001E24  6E2A               	movwf	btemp^0,c
 28221  001E26  6A2B               	clrf	(btemp+1)^0,c
 28222                           
 28223                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28224  001E28  52E5               	movf	postdec1,f,c
 28225  001E2A  52E5               	movf	postdec1,f,c
 28226  001E2C  0012               	return		;funcret
 28227  001E2E                     __end_of_isalpha:
 28228                           	opt callstack 0
 28229                           
 28230 ;; *************** function _utoa *****************
 28231 ;; Defined at:
 28232 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28233 ;; Parameters:    Size  Location     Type
 28234 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28235 ;;		 -> f(6), NULL(0), 
 28236 ;;  d               8  [STACK] unsigned long long 
 28237 ;; Auto vars:     Size  Location     Type
 28238 ;;  n               8  [STACK] unsigned long long 
 28239 ;;  i               2  [STACK] int 
 28240 ;;  w               2  [STACK] int 
 28241 ;;  p               2  [STACK] int 
 28242 ;; Return value:  Size  Location     Type
 28243 ;;                  2  [STACK] int 
 28244 ;; Registers used:
 28245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 28246 ;; Tracked objects:
 28247 ;;		On entry : 0/0
 28248 ;;		On exit  : 0/0
 28249 ;;		Unchanged: 0/0
 28250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28255 ;;Total ram usage:        0 bytes
 28256 ;; Hardware stack levels used:    1
 28257 ;; Hardware stack levels required when called:   20
 28258 ;; This function calls:
 28259 ;;		___lodiv
 28260 ;;		___lomod
 28261 ;;		_pad
 28262 ;; This function is called by:
 28263 ;;		_vfpfcnvrt
 28264 ;; This function uses a reentrant model
 28265 ;;
 28266                           
 28267                           	psect	text98
 28268  01AB36                     __ptext98:
 28269                           	opt callstack 0
 28270  01AB36                     _utoa:
 28271                           	opt callstack 0
 28272                           
 28273                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28274  01AB36  0E0E               	movlw	14
 28275  01AB38  26E1               	addwf	fsr1l,f,c
 28276  01AB3A  0E00               	movlw	0
 28277  01AB3C  22E2               	addwfc	fsr1h,f,c
 28278                           
 28279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 28280                           
 28281                           ;incstack = 0
 28282 ;; hardware stack exceeded
 28283  01AB3E  AE4D               	btfss	(_prec+1)^0,7,c
 28284                           
 28285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 28286  01AB40  924E               	bcf	_flags^0,1,c
 28287                           
 28288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 28289  01AB42  BE4D               	btfsc	(_prec+1)^0,7,c
 28290  01AB44  D005               	goto	u15340
 28291  01AB46  504D               	movf	(_prec+1)^0,w,c
 28292  01AB48  E110               	bnz	l15988
 28293  01AB4A  044C               	decf	_prec^0,w,c
 28294  01AB4C  B0D8               	btfsc	status,0,c
 28295  01AB4E  D00D               	goto	l15988
 28296  01AB50                     u15340:
 28297  01AB50  0E01               	movlw	1
 28298  01AB52  6E34               	movwf	(btemp+10)^0,c
 28299  01AB54  0E00               	movlw	0
 28300  01AB56  6E35               	movwf	(btemp+11)^0,c
 28301                           
 28302                           ;stkvar	_p @ sp[(-14)+12]
 28303  01AB58  0EFE               	movlw	-2
 28304  01AB5A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28305  01AB60  0EFF               	movlw	-1
 28306  01AB62  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28307  01AB68  D008               	goto	l2626
 28308  01AB6A                     l15988:
 28309                           
 28310                           ;stkvar	_p @ sp[(-14)+12]
 28311  01AB6A  0EFE               	movlw	-2
 28312  01AB6C  0060  F133  FFE3   	movff	_prec,plusw1
 28313  01AB72  0EFF               	movlw	-1
 28314  01AB74  0060  F137  FFE3   	movff	_prec+1,plusw1
 28315  01AB7A                     l2626:
 28316                           
 28317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 28318                           ;stkvar	_w @ sp[(-14)+10]
 28319  01AB7A  0EFC               	movlw	-4
 28320  01AB7C  0060  F12B  FFE3   	movff	_width,plusw1
 28321  01AB82  0EFD               	movlw	-3
 28322  01AB84  0060  F12F  FFE3   	movff	_width+1,plusw1
 28323                           
 28324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 28325                           ;stkvar	_d @ sp[(-14)+-10]
 28326  01AB8A  0EE8               	movlw	232
 28327  01AB8C  24E1               	addwf	fsr1l,w,c
 28328  01AB8E  6ED9               	movwf	fsr2l,c
 28329  01AB90  0EFF               	movlw	255
 28330  01AB92  20E2               	addwfc	fsr1h,w,c
 28331  01AB94  6EDA               	movwf	fsr2h,c
 28332                           
 28333                           ;stkvar	_n @ sp[(-14)+0]
 28334  01AB96  0E08               	movlw	8
 28335  01AB98  6E2A               	movwf	btemp^0,c
 28336  01AB9A  0EF2               	movlw	-14
 28337  01AB9C                     us1535999:
 28338  01AB9C  006F FF7B FFE3     	movff	postinc2,plusw1
 28339  01ABA2  28E8               	incf	wreg,w,c
 28340  01ABA4  2E2A               	decfsz	btemp^0,f,c
 28341  01ABA6  D7FA               	bra	us1535999
 28342                           
 28343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 28344  01ABA8  0E4F               	movlw	79
 28345  01ABAA  6E34               	movwf	(btemp+10)^0,c
 28346  01ABAC  0E00               	movlw	0
 28347  01ABAE  6E35               	movwf	(btemp+11)^0,c
 28348                           
 28349                           ;stkvar	_i @ sp[(-14)+8]
 28350  01ABB0  0EFA               	movlw	-6
 28351  01ABB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28352  01ABB8  0EFB               	movlw	-5
 28353  01ABBA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28354                           
 28355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 28356  01ABC0  0103               	movlb	3	; () banked
 28357  01ABC2  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28358                           
 28359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28360  01ABC4  D0FB               	goto	l16006
 28361  01ABC6                     l15996:
 28362                           
 28363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 28364                           ;stkvar	_i @ sp[(-14)+8]
 28365  01ABC6  50E1               	movf	fsr1l,w,c
 28366  01ABC8  0FFA               	addlw	-6
 28367  01ABCA  6ED9               	movwf	fsr2l,c
 28368  01ABCC  50E2               	movf	fsr1h,w,c
 28369  01ABCE  6EDA               	movwf	fsr2h,c
 28370  01ABD0  0EFF               	movlw	255
 28371  01ABD2  22DA               	addwfc	fsr2h,f,c
 28372  01ABD4  06DE               	decf	postinc2,f,c
 28373  01ABD6  0E00               	movlw	0
 28374  01ABD8  5ADD               	subwfb	postdec2,f,c
 28375                           
 28376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 28377  01ABDA  0E0A               	movlw	10
 28378  01ABDC  6EE6               	movwf	postinc1,c
 28379  01ABDE  0E00               	movlw	0
 28380  01ABE0  6EE6               	movwf	postinc1,c
 28381  01ABE2  0E00               	movlw	0
 28382  01ABE4  6EE6               	movwf	postinc1,c
 28383  01ABE6  0E00               	movlw	0
 28384  01ABE8  6EE6               	movwf	postinc1,c
 28385  01ABEA  0E00               	movlw	0
 28386  01ABEC  6EE6               	movwf	postinc1,c
 28387  01ABEE  0E00               	movlw	0
 28388  01ABF0  6EE6               	movwf	postinc1,c
 28389  01ABF2  0E00               	movlw	0
 28390  01ABF4  6EE6               	movwf	postinc1,c
 28391  01ABF6  0E00               	movlw	0
 28392  01ABF8  6EE6               	movwf	postinc1,c
 28393                           
 28394                           ;stkvar	_n @ sp[(-22)+0]
 28395  01ABFA  50E1               	movf	fsr1l,w,c
 28396  01ABFC  0FEA               	addlw	-22
 28397  01ABFE  6ED9               	movwf	fsr2l,c
 28398  01AC00  50E2               	movf	fsr1h,w,c
 28399  01AC02  6EDA               	movwf	fsr2h,c
 28400  01AC04  0EFF               	movlw	255
 28401  01AC06  22DA               	addwfc	fsr2h,f,c
 28402  01AC08  006F FF7B FFE6     	movff	postinc2,postinc1
 28403  01AC0E  006F FF7B FFE6     	movff	postinc2,postinc1
 28404  01AC14  006F FF7B FFE6     	movff	postinc2,postinc1
 28405  01AC1A  006F FF7B FFE6     	movff	postinc2,postinc1
 28406  01AC20  006F FF7B FFE6     	movff	postinc2,postinc1
 28407  01AC26  006F FF7B FFE6     	movff	postinc2,postinc1
 28408  01AC2C  006F FF7B FFE6     	movff	postinc2,postinc1
 28409  01AC32  006F FF7B FFE6     	movff	postinc2,postinc1
 28410  01AC38  EC52  F0F9         	call	___lomod	;wreg free
 28411  01AC3C  52E5               	movf	postdec1,f,c
 28412  01AC3E  006F FF9C  F041    	movff	indf1,btemp+23
 28413  01AC44  52E5               	movf	postdec1,f,c
 28414  01AC46  006F FF9C  F040    	movff	indf1,btemp+22
 28415  01AC4C  52E5               	movf	postdec1,f,c
 28416  01AC4E  006F FF9C  F03F    	movff	indf1,btemp+21
 28417  01AC54  52E5               	movf	postdec1,f,c
 28418  01AC56  006F FF9C  F03E    	movff	indf1,btemp+20
 28419  01AC5C  52E5               	movf	postdec1,f,c
 28420  01AC5E  006F FF9C  F03D    	movff	indf1,btemp+19
 28421  01AC64  52E5               	movf	postdec1,f,c
 28422  01AC66  006F FF9C  F03C    	movff	indf1,btemp+18
 28423  01AC6C  52E5               	movf	postdec1,f,c
 28424  01AC6E  006F FF9C  F03B    	movff	indf1,btemp+17
 28425  01AC74  52E5               	movf	postdec1,f,c
 28426  01AC76  006F FF9C  F03A    	movff	indf1,btemp+16
 28427  01AC7C  0EF8               	movlw	248
 28428  01AC7E  26E1               	addwf	fsr1l,f,c
 28429  01AC80  0EFF               	movlw	255
 28430  01AC82  22E2               	addwfc	fsr1h,f,c
 28431  01AC84  0E30               	movlw	48
 28432  01AC86  263A               	addwf	(btemp+16)^0,f,c
 28433                           
 28434                           ;stkvar	_i @ sp[(-14)+8]
 28435  01AC88  0EFA               	movlw	-6
 28436  01AC8A  006F FF8C  F034    	movff	plusw1,btemp+10
 28437  01AC90  0EFB               	movlw	-5
 28438  01AC92  006F FF8C  F035    	movff	plusw1,btemp+11
 28439  01AC98  0E54               	movlw	low _dbuf
 28440  01AC9A  2434               	addwf	(btemp+10)^0,w,c
 28441  01AC9C  6ED9               	movwf	fsr2l,c
 28442  01AC9E  0E03               	movlw	high _dbuf
 28443  01ACA0  2035               	addwfc	(btemp+11)^0,w,c
 28444  01ACA2  6EDA               	movwf	fsr2h,c
 28445  01ACA4  0060  F0EB  FFDF   	movff	btemp+16,indf2
 28446                           
 28447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 28448                           ;stkvar	_p @ sp[(-14)+12]
 28449  01ACAA  50E1               	movf	fsr1l,w,c
 28450  01ACAC  0FFE               	addlw	-2
 28451  01ACAE  6ED9               	movwf	fsr2l,c
 28452  01ACB0  50E2               	movf	fsr1h,w,c
 28453  01ACB2  6EDA               	movwf	fsr2h,c
 28454  01ACB4  0EFF               	movlw	255
 28455  01ACB6  22DA               	addwfc	fsr2h,f,c
 28456  01ACB8  06DE               	decf	postinc2,f,c
 28457  01ACBA  0E00               	movlw	0
 28458  01ACBC  5ADD               	subwfb	postdec2,f,c
 28459                           
 28460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 28461                           ;stkvar	_w @ sp[(-14)+10]
 28462  01ACBE  50E1               	movf	fsr1l,w,c
 28463  01ACC0  0FFC               	addlw	-4
 28464  01ACC2  6ED9               	movwf	fsr2l,c
 28465  01ACC4  50E2               	movf	fsr1h,w,c
 28466  01ACC6  6EDA               	movwf	fsr2h,c
 28467  01ACC8  0EFF               	movlw	255
 28468  01ACCA  22DA               	addwfc	fsr2h,f,c
 28469  01ACCC  06DE               	decf	postinc2,f,c
 28470  01ACCE  0E00               	movlw	0
 28471  01ACD0  5ADD               	subwfb	postdec2,f,c
 28472                           
 28473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 28474  01ACD2  0E0A               	movlw	10
 28475  01ACD4  6EE6               	movwf	postinc1,c
 28476  01ACD6  0E00               	movlw	0
 28477  01ACD8  6EE6               	movwf	postinc1,c
 28478  01ACDA  0E00               	movlw	0
 28479  01ACDC  6EE6               	movwf	postinc1,c
 28480  01ACDE  0E00               	movlw	0
 28481  01ACE0  6EE6               	movwf	postinc1,c
 28482  01ACE2  0E00               	movlw	0
 28483  01ACE4  6EE6               	movwf	postinc1,c
 28484  01ACE6  0E00               	movlw	0
 28485  01ACE8  6EE6               	movwf	postinc1,c
 28486  01ACEA  0E00               	movlw	0
 28487  01ACEC  6EE6               	movwf	postinc1,c
 28488  01ACEE  0E00               	movlw	0
 28489  01ACF0  6EE6               	movwf	postinc1,c
 28490                           
 28491                           ;stkvar	_n @ sp[(-22)+0]
 28492  01ACF2  50E1               	movf	fsr1l,w,c
 28493  01ACF4  0FEA               	addlw	-22
 28494  01ACF6  6ED9               	movwf	fsr2l,c
 28495  01ACF8  50E2               	movf	fsr1h,w,c
 28496  01ACFA  6EDA               	movwf	fsr2h,c
 28497  01ACFC  0EFF               	movlw	255
 28498  01ACFE  22DA               	addwfc	fsr2h,f,c
 28499  01AD00  006F FF7B FFE6     	movff	postinc2,postinc1
 28500  01AD06  006F FF7B FFE6     	movff	postinc2,postinc1
 28501  01AD0C  006F FF7B FFE6     	movff	postinc2,postinc1
 28502  01AD12  006F FF7B FFE6     	movff	postinc2,postinc1
 28503  01AD18  006F FF7B FFE6     	movff	postinc2,postinc1
 28504  01AD1E  006F FF7B FFE6     	movff	postinc2,postinc1
 28505  01AD24  006F FF7B FFE6     	movff	postinc2,postinc1
 28506  01AD2A  006F FF7B FFE6     	movff	postinc2,postinc1
 28507  01AD30  ECBA  F0F1         	call	___lodiv	;wreg free
 28508  01AD34  52E5               	movf	postdec1,f,c
 28509  01AD36  006F FF9C  F041    	movff	indf1,btemp+23
 28510  01AD3C  52E5               	movf	postdec1,f,c
 28511  01AD3E  006F FF9C  F040    	movff	indf1,btemp+22
 28512  01AD44  52E5               	movf	postdec1,f,c
 28513  01AD46  006F FF9C  F03F    	movff	indf1,btemp+21
 28514  01AD4C  52E5               	movf	postdec1,f,c
 28515  01AD4E  006F FF9C  F03E    	movff	indf1,btemp+20
 28516  01AD54  52E5               	movf	postdec1,f,c
 28517  01AD56  006F FF9C  F03D    	movff	indf1,btemp+19
 28518  01AD5C  52E5               	movf	postdec1,f,c
 28519  01AD5E  006F FF9C  F03C    	movff	indf1,btemp+18
 28520  01AD64  52E5               	movf	postdec1,f,c
 28521  01AD66  006F FF9C  F03B    	movff	indf1,btemp+17
 28522  01AD6C  52E5               	movf	postdec1,f,c
 28523  01AD6E  006F FF9C  F03A    	movff	indf1,btemp+16
 28524  01AD74  0EF8               	movlw	248
 28525  01AD76  26E1               	addwf	fsr1l,f,c
 28526  01AD78  0EFF               	movlw	255
 28527  01AD7A  22E2               	addwfc	fsr1h,f,c
 28528                           
 28529                           ;stkvar	_n @ sp[(-14)+0]
 28530  01AD7C  0EF2               	movlw	-14
 28531  01AD7E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 28532  01AD84  0EF3               	movlw	-13
 28533  01AD86  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 28534  01AD8C  0EF4               	movlw	-12
 28535  01AD8E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 28536  01AD94  0EF5               	movlw	-11
 28537  01AD96  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 28538  01AD9C  0EF6               	movlw	-10
 28539  01AD9E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 28540  01ADA4  0EF7               	movlw	-9
 28541  01ADA6  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 28542  01ADAC  0EF8               	movlw	-8
 28543  01ADAE  0060  F103  FFE3   	movff	btemp+22,plusw1
 28544  01ADB4  0EF9               	movlw	-7
 28545  01ADB6  0060  F107  FFE3   	movff	btemp+23,plusw1
 28546  01ADBC                     l16006:
 28547                           
 28548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28549                           ;stkvar	_i @ sp[(-14)+8]
 28550  01ADBC  0EFA               	movlw	-6
 28551  01ADBE  006F FF8C  F02A    	movff	plusw1,btemp
 28552  01ADC4  0EFB               	movlw	-5
 28553  01ADC6  50E3               	movf	plusw1,w,c
 28554  01ADC8  102A               	iorwf	btemp^0,w,c
 28555  01ADCA  B4D8               	btfsc	status,2,c
 28556  01ADCC  D02F               	goto	u15400
 28557                           
 28558                           ;stkvar	_n @ sp[(-14)+0]
 28559  01ADCE  0EF2               	movlw	-14
 28560  01ADD0  50E3               	movf	plusw1,w,c
 28561  01ADD2  E115               	bnz	u15371
 28562  01ADD4  0EF3               	movlw	-13
 28563  01ADD6  50E3               	movf	plusw1,w,c
 28564  01ADD8  E112               	bnz	u15371
 28565  01ADDA  0EF4               	movlw	-12
 28566  01ADDC  50E3               	movf	plusw1,w,c
 28567  01ADDE  E10F               	bnz	u15371
 28568  01ADE0  0EF5               	movlw	-11
 28569  01ADE2  50E3               	movf	plusw1,w,c
 28570  01ADE4  E10C               	bnz	u15371
 28571  01ADE6  0EF6               	movlw	-10
 28572  01ADE8  50E3               	movf	plusw1,w,c
 28573  01ADEA  E109               	bnz	u15371
 28574  01ADEC  0EF7               	movlw	-9
 28575  01ADEE  50E3               	movf	plusw1,w,c
 28576  01ADF0  E106               	bnz	u15371
 28577  01ADF2  0EF8               	movlw	-8
 28578  01ADF4  50E3               	movf	plusw1,w,c
 28579  01ADF6  E103               	bnz	u15371
 28580  01ADF8  0EF9               	movlw	-7
 28581  01ADFA  50E3               	movf	plusw1,w,c
 28582  01ADFC  A4D8               	btfss	status,2,c
 28583  01ADFE                     u15371:
 28584  01ADFE  D6E3               	goto	l15996
 28585                           
 28586                           ;stkvar	_p @ sp[(-14)+12]
 28587  01AE00  0EFF               	movlw	-1
 28588  01AE02  BEE3               	btfsc	plusw1,7,c
 28589  01AE04  D007               	goto	u15380
 28590  01AE06  0EFF               	movlw	-1
 28591  01AE08  50E3               	movf	plusw1,w,c
 28592  01AE0A  E103               	bnz	u15381
 28593  01AE0C  0EFE               	movlw	-2
 28594  01AE0E  04E3               	decf	plusw1,w,c
 28595  01AE10  B0D8               	btfsc	status,0,c
 28596  01AE12                     u15381:
 28597  01AE12  D6D9               	goto	l15996
 28598  01AE14                     u15380:
 28599                           
 28600                           ;stkvar	_w @ sp[(-14)+10]
 28601  01AE14  0EFD               	movlw	-3
 28602  01AE16  BEE3               	btfsc	plusw1,7,c
 28603  01AE18  D009               	goto	u15400
 28604  01AE1A  0EFD               	movlw	-3
 28605  01AE1C  50E3               	movf	plusw1,w,c
 28606  01AE1E  E104               	bnz	u15390
 28607  01AE20  0EFC               	movlw	-4
 28608  01AE22  04E3               	decf	plusw1,w,c
 28609  01AE24  A0D8               	btfss	status,0,c
 28610  01AE26  D002               	goto	u15400
 28611  01AE28                     u15390:
 28612  01AE28  B24E               	btfsc	_flags^0,1,c
 28613  01AE2A  D6CD               	goto	l15996
 28614  01AE2C                     u15400:
 28615                           
 28616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 28617                           ;stkvar	_w @ sp[(-14)+10]
 28618  01AE2C  0EFC               	movlw	-4
 28619  01AE2E  006F FF8F FFE6     	movff	plusw1,postinc1
 28620  01AE34  006F FF8F FFE6     	movff	plusw1,postinc1
 28621                           
 28622                           ;stkvar	_i @ sp[(-16)+8]
 28623  01AE3A  0E54               	movlw	low _dbuf
 28624  01AE3C  6E34               	movwf	(btemp+10)^0,c
 28625  01AE3E  0E03               	movlw	high _dbuf
 28626  01AE40  6E35               	movwf	(btemp+11)^0,c
 28627  01AE42  0EF8               	movlw	-8
 28628  01AE44  50E3               	movf	plusw1,w,c
 28629  01AE46  2634               	addwf	(btemp+10)^0,f,c
 28630  01AE48  0EF9               	movlw	-7
 28631  01AE4A  50E3               	movf	plusw1,w,c
 28632  01AE4C  2235               	addwfc	(btemp+11)^0,f,c
 28633  01AE4E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28634  01AE54  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28635                           
 28636                           ;stkvar	_fp @ sp[(-18)+-2]
 28637  01AE5A  0EEC               	movlw	-20
 28638  01AE5C  006F FF8F FFE6     	movff	plusw1,postinc1
 28639  01AE62  006F FF8F FFE6     	movff	plusw1,postinc1
 28640  01AE68  ECC5  F0FC         	call	_pad	;wreg free
 28641                           
 28642                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 28643  01AE6C  0EE8               	movlw	232
 28644  01AE6E  26E1               	addwf	fsr1l,f,c
 28645  01AE70  0EFF               	movlw	255
 28646  01AE72  22E2               	addwfc	fsr1h,f,c
 28647  01AE74  0012               	return		;funcret
 28648  01AE76                     __end_of_utoa:
 28649                           	opt callstack 0
 28650                           
 28651 ;; *************** function ___lomod *****************
 28652 ;; Defined at:
 28653 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 28654 ;; Parameters:    Size  Location     Type
 28655 ;;  dividend        8  [STACK] unsigned long long 
 28656 ;;  divisor         8  [STACK] unsigned long long 
 28657 ;; Auto vars:     Size  Location     Type
 28658 ;;  counter         1  [STACK] unsigned char 
 28659 ;; Return value:  Size  Location     Type
 28660 ;;                  8  [STACK] unsigned long long 
 28661 ;; Registers used:
 28662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28663 ;; Tracked objects:
 28664 ;;		On entry : 0/3
 28665 ;;		On exit  : 0/0
 28666 ;;		Unchanged: 0/0
 28667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28672 ;;Total ram usage:        0 bytes
 28673 ;; Hardware stack levels used:    1
 28674 ;; Hardware stack levels required when called:   15
 28675 ;; This function calls:
 28676 ;;		Nothing
 28677 ;; This function is called by:
 28678 ;;		_utoa
 28679 ;; This function uses a reentrant model
 28680 ;;
 28681                           
 28682                           	psect	text99
 28683  01F2A4                     __ptext99:
 28684                           	opt callstack 0
 28685  01F2A4                     ___lomod:
 28686                           	opt callstack 0
 28687                           
 28688                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28689  01F2A4  52E6               	movf	postinc1,f,c
 28690                           
 28691                           ;stkvar	_divisor @ sp[(-1)+-16]
 28692                           
 28693                           ;incstack = 0
 28694 ;; hardware stack exceeded
 28695  01F2A6  0EEF               	movlw	-17
 28696  01F2A8  50E3               	movf	plusw1,w,c
 28697  01F2AA  E116               	bnz	u9180
 28698  01F2AC  0EF0               	movlw	-16
 28699  01F2AE  50E3               	movf	plusw1,w,c
 28700  01F2B0  E113               	bnz	u9180
 28701  01F2B2  0EF1               	movlw	-15
 28702  01F2B4  50E3               	movf	plusw1,w,c
 28703  01F2B6  E110               	bnz	u9180
 28704  01F2B8  0EF2               	movlw	-14
 28705  01F2BA  50E3               	movf	plusw1,w,c
 28706  01F2BC  E10D               	bnz	u9180
 28707  01F2BE  0EF3               	movlw	-13
 28708  01F2C0  50E3               	movf	plusw1,w,c
 28709  01F2C2  E10A               	bnz	u9180
 28710  01F2C4  0EF4               	movlw	-12
 28711  01F2C6  50E3               	movf	plusw1,w,c
 28712  01F2C8  E107               	bnz	u9180
 28713  01F2CA  0EF5               	movlw	-11
 28714  01F2CC  50E3               	movf	plusw1,w,c
 28715  01F2CE  E104               	bnz	u9180
 28716  01F2D0  0EF6               	movlw	-10
 28717  01F2D2  50E3               	movf	plusw1,w,c
 28718  01F2D4  B4D8               	btfsc	status,2,c
 28719  01F2D6  D075               	goto	u9210
 28720  01F2D8                     u9180:
 28721                           
 28722                           ;stkvar	_counter @ sp[(-1)+0]
 28723  01F2D8  0EFF               	movlw	-1
 28724  01F2DA  6AE3               	clrf	plusw1,c
 28725  01F2DC  D012               	goto	L29
 28726  01F2DE                     l10824:
 28727                           
 28728                           ;stkvar	_divisor @ sp[(-1)+-16]
 28729  01F2DE  90D8               	bcf	status,0,c
 28730  01F2E0  0EEF               	movlw	-17
 28731  01F2E2  36E3               	rlcf	plusw1,f,c
 28732  01F2E4  0EF0               	movlw	-16
 28733  01F2E6  36E3               	rlcf	plusw1,f,c
 28734  01F2E8  0EF1               	movlw	-15
 28735  01F2EA  36E3               	rlcf	plusw1,f,c
 28736  01F2EC  0EF2               	movlw	-14
 28737  01F2EE  36E3               	rlcf	plusw1,f,c
 28738  01F2F0  0EF3               	movlw	-13
 28739  01F2F2  36E3               	rlcf	plusw1,f,c
 28740  01F2F4  0EF4               	movlw	-12
 28741  01F2F6  36E3               	rlcf	plusw1,f,c
 28742  01F2F8  0EF5               	movlw	-11
 28743  01F2FA  36E3               	rlcf	plusw1,f,c
 28744  01F2FC  0EF6               	movlw	-10
 28745  01F2FE  36E3               	rlcf	plusw1,f,c
 28746                           
 28747                           ;stkvar	_counter @ sp[(-1)+0]
 28748  01F300  0EFF               	movlw	-1
 28749  01F302                     L29:
 28750  01F302  2AE3               	incf	plusw1,f,c
 28751                           
 28752                           ;stkvar	_divisor @ sp[(-1)+-16]
 28753  01F304  0EF6               	movlw	-10
 28754  01F306  AEE3               	btfss	plusw1,7,c
 28755  01F308  D7EA               	goto	l10824
 28756  01F30A                     u9190:
 28757                           
 28758                           ;stkvar	_divisor @ sp[(-1)+-16]
 28759                           ;stkvar	_dividend @ sp[(-1)+-8]
 28760  01F30A  50E1               	movf	fsr1l,w,c
 28761  01F30C  0FF7               	addlw	-9
 28762  01F30E  6ED9               	movwf	fsr2l,c
 28763  01F310  50E2               	movf	fsr1h,w,c
 28764  01F312  6EDA               	movwf	fsr2h,c
 28765  01F314  0EFF               	movlw	255
 28766  01F316  22DA               	addwfc	fsr2h,f,c
 28767  01F318  0EEF               	movlw	-17
 28768  01F31A  50E3               	movf	plusw1,w,c
 28769  01F31C  5CDE               	subwf	postinc2,w,c
 28770  01F31E  0EF0               	movlw	-16
 28771  01F320  50E3               	movf	plusw1,w,c
 28772  01F322  58DE               	subwfb	postinc2,w,c
 28773  01F324  0EF1               	movlw	-15
 28774  01F326  50E3               	movf	plusw1,w,c
 28775  01F328  58DE               	subwfb	postinc2,w,c
 28776  01F32A  0EF2               	movlw	-14
 28777  01F32C  50E3               	movf	plusw1,w,c
 28778  01F32E  58DE               	subwfb	postinc2,w,c
 28779  01F330  0EF3               	movlw	-13
 28780  01F332  50E3               	movf	plusw1,w,c
 28781  01F334  58DE               	subwfb	postinc2,w,c
 28782  01F336  0EF4               	movlw	-12
 28783  01F338  50E3               	movf	plusw1,w,c
 28784  01F33A  58DE               	subwfb	postinc2,w,c
 28785  01F33C  0EF5               	movlw	-11
 28786  01F33E  50E3               	movf	plusw1,w,c
 28787  01F340  58DE               	subwfb	postinc2,w,c
 28788  01F342  0EF6               	movlw	-10
 28789  01F344  50E3               	movf	plusw1,w,c
 28790  01F346  58DE               	subwfb	postinc2,w,c
 28791  01F348  A0D8               	btfss	status,0,c
 28792  01F34A  D01F               	goto	l10832
 28793                           
 28794                           ;stkvar	_divisor @ sp[(-1)+-16]
 28795                           ;stkvar	_dividend @ sp[(-1)+-8]
 28796  01F34C  50E1               	movf	fsr1l,w,c
 28797  01F34E  0FF7               	addlw	-9
 28798  01F350  6ED9               	movwf	fsr2l,c
 28799  01F352  50E2               	movf	fsr1h,w,c
 28800  01F354  6EDA               	movwf	fsr2h,c
 28801  01F356  0EFF               	movlw	255
 28802  01F358  22DA               	addwfc	fsr2h,f,c
 28803  01F35A  0EEF               	movlw	-17
 28804  01F35C  50E3               	movf	plusw1,w,c
 28805  01F35E  5EDE               	subwf	postinc2,f,c
 28806  01F360  0EF0               	movlw	-16
 28807  01F362  50E3               	movf	plusw1,w,c
 28808  01F364  5ADE               	subwfb	postinc2,f,c
 28809  01F366  0EF1               	movlw	-15
 28810  01F368  50E3               	movf	plusw1,w,c
 28811  01F36A  5ADE               	subwfb	postinc2,f,c
 28812  01F36C  0EF2               	movlw	-14
 28813  01F36E  50E3               	movf	plusw1,w,c
 28814  01F370  5ADE               	subwfb	postinc2,f,c
 28815  01F372  0EF3               	movlw	-13
 28816  01F374  50E3               	movf	plusw1,w,c
 28817  01F376  5ADE               	subwfb	postinc2,f,c
 28818  01F378  0EF4               	movlw	-12
 28819  01F37A  50E3               	movf	plusw1,w,c
 28820  01F37C  5ADE               	subwfb	postinc2,f,c
 28821  01F37E  0EF5               	movlw	-11
 28822  01F380  50E3               	movf	plusw1,w,c
 28823  01F382  5ADE               	subwfb	postinc2,f,c
 28824  01F384  0EF6               	movlw	-10
 28825  01F386  50E3               	movf	plusw1,w,c
 28826  01F388  5ADE               	subwfb	postinc2,f,c
 28827  01F38A                     l10832:
 28828                           
 28829                           ;stkvar	_divisor @ sp[(-1)+-16]
 28830  01F38A  90D8               	bcf	status,0,c
 28831  01F38C  0EF6               	movlw	-10
 28832  01F38E  32E3               	rrcf	plusw1,f,c
 28833  01F390  0EF5               	movlw	-11
 28834  01F392  32E3               	rrcf	plusw1,f,c
 28835  01F394  0EF4               	movlw	-12
 28836  01F396  32E3               	rrcf	plusw1,f,c
 28837  01F398  0EF3               	movlw	-13
 28838  01F39A  32E3               	rrcf	plusw1,f,c
 28839  01F39C  0EF2               	movlw	-14
 28840  01F39E  32E3               	rrcf	plusw1,f,c
 28841  01F3A0  0EF1               	movlw	-15
 28842  01F3A2  32E3               	rrcf	plusw1,f,c
 28843  01F3A4  0EF0               	movlw	-16
 28844  01F3A6  32E3               	rrcf	plusw1,f,c
 28845  01F3A8  0EEF               	movlw	-17
 28846  01F3AA  32E3               	rrcf	plusw1,f,c
 28847                           
 28848                           ;stkvar	_counter @ sp[(-1)+0]
 28849  01F3AC  0EFF               	movlw	-1
 28850  01F3AE  50E3               	movf	plusw1,w,c
 28851  01F3B0  6E2A               	movwf	btemp^0,c
 28852  01F3B2  0E01               	movlw	1
 28853  01F3B4  5E2A               	subwf	btemp^0,f,c
 28854  01F3B6  0EFF               	movlw	-1
 28855  01F3B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 28856  01F3BE  A4D8               	btfss	status,2,c
 28857  01F3C0  D7A4               	goto	u9190
 28858  01F3C2                     u9210:
 28859                           
 28860                           ;stkvar	_dividend @ sp[(-1)+-8]
 28861  01F3C2  0EF7               	movlw	247
 28862  01F3C4  24E1               	addwf	fsr1l,w,c
 28863  01F3C6  6ED9               	movwf	fsr2l,c
 28864  01F3C8  0EFF               	movlw	255
 28865  01F3CA  20E2               	addwfc	fsr1h,w,c
 28866  01F3CC  6EDA               	movwf	fsr2h,c
 28867                           
 28868                           ;stkvar	?___lomod @ sp[(-1)+-8]
 28869  01F3CE  0E08               	movlw	8
 28870  01F3D0  6E2A               	movwf	btemp^0,c
 28871  01F3D2  0EF7               	movlw	-9
 28872  01F3D4                     us922999:
 28873  01F3D4  006F FF7B FFE3     	movff	postinc2,plusw1
 28874  01F3DA  28E8               	incf	wreg,w,c
 28875  01F3DC  2E2A               	decfsz	btemp^0,f,c
 28876  01F3DE  D7FA               	bra	us922999
 28877                           
 28878                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28879  01F3E0  52E5               	movf	postdec1,f,c
 28880  01F3E2  0012               	return		;funcret
 28881  01F3E4                     __end_of___lomod:
 28882                           	opt callstack 0
 28883                           
 28884 ;; *************** function ___lodiv *****************
 28885 ;; Defined at:
 28886 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 28887 ;; Parameters:    Size  Location     Type
 28888 ;;  dividend        8  [STACK] unsigned long long 
 28889 ;;  divisor         8  [STACK] unsigned long long 
 28890 ;; Auto vars:     Size  Location     Type
 28891 ;;  quotient        8  [STACK] unsigned long long 
 28892 ;;  counter         1  [STACK] unsigned char 
 28893 ;; Return value:  Size  Location     Type
 28894 ;;                  8  [STACK] unsigned long long 
 28895 ;; Registers used:
 28896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28897 ;; Tracked objects:
 28898 ;;		On entry : 0/3
 28899 ;;		On exit  : 0/0
 28900 ;;		Unchanged: 0/0
 28901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28906 ;;Total ram usage:        0 bytes
 28907 ;; Hardware stack levels used:    1
 28908 ;; Hardware stack levels required when called:   15
 28909 ;; This function calls:
 28910 ;;		Nothing
 28911 ;; This function is called by:
 28912 ;;		_utoa
 28913 ;; This function uses a reentrant model
 28914 ;;
 28915                           
 28916                           	psect	text100
 28917  01E374                     __ptext100:
 28918                           	opt callstack 0
 28919  01E374                     ___lodiv:
 28920                           	opt callstack 0
 28921                           
 28922                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28923  01E374  0E09               	movlw	9
 28924  01E376  26E1               	addwf	fsr1l,f,c
 28925  01E378  0E00               	movlw	0
 28926  01E37A  22E2               	addwfc	fsr1h,f,c
 28927                           
 28928                           ;stkvar	_quotient @ sp[(-9)+0]
 28929                           
 28930                           ;incstack = 0
 28931 ;; hardware stack exceeded
 28932  01E37C  0E07               	movlw	7
 28933  01E37E  6E2A               	movwf	btemp^0,c
 28934  01E380  0EF7               	movlw	-9
 28935  01E382                     u9121:
 28936  01E382  6AE3               	clrf	plusw1,c
 28937  01E384  2AE8               	incf	wreg,f,c
 28938  01E386  062A               	decf	btemp^0,f,c
 28939  01E388  E2FC               	bc	u9121
 28940                           
 28941                           ;stkvar	_divisor @ sp[(-9)+-16]
 28942  01E38A  0EE7               	movlw	-25
 28943  01E38C  50E3               	movf	plusw1,w,c
 28944  01E38E  E116               	bnz	u9130
 28945  01E390  0EE8               	movlw	-24
 28946  01E392  50E3               	movf	plusw1,w,c
 28947  01E394  E113               	bnz	u9130
 28948  01E396  0EE9               	movlw	-23
 28949  01E398  50E3               	movf	plusw1,w,c
 28950  01E39A  E110               	bnz	u9130
 28951  01E39C  0EEA               	movlw	-22
 28952  01E39E  50E3               	movf	plusw1,w,c
 28953  01E3A0  E10D               	bnz	u9130
 28954  01E3A2  0EEB               	movlw	-21
 28955  01E3A4  50E3               	movf	plusw1,w,c
 28956  01E3A6  E10A               	bnz	u9130
 28957  01E3A8  0EEC               	movlw	-20
 28958  01E3AA  50E3               	movf	plusw1,w,c
 28959  01E3AC  E107               	bnz	u9130
 28960  01E3AE  0EED               	movlw	-19
 28961  01E3B0  50E3               	movf	plusw1,w,c
 28962  01E3B2  E104               	bnz	u9130
 28963  01E3B4  0EEE               	movlw	-18
 28964  01E3B6  50E3               	movf	plusw1,w,c
 28965  01E3B8  B4D8               	btfsc	status,2,c
 28966  01E3BA  D088               	goto	u9160
 28967  01E3BC                     u9130:
 28968                           
 28969                           ;stkvar	_counter @ sp[(-9)+8]
 28970  01E3BC  0EFF               	movlw	-1
 28971  01E3BE  6AE3               	clrf	plusw1,c
 28972  01E3C0  D012               	goto	L30
 28973  01E3C2                     l10800:
 28974                           
 28975                           ;stkvar	_divisor @ sp[(-9)+-16]
 28976  01E3C2  90D8               	bcf	status,0,c
 28977  01E3C4  0EE7               	movlw	-25
 28978  01E3C6  36E3               	rlcf	plusw1,f,c
 28979  01E3C8  0EE8               	movlw	-24
 28980  01E3CA  36E3               	rlcf	plusw1,f,c
 28981  01E3CC  0EE9               	movlw	-23
 28982  01E3CE  36E3               	rlcf	plusw1,f,c
 28983  01E3D0  0EEA               	movlw	-22
 28984  01E3D2  36E3               	rlcf	plusw1,f,c
 28985  01E3D4  0EEB               	movlw	-21
 28986  01E3D6  36E3               	rlcf	plusw1,f,c
 28987  01E3D8  0EEC               	movlw	-20
 28988  01E3DA  36E3               	rlcf	plusw1,f,c
 28989  01E3DC  0EED               	movlw	-19
 28990  01E3DE  36E3               	rlcf	plusw1,f,c
 28991  01E3E0  0EEE               	movlw	-18
 28992  01E3E2  36E3               	rlcf	plusw1,f,c
 28993                           
 28994                           ;stkvar	_counter @ sp[(-9)+8]
 28995  01E3E4  0EFF               	movlw	-1
 28996  01E3E6                     L30:
 28997  01E3E6  2AE3               	incf	plusw1,f,c
 28998                           
 28999                           ;stkvar	_divisor @ sp[(-9)+-16]
 29000  01E3E8  0EEE               	movlw	-18
 29001  01E3EA  AEE3               	btfss	plusw1,7,c
 29002  01E3EC  D7EA               	goto	l10800
 29003  01E3EE                     u9140:
 29004                           
 29005                           ;stkvar	_quotient @ sp[(-9)+0]
 29006  01E3EE  90D8               	bcf	status,0,c
 29007  01E3F0  0EF7               	movlw	-9
 29008  01E3F2  36E3               	rlcf	plusw1,f,c
 29009  01E3F4  0EF8               	movlw	-8
 29010  01E3F6  36E3               	rlcf	plusw1,f,c
 29011  01E3F8  0EF9               	movlw	-7
 29012  01E3FA  36E3               	rlcf	plusw1,f,c
 29013  01E3FC  0EFA               	movlw	-6
 29014  01E3FE  36E3               	rlcf	plusw1,f,c
 29015  01E400  0EFB               	movlw	-5
 29016  01E402  36E3               	rlcf	plusw1,f,c
 29017  01E404  0EFC               	movlw	-4
 29018  01E406  36E3               	rlcf	plusw1,f,c
 29019  01E408  0EFD               	movlw	-3
 29020  01E40A  36E3               	rlcf	plusw1,f,c
 29021  01E40C  0EFE               	movlw	-2
 29022  01E40E  36E3               	rlcf	plusw1,f,c
 29023                           
 29024                           ;stkvar	_divisor @ sp[(-9)+-16]
 29025                           ;stkvar	_dividend @ sp[(-9)+-8]
 29026  01E410  50E1               	movf	fsr1l,w,c
 29027  01E412  0FEF               	addlw	-17
 29028  01E414  6ED9               	movwf	fsr2l,c
 29029  01E416  50E2               	movf	fsr1h,w,c
 29030  01E418  6EDA               	movwf	fsr2h,c
 29031  01E41A  0EFF               	movlw	255
 29032  01E41C  22DA               	addwfc	fsr2h,f,c
 29033  01E41E  0EE7               	movlw	-25
 29034  01E420  50E3               	movf	plusw1,w,c
 29035  01E422  5CDE               	subwf	postinc2,w,c
 29036  01E424  0EE8               	movlw	-24
 29037  01E426  50E3               	movf	plusw1,w,c
 29038  01E428  58DE               	subwfb	postinc2,w,c
 29039  01E42A  0EE9               	movlw	-23
 29040  01E42C  50E3               	movf	plusw1,w,c
 29041  01E42E  58DE               	subwfb	postinc2,w,c
 29042  01E430  0EEA               	movlw	-22
 29043  01E432  50E3               	movf	plusw1,w,c
 29044  01E434  58DE               	subwfb	postinc2,w,c
 29045  01E436  0EEB               	movlw	-21
 29046  01E438  50E3               	movf	plusw1,w,c
 29047  01E43A  58DE               	subwfb	postinc2,w,c
 29048  01E43C  0EEC               	movlw	-20
 29049  01E43E  50E3               	movf	plusw1,w,c
 29050  01E440  58DE               	subwfb	postinc2,w,c
 29051  01E442  0EED               	movlw	-19
 29052  01E444  50E3               	movf	plusw1,w,c
 29053  01E446  58DE               	subwfb	postinc2,w,c
 29054  01E448  0EEE               	movlw	-18
 29055  01E44A  50E3               	movf	plusw1,w,c
 29056  01E44C  58DE               	subwfb	postinc2,w,c
 29057  01E44E  A0D8               	btfss	status,0,c
 29058  01E450  D021               	goto	l10812
 29059                           
 29060                           ;stkvar	_divisor @ sp[(-9)+-16]
 29061                           ;stkvar	_dividend @ sp[(-9)+-8]
 29062  01E452  50E1               	movf	fsr1l,w,c
 29063  01E454  0FEF               	addlw	-17
 29064  01E456  6ED9               	movwf	fsr2l,c
 29065  01E458  50E2               	movf	fsr1h,w,c
 29066  01E45A  6EDA               	movwf	fsr2h,c
 29067  01E45C  0EFF               	movlw	255
 29068  01E45E  22DA               	addwfc	fsr2h,f,c
 29069  01E460  0EE7               	movlw	-25
 29070  01E462  50E3               	movf	plusw1,w,c
 29071  01E464  5EDE               	subwf	postinc2,f,c
 29072  01E466  0EE8               	movlw	-24
 29073  01E468  50E3               	movf	plusw1,w,c
 29074  01E46A  5ADE               	subwfb	postinc2,f,c
 29075  01E46C  0EE9               	movlw	-23
 29076  01E46E  50E3               	movf	plusw1,w,c
 29077  01E470  5ADE               	subwfb	postinc2,f,c
 29078  01E472  0EEA               	movlw	-22
 29079  01E474  50E3               	movf	plusw1,w,c
 29080  01E476  5ADE               	subwfb	postinc2,f,c
 29081  01E478  0EEB               	movlw	-21
 29082  01E47A  50E3               	movf	plusw1,w,c
 29083  01E47C  5ADE               	subwfb	postinc2,f,c
 29084  01E47E  0EEC               	movlw	-20
 29085  01E480  50E3               	movf	plusw1,w,c
 29086  01E482  5ADE               	subwfb	postinc2,f,c
 29087  01E484  0EED               	movlw	-19
 29088  01E486  50E3               	movf	plusw1,w,c
 29089  01E488  5ADE               	subwfb	postinc2,f,c
 29090  01E48A  0EEE               	movlw	-18
 29091  01E48C  50E3               	movf	plusw1,w,c
 29092  01E48E  5ADE               	subwfb	postinc2,f,c
 29093                           
 29094                           ;stkvar	_quotient @ sp[(-9)+0]
 29095  01E490  0EF7               	movlw	-9
 29096  01E492  80E3               	bsf	plusw1,0,c
 29097  01E494                     l10812:
 29098                           
 29099                           ;stkvar	_divisor @ sp[(-9)+-16]
 29100  01E494  90D8               	bcf	status,0,c
 29101  01E496  0EEE               	movlw	-18
 29102  01E498  32E3               	rrcf	plusw1,f,c
 29103  01E49A  0EED               	movlw	-19
 29104  01E49C  32E3               	rrcf	plusw1,f,c
 29105  01E49E  0EEC               	movlw	-20
 29106  01E4A0  32E3               	rrcf	plusw1,f,c
 29107  01E4A2  0EEB               	movlw	-21
 29108  01E4A4  32E3               	rrcf	plusw1,f,c
 29109  01E4A6  0EEA               	movlw	-22
 29110  01E4A8  32E3               	rrcf	plusw1,f,c
 29111  01E4AA  0EE9               	movlw	-23
 29112  01E4AC  32E3               	rrcf	plusw1,f,c
 29113  01E4AE  0EE8               	movlw	-24
 29114  01E4B0  32E3               	rrcf	plusw1,f,c
 29115  01E4B2  0EE7               	movlw	-25
 29116  01E4B4  32E3               	rrcf	plusw1,f,c
 29117                           
 29118                           ;stkvar	_counter @ sp[(-9)+8]
 29119  01E4B6  0EFF               	movlw	-1
 29120  01E4B8  50E3               	movf	plusw1,w,c
 29121  01E4BA  6E2A               	movwf	btemp^0,c
 29122  01E4BC  0E01               	movlw	1
 29123  01E4BE  5E2A               	subwf	btemp^0,f,c
 29124  01E4C0  0EFF               	movlw	-1
 29125  01E4C2  0060  F0AB  FFE3   	movff	btemp,plusw1
 29126  01E4C8  A4D8               	btfss	status,2,c
 29127  01E4CA  D791               	goto	u9140
 29128  01E4CC                     u9160:
 29129                           
 29130                           ;stkvar	_quotient @ sp[(-9)+0]
 29131  01E4CC  0EF7               	movlw	247
 29132  01E4CE  24E1               	addwf	fsr1l,w,c
 29133  01E4D0  6ED9               	movwf	fsr2l,c
 29134  01E4D2  0EFF               	movlw	255
 29135  01E4D4  20E2               	addwfc	fsr1h,w,c
 29136  01E4D6  6EDA               	movwf	fsr2h,c
 29137                           
 29138                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 29139  01E4D8  0E08               	movlw	8
 29140  01E4DA  6E2A               	movwf	btemp^0,c
 29141  01E4DC  0EEF               	movlw	-17
 29142  01E4DE                     us917999:
 29143  01E4DE  006F FF7B FFE3     	movff	postinc2,plusw1
 29144  01E4E4  28E8               	incf	wreg,w,c
 29145  01E4E6  2E2A               	decfsz	btemp^0,f,c
 29146  01E4E8  D7FA               	bra	us917999
 29147                           
 29148                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29149  01E4EA  0EF7               	movlw	247
 29150  01E4EC  26E1               	addwf	fsr1l,f,c
 29151  01E4EE  0EFF               	movlw	255
 29152  01E4F0  22E2               	addwfc	fsr1h,f,c
 29153  01E4F2  0012               	return		;funcret
 29154  01E4F4                     __end_of___lodiv:
 29155                           	opt callstack 0
 29156                           
 29157 ;; *************** function _strncmp *****************
 29158 ;; Defined at:
 29159 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 29160 ;; Parameters:    Size  Location     Type
 29161 ;;  _l              2  [STACK] PTR const unsigned char 
 29162 ;;		 -> ct(3), STR_94(127), STR_92(3), STR_91(3), 
 29163 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 29164 ;;		 -> STR_86(21), STR_85(21), STR_84(26), STR_83(15), 
 29165 ;;		 -> STR_82(15), STR_81(15), STR_80(15), STR_79(10), 
 29166 ;;		 -> STR_78(10), STR_77(19), STR_76(19), STR_73(3), 
 29167 ;;		 -> STR_72(14), STR_71(28), STR_70(28), STR_69(28), 
 29168 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 29169 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 29170 ;;		 -> STR_60(22), STR_59(21), STR_58(22), STR_57(22), 
 29171 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(22), 
 29172 ;;		 -> STR_52(24), STR_51(24), STR_50(24), STR_49(30), 
 29173 ;;		 -> STR_48(24), STR_47(24), STR_46(23), STR_45(23), 
 29174 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 29175 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 29176 ;;		 -> STR_36(23), STR_35(23), STR_34(18), STR_33(17), 
 29177 ;;		 -> STR_32(17), STR_31(22), STR_30(22), STR_29(22), 
 29178 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 29179 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 29180 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 29181 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 29182 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 29183 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 29184 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 29185 ;;  _r              2  [STACK] PTR const unsigned char 
 29186 ;;		 -> STR_128(3), STR_124(3), STR_119(3), STR_114(3), 
 29187 ;;		 -> STR_109(3), STR_105(3), 
 29188 ;;  n               2  [STACK] unsigned int 
 29189 ;; Auto vars:     Size  Location     Type
 29190 ;;  r               2  [STACK] PTR const unsigned char 
 29191 ;;		 -> STR_128(3), STR_124(3), STR_119(3), STR_114(3), 
 29192 ;;		 -> STR_109(3), STR_105(3), 
 29193 ;;  l               2  [STACK] PTR const unsigned char 
 29194 ;;		 -> ct(3), STR_94(127), STR_92(3), STR_91(3), 
 29195 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 29196 ;;		 -> STR_86(21), STR_85(21), STR_84(26), STR_83(15), 
 29197 ;;		 -> STR_82(15), STR_81(15), STR_80(15), STR_79(10), 
 29198 ;;		 -> STR_78(10), STR_77(19), STR_76(19), STR_73(3), 
 29199 ;;		 -> STR_72(14), STR_71(28), STR_70(28), STR_69(28), 
 29200 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 29201 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 29202 ;;		 -> STR_60(22), STR_59(21), STR_58(22), STR_57(22), 
 29203 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(22), 
 29204 ;;		 -> STR_52(24), STR_51(24), STR_50(24), STR_49(30), 
 29205 ;;		 -> STR_48(24), STR_47(24), STR_46(23), STR_45(23), 
 29206 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 29207 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 29208 ;;		 -> STR_36(23), STR_35(23), STR_34(18), STR_33(17), 
 29209 ;;		 -> STR_32(17), STR_31(22), STR_30(22), STR_29(22), 
 29210 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 29211 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 29212 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 29213 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 29214 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 29215 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 29216 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 29217 ;; Return value:  Size  Location     Type
 29218 ;;                  2  [STACK] int 
 29219 ;; Registers used:
 29220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 29221 ;; Tracked objects:
 29222 ;;		On entry : 0/0
 29223 ;;		On exit  : 0/0
 29224 ;;		Unchanged: 0/0
 29225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29230 ;;Total ram usage:        0 bytes
 29231 ;; Hardware stack levels used:    1
 29232 ;; Hardware stack levels required when called:   15
 29233 ;; This function calls:
 29234 ;;		Nothing
 29235 ;; This function is called by:
 29236 ;;		_vfpfcnvrt
 29237 ;; This function uses a reentrant model
 29238 ;;
 29239                           
 29240                           	psect	text101
 29241  01CFBC                     __ptext101:
 29242                           	opt callstack 0
 29243  01CFBC                     _strncmp:
 29244                           	opt callstack 0
 29245                           
 29246                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29247  01CFBC  52E6               	movf	postinc1,f,c
 29248  01CFBE  52E6               	movf	postinc1,f,c
 29249  01CFC0  52E6               	movf	postinc1,f,c
 29250  01CFC2  52E6               	movf	postinc1,f,c
 29251                           
 29252                           ;stkvar	__l @ sp[(-4)+-2]
 29253                           
 29254                           ;incstack = 0
 29255 ;; hardware stack exceeded
 29256  01CFC4  0EFA               	movlw	-6
 29257  01CFC6  006F FF8C  F034    	movff	plusw1,btemp+10
 29258  01CFCC  0EFB               	movlw	-5
 29259  01CFCE  006F FF8C  F035    	movff	plusw1,btemp+11
 29260                           
 29261                           ;stkvar	_l @ sp[(-4)+2]
 29262  01CFD4  0EFF               	movlw	-1
 29263  01CFD6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29264  01CFDC  0EFE               	movlw	-2
 29265  01CFDE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29266                           
 29267                           ;stkvar	__r @ sp[(-4)+-4]
 29268  01CFE4  0EF8               	movlw	-8
 29269  01CFE6  006F FF8C  F034    	movff	plusw1,btemp+10
 29270  01CFEC  0EF9               	movlw	-7
 29271  01CFEE  006F FF8C  F035    	movff	plusw1,btemp+11
 29272                           
 29273                           ;stkvar	_r @ sp[(-4)+0]
 29274  01CFF4  0EFD               	movlw	-3
 29275  01CFF6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29276  01CFFC  0EFC               	movlw	-4
 29277  01CFFE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29278                           
 29279                           ;stkvar	_n @ sp[(-4)+-6]
 29280  01D004  0EF6               	movlw	-10
 29281  01D006  006F FF8C  F02A    	movff	plusw1,btemp
 29282  01D00C  0E01               	movlw	1
 29283  01D00E  5E2A               	subwf	btemp^0,f,c
 29284  01D010  0EF6               	movlw	-10
 29285  01D012  0060  F0AB  FFE3   	movff	btemp,plusw1
 29286  01D018  0EF7               	movlw	-9
 29287  01D01A  006F FF8C  F02A    	movff	plusw1,btemp
 29288  01D020  0E00               	movlw	0
 29289  01D022  5A2A               	subwfb	btemp^0,f,c
 29290  01D024  0EF7               	movlw	-9
 29291  01D026  0060  F0AB  FFE3   	movff	btemp,plusw1
 29292  01D02C  0EF6               	movlw	-10
 29293  01D02E  28E3               	incf	plusw1,w,c
 29294  01D030  E13F               	bnz	l11500
 29295  01D032  0EF7               	movlw	-9
 29296  01D034  28E3               	incf	plusw1,w,c
 29297  01D036  A4D8               	btfss	status,2,c
 29298  01D038  D03B               	goto	l11500
 29299  01D03A  0E00               	movlw	0
 29300  01D03C  6E2A               	movwf	btemp^0,c
 29301  01D03E  0E00               	movlw	0
 29302  01D040  6E2B               	movwf	(btemp+1)^0,c
 29303  01D042  D0C7               	goto	l3810
 29304  01D044                     l11498:
 29305                           
 29306                           ;stkvar	_l @ sp[(-4)+2]
 29307  01D044  0EFE               	movlw	-2
 29308  01D046  50E3               	movf	plusw1,w,c
 29309  01D048  0F01               	addlw	1
 29310  01D04A  6E2A               	movwf	btemp^0,c
 29311  01D04C  0EFE               	movlw	-2
 29312  01D04E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29313  01D054  6A2A               	clrf	btemp^0,c
 29314  01D056  0EFF               	movlw	-1
 29315  01D058  50E3               	movf	plusw1,w,c
 29316  01D05A  202A               	addwfc	btemp^0,w,c
 29317  01D05C  6E2A               	movwf	btemp^0,c
 29318  01D05E  0EFF               	movlw	-1
 29319  01D060  0060  F0AB  FFE3   	movff	btemp,plusw1
 29320                           
 29321                           ;stkvar	_r @ sp[(-4)+0]
 29322  01D066  0EFC               	movlw	-4
 29323  01D068  50E3               	movf	plusw1,w,c
 29324  01D06A  0F01               	addlw	1
 29325  01D06C  6E2A               	movwf	btemp^0,c
 29326  01D06E  0EFC               	movlw	-4
 29327  01D070  0060  F0AB  FFE3   	movff	btemp,plusw1
 29328  01D076  6A2A               	clrf	btemp^0,c
 29329  01D078  0EFD               	movlw	-3
 29330  01D07A  50E3               	movf	plusw1,w,c
 29331  01D07C  202A               	addwfc	btemp^0,w,c
 29332  01D07E  6E2A               	movwf	btemp^0,c
 29333  01D080  0EFD               	movlw	-3
 29334  01D082  0060  F0AB  FFE3   	movff	btemp,plusw1
 29335                           
 29336                           ;stkvar	_n @ sp[(-4)+-6]
 29337  01D088  0EF6               	movlw	-10
 29338  01D08A  006F FF8C  F02A    	movff	plusw1,btemp
 29339  01D090  0E01               	movlw	1
 29340  01D092  5E2A               	subwf	btemp^0,f,c
 29341  01D094  0EF6               	movlw	-10
 29342  01D096  0060  F0AB  FFE3   	movff	btemp,plusw1
 29343  01D09C  0EF7               	movlw	-9
 29344  01D09E  006F FF8C  F02A    	movff	plusw1,btemp
 29345  01D0A4  0E00               	movlw	0
 29346  01D0A6  5A2A               	subwfb	btemp^0,f,c
 29347  01D0A8  0EF7               	movlw	-9
 29348  01D0AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 29349  01D0B0                     l11500:
 29350                           
 29351                           ;stkvar	_l @ sp[(-4)+2]
 29352  01D0B0  0EFE               	movlw	-2
 29353  01D0B2  006F FF8F FFF6     	movff	plusw1,tblptrl
 29354  01D0B8  0EFF               	movlw	-1
 29355  01D0BA  006F FF8F FFF7     	movff	plusw1,tblptrh
 29356  01D0C0  0E00               	movlw	low (__mediumconst shr (0+16))
 29357  01D0C2  6EF8               	movwf	tblptru,c
 29358  01D0C4  0E1F               	movlw	(high __ramtop+-1)
 29359  01D0C6  64F7               	cpfsgt	tblptrh,c
 29360  01D0C8  D003               	bra	u10457
 29361  01D0CA  0008               	tblrd		*
 29362  01D0CC  50F5               	movf	tablat,w,c
 29363  01D0CE  D007               	bra	u10450
 29364  01D0D0                     u10457:
 29365  01D0D0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29366  01D0D6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29367  01D0DC  50EF               	movf	indf0,w,c
 29368  01D0DE                     u10450:
 29369  01D0DE  0900               	iorlw	0
 29370  01D0E0  B4D8               	btfsc	status,2,c
 29371  01D0E2  D04A               	goto	u10490
 29372                           
 29373                           ;stkvar	_r @ sp[(-4)+0]
 29374  01D0E4  50E1               	movf	fsr1l,w,c
 29375  01D0E6  0FFC               	addlw	-4
 29376  01D0E8  6ED9               	movwf	fsr2l,c
 29377  01D0EA  50E2               	movf	fsr1h,w,c
 29378  01D0EC  6EDA               	movwf	fsr2h,c
 29379  01D0EE  0EFF               	movlw	255
 29380  01D0F0  22DA               	addwfc	fsr2h,f,c
 29381  01D0F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 29382  01D0F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 29383  01D0FE                     	if	0	;tblptru may be non-zero
 29384  01D0FE                     	endif
 29385  01D0FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29386  01D0FE  0E00               	movlw	low (__mediumconst shr (0+16))
 29387  01D100  6EF8               	movwf	tblptru,c
 29388  01D102                     	endif
 29389  01D102  0008               	tblrd		*
 29390  01D104  50F5               	movf	tablat,w,c
 29391  01D106  0900               	iorlw	0
 29392  01D108  B4D8               	btfsc	status,2,c
 29393  01D10A  D036               	goto	u10490
 29394                           
 29395                           ;stkvar	_n @ sp[(-4)+-6]
 29396  01D10C  0EF6               	movlw	-10
 29397  01D10E  006F FF8C  F02A    	movff	plusw1,btemp
 29398  01D114  0EF7               	movlw	-9
 29399  01D116  50E3               	movf	plusw1,w,c
 29400  01D118  102A               	iorwf	btemp^0,w,c
 29401  01D11A  B4D8               	btfsc	status,2,c
 29402  01D11C  D02D               	goto	u10490
 29403                           
 29404                           ;stkvar	_r @ sp[(-4)+0]
 29405  01D11E  50E1               	movf	fsr1l,w,c
 29406  01D120  0FFC               	addlw	-4
 29407  01D122  6ED9               	movwf	fsr2l,c
 29408  01D124  50E2               	movf	fsr1h,w,c
 29409  01D126  6EDA               	movwf	fsr2h,c
 29410  01D128  0EFF               	movlw	255
 29411  01D12A  22DA               	addwfc	fsr2h,f,c
 29412  01D12C  006F FF7B FFF6     	movff	postinc2,tblptrl
 29413  01D132  006F FF77 FFF7     	movff	postdec2,tblptrh
 29414  01D138                     	if	0	;tblptru may be non-zero
 29415  01D138                     	endif
 29416  01D138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29417  01D138  0E00               	movlw	low (__mediumconst shr (0+16))
 29418  01D13A  6EF8               	movwf	tblptru,c
 29419  01D13C                     	endif
 29420  01D13C  0008               	tblrd		*
 29421  01D13E  006F FFD4  F035    	movff	tablat,btemp+11
 29422                           
 29423                           ;stkvar	_l @ sp[(-4)+2]
 29424  01D144  0EFE               	movlw	-2
 29425  01D146  006F FF8F FFF6     	movff	plusw1,tblptrl
 29426  01D14C  0EFF               	movlw	-1
 29427  01D14E  006F FF8F FFF7     	movff	plusw1,tblptrh
 29428  01D154  0E00               	movlw	low (__mediumconst shr (0+16))
 29429  01D156  6EF8               	movwf	tblptru,c
 29430  01D158  0E1F               	movlw	(high __ramtop+-1)
 29431  01D15A  64F7               	cpfsgt	tblptrh,c
 29432  01D15C  D003               	bra	u10497
 29433  01D15E  0008               	tblrd		*
 29434  01D160  50F5               	movf	tablat,w,c
 29435  01D162  D007               	bra	u10495
 29436  01D164                     u10497:
 29437  01D164  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29438  01D16A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29439  01D170  50EF               	movf	indf0,w,c
 29440  01D172                     u10495:
 29441  01D172  1835               	xorwf	(btemp+11)^0,w,c
 29442  01D174  B4D8               	btfsc	status,2,c
 29443  01D176  D766               	goto	l11498
 29444  01D178                     u10490:
 29445                           
 29446                           ;stkvar	_l @ sp[(-4)+2]
 29447  01D178  0EFE               	movlw	-2
 29448  01D17A  006F FF8F FFF6     	movff	plusw1,tblptrl
 29449  01D180  0EFF               	movlw	-1
 29450  01D182  006F FF8F FFF7     	movff	plusw1,tblptrh
 29451  01D188  0E00               	movlw	low (__mediumconst shr (0+16))
 29452  01D18A  6EF8               	movwf	tblptru,c
 29453  01D18C  0E1F               	movlw	(high __ramtop+-1)
 29454  01D18E  64F7               	cpfsgt	tblptrh,c
 29455  01D190  D003               	bra	u10507
 29456  01D192  0008               	tblrd		*
 29457  01D194  50F5               	movf	tablat,w,c
 29458  01D196  D007               	bra	u10500
 29459  01D198                     u10507:
 29460  01D198  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29461  01D19E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29462  01D1A4  50EF               	movf	indf0,w,c
 29463  01D1A6                     u10500:
 29464  01D1A6  6E2A               	movwf	btemp^0,c
 29465  01D1A8  6A2B               	clrf	(btemp+1)^0,c
 29466                           
 29467                           ;stkvar	_r @ sp[(-4)+0]
 29468  01D1AA  50E1               	movf	fsr1l,w,c
 29469  01D1AC  0FFC               	addlw	-4
 29470  01D1AE  6ED9               	movwf	fsr2l,c
 29471  01D1B0  50E2               	movf	fsr1h,w,c
 29472  01D1B2  6EDA               	movwf	fsr2h,c
 29473  01D1B4  0EFF               	movlw	255
 29474  01D1B6  22DA               	addwfc	fsr2h,f,c
 29475  01D1B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 29476  01D1BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 29477  01D1C4                     	if	0	;tblptru may be non-zero
 29478  01D1C4                     	endif
 29479  01D1C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29480  01D1C4  0E00               	movlw	low (__mediumconst shr (0+16))
 29481  01D1C6  6EF8               	movwf	tblptru,c
 29482  01D1C8                     	endif
 29483  01D1C8  0008               	tblrd		*
 29484  01D1CA  50F5               	movf	tablat,w,c
 29485  01D1CC  5E2A               	subwf	btemp^0,f,c
 29486  01D1CE  0E00               	movlw	0
 29487  01D1D0  5A2B               	subwfb	(btemp+1)^0,f,c
 29488  01D1D2                     l3810:
 29489                           
 29490                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 29491  01D1D2  0EF6               	movlw	246
 29492  01D1D4  26E1               	addwf	fsr1l,f,c
 29493  01D1D6  0EFF               	movlw	255
 29494  01D1D8  22E2               	addwfc	fsr1h,f,c
 29495  01D1DA  0012               	return		;funcret
 29496  01D1DC                     __end_of_strncmp:
 29497                           	opt callstack 0
 29498                           
 29499 ;; *************** function _stoa *****************
 29500 ;; Defined at:
 29501 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29502 ;; Parameters:    Size  Location     Type
 29503 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29504 ;;		 -> f(6), NULL(0), 
 29505 ;;  s               2  [STACK] PTR unsigned char 
 29506 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_75(9), 
 29507 ;;		 -> STR_74(12), D.lcd(640), D(642), T(176), 
 29508 ;;		 -> STR_3(5), V(181), 
 29509 ;; Auto vars:     Size  Location     Type
 29510 ;;  nuls            7  [STACK] unsigned char [7]
 29511 ;;  l               2  [STACK] int 
 29512 ;;  p               2  [STACK] int 
 29513 ;;  cp              2  [STACK] PTR unsigned char 
 29514 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 29515 ;;		 -> STR_75(9), STR_74(12), D.lcd(640), D(642), 
 29516 ;;		 -> T(176), STR_3(5), V(181), 
 29517 ;;  w               2  [STACK] int 
 29518 ;;  i               2  [STACK] int 
 29519 ;; Return value:  Size  Location     Type
 29520 ;;                  2  [STACK] int 
 29521 ;; Registers used:
 29522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 29523 ;; Tracked objects:
 29524 ;;		On entry : 0/0
 29525 ;;		On exit  : 0/0
 29526 ;;		Unchanged: 0/0
 29527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29532 ;;Total ram usage:        0 bytes
 29533 ;; Hardware stack levels used:    1
 29534 ;; Hardware stack levels required when called:   18
 29535 ;; This function calls:
 29536 ;;		_fputc
 29537 ;;		_strlen
 29538 ;; This function is called by:
 29539 ;;		_vfpfcnvrt
 29540 ;; This function uses a reentrant model
 29541 ;;
 29542                           
 29543                           	psect	text102
 29544  01BA10                     __ptext102:
 29545                           	opt callstack 0
 29546  01BA10                     _stoa:
 29547                           	opt callstack 0
 29548                           
 29549                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29550  01BA10  0E11               	movlw	17
 29551  01BA12  26E1               	addwf	fsr1l,f,c
 29552  01BA14  0E00               	movlw	0
 29553  01BA16  22E2               	addwfc	fsr1h,f,c
 29554                           
 29555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 29556                           
 29557                           ;incstack = 0
 29558 ;; hardware stack exceeded
 29559  01BA18  EE20  F200         	lfsr	2,stoa@F1166
 29560                           
 29561                           ;stkvar	_nuls @ sp[(-17)+0]
 29562  01BA1C  0E07               	movlw	7
 29563  01BA1E  6E2A               	movwf	btemp^0,c
 29564  01BA20  0EEF               	movlw	-17
 29565  01BA22                     us1523999:
 29566  01BA22  006F FF7B FFE3     	movff	postinc2,plusw1
 29567  01BA28  28E8               	incf	wreg,w,c
 29568  01BA2A  2E2A               	decfsz	btemp^0,f,c
 29569  01BA2C  D7FA               	bra	us1523999
 29570                           
 29571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 29572                           ;stkvar	_s @ sp[(-17)+-4]
 29573  01BA2E  0EEB               	movlw	-21
 29574  01BA30  006F FF8C  F034    	movff	plusw1,btemp+10
 29575  01BA36  0EEC               	movlw	-20
 29576  01BA38  006F FF8C  F035    	movff	plusw1,btemp+11
 29577                           
 29578                           ;stkvar	_cp @ sp[(-17)+11]
 29579  01BA3E  0EFB               	movlw	-5
 29580  01BA40  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29581  01BA46  0EFA               	movlw	-6
 29582  01BA48  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29583                           
 29584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 29585                           ;stkvar	_cp @ sp[(-17)+11]
 29586  01BA4E  0EFA               	movlw	-6
 29587  01BA50  006F FF8C  F02A    	movff	plusw1,btemp
 29588  01BA56  0EFB               	movlw	-5
 29589  01BA58  50E3               	movf	plusw1,w,c
 29590  01BA5A  102A               	iorwf	btemp^0,w,c
 29591  01BA5C  A4D8               	btfss	status,2,c
 29592  01BA5E  D00E               	goto	l15936
 29593                           
 29594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 29595                           ;stkvar	_nuls @ sp[(-17)+0]
 29596  01BA60  0EEF               	movlw	239
 29597  01BA62  24E1               	addwf	fsr1l,w,c
 29598  01BA64  6E34               	movwf	(btemp+10)^0,c
 29599  01BA66  0EFF               	movlw	255
 29600  01BA68  20E2               	addwfc	fsr1h,w,c
 29601  01BA6A  6E35               	movwf	(btemp+11)^0,c
 29602                           
 29603                           ;stkvar	_cp @ sp[(-17)+11]
 29604  01BA6C  0EFB               	movlw	-5
 29605  01BA6E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29606  01BA74  0EFA               	movlw	-6
 29607  01BA76  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29608  01BA7C                     l15936:
 29609                           
 29610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 29611                           ;stkvar	_cp @ sp[(-17)+11]
 29612  01BA7C  0EFA               	movlw	-6
 29613  01BA7E  006F FF8F FFE6     	movff	plusw1,postinc1
 29614  01BA84  006F FF8F FFE6     	movff	plusw1,postinc1
 29615  01BA8A  ECFD  F005         	call	_strlen	;wreg free
 29616                           
 29617                           ;stkvar	_l @ sp[(-17)+7]
 29618  01BA8E  0EF6               	movlw	-10
 29619  01BA90  0060  F0AB  FFE3   	movff	btemp,plusw1
 29620  01BA96  0EF7               	movlw	-9
 29621  01BA98  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29622                           
 29623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 29624                           ;stkvar	_p @ sp[(-17)+9]
 29625  01BA9E  0EF8               	movlw	-8
 29626  01BAA0  0060  F133  FFE3   	movff	_prec,plusw1
 29627  01BAA6  0EF9               	movlw	-7
 29628  01BAA8  0060  F137  FFE3   	movff	_prec+1,plusw1
 29629                           
 29630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 29631                           ;stkvar	_p @ sp[(-17)+9]
 29632  01BAAE  0EF9               	movlw	-7
 29633  01BAB0  BEE3               	btfsc	plusw1,7,c
 29634  01BAB2  D023               	goto	l2605
 29635                           
 29636                           ;stkvar	_l @ sp[(-17)+7]
 29637                           ;stkvar	_p @ sp[(-17)+9]
 29638  01BAB4  50E1               	movf	fsr1l,w,c
 29639  01BAB6  0FF8               	addlw	-8
 29640  01BAB8  6ED9               	movwf	fsr2l,c
 29641  01BABA  50E2               	movf	fsr1h,w,c
 29642  01BABC  6EDA               	movwf	fsr2h,c
 29643  01BABE  0EFF               	movlw	255
 29644  01BAC0  22DA               	addwfc	fsr2h,f,c
 29645  01BAC2  0EF6               	movlw	-10
 29646  01BAC4  50E3               	movf	plusw1,w,c
 29647  01BAC6  5CDE               	subwf	postinc2,w,c
 29648  01BAC8  50DE               	movf	postinc2,w,c
 29649  01BACA  0A80               	xorlw	128
 29650  01BACC  6E2A               	movwf	btemp^0,c
 29651  01BACE  0EF7               	movlw	-9
 29652  01BAD0  50E3               	movf	plusw1,w,c
 29653  01BAD2  0A80               	xorlw	128
 29654  01BAD4  582A               	subwfb	btemp^0,w,c
 29655  01BAD6  B0D8               	btfsc	status,0,c
 29656  01BAD8  D010               	goto	l2605
 29657                           
 29658                           ;stkvar	_p @ sp[(-17)+9]
 29659                           ;stkvar	_l @ sp[(-17)+7]
 29660  01BADA  0EF8               	movlw	-8
 29661  01BADC  006F FF8C  F02A    	movff	plusw1,btemp
 29662  01BAE2  0EF6               	movlw	-10
 29663  01BAE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29664  01BAEA  0EF9               	movlw	-7
 29665  01BAEC  006F FF8C  F02A    	movff	plusw1,btemp
 29666  01BAF2  0EF7               	movlw	-9
 29667  01BAF4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29668  01BAFA                     l2605:
 29669                           
 29670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 29671                           ;stkvar	_l @ sp[(-17)+7]
 29672                           ;stkvar	_p @ sp[(-17)+9]
 29673  01BAFA  0EF6               	movlw	-10
 29674  01BAFC  006F FF8C  F02A    	movff	plusw1,btemp
 29675  01BB02  0EF8               	movlw	-8
 29676  01BB04  0060  F0AB  FFE3   	movff	btemp,plusw1
 29677  01BB0A  0EF7               	movlw	-9
 29678  01BB0C  006F FF8C  F02A    	movff	plusw1,btemp
 29679  01BB12  0EF9               	movlw	-7
 29680  01BB14  0060  F0AB  FFE3   	movff	btemp,plusw1
 29681                           
 29682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 29683                           ;stkvar	_w @ sp[(-17)+13]
 29684  01BB1A  0EFC               	movlw	-4
 29685  01BB1C  0060  F12B  FFE3   	movff	_width,plusw1
 29686  01BB22  0EFD               	movlw	-3
 29687  01BB24  0060  F12F  FFE3   	movff	_width+1,plusw1
 29688                           
 29689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 29690  01BB2A  A04E               	btfss	_flags^0,0,c
 29691  01BB2C  D01F               	goto	l15956
 29692  01BB2E  D031               	goto	u15280
 29693  01BB30                     l15952:
 29694                           
 29695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 29696                           ;stkvar	_fp @ sp[(-17)+-2]
 29697  01BB30  0EED               	movlw	-19
 29698  01BB32  006F FF8F FFE6     	movff	plusw1,postinc1
 29699  01BB38  006F FF8F FFE6     	movff	plusw1,postinc1
 29700  01BB3E  0E20               	movlw	32
 29701  01BB40  6EE6               	movwf	postinc1,c
 29702  01BB42  0E00               	movlw	0
 29703  01BB44  6EE6               	movwf	postinc1,c
 29704  01BB46  EC8E  F0FA         	call	_fputc	;wreg free
 29705                           
 29706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 29707                           ;stkvar	_l @ sp[(-17)+7]
 29708  01BB4A  0EF6               	movlw	-10
 29709  01BB4C  50E3               	movf	plusw1,w,c
 29710  01BB4E  0F01               	addlw	1
 29711  01BB50  6E2A               	movwf	btemp^0,c
 29712  01BB52  0EF6               	movlw	-10
 29713  01BB54  0060  F0AB  FFE3   	movff	btemp,plusw1
 29714  01BB5A  6A2A               	clrf	btemp^0,c
 29715  01BB5C  0EF7               	movlw	-9
 29716  01BB5E  50E3               	movf	plusw1,w,c
 29717  01BB60  202A               	addwfc	btemp^0,w,c
 29718  01BB62  6E2A               	movwf	btemp^0,c
 29719  01BB64  0EF7               	movlw	-9
 29720  01BB66  0060  F0AB  FFE3   	movff	btemp,plusw1
 29721  01BB6C                     l15956:
 29722                           
 29723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 29724                           ;stkvar	_w @ sp[(-17)+13]
 29725                           ;stkvar	_l @ sp[(-17)+7]
 29726  01BB6C  50E1               	movf	fsr1l,w,c
 29727  01BB6E  0FF6               	addlw	-10
 29728  01BB70  6ED9               	movwf	fsr2l,c
 29729  01BB72  50E2               	movf	fsr1h,w,c
 29730  01BB74  6EDA               	movwf	fsr2h,c
 29731  01BB76  0EFF               	movlw	255
 29732  01BB78  22DA               	addwfc	fsr2h,f,c
 29733  01BB7A  0EFC               	movlw	-4
 29734  01BB7C  50E3               	movf	plusw1,w,c
 29735  01BB7E  5CDE               	subwf	postinc2,w,c
 29736  01BB80  50DE               	movf	postinc2,w,c
 29737  01BB82  0A80               	xorlw	128
 29738  01BB84  6E2A               	movwf	btemp^0,c
 29739  01BB86  0EFD               	movlw	-3
 29740  01BB88  50E3               	movf	plusw1,w,c
 29741  01BB8A  0A80               	xorlw	128
 29742  01BB8C  582A               	subwfb	btemp^0,w,c
 29743  01BB8E  A0D8               	btfss	status,0,c
 29744  01BB90  D7CF               	goto	l15952
 29745  01BB92                     u15280:
 29746                           
 29747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 29748                           ;stkvar	_i @ sp[(-17)+15]
 29749  01BB92  0EFE               	movlw	-2
 29750  01BB94  6AE3               	clrf	plusw1,c
 29751  01BB96  0EFF               	movlw	-1
 29752  01BB98  6AE3               	clrf	plusw1,c
 29753                           
 29754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29755  01BB9A  D045               	goto	l15966
 29756  01BB9C                     l15960:
 29757                           
 29758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 29759                           ;stkvar	_fp @ sp[(-17)+-2]
 29760  01BB9C  0EED               	movlw	-19
 29761  01BB9E  006F FF8F FFE6     	movff	plusw1,postinc1
 29762  01BBA4  006F FF8F FFE6     	movff	plusw1,postinc1
 29763                           
 29764                           ;stkvar	_cp @ sp[(-19)+11]
 29765  01BBAA  0EF8               	movlw	-8
 29766  01BBAC  006F FF8F FFF6     	movff	plusw1,tblptrl
 29767  01BBB2  0EF9               	movlw	-7
 29768  01BBB4  006F FF8F FFF7     	movff	plusw1,tblptrh
 29769  01BBBA  0E00               	movlw	low (__mediumconst shr (0+16))
 29770  01BBBC  6EF8               	movwf	tblptru,c
 29771  01BBBE  0E1F               	movlw	(high __ramtop+-1)
 29772  01BBC0  64F7               	cpfsgt	tblptrh,c
 29773  01BBC2  D003               	bra	u15297
 29774  01BBC4  0008               	tblrd		*
 29775  01BBC6  50F5               	movf	tablat,w,c
 29776  01BBC8  D007               	bra	u15290
 29777  01BBCA                     u15297:
 29778  01BBCA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29779  01BBD0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29780  01BBD6  50EF               	movf	indf0,w,c
 29781  01BBD8                     u15290:
 29782  01BBD8  6EE6               	movwf	postinc1,c
 29783  01BBDA  0E00               	movlw	0
 29784  01BBDC  6EE6               	movwf	postinc1,c
 29785  01BBDE  EC8E  F0FA         	call	_fputc	;wreg free
 29786                           
 29787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 29788                           ;stkvar	_cp @ sp[(-17)+11]
 29789  01BBE2  0EFA               	movlw	-6
 29790  01BBE4  50E3               	movf	plusw1,w,c
 29791  01BBE6  0F01               	addlw	1
 29792  01BBE8  6E2A               	movwf	btemp^0,c
 29793  01BBEA  0EFA               	movlw	-6
 29794  01BBEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 29795  01BBF2  6A2A               	clrf	btemp^0,c
 29796  01BBF4  0EFB               	movlw	-5
 29797  01BBF6  50E3               	movf	plusw1,w,c
 29798  01BBF8  202A               	addwfc	btemp^0,w,c
 29799  01BBFA  6E2A               	movwf	btemp^0,c
 29800  01BBFC  0EFB               	movlw	-5
 29801  01BBFE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29802                           
 29803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 29804                           ;stkvar	_i @ sp[(-17)+15]
 29805  01BC04  0EFE               	movlw	-2
 29806  01BC06  50E3               	movf	plusw1,w,c
 29807  01BC08  0F01               	addlw	1
 29808  01BC0A  6E2A               	movwf	btemp^0,c
 29809  01BC0C  0EFE               	movlw	-2
 29810  01BC0E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29811  01BC14  6A2A               	clrf	btemp^0,c
 29812  01BC16  0EFF               	movlw	-1
 29813  01BC18  50E3               	movf	plusw1,w,c
 29814  01BC1A  202A               	addwfc	btemp^0,w,c
 29815  01BC1C  6E2A               	movwf	btemp^0,c
 29816  01BC1E  0EFF               	movlw	-1
 29817  01BC20  0060  F0AB  FFE3   	movff	btemp,plusw1
 29818  01BC26                     l15966:
 29819                           
 29820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29821                           ;stkvar	_p @ sp[(-17)+9]
 29822                           ;stkvar	_i @ sp[(-17)+15]
 29823  01BC26  50E1               	movf	fsr1l,w,c
 29824  01BC28  0FFE               	addlw	-2
 29825  01BC2A  6ED9               	movwf	fsr2l,c
 29826  01BC2C  50E2               	movf	fsr1h,w,c
 29827  01BC2E  6EDA               	movwf	fsr2h,c
 29828  01BC30  0EFF               	movlw	255
 29829  01BC32  22DA               	addwfc	fsr2h,f,c
 29830  01BC34  0EF8               	movlw	-8
 29831  01BC36  50E3               	movf	plusw1,w,c
 29832  01BC38  5CDE               	subwf	postinc2,w,c
 29833  01BC3A  50DE               	movf	postinc2,w,c
 29834  01BC3C  0A80               	xorlw	128
 29835  01BC3E  6E2A               	movwf	btemp^0,c
 29836  01BC40  0EF9               	movlw	-7
 29837  01BC42  50E3               	movf	plusw1,w,c
 29838  01BC44  0A80               	xorlw	128
 29839  01BC46  582A               	subwfb	btemp^0,w,c
 29840  01BC48  A0D8               	btfss	status,0,c
 29841  01BC4A  D7A8               	goto	l15960
 29842                           
 29843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 29844  01BC4C  B04E               	btfsc	_flags^0,0,c
 29845  01BC4E  D01F               	goto	l15974
 29846  01BC50  D031               	goto	u15320
 29847  01BC52                     l15970:
 29848                           
 29849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 29850                           ;stkvar	_fp @ sp[(-17)+-2]
 29851  01BC52  0EED               	movlw	-19
 29852  01BC54  006F FF8F FFE6     	movff	plusw1,postinc1
 29853  01BC5A  006F FF8F FFE6     	movff	plusw1,postinc1
 29854  01BC60  0E20               	movlw	32
 29855  01BC62  6EE6               	movwf	postinc1,c
 29856  01BC64  0E00               	movlw	0
 29857  01BC66  6EE6               	movwf	postinc1,c
 29858  01BC68  EC8E  F0FA         	call	_fputc	;wreg free
 29859                           
 29860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 29861                           ;stkvar	_l @ sp[(-17)+7]
 29862  01BC6C  0EF6               	movlw	-10
 29863  01BC6E  50E3               	movf	plusw1,w,c
 29864  01BC70  0F01               	addlw	1
 29865  01BC72  6E2A               	movwf	btemp^0,c
 29866  01BC74  0EF6               	movlw	-10
 29867  01BC76  0060  F0AB  FFE3   	movff	btemp,plusw1
 29868  01BC7C  6A2A               	clrf	btemp^0,c
 29869  01BC7E  0EF7               	movlw	-9
 29870  01BC80  50E3               	movf	plusw1,w,c
 29871  01BC82  202A               	addwfc	btemp^0,w,c
 29872  01BC84  6E2A               	movwf	btemp^0,c
 29873  01BC86  0EF7               	movlw	-9
 29874  01BC88  0060  F0AB  FFE3   	movff	btemp,plusw1
 29875  01BC8E                     l15974:
 29876                           
 29877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 29878                           ;stkvar	_w @ sp[(-17)+13]
 29879                           ;stkvar	_l @ sp[(-17)+7]
 29880  01BC8E  50E1               	movf	fsr1l,w,c
 29881  01BC90  0FF6               	addlw	-10
 29882  01BC92  6ED9               	movwf	fsr2l,c
 29883  01BC94  50E2               	movf	fsr1h,w,c
 29884  01BC96  6EDA               	movwf	fsr2h,c
 29885  01BC98  0EFF               	movlw	255
 29886  01BC9A  22DA               	addwfc	fsr2h,f,c
 29887  01BC9C  0EFC               	movlw	-4
 29888  01BC9E  50E3               	movf	plusw1,w,c
 29889  01BCA0  5CDE               	subwf	postinc2,w,c
 29890  01BCA2  50DE               	movf	postinc2,w,c
 29891  01BCA4  0A80               	xorlw	128
 29892  01BCA6  6E2A               	movwf	btemp^0,c
 29893  01BCA8  0EFD               	movlw	-3
 29894  01BCAA  50E3               	movf	plusw1,w,c
 29895  01BCAC  0A80               	xorlw	128
 29896  01BCAE  582A               	subwfb	btemp^0,w,c
 29897  01BCB0  A0D8               	btfss	status,0,c
 29898  01BCB2  D7CF               	goto	l15970
 29899  01BCB4                     u15320:
 29900                           
 29901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 29902                           ;stkvar	_l @ sp[(-17)+7]
 29903  01BCB4  0EF6               	movlw	-10
 29904  01BCB6  006F FF8C  F02A    	movff	plusw1,btemp
 29905  01BCBC  0EF7               	movlw	-9
 29906  01BCBE  006F FF8C  F02B    	movff	plusw1,btemp+1
 29907                           
 29908                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 29909  01BCC4  0EEB               	movlw	235
 29910  01BCC6  26E1               	addwf	fsr1l,f,c
 29911  01BCC8  0EFF               	movlw	255
 29912  01BCCA  22E2               	addwfc	fsr1h,f,c
 29913  01BCCC  0012               	return		;funcret
 29914  01BCCE                     __end_of_stoa:
 29915                           	opt callstack 0
 29916                           
 29917 ;; *************** function _efgtoa *****************
 29918 ;; Defined at:
 29919 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29920 ;; Parameters:    Size  Location     Type
 29921 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29922 ;;		 -> f(6), NULL(0), 
 29923 ;;  f               4  [STACK] PTR struct _IO_FILE
 29924 ;;  c               1  [STACK] unsigned char 
 29925 ;; Auto vars:     Size  Location     Type
 29926 ;;  u               4  [STACK] unsigned char 
 29927 ;;  g               4  [STACK] unsigned char 
 29928 ;;  l               4  [STACK] unsigned char 
 29929 ;;  h               4  [STACK] unsigned char 
 29930 ;;  ou              4  [STACK] unsigned char 
 29931 ;;  n               2  [STACK] int 
 29932 ;;  e               2  [STACK] int 
 29933 ;;  i               2  [STACK] int 
 29934 ;;  w               2  [STACK] int 
 29935 ;;  p               2  [STACK] int 
 29936 ;;  sign            2  [STACK] int 
 29937 ;;  d               2  [STACK] int 
 29938 ;;  ne              2  [STACK] int 
 29939 ;;  m               2  [STACK] int 
 29940 ;;  pp              2  [STACK] int 
 29941 ;;  t               2  [STACK] int 
 29942 ;;  mode            1  [STACK] unsigned char 
 29943 ;;  nmode           1  [STACK] unsigned char 
 29944 ;; Return value:  Size  Location     Type
 29945 ;;                  2  [STACK] int 
 29946 ;; Registers used:
 29947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29948 ;; Tracked objects:
 29949 ;;		On entry : 0/0
 29950 ;;		On exit  : 0/0
 29951 ;;		Unchanged: 0/0
 29952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29957 ;;Total ram usage:        0 bytes
 29958 ;; Hardware stack levels used:    1
 29959 ;; Hardware stack levels required when called:   20
 29960 ;; This function calls:
 29961 ;;		___awdiv
 29962 ;;		___awmod
 29963 ;;		___fladd
 29964 ;;		___fldiv
 29965 ;;		___fleq
 29966 ;;		___flge
 29967 ;;		___flmul
 29968 ;;		___flneg
 29969 ;;		___flsub
 29970 ;;		___fltol
 29971 ;;		___fpclassifyf
 29972 ;;		_floorf
 29973 ;;		_isupper
 29974 ;;		_pad
 29975 ;;		_strcpy
 29976 ;;		_tolower
 29977 ;; This function is called by:
 29978 ;;		_vfpfcnvrt
 29979 ;; This function uses a reentrant model
 29980 ;;
 29981                           
 29982                           	psect	text103
 29983  011676                     __ptext103:
 29984                           	opt callstack 0
 29985  011676                     _efgtoa:
 29986                           	opt callstack 0
 29987                           
 29988                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29989  011676  0E38               	movlw	56
 29990  011678  26E1               	addwf	fsr1l,f,c
 29991  01167A  0E00               	movlw	0
 29992  01167C  22E2               	addwfc	fsr1h,f,c
 29993                           
 29994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 29995                           ;stkvar	_sign @ sp[(-56)+42]
 29996                           
 29997                           ;incstack = 0
 29998 ;; hardware stack exceeded
 29999  01167E  0EF2               	movlw	-14
 30000  011680  6AE3               	clrf	plusw1,c
 30001  011682  0EF3               	movlw	-13
 30002  011684  6AE3               	clrf	plusw1,c
 30003                           
 30004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 30005                           ;stkvar	_f @ sp[(-56)+-6]
 30006  011686  0EC2               	movlw	-62
 30007  011688  006F FF8C  F032    	movff	plusw1,btemp+8
 30008  01168E  0EC3               	movlw	-61
 30009  011690  006F FF8C  F033    	movff	plusw1,btemp+9
 30010  011696  0EC4               	movlw	-60
 30011  011698  006F FF8C  F034    	movff	plusw1,btemp+10
 30012  01169E  0EC5               	movlw	-59
 30013  0116A0  006F FF8C  F035    	movff	plusw1,btemp+11
 30014                           
 30015                           ;stkvar	_g @ sp[(-56)+16]
 30016  0116A6  0ED8               	movlw	-40
 30017  0116A8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30018  0116AE  0ED9               	movlw	-39
 30019  0116B0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30020  0116B6  0EDA               	movlw	-38
 30021  0116B8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30022  0116BE  0EDB               	movlw	-37
 30023  0116C0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30024                           
 30025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 30026                           ;stkvar	_g @ sp[(-56)+16]
 30027  0116C6  0EDB               	movlw	-37
 30028  0116C8  AEE3               	btfss	plusw1,7,c
 30029  0116CA  D02B               	goto	l15634
 30030                           
 30031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 30032  0116CC  0E01               	movlw	1
 30033  0116CE  6E34               	movwf	(btemp+10)^0,c
 30034  0116D0  0E00               	movlw	0
 30035  0116D2  6E35               	movwf	(btemp+11)^0,c
 30036                           
 30037                           ;stkvar	_sign @ sp[(-56)+42]
 30038  0116D4  0EF2               	movlw	-14
 30039  0116D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30040  0116DC  0EF3               	movlw	-13
 30041  0116DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30042                           
 30043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 30044                           ;stkvar	_g @ sp[(-56)+16]
 30045  0116E4  0ED8               	movlw	-40
 30046  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 30047  0116EC  006F FF8F FFE6     	movff	plusw1,postinc1
 30048  0116F2  006F FF8F FFE6     	movff	plusw1,postinc1
 30049  0116F8  006F FF8F FFE6     	movff	plusw1,postinc1
 30050  0116FE  ECFC  F00D         	call	___flneg	;wreg free
 30051                           
 30052                           ;stkvar	_g @ sp[(-56)+16]
 30053  011702  0ED8               	movlw	-40
 30054  011704  0060  F0AB  FFE3   	movff	btemp,plusw1
 30055  01170A  0ED9               	movlw	-39
 30056  01170C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30057  011712  0EDA               	movlw	-38
 30058  011714  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30059  01171A  0EDB               	movlw	-37
 30060  01171C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30061  011722                     l15634:
 30062                           
 30063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 30064                           ;stkvar	_n @ sp[(-56)+32]
 30065  011722  0EE8               	movlw	-24
 30066  011724  6AE3               	clrf	plusw1,c
 30067  011726  0EE9               	movlw	-23
 30068  011728  6AE3               	clrf	plusw1,c
 30069                           
 30070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 30071                           ;stkvar	_w @ sp[(-56)+38]
 30072  01172A  0EEE               	movlw	-18
 30073  01172C  0060  F12B  FFE3   	movff	_width,plusw1
 30074  011732  0EEF               	movlw	-17
 30075  011734  0060  F12F  FFE3   	movff	_width+1,plusw1
 30076                           
 30077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 30078                           ;stkvar	_sign @ sp[(-56)+42]
 30079  01173A  0EF2               	movlw	-14
 30080  01173C  006F FF8C  F02A    	movff	plusw1,btemp
 30081  011742  0EF3               	movlw	-13
 30082  011744  50E3               	movf	plusw1,w,c
 30083  011746  102A               	iorwf	btemp^0,w,c
 30084  011748  A4D8               	btfss	status,2,c
 30085  01174A  D002               	goto	u14730
 30086  01174C  A44E               	btfss	_flags^0,2,c
 30087  01174E  D036               	goto	l15654
 30088  011750                     u14730:
 30089                           
 30090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 30091                           ;stkvar	_sign @ sp[(-56)+42]
 30092  011750  0EF2               	movlw	-14
 30093  011752  006F FF8C  F02A    	movff	plusw1,btemp
 30094  011758  0EF3               	movlw	-13
 30095  01175A  50E3               	movf	plusw1,w,c
 30096  01175C  102A               	iorwf	btemp^0,w,c
 30097  01175E  A4D8               	btfss	status,2,c
 30098  011760  D002               	goto	l15646
 30099  011762  0E2B               	movlw	43
 30100  011764  D001               	goto	L31
 30101  011766                     l15646:
 30102  011766  0E2D               	movlw	45
 30103  011768                     L31:
 30104  011768  6E34               	movwf	(btemp+10)^0,c
 30105  01176A  0E00               	movlw	0
 30106  01176C  6E35               	movwf	(btemp+11)^0,c
 30107                           
 30108                           ;stkvar	_efgtoa$6612 @ sp[(-56)+10]
 30109  01176E  0ED2               	movlw	-46
 30110  011770  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30111  011776  0ED3               	movlw	-45
 30112  011778  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30113                           
 30114                           ;stkvar	_efgtoa$6612 @ sp[(-56)+10]
 30115  01177E  0ED2               	movlw	-46
 30116  011780  006F FF8C  F354    	movff	plusw1,_dbuf
 30117                           
 30118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 30119                           ;stkvar	_n @ sp[(-56)+32]
 30120  011786  0EE8               	movlw	-24
 30121  011788  50E3               	movf	plusw1,w,c
 30122  01178A  0F01               	addlw	1
 30123  01178C  6E2A               	movwf	btemp^0,c
 30124  01178E  0EE8               	movlw	-24
 30125  011790  0060  F0AB  FFE3   	movff	btemp,plusw1
 30126  011796  6A2A               	clrf	btemp^0,c
 30127  011798  0EE9               	movlw	-23
 30128  01179A  50E3               	movf	plusw1,w,c
 30129  01179C  202A               	addwfc	btemp^0,w,c
 30130  01179E  6E2A               	movwf	btemp^0,c
 30131  0117A0  0EE9               	movlw	-23
 30132  0117A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30133                           
 30134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 30135                           ;stkvar	_w @ sp[(-56)+38]
 30136  0117A8  50E1               	movf	fsr1l,w,c
 30137  0117AA  0FEE               	addlw	-18
 30138  0117AC  6ED9               	movwf	fsr2l,c
 30139  0117AE  50E2               	movf	fsr1h,w,c
 30140  0117B0  6EDA               	movwf	fsr2h,c
 30141  0117B2  0EFF               	movlw	255
 30142  0117B4  22DA               	addwfc	fsr2h,f,c
 30143  0117B6  06DE               	decf	postinc2,f,c
 30144  0117B8  0E00               	movlw	0
 30145  0117BA  5ADD               	subwfb	postdec2,f,c
 30146  0117BC                     l15654:
 30147                           
 30148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30149                           ;stkvar	_g @ sp[(-56)+16]
 30150  0117BC  0ED8               	movlw	-40
 30151  0117BE  006F FF8F FFE6     	movff	plusw1,postinc1
 30152  0117C4  006F FF8F FFE6     	movff	plusw1,postinc1
 30153  0117CA  006F FF8F FFE6     	movff	plusw1,postinc1
 30154  0117D0  006F FF8F FFE6     	movff	plusw1,postinc1
 30155  0117D6  EC9B  F0EE         	call	___fpclassifyf	;wreg free
 30156  0117DA  042A               	decf	btemp^0,w,c
 30157  0117DC  102B               	iorwf	(btemp+1)^0,w,c
 30158  0117DE  A4D8               	btfss	status,2,c
 30159  0117E0  D076               	goto	l15672
 30160  0117E2  0EBF               	movlw	191
 30161  0117E4  6E34               	movwf	(btemp+10)^0,c
 30162  0117E6  0EFF               	movlw	255
 30163  0117E8  6E35               	movwf	(btemp+11)^0,c
 30164                           
 30165                           ;stkvar	_c @ sp[(-56)+-7]
 30166  0117EA  0EC1               	movlw	-63
 30167  0117EC  50E3               	movf	plusw1,w,c
 30168  0117EE  6E32               	movwf	(btemp+8)^0,c
 30169  0117F0  6A33               	clrf	(btemp+9)^0,c
 30170  0117F2  5034               	movf	(btemp+10)^0,w,c
 30171  0117F4  2632               	addwf	(btemp+8)^0,f,c
 30172  0117F6  5035               	movf	(btemp+11)^0,w,c
 30173  0117F8  2233               	addwfc	(btemp+9)^0,f,c
 30174  0117FA  5033               	movf	(btemp+9)^0,w,c
 30175  0117FC  E106               	bnz	u14760
 30176  0117FE  0E1A               	movlw	26
 30177  011800  5C32               	subwf	(btemp+8)^0,w,c
 30178  011802  B0D8               	btfsc	status,0,c
 30179  011804  D002               	goto	u14760
 30180  011806  0E01               	movlw	1
 30181  011808  D001               	goto	u14770
 30182  01180A                     u14760:
 30183  01180A  0E00               	movlw	0
 30184  01180C                     u14770:
 30185  01180C  6E34               	movwf	(btemp+10)^0,c
 30186  01180E  6A35               	clrf	(btemp+11)^0,c
 30187                           
 30188                           ;stkvar	_efgtoa$6613 @ sp[(-56)+8]
 30189  011810  0ED0               	movlw	-48
 30190  011812  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30191  011818  0ED1               	movlw	-47
 30192  01181A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30193                           
 30194                           ;stkvar	_efgtoa$6613 @ sp[(-56)+8]
 30195  011820  0ED0               	movlw	-48
 30196  011822  006F FF8C  F02A    	movff	plusw1,btemp
 30197  011828  0ED1               	movlw	-47
 30198  01182A  50E3               	movf	plusw1,w,c
 30199  01182C  102A               	iorwf	btemp^0,w,c
 30200  01182E  B4D8               	btfsc	status,2,c
 30201  011830  D017               	goto	l15664
 30202                           
 30203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 30204  011832  0EDA               	movlw	low STR_95
 30205  011834  6EE6               	movwf	postinc1,c
 30206  011836  0EFF               	movlw	high STR_95
 30207  011838  6EE6               	movwf	postinc1,c
 30208                           
 30209                           ;stkvar	_n @ sp[(-58)+32]
 30210  01183A  0E54               	movlw	low _dbuf
 30211  01183C  6E34               	movwf	(btemp+10)^0,c
 30212  01183E  0E03               	movlw	high _dbuf
 30213  011840  6E35               	movwf	(btemp+11)^0,c
 30214  011842  0EE6               	movlw	-26
 30215  011844  50E3               	movf	plusw1,w,c
 30216  011846  2634               	addwf	(btemp+10)^0,f,c
 30217  011848  0EE7               	movlw	-25
 30218  01184A  50E3               	movf	plusw1,w,c
 30219  01184C  2235               	addwfc	(btemp+11)^0,f,c
 30220  01184E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30221  011854  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30222  01185A  ECB1  F001         	call	_strcpy	;wreg free
 30223                           
 30224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 30225  01185E  D016               	goto	l15666
 30226  011860                     l15664:
 30227                           
 30228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 30229  011860  0EE2               	movlw	low STR_96
 30230  011862  6EE6               	movwf	postinc1,c
 30231  011864  0EFF               	movlw	high STR_96
 30232  011866  6EE6               	movwf	postinc1,c
 30233                           
 30234                           ;stkvar	_n @ sp[(-58)+32]
 30235  011868  0E54               	movlw	low _dbuf
 30236  01186A  6E34               	movwf	(btemp+10)^0,c
 30237  01186C  0E03               	movlw	high _dbuf
 30238  01186E  6E35               	movwf	(btemp+11)^0,c
 30239  011870  0EE6               	movlw	-26
 30240  011872  50E3               	movf	plusw1,w,c
 30241  011874  2634               	addwf	(btemp+10)^0,f,c
 30242  011876  0EE7               	movlw	-25
 30243  011878  50E3               	movf	plusw1,w,c
 30244  01187A  2235               	addwfc	(btemp+11)^0,f,c
 30245  01187C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30246  011882  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30247  011888  ECB1  F001         	call	_strcpy	;wreg free
 30248  01188C                     l15666:
 30249                           
 30250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 30251                           ;stkvar	_w @ sp[(-56)+38]
 30252  01188C  50E1               	movf	fsr1l,w,c
 30253  01188E  0FEE               	addlw	-18
 30254  011890  6ED9               	movwf	fsr2l,c
 30255  011892  50E2               	movf	fsr1h,w,c
 30256  011894  6EDA               	movwf	fsr2h,c
 30257  011896  0EFF               	movlw	255
 30258  011898  22DA               	addwfc	fsr2h,f,c
 30259  01189A  0EFD               	movlw	253
 30260  01189C  26DE               	addwf	postinc2,f,c
 30261  01189E  0EFF               	movlw	255
 30262  0118A0  22DD               	addwfc	postdec2,f,c
 30263  0118A2                     l15668:
 30264                           
 30265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 30266                           ;stkvar	_w @ sp[(-56)+38]
 30267  0118A2  0EEE               	movlw	-18
 30268  0118A4  006F FF8F FFE6     	movff	plusw1,postinc1
 30269  0118AA  006F FF8F FFE6     	movff	plusw1,postinc1
 30270  0118B0  0E54               	movlw	low _dbuf
 30271  0118B2  6EE6               	movwf	postinc1,c
 30272  0118B4  0E03               	movlw	high _dbuf
 30273  0118B6  6EE6               	movwf	postinc1,c
 30274                           
 30275                           ;stkvar	_fp @ sp[(-60)+-2]
 30276  0118B8  0EC2               	movlw	-62
 30277  0118BA  006F FF8F FFE6     	movff	plusw1,postinc1
 30278  0118C0  006F FF8F FFE6     	movff	plusw1,postinc1
 30279  0118C6  ECC5  F0FC         	call	_pad	;wreg free
 30280  0118CA  EF58  F094         	goto	l2523
 30281  0118CE                     l15672:
 30282                           
 30283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30284                           ;stkvar	_g @ sp[(-56)+16]
 30285  0118CE  0ED8               	movlw	-40
 30286  0118D0  006F FF8F FFE6     	movff	plusw1,postinc1
 30287  0118D6  006F FF8F FFE6     	movff	plusw1,postinc1
 30288  0118DC  006F FF8F FFE6     	movff	plusw1,postinc1
 30289  0118E2  006F FF8F FFE6     	movff	plusw1,postinc1
 30290  0118E8  EC9B  F0EE         	call	___fpclassifyf	;wreg free
 30291  0118EC  502A               	movf	btemp^0,w,c
 30292  0118EE  102B               	iorwf	(btemp+1)^0,w,c
 30293  0118F0  A4D8               	btfss	status,2,c
 30294  0118F2  D056               	goto	l15690
 30295  0118F4  0EBF               	movlw	191
 30296  0118F6  6E34               	movwf	(btemp+10)^0,c
 30297  0118F8  0EFF               	movlw	255
 30298  0118FA  6E35               	movwf	(btemp+11)^0,c
 30299                           
 30300                           ;stkvar	_c @ sp[(-56)+-7]
 30301  0118FC  0EC1               	movlw	-63
 30302  0118FE  50E3               	movf	plusw1,w,c
 30303  011900  6E32               	movwf	(btemp+8)^0,c
 30304  011902  6A33               	clrf	(btemp+9)^0,c
 30305  011904  5034               	movf	(btemp+10)^0,w,c
 30306  011906  2632               	addwf	(btemp+8)^0,f,c
 30307  011908  5035               	movf	(btemp+11)^0,w,c
 30308  01190A  2233               	addwfc	(btemp+9)^0,f,c
 30309  01190C  5033               	movf	(btemp+9)^0,w,c
 30310  01190E  E106               	bnz	u14800
 30311  011910  0E1A               	movlw	26
 30312  011912  5C32               	subwf	(btemp+8)^0,w,c
 30313  011914  B0D8               	btfsc	status,0,c
 30314  011916  D002               	goto	u14800
 30315  011918  0E01               	movlw	1
 30316  01191A  D001               	goto	u14810
 30317  01191C                     u14800:
 30318  01191C  0E00               	movlw	0
 30319  01191E                     u14810:
 30320  01191E  6E34               	movwf	(btemp+10)^0,c
 30321  011920  6A35               	clrf	(btemp+11)^0,c
 30322                           
 30323                           ;stkvar	_efgtoa$6617 @ sp[(-56)+6]
 30324  011922  0ECE               	movlw	-50
 30325  011924  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30326  01192A  0ECF               	movlw	-49
 30327  01192C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30328                           
 30329                           ;stkvar	_efgtoa$6617 @ sp[(-56)+6]
 30330  011932  0ECE               	movlw	-50
 30331  011934  006F FF8C  F02A    	movff	plusw1,btemp
 30332  01193A  0ECF               	movlw	-49
 30333  01193C  50E3               	movf	plusw1,w,c
 30334  01193E  102A               	iorwf	btemp^0,w,c
 30335  011940  B4D8               	btfsc	status,2,c
 30336  011942  D017               	goto	l15682
 30337                           
 30338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 30339  011944  0EDE               	movlw	low STR_99
 30340  011946  6EE6               	movwf	postinc1,c
 30341  011948  0EFF               	movlw	high STR_99
 30342  01194A  6EE6               	movwf	postinc1,c
 30343                           
 30344                           ;stkvar	_n @ sp[(-58)+32]
 30345  01194C  0E54               	movlw	low _dbuf
 30346  01194E  6E34               	movwf	(btemp+10)^0,c
 30347  011950  0E03               	movlw	high _dbuf
 30348  011952  6E35               	movwf	(btemp+11)^0,c
 30349  011954  0EE6               	movlw	-26
 30350  011956  50E3               	movf	plusw1,w,c
 30351  011958  2634               	addwf	(btemp+10)^0,f,c
 30352  01195A  0EE7               	movlw	-25
 30353  01195C  50E3               	movf	plusw1,w,c
 30354  01195E  2235               	addwfc	(btemp+11)^0,f,c
 30355  011960  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30356  011966  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30357  01196C  ECB1  F001         	call	_strcpy	;wreg free
 30358                           
 30359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 30360  011970  D78D               	goto	l15666
 30361  011972                     l15682:
 30362                           
 30363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 30364  011972  0EE6               	movlw	low STR_100
 30365  011974  6EE6               	movwf	postinc1,c
 30366  011976  0EFF               	movlw	high STR_100
 30367  011978  6EE6               	movwf	postinc1,c
 30368                           
 30369                           ;stkvar	_n @ sp[(-58)+32]
 30370  01197A  0E54               	movlw	low _dbuf
 30371  01197C  6E34               	movwf	(btemp+10)^0,c
 30372  01197E  0E03               	movlw	high _dbuf
 30373  011980  6E35               	movwf	(btemp+11)^0,c
 30374  011982  0EE6               	movlw	-26
 30375  011984  50E3               	movf	plusw1,w,c
 30376  011986  2634               	addwf	(btemp+10)^0,f,c
 30377  011988  0EE7               	movlw	-25
 30378  01198A  50E3               	movf	plusw1,w,c
 30379  01198C  2235               	addwfc	(btemp+11)^0,f,c
 30380  01198E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30381  011994  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30382  01199A  ECB1  F001         	call	_strcpy	;wreg free
 30383  01199E  D776               	goto	l15666
 30384  0119A0                     l15690:
 30385                           
 30386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 30387  0119A0  0E00               	movlw	0
 30388  0119A2  6E32               	movwf	(btemp+8)^0,c
 30389  0119A4  0E00               	movlw	0
 30390  0119A6  6E33               	movwf	(btemp+9)^0,c
 30391  0119A8  0E80               	movlw	128
 30392  0119AA  6E34               	movwf	(btemp+10)^0,c
 30393  0119AC  0E3F               	movlw	63
 30394  0119AE  6E35               	movwf	(btemp+11)^0,c
 30395                           
 30396                           ;stkvar	_u @ sp[(-56)+12]
 30397  0119B0  0ED4               	movlw	-44
 30398  0119B2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30399  0119B8  0ED5               	movlw	-43
 30400  0119BA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30401  0119C0  0ED6               	movlw	-42
 30402  0119C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30403  0119C8  0ED7               	movlw	-41
 30404  0119CA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30405                           
 30406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 30407                           ;stkvar	_e @ sp[(-56)+34]
 30408  0119D0  0EEA               	movlw	-22
 30409  0119D2  6AE3               	clrf	plusw1,c
 30410  0119D4  0EEB               	movlw	-21
 30411  0119D6  6AE3               	clrf	plusw1,c
 30412                           
 30413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 30414  0119D8  0E00               	movlw	0
 30415  0119DA  6EE6               	movwf	postinc1,c
 30416  0119DC  0E00               	movlw	0
 30417  0119DE  6EE6               	movwf	postinc1,c
 30418  0119E0  0E00               	movlw	0
 30419  0119E2  6EE6               	movwf	postinc1,c
 30420  0119E4  0E00               	movlw	0
 30421  0119E6  6EE6               	movwf	postinc1,c
 30422                           
 30423                           ;stkvar	_g @ sp[(-60)+16]
 30424  0119E8  0ED4               	movlw	-44
 30425  0119EA  006F FF8F FFE6     	movff	plusw1,postinc1
 30426  0119F0  006F FF8F FFE6     	movff	plusw1,postinc1
 30427  0119F6  006F FF8F FFE6     	movff	plusw1,postinc1
 30428  0119FC  006F FF8F FFE6     	movff	plusw1,postinc1
 30429  011A02  EC82  F002         	call	___fleq	;wreg free
 30430  011A06  A02A               	btfss	btemp& (0+255),0,c
 30431  011A08  D039               	goto	l15702
 30432  011A0A  D0BC               	goto	u14850
 30433  011A0C                     l15698:
 30434                           
 30435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 30436  011A0C  0E00               	movlw	0
 30437  011A0E  6EE6               	movwf	postinc1,c
 30438  011A10  0E00               	movlw	0
 30439  011A12  6EE6               	movwf	postinc1,c
 30440  011A14  0E20               	movlw	32
 30441  011A16  6EE6               	movwf	postinc1,c
 30442  011A18  0E41               	movlw	65
 30443  011A1A  6EE6               	movwf	postinc1,c
 30444                           
 30445                           ;stkvar	_u @ sp[(-60)+12]
 30446  011A1C  0ED0               	movlw	-48
 30447  011A1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30448  011A24  006F FF8F FFE6     	movff	plusw1,postinc1
 30449  011A2A  006F FF8F FFE6     	movff	plusw1,postinc1
 30450  011A30  006F FF8F FFE6     	movff	plusw1,postinc1
 30451  011A36  ECDD  F0B2         	call	___flmul	;wreg free
 30452                           
 30453                           ;stkvar	_u @ sp[(-56)+12]
 30454  011A3A  0ED4               	movlw	-44
 30455  011A3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30456  011A42  0ED5               	movlw	-43
 30457  011A44  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30458  011A4A  0ED6               	movlw	-42
 30459  011A4C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30460  011A52  0ED7               	movlw	-41
 30461  011A54  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30462                           
 30463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 30464                           ;stkvar	_e @ sp[(-56)+34]
 30465  011A5A  0EEA               	movlw	-22
 30466  011A5C  50E3               	movf	plusw1,w,c
 30467  011A5E  0F01               	addlw	1
 30468  011A60  6E2A               	movwf	btemp^0,c
 30469  011A62  0EEA               	movlw	-22
 30470  011A64  0060  F0AB  FFE3   	movff	btemp,plusw1
 30471  011A6A  6A2A               	clrf	btemp^0,c
 30472  011A6C  0EEB               	movlw	-21
 30473  011A6E  50E3               	movf	plusw1,w,c
 30474  011A70  202A               	addwfc	btemp^0,w,c
 30475  011A72  6E2A               	movwf	btemp^0,c
 30476  011A74  0EEB               	movlw	-21
 30477  011A76  0060  F0AB  FFE3   	movff	btemp,plusw1
 30478  011A7C                     l15702:
 30479                           
 30480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 30481  011A7C  0E00               	movlw	0
 30482  011A7E  6EE6               	movwf	postinc1,c
 30483  011A80  0E00               	movlw	0
 30484  011A82  6EE6               	movwf	postinc1,c
 30485  011A84  0E20               	movlw	32
 30486  011A86  6EE6               	movwf	postinc1,c
 30487  011A88  0E41               	movlw	65
 30488  011A8A  6EE6               	movwf	postinc1,c
 30489                           
 30490                           ;stkvar	_u @ sp[(-60)+12]
 30491  011A8C  0ED0               	movlw	-48
 30492  011A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 30493  011A94  006F FF8F FFE6     	movff	plusw1,postinc1
 30494  011A9A  006F FF8F FFE6     	movff	plusw1,postinc1
 30495  011AA0  006F FF8F FFE6     	movff	plusw1,postinc1
 30496  011AA6  ECDD  F0B2         	call	___flmul	;wreg free
 30497  011AAA  0060  F0AB  FFE6   	movff	btemp,postinc1
 30498  011AB0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30499  011AB6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30500  011ABC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30501                           
 30502                           ;stkvar	_g @ sp[(-60)+16]
 30503  011AC2  0ED4               	movlw	-44
 30504  011AC4  006F FF8F FFE6     	movff	plusw1,postinc1
 30505  011ACA  006F FF8F FFE6     	movff	plusw1,postinc1
 30506  011AD0  006F FF8F FFE6     	movff	plusw1,postinc1
 30507  011AD6  006F FF8F FFE6     	movff	plusw1,postinc1
 30508  011ADC  EC9F  F0F4         	call	___flge	;wreg free
 30509  011AE0  A02A               	btfss	btemp& (0+255),0,c
 30510  011AE2  D032               	goto	l15708
 30511  011AE4  D793               	goto	l15698
 30512  011AE6                     l15704:
 30513                           
 30514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 30515  011AE6  0E00               	movlw	0
 30516  011AE8  6EE6               	movwf	postinc1,c
 30517  011AEA  0E00               	movlw	0
 30518  011AEC  6EE6               	movwf	postinc1,c
 30519  011AEE  0E20               	movlw	32
 30520  011AF0  6EE6               	movwf	postinc1,c
 30521  011AF2  0E41               	movlw	65
 30522  011AF4  6EE6               	movwf	postinc1,c
 30523                           
 30524                           ;stkvar	_u @ sp[(-60)+12]
 30525  011AF6  0ED0               	movlw	-48
 30526  011AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 30527  011AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 30528  011B04  006F FF8F FFE6     	movff	plusw1,postinc1
 30529  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 30530  011B10  EC2E  F0BE         	call	___fldiv	;wreg free
 30531                           
 30532                           ;stkvar	_u @ sp[(-56)+12]
 30533  011B14  0ED4               	movlw	-44
 30534  011B16  0060  F0AB  FFE3   	movff	btemp,plusw1
 30535  011B1C  0ED5               	movlw	-43
 30536  011B1E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30537  011B24  0ED6               	movlw	-42
 30538  011B26  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30539  011B2C  0ED7               	movlw	-41
 30540  011B2E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30541                           
 30542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 30543                           ;stkvar	_e @ sp[(-56)+34]
 30544  011B34  50E1               	movf	fsr1l,w,c
 30545  011B36  0FEA               	addlw	-22
 30546  011B38  6ED9               	movwf	fsr2l,c
 30547  011B3A  50E2               	movf	fsr1h,w,c
 30548  011B3C  6EDA               	movwf	fsr2h,c
 30549  011B3E  0EFF               	movlw	255
 30550  011B40  22DA               	addwfc	fsr2h,f,c
 30551  011B42  06DE               	decf	postinc2,f,c
 30552  011B44  0E00               	movlw	0
 30553  011B46  5ADD               	subwfb	postdec2,f,c
 30554  011B48                     l15708:
 30555                           
 30556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 30557                           ;stkvar	_u @ sp[(-56)+12]
 30558  011B48  0ED4               	movlw	-44
 30559  011B4A  006F FF8F FFE6     	movff	plusw1,postinc1
 30560  011B50  006F FF8F FFE6     	movff	plusw1,postinc1
 30561  011B56  006F FF8F FFE6     	movff	plusw1,postinc1
 30562  011B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 30563                           
 30564                           ;stkvar	_g @ sp[(-60)+16]
 30565  011B62  0ED4               	movlw	-44
 30566  011B64  006F FF8F FFE6     	movff	plusw1,postinc1
 30567  011B6A  006F FF8F FFE6     	movff	plusw1,postinc1
 30568  011B70  006F FF8F FFE6     	movff	plusw1,postinc1
 30569  011B76  006F FF8F FFE6     	movff	plusw1,postinc1
 30570  011B7C  EC9F  F0F4         	call	___flge	;wreg free
 30571  011B80  A02A               	btfss	btemp& (0+255),0,c
 30572  011B82  D7B1               	goto	l15704
 30573  011B84                     u14850:
 30574                           
 30575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 30576                           ;stkvar	_c @ sp[(-56)+-7]
 30577  011B84  0EC1               	movlw	-63
 30578  011B86  50E3               	movf	plusw1,w,c
 30579  011B88  6EE6               	movwf	postinc1,c
 30580  011B8A  0E00               	movlw	0
 30581  011B8C  6EE6               	movwf	postinc1,c
 30582  011B8E  ECDA  F008         	call	_tolower	;wreg free
 30583                           
 30584                           ;stkvar	_mode @ sp[(-56)+54]
 30585  011B92  0EFE               	movlw	-2
 30586  011B94  0060  F0AB  FFE3   	movff	btemp,plusw1
 30587                           
 30588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 30589                           ;stkvar	_mode @ sp[(-56)+54]
 30590                           ;stkvar	_nmode @ sp[(-56)+55]
 30591  011B9A  0EFE               	movlw	-2
 30592  011B9C  006F FF8C  F02A    	movff	plusw1,btemp
 30593  011BA2  0EFF               	movlw	-1
 30594  011BA4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30595                           
 30596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 30597                           ;stkvar	_mode @ sp[(-56)+54]
 30598  011BAA  0EFE               	movlw	-2
 30599  011BAC  006F FF8C  F02A    	movff	plusw1,btemp
 30600  011BB2  0E67               	movlw	103
 30601  011BB4  182A               	xorwf	btemp^0,w,c
 30602  011BB6  A4D8               	btfss	status,2,c
 30603  011BB8  D025               	goto	l15726
 30604                           
 30605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 30606  011BBA  504C               	movf	_prec^0,w,c
 30607  011BBC  104D               	iorwf	(_prec+1)^0,w,c
 30608  011BBE  A4D8               	btfss	status,2,c
 30609  011BC0  D004               	goto	l15720
 30610                           
 30611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 30612  011BC2  0E00               	movlw	0
 30613  011BC4  6E4D               	movwf	(_prec+1)^0,c
 30614  011BC6  0E01               	movlw	1
 30615  011BC8  6E4C               	movwf	_prec^0,c
 30616  011BCA                     l15720:
 30617                           
 30618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 30619  011BCA  BE4D               	btfsc	(_prec+1)^0,7,c
 30620  011BCC  D005               	goto	u14880
 30621  011BCE  504D               	movf	(_prec+1)^0,w,c
 30622  011BD0  E110               	bnz	l15724
 30623  011BD2  044C               	decf	_prec^0,w,c
 30624  011BD4  B0D8               	btfsc	status,0,c
 30625  011BD6  D00D               	goto	l15724
 30626  011BD8                     u14880:
 30627  011BD8  0E06               	movlw	6
 30628  011BDA  6E34               	movwf	(btemp+10)^0,c
 30629  011BDC  0E00               	movlw	0
 30630  011BDE  6E35               	movwf	(btemp+11)^0,c
 30631                           
 30632                           ;stkvar	_p @ sp[(-56)+40]
 30633  011BE0  0EF0               	movlw	-16
 30634  011BE2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30635  011BE8  0EF1               	movlw	-15
 30636  011BEA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30637  011BF0  D00C               	goto	l15732
 30638  011BF2                     l15724:
 30639                           
 30640                           ;stkvar	_p @ sp[(-56)+40]
 30641  011BF2  0EF0               	movlw	-16
 30642  011BF4  0060  F133  FFE3   	movff	_prec,plusw1
 30643  011BFA  0EF1               	movlw	-15
 30644  011BFC  0060  F137  FFE3   	movff	_prec+1,plusw1
 30645  011C02  D003               	goto	l15732
 30646  011C04                     l15726:
 30647                           
 30648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 30649  011C04  AE4D               	btfss	(_prec+1)^0,7,c
 30650  011C06  D7F5               	goto	l15724
 30651  011C08  D7E7               	goto	u14880
 30652  011C0A                     l15732:
 30653                           
 30654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 30655                           ;stkvar	_mode @ sp[(-56)+54]
 30656  011C0A  0EFE               	movlw	-2
 30657  011C0C  006F FF8C  F02A    	movff	plusw1,btemp
 30658  011C12  0E67               	movlw	103
 30659  011C14  182A               	xorwf	btemp^0,w,c
 30660  011C16  A4D8               	btfss	status,2,c
 30661  011C18  D02F               	goto	l15742
 30662                           
 30663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 30664                           ;stkvar	_e @ sp[(-56)+34]
 30665  011C1A  0EEB               	movlw	-21
 30666  011C1C  AEE3               	btfss	plusw1,7,c
 30667  011C1E  D00E               	goto	u14910
 30668  011C20  0EEA               	movlw	-22
 30669  011C22  006F FF8C  F02A    	movff	plusw1,btemp
 30670  011C28  0EFC               	movlw	252
 30671  011C2A  5E2A               	subwf	btemp^0,f,c
 30672  011C2C  0EEB               	movlw	-21
 30673  011C2E  006F FF8C  F02A    	movff	plusw1,btemp
 30674  011C34  0EFF               	movlw	255
 30675  011C36  5A2A               	subwfb	btemp^0,f,c
 30676  011C38  A0D8               	btfss	status,0,c
 30677  011C3A  D018               	goto	l15740
 30678  011C3C                     u14910:
 30679                           
 30680                           ;stkvar	_e @ sp[(-56)+34]
 30681                           ;stkvar	_p @ sp[(-56)+40]
 30682  011C3C  0EF0               	movlw	-16
 30683  011C3E  50E3               	movf	plusw1,w,c
 30684  011C40  0FFF               	addlw	255
 30685  011C42  6E34               	movwf	(btemp+10)^0,c
 30686  011C44  0EF1               	movlw	-15
 30687  011C46  006F FF8C  F035    	movff	plusw1,btemp+11
 30688  011C4C  0EFF               	movlw	255
 30689  011C4E  2235               	addwfc	(btemp+11)^0,f,c
 30690  011C50  0EEA               	movlw	-22
 30691  011C52  50E3               	movf	plusw1,w,c
 30692  011C54  5C34               	subwf	(btemp+10)^0,w,c
 30693  011C56  5035               	movf	(btemp+11)^0,w,c
 30694  011C58  0A80               	xorlw	128
 30695  011C5A  6E2A               	movwf	btemp^0,c
 30696  011C5C  0EEB               	movlw	-21
 30697  011C5E  50E3               	movf	plusw1,w,c
 30698  011C60  0A80               	xorlw	128
 30699  011C62  582A               	subwfb	btemp^0,w,c
 30700  011C64  A0D8               	btfss	status,0,c
 30701  011C66  D002               	goto	l15740
 30702                           
 30703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 30704  011C68  0E66               	movlw	102
 30705  011C6A  D001               	goto	L32
 30706  011C6C                     l15740:
 30707                           
 30708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 30709  011C6C  0E65               	movlw	101
 30710  011C6E                     L32:
 30711  011C6E  6E35               	movwf	(btemp+11)^0,c
 30712                           
 30713                           ;stkvar	_nmode @ sp[(-56)+55]
 30714  011C70  0EFF               	movlw	-1
 30715  011C72  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30716  011C78                     l15742:
 30717                           
 30718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 30719                           ;stkvar	_p @ sp[(-56)+40]
 30720                           ;stkvar	_m @ sp[(-56)+48]
 30721  011C78  0EF0               	movlw	-16
 30722  011C7A  006F FF8C  F02A    	movff	plusw1,btemp
 30723  011C80  0EF8               	movlw	-8
 30724  011C82  0060  F0AB  FFE3   	movff	btemp,plusw1
 30725  011C88  0EF1               	movlw	-15
 30726  011C8A  006F FF8C  F02A    	movff	plusw1,btemp
 30727  011C90  0EF9               	movlw	-7
 30728  011C92  0060  F0AB  FFE3   	movff	btemp,plusw1
 30729                           
 30730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 30731                           ;stkvar	_mode @ sp[(-56)+54]
 30732  011C98  0EFE               	movlw	-2
 30733  011C9A  006F FF8C  F02A    	movff	plusw1,btemp
 30734  011CA0  0E67               	movlw	103
 30735  011CA2  182A               	xorwf	btemp^0,w,c
 30736  011CA4  A4D8               	btfss	status,2,c
 30737  011CA6  D00B               	goto	u14950
 30738                           
 30739                           ;stkvar	_nmode @ sp[(-56)+55]
 30740  011CA8  0EFF               	movlw	-1
 30741  011CAA  006F FF8C  F02A    	movff	plusw1,btemp
 30742  011CB0  0E66               	movlw	102
 30743  011CB2  182A               	xorwf	btemp^0,w,c
 30744  011CB4  A4D8               	btfss	status,2,c
 30745  011CB6  D014               	goto	l2552
 30746                           
 30747                           ;stkvar	_e @ sp[(-56)+34]
 30748  011CB8  0EEB               	movlw	-21
 30749  011CBA  AEE3               	btfss	plusw1,7,c
 30750  011CBC  D011               	goto	l2552
 30751  011CBE                     u14950:
 30752                           
 30753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 30754                           ;stkvar	_m @ sp[(-56)+48]
 30755  011CBE  0EF8               	movlw	-8
 30756  011CC0  50E3               	movf	plusw1,w,c
 30757  011CC2  0F01               	addlw	1
 30758  011CC4  6E2A               	movwf	btemp^0,c
 30759  011CC6  0EF8               	movlw	-8
 30760  011CC8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30761  011CCE  6A2A               	clrf	btemp^0,c
 30762  011CD0  0EF9               	movlw	-7
 30763  011CD2  50E3               	movf	plusw1,w,c
 30764  011CD4  202A               	addwfc	btemp^0,w,c
 30765  011CD6  6E2A               	movwf	btemp^0,c
 30766  011CD8  0EF9               	movlw	-7
 30767  011CDA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30768  011CE0                     l2552:
 30769                           
 30770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 30771                           ;stkvar	_nmode @ sp[(-56)+55]
 30772  011CE0  0EFF               	movlw	-1
 30773  011CE2  006F FF8C  F02A    	movff	plusw1,btemp
 30774  011CE8  0E66               	movlw	102
 30775  011CEA  182A               	xorwf	btemp^0,w,c
 30776  011CEC  A4D8               	btfss	status,2,c
 30777  011CEE  D03B               	goto	l15762
 30778                           
 30779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 30780                           ;stkvar	_e @ sp[(-56)+34]
 30781  011CF0  0EEB               	movlw	-21
 30782  011CF2  AEE3               	btfss	plusw1,7,c
 30783  011CF4  D01C               	goto	l15758
 30784                           
 30785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 30786  011CF6  0E00               	movlw	0
 30787  011CF8  6E32               	movwf	(btemp+8)^0,c
 30788  011CFA  0E00               	movlw	0
 30789  011CFC  6E33               	movwf	(btemp+9)^0,c
 30790  011CFE  0E80               	movlw	128
 30791  011D00  6E34               	movwf	(btemp+10)^0,c
 30792  011D02  0E3F               	movlw	63
 30793  011D04  6E35               	movwf	(btemp+11)^0,c
 30794                           
 30795                           ;stkvar	_u @ sp[(-56)+12]
 30796  011D06  0ED4               	movlw	-44
 30797  011D08  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30798  011D0E  0ED5               	movlw	-43
 30799  011D10  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30800  011D16  0ED6               	movlw	-42
 30801  011D18  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30802  011D1E  0ED7               	movlw	-41
 30803  011D20  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30804                           
 30805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 30806                           ;stkvar	_e @ sp[(-56)+34]
 30807  011D26  0EEA               	movlw	-22
 30808  011D28  6AE3               	clrf	plusw1,c
 30809  011D2A  0EEB               	movlw	-21
 30810  011D2C  6AE3               	clrf	plusw1,c
 30811  011D2E                     l15758:
 30812                           
 30813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 30814                           ;stkvar	_mode @ sp[(-56)+54]
 30815  011D2E  0EFE               	movlw	-2
 30816  011D30  006F FF8C  F02A    	movff	plusw1,btemp
 30817  011D36  0E67               	movlw	103
 30818  011D38  182A               	xorwf	btemp^0,w,c
 30819  011D3A  B4D8               	btfsc	status,2,c
 30820  011D3C  D014               	goto	l15762
 30821                           
 30822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 30823                           ;stkvar	_e @ sp[(-56)+34]
 30824                           ;stkvar	_m @ sp[(-56)+48]
 30825  011D3E  0EF8               	movlw	-8
 30826  011D40  50E3               	movf	plusw1,w,c
 30827  011D42  6E2A               	movwf	btemp^0,c
 30828  011D44  0EEA               	movlw	-22
 30829  011D46  50E3               	movf	plusw1,w,c
 30830  011D48  262A               	addwf	btemp^0,f,c
 30831  011D4A  0EF8               	movlw	-8
 30832  011D4C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30833  011D52  0EF9               	movlw	-7
 30834  011D54  50E3               	movf	plusw1,w,c
 30835  011D56  6E2A               	movwf	btemp^0,c
 30836  011D58  0EEB               	movlw	-21
 30837  011D5A  50E3               	movf	plusw1,w,c
 30838  011D5C  222A               	addwfc	btemp^0,f,c
 30839  011D5E  0EF9               	movlw	-7
 30840  011D60  0060  F0AB  FFE3   	movff	btemp,plusw1
 30841  011D66                     l15762:
 30842                           
 30843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 30844                           ;stkvar	_i @ sp[(-56)+36]
 30845  011D66  0EEC               	movlw	-20
 30846  011D68  6AE3               	clrf	plusw1,c
 30847  011D6A  0EED               	movlw	-19
 30848  011D6C  6AE3               	clrf	plusw1,c
 30849                           
 30850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 30851                           ;stkvar	_g @ sp[(-56)+16]
 30852  011D6E  0ED8               	movlw	-40
 30853  011D70  006F FF8C  F032    	movff	plusw1,btemp+8
 30854  011D76  0ED9               	movlw	-39
 30855  011D78  006F FF8C  F033    	movff	plusw1,btemp+9
 30856  011D7E  0EDA               	movlw	-38
 30857  011D80  006F FF8C  F034    	movff	plusw1,btemp+10
 30858  011D86  0EDB               	movlw	-37
 30859  011D88  006F FF8C  F035    	movff	plusw1,btemp+11
 30860                           
 30861                           ;stkvar	_h @ sp[(-56)+24]
 30862  011D8E  0EE0               	movlw	-32
 30863  011D90  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30864  011D96  0EE1               	movlw	-31
 30865  011D98  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30866  011D9E  0EE2               	movlw	-30
 30867  011DA0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30868  011DA6  0EE3               	movlw	-29
 30869  011DA8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30870                           
 30871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 30872                           ;stkvar	_u @ sp[(-56)+12]
 30873  011DAE  0ED4               	movlw	-44
 30874  011DB0  006F FF8C  F032    	movff	plusw1,btemp+8
 30875  011DB6  0ED5               	movlw	-43
 30876  011DB8  006F FF8C  F033    	movff	plusw1,btemp+9
 30877  011DBE  0ED6               	movlw	-42
 30878  011DC0  006F FF8C  F034    	movff	plusw1,btemp+10
 30879  011DC6  0ED7               	movlw	-41
 30880  011DC8  006F FF8C  F035    	movff	plusw1,btemp+11
 30881                           
 30882                           ;stkvar	_ou @ sp[(-56)+28]
 30883  011DCE  0EE4               	movlw	-28
 30884  011DD0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30885  011DD6  0EE5               	movlw	-27
 30886  011DD8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30887  011DDE  0EE6               	movlw	-26
 30888  011DE0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30889  011DE6  0EE7               	movlw	-25
 30890  011DE8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30891                           
 30892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30893  011DEE  D0D6               	goto	l15778
 30894  011DF0                     l15768:
 30895                           
 30896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 30897                           ;stkvar	_u @ sp[(-56)+12]
 30898  011DF0  0ED4               	movlw	-44
 30899  011DF2  006F FF8F FFE6     	movff	plusw1,postinc1
 30900  011DF8  006F FF8F FFE6     	movff	plusw1,postinc1
 30901  011DFE  006F FF8F FFE6     	movff	plusw1,postinc1
 30902  011E04  006F FF8F FFE6     	movff	plusw1,postinc1
 30903                           
 30904                           ;stkvar	_h @ sp[(-60)+24]
 30905  011E0A  0EDC               	movlw	-36
 30906  011E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 30907  011E12  006F FF8F FFE6     	movff	plusw1,postinc1
 30908  011E18  006F FF8F FFE6     	movff	plusw1,postinc1
 30909  011E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30910  011E24  EC2E  F0BE         	call	___fldiv	;wreg free
 30911  011E28  0060  F0AB  FFE6   	movff	btemp,postinc1
 30912  011E2E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30913  011E34  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30914  011E3A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30915  011E40  EC45  F0D2         	call	_floorf	;wreg free
 30916                           
 30917                           ;stkvar	_l @ sp[(-56)+20]
 30918  011E44  0EDC               	movlw	-36
 30919  011E46  0060  F0AB  FFE3   	movff	btemp,plusw1
 30920  011E4C  0EDD               	movlw	-35
 30921  011E4E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30922  011E54  0EDE               	movlw	-34
 30923  011E56  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30924  011E5C  0EDF               	movlw	-33
 30925  011E5E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30926                           
 30927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 30928                           ;stkvar	_l @ sp[(-56)+20]
 30929  011E64  0EDC               	movlw	-36
 30930  011E66  006F FF8F FFE6     	movff	plusw1,postinc1
 30931  011E6C  006F FF8F FFE6     	movff	plusw1,postinc1
 30932  011E72  006F FF8F FFE6     	movff	plusw1,postinc1
 30933  011E78  006F FF8F FFE6     	movff	plusw1,postinc1
 30934  011E7E  EC33  F0F3         	call	___fltol	;wreg free
 30935  011E82  0060  F0A8  F034   	movff	btemp,btemp+10
 30936  011E88  0060  F0AC  F035   	movff	btemp+1,btemp+11
 30937                           
 30938                           ;stkvar	_d @ sp[(-56)+44]
 30939  011E8E  0EF4               	movlw	-12
 30940  011E90  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30941  011E96  0EF5               	movlw	-11
 30942  011E98  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30943                           
 30944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 30945                           ;stkvar	_u @ sp[(-56)+12]
 30946  011E9E  0ED4               	movlw	-44
 30947  011EA0  006F FF8F FFE6     	movff	plusw1,postinc1
 30948  011EA6  006F FF8F FFE6     	movff	plusw1,postinc1
 30949  011EAC  006F FF8F FFE6     	movff	plusw1,postinc1
 30950  011EB2  006F FF8F FFE6     	movff	plusw1,postinc1
 30951                           
 30952                           ;stkvar	_l @ sp[(-60)+20]
 30953  011EB8  0ED8               	movlw	-40
 30954  011EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30955  011EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30956  011EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30957  011ECC  006F FF8F FFE6     	movff	plusw1,postinc1
 30958  011ED2  ECDD  F0B2         	call	___flmul	;wreg free
 30959  011ED6  0060  F0AB  FFE6   	movff	btemp,postinc1
 30960  011EDC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30961  011EE2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30962  011EE8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30963                           
 30964                           ;stkvar	_h @ sp[(-60)+24]
 30965  011EEE  0EDC               	movlw	-36
 30966  011EF0  006F FF8F FFE6     	movff	plusw1,postinc1
 30967  011EF6  006F FF8F FFE6     	movff	plusw1,postinc1
 30968  011EFC  006F FF8F FFE6     	movff	plusw1,postinc1
 30969  011F02  006F FF8F FFE6     	movff	plusw1,postinc1
 30970  011F08  ECD2  F00E         	call	___flsub	;wreg free
 30971                           
 30972                           ;stkvar	_h @ sp[(-56)+24]
 30973  011F0C  0EE0               	movlw	-32
 30974  011F0E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30975  011F14  0EE1               	movlw	-31
 30976  011F16  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30977  011F1C  0EE2               	movlw	-30
 30978  011F1E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30979  011F24  0EE3               	movlw	-29
 30980  011F26  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30981                           
 30982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 30983  011F2C  0E00               	movlw	0
 30984  011F2E  6EE6               	movwf	postinc1,c
 30985  011F30  0E00               	movlw	0
 30986  011F32  6EE6               	movwf	postinc1,c
 30987  011F34  0E20               	movlw	32
 30988  011F36  6EE6               	movwf	postinc1,c
 30989  011F38  0E41               	movlw	65
 30990  011F3A  6EE6               	movwf	postinc1,c
 30991                           
 30992                           ;stkvar	_u @ sp[(-60)+12]
 30993  011F3C  0ED0               	movlw	-48
 30994  011F3E  006F FF8F FFE6     	movff	plusw1,postinc1
 30995  011F44  006F FF8F FFE6     	movff	plusw1,postinc1
 30996  011F4A  006F FF8F FFE6     	movff	plusw1,postinc1
 30997  011F50  006F FF8F FFE6     	movff	plusw1,postinc1
 30998  011F56  EC2E  F0BE         	call	___fldiv	;wreg free
 30999                           
 31000                           ;stkvar	_u @ sp[(-56)+12]
 31001  011F5A  0ED4               	movlw	-44
 31002  011F5C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31003  011F62  0ED5               	movlw	-43
 31004  011F64  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31005  011F6A  0ED6               	movlw	-42
 31006  011F6C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31007  011F72  0ED7               	movlw	-41
 31008  011F74  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31009                           
 31010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 31011                           ;stkvar	_i @ sp[(-56)+36]
 31012  011F7A  0EEC               	movlw	-20
 31013  011F7C  50E3               	movf	plusw1,w,c
 31014  011F7E  0F01               	addlw	1
 31015  011F80  6E2A               	movwf	btemp^0,c
 31016  011F82  0EEC               	movlw	-20
 31017  011F84  0060  F0AB  FFE3   	movff	btemp,plusw1
 31018  011F8A  6A2A               	clrf	btemp^0,c
 31019  011F8C  0EED               	movlw	-19
 31020  011F8E  50E3               	movf	plusw1,w,c
 31021  011F90  202A               	addwfc	btemp^0,w,c
 31022  011F92  6E2A               	movwf	btemp^0,c
 31023  011F94  0EED               	movlw	-19
 31024  011F96  0060  F0AB  FFE3   	movff	btemp,plusw1
 31025  011F9C                     l15778:
 31026                           
 31027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31028                           ;stkvar	_m @ sp[(-56)+48]
 31029                           ;stkvar	_i @ sp[(-56)+36]
 31030  011F9C  50E1               	movf	fsr1l,w,c
 31031  011F9E  0FEC               	addlw	-20
 31032  011FA0  6ED9               	movwf	fsr2l,c
 31033  011FA2  50E2               	movf	fsr1h,w,c
 31034  011FA4  6EDA               	movwf	fsr2h,c
 31035  011FA6  0EFF               	movlw	255
 31036  011FA8  22DA               	addwfc	fsr2h,f,c
 31037  011FAA  0EF8               	movlw	-8
 31038  011FAC  50E3               	movf	plusw1,w,c
 31039  011FAE  5CDE               	subwf	postinc2,w,c
 31040  011FB0  50DE               	movf	postinc2,w,c
 31041  011FB2  0A80               	xorlw	128
 31042  011FB4  6E2A               	movwf	btemp^0,c
 31043  011FB6  0EF9               	movlw	-7
 31044  011FB8  50E3               	movf	plusw1,w,c
 31045  011FBA  0A80               	xorlw	128
 31046  011FBC  582A               	subwfb	btemp^0,w,c
 31047  011FBE  A0D8               	btfss	status,0,c
 31048  011FC0  D717               	goto	l15768
 31049                           
 31050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 31051  011FC2  0E00               	movlw	0
 31052  011FC4  6EE6               	movwf	postinc1,c
 31053  011FC6  0E00               	movlw	0
 31054  011FC8  6EE6               	movwf	postinc1,c
 31055  011FCA  0EA0               	movlw	160
 31056  011FCC  6EE6               	movwf	postinc1,c
 31057  011FCE  0E40               	movlw	64
 31058  011FD0  6EE6               	movwf	postinc1,c
 31059                           
 31060                           ;stkvar	_u @ sp[(-60)+12]
 31061  011FD2  0ED0               	movlw	-48
 31062  011FD4  006F FF8F FFE6     	movff	plusw1,postinc1
 31063  011FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 31064  011FE0  006F FF8F FFE6     	movff	plusw1,postinc1
 31065  011FE6  006F FF8F FFE6     	movff	plusw1,postinc1
 31066  011FEC  ECDD  F0B2         	call	___flmul	;wreg free
 31067                           
 31068                           ;stkvar	_l @ sp[(-56)+20]
 31069  011FF0  0EDC               	movlw	-36
 31070  011FF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31071  011FF8  0EDD               	movlw	-35
 31072  011FFA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31073  012000  0EDE               	movlw	-34
 31074  012002  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31075  012008  0EDF               	movlw	-33
 31076  01200A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31077                           
 31078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 31079                           ;stkvar	_l @ sp[(-56)+20]
 31080  012010  0EDC               	movlw	-36
 31081  012012  006F FF8F FFE6     	movff	plusw1,postinc1
 31082  012018  006F FF8F FFE6     	movff	plusw1,postinc1
 31083  01201E  006F FF8F FFE6     	movff	plusw1,postinc1
 31084  012024  006F FF8F FFE6     	movff	plusw1,postinc1
 31085                           
 31086                           ;stkvar	_h @ sp[(-60)+24]
 31087  01202A  0EDC               	movlw	-36
 31088  01202C  006F FF8F FFE6     	movff	plusw1,postinc1
 31089  012032  006F FF8F FFE6     	movff	plusw1,postinc1
 31090  012038  006F FF8F FFE6     	movff	plusw1,postinc1
 31091  01203E  006F FF8F FFE6     	movff	plusw1,postinc1
 31092  012044  EC9F  F0F4         	call	___flge	;wreg free
 31093  012048  A02A               	btfss	btemp& (0+255),0,c
 31094  01204A  D021               	goto	u15020
 31095                           
 31096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 31097                           ;stkvar	_l @ sp[(-56)+20]
 31098                           
 31099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 31100                           
 31101                           ;stkvar	_l @ sp[(-56)+20]
 31102                           
 31103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 31104  01204C  0EDC               	movlw	-36
 31105  01204E  006F FF8F FFE6     	movff	plusw1,postinc1
 31106  012054  006F FF8F FFE6     	movff	plusw1,postinc1
 31107  01205A  006F FF8F FFE6     	movff	plusw1,postinc1
 31108  012060  006F FF8F FFE6     	movff	plusw1,postinc1
 31109                           
 31110                           ;stkvar	_h @ sp[(-60)+24]
 31111  012066  0EDC               	movlw	-36
 31112  012068  006F FF8F FFE6     	movff	plusw1,postinc1
 31113  01206E  006F FF8F FFE6     	movff	plusw1,postinc1
 31114  012074  006F FF8F FFE6     	movff	plusw1,postinc1
 31115  01207A  006F FF8F FFE6     	movff	plusw1,postinc1
 31116  012080  EC82  F002         	call	___fleq	;wreg free
 31117  012084  A02A               	btfss	btemp& (0+255),0,c
 31118  012086  D01B               	goto	l15792
 31119                           
 31120                           ;stkvar	_d @ sp[(-56)+44]
 31121  012088  0EF4               	movlw	-12
 31122  01208A  B0E3               	btfsc	plusw1,0,c
 31123  01208C  D018               	goto	l15792
 31124  01208E                     u15020:
 31125                           
 31126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 31127  01208E  0E00               	movlw	0
 31128  012090  6E32               	movwf	(btemp+8)^0,c
 31129  012092  0E00               	movlw	0
 31130  012094  6E33               	movwf	(btemp+9)^0,c
 31131  012096  0E00               	movlw	0
 31132  012098  6E34               	movwf	(btemp+10)^0,c
 31133  01209A  0E00               	movlw	0
 31134  01209C  6E35               	movwf	(btemp+11)^0,c
 31135                           
 31136                           ;stkvar	_l @ sp[(-56)+20]
 31137  01209E  0EDC               	movlw	-36
 31138  0120A0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31139  0120A6  0EDD               	movlw	-35
 31140  0120A8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31141  0120AE  0EDE               	movlw	-34
 31142  0120B0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31143  0120B6  0EDF               	movlw	-33
 31144  0120B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31145  0120BE                     l15792:
 31146                           
 31147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 31148                           ;stkvar	_l @ sp[(-56)+20]
 31149  0120BE  0EDC               	movlw	-36
 31150  0120C0  006F FF8F FFE6     	movff	plusw1,postinc1
 31151  0120C6  006F FF8F FFE6     	movff	plusw1,postinc1
 31152  0120CC  006F FF8F FFE6     	movff	plusw1,postinc1
 31153  0120D2  006F FF8F FFE6     	movff	plusw1,postinc1
 31154                           
 31155                           ;stkvar	_g @ sp[(-60)+16]
 31156  0120D8  0ED4               	movlw	-44
 31157  0120DA  006F FF8F FFE6     	movff	plusw1,postinc1
 31158  0120E0  006F FF8F FFE6     	movff	plusw1,postinc1
 31159  0120E6  006F FF8F FFE6     	movff	plusw1,postinc1
 31160  0120EC  006F FF8F FFE6     	movff	plusw1,postinc1
 31161  0120F2  ECF2  F0B6         	call	___fladd	;wreg free
 31162                           
 31163                           ;stkvar	_h @ sp[(-56)+24]
 31164  0120F6  0EE0               	movlw	-32
 31165  0120F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 31166  0120FE  0EE1               	movlw	-31
 31167  012100  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31168  012106  0EE2               	movlw	-30
 31169  012108  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31170  01210E  0EE3               	movlw	-29
 31171  012110  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31172                           
 31173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 31174                           ;stkvar	_ou @ sp[(-56)+28]
 31175  012116  0EE4               	movlw	-28
 31176  012118  006F FF8C  F032    	movff	plusw1,btemp+8
 31177  01211E  0EE5               	movlw	-27
 31178  012120  006F FF8C  F033    	movff	plusw1,btemp+9
 31179  012126  0EE6               	movlw	-26
 31180  012128  006F FF8C  F034    	movff	plusw1,btemp+10
 31181  01212E  0EE7               	movlw	-25
 31182  012130  006F FF8C  F035    	movff	plusw1,btemp+11
 31183                           
 31184                           ;stkvar	_u @ sp[(-56)+12]
 31185  012136  0ED4               	movlw	-44
 31186  012138  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31187  01213E  0ED5               	movlw	-43
 31188  012140  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31189  012146  0ED6               	movlw	-42
 31190  012148  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31191  01214E  0ED7               	movlw	-41
 31192  012150  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31193                           
 31194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 31195                           ;stkvar	_nmode @ sp[(-56)+55]
 31196  012156  0EFF               	movlw	-1
 31197  012158  006F FF8C  F02A    	movff	plusw1,btemp
 31198  01215E  0E65               	movlw	101
 31199  012160  182A               	xorwf	btemp^0,w,c
 31200  012162  B4D8               	btfsc	status,2,c
 31201  012164  D011               	goto	l15800
 31202                           
 31203                           ;stkvar	_e @ sp[(-56)+34]
 31204                           ;stkvar	_ne @ sp[(-56)+46]
 31205  012166  0EEA               	movlw	-22
 31206  012168  006F FF8C  F02A    	movff	plusw1,btemp
 31207  01216E  0EF6               	movlw	-10
 31208  012170  0060  F0AB  FFE3   	movff	btemp,plusw1
 31209  012176  0EEB               	movlw	-21
 31210  012178  006F FF8C  F02A    	movff	plusw1,btemp
 31211  01217E  0EF7               	movlw	-9
 31212  012180  0060  F0AB  FFE3   	movff	btemp,plusw1
 31213  012186  D004               	goto	l2567
 31214  012188                     l15800:
 31215                           
 31216                           ;stkvar	_ne @ sp[(-56)+46]
 31217  012188  0EF6               	movlw	-10
 31218  01218A  6AE3               	clrf	plusw1,c
 31219  01218C  0EF7               	movlw	-9
 31220  01218E  6AE3               	clrf	plusw1,c
 31221  012190                     l2567:
 31222                           
 31223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 31224                           ;stkvar	_pp @ sp[(-56)+50]
 31225  012190  0EFA               	movlw	-6
 31226  012192  6AE3               	clrf	plusw1,c
 31227  012194  0EFB               	movlw	-5
 31228  012196  6AE3               	clrf	plusw1,c
 31229                           
 31230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 31231                           ;stkvar	_t @ sp[(-56)+52]
 31232  012198  0EFC               	movlw	-4
 31233  01219A  6AE3               	clrf	plusw1,c
 31234  01219C  0EFD               	movlw	-3
 31235  01219E  6AE3               	clrf	plusw1,c
 31236                           
 31237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 31238                           ;stkvar	_i @ sp[(-56)+36]
 31239  0121A0  0EEC               	movlw	-20
 31240  0121A2  6AE3               	clrf	plusw1,c
 31241  0121A4  0EED               	movlw	-19
 31242  0121A6  6AE3               	clrf	plusw1,c
 31243                           
 31244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31245  0121A8  D1B7               	goto	l15852
 31246  0121AA                     l15802:
 31247                           
 31248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 31249                           ;stkvar	_u @ sp[(-56)+12]
 31250  0121AA  0ED4               	movlw	-44
 31251  0121AC  006F FF8F FFE6     	movff	plusw1,postinc1
 31252  0121B2  006F FF8F FFE6     	movff	plusw1,postinc1
 31253  0121B8  006F FF8F FFE6     	movff	plusw1,postinc1
 31254  0121BE  006F FF8F FFE6     	movff	plusw1,postinc1
 31255                           
 31256                           ;stkvar	_h @ sp[(-60)+24]
 31257  0121C4  0EDC               	movlw	-36
 31258  0121C6  006F FF8F FFE6     	movff	plusw1,postinc1
 31259  0121CC  006F FF8F FFE6     	movff	plusw1,postinc1
 31260  0121D2  006F FF8F FFE6     	movff	plusw1,postinc1
 31261  0121D8  006F FF8F FFE6     	movff	plusw1,postinc1
 31262  0121DE  EC2E  F0BE         	call	___fldiv	;wreg free
 31263  0121E2  0060  F0AB  FFE6   	movff	btemp,postinc1
 31264  0121E8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31265  0121EE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31266  0121F4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31267  0121FA  EC45  F0D2         	call	_floorf	;wreg free
 31268                           
 31269                           ;stkvar	_l @ sp[(-56)+20]
 31270  0121FE  0EDC               	movlw	-36
 31271  012200  0060  F0AB  FFE3   	movff	btemp,plusw1
 31272  012206  0EDD               	movlw	-35
 31273  012208  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31274  01220E  0EDE               	movlw	-34
 31275  012210  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31276  012216  0EDF               	movlw	-33
 31277  012218  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31278                           
 31279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 31280                           ;stkvar	_l @ sp[(-56)+20]
 31281  01221E  0EDC               	movlw	-36
 31282  012220  006F FF8F FFE6     	movff	plusw1,postinc1
 31283  012226  006F FF8F FFE6     	movff	plusw1,postinc1
 31284  01222C  006F FF8F FFE6     	movff	plusw1,postinc1
 31285  012232  006F FF8F FFE6     	movff	plusw1,postinc1
 31286  012238  EC33  F0F3         	call	___fltol	;wreg free
 31287  01223C  0060  F0A8  F034   	movff	btemp,btemp+10
 31288  012242  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31289                           
 31290                           ;stkvar	_d @ sp[(-56)+44]
 31291  012248  0EF4               	movlw	-12
 31292  01224A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31293  012250  0EF5               	movlw	-11
 31294  012252  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31295                           
 31296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 31297  012258  B84E               	btfsc	_flags^0,4,c
 31298  01225A  D026               	goto	l15816
 31299                           
 31300                           ;stkvar	_d @ sp[(-56)+44]
 31301  01225C  0EF4               	movlw	-12
 31302  01225E  006F FF8C  F02A    	movff	plusw1,btemp
 31303  012264  0EF5               	movlw	-11
 31304  012266  50E3               	movf	plusw1,w,c
 31305  012268  102A               	iorwf	btemp^0,w,c
 31306  01226A  A4D8               	btfss	status,2,c
 31307  01226C  D01D               	goto	l15816
 31308                           
 31309                           ;stkvar	_mode @ sp[(-56)+54]
 31310  01226E  0EFE               	movlw	-2
 31311  012270  006F FF8C  F02A    	movff	plusw1,btemp
 31312  012276  0E67               	movlw	103
 31313  012278  182A               	xorwf	btemp^0,w,c
 31314  01227A  A4D8               	btfss	status,2,c
 31315  01227C  D015               	goto	l15816
 31316                           
 31317                           ;stkvar	_ne @ sp[(-56)+46]
 31318  01227E  0EF7               	movlw	-9
 31319  012280  AEE3               	btfss	plusw1,7,c
 31320  012282  D012               	goto	l15816
 31321                           
 31322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 31323                           ;stkvar	_t @ sp[(-56)+52]
 31324  012284  0EFC               	movlw	-4
 31325  012286  50E3               	movf	plusw1,w,c
 31326  012288  0F01               	addlw	1
 31327  01228A  6E2A               	movwf	btemp^0,c
 31328  01228C  0EFC               	movlw	-4
 31329  01228E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31330  012294  6A2A               	clrf	btemp^0,c
 31331  012296  0EFD               	movlw	-3
 31332  012298  50E3               	movf	plusw1,w,c
 31333  01229A  202A               	addwfc	btemp^0,w,c
 31334  01229C  6E2A               	movwf	btemp^0,c
 31335  01229E  0EFD               	movlw	-3
 31336  0122A0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31337                           
 31338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 31339  0122A6  D0AF               	goto	l15844
 31340  0122A8                     l15816:
 31341                           
 31342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 31343                           ;stkvar	_pp @ sp[(-56)+50]
 31344  0122A8  0EFA               	movlw	-6
 31345  0122AA  006F FF8C  F02A    	movff	plusw1,btemp
 31346  0122B0  0EFB               	movlw	-5
 31347  0122B2  50E3               	movf	plusw1,w,c
 31348  0122B4  102A               	iorwf	btemp^0,w,c
 31349  0122B6  A4D8               	btfss	status,2,c
 31350  0122B8  D070               	goto	l15836
 31351                           
 31352                           ;stkvar	_ne @ sp[(-56)+46]
 31353  0122BA  0EF7               	movlw	-9
 31354  0122BC  AEE3               	btfss	plusw1,7,c
 31355  0122BE  D06D               	goto	l15836
 31356                           
 31357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 31358                           ;stkvar	_n @ sp[(-56)+32]
 31359  0122C0  0EE8               	movlw	-24
 31360  0122C2  006F FF8C  F034    	movff	plusw1,btemp+10
 31361  0122C8  0EE9               	movlw	-23
 31362  0122CA  006F FF8C  F035    	movff	plusw1,btemp+11
 31363  0122D0  0E54               	movlw	low _dbuf
 31364  0122D2  2434               	addwf	(btemp+10)^0,w,c
 31365  0122D4  6ED9               	movwf	fsr2l,c
 31366  0122D6  0E03               	movlw	high _dbuf
 31367  0122D8  2035               	addwfc	(btemp+11)^0,w,c
 31368  0122DA  6EDA               	movwf	fsr2h,c
 31369  0122DC  0E2E               	movlw	46
 31370  0122DE  6EDF               	movwf	indf2,c
 31371                           
 31372                           ;stkvar	_n @ sp[(-56)+32]
 31373  0122E0  0EE8               	movlw	-24
 31374  0122E2  50E3               	movf	plusw1,w,c
 31375  0122E4  0F01               	addlw	1
 31376  0122E6  6E2A               	movwf	btemp^0,c
 31377  0122E8  0EE8               	movlw	-24
 31378  0122EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31379  0122F0  6A2A               	clrf	btemp^0,c
 31380  0122F2  0EE9               	movlw	-23
 31381  0122F4  50E3               	movf	plusw1,w,c
 31382  0122F6  202A               	addwfc	btemp^0,w,c
 31383  0122F8  6E2A               	movwf	btemp^0,c
 31384  0122FA  0EE9               	movlw	-23
 31385  0122FC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31386                           
 31387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 31388                           ;stkvar	_w @ sp[(-56)+38]
 31389  012302  50E1               	movf	fsr1l,w,c
 31390  012304  0FEE               	addlw	-18
 31391  012306  6ED9               	movwf	fsr2l,c
 31392  012308  50E2               	movf	fsr1h,w,c
 31393  01230A  6EDA               	movwf	fsr2h,c
 31394  01230C  0EFF               	movlw	255
 31395  01230E  22DA               	addwfc	fsr2h,f,c
 31396  012310  06DE               	decf	postinc2,f,c
 31397  012312  0E00               	movlw	0
 31398  012314  5ADD               	subwfb	postdec2,f,c
 31399                           
 31400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 31401  012316  0E01               	movlw	1
 31402  012318  6E34               	movwf	(btemp+10)^0,c
 31403  01231A  0E00               	movlw	0
 31404  01231C  6E35               	movwf	(btemp+11)^0,c
 31405                           
 31406                           ;stkvar	_pp @ sp[(-56)+50]
 31407  01231E  0EFA               	movlw	-6
 31408  012320  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31409  012326  0EFB               	movlw	-5
 31410  012328  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31411  01232E  D035               	goto	l15836
 31412  012330                     l15828:
 31413                           
 31414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 31415                           ;stkvar	_n @ sp[(-56)+32]
 31416  012330  0EE8               	movlw	-24
 31417  012332  006F FF8C  F034    	movff	plusw1,btemp+10
 31418  012338  0EE9               	movlw	-23
 31419  01233A  006F FF8C  F035    	movff	plusw1,btemp+11
 31420  012340  0E54               	movlw	low _dbuf
 31421  012342  2434               	addwf	(btemp+10)^0,w,c
 31422  012344  6ED9               	movwf	fsr2l,c
 31423  012346  0E03               	movlw	high _dbuf
 31424  012348  2035               	addwfc	(btemp+11)^0,w,c
 31425  01234A  6EDA               	movwf	fsr2h,c
 31426  01234C  0E30               	movlw	48
 31427  01234E  6EDF               	movwf	indf2,c
 31428                           
 31429                           ;stkvar	_n @ sp[(-56)+32]
 31430  012350  0EE8               	movlw	-24
 31431  012352  50E3               	movf	plusw1,w,c
 31432  012354  0F01               	addlw	1
 31433  012356  6E2A               	movwf	btemp^0,c
 31434  012358  0EE8               	movlw	-24
 31435  01235A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31436  012360  6A2A               	clrf	btemp^0,c
 31437  012362  0EE9               	movlw	-23
 31438  012364  50E3               	movf	plusw1,w,c
 31439  012366  202A               	addwfc	btemp^0,w,c
 31440  012368  6E2A               	movwf	btemp^0,c
 31441  01236A  0EE9               	movlw	-23
 31442  01236C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31443                           
 31444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 31445                           ;stkvar	_w @ sp[(-56)+38]
 31446  012372  50E1               	movf	fsr1l,w,c
 31447  012374  0FEE               	addlw	-18
 31448  012376  6ED9               	movwf	fsr2l,c
 31449  012378  50E2               	movf	fsr1h,w,c
 31450  01237A  6EDA               	movwf	fsr2h,c
 31451  01237C  0EFF               	movlw	255
 31452  01237E  22DA               	addwfc	fsr2h,f,c
 31453  012380  06DE               	decf	postinc2,f,c
 31454  012382  0E00               	movlw	0
 31455  012384  5ADD               	subwfb	postdec2,f,c
 31456                           
 31457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 31458                           ;stkvar	_t @ sp[(-56)+52]
 31459  012386  50E1               	movf	fsr1l,w,c
 31460  012388  0FFC               	addlw	-4
 31461  01238A  6ED9               	movwf	fsr2l,c
 31462  01238C  50E2               	movf	fsr1h,w,c
 31463  01238E  6EDA               	movwf	fsr2h,c
 31464  012390  0EFF               	movlw	255
 31465  012392  22DA               	addwfc	fsr2h,f,c
 31466  012394  06DE               	decf	postinc2,f,c
 31467  012396  0E00               	movlw	0
 31468  012398  5ADD               	subwfb	postdec2,f,c
 31469  01239A                     l15836:
 31470                           
 31471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 31472                           ;stkvar	_t @ sp[(-56)+52]
 31473  01239A  0EFC               	movlw	-4
 31474  01239C  006F FF8C  F02A    	movff	plusw1,btemp
 31475  0123A2  0EFD               	movlw	-3
 31476  0123A4  50E3               	movf	plusw1,w,c
 31477  0123A6  102A               	iorwf	btemp^0,w,c
 31478  0123A8  A4D8               	btfss	status,2,c
 31479  0123AA  D7C2               	goto	l15828
 31480                           
 31481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 31482                           ;stkvar	_n @ sp[(-56)+32]
 31483  0123AC  0EE8               	movlw	-24
 31484  0123AE  006F FF8C  F034    	movff	plusw1,btemp+10
 31485  0123B4  0EE9               	movlw	-23
 31486  0123B6  006F FF8C  F035    	movff	plusw1,btemp+11
 31487  0123BC  0E54               	movlw	low _dbuf
 31488  0123BE  2434               	addwf	(btemp+10)^0,w,c
 31489  0123C0  6ED9               	movwf	fsr2l,c
 31490  0123C2  0E03               	movlw	high _dbuf
 31491  0123C4  2035               	addwfc	(btemp+11)^0,w,c
 31492  0123C6  6EDA               	movwf	fsr2h,c
 31493                           
 31494                           ;stkvar	_d @ sp[(-56)+44]
 31495  0123C8  0EF4               	movlw	-12
 31496  0123CA  50E3               	movf	plusw1,w,c
 31497  0123CC  0F30               	addlw	48
 31498  0123CE  6EDF               	movwf	indf2,c
 31499                           
 31500                           ;stkvar	_n @ sp[(-56)+32]
 31501  0123D0  0EE8               	movlw	-24
 31502  0123D2  50E3               	movf	plusw1,w,c
 31503  0123D4  0F01               	addlw	1
 31504  0123D6  6E2A               	movwf	btemp^0,c
 31505  0123D8  0EE8               	movlw	-24
 31506  0123DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31507  0123E0  6A2A               	clrf	btemp^0,c
 31508  0123E2  0EE9               	movlw	-23
 31509  0123E4  50E3               	movf	plusw1,w,c
 31510  0123E6  202A               	addwfc	btemp^0,w,c
 31511  0123E8  6E2A               	movwf	btemp^0,c
 31512  0123EA  0EE9               	movlw	-23
 31513  0123EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31514                           
 31515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 31516                           ;stkvar	_w @ sp[(-56)+38]
 31517  0123F2  50E1               	movf	fsr1l,w,c
 31518  0123F4  0FEE               	addlw	-18
 31519  0123F6  6ED9               	movwf	fsr2l,c
 31520  0123F8  50E2               	movf	fsr1h,w,c
 31521  0123FA  6EDA               	movwf	fsr2h,c
 31522  0123FC  0EFF               	movlw	255
 31523  0123FE  22DA               	addwfc	fsr2h,f,c
 31524  012400  06DE               	decf	postinc2,f,c
 31525  012402  0E00               	movlw	0
 31526  012404  5ADD               	subwfb	postdec2,f,c
 31527  012406                     l15844:
 31528                           
 31529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 31530                           ;stkvar	_u @ sp[(-56)+12]
 31531  012406  0ED4               	movlw	-44
 31532  012408  006F FF8F FFE6     	movff	plusw1,postinc1
 31533  01240E  006F FF8F FFE6     	movff	plusw1,postinc1
 31534  012414  006F FF8F FFE6     	movff	plusw1,postinc1
 31535  01241A  006F FF8F FFE6     	movff	plusw1,postinc1
 31536                           
 31537                           ;stkvar	_l @ sp[(-60)+20]
 31538  012420  0ED8               	movlw	-40
 31539  012422  006F FF8F FFE6     	movff	plusw1,postinc1
 31540  012428  006F FF8F FFE6     	movff	plusw1,postinc1
 31541  01242E  006F FF8F FFE6     	movff	plusw1,postinc1
 31542  012434  006F FF8F FFE6     	movff	plusw1,postinc1
 31543  01243A  ECDD  F0B2         	call	___flmul	;wreg free
 31544  01243E  0060  F0AB  FFE6   	movff	btemp,postinc1
 31545  012444  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31546  01244A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31547  012450  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31548                           
 31549                           ;stkvar	_h @ sp[(-60)+24]
 31550  012456  0EDC               	movlw	-36
 31551  012458  006F FF8F FFE6     	movff	plusw1,postinc1
 31552  01245E  006F FF8F FFE6     	movff	plusw1,postinc1
 31553  012464  006F FF8F FFE6     	movff	plusw1,postinc1
 31554  01246A  006F FF8F FFE6     	movff	plusw1,postinc1
 31555  012470  ECD2  F00E         	call	___flsub	;wreg free
 31556                           
 31557                           ;stkvar	_h @ sp[(-56)+24]
 31558  012474  0EE0               	movlw	-32
 31559  012476  0060  F0AB  FFE3   	movff	btemp,plusw1
 31560  01247C  0EE1               	movlw	-31
 31561  01247E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31562  012484  0EE2               	movlw	-30
 31563  012486  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31564  01248C  0EE3               	movlw	-29
 31565  01248E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31566                           
 31567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 31568  012494  0E00               	movlw	0
 31569  012496  6EE6               	movwf	postinc1,c
 31570  012498  0E00               	movlw	0
 31571  01249A  6EE6               	movwf	postinc1,c
 31572  01249C  0E20               	movlw	32
 31573  01249E  6EE6               	movwf	postinc1,c
 31574  0124A0  0E41               	movlw	65
 31575  0124A2  6EE6               	movwf	postinc1,c
 31576                           
 31577                           ;stkvar	_u @ sp[(-60)+12]
 31578  0124A4  0ED0               	movlw	-48
 31579  0124A6  006F FF8F FFE6     	movff	plusw1,postinc1
 31580  0124AC  006F FF8F FFE6     	movff	plusw1,postinc1
 31581  0124B2  006F FF8F FFE6     	movff	plusw1,postinc1
 31582  0124B8  006F FF8F FFE6     	movff	plusw1,postinc1
 31583  0124BE  EC2E  F0BE         	call	___fldiv	;wreg free
 31584                           
 31585                           ;stkvar	_u @ sp[(-56)+12]
 31586  0124C2  0ED4               	movlw	-44
 31587  0124C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31588  0124CA  0ED5               	movlw	-43
 31589  0124CC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31590  0124D2  0ED6               	movlw	-42
 31591  0124D4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31592  0124DA  0ED7               	movlw	-41
 31593  0124DC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31594                           
 31595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 31596                           ;stkvar	_ne @ sp[(-56)+46]
 31597  0124E2  50E1               	movf	fsr1l,w,c
 31598  0124E4  0FF6               	addlw	-10
 31599  0124E6  6ED9               	movwf	fsr2l,c
 31600  0124E8  50E2               	movf	fsr1h,w,c
 31601  0124EA  6EDA               	movwf	fsr2h,c
 31602  0124EC  0EFF               	movlw	255
 31603  0124EE  22DA               	addwfc	fsr2h,f,c
 31604  0124F0  06DE               	decf	postinc2,f,c
 31605  0124F2  0E00               	movlw	0
 31606  0124F4  5ADD               	subwfb	postdec2,f,c
 31607                           
 31608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 31609                           ;stkvar	_i @ sp[(-56)+36]
 31610  0124F6  0EEC               	movlw	-20
 31611  0124F8  50E3               	movf	plusw1,w,c
 31612  0124FA  0F01               	addlw	1
 31613  0124FC  6E2A               	movwf	btemp^0,c
 31614  0124FE  0EEC               	movlw	-20
 31615  012500  0060  F0AB  FFE3   	movff	btemp,plusw1
 31616  012506  6A2A               	clrf	btemp^0,c
 31617  012508  0EED               	movlw	-19
 31618  01250A  50E3               	movf	plusw1,w,c
 31619  01250C  202A               	addwfc	btemp^0,w,c
 31620  01250E  6E2A               	movwf	btemp^0,c
 31621  012510  0EED               	movlw	-19
 31622  012512  0060  F0AB  FFE3   	movff	btemp,plusw1
 31623  012518                     l15852:
 31624                           
 31625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31626                           ;stkvar	_m @ sp[(-56)+48]
 31627                           ;stkvar	_i @ sp[(-56)+36]
 31628  012518  50E1               	movf	fsr1l,w,c
 31629  01251A  0FEC               	addlw	-20
 31630  01251C  6ED9               	movwf	fsr2l,c
 31631  01251E  50E2               	movf	fsr1h,w,c
 31632  012520  6EDA               	movwf	fsr2h,c
 31633  012522  0EFF               	movlw	255
 31634  012524  22DA               	addwfc	fsr2h,f,c
 31635  012526  0EF8               	movlw	-8
 31636  012528  50E3               	movf	plusw1,w,c
 31637  01252A  5CDE               	subwf	postinc2,w,c
 31638  01252C  50DE               	movf	postinc2,w,c
 31639  01252E  0A80               	xorlw	128
 31640  012530  6E2A               	movwf	btemp^0,c
 31641  012532  0EF9               	movlw	-7
 31642  012534  50E3               	movf	plusw1,w,c
 31643  012536  0A80               	xorlw	128
 31644  012538  582A               	subwfb	btemp^0,w,c
 31645  01253A  B0D8               	btfsc	status,0,c
 31646  01253C  D00E               	goto	u15120
 31647                           
 31648                           ;stkvar	_n @ sp[(-56)+32]
 31649  01253E  0EE9               	movlw	-23
 31650  012540  BEE3               	btfsc	plusw1,7,c
 31651  012542  D633               	goto	l15802
 31652  012544  0EE9               	movlw	-23
 31653  012546  50E3               	movf	plusw1,w,c
 31654  012548  E108               	bnz	u15120
 31655  01254A  0EE8               	movlw	-24
 31656  01254C  006F FF8C  F02A    	movff	plusw1,btemp
 31657  012552  0E4B               	movlw	75
 31658  012554  5E2A               	subwf	btemp^0,f,c
 31659  012556  A0D8               	btfss	status,0,c
 31660  012558  D628               	goto	l15802
 31661  01255A                     u15120:
 31662                           
 31663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 31664                           ;stkvar	_pp @ sp[(-56)+50]
 31665  01255A  0EFA               	movlw	-6
 31666  01255C  006F FF8C  F02A    	movff	plusw1,btemp
 31667  012562  0EFB               	movlw	-5
 31668  012564  50E3               	movf	plusw1,w,c
 31669  012566  102A               	iorwf	btemp^0,w,c
 31670  012568  B4D8               	btfsc	status,2,c
 31671  01256A  A84E               	btfss	_flags^0,4,c
 31672  01256C  D021               	goto	l15864
 31673                           
 31674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 31675                           ;stkvar	_n @ sp[(-56)+32]
 31676  01256E  0EE8               	movlw	-24
 31677  012570  006F FF8C  F034    	movff	plusw1,btemp+10
 31678  012576  0EE9               	movlw	-23
 31679  012578  006F FF8C  F035    	movff	plusw1,btemp+11
 31680  01257E  0E54               	movlw	low _dbuf
 31681  012580  2434               	addwf	(btemp+10)^0,w,c
 31682  012582  6ED9               	movwf	fsr2l,c
 31683  012584  0E03               	movlw	high _dbuf
 31684  012586  2035               	addwfc	(btemp+11)^0,w,c
 31685  012588  6EDA               	movwf	fsr2h,c
 31686  01258A  0E2E               	movlw	46
 31687  01258C  6EDF               	movwf	indf2,c
 31688                           
 31689                           ;stkvar	_n @ sp[(-56)+32]
 31690  01258E  0EE8               	movlw	-24
 31691  012590  50E3               	movf	plusw1,w,c
 31692  012592  0F01               	addlw	1
 31693  012594  6E2A               	movwf	btemp^0,c
 31694  012596  0EE8               	movlw	-24
 31695  012598  0060  F0AB  FFE3   	movff	btemp,plusw1
 31696  01259E  6A2A               	clrf	btemp^0,c
 31697  0125A0  0EE9               	movlw	-23
 31698  0125A2  50E3               	movf	plusw1,w,c
 31699  0125A4  202A               	addwfc	btemp^0,w,c
 31700  0125A6  6E2A               	movwf	btemp^0,c
 31701  0125A8  0EE9               	movlw	-23
 31702  0125AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31703  0125B0                     l15864:
 31704                           
 31705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 31706                           ;stkvar	_n @ sp[(-56)+32]
 31707  0125B0  0EE8               	movlw	-24
 31708  0125B2  006F FF8C  F034    	movff	plusw1,btemp+10
 31709  0125B8  0EE9               	movlw	-23
 31710  0125BA  006F FF8C  F035    	movff	plusw1,btemp+11
 31711  0125C0  0E54               	movlw	low _dbuf
 31712  0125C2  2434               	addwf	(btemp+10)^0,w,c
 31713  0125C4  6ED9               	movwf	fsr2l,c
 31714  0125C6  0E03               	movlw	high _dbuf
 31715  0125C8  2035               	addwfc	(btemp+11)^0,w,c
 31716  0125CA  6EDA               	movwf	fsr2h,c
 31717  0125CC  0E00               	movlw	0
 31718  0125CE  6EDF               	movwf	indf2,c
 31719                           
 31720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 31721                           ;stkvar	_nmode @ sp[(-56)+55]
 31722  0125D0  0EFF               	movlw	-1
 31723  0125D2  006F FF8C  F02A    	movff	plusw1,btemp
 31724  0125D8  0E65               	movlw	101
 31725  0125DA  182A               	xorwf	btemp^0,w,c
 31726  0125DC  A4D8               	btfss	status,2,c
 31727  0125DE  EF51  F08C         	goto	l15668
 31728                           
 31729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 31730  0125E2  0E4F               	movlw	79
 31731  0125E4  6E34               	movwf	(btemp+10)^0,c
 31732  0125E6  0E00               	movlw	0
 31733  0125E8  6E35               	movwf	(btemp+11)^0,c
 31734                           
 31735                           ;stkvar	_i @ sp[(-56)+36]
 31736  0125EA  0EEC               	movlw	-20
 31737  0125EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31738  0125F2  0EED               	movlw	-19
 31739  0125F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31740                           
 31741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 31742                           ;stkvar	_i @ sp[(-56)+36]
 31743  0125FA  0EEC               	movlw	-20
 31744  0125FC  006F FF8C  F034    	movff	plusw1,btemp+10
 31745  012602  0EED               	movlw	-19
 31746  012604  006F FF8C  F035    	movff	plusw1,btemp+11
 31747  01260A  0E54               	movlw	low _dbuf
 31748  01260C  2434               	addwf	(btemp+10)^0,w,c
 31749  01260E  6ED9               	movwf	fsr2l,c
 31750  012610  0E03               	movlw	high _dbuf
 31751  012612  2035               	addwfc	(btemp+11)^0,w,c
 31752  012614  6EDA               	movwf	fsr2h,c
 31753  012616  0E00               	movlw	0
 31754  012618  6EDF               	movwf	indf2,c
 31755                           
 31756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 31757                           ;stkvar	_sign @ sp[(-56)+42]
 31758  01261A  0EF2               	movlw	-14
 31759  01261C  6AE3               	clrf	plusw1,c
 31760  01261E  0EF3               	movlw	-13
 31761  012620  6AE3               	clrf	plusw1,c
 31762                           
 31763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 31764                           ;stkvar	_e @ sp[(-56)+34]
 31765  012622  0EEB               	movlw	-21
 31766  012624  AEE3               	btfss	plusw1,7,c
 31767  012626  D012               	goto	l15878
 31768                           
 31769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 31770  012628  0E01               	movlw	1
 31771  01262A  6E34               	movwf	(btemp+10)^0,c
 31772  01262C  0E00               	movlw	0
 31773  01262E  6E35               	movwf	(btemp+11)^0,c
 31774                           
 31775                           ;stkvar	_sign @ sp[(-56)+42]
 31776  012630  0EF2               	movlw	-14
 31777  012632  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31778  012638  0EF3               	movlw	-13
 31779  01263A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31780                           
 31781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 31782                           ;stkvar	_e @ sp[(-56)+34]
 31783                           ;stkvar	_e @ sp[(-56)+34]
 31784  012640  0EEA               	movlw	-22
 31785  012642  6CE3               	negf	plusw1,c
 31786  012644  0EEB               	movlw	-21
 31787  012646  1EE3               	comf	plusw1,f,c
 31788  012648  B0D8               	btfsc	status,0,c
 31789  01264A  2AE3               	incf	plusw1,f,c
 31790  01264C                     l15878:
 31791                           
 31792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 31793  01264C  0E02               	movlw	2
 31794  01264E  6E34               	movwf	(btemp+10)^0,c
 31795  012650  0E00               	movlw	0
 31796  012652  6E35               	movwf	(btemp+11)^0,c
 31797                           
 31798                           ;stkvar	_p @ sp[(-56)+40]
 31799  012654  0EF0               	movlw	-16
 31800  012656  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31801  01265C  0EF1               	movlw	-15
 31802  01265E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31803                           
 31804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31805  012664  D051               	goto	l15890
 31806  012666                     l15880:
 31807                           
 31808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 31809                           ;stkvar	_i @ sp[(-56)+36]
 31810  012666  50E1               	movf	fsr1l,w,c
 31811  012668  0FEC               	addlw	-20
 31812  01266A  6ED9               	movwf	fsr2l,c
 31813  01266C  50E2               	movf	fsr1h,w,c
 31814  01266E  6EDA               	movwf	fsr2h,c
 31815  012670  0EFF               	movlw	255
 31816  012672  22DA               	addwfc	fsr2h,f,c
 31817  012674  06DE               	decf	postinc2,f,c
 31818  012676  0E00               	movlw	0
 31819  012678  5ADD               	subwfb	postdec2,f,c
 31820                           
 31821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 31822                           ;stkvar	_i @ sp[(-56)+36]
 31823  01267A  0EEC               	movlw	-20
 31824  01267C  006F FF8C  F034    	movff	plusw1,btemp+10
 31825  012682  0EED               	movlw	-19
 31826  012684  006F FF8C  F035    	movff	plusw1,btemp+11
 31827  01268A  0E54               	movlw	low _dbuf
 31828  01268C  2434               	addwf	(btemp+10)^0,w,c
 31829  01268E  6ED9               	movwf	fsr2l,c
 31830  012690  0E03               	movlw	high _dbuf
 31831  012692  2035               	addwfc	(btemp+11)^0,w,c
 31832  012694  6EDA               	movwf	fsr2h,c
 31833  012696  0E0A               	movlw	10
 31834  012698  6EE6               	movwf	postinc1,c
 31835  01269A  0E00               	movlw	0
 31836  01269C  6EE6               	movwf	postinc1,c
 31837                           
 31838                           ;stkvar	_e @ sp[(-58)+34]
 31839  01269E  0EE8               	movlw	-24
 31840  0126A0  006F FF8F FFE6     	movff	plusw1,postinc1
 31841  0126A6  006F FF8F FFE6     	movff	plusw1,postinc1
 31842  0126AC  EC39  F0FC         	call	___awmod	;wreg free
 31843  0126B0  502A               	movf	btemp^0,w,c
 31844  0126B2  0F30               	addlw	48
 31845  0126B4  6EDF               	movwf	indf2,c
 31846                           
 31847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 31848  0126B6  0E0A               	movlw	10
 31849  0126B8  6EE6               	movwf	postinc1,c
 31850  0126BA  0E00               	movlw	0
 31851  0126BC  6EE6               	movwf	postinc1,c
 31852                           
 31853                           ;stkvar	_e @ sp[(-58)+34]
 31854  0126BE  0EE8               	movlw	-24
 31855  0126C0  006F FF8F FFE6     	movff	plusw1,postinc1
 31856  0126C6  006F FF8F FFE6     	movff	plusw1,postinc1
 31857  0126CC  EC0A  F0F8         	call	___awdiv	;wreg free
 31858                           
 31859                           ;stkvar	_e @ sp[(-56)+34]
 31860  0126D0  0EEA               	movlw	-22
 31861  0126D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31862  0126D8  0EEB               	movlw	-21
 31863  0126DA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31864                           
 31865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 31866                           ;stkvar	_p @ sp[(-56)+40]
 31867  0126E0  50E1               	movf	fsr1l,w,c
 31868  0126E2  0FF0               	addlw	-16
 31869  0126E4  6ED9               	movwf	fsr2l,c
 31870  0126E6  50E2               	movf	fsr1h,w,c
 31871  0126E8  6EDA               	movwf	fsr2h,c
 31872  0126EA  0EFF               	movlw	255
 31873  0126EC  22DA               	addwfc	fsr2h,f,c
 31874  0126EE  06DE               	decf	postinc2,f,c
 31875  0126F0  0E00               	movlw	0
 31876  0126F2  5ADD               	subwfb	postdec2,f,c
 31877                           
 31878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 31879                           ;stkvar	_w @ sp[(-56)+38]
 31880  0126F4  50E1               	movf	fsr1l,w,c
 31881  0126F6  0FEE               	addlw	-18
 31882  0126F8  6ED9               	movwf	fsr2l,c
 31883  0126FA  50E2               	movf	fsr1h,w,c
 31884  0126FC  6EDA               	movwf	fsr2h,c
 31885  0126FE  0EFF               	movlw	255
 31886  012700  22DA               	addwfc	fsr2h,f,c
 31887  012702  06DE               	decf	postinc2,f,c
 31888  012704  0E00               	movlw	0
 31889  012706  5ADD               	subwfb	postdec2,f,c
 31890  012708                     l15890:
 31891                           
 31892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31893                           ;stkvar	_e @ sp[(-56)+34]
 31894  012708  0EEA               	movlw	-22
 31895  01270A  006F FF8C  F02A    	movff	plusw1,btemp
 31896  012710  0EEB               	movlw	-21
 31897  012712  50E3               	movf	plusw1,w,c
 31898  012714  102A               	iorwf	btemp^0,w,c
 31899  012716  A4D8               	btfss	status,2,c
 31900  012718  D7A6               	goto	l15880
 31901                           
 31902                           ;stkvar	_p @ sp[(-56)+40]
 31903  01271A  0EF1               	movlw	-15
 31904  01271C  BEE3               	btfsc	plusw1,7,c
 31905  01271E  D007               	goto	u15180
 31906  012720  0EF1               	movlw	-15
 31907  012722  50E3               	movf	plusw1,w,c
 31908  012724  E1A0               	bnz	l15880
 31909  012726  0EF0               	movlw	-16
 31910  012728  04E3               	decf	plusw1,w,c
 31911  01272A  B0D8               	btfsc	status,0,c
 31912  01272C  D79C               	goto	l15880
 31913  01272E                     u15180:
 31914                           
 31915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 31916                           ;stkvar	_i @ sp[(-56)+36]
 31917  01272E  50E1               	movf	fsr1l,w,c
 31918  012730  0FEC               	addlw	-20
 31919  012732  6ED9               	movwf	fsr2l,c
 31920  012734  50E2               	movf	fsr1h,w,c
 31921  012736  6EDA               	movwf	fsr2h,c
 31922  012738  0EFF               	movlw	255
 31923  01273A  22DA               	addwfc	fsr2h,f,c
 31924  01273C  06DE               	decf	postinc2,f,c
 31925  01273E  0E00               	movlw	0
 31926  012740  5ADD               	subwfb	postdec2,f,c
 31927                           
 31928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 31929                           ;stkvar	_sign @ sp[(-56)+42]
 31930  012742  0EF2               	movlw	-14
 31931  012744  006F FF8C  F02A    	movff	plusw1,btemp
 31932  01274A  0EF3               	movlw	-13
 31933  01274C  50E3               	movf	plusw1,w,c
 31934  01274E  102A               	iorwf	btemp^0,w,c
 31935  012750  A4D8               	btfss	status,2,c
 31936  012752  D002               	goto	l15900
 31937  012754  0E2B               	movlw	43
 31938  012756  D001               	goto	L33
 31939  012758                     l15900:
 31940  012758  0E2D               	movlw	45
 31941  01275A                     L33:
 31942  01275A  6E34               	movwf	(btemp+10)^0,c
 31943  01275C  0E00               	movlw	0
 31944  01275E  6E35               	movwf	(btemp+11)^0,c
 31945                           
 31946                           ;stkvar	_efgtoa$6621 @ sp[(-56)+4]
 31947  012760  0ECC               	movlw	-52
 31948  012762  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31949  012768  0ECD               	movlw	-51
 31950  01276A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31951                           
 31952                           ;stkvar	_efgtoa$6621 @ sp[(-56)+4]
 31953                           ;stkvar	_i @ sp[(-56)+36]
 31954  012770  0EEC               	movlw	-20
 31955  012772  006F FF8C  F034    	movff	plusw1,btemp+10
 31956  012778  0EED               	movlw	-19
 31957  01277A  006F FF8C  F035    	movff	plusw1,btemp+11
 31958  012780  0E54               	movlw	low _dbuf
 31959  012782  2434               	addwf	(btemp+10)^0,w,c
 31960  012784  6ED9               	movwf	fsr2l,c
 31961  012786  0E03               	movlw	high _dbuf
 31962  012788  2035               	addwfc	(btemp+11)^0,w,c
 31963  01278A  6EDA               	movwf	fsr2h,c
 31964  01278C  0ECC               	movlw	-52
 31965  01278E  006F FF8F FFDF     	movff	plusw1,indf2
 31966                           
 31967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 31968                           ;stkvar	_w @ sp[(-56)+38]
 31969  012794  50E1               	movf	fsr1l,w,c
 31970  012796  0FEE               	addlw	-18
 31971  012798  6ED9               	movwf	fsr2l,c
 31972  01279A  50E2               	movf	fsr1h,w,c
 31973  01279C  6EDA               	movwf	fsr2h,c
 31974  01279E  0EFF               	movlw	255
 31975  0127A0  22DA               	addwfc	fsr2h,f,c
 31976  0127A2  06DE               	decf	postinc2,f,c
 31977  0127A4  0E00               	movlw	0
 31978  0127A6  5ADD               	subwfb	postdec2,f,c
 31979                           
 31980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 31981                           ;stkvar	_i @ sp[(-56)+36]
 31982  0127A8  50E1               	movf	fsr1l,w,c
 31983  0127AA  0FEC               	addlw	-20
 31984  0127AC  6ED9               	movwf	fsr2l,c
 31985  0127AE  50E2               	movf	fsr1h,w,c
 31986  0127B0  6EDA               	movwf	fsr2h,c
 31987  0127B2  0EFF               	movlw	255
 31988  0127B4  22DA               	addwfc	fsr2h,f,c
 31989  0127B6  06DE               	decf	postinc2,f,c
 31990  0127B8  0E00               	movlw	0
 31991  0127BA  5ADD               	subwfb	postdec2,f,c
 31992  0127BC  0EBF               	movlw	191
 31993  0127BE  6E34               	movwf	(btemp+10)^0,c
 31994  0127C0  0EFF               	movlw	255
 31995  0127C2  6E35               	movwf	(btemp+11)^0,c
 31996                           
 31997                           ;stkvar	_c @ sp[(-56)+-7]
 31998  0127C4  0EC1               	movlw	-63
 31999  0127C6  50E3               	movf	plusw1,w,c
 32000  0127C8  6E32               	movwf	(btemp+8)^0,c
 32001  0127CA  6A33               	clrf	(btemp+9)^0,c
 32002  0127CC  5034               	movf	(btemp+10)^0,w,c
 32003  0127CE  2632               	addwf	(btemp+8)^0,f,c
 32004  0127D0  5035               	movf	(btemp+11)^0,w,c
 32005  0127D2  2233               	addwfc	(btemp+9)^0,f,c
 32006  0127D4  5033               	movf	(btemp+9)^0,w,c
 32007  0127D6  E106               	bnz	u15200
 32008  0127D8  0E1A               	movlw	26
 32009  0127DA  5C32               	subwf	(btemp+8)^0,w,c
 32010  0127DC  B0D8               	btfsc	status,0,c
 32011  0127DE  D002               	goto	u15200
 32012  0127E0  0E01               	movlw	1
 32013  0127E2  D001               	goto	u15210
 32014  0127E4                     u15200:
 32015  0127E4  0E00               	movlw	0
 32016  0127E6                     u15210:
 32017  0127E6  6E34               	movwf	(btemp+10)^0,c
 32018  0127E8  6A35               	clrf	(btemp+11)^0,c
 32019                           
 32020                           ;stkvar	_efgtoa$6623 @ sp[(-56)+0]
 32021  0127EA  0EC8               	movlw	-56
 32022  0127EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32023  0127F2  0EC9               	movlw	-55
 32024  0127F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32025                           
 32026                           ;stkvar	_efgtoa$6623 @ sp[(-56)+0]
 32027  0127FA  0EC8               	movlw	-56
 32028  0127FC  006F FF8C  F02A    	movff	plusw1,btemp
 32029  012802  0EC9               	movlw	-55
 32030  012804  50E3               	movf	plusw1,w,c
 32031  012806  102A               	iorwf	btemp^0,w,c
 32032  012808  A4D8               	btfss	status,2,c
 32033  01280A  D002               	goto	l15916
 32034  01280C  0E65               	movlw	101
 32035  01280E  D001               	goto	L34
 32036  012810                     l15916:
 32037  012810  0E45               	movlw	69
 32038  012812                     L34:
 32039  012812  6E34               	movwf	(btemp+10)^0,c
 32040  012814  0E00               	movlw	0
 32041  012816  6E35               	movwf	(btemp+11)^0,c
 32042                           
 32043                           ;stkvar	_efgtoa$6622 @ sp[(-56)+2]
 32044  012818  0ECA               	movlw	-54
 32045  01281A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32046  012820  0ECB               	movlw	-53
 32047  012822  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32048                           
 32049                           ;stkvar	_efgtoa$6622 @ sp[(-56)+2]
 32050                           ;stkvar	_i @ sp[(-56)+36]
 32051  012828  0EEC               	movlw	-20
 32052  01282A  006F FF8C  F034    	movff	plusw1,btemp+10
 32053  012830  0EED               	movlw	-19
 32054  012832  006F FF8C  F035    	movff	plusw1,btemp+11
 32055  012838  0E54               	movlw	low _dbuf
 32056  01283A  2434               	addwf	(btemp+10)^0,w,c
 32057  01283C  6ED9               	movwf	fsr2l,c
 32058  01283E  0E03               	movlw	high _dbuf
 32059  012840  2035               	addwfc	(btemp+11)^0,w,c
 32060  012842  6EDA               	movwf	fsr2h,c
 32061  012844  0ECA               	movlw	-54
 32062  012846  006F FF8F FFDF     	movff	plusw1,indf2
 32063                           
 32064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 32065                           ;stkvar	_w @ sp[(-56)+38]
 32066  01284C  50E1               	movf	fsr1l,w,c
 32067  01284E  0FEE               	addlw	-18
 32068  012850  6ED9               	movwf	fsr2l,c
 32069  012852  50E2               	movf	fsr1h,w,c
 32070  012854  6EDA               	movwf	fsr2h,c
 32071  012856  0EFF               	movlw	255
 32072  012858  22DA               	addwfc	fsr2h,f,c
 32073  01285A  06DE               	decf	postinc2,f,c
 32074  01285C  0E00               	movlw	0
 32075  01285E  5ADD               	subwfb	postdec2,f,c
 32076                           
 32077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 32078                           ;stkvar	_i @ sp[(-56)+36]
 32079  012860  0EEC               	movlw	-20
 32080  012862  006F FF8C  F034    	movff	plusw1,btemp+10
 32081  012868  0EED               	movlw	-19
 32082  01286A  006F FF8C  F035    	movff	plusw1,btemp+11
 32083  012870  0E54               	movlw	low _dbuf
 32084  012872  2434               	addwf	(btemp+10)^0,w,c
 32085  012874  6E32               	movwf	(btemp+8)^0,c
 32086  012876  0E03               	movlw	high _dbuf
 32087  012878  2035               	addwfc	(btemp+11)^0,w,c
 32088  01287A  6E33               	movwf	(btemp+9)^0,c
 32089  01287C  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 32090  012882  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 32091                           
 32092                           ;stkvar	_n @ sp[(-58)+32]
 32093  012888  0E54               	movlw	low _dbuf
 32094  01288A  6E34               	movwf	(btemp+10)^0,c
 32095  01288C  0E03               	movlw	high _dbuf
 32096  01288E  6E35               	movwf	(btemp+11)^0,c
 32097  012890  0EE6               	movlw	-26
 32098  012892  50E3               	movf	plusw1,w,c
 32099  012894  2634               	addwf	(btemp+10)^0,f,c
 32100  012896  0EE7               	movlw	-25
 32101  012898  50E3               	movf	plusw1,w,c
 32102  01289A  2235               	addwfc	(btemp+11)^0,f,c
 32103  01289C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 32104  0128A2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 32105  0128A8  ECB1  F001         	call	_strcpy	;wreg free
 32106  0128AC  EF51  F08C         	goto	l15668
 32107  0128B0                     l2523:
 32108                           
 32109                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 32110  0128B0  0EC1               	movlw	193
 32111  0128B2  26E1               	addwf	fsr1l,f,c
 32112  0128B4  0EFF               	movlw	255
 32113  0128B6  22E2               	addwfc	fsr1h,f,c
 32114  0128B8  0012               	return		;funcret
 32115  0128BA                     __end_of_efgtoa:
 32116                           	opt callstack 0
 32117                           
 32118 ;; *************** function _tolower *****************
 32119 ;; Defined at:
 32120 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 32121 ;; Parameters:    Size  Location     Type
 32122 ;;  c               2  [STACK] int 
 32123 ;; Auto vars:     Size  Location     Type
 32124 ;;		None
 32125 ;; Return value:  Size  Location     Type
 32126 ;;                  2  [STACK] int 
 32127 ;; Registers used:
 32128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 32129 ;; Tracked objects:
 32130 ;;		On entry : 0/0
 32131 ;;		On exit  : 0/0
 32132 ;;		Unchanged: 0/0
 32133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32138 ;;Total ram usage:        0 bytes
 32139 ;; Hardware stack levels used:    1
 32140 ;; Hardware stack levels required when called:   16
 32141 ;; This function calls:
 32142 ;;		_isupper
 32143 ;; This function is called by:
 32144 ;;		_efgtoa
 32145 ;;		_vfpfcnvrt
 32146 ;; This function uses a reentrant model
 32147 ;;
 32148                           
 32149                           	psect	text104
 32150  0011B4                     __ptext104:
 32151                           	opt callstack 0
 32152  0011B4                     _tolower:
 32153                           	opt callstack 0
 32154                           
 32155                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32156  0011B4  52E6               	movf	postinc1,f,c
 32157  0011B6  52E6               	movf	postinc1,f,c
 32158                           
 32159                           ;stkvar	_c @ sp[(-2)+-2]
 32160                           
 32161                           ;incstack = 0
 32162 ;; hardware stack exceeded
 32163  0011B8  0EFC               	movlw	-4
 32164  0011BA  50E3               	movf	plusw1,w,c
 32165  0011BC  0FBF               	addlw	191
 32166  0011BE  6E34               	movwf	(btemp+10)^0,c
 32167  0011C0  0EFD               	movlw	-3
 32168  0011C2  006F FF8C  F035    	movff	plusw1,btemp+11
 32169  0011C8  0EFF               	movlw	255
 32170  0011CA  2235               	addwfc	(btemp+11)^0,f,c
 32171  0011CC  5035               	movf	(btemp+11)^0,w,c
 32172  0011CE  E106               	bnz	u7840
 32173  0011D0  0E1A               	movlw	26
 32174  0011D2  5C34               	subwf	(btemp+10)^0,w,c
 32175  0011D4  B0D8               	btfsc	status,0,c
 32176  0011D6  D002               	goto	u7840
 32177  0011D8  0E01               	movlw	1
 32178  0011DA  D001               	goto	u7850
 32179  0011DC                     u7840:
 32180  0011DC  0E00               	movlw	0
 32181  0011DE                     u7850:
 32182  0011DE  6E34               	movwf	(btemp+10)^0,c
 32183  0011E0  6A35               	clrf	(btemp+11)^0,c
 32184                           
 32185                           ;stkvar	_tolower$7577 @ sp[(-2)+0]
 32186  0011E2  0EFE               	movlw	-2
 32187  0011E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32188  0011EA  0EFF               	movlw	-1
 32189  0011EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32190                           
 32191                           ;stkvar	_tolower$7577 @ sp[(-2)+0]
 32192  0011F2  0EFE               	movlw	-2
 32193  0011F4  006F FF8C  F02A    	movff	plusw1,btemp
 32194  0011FA  0EFF               	movlw	-1
 32195  0011FC  50E3               	movf	plusw1,w,c
 32196  0011FE  102A               	iorwf	btemp^0,w,c
 32197  001200  B4D8               	btfsc	status,2,c
 32198  001202  D00D               	goto	l10132
 32199                           
 32200                           ;stkvar	_c @ sp[(-2)+-2]
 32201  001204  0EFC               	movlw	-4
 32202  001206  006F FF8C  F02A    	movff	plusw1,btemp
 32203  00120C  0EFD               	movlw	-3
 32204  00120E  006F FF8C  F02B    	movff	plusw1,btemp+1
 32205  001214  0E20               	movlw	32
 32206  001216  122A               	iorwf	btemp^0,f,c
 32207  001218  0E00               	movlw	0
 32208  00121A  122B               	iorwf	(btemp+1)^0,f,c
 32209  00121C  D008               	goto	l3825
 32210  00121E                     l10132:
 32211                           
 32212                           ;stkvar	_c @ sp[(-2)+-2]
 32213  00121E  0EFC               	movlw	-4
 32214  001220  006F FF8C  F02A    	movff	plusw1,btemp
 32215  001226  0EFD               	movlw	-3
 32216  001228  006F FF8C  F02B    	movff	plusw1,btemp+1
 32217  00122E                     l3825:
 32218                           
 32219                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32220  00122E  52E5               	movf	postdec1,f,c
 32221  001230  52E5               	movf	postdec1,f,c
 32222  001232  52E5               	movf	postdec1,f,c
 32223  001234  52E5               	movf	postdec1,f,c
 32224  001236  0012               	return		;funcret
 32225  001238                     __end_of_tolower:
 32226                           	opt callstack 0
 32227                           
 32228 ;; *************** function _isupper *****************
 32229 ;; Defined at:
 32230 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 32231 ;; Parameters:    Size  Location     Type
 32232 ;;  c               2  [STACK] int 
 32233 ;; Auto vars:     Size  Location     Type
 32234 ;;		None
 32235 ;; Return value:  Size  Location     Type
 32236 ;;                  2  [STACK] int 
 32237 ;; Registers used:
 32238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32239 ;; Tracked objects:
 32240 ;;		On entry : 0/0
 32241 ;;		On exit  : 0/0
 32242 ;;		Unchanged: 0/0
 32243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32248 ;;Total ram usage:        0 bytes
 32249 ;; Hardware stack levels used:    1
 32250 ;; Hardware stack levels required when called:   15
 32251 ;; This function calls:
 32252 ;;		Nothing
 32253 ;; This function is called by:
 32254 ;;		_efgtoa
 32255 ;;		_xtoa
 32256 ;;		_vfpfcnvrt
 32257 ;;		_tolower
 32258 ;; This function uses a reentrant model
 32259 ;;
 32260                           
 32261                           	psect	text105
 32262  0022A2                     __ptext105:
 32263                           	opt callstack 0
 32264  0022A2                     _isupper:
 32265                           	opt callstack 0
 32266                           
 32267                           ;stkvar	_c @ sp[(0)+-2]
 32268                           
 32269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32270                           ;incstack = 0
 32271 ;; hardware stack exceeded
 32272  0022A2  0EFE               	movlw	-2
 32273  0022A4  50E3               	movf	plusw1,w,c
 32274  0022A6  0FBF               	addlw	191
 32275  0022A8  6E34               	movwf	(btemp+10)^0,c
 32276  0022AA  0EFF               	movlw	-1
 32277  0022AC  006F FF8C  F035    	movff	plusw1,btemp+11
 32278  0022B2  0EFF               	movlw	255
 32279  0022B4  2235               	addwfc	(btemp+11)^0,f,c
 32280  0022B6  5035               	movf	(btemp+11)^0,w,c
 32281  0022B8  E106               	bnz	u7180
 32282  0022BA  0E1A               	movlw	26
 32283  0022BC  5C34               	subwf	(btemp+10)^0,w,c
 32284  0022BE  B0D8               	btfsc	status,0,c
 32285  0022C0  D002               	goto	u7180
 32286  0022C2  0E01               	movlw	1
 32287  0022C4  D001               	goto	u7190
 32288  0022C6                     u7180:
 32289  0022C6  0E00               	movlw	0
 32290  0022C8                     u7190:
 32291  0022C8  6E2A               	movwf	btemp^0,c
 32292  0022CA  6A2B               	clrf	(btemp+1)^0,c
 32293                           
 32294                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32295  0022CC  52E5               	movf	postdec1,f,c
 32296  0022CE  52E5               	movf	postdec1,f,c
 32297  0022D0  0012               	return		;funcret
 32298  0022D2                     __end_of_isupper:
 32299                           	opt callstack 0
 32300                           
 32301 ;; *************** function _strcpy *****************
 32302 ;; Defined at:
 32303 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 32304 ;; Parameters:    Size  Location     Type
 32305 ;;  dest            2  [STACK] PTR unsigned char 
 32306 ;;		 -> dbuf(80), 
 32307 ;;  src             2  [STACK] PTR const unsigned char 
 32308 ;;		 -> STR_100(4), STR_99(4), STR_96(4), STR_95(4), 
 32309 ;;		 -> dbuf(80), 
 32310 ;; Auto vars:     Size  Location     Type
 32311 ;;  d               2  [STACK] PTR unsigned char 
 32312 ;;		 -> dbuf(80), 
 32313 ;;  s               2  [STACK] PTR const unsigned char 
 32314 ;;		 -> STR_100(4), STR_99(4), STR_96(4), STR_95(4), 
 32315 ;;		 -> dbuf(80), 
 32316 ;; Return value:  Size  Location     Type
 32317 ;;                  2  [STACK] PTR unsigned char 
 32318 ;; Registers used:
 32319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 32320 ;; Tracked objects:
 32321 ;;		On entry : 0/0
 32322 ;;		On exit  : 0/0
 32323 ;;		Unchanged: 0/0
 32324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32329 ;;Total ram usage:        0 bytes
 32330 ;; Hardware stack levels used:    1
 32331 ;; Hardware stack levels required when called:   15
 32332 ;; This function calls:
 32333 ;;		Nothing
 32334 ;; This function is called by:
 32335 ;;		_efgtoa
 32336 ;; This function uses a reentrant model
 32337 ;;
 32338                           
 32339                           	psect	text106
 32340  000362                     __ptext106:
 32341                           	opt callstack 0
 32342  000362                     _strcpy:
 32343                           	opt callstack 0
 32344                           
 32345                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32346  000362  52E6               	movf	postinc1,f,c
 32347  000364  52E6               	movf	postinc1,f,c
 32348  000366  52E6               	movf	postinc1,f,c
 32349  000368  52E6               	movf	postinc1,f,c
 32350                           
 32351                           ;stkvar	_src @ sp[(-4)+-4]
 32352                           
 32353                           ;incstack = 0
 32354 ;; hardware stack exceeded
 32355  00036A  0EF8               	movlw	-8
 32356  00036C  006F FF8C  F034    	movff	plusw1,btemp+10
 32357  000372  0EF9               	movlw	-7
 32358  000374  006F FF8C  F035    	movff	plusw1,btemp+11
 32359                           
 32360                           ;stkvar	_s @ sp[(-4)+2]
 32361  00037A  0EFF               	movlw	-1
 32362  00037C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32363  000382  0EFE               	movlw	-2
 32364  000384  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32365                           
 32366                           ;stkvar	_dest @ sp[(-4)+-2]
 32367  00038A  0EFA               	movlw	-6
 32368  00038C  006F FF8C  F034    	movff	plusw1,btemp+10
 32369  000392  0EFB               	movlw	-5
 32370  000394  006F FF8C  F035    	movff	plusw1,btemp+11
 32371                           
 32372                           ;stkvar	_d @ sp[(-4)+0]
 32373  00039A  0EFD               	movlw	-3
 32374  00039C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32375  0003A2  0EFC               	movlw	-4
 32376  0003A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32377  0003AA                     l15452:
 32378                           
 32379                           ;stkvar	_s @ sp[(-4)+2]
 32380  0003AA  50E1               	movf	fsr1l,w,c
 32381  0003AC  0FFE               	addlw	-2
 32382  0003AE  6ED9               	movwf	fsr2l,c
 32383  0003B0  50E2               	movf	fsr1h,w,c
 32384  0003B2  6EDA               	movwf	fsr2h,c
 32385  0003B4  0EFF               	movlw	255
 32386  0003B6  22DA               	addwfc	fsr2h,f,c
 32387  0003B8  006F FF7C  F034    	movff	indf2,btemp+10
 32388  0003BE  0E01               	movlw	1
 32389  0003C0  26DE               	addwf	postinc2,f,c
 32390  0003C2  006F FF7C  F035    	movff	indf2,btemp+11
 32391  0003C8  0E00               	movlw	0
 32392  0003CA  22DD               	addwfc	postdec2,f,c
 32393  0003CC  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 32394  0003D2  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 32395  0003D8  0E00               	movlw	low (__mediumconst shr (0+16))
 32396  0003DA  6EF8               	movwf	tblptru,c
 32397                           
 32398                           ;stkvar	_d @ sp[(-4)+0]
 32399  0003DC  50E1               	movf	fsr1l,w,c
 32400  0003DE  0FFC               	addlw	-4
 32401  0003E0  6ED9               	movwf	fsr2l,c
 32402  0003E2  50E2               	movf	fsr1h,w,c
 32403  0003E4  6EDA               	movwf	fsr2h,c
 32404  0003E6  0EFF               	movlw	255
 32405  0003E8  22DA               	addwfc	fsr2h,f,c
 32406  0003EA  006F FF7C  F034    	movff	indf2,btemp+10
 32407  0003F0  0E01               	movlw	1
 32408  0003F2  26DE               	addwf	postinc2,f,c
 32409  0003F4  006F FF7C  F035    	movff	indf2,btemp+11
 32410  0003FA  0E00               	movlw	0
 32411  0003FC  22DD               	addwfc	postdec2,f,c
 32412  0003FE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 32413  000404  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 32414  00040A  0E1F               	movlw	(high __ramtop+-1)
 32415  00040C  64F7               	cpfsgt	tblptrh,c
 32416  00040E  D003               	bra	u14367
 32417  000410  0008               	tblrd		*
 32418  000412  50F5               	movf	tablat,w,c
 32419  000414  D007               	bra	u14360
 32420  000416                     u14367:
 32421  000416  006F FFDB FFE9     	movff	tblptrl,fsr0l
 32422  00041C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 32423  000422  50EF               	movf	indf0,w,c
 32424  000424                     u14360:
 32425  000424  6EDF               	movwf	indf2,c
 32426  000426  50DF               	movf	indf2,w,c
 32427  000428  A4D8               	btfss	status,2,c
 32428  00042A  D7BF               	goto	l15452
 32429                           
 32430                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 32431  00042C  0EF8               	movlw	248
 32432  00042E  26E1               	addwf	fsr1l,f,c
 32433  000430  0EFF               	movlw	255
 32434  000432  22E2               	addwfc	fsr1h,f,c
 32435  000434  0012               	return		;funcret
 32436  000436                     __end_of_strcpy:
 32437                           	opt callstack 0
 32438                           
 32439 ;; *************** function _floorf *****************
 32440 ;; Defined at:
 32441 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 32442 ;; Parameters:    Size  Location     Type
 32443 ;;  x               4  [STACK] float 
 32444 ;; Auto vars:     Size  Location     Type
 32445 ;;  u               4  [STACK] struct .
 32446 ;;  m               4  [STACK] unsigned long 
 32447 ;;  e               2  [STACK] int 
 32448 ;; Return value:  Size  Location     Type
 32449 ;;                  4  [STACK] float 
 32450 ;; Registers used:
 32451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 32452 ;; Tracked objects:
 32453 ;;		On entry : 0/0
 32454 ;;		On exit  : 0/0
 32455 ;;		Unchanged: 0/0
 32456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32461 ;;Total ram usage:        0 bytes
 32462 ;; Hardware stack levels used:    1
 32463 ;; Hardware stack levels required when called:   15
 32464 ;; This function calls:
 32465 ;;		Nothing
 32466 ;; This function is called by:
 32467 ;;		_efgtoa
 32468 ;; This function uses a reentrant model
 32469 ;;
 32470                           
 32471                           	psect	text107
 32472  01A48A                     __ptext107:
 32473                           	opt callstack 0
 32474  01A48A                     _floorf:
 32475                           	opt callstack 0
 32476                           
 32477                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 32478  01A48A  0E0A               	movlw	10
 32479  01A48C  26E1               	addwf	fsr1l,f,c
 32480  01A48E  0E00               	movlw	0
 32481  01A490  22E2               	addwfc	fsr1h,f,c
 32482                           
 32483                           ;incstack = 0
 32484 ;; hardware stack exceeded
 32485  01A492  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 32486  01A498  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 32487  01A49E  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 32488  01A4A4  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 32489                           
 32490                           ;stkvar	_u @ sp[(-10)+0]
 32491  01A4AA  0EF6               	movlw	-10
 32492  01A4AC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32493  01A4B2  0EF7               	movlw	-9
 32494  01A4B4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32495  01A4BA  0EF8               	movlw	-8
 32496  01A4BC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32497  01A4C2  0EF9               	movlw	-7
 32498  01A4C4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32499                           
 32500                           ;stkvar	_x @ sp[(-10)+-4]
 32501  01A4CA  0EF2               	movlw	-14
 32502  01A4CC  006F FF8C  F032    	movff	plusw1,btemp+8
 32503  01A4D2  0EF3               	movlw	-13
 32504  01A4D4  006F FF8C  F033    	movff	plusw1,btemp+9
 32505  01A4DA  0EF4               	movlw	-12
 32506  01A4DC  006F FF8C  F034    	movff	plusw1,btemp+10
 32507  01A4E2  0EF5               	movlw	-11
 32508  01A4E4  006F FF8C  F035    	movff	plusw1,btemp+11
 32509                           
 32510                           ;stkvar	_u @ sp[(-10)+0]
 32511  01A4EA  0EF6               	movlw	-10
 32512  01A4EC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32513  01A4F2  0EF7               	movlw	-9
 32514  01A4F4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32515  01A4FA  0EF8               	movlw	-8
 32516  01A4FC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32517  01A502  0EF9               	movlw	-7
 32518  01A504  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32519  01A50A  0E81               	movlw	129
 32520  01A50C  6E34               	movwf	(btemp+10)^0,c
 32521  01A50E  0EFF               	movlw	255
 32522  01A510  6E35               	movwf	(btemp+11)^0,c
 32523                           
 32524                           ;stkvar	_u @ sp[(-10)+0]
 32525  01A512  0EF6               	movlw	-10
 32526  01A514  006F FF8C  F02E    	movff	plusw1,btemp+4
 32527  01A51A  0EF7               	movlw	-9
 32528  01A51C  006F FF8C  F02F    	movff	plusw1,btemp+5
 32529  01A522  0EF8               	movlw	-8
 32530  01A524  006F FF8C  F030    	movff	plusw1,btemp+6
 32531  01A52A  0EF9               	movlw	-7
 32532  01A52C  006F FF8C  F031    	movff	plusw1,btemp+7
 32533  01A532  0E18               	movlw	24
 32534  01A534  D005               	goto	u7870
 32535  01A536                     u7875:
 32536  01A536  90D8               	bcf	status,0,c
 32537  01A538  3231               	rrcf	(btemp+7)^0,f,c
 32538  01A53A  3230               	rrcf	(btemp+6)^0,f,c
 32539  01A53C  322F               	rrcf	(btemp+5)^0,f,c
 32540  01A53E  322E               	rrcf	(btemp+4)^0,f,c
 32541  01A540                     u7870:
 32542  01A540  2EE8               	decfsz	wreg,f,c
 32543  01A542  D7F9               	goto	u7875
 32544  01A544  0060  F0B8  F032   	movff	btemp+4,btemp+8
 32545  01A54A  0060  F0BC  F033   	movff	btemp+5,btemp+9
 32546  01A550  0EFF               	movlw	255
 32547  01A552  1632               	andwf	(btemp+8)^0,f,c
 32548  01A554  0E00               	movlw	0
 32549  01A556  1633               	andwf	(btemp+9)^0,f,c
 32550  01A558  5034               	movf	(btemp+10)^0,w,c
 32551  01A55A  2632               	addwf	(btemp+8)^0,f,c
 32552  01A55C  5035               	movf	(btemp+11)^0,w,c
 32553  01A55E  2233               	addwfc	(btemp+9)^0,f,c
 32554                           
 32555                           ;stkvar	_e @ sp[(-10)+8]
 32556  01A560  0EFE               	movlw	-2
 32557  01A562  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32558  01A568  0EFF               	movlw	-1
 32559  01A56A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32560                           
 32561                           ;stkvar	_e @ sp[(-10)+8]
 32562  01A570  0EFF               	movlw	-1
 32563  01A572  BEE3               	btfsc	plusw1,7,c
 32564  01A574  D019               	goto	l10146
 32565  01A576  0EFF               	movlw	-1
 32566  01A578  50E3               	movf	plusw1,w,c
 32567  01A57A  E108               	bnz	u7880
 32568  01A57C  0EFE               	movlw	-2
 32569  01A57E  006F FF8C  F02A    	movff	plusw1,btemp
 32570  01A584  0E17               	movlw	23
 32571  01A586  5E2A               	subwf	btemp^0,f,c
 32572  01A588  A0D8               	btfss	status,0,c
 32573  01A58A  D00E               	goto	l10146
 32574  01A58C                     u7880:
 32575                           
 32576                           ;stkvar	_x @ sp[(-10)+-4]
 32577  01A58C  0EF2               	movlw	-14
 32578  01A58E  006F FF8C  F02A    	movff	plusw1,btemp
 32579  01A594  0EF3               	movlw	-13
 32580  01A596  006F FF8C  F02B    	movff	plusw1,btemp+1
 32581  01A59C  0EF4               	movlw	-12
 32582  01A59E  006F FF8C  F02C    	movff	plusw1,btemp+2
 32583  01A5A4  0EF5               	movlw	-11
 32584  01A5A6  D11F               	goto	L35
 32585  01A5A8                     l10146:
 32586                           
 32587                           ;stkvar	_e @ sp[(-10)+8]
 32588  01A5A8  0EFF               	movlw	-1
 32589  01A5AA  BEE3               	btfsc	plusw1,7,c
 32590  01A5AC  D0B4               	goto	l10162
 32591                           
 32592                           ;stkvar	_e @ sp[(-10)+8]
 32593  01A5AE  0EFE               	movlw	-2
 32594  01A5B0  006F FF8C  F035    	movff	plusw1,btemp+11
 32595  01A5B6  0EFF               	movlw	255
 32596  01A5B8  6E2E               	movwf	(btemp+4)^0,c
 32597  01A5BA  0EFF               	movlw	255
 32598  01A5BC  6E2F               	movwf	(btemp+5)^0,c
 32599  01A5BE  0E7F               	movlw	127
 32600  01A5C0  6E30               	movwf	(btemp+6)^0,c
 32601  01A5C2  0E00               	movlw	0
 32602  01A5C4  6E31               	movwf	(btemp+7)^0,c
 32603  01A5C6                     u7905:
 32604  01A5C6  6635               	tstfsz	(btemp+11)^0,c
 32605  01A5C8  D001               	goto	u7906
 32606  01A5CA  D007               	goto	u7907
 32607  01A5CC                     u7906:
 32608  01A5CC  3431               	rlcf	(btemp+7)^0,w,c
 32609  01A5CE  3231               	rrcf	(btemp+7)^0,f,c
 32610  01A5D0  3230               	rrcf	(btemp+6)^0,f,c
 32611  01A5D2  322F               	rrcf	(btemp+5)^0,f,c
 32612  01A5D4  322E               	rrcf	(btemp+4)^0,f,c
 32613  01A5D6  2E35               	decfsz	(btemp+11)^0,f,c
 32614  01A5D8  D7F6               	goto	u7905
 32615  01A5DA                     u7907:
 32616                           
 32617                           ;stkvar	_m @ sp[(-10)+4]
 32618  01A5DA  0EFA               	movlw	-6
 32619  01A5DC  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 32620  01A5E2  0EFB               	movlw	-5
 32621  01A5E4  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 32622  01A5EA  0EFC               	movlw	-4
 32623  01A5EC  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32624  01A5F2  0EFD               	movlw	-3
 32625  01A5F4  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32626                           
 32627                           ;stkvar	_m @ sp[(-10)+4]
 32628                           ;stkvar	_u @ sp[(-10)+0]
 32629  01A5FA  0EF6               	movlw	-10
 32630  01A5FC  006F FF8C  F032    	movff	plusw1,btemp+8
 32631  01A602  0EF7               	movlw	-9
 32632  01A604  006F FF8C  F033    	movff	plusw1,btemp+9
 32633  01A60A  0EF8               	movlw	-8
 32634  01A60C  006F FF8C  F034    	movff	plusw1,btemp+10
 32635  01A612  0EF9               	movlw	-7
 32636  01A614  006F FF8C  F035    	movff	plusw1,btemp+11
 32637  01A61A  0EFA               	movlw	-6
 32638  01A61C  50E3               	movf	plusw1,w,c
 32639  01A61E  1632               	andwf	(btemp+8)^0,f,c
 32640  01A620  0EFB               	movlw	-5
 32641  01A622  50E3               	movf	plusw1,w,c
 32642  01A624  1633               	andwf	(btemp+9)^0,f,c
 32643  01A626  0EFC               	movlw	-4
 32644  01A628  50E3               	movf	plusw1,w,c
 32645  01A62A  1634               	andwf	(btemp+10)^0,f,c
 32646  01A62C  0EFD               	movlw	-3
 32647  01A62E  50E3               	movf	plusw1,w,c
 32648  01A630  1635               	andwf	(btemp+11)^0,f,c
 32649  01A632  5032               	movf	(btemp+8)^0,w,c
 32650  01A634  1033               	iorwf	(btemp+9)^0,w,c
 32651  01A636  1034               	iorwf	(btemp+10)^0,w,c
 32652  01A638  1035               	iorwf	(btemp+11)^0,w,c
 32653  01A63A  B4D8               	btfsc	status,2,c
 32654  01A63C  D7A7               	goto	u7880
 32655                           
 32656                           ;stkvar	_u @ sp[(-10)+0]
 32657  01A63E  0EF6               	movlw	-10
 32658  01A640  006F FF8C  F032    	movff	plusw1,btemp+8
 32659  01A646  0EF7               	movlw	-9
 32660  01A648  006F FF8C  F033    	movff	plusw1,btemp+9
 32661  01A64E  0EF8               	movlw	-8
 32662  01A650  006F FF8C  F034    	movff	plusw1,btemp+10
 32663  01A656  0EF9               	movlw	-7
 32664  01A658  006F FF8C  F035    	movff	plusw1,btemp+11
 32665  01A65E  0E20               	movlw	32
 32666  01A660  D005               	goto	u7920
 32667  01A662                     u7925:
 32668  01A662  90D8               	bcf	status,0,c
 32669  01A664  3235               	rrcf	(btemp+11)^0,f,c
 32670  01A666  3234               	rrcf	(btemp+10)^0,f,c
 32671  01A668  3233               	rrcf	(btemp+9)^0,f,c
 32672  01A66A  3232               	rrcf	(btemp+8)^0,f,c
 32673  01A66C                     u7920:
 32674  01A66C  2EE8               	decfsz	wreg,f,c
 32675  01A66E  D7F9               	goto	u7925
 32676  01A670  5032               	movf	(btemp+8)^0,w,c
 32677  01A672  B4D8               	btfsc	status,2,c
 32678  01A674  D028               	goto	l10160
 32679                           
 32680                           ;stkvar	_m @ sp[(-10)+4]
 32681                           ;stkvar	_u @ sp[(-10)+0]
 32682  01A676  0EF6               	movlw	-10
 32683  01A678  50E3               	movf	plusw1,w,c
 32684  01A67A  6E2A               	movwf	btemp^0,c
 32685  01A67C  0EFA               	movlw	-6
 32686  01A67E  50E3               	movf	plusw1,w,c
 32687  01A680  262A               	addwf	btemp^0,f,c
 32688  01A682  0EF6               	movlw	-10
 32689  01A684  0060  F0AB  FFE3   	movff	btemp,plusw1
 32690  01A68A  0EF7               	movlw	-9
 32691  01A68C  50E3               	movf	plusw1,w,c
 32692  01A68E  6E2A               	movwf	btemp^0,c
 32693  01A690  0EFB               	movlw	-5
 32694  01A692  50E3               	movf	plusw1,w,c
 32695  01A694  222A               	addwfc	btemp^0,f,c
 32696  01A696  0EF7               	movlw	-9
 32697  01A698  0060  F0AB  FFE3   	movff	btemp,plusw1
 32698  01A69E  0EF8               	movlw	-8
 32699  01A6A0  50E3               	movf	plusw1,w,c
 32700  01A6A2  6E2A               	movwf	btemp^0,c
 32701  01A6A4  0EFC               	movlw	-4
 32702  01A6A6  50E3               	movf	plusw1,w,c
 32703  01A6A8  222A               	addwfc	btemp^0,f,c
 32704  01A6AA  0EF8               	movlw	-8
 32705  01A6AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32706  01A6B2  0EF9               	movlw	-7
 32707  01A6B4  50E3               	movf	plusw1,w,c
 32708  01A6B6  6E2A               	movwf	btemp^0,c
 32709  01A6B8  0EFD               	movlw	-3
 32710  01A6BA  50E3               	movf	plusw1,w,c
 32711  01A6BC  222A               	addwfc	btemp^0,f,c
 32712  01A6BE  0EF9               	movlw	-7
 32713  01A6C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 32714  01A6C6                     l10160:
 32715                           
 32716                           ;stkvar	_m @ sp[(-10)+4]
 32717  01A6C6  0EFA               	movlw	-6
 32718  01A6C8  006F FF8C  F032    	movff	plusw1,btemp+8
 32719  01A6CE  0EFB               	movlw	-5
 32720  01A6D0  006F FF8C  F033    	movff	plusw1,btemp+9
 32721  01A6D6  0EFC               	movlw	-4
 32722  01A6D8  006F FF8C  F034    	movff	plusw1,btemp+10
 32723  01A6DE  0EFD               	movlw	-3
 32724  01A6E0  006F FF8C  F035    	movff	plusw1,btemp+11
 32725  01A6E6  1C32               	comf	(btemp+8)^0,w,c
 32726  01A6E8  6E2E               	movwf	(btemp+4)^0,c
 32727  01A6EA  1C33               	comf	(btemp+9)^0,w,c
 32728  01A6EC  6E2F               	movwf	(btemp+5)^0,c
 32729  01A6EE  1C34               	comf	(btemp+10)^0,w,c
 32730  01A6F0  6E30               	movwf	(btemp+6)^0,c
 32731  01A6F2  1C35               	comf	(btemp+11)^0,w,c
 32732  01A6F4  6E31               	movwf	(btemp+7)^0,c
 32733                           
 32734                           ;stkvar	_u @ sp[(-10)+0]
 32735  01A6F6  50E1               	movf	fsr1l,w,c
 32736  01A6F8  0FF6               	addlw	-10
 32737  01A6FA  6ED9               	movwf	fsr2l,c
 32738  01A6FC  50E2               	movf	fsr1h,w,c
 32739  01A6FE  6EDA               	movwf	fsr2h,c
 32740  01A700  0EFF               	movlw	255
 32741  01A702  22DA               	addwfc	fsr2h,f,c
 32742  01A704  502E               	movf	(btemp+4)^0,w,c
 32743  01A706  16DE               	andwf	postinc2,f,c
 32744  01A708  502F               	movf	(btemp+5)^0,w,c
 32745  01A70A  16DE               	andwf	postinc2,f,c
 32746  01A70C  5030               	movf	(btemp+6)^0,w,c
 32747  01A70E  16DE               	andwf	postinc2,f,c
 32748  01A710  5031               	movf	(btemp+7)^0,w,c
 32749  01A712  16DE               	andwf	postinc2,f,c
 32750  01A714  D05B               	goto	l10170
 32751  01A716                     l10162:
 32752                           
 32753                           ;stkvar	_u @ sp[(-10)+0]
 32754  01A716  0EF6               	movlw	-10
 32755  01A718  006F FF8C  F032    	movff	plusw1,btemp+8
 32756  01A71E  0EF7               	movlw	-9
 32757  01A720  006F FF8C  F033    	movff	plusw1,btemp+9
 32758  01A726  0EF8               	movlw	-8
 32759  01A728  006F FF8C  F034    	movff	plusw1,btemp+10
 32760  01A72E  0EF9               	movlw	-7
 32761  01A730  006F FF8C  F035    	movff	plusw1,btemp+11
 32762  01A736  0E20               	movlw	32
 32763  01A738  D005               	goto	u7940
 32764  01A73A                     u7945:
 32765  01A73A  90D8               	bcf	status,0,c
 32766  01A73C  3235               	rrcf	(btemp+11)^0,f,c
 32767  01A73E  3234               	rrcf	(btemp+10)^0,f,c
 32768  01A740  3233               	rrcf	(btemp+9)^0,f,c
 32769  01A742  3232               	rrcf	(btemp+8)^0,f,c
 32770  01A744                     u7940:
 32771  01A744  2EE8               	decfsz	wreg,f,c
 32772  01A746  D7F9               	goto	u7945
 32773  01A748  6632               	tstfsz	(btemp+8)^0,c
 32774  01A74A  D009               	goto	l10166
 32775                           
 32776                           ;stkvar	_u @ sp[(-10)+0]
 32777  01A74C  0EF6               	movlw	-10
 32778  01A74E  6AE3               	clrf	plusw1,c
 32779  01A750  0EF7               	movlw	-9
 32780  01A752  6AE3               	clrf	plusw1,c
 32781  01A754  0EF8               	movlw	-8
 32782  01A756  6AE3               	clrf	plusw1,c
 32783  01A758  0EF9               	movlw	-7
 32784  01A75A  6AE3               	clrf	plusw1,c
 32785  01A75C  D037               	goto	l10170
 32786  01A75E                     l10166:
 32787                           
 32788                           ;stkvar	_u @ sp[(-10)+0]
 32789  01A75E  0EF6               	movlw	-10
 32790  01A760  006F FF8C  F032    	movff	plusw1,btemp+8
 32791  01A766  0EF7               	movlw	-9
 32792  01A768  006F FF8C  F033    	movff	plusw1,btemp+9
 32793  01A76E  0EF8               	movlw	-8
 32794  01A770  006F FF8C  F034    	movff	plusw1,btemp+10
 32795  01A776  0EF9               	movlw	-7
 32796  01A778  006F FF8C  F035    	movff	plusw1,btemp+11
 32797  01A77E  90D8               	bcf	status,0,c
 32798  01A780  3432               	rlcf	(btemp+8)^0,w,c
 32799  01A782  6E2E               	movwf	(btemp+4)^0,c
 32800  01A784  3433               	rlcf	(btemp+9)^0,w,c
 32801  01A786  6E2F               	movwf	(btemp+5)^0,c
 32802  01A788  3434               	rlcf	(btemp+10)^0,w,c
 32803  01A78A  6E30               	movwf	(btemp+6)^0,c
 32804  01A78C  3435               	rlcf	(btemp+11)^0,w,c
 32805  01A78E  6E31               	movwf	(btemp+7)^0,c
 32806  01A790  502E               	movf	(btemp+4)^0,w,c
 32807  01A792  102F               	iorwf	(btemp+5)^0,w,c
 32808  01A794  1030               	iorwf	(btemp+6)^0,w,c
 32809  01A796  1031               	iorwf	(btemp+7)^0,w,c
 32810  01A798  B4D8               	btfsc	status,2,c
 32811  01A79A  D018               	goto	l10170
 32812  01A79C  0E00               	movlw	0
 32813  01A79E  6E32               	movwf	(btemp+8)^0,c
 32814  01A7A0  0E00               	movlw	0
 32815  01A7A2  6E33               	movwf	(btemp+9)^0,c
 32816  01A7A4  0E80               	movlw	128
 32817  01A7A6  6E34               	movwf	(btemp+10)^0,c
 32818  01A7A8  0EBF               	movlw	191
 32819  01A7AA  6E35               	movwf	(btemp+11)^0,c
 32820                           
 32821                           ;stkvar	_u @ sp[(-10)+0]
 32822  01A7AC  0EF6               	movlw	-10
 32823  01A7AE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32824  01A7B4  0EF7               	movlw	-9
 32825  01A7B6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32826  01A7BC  0EF8               	movlw	-8
 32827  01A7BE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32828  01A7C4  0EF9               	movlw	-7
 32829  01A7C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32830  01A7CC                     l10170:
 32831                           
 32832                           ;stkvar	_u @ sp[(-10)+0]
 32833  01A7CC  0EF6               	movlw	-10
 32834  01A7CE  006F FF8C  F02A    	movff	plusw1,btemp
 32835  01A7D4  0EF7               	movlw	-9
 32836  01A7D6  006F FF8C  F02B    	movff	plusw1,btemp+1
 32837  01A7DC  0EF8               	movlw	-8
 32838  01A7DE  006F FF8C  F02C    	movff	plusw1,btemp+2
 32839  01A7E4  0EF9               	movlw	-7
 32840  01A7E6                     L35:
 32841  01A7E6  006F FF8C  F02D    	movff	plusw1,btemp+3
 32842                           
 32843                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32844  01A7EC  0EF2               	movlw	242
 32845  01A7EE  26E1               	addwf	fsr1l,f,c
 32846  01A7F0  0EFF               	movlw	255
 32847  01A7F2  22E2               	addwfc	fsr1h,f,c
 32848  01A7F4  0012               	return		;funcret
 32849  01A7F6                     __end_of_floorf:
 32850                           	opt callstack 0
 32851                           
 32852 ;; *************** function ___fpclassifyf *****************
 32853 ;; Defined at:
 32854 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 32855 ;; Parameters:    Size  Location     Type
 32856 ;;  x               4  [STACK] float 
 32857 ;; Auto vars:     Size  Location     Type
 32858 ;;  u               4  [STACK] struct .
 32859 ;;  e               2  [STACK] int 
 32860 ;; Return value:  Size  Location     Type
 32861 ;;                  2  [STACK] int 
 32862 ;; Registers used:
 32863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 32864 ;; Tracked objects:
 32865 ;;		On entry : 0/0
 32866 ;;		On exit  : 0/0
 32867 ;;		Unchanged: 0/0
 32868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32873 ;;Total ram usage:        0 bytes
 32874 ;; Hardware stack levels used:    1
 32875 ;; Hardware stack levels required when called:   15
 32876 ;; This function calls:
 32877 ;;		Nothing
 32878 ;; This function is called by:
 32879 ;;		_efgtoa
 32880 ;; This function uses a reentrant model
 32881 ;;
 32882                           
 32883                           	psect	text108
 32884  01DD36                     __ptext108:
 32885                           	opt callstack 0
 32886  01DD36                     ___fpclassifyf:
 32887                           	opt callstack 0
 32888                           
 32889                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32890  01DD36  0E06               	movlw	6
 32891  01DD38  26E1               	addwf	fsr1l,f,c
 32892  01DD3A  0E00               	movlw	0
 32893  01DD3C  22E2               	addwfc	fsr1h,f,c
 32894                           
 32895                           ;incstack = 0
 32896 ;; hardware stack exceeded
 32897  01DD3E  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 32898  01DD44  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 32899  01DD4A  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 32900  01DD50  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 32901                           
 32902                           ;stkvar	_u @ sp[(-6)+0]
 32903  01DD56  0EFA               	movlw	-6
 32904  01DD58  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32905  01DD5E  0EFB               	movlw	-5
 32906  01DD60  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32907  01DD66  0EFC               	movlw	-4
 32908  01DD68  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32909  01DD6E  0EFD               	movlw	-3
 32910  01DD70  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32911                           
 32912                           ;stkvar	_x @ sp[(-6)+-4]
 32913  01DD76  0EF6               	movlw	-10
 32914  01DD78  006F FF8C  F032    	movff	plusw1,btemp+8
 32915  01DD7E  0EF7               	movlw	-9
 32916  01DD80  006F FF8C  F033    	movff	plusw1,btemp+9
 32917  01DD86  0EF8               	movlw	-8
 32918  01DD88  006F FF8C  F034    	movff	plusw1,btemp+10
 32919  01DD8E  0EF9               	movlw	-7
 32920  01DD90  006F FF8C  F035    	movff	plusw1,btemp+11
 32921                           
 32922                           ;stkvar	_u @ sp[(-6)+0]
 32923  01DD96  0EFA               	movlw	-6
 32924  01DD98  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32925  01DD9E  0EFB               	movlw	-5
 32926  01DDA0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32927  01DDA6  0EFC               	movlw	-4
 32928  01DDA8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32929  01DDAE  0EFD               	movlw	-3
 32930  01DDB0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32931                           
 32932                           ;stkvar	_u @ sp[(-6)+0]
 32933  01DDB6  0EFA               	movlw	-6
 32934  01DDB8  006F FF8C  F032    	movff	plusw1,btemp+8
 32935  01DDBE  0EFB               	movlw	-5
 32936  01DDC0  006F FF8C  F033    	movff	plusw1,btemp+9
 32937  01DDC6  0EFC               	movlw	-4
 32938  01DDC8  006F FF8C  F034    	movff	plusw1,btemp+10
 32939  01DDCE  0EFD               	movlw	-3
 32940  01DDD0  006F FF8C  F035    	movff	plusw1,btemp+11
 32941  01DDD6  0E18               	movlw	24
 32942  01DDD8  D005               	goto	u7750
 32943  01DDDA                     u7755:
 32944  01DDDA  90D8               	bcf	status,0,c
 32945  01DDDC  3235               	rrcf	(btemp+11)^0,f,c
 32946  01DDDE  3234               	rrcf	(btemp+10)^0,f,c
 32947  01DDE0  3233               	rrcf	(btemp+9)^0,f,c
 32948  01DDE2  3232               	rrcf	(btemp+8)^0,f,c
 32949  01DDE4                     u7750:
 32950  01DDE4  2EE8               	decfsz	wreg,f,c
 32951  01DDE6  D7F9               	goto	u7755
 32952  01DDE8  0060  F0C8  F030   	movff	btemp+8,btemp+6
 32953  01DDEE  0060  F0CC  F031   	movff	btemp+9,btemp+7
 32954  01DDF4  0EFF               	movlw	255
 32955  01DDF6  1630               	andwf	(btemp+6)^0,f,c
 32956  01DDF8  0E00               	movlw	0
 32957  01DDFA  1631               	andwf	(btemp+7)^0,f,c
 32958                           
 32959                           ;stkvar	_e @ sp[(-6)+4]
 32960  01DDFC  0EFE               	movlw	-2
 32961  01DDFE  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32962  01DE04  0EFF               	movlw	-1
 32963  01DE06  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32964                           
 32965                           ;stkvar	_e @ sp[(-6)+4]
 32966  01DE0C  0EFE               	movlw	-2
 32967  01DE0E  006F FF8C  F02A    	movff	plusw1,btemp
 32968  01DE14  0EFF               	movlw	-1
 32969  01DE16  50E3               	movf	plusw1,w,c
 32970  01DE18  102A               	iorwf	btemp^0,w,c
 32971  01DE1A  A4D8               	btfss	status,2,c
 32972  01DE1C  D023               	goto	l10108
 32973                           
 32974                           ;stkvar	_u @ sp[(-6)+0]
 32975  01DE1E  0EFA               	movlw	-6
 32976  01DE20  006F FF8C  F032    	movff	plusw1,btemp+8
 32977  01DE26  0EFB               	movlw	-5
 32978  01DE28  006F FF8C  F033    	movff	plusw1,btemp+9
 32979  01DE2E  0EFC               	movlw	-4
 32980  01DE30  006F FF8C  F034    	movff	plusw1,btemp+10
 32981  01DE36  0EFD               	movlw	-3
 32982  01DE38  006F FF8C  F035    	movff	plusw1,btemp+11
 32983  01DE3E  90D8               	bcf	status,0,c
 32984  01DE40  3432               	rlcf	(btemp+8)^0,w,c
 32985  01DE42  6E2E               	movwf	(btemp+4)^0,c
 32986  01DE44  3433               	rlcf	(btemp+9)^0,w,c
 32987  01DE46  6E2F               	movwf	(btemp+5)^0,c
 32988  01DE48  3434               	rlcf	(btemp+10)^0,w,c
 32989  01DE4A  6E30               	movwf	(btemp+6)^0,c
 32990  01DE4C  3435               	rlcf	(btemp+11)^0,w,c
 32991  01DE4E  6E31               	movwf	(btemp+7)^0,c
 32992  01DE50  502E               	movf	(btemp+4)^0,w,c
 32993  01DE52  102F               	iorwf	(btemp+5)^0,w,c
 32994  01DE54  1030               	iorwf	(btemp+6)^0,w,c
 32995  01DE56  1031               	iorwf	(btemp+7)^0,w,c
 32996  01DE58  A4D8               	btfss	status,2,c
 32997  01DE5A  D002               	goto	l10104
 32998  01DE5C  0E02               	movlw	2
 32999  01DE5E  D02E               	goto	L36
 33000  01DE60                     l10104:
 33001  01DE60  0E03               	movlw	3
 33002  01DE62  D02C               	goto	L36
 33003  01DE64                     l10108:
 33004                           
 33005                           ;stkvar	_e @ sp[(-6)+4]
 33006  01DE64  0EFE               	movlw	-2
 33007  01DE66  28E3               	incf	plusw1,w,c
 33008  01DE68  E128               	bnz	l10114
 33009  01DE6A  0EFF               	movlw	-1
 33010  01DE6C  50E3               	movf	plusw1,w,c
 33011  01DE6E  A4D8               	btfss	status,2,c
 33012  01DE70  D024               	goto	l10114
 33013                           
 33014                           ;stkvar	_u @ sp[(-6)+0]
 33015  01DE72  0EFA               	movlw	-6
 33016  01DE74  006F FF8C  F032    	movff	plusw1,btemp+8
 33017  01DE7A  0EFB               	movlw	-5
 33018  01DE7C  006F FF8C  F033    	movff	plusw1,btemp+9
 33019  01DE82  0EFC               	movlw	-4
 33020  01DE84  006F FF8C  F034    	movff	plusw1,btemp+10
 33021  01DE8A  0EFD               	movlw	-3
 33022  01DE8C  006F FF8C  F035    	movff	plusw1,btemp+11
 33023  01DE92  0E09               	movlw	9
 33024  01DE94                     u7795:
 33025  01DE94  90D8               	bcf	status,0,c
 33026  01DE96  3632               	rlcf	(btemp+8)^0,f,c
 33027  01DE98  3633               	rlcf	(btemp+9)^0,f,c
 33028  01DE9A  3634               	rlcf	(btemp+10)^0,f,c
 33029  01DE9C  3635               	rlcf	(btemp+11)^0,f,c
 33030  01DE9E  2EE8               	decfsz	wreg,f,c
 33031  01DEA0  D7F9               	goto	u7795
 33032  01DEA2  5032               	movf	(btemp+8)^0,w,c
 33033  01DEA4  1033               	iorwf	(btemp+9)^0,w,c
 33034  01DEA6  1034               	iorwf	(btemp+10)^0,w,c
 33035  01DEA8  1035               	iorwf	(btemp+11)^0,w,c
 33036  01DEAA  A4D8               	btfss	status,2,c
 33037  01DEAC  D002               	goto	u7800
 33038  01DEAE  0E01               	movlw	1
 33039  01DEB0  D001               	goto	u7810
 33040  01DEB2                     u7800:
 33041  01DEB2  0E00               	movlw	0
 33042  01DEB4                     u7810:
 33043  01DEB4  6E2A               	movwf	btemp^0,c
 33044  01DEB6  6A2B               	clrf	(btemp+1)^0,c
 33045  01DEB8  D004               	goto	l3405
 33046  01DEBA                     l10114:
 33047  01DEBA  0E04               	movlw	4
 33048  01DEBC                     L36:
 33049  01DEBC  6E2A               	movwf	btemp^0,c
 33050  01DEBE  0E00               	movlw	0
 33051  01DEC0  6E2B               	movwf	(btemp+1)^0,c
 33052  01DEC2                     l3405:
 33053                           
 33054                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 33055  01DEC2  0EF6               	movlw	246
 33056  01DEC4  26E1               	addwf	fsr1l,f,c
 33057  01DEC6  0EFF               	movlw	255
 33058  01DEC8  22E2               	addwfc	fsr1h,f,c
 33059  01DECA  0012               	return		;funcret
 33060  01DECC                     __end_of___fpclassifyf:
 33061                           	opt callstack 0
 33062                           
 33063 ;; *************** function ___fltol *****************
 33064 ;; Defined at:
 33065 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 33066 ;; Parameters:    Size  Location     Type
 33067 ;;  f1              4  [STACK] int 
 33068 ;; Auto vars:     Size  Location     Type
 33069 ;;  exp1            1  [STACK] unsigned char 
 33070 ;;  sign1           1  [STACK] unsigned char 
 33071 ;; Return value:  Size  Location     Type
 33072 ;;                  4  [STACK] long 
 33073 ;; Registers used:
 33074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 33075 ;; Tracked objects:
 33076 ;;		On entry : 0/0
 33077 ;;		On exit  : 0/0
 33078 ;;		Unchanged: 0/0
 33079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33084 ;;Total ram usage:        0 bytes
 33085 ;; Hardware stack levels used:    1
 33086 ;; Hardware stack levels required when called:   15
 33087 ;; This function calls:
 33088 ;;		Nothing
 33089 ;; This function is called by:
 33090 ;;		_main
 33091 ;;		_convert_dac_raw
 33092 ;;		_load_hist_data
 33093 ;;		_calc_bsoc
 33094 ;;		_init_bsoc
 33095 ;;		_efgtoa
 33096 ;; This function uses a reentrant model
 33097 ;;
 33098                           
 33099                           	psect	text109
 33100  01E666                     __ptext109:
 33101                           	opt callstack 0
 33102  01E666                     ___fltol:
 33103                           	opt callstack 0
 33104                           
 33105                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33106  01E666  52E6               	movf	postinc1,f,c
 33107  01E668  52E6               	movf	postinc1,f,c
 33108                           
 33109                           ;stkvar	_f1 @ sp[(-2)+-4]
 33110                           
 33111                           ;incstack = 0
 33112 ;; hardware stack exceeded
 33113  01E66A  0EFA               	movlw	-6
 33114  01E66C  006F FF8C  F032    	movff	plusw1,btemp+8
 33115  01E672  0EFB               	movlw	-5
 33116  01E674  006F FF8C  F033    	movff	plusw1,btemp+9
 33117  01E67A  0EFC               	movlw	-4
 33118  01E67C  006F FF8C  F034    	movff	plusw1,btemp+10
 33119  01E682  0EFD               	movlw	-3
 33120  01E684  006F FF8C  F035    	movff	plusw1,btemp+11
 33121  01E68A  0E18               	movlw	24
 33122  01E68C  D005               	goto	u9020
 33123  01E68E                     u9025:
 33124  01E68E  90D8               	bcf	status,0,c
 33125  01E690  3235               	rrcf	(btemp+11)^0,f,c
 33126  01E692  3234               	rrcf	(btemp+10)^0,f,c
 33127  01E694  3233               	rrcf	(btemp+9)^0,f,c
 33128  01E696  3232               	rrcf	(btemp+8)^0,f,c
 33129  01E698                     u9020:
 33130  01E698  2EE8               	decfsz	wreg,f,c
 33131  01E69A  D7F9               	goto	u9025
 33132                           
 33133                           ;stkvar	_exp1 @ sp[(-2)+0]
 33134  01E69C  0EFE               	movlw	-2
 33135  01E69E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33136  01E6A4  0EFE               	movlw	-2
 33137  01E6A6  50E3               	movf	plusw1,w,c
 33138  01E6A8  A4D8               	btfss	status,2,c
 33139  01E6AA  D006               	goto	l10760
 33140  01E6AC                     u9030:
 33141  01E6AC  0E00               	movlw	0
 33142  01E6AE  6E2A               	movwf	btemp^0,c
 33143  01E6B0  6A2B               	clrf	(btemp+1)^0,c
 33144  01E6B2  6A2C               	clrf	(btemp+2)^0,c
 33145  01E6B4  6A2D               	clrf	(btemp+3)^0,c
 33146  01E6B6  D08B               	goto	l3021
 33147  01E6B8                     l10760:
 33148                           
 33149                           ;stkvar	_f1 @ sp[(-2)+-4]
 33150  01E6B8  0EFA               	movlw	-6
 33151  01E6BA  006F FF8C  F032    	movff	plusw1,btemp+8
 33152  01E6C0  0EFB               	movlw	-5
 33153  01E6C2  006F FF8C  F033    	movff	plusw1,btemp+9
 33154  01E6C8  0EFC               	movlw	-4
 33155  01E6CA  006F FF8C  F034    	movff	plusw1,btemp+10
 33156  01E6D0  0EFD               	movlw	-3
 33157  01E6D2  006F FF8C  F035    	movff	plusw1,btemp+11
 33158  01E6D8  0E20               	movlw	32
 33159  01E6DA  D005               	goto	u9040
 33160  01E6DC                     u9045:
 33161  01E6DC  90D8               	bcf	status,0,c
 33162  01E6DE  3235               	rrcf	(btemp+11)^0,f,c
 33163  01E6E0  3234               	rrcf	(btemp+10)^0,f,c
 33164  01E6E2  3233               	rrcf	(btemp+9)^0,f,c
 33165  01E6E4  3232               	rrcf	(btemp+8)^0,f,c
 33166  01E6E6                     u9040:
 33167  01E6E6  2EE8               	decfsz	wreg,f,c
 33168  01E6E8  D7F9               	goto	u9045
 33169                           
 33170                           ;stkvar	_sign1 @ sp[(-2)+1]
 33171  01E6EA  0EFF               	movlw	-1
 33172  01E6EC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33173                           
 33174                           ;stkvar	_f1 @ sp[(-2)+-4]
 33175  01E6F2  0EFC               	movlw	-4
 33176  01E6F4  8EE3               	bsf	plusw1,7,c
 33177                           
 33178                           ;stkvar	_f1 @ sp[(-2)+-4]
 33179  01E6F6  50E1               	movf	fsr1l,w,c
 33180  01E6F8  0FFA               	addlw	-6
 33181  01E6FA  6ED9               	movwf	fsr2l,c
 33182  01E6FC  50E2               	movf	fsr1h,w,c
 33183  01E6FE  6EDA               	movwf	fsr2h,c
 33184  01E700  0EFF               	movlw	255
 33185  01E702  22DA               	addwfc	fsr2h,f,c
 33186  01E704  0EFF               	movlw	255
 33187  01E706  16DE               	andwf	postinc2,f,c
 33188  01E708  0EFF               	movlw	255
 33189  01E70A  16DE               	andwf	postinc2,f,c
 33190  01E70C  0EFF               	movlw	255
 33191  01E70E  16DE               	andwf	postinc2,f,c
 33192  01E710  0E00               	movlw	0
 33193  01E712  16DE               	andwf	postinc2,f,c
 33194                           
 33195                           ;stkvar	_exp1 @ sp[(-2)+0]
 33196  01E714  0EFE               	movlw	-2
 33197  01E716  006F FF8C  F02A    	movff	plusw1,btemp
 33198  01E71C  0E96               	movlw	150
 33199  01E71E  5E2A               	subwf	btemp^0,f,c
 33200  01E720  0EFE               	movlw	-2
 33201  01E722  0060  F0AB  FFE3   	movff	btemp,plusw1
 33202                           
 33203                           ;stkvar	_exp1 @ sp[(-2)+0]
 33204  01E728  0EFE               	movlw	-2
 33205  01E72A  AEE3               	btfss	plusw1,7,c
 33206  01E72C  D014               	goto	l10778
 33207                           
 33208                           ;stkvar	_exp1 @ sp[(-2)+0]
 33209  01E72E  0EFE               	movlw	-2
 33210  01E730  50E3               	movf	plusw1,w,c
 33211  01E732  0A80               	xorlw	128
 33212  01E734  0F97               	addlw	151
 33213  01E736  A0D8               	btfss	status,0,c
 33214  01E738  D7B9               	goto	u9030
 33215  01E73A                     l10776:
 33216                           
 33217                           ;stkvar	_f1 @ sp[(-2)+-4]
 33218  01E73A  90D8               	bcf	status,0,c
 33219  01E73C  0EFD               	movlw	-3
 33220  01E73E  32E3               	rrcf	plusw1,f,c
 33221  01E740  0EFC               	movlw	-4
 33222  01E742  32E3               	rrcf	plusw1,f,c
 33223  01E744  0EFB               	movlw	-5
 33224  01E746  32E3               	rrcf	plusw1,f,c
 33225  01E748  0EFA               	movlw	-6
 33226  01E74A  32E3               	rrcf	plusw1,f,c
 33227                           
 33228                           ;stkvar	_exp1 @ sp[(-2)+0]
 33229  01E74C  0EFE               	movlw	-2
 33230  01E74E  2AE3               	incf	plusw1,f,c
 33231  01E750  B4D8               	btfsc	status,2,c
 33232  01E752  D018               	goto	u9090
 33233  01E754  D7F2               	goto	l10776
 33234  01E756                     l10778:
 33235                           
 33236                           ;stkvar	_exp1 @ sp[(-2)+0]
 33237  01E756  0EFE               	movlw	-2
 33238  01E758  006F FF8C  F02A    	movff	plusw1,btemp
 33239  01E75E  0E1F               	movlw	31
 33240  01E760  642A               	cpfsgt	btemp^0,c
 33241  01E762  D00C               	goto	l10786
 33242  01E764  D7A3               	goto	u9030
 33243  01E766                     l10784:
 33244                           
 33245                           ;stkvar	_f1 @ sp[(-2)+-4]
 33246  01E766  90D8               	bcf	status,0,c
 33247  01E768  0EFA               	movlw	-6
 33248  01E76A  36E3               	rlcf	plusw1,f,c
 33249  01E76C  0EFB               	movlw	-5
 33250  01E76E  36E3               	rlcf	plusw1,f,c
 33251  01E770  0EFC               	movlw	-4
 33252  01E772  36E3               	rlcf	plusw1,f,c
 33253  01E774  0EFD               	movlw	-3
 33254  01E776  36E3               	rlcf	plusw1,f,c
 33255                           
 33256                           ;stkvar	_exp1 @ sp[(-2)+0]
 33257  01E778  0EFE               	movlw	-2
 33258  01E77A  06E3               	decf	plusw1,f,c
 33259  01E77C                     l10786:
 33260                           
 33261                           ;stkvar	_exp1 @ sp[(-2)+0]
 33262  01E77C  0EFE               	movlw	-2
 33263  01E77E  50E3               	movf	plusw1,w,c
 33264  01E780  A4D8               	btfss	status,2,c
 33265  01E782  D7F1               	goto	l10784
 33266  01E784                     u9090:
 33267                           
 33268                           ;stkvar	_sign1 @ sp[(-2)+1]
 33269  01E784  0EFF               	movlw	-1
 33270  01E786  50E3               	movf	plusw1,w,c
 33271  01E788  B4D8               	btfsc	status,2,c
 33272  01E78A  D011               	goto	u9110
 33273                           
 33274                           ;stkvar	_f1 @ sp[(-2)+-4]
 33275                           ;stkvar	_f1 @ sp[(-2)+-4]
 33276  01E78C  0EFA               	movlw	-6
 33277  01E78E  6CE3               	negf	plusw1,c
 33278  01E790  0EFB               	movlw	-5
 33279  01E792  1EE3               	comf	plusw1,f,c
 33280  01E794  0EFC               	movlw	-4
 33281  01E796  1EE3               	comf	plusw1,f,c
 33282  01E798  0EFD               	movlw	-3
 33283  01E79A  1EE3               	comf	plusw1,f,c
 33284  01E79C  E308               	bnc	u9110
 33285  01E79E  0EFB               	movlw	-5
 33286  01E7A0  2AE3               	incf	plusw1,f,c
 33287  01E7A2  E305               	bnc	u9110
 33288  01E7A4  0EFC               	movlw	-4
 33289  01E7A6  2AE3               	incf	plusw1,f,c
 33290  01E7A8  E302               	bnc	u9110
 33291  01E7AA  0EFD               	movlw	-3
 33292  01E7AC  2AE3               	incf	plusw1,f,c
 33293  01E7AE                     u9110:
 33294                           
 33295                           ;stkvar	_f1 @ sp[(-2)+-4]
 33296  01E7AE  0EFA               	movlw	-6
 33297  01E7B0  006F FF8C  F02A    	movff	plusw1,btemp
 33298  01E7B6  0EFB               	movlw	-5
 33299  01E7B8  006F FF8C  F02B    	movff	plusw1,btemp+1
 33300  01E7BE  0EFC               	movlw	-4
 33301  01E7C0  006F FF8C  F02C    	movff	plusw1,btemp+2
 33302  01E7C6  0EFD               	movlw	-3
 33303  01E7C8  006F FF8C  F02D    	movff	plusw1,btemp+3
 33304  01E7CE                     l3021:
 33305                           
 33306                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33307  01E7CE  0EFA               	movlw	250
 33308  01E7D0  26E1               	addwf	fsr1l,f,c
 33309  01E7D2  0EFF               	movlw	255
 33310  01E7D4  22E2               	addwfc	fsr1h,f,c
 33311  01E7D6  0012               	return		;funcret
 33312  01E7D8                     __end_of___fltol:
 33313                           	opt callstack 0
 33314                           
 33315 ;; *************** function ___flneg *****************
 33316 ;; Defined at:
 33317 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 33318 ;; Parameters:    Size  Location     Type
 33319 ;;  f1              4  [STACK] long 
 33320 ;; Auto vars:     Size  Location     Type
 33321 ;;		None
 33322 ;; Return value:  Size  Location     Type
 33323 ;;                  4  [STACK] long 
 33324 ;; Registers used:
 33325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 33326 ;; Tracked objects:
 33327 ;;		On entry : 0/0
 33328 ;;		On exit  : 0/0
 33329 ;;		Unchanged: 0/0
 33330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33335 ;;Total ram usage:        0 bytes
 33336 ;; Hardware stack levels used:    1
 33337 ;; Hardware stack levels required when called:   15
 33338 ;; This function calls:
 33339 ;;		Nothing
 33340 ;; This function is called by:
 33341 ;;		_calc_bsoc
 33342 ;;		_efgtoa
 33343 ;; This function uses a reentrant model
 33344 ;;
 33345                           
 33346                           	psect	text110
 33347  001BF8                     __ptext110:
 33348                           	opt callstack 0
 33349  001BF8                     ___flneg:
 33350                           	opt callstack 0
 33351                           
 33352                           ;stkvar	_f1 @ sp[(0)+-4]
 33353                           
 33354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33355                           ;incstack = 0
 33356 ;; hardware stack exceeded
 33357  001BF8  0EFC               	movlw	-4
 33358  001BFA  50E3               	movf	plusw1,w,c
 33359  001BFC  E10A               	bnz	u9010
 33360  001BFE  0EFD               	movlw	-3
 33361  001C00  50E3               	movf	plusw1,w,c
 33362  001C02  E107               	bnz	u9010
 33363  001C04  0EFE               	movlw	-2
 33364  001C06  50E3               	movf	plusw1,w,c
 33365  001C08  E104               	bnz	u9010
 33366  001C0A  0EFF               	movlw	-1
 33367  001C0C  50E3               	movf	plusw1,w,c
 33368  001C0E  B4D8               	btfsc	status,2,c
 33369  001C10  D002               	goto	l10750
 33370  001C12                     u9010:
 33371                           
 33372                           ;stkvar	_f1 @ sp[(0)+-4]
 33373  001C12  0EFF               	movlw	-1
 33374  001C14  7EE3               	btg	plusw1,7,c
 33375  001C16                     l10750:
 33376                           
 33377                           ;stkvar	_f1 @ sp[(0)+-4]
 33378  001C16  0EFC               	movlw	-4
 33379  001C18  006F FF8C  F02A    	movff	plusw1,btemp
 33380  001C1E  0EFD               	movlw	-3
 33381  001C20  006F FF8C  F02B    	movff	plusw1,btemp+1
 33382  001C26  0EFE               	movlw	-2
 33383  001C28  006F FF8C  F02C    	movff	plusw1,btemp+2
 33384  001C2E  0EFF               	movlw	-1
 33385  001C30  006F FF8C  F02D    	movff	plusw1,btemp+3
 33386                           
 33387                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33388  001C36  52E5               	movf	postdec1,f,c
 33389  001C38  52E5               	movf	postdec1,f,c
 33390  001C3A  52E5               	movf	postdec1,f,c
 33391  001C3C  52E5               	movf	postdec1,f,c
 33392  001C3E  0012               	return		;funcret
 33393  001C40                     __end_of___flneg:
 33394                           	opt callstack 0
 33395                           
 33396 ;; *************** function ___fleq *****************
 33397 ;; Defined at:
 33398 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 33399 ;; Parameters:    Size  Location     Type
 33400 ;;  ff1             4  [STACK] long 
 33401 ;;  ff2             4  [STACK] long 
 33402 ;; Auto vars:     Size  Location     Type
 33403 ;;		None
 33404 ;; Return value:  Size  Location     Type
 33405 ;;		None               void
 33406 ;; Registers used:
 33407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 33408 ;; Tracked objects:
 33409 ;;		On entry : 0/0
 33410 ;;		On exit  : 0/0
 33411 ;;		Unchanged: 0/0
 33412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33417 ;;Total ram usage:        0 bytes
 33418 ;; Hardware stack levels used:    1
 33419 ;; Hardware stack levels required when called:   15
 33420 ;; This function calls:
 33421 ;;		Nothing
 33422 ;; This function is called by:
 33423 ;;		_efgtoa
 33424 ;; This function uses a reentrant model
 33425 ;;
 33426                           
 33427                           	psect	text111
 33428  000504                     __ptext111:
 33429                           	opt callstack 0
 33430  000504                     ___fleq:
 33431                           	opt callstack 0
 33432                           
 33433                           ;stkvar	_ff1 @ sp[(0)+-4]
 33434                           
 33435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33436                           ;incstack = 0
 33437 ;; hardware stack exceeded
 33438  000504  50E1               	movf	fsr1l,w,c
 33439  000506  0FFC               	addlw	-4
 33440  000508  6ED9               	movwf	fsr2l,c
 33441  00050A  50E2               	movf	fsr1h,w,c
 33442  00050C  6EDA               	movwf	fsr2h,c
 33443  00050E  0EFF               	movlw	255
 33444  000510  22DA               	addwfc	fsr2h,f,c
 33445  000512  0E00               	movlw	0
 33446  000514  14DE               	andwf	postinc2,w,c
 33447  000516  6E32               	movwf	(btemp+8)^0,c
 33448  000518  0E00               	movlw	0
 33449  00051A  14DE               	andwf	postinc2,w,c
 33450  00051C  6E33               	movwf	(btemp+9)^0,c
 33451  00051E  0E80               	movlw	128
 33452  000520  14DE               	andwf	postinc2,w,c
 33453  000522  6E34               	movwf	(btemp+10)^0,c
 33454  000524  0E7F               	movlw	127
 33455  000526  14DE               	andwf	postinc2,w,c
 33456  000528  6E35               	movwf	(btemp+11)^0,c
 33457  00052A  5032               	movf	(btemp+8)^0,w,c
 33458  00052C  1033               	iorwf	(btemp+9)^0,w,c
 33459  00052E  1034               	iorwf	(btemp+10)^0,w,c
 33460  000530  1035               	iorwf	(btemp+11)^0,w,c
 33461  000532  A4D8               	btfss	status,2,c
 33462  000534  D008               	goto	l10708
 33463                           
 33464                           ;stkvar	_ff1 @ sp[(0)+-4]
 33465  000536  0EFC               	movlw	-4
 33466  000538  6AE3               	clrf	plusw1,c
 33467  00053A  0EFD               	movlw	-3
 33468  00053C  6AE3               	clrf	plusw1,c
 33469  00053E  0EFE               	movlw	-2
 33470  000540  6AE3               	clrf	plusw1,c
 33471  000542  0EFF               	movlw	-1
 33472  000544  6AE3               	clrf	plusw1,c
 33473  000546                     l10708:
 33474                           
 33475                           ;stkvar	_ff2 @ sp[(0)+-8]
 33476  000546  50E1               	movf	fsr1l,w,c
 33477  000548  0FF8               	addlw	-8
 33478  00054A  6ED9               	movwf	fsr2l,c
 33479  00054C  50E2               	movf	fsr1h,w,c
 33480  00054E  6EDA               	movwf	fsr2h,c
 33481  000550  0EFF               	movlw	255
 33482  000552  22DA               	addwfc	fsr2h,f,c
 33483  000554  0E00               	movlw	0
 33484  000556  14DE               	andwf	postinc2,w,c
 33485  000558  6E32               	movwf	(btemp+8)^0,c
 33486  00055A  0E00               	movlw	0
 33487  00055C  14DE               	andwf	postinc2,w,c
 33488  00055E  6E33               	movwf	(btemp+9)^0,c
 33489  000560  0E80               	movlw	128
 33490  000562  14DE               	andwf	postinc2,w,c
 33491  000564  6E34               	movwf	(btemp+10)^0,c
 33492  000566  0E7F               	movlw	127
 33493  000568  14DE               	andwf	postinc2,w,c
 33494  00056A  6E35               	movwf	(btemp+11)^0,c
 33495  00056C  5032               	movf	(btemp+8)^0,w,c
 33496  00056E  1033               	iorwf	(btemp+9)^0,w,c
 33497  000570  1034               	iorwf	(btemp+10)^0,w,c
 33498  000572  1035               	iorwf	(btemp+11)^0,w,c
 33499  000574  A4D8               	btfss	status,2,c
 33500  000576  D008               	goto	l10712
 33501                           
 33502                           ;stkvar	_ff2 @ sp[(0)+-8]
 33503  000578  0EF8               	movlw	-8
 33504  00057A  6AE3               	clrf	plusw1,c
 33505  00057C  0EF9               	movlw	-7
 33506  00057E  6AE3               	clrf	plusw1,c
 33507  000580  0EFA               	movlw	-6
 33508  000582  6AE3               	clrf	plusw1,c
 33509  000584  0EFB               	movlw	-5
 33510  000586  6AE3               	clrf	plusw1,c
 33511  000588                     l10712:
 33512                           
 33513                           ;stkvar	_ff2 @ sp[(0)+-8]
 33514                           ;stkvar	_ff1 @ sp[(0)+-4]
 33515  000588  50E1               	movf	fsr1l,w,c
 33516  00058A  0FFC               	addlw	-4
 33517  00058C  6ED9               	movwf	fsr2l,c
 33518  00058E  50E2               	movf	fsr1h,w,c
 33519  000590  6EDA               	movwf	fsr2h,c
 33520  000592  0EFF               	movlw	255
 33521  000594  22DA               	addwfc	fsr2h,f,c
 33522  000596  0EF8               	movlw	-8
 33523  000598  50E3               	movf	plusw1,w,c
 33524  00059A  18DE               	xorwf	postinc2,w,c
 33525  00059C  E10D               	bnz	u8950
 33526  00059E  0EF9               	movlw	-7
 33527  0005A0  50E3               	movf	plusw1,w,c
 33528  0005A2  18DE               	xorwf	postinc2,w,c
 33529  0005A4  E109               	bnz	u8950
 33530  0005A6  0EFA               	movlw	-6
 33531  0005A8  50E3               	movf	plusw1,w,c
 33532  0005AA  18DE               	xorwf	postinc2,w,c
 33533  0005AC  E105               	bnz	u8950
 33534  0005AE  0EFB               	movlw	-5
 33535  0005B0  50E3               	movf	plusw1,w,c
 33536  0005B2  18DE               	xorwf	postinc2,w,c
 33537  0005B4  B4D8               	btfsc	status,2,c
 33538  0005B6  D002               	goto	l10716
 33539  0005B8                     u8950:
 33540  0005B8  902A               	bcf	btemp& (0+255),0,c
 33541  0005BA  D001               	goto	l2983
 33542  0005BC                     l10716:
 33543  0005BC  802A               	bsf	btemp& (0+255),0,c
 33544  0005BE                     l2983:
 33545                           
 33546                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 33547  0005BE  0EF8               	movlw	248
 33548  0005C0  26E1               	addwf	fsr1l,f,c
 33549  0005C2  0EFF               	movlw	255
 33550  0005C4  22E2               	addwfc	fsr1h,f,c
 33551  0005C6  0012               	return		;funcret
 33552  0005C8                     __end_of___fleq:
 33553                           	opt callstack 0
 33554                           
 33555 ;; *************** function ___awmod *****************
 33556 ;; Defined at:
 33557 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 33558 ;; Parameters:    Size  Location     Type
 33559 ;;  dividend        2  [STACK] int 
 33560 ;;  divisor         2  [STACK] int 
 33561 ;; Auto vars:     Size  Location     Type
 33562 ;;  sign            1  [STACK] unsigned char 
 33563 ;;  counter         1  [STACK] unsigned char 
 33564 ;; Return value:  Size  Location     Type
 33565 ;;                  2  [STACK] int 
 33566 ;; Registers used:
 33567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33568 ;; Tracked objects:
 33569 ;;		On entry : 0/3
 33570 ;;		On exit  : 0/0
 33571 ;;		Unchanged: 0/0
 33572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33577 ;;Total ram usage:        0 bytes
 33578 ;; Hardware stack levels used:    1
 33579 ;; Hardware stack levels required when called:   15
 33580 ;; This function calls:
 33581 ;;		Nothing
 33582 ;; This function is called by:
 33583 ;;		_efgtoa
 33584 ;;		_asctime
 33585 ;; This function uses a reentrant model
 33586 ;;
 33587                           
 33588                           	psect	text112
 33589  01F872                     __ptext112:
 33590                           	opt callstack 0
 33591  01F872                     ___awmod:
 33592                           	opt callstack 0
 33593                           
 33594                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33595  01F872  52E6               	movf	postinc1,f,c
 33596  01F874  52E6               	movf	postinc1,f,c
 33597                           
 33598                           ;stkvar	_sign @ sp[(-2)+0]
 33599                           
 33600                           ;incstack = 0
 33601 ;; hardware stack exceeded
 33602  01F876  0EFE               	movlw	-2
 33603  01F878  6AE3               	clrf	plusw1,c
 33604                           
 33605                           ;stkvar	_dividend @ sp[(-2)+-2]
 33606  01F87A  0EFD               	movlw	-3
 33607  01F87C  AEE3               	btfss	plusw1,7,c
 33608  01F87E  D009               	goto	l15508
 33609                           
 33610                           ;stkvar	_dividend @ sp[(-2)+-2]
 33611                           ;stkvar	_dividend @ sp[(-2)+-2]
 33612  01F880  0EFC               	movlw	-4
 33613  01F882  6CE3               	negf	plusw1,c
 33614  01F884  0EFD               	movlw	-3
 33615  01F886  1EE3               	comf	plusw1,f,c
 33616  01F888  B0D8               	btfsc	status,0,c
 33617  01F88A  2AE3               	incf	plusw1,f,c
 33618                           
 33619                           ;stkvar	_sign @ sp[(-2)+0]
 33620  01F88C  0EFE               	movlw	-2
 33621  01F88E  6AE3               	clrf	plusw1,c
 33622  01F890  2AE3               	incf	plusw1,f,c
 33623  01F892                     l15508:
 33624                           
 33625                           ;stkvar	_divisor @ sp[(-2)+-4]
 33626  01F892  0EFB               	movlw	-5
 33627  01F894  AEE3               	btfss	plusw1,7,c
 33628  01F896  D006               	goto	l15512
 33629                           
 33630                           ;stkvar	_divisor @ sp[(-2)+-4]
 33631                           ;stkvar	_divisor @ sp[(-2)+-4]
 33632  01F898  0EFA               	movlw	-6
 33633  01F89A  6CE3               	negf	plusw1,c
 33634  01F89C  0EFB               	movlw	-5
 33635  01F89E  1EE3               	comf	plusw1,f,c
 33636  01F8A0  B0D8               	btfsc	status,0,c
 33637  01F8A2  2AE3               	incf	plusw1,f,c
 33638  01F8A4                     l15512:
 33639                           
 33640                           ;stkvar	_divisor @ sp[(-2)+-4]
 33641  01F8A4  0EFA               	movlw	-6
 33642  01F8A6  006F FF8C  F02A    	movff	plusw1,btemp
 33643  01F8AC  0EFB               	movlw	-5
 33644  01F8AE  50E3               	movf	plusw1,w,c
 33645  01F8B0  102A               	iorwf	btemp^0,w,c
 33646  01F8B2  B4D8               	btfsc	status,2,c
 33647  01F8B4  D053               	goto	u14500
 33648                           
 33649                           ;stkvar	_counter @ sp[(-2)+1]
 33650  01F8B6  0EFF               	movlw	-1
 33651  01F8B8  6AE3               	clrf	plusw1,c
 33652  01F8BA  D012               	goto	L37
 33653  01F8BC                     l15516:
 33654                           
 33655                           ;stkvar	_divisor @ sp[(-2)+-4]
 33656  01F8BC  0EFA               	movlw	-6
 33657  01F8BE  50E3               	movf	plusw1,w,c
 33658  01F8C0  90D8               	bcf	status,0,c
 33659  01F8C2  34E8               	rlcf	wreg,w,c
 33660  01F8C4  6E2A               	movwf	btemp^0,c
 33661  01F8C6  0EFA               	movlw	-6
 33662  01F8C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 33663  01F8CE  0EFB               	movlw	-5
 33664  01F8D0  50E3               	movf	plusw1,w,c
 33665  01F8D2  34E8               	rlcf	wreg,w,c
 33666  01F8D4  6E2A               	movwf	btemp^0,c
 33667  01F8D6  0EFB               	movlw	-5
 33668  01F8D8  0060  F0AB  FFE3   	movff	btemp,plusw1
 33669                           
 33670                           ;stkvar	_counter @ sp[(-2)+1]
 33671  01F8DE  0EFF               	movlw	-1
 33672  01F8E0                     L37:
 33673  01F8E0  2AE3               	incf	plusw1,f,c
 33674                           
 33675                           ;stkvar	_divisor @ sp[(-2)+-4]
 33676  01F8E2  0EFB               	movlw	-5
 33677  01F8E4  AEE3               	btfss	plusw1,7,c
 33678  01F8E6  D7EA               	goto	l15516
 33679  01F8E8                     u14480:
 33680                           
 33681                           ;stkvar	_divisor @ sp[(-2)+-4]
 33682  01F8E8  0EFA               	movlw	-6
 33683  01F8EA  006F FF8C  F034    	movff	plusw1,btemp+10
 33684  01F8F0  0EFB               	movlw	-5
 33685  01F8F2  006F FF8C  F035    	movff	plusw1,btemp+11
 33686                           
 33687                           ;stkvar	_dividend @ sp[(-2)+-2]
 33688  01F8F8  0EFC               	movlw	-4
 33689  01F8FA  006F FF8C  F032    	movff	plusw1,btemp+8
 33690  01F900  0EFD               	movlw	-3
 33691  01F902  006F FF8C  F033    	movff	plusw1,btemp+9
 33692  01F908  5034               	movf	(btemp+10)^0,w,c
 33693  01F90A  5C32               	subwf	(btemp+8)^0,w,c
 33694  01F90C  5035               	movf	(btemp+11)^0,w,c
 33695  01F90E  5833               	subwfb	(btemp+9)^0,w,c
 33696  01F910  A0D8               	btfss	status,0,c
 33697  01F912  D014               	goto	l15526
 33698                           
 33699                           ;stkvar	_divisor @ sp[(-2)+-4]
 33700                           ;stkvar	_dividend @ sp[(-2)+-2]
 33701  01F914  0EFC               	movlw	-4
 33702  01F916  50E3               	movf	plusw1,w,c
 33703  01F918  6E2A               	movwf	btemp^0,c
 33704  01F91A  0EFA               	movlw	-6
 33705  01F91C  50E3               	movf	plusw1,w,c
 33706  01F91E  5E2A               	subwf	btemp^0,f,c
 33707  01F920  0EFC               	movlw	-4
 33708  01F922  0060  F0AB  FFE3   	movff	btemp,plusw1
 33709  01F928  0EFD               	movlw	-3
 33710  01F92A  50E3               	movf	plusw1,w,c
 33711  01F92C  6E2A               	movwf	btemp^0,c
 33712  01F92E  0EFB               	movlw	-5
 33713  01F930  50E3               	movf	plusw1,w,c
 33714  01F932  5A2A               	subwfb	btemp^0,f,c
 33715  01F934  0EFD               	movlw	-3
 33716  01F936  0060  F0AB  FFE3   	movff	btemp,plusw1
 33717  01F93C                     l15526:
 33718                           
 33719                           ;stkvar	_divisor @ sp[(-2)+-4]
 33720  01F93C  90D8               	bcf	status,0,c
 33721  01F93E  0EFB               	movlw	-5
 33722  01F940  32E3               	rrcf	plusw1,f,c
 33723  01F942  0EFA               	movlw	-6
 33724  01F944  32E3               	rrcf	plusw1,f,c
 33725                           
 33726                           ;stkvar	_counter @ sp[(-2)+1]
 33727  01F946  0EFF               	movlw	-1
 33728  01F948  50E3               	movf	plusw1,w,c
 33729  01F94A  6E2A               	movwf	btemp^0,c
 33730  01F94C  0E01               	movlw	1
 33731  01F94E  5E2A               	subwf	btemp^0,f,c
 33732  01F950  0EFF               	movlw	-1
 33733  01F952  0060  F0AB  FFE3   	movff	btemp,plusw1
 33734  01F958  A4D8               	btfss	status,2,c
 33735  01F95A  D7C6               	goto	u14480
 33736  01F95C                     u14500:
 33737                           
 33738                           ;stkvar	_sign @ sp[(-2)+0]
 33739  01F95C  0EFE               	movlw	-2
 33740  01F95E  50E3               	movf	plusw1,w,c
 33741  01F960  B4D8               	btfsc	status,2,c
 33742  01F962  D006               	goto	l15534
 33743                           
 33744                           ;stkvar	_dividend @ sp[(-2)+-2]
 33745                           ;stkvar	_dividend @ sp[(-2)+-2]
 33746  01F964  0EFC               	movlw	-4
 33747  01F966  6CE3               	negf	plusw1,c
 33748  01F968  0EFD               	movlw	-3
 33749  01F96A  1EE3               	comf	plusw1,f,c
 33750  01F96C  B0D8               	btfsc	status,0,c
 33751  01F96E  2AE3               	incf	plusw1,f,c
 33752  01F970                     l15534:
 33753                           
 33754                           ;stkvar	_dividend @ sp[(-2)+-2]
 33755  01F970  0EFC               	movlw	-4
 33756  01F972  006F FF8C  F02A    	movff	plusw1,btemp
 33757  01F978  0EFD               	movlw	-3
 33758  01F97A  006F FF8C  F02B    	movff	plusw1,btemp+1
 33759                           
 33760                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33761  01F980  0EFA               	movlw	250
 33762  01F982  26E1               	addwf	fsr1l,f,c
 33763  01F984  0EFF               	movlw	255
 33764  01F986  22E2               	addwfc	fsr1h,f,c
 33765  01F988  0012               	return		;funcret
 33766  01F98A                     __end_of___awmod:
 33767                           	opt callstack 0
 33768                           
 33769 ;; *************** function ___awdiv *****************
 33770 ;; Defined at:
 33771 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 33772 ;; Parameters:    Size  Location     Type
 33773 ;;  dividend        2  [STACK] int 
 33774 ;;  divisor         2  [STACK] int 
 33775 ;; Auto vars:     Size  Location     Type
 33776 ;;  quotient        2  [STACK] int 
 33777 ;;  sign            1  [STACK] unsigned char 
 33778 ;;  counter         1  [STACK] unsigned char 
 33779 ;; Return value:  Size  Location     Type
 33780 ;;                  2  [STACK] int 
 33781 ;; Registers used:
 33782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33783 ;; Tracked objects:
 33784 ;;		On entry : 0/3
 33785 ;;		On exit  : 0/0
 33786 ;;		Unchanged: 0/0
 33787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33792 ;;Total ram usage:        0 bytes
 33793 ;; Hardware stack levels used:    1
 33794 ;; Hardware stack levels required when called:   15
 33795 ;; This function calls:
 33796 ;;		Nothing
 33797 ;; This function is called by:
 33798 ;;		_efgtoa
 33799 ;;		_put2d
 33800 ;;		_asctime
 33801 ;;		_scan_trans
 33802 ;; This function uses a reentrant model
 33803 ;;
 33804                           
 33805                           	psect	text113
 33806  01F014                     __ptext113:
 33807                           	opt callstack 0
 33808  01F014                     ___awdiv:
 33809                           	opt callstack 0
 33810                           
 33811                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33812  01F014  52E6               	movf	postinc1,f,c
 33813  01F016  52E6               	movf	postinc1,f,c
 33814  01F018  52E6               	movf	postinc1,f,c
 33815  01F01A  52E6               	movf	postinc1,f,c
 33816                           
 33817                           ;stkvar	_sign @ sp[(-4)+2]
 33818                           
 33819                           ;incstack = 0
 33820 ;; hardware stack exceeded
 33821  01F01C  0EFE               	movlw	-2
 33822  01F01E  6AE3               	clrf	plusw1,c
 33823                           
 33824                           ;stkvar	_divisor @ sp[(-4)+-4]
 33825  01F020  0EF9               	movlw	-7
 33826  01F022  AEE3               	btfss	plusw1,7,c
 33827  01F024  D009               	goto	l15462
 33828                           
 33829                           ;stkvar	_divisor @ sp[(-4)+-4]
 33830                           ;stkvar	_divisor @ sp[(-4)+-4]
 33831  01F026  0EF8               	movlw	-8
 33832  01F028  6CE3               	negf	plusw1,c
 33833  01F02A  0EF9               	movlw	-7
 33834  01F02C  1EE3               	comf	plusw1,f,c
 33835  01F02E  B0D8               	btfsc	status,0,c
 33836  01F030  2AE3               	incf	plusw1,f,c
 33837                           
 33838                           ;stkvar	_sign @ sp[(-4)+2]
 33839  01F032  0EFE               	movlw	-2
 33840  01F034  6AE3               	clrf	plusw1,c
 33841  01F036  2AE3               	incf	plusw1,f,c
 33842  01F038                     l15462:
 33843                           
 33844                           ;stkvar	_dividend @ sp[(-4)+-2]
 33845  01F038  0EFB               	movlw	-5
 33846  01F03A  AEE3               	btfss	plusw1,7,c
 33847  01F03C  D008               	goto	l15468
 33848                           
 33849                           ;stkvar	_dividend @ sp[(-4)+-2]
 33850                           ;stkvar	_dividend @ sp[(-4)+-2]
 33851  01F03E  0EFA               	movlw	-6
 33852  01F040  6CE3               	negf	plusw1,c
 33853  01F042  0EFB               	movlw	-5
 33854  01F044  1EE3               	comf	plusw1,f,c
 33855  01F046  B0D8               	btfsc	status,0,c
 33856  01F048  2AE3               	incf	plusw1,f,c
 33857                           
 33858                           ;stkvar	_sign @ sp[(-4)+2]
 33859  01F04A  0EFE               	movlw	-2
 33860  01F04C  70E3               	btg	plusw1,0,c
 33861  01F04E                     l15468:
 33862                           
 33863                           ;stkvar	_quotient @ sp[(-4)+0]
 33864  01F04E  0EFC               	movlw	-4
 33865  01F050  6AE3               	clrf	plusw1,c
 33866  01F052  0EFD               	movlw	-3
 33867  01F054  6AE3               	clrf	plusw1,c
 33868                           
 33869                           ;stkvar	_divisor @ sp[(-4)+-4]
 33870  01F056  0EF8               	movlw	-8
 33871  01F058  006F FF8C  F02A    	movff	plusw1,btemp
 33872  01F05E  0EF9               	movlw	-7
 33873  01F060  50E3               	movf	plusw1,w,c
 33874  01F062  102A               	iorwf	btemp^0,w,c
 33875  01F064  B4D8               	btfsc	status,2,c
 33876  01F066  D066               	goto	u14430
 33877                           
 33878                           ;stkvar	_counter @ sp[(-4)+3]
 33879  01F068  0EFF               	movlw	-1
 33880  01F06A  6AE3               	clrf	plusw1,c
 33881  01F06C  D012               	goto	L38
 33882  01F06E                     l15474:
 33883                           
 33884                           ;stkvar	_divisor @ sp[(-4)+-4]
 33885  01F06E  0EF8               	movlw	-8
 33886  01F070  50E3               	movf	plusw1,w,c
 33887  01F072  90D8               	bcf	status,0,c
 33888  01F074  34E8               	rlcf	wreg,w,c
 33889  01F076  6E2A               	movwf	btemp^0,c
 33890  01F078  0EF8               	movlw	-8
 33891  01F07A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33892  01F080  0EF9               	movlw	-7
 33893  01F082  50E3               	movf	plusw1,w,c
 33894  01F084  34E8               	rlcf	wreg,w,c
 33895  01F086  6E2A               	movwf	btemp^0,c
 33896  01F088  0EF9               	movlw	-7
 33897  01F08A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33898                           
 33899                           ;stkvar	_counter @ sp[(-4)+3]
 33900  01F090  0EFF               	movlw	-1
 33901  01F092                     L38:
 33902  01F092  2AE3               	incf	plusw1,f,c
 33903                           
 33904                           ;stkvar	_divisor @ sp[(-4)+-4]
 33905  01F094  0EF9               	movlw	-7
 33906  01F096  AEE3               	btfss	plusw1,7,c
 33907  01F098  D7EA               	goto	l15474
 33908  01F09A                     u14410:
 33909                           
 33910                           ;stkvar	_quotient @ sp[(-4)+0]
 33911  01F09A  0EFC               	movlw	-4
 33912  01F09C  50E3               	movf	plusw1,w,c
 33913  01F09E  90D8               	bcf	status,0,c
 33914  01F0A0  34E8               	rlcf	wreg,w,c
 33915  01F0A2  6E2A               	movwf	btemp^0,c
 33916  01F0A4  0EFC               	movlw	-4
 33917  01F0A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33918  01F0AC  0EFD               	movlw	-3
 33919  01F0AE  50E3               	movf	plusw1,w,c
 33920  01F0B0  34E8               	rlcf	wreg,w,c
 33921  01F0B2  6E2A               	movwf	btemp^0,c
 33922  01F0B4  0EFD               	movlw	-3
 33923  01F0B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33924                           
 33925                           ;stkvar	_divisor @ sp[(-4)+-4]
 33926  01F0BC  0EF8               	movlw	-8
 33927  01F0BE  006F FF8C  F034    	movff	plusw1,btemp+10
 33928  01F0C4  0EF9               	movlw	-7
 33929  01F0C6  006F FF8C  F035    	movff	plusw1,btemp+11
 33930                           
 33931                           ;stkvar	_dividend @ sp[(-4)+-2]
 33932  01F0CC  0EFA               	movlw	-6
 33933  01F0CE  006F FF8C  F032    	movff	plusw1,btemp+8
 33934  01F0D4  0EFB               	movlw	-5
 33935  01F0D6  006F FF8C  F033    	movff	plusw1,btemp+9
 33936  01F0DC  5034               	movf	(btemp+10)^0,w,c
 33937  01F0DE  5C32               	subwf	(btemp+8)^0,w,c
 33938  01F0E0  5035               	movf	(btemp+11)^0,w,c
 33939  01F0E2  5833               	subwfb	(btemp+9)^0,w,c
 33940  01F0E4  A0D8               	btfss	status,0,c
 33941  01F0E6  D016               	goto	l15488
 33942                           
 33943                           ;stkvar	_divisor @ sp[(-4)+-4]
 33944                           ;stkvar	_dividend @ sp[(-4)+-2]
 33945  01F0E8  0EFA               	movlw	-6
 33946  01F0EA  50E3               	movf	plusw1,w,c
 33947  01F0EC  6E2A               	movwf	btemp^0,c
 33948  01F0EE  0EF8               	movlw	-8
 33949  01F0F0  50E3               	movf	plusw1,w,c
 33950  01F0F2  5E2A               	subwf	btemp^0,f,c
 33951  01F0F4  0EFA               	movlw	-6
 33952  01F0F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33953  01F0FC  0EFB               	movlw	-5
 33954  01F0FE  50E3               	movf	plusw1,w,c
 33955  01F100  6E2A               	movwf	btemp^0,c
 33956  01F102  0EF9               	movlw	-7
 33957  01F104  50E3               	movf	plusw1,w,c
 33958  01F106  5A2A               	subwfb	btemp^0,f,c
 33959  01F108  0EFB               	movlw	-5
 33960  01F10A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33961                           
 33962                           ;stkvar	_quotient @ sp[(-4)+0]
 33963  01F110  0EFC               	movlw	-4
 33964  01F112  80E3               	bsf	plusw1,0,c
 33965  01F114                     l15488:
 33966                           
 33967                           ;stkvar	_divisor @ sp[(-4)+-4]
 33968  01F114  90D8               	bcf	status,0,c
 33969  01F116  0EF9               	movlw	-7
 33970  01F118  32E3               	rrcf	plusw1,f,c
 33971  01F11A  0EF8               	movlw	-8
 33972  01F11C  32E3               	rrcf	plusw1,f,c
 33973                           
 33974                           ;stkvar	_counter @ sp[(-4)+3]
 33975  01F11E  0EFF               	movlw	-1
 33976  01F120  50E3               	movf	plusw1,w,c
 33977  01F122  6E2A               	movwf	btemp^0,c
 33978  01F124  0E01               	movlw	1
 33979  01F126  5E2A               	subwf	btemp^0,f,c
 33980  01F128  0EFF               	movlw	-1
 33981  01F12A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33982  01F130  A4D8               	btfss	status,2,c
 33983  01F132  D7B3               	goto	u14410
 33984  01F134                     u14430:
 33985                           
 33986                           ;stkvar	_sign @ sp[(-4)+2]
 33987  01F134  0EFE               	movlw	-2
 33988  01F136  50E3               	movf	plusw1,w,c
 33989  01F138  B4D8               	btfsc	status,2,c
 33990  01F13A  D006               	goto	l15496
 33991                           
 33992                           ;stkvar	_quotient @ sp[(-4)+0]
 33993                           ;stkvar	_quotient @ sp[(-4)+0]
 33994  01F13C  0EFC               	movlw	-4
 33995  01F13E  6CE3               	negf	plusw1,c
 33996  01F140  0EFD               	movlw	-3
 33997  01F142  1EE3               	comf	plusw1,f,c
 33998  01F144  B0D8               	btfsc	status,0,c
 33999  01F146  2AE3               	incf	plusw1,f,c
 34000  01F148                     l15496:
 34001                           
 34002                           ;stkvar	_quotient @ sp[(-4)+0]
 34003  01F148  0EFC               	movlw	-4
 34004  01F14A  006F FF8C  F02A    	movff	plusw1,btemp
 34005  01F150  0EFD               	movlw	-3
 34006  01F152  006F FF8C  F02B    	movff	plusw1,btemp+1
 34007                           
 34008                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34009  01F158  0EF8               	movlw	248
 34010  01F15A  26E1               	addwf	fsr1l,f,c
 34011  01F15C  0EFF               	movlw	255
 34012  01F15E  22E2               	addwfc	fsr1h,f,c
 34013  01F160  0012               	return		;funcret
 34014  01F162                     __end_of___awdiv:
 34015                           	opt callstack 0
 34016                           
 34017 ;; *************** function _dtoa *****************
 34018 ;; Defined at:
 34019 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34020 ;; Parameters:    Size  Location     Type
 34021 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34022 ;;		 -> f(6), NULL(0), 
 34023 ;;  d               8  [STACK] long long 
 34024 ;; Auto vars:     Size  Location     Type
 34025 ;;  n               8  [STACK] long long 
 34026 ;;  i               2  [STACK] int 
 34027 ;;  s               2  [STACK] int 
 34028 ;;  w               2  [STACK] int 
 34029 ;;  p               2  [STACK] int 
 34030 ;; Return value:  Size  Location     Type
 34031 ;;                  2  [STACK] int 
 34032 ;; Registers used:
 34033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 34034 ;; Tracked objects:
 34035 ;;		On entry : 0/0
 34036 ;;		On exit  : 0/0
 34037 ;;		Unchanged: 0/0
 34038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34043 ;;Total ram usage:        0 bytes
 34044 ;; Hardware stack levels used:    1
 34045 ;; Hardware stack levels required when called:   20
 34046 ;; This function calls:
 34047 ;;		___aodiv
 34048 ;;		___aomod
 34049 ;;		_abs
 34050 ;;		_pad
 34051 ;; This function is called by:
 34052 ;;		_vfpfcnvrt
 34053 ;; This function uses a reentrant model
 34054 ;;
 34055                           
 34056                           	psect	text114
 34057  018BA8                     __ptext114:
 34058                           	opt callstack 0
 34059  018BA8                     _dtoa:
 34060                           	opt callstack 0
 34061                           
 34062                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 34063  018BA8  0E12               	movlw	18
 34064  018BAA  26E1               	addwf	fsr1l,f,c
 34065  018BAC  0E00               	movlw	0
 34066  018BAE  22E2               	addwfc	fsr1h,f,c
 34067                           
 34068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 34069                           ;stkvar	_d @ sp[(-18)+-10]
 34070                           
 34071                           ;incstack = 0
 34072 ;; hardware stack exceeded
 34073  018BB0  0EE4               	movlw	228
 34074  018BB2  24E1               	addwf	fsr1l,w,c
 34075  018BB4  6ED9               	movwf	fsr2l,c
 34076  018BB6  0EFF               	movlw	255
 34077  018BB8  20E2               	addwfc	fsr1h,w,c
 34078  018BBA  6EDA               	movwf	fsr2h,c
 34079                           
 34080                           ;stkvar	_n @ sp[(-18)+2]
 34081  018BBC  0E08               	movlw	8
 34082  018BBE  6E2A               	movwf	btemp^0,c
 34083  018BC0  0EF0               	movlw	-16
 34084  018BC2                     us1454999:
 34085  018BC2  006F FF7B FFE3     	movff	postinc2,plusw1
 34086  018BC8  28E8               	incf	wreg,w,c
 34087  018BCA  2E2A               	decfsz	btemp^0,f,c
 34088  018BCC  D7FA               	bra	us1454999
 34089                           
 34090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 34091                           ;stkvar	_n @ sp[(-18)+2]
 34092  018BCE  0EF7               	movlw	-9
 34093  018BD0  AEE3               	btfss	plusw1,7,c
 34094  018BD2  D002               	goto	u14550
 34095  018BD4  0E01               	movlw	1
 34096  018BD6  D001               	goto	u14560
 34097  018BD8                     u14550:
 34098  018BD8  0E00               	movlw	0
 34099  018BDA                     u14560:
 34100  018BDA  6E34               	movwf	(btemp+10)^0,c
 34101  018BDC  6A35               	clrf	(btemp+11)^0,c
 34102                           
 34103                           ;stkvar	_s @ sp[(-18)+12]
 34104  018BDE  0EFA               	movlw	-6
 34105  018BE0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34106  018BE6  0EFB               	movlw	-5
 34107  018BE8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34108                           
 34109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 34110                           ;stkvar	_s @ sp[(-18)+12]
 34111  018BEE  0EFA               	movlw	-6
 34112  018BF0  006F FF8C  F02A    	movff	plusw1,btemp
 34113  018BF6  0EFB               	movlw	-5
 34114  018BF8  50E3               	movf	plusw1,w,c
 34115  018BFA  102A               	iorwf	btemp^0,w,c
 34116  018BFC  B4D8               	btfsc	status,2,c
 34117  018BFE  D025               	goto	u14580
 34118                           
 34119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 34120                           ;stkvar	_n @ sp[(-18)+2]
 34121                           ;stkvar	_n @ sp[(-18)+2]
 34122  018C00  0EF0               	movlw	-16
 34123  018C02  6CE3               	negf	plusw1,c
 34124  018C04  0EF1               	movlw	-15
 34125  018C06  1EE3               	comf	plusw1,f,c
 34126  018C08  0EF2               	movlw	-14
 34127  018C0A  1EE3               	comf	plusw1,f,c
 34128  018C0C  0EF3               	movlw	-13
 34129  018C0E  1EE3               	comf	plusw1,f,c
 34130  018C10  0EF4               	movlw	-12
 34131  018C12  1EE3               	comf	plusw1,f,c
 34132  018C14  0EF5               	movlw	-11
 34133  018C16  1EE3               	comf	plusw1,f,c
 34134  018C18  0EF6               	movlw	-10
 34135  018C1A  1EE3               	comf	plusw1,f,c
 34136  018C1C  0EF7               	movlw	-9
 34137  018C1E  1EE3               	comf	plusw1,f,c
 34138  018C20  E314               	bnc	u14580
 34139  018C22  0EF1               	movlw	-15
 34140  018C24  2AE3               	incf	plusw1,f,c
 34141  018C26  E311               	bnc	u14580
 34142  018C28  0EF2               	movlw	-14
 34143  018C2A  2AE3               	incf	plusw1,f,c
 34144  018C2C  E30E               	bnc	u14580
 34145  018C2E  0EF3               	movlw	-13
 34146  018C30  2AE3               	incf	plusw1,f,c
 34147  018C32  E30B               	bnc	u14580
 34148  018C34  0EF4               	movlw	-12
 34149  018C36  2AE3               	incf	plusw1,f,c
 34150  018C38  E308               	bnc	u14580
 34151  018C3A  0EF5               	movlw	-11
 34152  018C3C  2AE3               	incf	plusw1,f,c
 34153  018C3E  E305               	bnc	u14580
 34154  018C40  0EF6               	movlw	-10
 34155  018C42  2AE3               	incf	plusw1,f,c
 34156  018C44  E302               	bnc	u14580
 34157  018C46  0EF7               	movlw	-9
 34158  018C48  2AE3               	incf	plusw1,f,c
 34159  018C4A                     u14580:
 34160                           
 34161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 34162  018C4A  AE4D               	btfss	(_prec+1)^0,7,c
 34163                           
 34164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 34165  018C4C  924E               	bcf	_flags^0,1,c
 34166                           
 34167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 34168  018C4E  BE4D               	btfsc	(_prec+1)^0,7,c
 34169  018C50  D005               	goto	u14600
 34170  018C52  504D               	movf	(_prec+1)^0,w,c
 34171  018C54  E110               	bnz	l15574
 34172  018C56  044C               	decf	_prec^0,w,c
 34173  018C58  B0D8               	btfsc	status,0,c
 34174  018C5A  D00D               	goto	l15574
 34175  018C5C                     u14600:
 34176  018C5C  0E01               	movlw	1
 34177  018C5E  6E34               	movwf	(btemp+10)^0,c
 34178  018C60  0E00               	movlw	0
 34179  018C62  6E35               	movwf	(btemp+11)^0,c
 34180                           
 34181                           ;stkvar	_p @ sp[(-18)+16]
 34182  018C64  0EFE               	movlw	-2
 34183  018C66  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34184  018C6C  0EFF               	movlw	-1
 34185  018C6E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34186  018C74  D008               	goto	l2487
 34187  018C76                     l15574:
 34188                           
 34189                           ;stkvar	_p @ sp[(-18)+16]
 34190  018C76  0EFE               	movlw	-2
 34191  018C78  0060  F133  FFE3   	movff	_prec,plusw1
 34192  018C7E  0EFF               	movlw	-1
 34193  018C80  0060  F137  FFE3   	movff	_prec+1,plusw1
 34194  018C86                     l2487:
 34195                           
 34196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 34197                           ;stkvar	_w @ sp[(-18)+14]
 34198  018C86  0EFC               	movlw	-4
 34199  018C88  0060  F12B  FFE3   	movff	_width,plusw1
 34200  018C8E  0EFD               	movlw	-3
 34201  018C90  0060  F12F  FFE3   	movff	_width+1,plusw1
 34202                           
 34203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 34204                           ;stkvar	_s @ sp[(-18)+12]
 34205  018C96  0EFA               	movlw	-6
 34206  018C98  006F FF8C  F02A    	movff	plusw1,btemp
 34207  018C9E  0EFB               	movlw	-5
 34208  018CA0  50E3               	movf	plusw1,w,c
 34209  018CA2  102A               	iorwf	btemp^0,w,c
 34210  018CA4  A4D8               	btfss	status,2,c
 34211  018CA6  D002               	goto	u14620
 34212  018CA8  A44E               	btfss	_flags^0,2,c
 34213  018CAA  D00A               	goto	l15582
 34214  018CAC                     u14620:
 34215                           
 34216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 34217                           ;stkvar	_w @ sp[(-18)+14]
 34218  018CAC  50E1               	movf	fsr1l,w,c
 34219  018CAE  0FFC               	addlw	-4
 34220  018CB0  6ED9               	movwf	fsr2l,c
 34221  018CB2  50E2               	movf	fsr1h,w,c
 34222  018CB4  6EDA               	movwf	fsr2h,c
 34223  018CB6  0EFF               	movlw	255
 34224  018CB8  22DA               	addwfc	fsr2h,f,c
 34225  018CBA  06DE               	decf	postinc2,f,c
 34226  018CBC  0E00               	movlw	0
 34227  018CBE  5ADD               	subwfb	postdec2,f,c
 34228  018CC0                     l15582:
 34229                           
 34230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 34231  018CC0  0E4F               	movlw	79
 34232  018CC2  6E34               	movwf	(btemp+10)^0,c
 34233  018CC4  0E00               	movlw	0
 34234  018CC6  6E35               	movwf	(btemp+11)^0,c
 34235                           
 34236                           ;stkvar	_i @ sp[(-18)+10]
 34237  018CC8  0EF8               	movlw	-8
 34238  018CCA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34239  018CD0  0EF9               	movlw	-7
 34240  018CD2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34241                           
 34242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 34243  018CD8  0103               	movlb	3	; () banked
 34244  018CDA  6BA3               	clrf	(_dbuf+79)& (0+255),b
 34245                           
 34246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34247  018CDC  D109               	goto	l15596
 34248  018CDE                     l15586:
 34249                           
 34250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 34251                           ;stkvar	_i @ sp[(-18)+10]
 34252  018CDE  50E1               	movf	fsr1l,w,c
 34253  018CE0  0FF8               	addlw	-8
 34254  018CE2  6ED9               	movwf	fsr2l,c
 34255  018CE4  50E2               	movf	fsr1h,w,c
 34256  018CE6  6EDA               	movwf	fsr2h,c
 34257  018CE8  0EFF               	movlw	255
 34258  018CEA  22DA               	addwfc	fsr2h,f,c
 34259  018CEC  06DE               	decf	postinc2,f,c
 34260  018CEE  0E00               	movlw	0
 34261  018CF0  5ADD               	subwfb	postdec2,f,c
 34262                           
 34263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 34264  018CF2  0E0A               	movlw	10
 34265  018CF4  6EE6               	movwf	postinc1,c
 34266  018CF6  0E00               	movlw	0
 34267  018CF8  6EE6               	movwf	postinc1,c
 34268  018CFA  0E00               	movlw	0
 34269  018CFC  6EE6               	movwf	postinc1,c
 34270  018CFE  0E00               	movlw	0
 34271  018D00  6EE6               	movwf	postinc1,c
 34272  018D02  0E00               	movlw	0
 34273  018D04  6EE6               	movwf	postinc1,c
 34274  018D06  0E00               	movlw	0
 34275  018D08  6EE6               	movwf	postinc1,c
 34276  018D0A  0E00               	movlw	0
 34277  018D0C  6EE6               	movwf	postinc1,c
 34278  018D0E  0E00               	movlw	0
 34279  018D10  6EE6               	movwf	postinc1,c
 34280                           
 34281                           ;stkvar	_n @ sp[(-26)+2]
 34282  018D12  50E1               	movf	fsr1l,w,c
 34283  018D14  0FE8               	addlw	-24
 34284  018D16  6ED9               	movwf	fsr2l,c
 34285  018D18  50E2               	movf	fsr1h,w,c
 34286  018D1A  6EDA               	movwf	fsr2h,c
 34287  018D1C  0EFF               	movlw	255
 34288  018D1E  22DA               	addwfc	fsr2h,f,c
 34289  018D20  006F FF7B FFE6     	movff	postinc2,postinc1
 34290  018D26  006F FF7B FFE6     	movff	postinc2,postinc1
 34291  018D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34292  018D32  006F FF7B FFE6     	movff	postinc2,postinc1
 34293  018D38  006F FF7B FFE6     	movff	postinc2,postinc1
 34294  018D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34295  018D44  006F FF7B FFE6     	movff	postinc2,postinc1
 34296  018D4A  006F FF7B FFE6     	movff	postinc2,postinc1
 34297  018D50  ECA6  F0E5         	call	___aomod	;wreg free
 34298  018D54  52E5               	movf	postdec1,f,c
 34299  018D56  006F FF9C  F041    	movff	indf1,btemp+23
 34300  018D5C  52E5               	movf	postdec1,f,c
 34301  018D5E  006F FF9C  F040    	movff	indf1,btemp+22
 34302  018D64  52E5               	movf	postdec1,f,c
 34303  018D66  006F FF9C  F03F    	movff	indf1,btemp+21
 34304  018D6C  52E5               	movf	postdec1,f,c
 34305  018D6E  006F FF9C  F03E    	movff	indf1,btemp+20
 34306  018D74  52E5               	movf	postdec1,f,c
 34307  018D76  006F FF9C  F03D    	movff	indf1,btemp+19
 34308  018D7C  52E5               	movf	postdec1,f,c
 34309  018D7E  006F FF9C  F03C    	movff	indf1,btemp+18
 34310  018D84  52E5               	movf	postdec1,f,c
 34311  018D86  006F FF9C  F03B    	movff	indf1,btemp+17
 34312  018D8C  52E5               	movf	postdec1,f,c
 34313  018D8E  006F FF9C  F03A    	movff	indf1,btemp+16
 34314  018D94  0EF8               	movlw	248
 34315  018D96  26E1               	addwf	fsr1l,f,c
 34316  018D98  0EFF               	movlw	255
 34317  018D9A  22E2               	addwfc	fsr1h,f,c
 34318  018D9C  0060  F0E8  F034   	movff	btemp+16,btemp+10
 34319  018DA2  0060  F0EC  F035   	movff	btemp+17,btemp+11
 34320  018DA8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34321  018DAE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34322  018DB4  ECAF  F00E         	call	_abs	;wreg free
 34323  018DB8  0E30               	movlw	48
 34324  018DBA  262A               	addwf	btemp^0,f,c
 34325                           
 34326                           ;stkvar	_i @ sp[(-18)+10]
 34327  018DBC  0EF8               	movlw	-8
 34328  018DBE  006F FF8C  F034    	movff	plusw1,btemp+10
 34329  018DC4  0EF9               	movlw	-7
 34330  018DC6  006F FF8C  F035    	movff	plusw1,btemp+11
 34331  018DCC  0E54               	movlw	low _dbuf
 34332  018DCE  2434               	addwf	(btemp+10)^0,w,c
 34333  018DD0  6ED9               	movwf	fsr2l,c
 34334  018DD2  0E03               	movlw	high _dbuf
 34335  018DD4  2035               	addwfc	(btemp+11)^0,w,c
 34336  018DD6  6EDA               	movwf	fsr2h,c
 34337  018DD8  0060  F0AB  FFDF   	movff	btemp,indf2
 34338                           
 34339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 34340                           ;stkvar	_p @ sp[(-18)+16]
 34341  018DDE  50E1               	movf	fsr1l,w,c
 34342  018DE0  0FFE               	addlw	-2
 34343  018DE2  6ED9               	movwf	fsr2l,c
 34344  018DE4  50E2               	movf	fsr1h,w,c
 34345  018DE6  6EDA               	movwf	fsr2h,c
 34346  018DE8  0EFF               	movlw	255
 34347  018DEA  22DA               	addwfc	fsr2h,f,c
 34348  018DEC  06DE               	decf	postinc2,f,c
 34349  018DEE  0E00               	movlw	0
 34350  018DF0  5ADD               	subwfb	postdec2,f,c
 34351                           
 34352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 34353                           ;stkvar	_w @ sp[(-18)+14]
 34354  018DF2  50E1               	movf	fsr1l,w,c
 34355  018DF4  0FFC               	addlw	-4
 34356  018DF6  6ED9               	movwf	fsr2l,c
 34357  018DF8  50E2               	movf	fsr1h,w,c
 34358  018DFA  6EDA               	movwf	fsr2h,c
 34359  018DFC  0EFF               	movlw	255
 34360  018DFE  22DA               	addwfc	fsr2h,f,c
 34361  018E00  06DE               	decf	postinc2,f,c
 34362  018E02  0E00               	movlw	0
 34363  018E04  5ADD               	subwfb	postdec2,f,c
 34364                           
 34365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 34366  018E06  0E0A               	movlw	10
 34367  018E08  6EE6               	movwf	postinc1,c
 34368  018E0A  0E00               	movlw	0
 34369  018E0C  6EE6               	movwf	postinc1,c
 34370  018E0E  0E00               	movlw	0
 34371  018E10  6EE6               	movwf	postinc1,c
 34372  018E12  0E00               	movlw	0
 34373  018E14  6EE6               	movwf	postinc1,c
 34374  018E16  0E00               	movlw	0
 34375  018E18  6EE6               	movwf	postinc1,c
 34376  018E1A  0E00               	movlw	0
 34377  018E1C  6EE6               	movwf	postinc1,c
 34378  018E1E  0E00               	movlw	0
 34379  018E20  6EE6               	movwf	postinc1,c
 34380  018E22  0E00               	movlw	0
 34381  018E24  6EE6               	movwf	postinc1,c
 34382                           
 34383                           ;stkvar	_n @ sp[(-26)+2]
 34384  018E26  50E1               	movf	fsr1l,w,c
 34385  018E28  0FE8               	addlw	-24
 34386  018E2A  6ED9               	movwf	fsr2l,c
 34387  018E2C  50E2               	movf	fsr1h,w,c
 34388  018E2E  6EDA               	movwf	fsr2h,c
 34389  018E30  0EFF               	movlw	255
 34390  018E32  22DA               	addwfc	fsr2h,f,c
 34391  018E34  006F FF7B FFE6     	movff	postinc2,postinc1
 34392  018E3A  006F FF7B FFE6     	movff	postinc2,postinc1
 34393  018E40  006F FF7B FFE6     	movff	postinc2,postinc1
 34394  018E46  006F FF7B FFE6     	movff	postinc2,postinc1
 34395  018E4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34396  018E52  006F FF7B FFE6     	movff	postinc2,postinc1
 34397  018E58  006F FF7B FFE6     	movff	postinc2,postinc1
 34398  018E5E  006F FF7B FFE6     	movff	postinc2,postinc1
 34399  018E64  ECE7  F0E0         	call	___aodiv	;wreg free
 34400  018E68  52E5               	movf	postdec1,f,c
 34401  018E6A  006F FF9C  F041    	movff	indf1,btemp+23
 34402  018E70  52E5               	movf	postdec1,f,c
 34403  018E72  006F FF9C  F040    	movff	indf1,btemp+22
 34404  018E78  52E5               	movf	postdec1,f,c
 34405  018E7A  006F FF9C  F03F    	movff	indf1,btemp+21
 34406  018E80  52E5               	movf	postdec1,f,c
 34407  018E82  006F FF9C  F03E    	movff	indf1,btemp+20
 34408  018E88  52E5               	movf	postdec1,f,c
 34409  018E8A  006F FF9C  F03D    	movff	indf1,btemp+19
 34410  018E90  52E5               	movf	postdec1,f,c
 34411  018E92  006F FF9C  F03C    	movff	indf1,btemp+18
 34412  018E98  52E5               	movf	postdec1,f,c
 34413  018E9A  006F FF9C  F03B    	movff	indf1,btemp+17
 34414  018EA0  52E5               	movf	postdec1,f,c
 34415  018EA2  006F FF9C  F03A    	movff	indf1,btemp+16
 34416  018EA8  0EF8               	movlw	248
 34417  018EAA  26E1               	addwf	fsr1l,f,c
 34418  018EAC  0EFF               	movlw	255
 34419  018EAE  22E2               	addwfc	fsr1h,f,c
 34420                           
 34421                           ;stkvar	_n @ sp[(-18)+2]
 34422  018EB0  0EF0               	movlw	-16
 34423  018EB2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 34424  018EB8  0EF1               	movlw	-15
 34425  018EBA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 34426  018EC0  0EF2               	movlw	-14
 34427  018EC2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 34428  018EC8  0EF3               	movlw	-13
 34429  018ECA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 34430  018ED0  0EF4               	movlw	-12
 34431  018ED2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 34432  018ED8  0EF5               	movlw	-11
 34433  018EDA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 34434  018EE0  0EF6               	movlw	-10
 34435  018EE2  0060  F103  FFE3   	movff	btemp+22,plusw1
 34436  018EE8  0EF7               	movlw	-9
 34437  018EEA  0060  F107  FFE3   	movff	btemp+23,plusw1
 34438  018EF0                     l15596:
 34439                           
 34440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34441                           ;stkvar	_i @ sp[(-18)+10]
 34442  018EF0  0EF9               	movlw	-7
 34443  018EF2  BEE3               	btfsc	plusw1,7,c
 34444  018EF4  D036               	goto	u14670
 34445  018EF6  0EF9               	movlw	-7
 34446  018EF8  50E3               	movf	plusw1,w,c
 34447  018EFA  E104               	bnz	u14630
 34448  018EFC  0EF8               	movlw	-8
 34449  018EFE  04E3               	decf	plusw1,w,c
 34450  018F00  A0D8               	btfss	status,0,c
 34451  018F02  D02F               	goto	u14670
 34452  018F04                     u14630:
 34453                           
 34454                           ;stkvar	_n @ sp[(-18)+2]
 34455  018F04  0EF0               	movlw	-16
 34456  018F06  50E3               	movf	plusw1,w,c
 34457  018F08  E115               	bnz	u14641
 34458  018F0A  0EF1               	movlw	-15
 34459  018F0C  50E3               	movf	plusw1,w,c
 34460  018F0E  E112               	bnz	u14641
 34461  018F10  0EF2               	movlw	-14
 34462  018F12  50E3               	movf	plusw1,w,c
 34463  018F14  E10F               	bnz	u14641
 34464  018F16  0EF3               	movlw	-13
 34465  018F18  50E3               	movf	plusw1,w,c
 34466  018F1A  E10C               	bnz	u14641
 34467  018F1C  0EF4               	movlw	-12
 34468  018F1E  50E3               	movf	plusw1,w,c
 34469  018F20  E109               	bnz	u14641
 34470  018F22  0EF5               	movlw	-11
 34471  018F24  50E3               	movf	plusw1,w,c
 34472  018F26  E106               	bnz	u14641
 34473  018F28  0EF6               	movlw	-10
 34474  018F2A  50E3               	movf	plusw1,w,c
 34475  018F2C  E103               	bnz	u14641
 34476  018F2E  0EF7               	movlw	-9
 34477  018F30  50E3               	movf	plusw1,w,c
 34478  018F32  A4D8               	btfss	status,2,c
 34479  018F34                     u14641:
 34480  018F34  D6D4               	goto	l15586
 34481                           
 34482                           ;stkvar	_p @ sp[(-18)+16]
 34483  018F36  0EFF               	movlw	-1
 34484  018F38  BEE3               	btfsc	plusw1,7,c
 34485  018F3A  D007               	goto	u14650
 34486  018F3C  0EFF               	movlw	-1
 34487  018F3E  50E3               	movf	plusw1,w,c
 34488  018F40  E103               	bnz	u14651
 34489  018F42  0EFE               	movlw	-2
 34490  018F44  04E3               	decf	plusw1,w,c
 34491  018F46  B0D8               	btfsc	status,0,c
 34492  018F48                     u14651:
 34493  018F48  D6CA               	goto	l15586
 34494  018F4A                     u14650:
 34495                           
 34496                           ;stkvar	_w @ sp[(-18)+14]
 34497  018F4A  0EFD               	movlw	-3
 34498  018F4C  BEE3               	btfsc	plusw1,7,c
 34499  018F4E  D009               	goto	u14670
 34500  018F50  0EFD               	movlw	-3
 34501  018F52  50E3               	movf	plusw1,w,c
 34502  018F54  E104               	bnz	u14660
 34503  018F56  0EFC               	movlw	-4
 34504  018F58  04E3               	decf	plusw1,w,c
 34505  018F5A  A0D8               	btfss	status,0,c
 34506  018F5C  D002               	goto	u14670
 34507  018F5E                     u14660:
 34508  018F5E  B24E               	btfsc	_flags^0,1,c
 34509  018F60  D6BE               	goto	l15586
 34510  018F62                     u14670:
 34511                           
 34512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 34513                           ;stkvar	_s @ sp[(-18)+12]
 34514  018F62  0EFA               	movlw	-6
 34515  018F64  006F FF8C  F02A    	movff	plusw1,btemp
 34516  018F6A  0EFB               	movlw	-5
 34517  018F6C  50E3               	movf	plusw1,w,c
 34518  018F6E  102A               	iorwf	btemp^0,w,c
 34519  018F70  A4D8               	btfss	status,2,c
 34520  018F72  D002               	goto	u14690
 34521  018F74  A44E               	btfss	_flags^0,2,c
 34522  018F76  D033               	goto	l15620
 34523  018F78                     u14690:
 34524                           
 34525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 34526                           ;stkvar	_i @ sp[(-18)+10]
 34527  018F78  50E1               	movf	fsr1l,w,c
 34528  018F7A  0FF8               	addlw	-8
 34529  018F7C  6ED9               	movwf	fsr2l,c
 34530  018F7E  50E2               	movf	fsr1h,w,c
 34531  018F80  6EDA               	movwf	fsr2h,c
 34532  018F82  0EFF               	movlw	255
 34533  018F84  22DA               	addwfc	fsr2h,f,c
 34534  018F86  06DE               	decf	postinc2,f,c
 34535  018F88  0E00               	movlw	0
 34536  018F8A  5ADD               	subwfb	postdec2,f,c
 34537                           
 34538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 34539                           ;stkvar	_s @ sp[(-18)+12]
 34540  018F8C  0EFA               	movlw	-6
 34541  018F8E  006F FF8C  F02A    	movff	plusw1,btemp
 34542  018F94  0EFB               	movlw	-5
 34543  018F96  50E3               	movf	plusw1,w,c
 34544  018F98  102A               	iorwf	btemp^0,w,c
 34545  018F9A  A4D8               	btfss	status,2,c
 34546  018F9C  D002               	goto	l15616
 34547  018F9E  0E2B               	movlw	43
 34548  018FA0  D001               	goto	L39
 34549  018FA2                     l15616:
 34550  018FA2  0E2D               	movlw	45
 34551  018FA4                     L39:
 34552  018FA4  6E34               	movwf	(btemp+10)^0,c
 34553  018FA6  0E00               	movlw	0
 34554  018FA8  6E35               	movwf	(btemp+11)^0,c
 34555                           
 34556                           ;stkvar	_dtoa$6589 @ sp[(-18)+0]
 34557  018FAA  0EEE               	movlw	-18
 34558  018FAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34559  018FB2  0EEF               	movlw	-17
 34560  018FB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34561                           
 34562                           ;stkvar	_dtoa$6589 @ sp[(-18)+0]
 34563                           ;stkvar	_i @ sp[(-18)+10]
 34564  018FBA  0EF8               	movlw	-8
 34565  018FBC  006F FF8C  F034    	movff	plusw1,btemp+10
 34566  018FC2  0EF9               	movlw	-7
 34567  018FC4  006F FF8C  F035    	movff	plusw1,btemp+11
 34568  018FCA  0E54               	movlw	low _dbuf
 34569  018FCC  2434               	addwf	(btemp+10)^0,w,c
 34570  018FCE  6ED9               	movwf	fsr2l,c
 34571  018FD0  0E03               	movlw	high _dbuf
 34572  018FD2  2035               	addwfc	(btemp+11)^0,w,c
 34573  018FD4  6EDA               	movwf	fsr2h,c
 34574  018FD6  0EEE               	movlw	-18
 34575  018FD8  006F FF8F FFDF     	movff	plusw1,indf2
 34576  018FDE                     l15620:
 34577                           
 34578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 34579                           ;stkvar	_w @ sp[(-18)+14]
 34580  018FDE  0EFC               	movlw	-4
 34581  018FE0  006F FF8F FFE6     	movff	plusw1,postinc1
 34582  018FE6  006F FF8F FFE6     	movff	plusw1,postinc1
 34583                           
 34584                           ;stkvar	_i @ sp[(-20)+10]
 34585  018FEC  0E54               	movlw	low _dbuf
 34586  018FEE  6E34               	movwf	(btemp+10)^0,c
 34587  018FF0  0E03               	movlw	high _dbuf
 34588  018FF2  6E35               	movwf	(btemp+11)^0,c
 34589  018FF4  0EF6               	movlw	-10
 34590  018FF6  50E3               	movf	plusw1,w,c
 34591  018FF8  2634               	addwf	(btemp+10)^0,f,c
 34592  018FFA  0EF7               	movlw	-9
 34593  018FFC  50E3               	movf	plusw1,w,c
 34594  018FFE  2235               	addwfc	(btemp+11)^0,f,c
 34595  019000  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34596  019006  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34597                           
 34598                           ;stkvar	_fp @ sp[(-22)+-2]
 34599  01900C  0EE8               	movlw	-24
 34600  01900E  006F FF8F FFE6     	movff	plusw1,postinc1
 34601  019014  006F FF8F FFE6     	movff	plusw1,postinc1
 34602  01901A  ECC5  F0FC         	call	_pad	;wreg free
 34603                           
 34604                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 34605  01901E  0EE4               	movlw	228
 34606  019020  26E1               	addwf	fsr1l,f,c
 34607  019022  0EFF               	movlw	255
 34608  019024  22E2               	addwfc	fsr1h,f,c
 34609  019026  0012               	return		;funcret
 34610  019028                     __end_of_dtoa:
 34611                           	opt callstack 0
 34612                           
 34613 ;; *************** function _abs *****************
 34614 ;; Defined at:
 34615 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 34616 ;; Parameters:    Size  Location     Type
 34617 ;;  a               2  [STACK] int 
 34618 ;; Auto vars:     Size  Location     Type
 34619 ;;		None
 34620 ;; Return value:  Size  Location     Type
 34621 ;;                  2  [STACK] int 
 34622 ;; Registers used:
 34623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 34624 ;; Tracked objects:
 34625 ;;		On entry : 0/3
 34626 ;;		On exit  : 0/0
 34627 ;;		Unchanged: 0/0
 34628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34633 ;;Total ram usage:        0 bytes
 34634 ;; Hardware stack levels used:    1
 34635 ;; Hardware stack levels required when called:   15
 34636 ;; This function calls:
 34637 ;;		Nothing
 34638 ;; This function is called by:
 34639 ;;		_dtoa
 34640 ;; This function uses a reentrant model
 34641 ;;
 34642                           
 34643                           	psect	text115
 34644  001D5E                     __ptext115:
 34645                           	opt callstack 0
 34646  001D5E                     _abs:
 34647                           	opt callstack 0
 34648                           
 34649                           ;stkvar	_a @ sp[(0)+-2]
 34650                           
 34651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34652                           ;incstack = 0
 34653 ;; hardware stack exceeded
 34654  001D5E  0EFF               	movlw	-1
 34655  001D60  BEE3               	btfsc	plusw1,7,c
 34656  001D62  D007               	goto	u7740
 34657  001D64  0EFF               	movlw	-1
 34658  001D66  50E3               	movf	plusw1,w,c
 34659  001D68  E112               	bnz	l10090
 34660  001D6A  0EFE               	movlw	-2
 34661  001D6C  04E3               	decf	plusw1,w,c
 34662  001D6E  B0D8               	btfsc	status,0,c
 34663  001D70  D00E               	goto	l10090
 34664  001D72                     u7740:
 34665                           
 34666                           ;stkvar	_a @ sp[(0)+-2]
 34667  001D72  0EFE               	movlw	-2
 34668  001D74  006F FF8C  F02A    	movff	plusw1,btemp
 34669  001D7A  1E2A               	comf	btemp^0,f,c
 34670  001D7C  0EFF               	movlw	-1
 34671  001D7E  006F FF8C  F02B    	movff	plusw1,btemp+1
 34672  001D84  1E2B               	comf	(btemp+1)^0,f,c
 34673  001D86  2A2A               	incf	btemp^0,f,c
 34674  001D88  B4D8               	btfsc	status,2,c
 34675  001D8A  2A2B               	incf	(btemp+1)^0,f,c
 34676  001D8C  D008               	goto	l3413
 34677  001D8E                     l10090:
 34678                           
 34679                           ;stkvar	_a @ sp[(0)+-2]
 34680  001D8E  0EFE               	movlw	-2
 34681  001D90  006F FF8C  F02A    	movff	plusw1,btemp
 34682  001D96  0EFF               	movlw	-1
 34683  001D98  006F FF8C  F02B    	movff	plusw1,btemp+1
 34684  001D9E                     l3413:
 34685                           
 34686                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 34687  001D9E  52E5               	movf	postdec1,f,c
 34688  001DA0  52E5               	movf	postdec1,f,c
 34689  001DA2  0012               	return		;funcret
 34690  001DA4                     __end_of_abs:
 34691                           	opt callstack 0
 34692                           
 34693 ;; *************** function ___aomod *****************
 34694 ;; Defined at:
 34695 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 34696 ;; Parameters:    Size  Location     Type
 34697 ;;  dividend        8  [STACK] long long 
 34698 ;;  divisor         8  [STACK] long long 
 34699 ;; Auto vars:     Size  Location     Type
 34700 ;;  sign            1  [STACK] unsigned char 
 34701 ;;  counter         1  [STACK] unsigned char 
 34702 ;; Return value:  Size  Location     Type
 34703 ;;                  8  [STACK] long long 
 34704 ;; Registers used:
 34705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34706 ;; Tracked objects:
 34707 ;;		On entry : 0/0
 34708 ;;		On exit  : 0/0
 34709 ;;		Unchanged: 0/0
 34710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34715 ;;Total ram usage:        0 bytes
 34716 ;; Hardware stack levels used:    1
 34717 ;; Hardware stack levels required when called:   15
 34718 ;; This function calls:
 34719 ;;		Nothing
 34720 ;; This function is called by:
 34721 ;;		_dtoa
 34722 ;;		___secs_to_tm
 34723 ;;		_rule_to_secs
 34724 ;;		___year_to_secs
 34725 ;; This function uses a reentrant model
 34726 ;;
 34727                           
 34728                           	psect	text116
 34729  01CB4C                     __ptext116:
 34730                           	opt callstack 0
 34731  01CB4C                     ___aomod:
 34732                           	opt callstack 0
 34733                           
 34734                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 34735  01CB4C  52E6               	movf	postinc1,f,c
 34736  01CB4E  52E6               	movf	postinc1,f,c
 34737                           
 34738                           ;stkvar	_sign @ sp[(-2)+0]
 34739                           
 34740                           ;incstack = 0
 34741 ;; hardware stack exceeded
 34742  01CB50  0EFE               	movlw	-2
 34743  01CB52  6AE3               	clrf	plusw1,c
 34744                           
 34745                           ;stkvar	_dividend @ sp[(-2)+-8]
 34746  01CB54  0EFD               	movlw	-3
 34747  01CB56  AEE3               	btfss	plusw1,7,c
 34748  01CB58  D028               	goto	l10274
 34749                           
 34750                           ;stkvar	_dividend @ sp[(-2)+-8]
 34751                           ;stkvar	_dividend @ sp[(-2)+-8]
 34752  01CB5A  0EF6               	movlw	-10
 34753  01CB5C  6CE3               	negf	plusw1,c
 34754  01CB5E  0EF7               	movlw	-9
 34755  01CB60  1EE3               	comf	plusw1,f,c
 34756  01CB62  0EF8               	movlw	-8
 34757  01CB64  1EE3               	comf	plusw1,f,c
 34758  01CB66  0EF9               	movlw	-7
 34759  01CB68  1EE3               	comf	plusw1,f,c
 34760  01CB6A  0EFA               	movlw	-6
 34761  01CB6C  1EE3               	comf	plusw1,f,c
 34762  01CB6E  0EFB               	movlw	-5
 34763  01CB70  1EE3               	comf	plusw1,f,c
 34764  01CB72  0EFC               	movlw	-4
 34765  01CB74  1EE3               	comf	plusw1,f,c
 34766  01CB76  0EFD               	movlw	-3
 34767  01CB78  1EE3               	comf	plusw1,f,c
 34768  01CB7A  E314               	bnc	u8230
 34769  01CB7C  0EF7               	movlw	-9
 34770  01CB7E  2AE3               	incf	plusw1,f,c
 34771  01CB80  E311               	bnc	u8230
 34772  01CB82  0EF8               	movlw	-8
 34773  01CB84  2AE3               	incf	plusw1,f,c
 34774  01CB86  E30E               	bnc	u8230
 34775  01CB88  0EF9               	movlw	-7
 34776  01CB8A  2AE3               	incf	plusw1,f,c
 34777  01CB8C  E30B               	bnc	u8230
 34778  01CB8E  0EFA               	movlw	-6
 34779  01CB90  2AE3               	incf	plusw1,f,c
 34780  01CB92  E308               	bnc	u8230
 34781  01CB94  0EFB               	movlw	-5
 34782  01CB96  2AE3               	incf	plusw1,f,c
 34783  01CB98  E305               	bnc	u8230
 34784  01CB9A  0EFC               	movlw	-4
 34785  01CB9C  2AE3               	incf	plusw1,f,c
 34786  01CB9E  E302               	bnc	u8230
 34787  01CBA0  0EFD               	movlw	-3
 34788  01CBA2  2AE3               	incf	plusw1,f,c
 34789  01CBA4                     u8230:
 34790                           
 34791                           ;stkvar	_sign @ sp[(-2)+0]
 34792  01CBA4  0EFE               	movlw	-2
 34793  01CBA6  6AE3               	clrf	plusw1,c
 34794  01CBA8  2AE3               	incf	plusw1,f,c
 34795  01CBAA                     l10274:
 34796                           
 34797                           ;stkvar	_divisor @ sp[(-2)+-16]
 34798  01CBAA  0EF5               	movlw	-11
 34799  01CBAC  AEE3               	btfss	plusw1,7,c
 34800  01CBAE  D025               	goto	u8250
 34801                           
 34802                           ;stkvar	_divisor @ sp[(-2)+-16]
 34803                           ;stkvar	_divisor @ sp[(-2)+-16]
 34804  01CBB0  0EEE               	movlw	-18
 34805  01CBB2  6CE3               	negf	plusw1,c
 34806  01CBB4  0EEF               	movlw	-17
 34807  01CBB6  1EE3               	comf	plusw1,f,c
 34808  01CBB8  0EF0               	movlw	-16
 34809  01CBBA  1EE3               	comf	plusw1,f,c
 34810  01CBBC  0EF1               	movlw	-15
 34811  01CBBE  1EE3               	comf	plusw1,f,c
 34812  01CBC0  0EF2               	movlw	-14
 34813  01CBC2  1EE3               	comf	plusw1,f,c
 34814  01CBC4  0EF3               	movlw	-13
 34815  01CBC6  1EE3               	comf	plusw1,f,c
 34816  01CBC8  0EF4               	movlw	-12
 34817  01CBCA  1EE3               	comf	plusw1,f,c
 34818  01CBCC  0EF5               	movlw	-11
 34819  01CBCE  1EE3               	comf	plusw1,f,c
 34820  01CBD0  E314               	bnc	u8250
 34821  01CBD2  0EEF               	movlw	-17
 34822  01CBD4  2AE3               	incf	plusw1,f,c
 34823  01CBD6  E311               	bnc	u8250
 34824  01CBD8  0EF0               	movlw	-16
 34825  01CBDA  2AE3               	incf	plusw1,f,c
 34826  01CBDC  E30E               	bnc	u8250
 34827  01CBDE  0EF1               	movlw	-15
 34828  01CBE0  2AE3               	incf	plusw1,f,c
 34829  01CBE2  E30B               	bnc	u8250
 34830  01CBE4  0EF2               	movlw	-14
 34831  01CBE6  2AE3               	incf	plusw1,f,c
 34832  01CBE8  E308               	bnc	u8250
 34833  01CBEA  0EF3               	movlw	-13
 34834  01CBEC  2AE3               	incf	plusw1,f,c
 34835  01CBEE  E305               	bnc	u8250
 34836  01CBF0  0EF4               	movlw	-12
 34837  01CBF2  2AE3               	incf	plusw1,f,c
 34838  01CBF4  E302               	bnc	u8250
 34839  01CBF6  0EF5               	movlw	-11
 34840  01CBF8  2AE3               	incf	plusw1,f,c
 34841  01CBFA                     u8250:
 34842                           
 34843                           ;stkvar	_divisor @ sp[(-2)+-16]
 34844  01CBFA  0EEE               	movlw	-18
 34845  01CBFC  50E3               	movf	plusw1,w,c
 34846  01CBFE  E116               	bnz	u8260
 34847  01CC00  0EEF               	movlw	-17
 34848  01CC02  50E3               	movf	plusw1,w,c
 34849  01CC04  E113               	bnz	u8260
 34850  01CC06  0EF0               	movlw	-16
 34851  01CC08  50E3               	movf	plusw1,w,c
 34852  01CC0A  E110               	bnz	u8260
 34853  01CC0C  0EF1               	movlw	-15
 34854  01CC0E  50E3               	movf	plusw1,w,c
 34855  01CC10  E10D               	bnz	u8260
 34856  01CC12  0EF2               	movlw	-14
 34857  01CC14  50E3               	movf	plusw1,w,c
 34858  01CC16  E10A               	bnz	u8260
 34859  01CC18  0EF3               	movlw	-13
 34860  01CC1A  50E3               	movf	plusw1,w,c
 34861  01CC1C  E107               	bnz	u8260
 34862  01CC1E  0EF4               	movlw	-12
 34863  01CC20  50E3               	movf	plusw1,w,c
 34864  01CC22  E104               	bnz	u8260
 34865  01CC24  0EF5               	movlw	-11
 34866  01CC26  50E3               	movf	plusw1,w,c
 34867  01CC28  B4D8               	btfsc	status,2,c
 34868  01CC2A  D075               	goto	u8290
 34869  01CC2C                     u8260:
 34870                           
 34871                           ;stkvar	_counter @ sp[(-2)+1]
 34872  01CC2C  0EFF               	movlw	-1
 34873  01CC2E  6AE3               	clrf	plusw1,c
 34874  01CC30  D012               	goto	L40
 34875  01CC32                     l10282:
 34876                           
 34877                           ;stkvar	_divisor @ sp[(-2)+-16]
 34878  01CC32  90D8               	bcf	status,0,c
 34879  01CC34  0EEE               	movlw	-18
 34880  01CC36  36E3               	rlcf	plusw1,f,c
 34881  01CC38  0EEF               	movlw	-17
 34882  01CC3A  36E3               	rlcf	plusw1,f,c
 34883  01CC3C  0EF0               	movlw	-16
 34884  01CC3E  36E3               	rlcf	plusw1,f,c
 34885  01CC40  0EF1               	movlw	-15
 34886  01CC42  36E3               	rlcf	plusw1,f,c
 34887  01CC44  0EF2               	movlw	-14
 34888  01CC46  36E3               	rlcf	plusw1,f,c
 34889  01CC48  0EF3               	movlw	-13
 34890  01CC4A  36E3               	rlcf	plusw1,f,c
 34891  01CC4C  0EF4               	movlw	-12
 34892  01CC4E  36E3               	rlcf	plusw1,f,c
 34893  01CC50  0EF5               	movlw	-11
 34894  01CC52  36E3               	rlcf	plusw1,f,c
 34895                           
 34896                           ;stkvar	_counter @ sp[(-2)+1]
 34897  01CC54  0EFF               	movlw	-1
 34898  01CC56                     L40:
 34899  01CC56  2AE3               	incf	plusw1,f,c
 34900                           
 34901                           ;stkvar	_divisor @ sp[(-2)+-16]
 34902  01CC58  0EF5               	movlw	-11
 34903  01CC5A  AEE3               	btfss	plusw1,7,c
 34904  01CC5C  D7EA               	goto	l10282
 34905  01CC5E                     u8270:
 34906                           
 34907                           ;stkvar	_divisor @ sp[(-2)+-16]
 34908                           ;stkvar	_dividend @ sp[(-2)+-8]
 34909  01CC5E  50E1               	movf	fsr1l,w,c
 34910  01CC60  0FF6               	addlw	-10
 34911  01CC62  6ED9               	movwf	fsr2l,c
 34912  01CC64  50E2               	movf	fsr1h,w,c
 34913  01CC66  6EDA               	movwf	fsr2h,c
 34914  01CC68  0EFF               	movlw	255
 34915  01CC6A  22DA               	addwfc	fsr2h,f,c
 34916  01CC6C  0EEE               	movlw	-18
 34917  01CC6E  50E3               	movf	plusw1,w,c
 34918  01CC70  5CDE               	subwf	postinc2,w,c
 34919  01CC72  0EEF               	movlw	-17
 34920  01CC74  50E3               	movf	plusw1,w,c
 34921  01CC76  58DE               	subwfb	postinc2,w,c
 34922  01CC78  0EF0               	movlw	-16
 34923  01CC7A  50E3               	movf	plusw1,w,c
 34924  01CC7C  58DE               	subwfb	postinc2,w,c
 34925  01CC7E  0EF1               	movlw	-15
 34926  01CC80  50E3               	movf	plusw1,w,c
 34927  01CC82  58DE               	subwfb	postinc2,w,c
 34928  01CC84  0EF2               	movlw	-14
 34929  01CC86  50E3               	movf	plusw1,w,c
 34930  01CC88  58DE               	subwfb	postinc2,w,c
 34931  01CC8A  0EF3               	movlw	-13
 34932  01CC8C  50E3               	movf	plusw1,w,c
 34933  01CC8E  58DE               	subwfb	postinc2,w,c
 34934  01CC90  0EF4               	movlw	-12
 34935  01CC92  50E3               	movf	plusw1,w,c
 34936  01CC94  58DE               	subwfb	postinc2,w,c
 34937  01CC96  0EF5               	movlw	-11
 34938  01CC98  50E3               	movf	plusw1,w,c
 34939  01CC9A  58DE               	subwfb	postinc2,w,c
 34940  01CC9C  A0D8               	btfss	status,0,c
 34941  01CC9E  D01F               	goto	l10290
 34942                           
 34943                           ;stkvar	_divisor @ sp[(-2)+-16]
 34944                           ;stkvar	_dividend @ sp[(-2)+-8]
 34945  01CCA0  50E1               	movf	fsr1l,w,c
 34946  01CCA2  0FF6               	addlw	-10
 34947  01CCA4  6ED9               	movwf	fsr2l,c
 34948  01CCA6  50E2               	movf	fsr1h,w,c
 34949  01CCA8  6EDA               	movwf	fsr2h,c
 34950  01CCAA  0EFF               	movlw	255
 34951  01CCAC  22DA               	addwfc	fsr2h,f,c
 34952  01CCAE  0EEE               	movlw	-18
 34953  01CCB0  50E3               	movf	plusw1,w,c
 34954  01CCB2  5EDE               	subwf	postinc2,f,c
 34955  01CCB4  0EEF               	movlw	-17
 34956  01CCB6  50E3               	movf	plusw1,w,c
 34957  01CCB8  5ADE               	subwfb	postinc2,f,c
 34958  01CCBA  0EF0               	movlw	-16
 34959  01CCBC  50E3               	movf	plusw1,w,c
 34960  01CCBE  5ADE               	subwfb	postinc2,f,c
 34961  01CCC0  0EF1               	movlw	-15
 34962  01CCC2  50E3               	movf	plusw1,w,c
 34963  01CCC4  5ADE               	subwfb	postinc2,f,c
 34964  01CCC6  0EF2               	movlw	-14
 34965  01CCC8  50E3               	movf	plusw1,w,c
 34966  01CCCA  5ADE               	subwfb	postinc2,f,c
 34967  01CCCC  0EF3               	movlw	-13
 34968  01CCCE  50E3               	movf	plusw1,w,c
 34969  01CCD0  5ADE               	subwfb	postinc2,f,c
 34970  01CCD2  0EF4               	movlw	-12
 34971  01CCD4  50E3               	movf	plusw1,w,c
 34972  01CCD6  5ADE               	subwfb	postinc2,f,c
 34973  01CCD8  0EF5               	movlw	-11
 34974  01CCDA  50E3               	movf	plusw1,w,c
 34975  01CCDC  5ADE               	subwfb	postinc2,f,c
 34976  01CCDE                     l10290:
 34977                           
 34978                           ;stkvar	_divisor @ sp[(-2)+-16]
 34979  01CCDE  90D8               	bcf	status,0,c
 34980  01CCE0  0EF5               	movlw	-11
 34981  01CCE2  32E3               	rrcf	plusw1,f,c
 34982  01CCE4  0EF4               	movlw	-12
 34983  01CCE6  32E3               	rrcf	plusw1,f,c
 34984  01CCE8  0EF3               	movlw	-13
 34985  01CCEA  32E3               	rrcf	plusw1,f,c
 34986  01CCEC  0EF2               	movlw	-14
 34987  01CCEE  32E3               	rrcf	plusw1,f,c
 34988  01CCF0  0EF1               	movlw	-15
 34989  01CCF2  32E3               	rrcf	plusw1,f,c
 34990  01CCF4  0EF0               	movlw	-16
 34991  01CCF6  32E3               	rrcf	plusw1,f,c
 34992  01CCF8  0EEF               	movlw	-17
 34993  01CCFA  32E3               	rrcf	plusw1,f,c
 34994  01CCFC  0EEE               	movlw	-18
 34995  01CCFE  32E3               	rrcf	plusw1,f,c
 34996                           
 34997                           ;stkvar	_counter @ sp[(-2)+1]
 34998  01CD00  0EFF               	movlw	-1
 34999  01CD02  50E3               	movf	plusw1,w,c
 35000  01CD04  6E2A               	movwf	btemp^0,c
 35001  01CD06  0E01               	movlw	1
 35002  01CD08  5E2A               	subwf	btemp^0,f,c
 35003  01CD0A  0EFF               	movlw	-1
 35004  01CD0C  0060  F0AB  FFE3   	movff	btemp,plusw1
 35005  01CD12  A4D8               	btfss	status,2,c
 35006  01CD14  D7A4               	goto	u8270
 35007  01CD16                     u8290:
 35008                           
 35009                           ;stkvar	_sign @ sp[(-2)+0]
 35010  01CD16  0EFE               	movlw	-2
 35011  01CD18  50E3               	movf	plusw1,w,c
 35012  01CD1A  B4D8               	btfsc	status,2,c
 35013  01CD1C  D025               	goto	u8310
 35014                           
 35015                           ;stkvar	_dividend @ sp[(-2)+-8]
 35016                           ;stkvar	_dividend @ sp[(-2)+-8]
 35017  01CD1E  0EF6               	movlw	-10
 35018  01CD20  6CE3               	negf	plusw1,c
 35019  01CD22  0EF7               	movlw	-9
 35020  01CD24  1EE3               	comf	plusw1,f,c
 35021  01CD26  0EF8               	movlw	-8
 35022  01CD28  1EE3               	comf	plusw1,f,c
 35023  01CD2A  0EF9               	movlw	-7
 35024  01CD2C  1EE3               	comf	plusw1,f,c
 35025  01CD2E  0EFA               	movlw	-6
 35026  01CD30  1EE3               	comf	plusw1,f,c
 35027  01CD32  0EFB               	movlw	-5
 35028  01CD34  1EE3               	comf	plusw1,f,c
 35029  01CD36  0EFC               	movlw	-4
 35030  01CD38  1EE3               	comf	plusw1,f,c
 35031  01CD3A  0EFD               	movlw	-3
 35032  01CD3C  1EE3               	comf	plusw1,f,c
 35033  01CD3E  E314               	bnc	u8310
 35034  01CD40  0EF7               	movlw	-9
 35035  01CD42  2AE3               	incf	plusw1,f,c
 35036  01CD44  E311               	bnc	u8310
 35037  01CD46  0EF8               	movlw	-8
 35038  01CD48  2AE3               	incf	plusw1,f,c
 35039  01CD4A  E30E               	bnc	u8310
 35040  01CD4C  0EF9               	movlw	-7
 35041  01CD4E  2AE3               	incf	plusw1,f,c
 35042  01CD50  E30B               	bnc	u8310
 35043  01CD52  0EFA               	movlw	-6
 35044  01CD54  2AE3               	incf	plusw1,f,c
 35045  01CD56  E308               	bnc	u8310
 35046  01CD58  0EFB               	movlw	-5
 35047  01CD5A  2AE3               	incf	plusw1,f,c
 35048  01CD5C  E305               	bnc	u8310
 35049  01CD5E  0EFC               	movlw	-4
 35050  01CD60  2AE3               	incf	plusw1,f,c
 35051  01CD62  E302               	bnc	u8310
 35052  01CD64  0EFD               	movlw	-3
 35053  01CD66  2AE3               	incf	plusw1,f,c
 35054  01CD68                     u8310:
 35055                           
 35056                           ;stkvar	_dividend @ sp[(-2)+-8]
 35057  01CD68  0EF6               	movlw	246
 35058  01CD6A  24E1               	addwf	fsr1l,w,c
 35059  01CD6C  6ED9               	movwf	fsr2l,c
 35060  01CD6E  0EFF               	movlw	255
 35061  01CD70  20E2               	addwfc	fsr1h,w,c
 35062  01CD72  6EDA               	movwf	fsr2h,c
 35063                           
 35064                           ;stkvar	?___aomod @ sp[(-2)+-8]
 35065  01CD74  0E08               	movlw	8
 35066  01CD76  6E2A               	movwf	btemp^0,c
 35067  01CD78  0EF6               	movlw	-10
 35068  01CD7A                     us832999:
 35069  01CD7A  006F FF7B FFE3     	movff	postinc2,plusw1
 35070  01CD80  28E8               	incf	wreg,w,c
 35071  01CD82  2E2A               	decfsz	btemp^0,f,c
 35072  01CD84  D7FA               	bra	us832999
 35073                           
 35074                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 35075  01CD86  52E5               	movf	postdec1,f,c
 35076  01CD88  52E5               	movf	postdec1,f,c
 35077  01CD8A  0012               	return		;funcret
 35078  01CD8C                     __end_of___aomod:
 35079                           	opt callstack 0
 35080                           
 35081 ;; *************** function ___aodiv *****************
 35082 ;; Defined at:
 35083 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 35084 ;; Parameters:    Size  Location     Type
 35085 ;;  dividend        8  [STACK] long long 
 35086 ;;  divisor         8  [STACK] long long 
 35087 ;; Auto vars:     Size  Location     Type
 35088 ;;  quotient        8  [STACK] long long 
 35089 ;;  sign            1  [STACK] unsigned char 
 35090 ;;  counter         1  [STACK] unsigned char 
 35091 ;; Return value:  Size  Location     Type
 35092 ;;                  8  [STACK] long long 
 35093 ;; Registers used:
 35094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35095 ;; Tracked objects:
 35096 ;;		On entry : 0/0
 35097 ;;		On exit  : 0/0
 35098 ;;		Unchanged: 0/0
 35099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35104 ;;Total ram usage:        0 bytes
 35105 ;; Hardware stack levels used:    1
 35106 ;; Hardware stack levels required when called:   15
 35107 ;; This function calls:
 35108 ;;		Nothing
 35109 ;; This function is called by:
 35110 ;;		_dtoa
 35111 ;;		___secs_to_tm
 35112 ;;		___secs_to_zone
 35113 ;;		___year_to_secs
 35114 ;; This function uses a reentrant model
 35115 ;;
 35116                           
 35117                           	psect	text117
 35118  01C1CE                     __ptext117:
 35119                           	opt callstack 0
 35120  01C1CE                     ___aodiv:
 35121                           	opt callstack 0
 35122                           
 35123                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 35124  01C1CE  0E0A               	movlw	10
 35125  01C1D0  26E1               	addwf	fsr1l,f,c
 35126  01C1D2  0E00               	movlw	0
 35127  01C1D4  22E2               	addwfc	fsr1h,f,c
 35128                           
 35129                           ;stkvar	_sign @ sp[(-10)+8]
 35130                           
 35131                           ;incstack = 0
 35132 ;; hardware stack exceeded
 35133  01C1D6  0EFE               	movlw	-2
 35134  01C1D8  6AE3               	clrf	plusw1,c
 35135                           
 35136                           ;stkvar	_divisor @ sp[(-10)+-16]
 35137  01C1DA  0EED               	movlw	-19
 35138  01C1DC  AEE3               	btfss	plusw1,7,c
 35139  01C1DE  D028               	goto	l10230
 35140                           
 35141                           ;stkvar	_divisor @ sp[(-10)+-16]
 35142                           ;stkvar	_divisor @ sp[(-10)+-16]
 35143  01C1E0  0EE6               	movlw	-26
 35144  01C1E2  6CE3               	negf	plusw1,c
 35145  01C1E4  0EE7               	movlw	-25
 35146  01C1E6  1EE3               	comf	plusw1,f,c
 35147  01C1E8  0EE8               	movlw	-24
 35148  01C1EA  1EE3               	comf	plusw1,f,c
 35149  01C1EC  0EE9               	movlw	-23
 35150  01C1EE  1EE3               	comf	plusw1,f,c
 35151  01C1F0  0EEA               	movlw	-22
 35152  01C1F2  1EE3               	comf	plusw1,f,c
 35153  01C1F4  0EEB               	movlw	-21
 35154  01C1F6  1EE3               	comf	plusw1,f,c
 35155  01C1F8  0EEC               	movlw	-20
 35156  01C1FA  1EE3               	comf	plusw1,f,c
 35157  01C1FC  0EED               	movlw	-19
 35158  01C1FE  1EE3               	comf	plusw1,f,c
 35159  01C200  E314               	bnc	u8110
 35160  01C202  0EE7               	movlw	-25
 35161  01C204  2AE3               	incf	plusw1,f,c
 35162  01C206  E311               	bnc	u8110
 35163  01C208  0EE8               	movlw	-24
 35164  01C20A  2AE3               	incf	plusw1,f,c
 35165  01C20C  E30E               	bnc	u8110
 35166  01C20E  0EE9               	movlw	-23
 35167  01C210  2AE3               	incf	plusw1,f,c
 35168  01C212  E30B               	bnc	u8110
 35169  01C214  0EEA               	movlw	-22
 35170  01C216  2AE3               	incf	plusw1,f,c
 35171  01C218  E308               	bnc	u8110
 35172  01C21A  0EEB               	movlw	-21
 35173  01C21C  2AE3               	incf	plusw1,f,c
 35174  01C21E  E305               	bnc	u8110
 35175  01C220  0EEC               	movlw	-20
 35176  01C222  2AE3               	incf	plusw1,f,c
 35177  01C224  E302               	bnc	u8110
 35178  01C226  0EED               	movlw	-19
 35179  01C228  2AE3               	incf	plusw1,f,c
 35180  01C22A                     u8110:
 35181                           
 35182                           ;stkvar	_sign @ sp[(-10)+8]
 35183  01C22A  0EFE               	movlw	-2
 35184  01C22C  6AE3               	clrf	plusw1,c
 35185  01C22E  2AE3               	incf	plusw1,f,c
 35186  01C230                     l10230:
 35187                           
 35188                           ;stkvar	_dividend @ sp[(-10)+-8]
 35189  01C230  0EF5               	movlw	-11
 35190  01C232  AEE3               	btfss	plusw1,7,c
 35191  01C234  D027               	goto	l10236
 35192                           
 35193                           ;stkvar	_dividend @ sp[(-10)+-8]
 35194                           ;stkvar	_dividend @ sp[(-10)+-8]
 35195  01C236  0EEE               	movlw	-18
 35196  01C238  6CE3               	negf	plusw1,c
 35197  01C23A  0EEF               	movlw	-17
 35198  01C23C  1EE3               	comf	plusw1,f,c
 35199  01C23E  0EF0               	movlw	-16
 35200  01C240  1EE3               	comf	plusw1,f,c
 35201  01C242  0EF1               	movlw	-15
 35202  01C244  1EE3               	comf	plusw1,f,c
 35203  01C246  0EF2               	movlw	-14
 35204  01C248  1EE3               	comf	plusw1,f,c
 35205  01C24A  0EF3               	movlw	-13
 35206  01C24C  1EE3               	comf	plusw1,f,c
 35207  01C24E  0EF4               	movlw	-12
 35208  01C250  1EE3               	comf	plusw1,f,c
 35209  01C252  0EF5               	movlw	-11
 35210  01C254  1EE3               	comf	plusw1,f,c
 35211  01C256  E314               	bnc	u8130
 35212  01C258  0EEF               	movlw	-17
 35213  01C25A  2AE3               	incf	plusw1,f,c
 35214  01C25C  E311               	bnc	u8130
 35215  01C25E  0EF0               	movlw	-16
 35216  01C260  2AE3               	incf	plusw1,f,c
 35217  01C262  E30E               	bnc	u8130
 35218  01C264  0EF1               	movlw	-15
 35219  01C266  2AE3               	incf	plusw1,f,c
 35220  01C268  E30B               	bnc	u8130
 35221  01C26A  0EF2               	movlw	-14
 35222  01C26C  2AE3               	incf	plusw1,f,c
 35223  01C26E  E308               	bnc	u8130
 35224  01C270  0EF3               	movlw	-13
 35225  01C272  2AE3               	incf	plusw1,f,c
 35226  01C274  E305               	bnc	u8130
 35227  01C276  0EF4               	movlw	-12
 35228  01C278  2AE3               	incf	plusw1,f,c
 35229  01C27A  E302               	bnc	u8130
 35230  01C27C  0EF5               	movlw	-11
 35231  01C27E  2AE3               	incf	plusw1,f,c
 35232  01C280                     u8130:
 35233                           
 35234                           ;stkvar	_sign @ sp[(-10)+8]
 35235  01C280  0EFE               	movlw	-2
 35236  01C282  70E3               	btg	plusw1,0,c
 35237  01C284                     l10236:
 35238                           
 35239                           ;stkvar	_quotient @ sp[(-10)+0]
 35240  01C284  0E07               	movlw	7
 35241  01C286  6E2A               	movwf	btemp^0,c
 35242  01C288  0EF6               	movlw	-10
 35243  01C28A                     u8141:
 35244  01C28A  6AE3               	clrf	plusw1,c
 35245  01C28C  2AE8               	incf	wreg,f,c
 35246  01C28E  062A               	decf	btemp^0,f,c
 35247  01C290  E2FC               	bc	u8141
 35248                           
 35249                           ;stkvar	_divisor @ sp[(-10)+-16]
 35250  01C292  0EE6               	movlw	-26
 35251  01C294  50E3               	movf	plusw1,w,c
 35252  01C296  E116               	bnz	u8150
 35253  01C298  0EE7               	movlw	-25
 35254  01C29A  50E3               	movf	plusw1,w,c
 35255  01C29C  E113               	bnz	u8150
 35256  01C29E  0EE8               	movlw	-24
 35257  01C2A0  50E3               	movf	plusw1,w,c
 35258  01C2A2  E110               	bnz	u8150
 35259  01C2A4  0EE9               	movlw	-23
 35260  01C2A6  50E3               	movf	plusw1,w,c
 35261  01C2A8  E10D               	bnz	u8150
 35262  01C2AA  0EEA               	movlw	-22
 35263  01C2AC  50E3               	movf	plusw1,w,c
 35264  01C2AE  E10A               	bnz	u8150
 35265  01C2B0  0EEB               	movlw	-21
 35266  01C2B2  50E3               	movf	plusw1,w,c
 35267  01C2B4  E107               	bnz	u8150
 35268  01C2B6  0EEC               	movlw	-20
 35269  01C2B8  50E3               	movf	plusw1,w,c
 35270  01C2BA  E104               	bnz	u8150
 35271  01C2BC  0EED               	movlw	-19
 35272  01C2BE  50E3               	movf	plusw1,w,c
 35273  01C2C0  B4D8               	btfsc	status,2,c
 35274  01C2C2  D088               	goto	u8180
 35275  01C2C4                     u8150:
 35276                           
 35277                           ;stkvar	_counter @ sp[(-10)+9]
 35278  01C2C4  0EFF               	movlw	-1
 35279  01C2C6  6AE3               	clrf	plusw1,c
 35280  01C2C8  D012               	goto	L41
 35281  01C2CA                     l10242:
 35282                           
 35283                           ;stkvar	_divisor @ sp[(-10)+-16]
 35284  01C2CA  90D8               	bcf	status,0,c
 35285  01C2CC  0EE6               	movlw	-26
 35286  01C2CE  36E3               	rlcf	plusw1,f,c
 35287  01C2D0  0EE7               	movlw	-25
 35288  01C2D2  36E3               	rlcf	plusw1,f,c
 35289  01C2D4  0EE8               	movlw	-24
 35290  01C2D6  36E3               	rlcf	plusw1,f,c
 35291  01C2D8  0EE9               	movlw	-23
 35292  01C2DA  36E3               	rlcf	plusw1,f,c
 35293  01C2DC  0EEA               	movlw	-22
 35294  01C2DE  36E3               	rlcf	plusw1,f,c
 35295  01C2E0  0EEB               	movlw	-21
 35296  01C2E2  36E3               	rlcf	plusw1,f,c
 35297  01C2E4  0EEC               	movlw	-20
 35298  01C2E6  36E3               	rlcf	plusw1,f,c
 35299  01C2E8  0EED               	movlw	-19
 35300  01C2EA  36E3               	rlcf	plusw1,f,c
 35301                           
 35302                           ;stkvar	_counter @ sp[(-10)+9]
 35303  01C2EC  0EFF               	movlw	-1
 35304  01C2EE                     L41:
 35305  01C2EE  2AE3               	incf	plusw1,f,c
 35306                           
 35307                           ;stkvar	_divisor @ sp[(-10)+-16]
 35308  01C2F0  0EED               	movlw	-19
 35309  01C2F2  AEE3               	btfss	plusw1,7,c
 35310  01C2F4  D7EA               	goto	l10242
 35311  01C2F6                     u8160:
 35312                           
 35313                           ;stkvar	_quotient @ sp[(-10)+0]
 35314  01C2F6  90D8               	bcf	status,0,c
 35315  01C2F8  0EF6               	movlw	-10
 35316  01C2FA  36E3               	rlcf	plusw1,f,c
 35317  01C2FC  0EF7               	movlw	-9
 35318  01C2FE  36E3               	rlcf	plusw1,f,c
 35319  01C300  0EF8               	movlw	-8
 35320  01C302  36E3               	rlcf	plusw1,f,c
 35321  01C304  0EF9               	movlw	-7
 35322  01C306  36E3               	rlcf	plusw1,f,c
 35323  01C308  0EFA               	movlw	-6
 35324  01C30A  36E3               	rlcf	plusw1,f,c
 35325  01C30C  0EFB               	movlw	-5
 35326  01C30E  36E3               	rlcf	plusw1,f,c
 35327  01C310  0EFC               	movlw	-4
 35328  01C312  36E3               	rlcf	plusw1,f,c
 35329  01C314  0EFD               	movlw	-3
 35330  01C316  36E3               	rlcf	plusw1,f,c
 35331                           
 35332                           ;stkvar	_divisor @ sp[(-10)+-16]
 35333                           ;stkvar	_dividend @ sp[(-10)+-8]
 35334  01C318  50E1               	movf	fsr1l,w,c
 35335  01C31A  0FEE               	addlw	-18
 35336  01C31C  6ED9               	movwf	fsr2l,c
 35337  01C31E  50E2               	movf	fsr1h,w,c
 35338  01C320  6EDA               	movwf	fsr2h,c
 35339  01C322  0EFF               	movlw	255
 35340  01C324  22DA               	addwfc	fsr2h,f,c
 35341  01C326  0EE6               	movlw	-26
 35342  01C328  50E3               	movf	plusw1,w,c
 35343  01C32A  5CDE               	subwf	postinc2,w,c
 35344  01C32C  0EE7               	movlw	-25
 35345  01C32E  50E3               	movf	plusw1,w,c
 35346  01C330  58DE               	subwfb	postinc2,w,c
 35347  01C332  0EE8               	movlw	-24
 35348  01C334  50E3               	movf	plusw1,w,c
 35349  01C336  58DE               	subwfb	postinc2,w,c
 35350  01C338  0EE9               	movlw	-23
 35351  01C33A  50E3               	movf	plusw1,w,c
 35352  01C33C  58DE               	subwfb	postinc2,w,c
 35353  01C33E  0EEA               	movlw	-22
 35354  01C340  50E3               	movf	plusw1,w,c
 35355  01C342  58DE               	subwfb	postinc2,w,c
 35356  01C344  0EEB               	movlw	-21
 35357  01C346  50E3               	movf	plusw1,w,c
 35358  01C348  58DE               	subwfb	postinc2,w,c
 35359  01C34A  0EEC               	movlw	-20
 35360  01C34C  50E3               	movf	plusw1,w,c
 35361  01C34E  58DE               	subwfb	postinc2,w,c
 35362  01C350  0EED               	movlw	-19
 35363  01C352  50E3               	movf	plusw1,w,c
 35364  01C354  58DE               	subwfb	postinc2,w,c
 35365  01C356  A0D8               	btfss	status,0,c
 35366  01C358  D021               	goto	l10254
 35367                           
 35368                           ;stkvar	_divisor @ sp[(-10)+-16]
 35369                           ;stkvar	_dividend @ sp[(-10)+-8]
 35370  01C35A  50E1               	movf	fsr1l,w,c
 35371  01C35C  0FEE               	addlw	-18
 35372  01C35E  6ED9               	movwf	fsr2l,c
 35373  01C360  50E2               	movf	fsr1h,w,c
 35374  01C362  6EDA               	movwf	fsr2h,c
 35375  01C364  0EFF               	movlw	255
 35376  01C366  22DA               	addwfc	fsr2h,f,c
 35377  01C368  0EE6               	movlw	-26
 35378  01C36A  50E3               	movf	plusw1,w,c
 35379  01C36C  5EDE               	subwf	postinc2,f,c
 35380  01C36E  0EE7               	movlw	-25
 35381  01C370  50E3               	movf	plusw1,w,c
 35382  01C372  5ADE               	subwfb	postinc2,f,c
 35383  01C374  0EE8               	movlw	-24
 35384  01C376  50E3               	movf	plusw1,w,c
 35385  01C378  5ADE               	subwfb	postinc2,f,c
 35386  01C37A  0EE9               	movlw	-23
 35387  01C37C  50E3               	movf	plusw1,w,c
 35388  01C37E  5ADE               	subwfb	postinc2,f,c
 35389  01C380  0EEA               	movlw	-22
 35390  01C382  50E3               	movf	plusw1,w,c
 35391  01C384  5ADE               	subwfb	postinc2,f,c
 35392  01C386  0EEB               	movlw	-21
 35393  01C388  50E3               	movf	plusw1,w,c
 35394  01C38A  5ADE               	subwfb	postinc2,f,c
 35395  01C38C  0EEC               	movlw	-20
 35396  01C38E  50E3               	movf	plusw1,w,c
 35397  01C390  5ADE               	subwfb	postinc2,f,c
 35398  01C392  0EED               	movlw	-19
 35399  01C394  50E3               	movf	plusw1,w,c
 35400  01C396  5ADE               	subwfb	postinc2,f,c
 35401                           
 35402                           ;stkvar	_quotient @ sp[(-10)+0]
 35403  01C398  0EF6               	movlw	-10
 35404  01C39A  80E3               	bsf	plusw1,0,c
 35405  01C39C                     l10254:
 35406                           
 35407                           ;stkvar	_divisor @ sp[(-10)+-16]
 35408  01C39C  90D8               	bcf	status,0,c
 35409  01C39E  0EED               	movlw	-19
 35410  01C3A0  32E3               	rrcf	plusw1,f,c
 35411  01C3A2  0EEC               	movlw	-20
 35412  01C3A4  32E3               	rrcf	plusw1,f,c
 35413  01C3A6  0EEB               	movlw	-21
 35414  01C3A8  32E3               	rrcf	plusw1,f,c
 35415  01C3AA  0EEA               	movlw	-22
 35416  01C3AC  32E3               	rrcf	plusw1,f,c
 35417  01C3AE  0EE9               	movlw	-23
 35418  01C3B0  32E3               	rrcf	plusw1,f,c
 35419  01C3B2  0EE8               	movlw	-24
 35420  01C3B4  32E3               	rrcf	plusw1,f,c
 35421  01C3B6  0EE7               	movlw	-25
 35422  01C3B8  32E3               	rrcf	plusw1,f,c
 35423  01C3BA  0EE6               	movlw	-26
 35424  01C3BC  32E3               	rrcf	plusw1,f,c
 35425                           
 35426                           ;stkvar	_counter @ sp[(-10)+9]
 35427  01C3BE  0EFF               	movlw	-1
 35428  01C3C0  50E3               	movf	plusw1,w,c
 35429  01C3C2  6E2A               	movwf	btemp^0,c
 35430  01C3C4  0E01               	movlw	1
 35431  01C3C6  5E2A               	subwf	btemp^0,f,c
 35432  01C3C8  0EFF               	movlw	-1
 35433  01C3CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 35434  01C3D0  A4D8               	btfss	status,2,c
 35435  01C3D2  D791               	goto	u8160
 35436  01C3D4                     u8180:
 35437                           
 35438                           ;stkvar	_sign @ sp[(-10)+8]
 35439  01C3D4  0EFE               	movlw	-2
 35440  01C3D6  50E3               	movf	plusw1,w,c
 35441  01C3D8  B4D8               	btfsc	status,2,c
 35442  01C3DA  D025               	goto	u8200
 35443                           
 35444                           ;stkvar	_quotient @ sp[(-10)+0]
 35445                           ;stkvar	_quotient @ sp[(-10)+0]
 35446  01C3DC  0EF6               	movlw	-10
 35447  01C3DE  6CE3               	negf	plusw1,c
 35448  01C3E0  0EF7               	movlw	-9
 35449  01C3E2  1EE3               	comf	plusw1,f,c
 35450  01C3E4  0EF8               	movlw	-8
 35451  01C3E6  1EE3               	comf	plusw1,f,c
 35452  01C3E8  0EF9               	movlw	-7
 35453  01C3EA  1EE3               	comf	plusw1,f,c
 35454  01C3EC  0EFA               	movlw	-6
 35455  01C3EE  1EE3               	comf	plusw1,f,c
 35456  01C3F0  0EFB               	movlw	-5
 35457  01C3F2  1EE3               	comf	plusw1,f,c
 35458  01C3F4  0EFC               	movlw	-4
 35459  01C3F6  1EE3               	comf	plusw1,f,c
 35460  01C3F8  0EFD               	movlw	-3
 35461  01C3FA  1EE3               	comf	plusw1,f,c
 35462  01C3FC  E314               	bnc	u8200
 35463  01C3FE  0EF7               	movlw	-9
 35464  01C400  2AE3               	incf	plusw1,f,c
 35465  01C402  E311               	bnc	u8200
 35466  01C404  0EF8               	movlw	-8
 35467  01C406  2AE3               	incf	plusw1,f,c
 35468  01C408  E30E               	bnc	u8200
 35469  01C40A  0EF9               	movlw	-7
 35470  01C40C  2AE3               	incf	plusw1,f,c
 35471  01C40E  E30B               	bnc	u8200
 35472  01C410  0EFA               	movlw	-6
 35473  01C412  2AE3               	incf	plusw1,f,c
 35474  01C414  E308               	bnc	u8200
 35475  01C416  0EFB               	movlw	-5
 35476  01C418  2AE3               	incf	plusw1,f,c
 35477  01C41A  E305               	bnc	u8200
 35478  01C41C  0EFC               	movlw	-4
 35479  01C41E  2AE3               	incf	plusw1,f,c
 35480  01C420  E302               	bnc	u8200
 35481  01C422  0EFD               	movlw	-3
 35482  01C424  2AE3               	incf	plusw1,f,c
 35483  01C426                     u8200:
 35484                           
 35485                           ;stkvar	_quotient @ sp[(-10)+0]
 35486  01C426  0EF6               	movlw	246
 35487  01C428  24E1               	addwf	fsr1l,w,c
 35488  01C42A  6ED9               	movwf	fsr2l,c
 35489  01C42C  0EFF               	movlw	255
 35490  01C42E  20E2               	addwfc	fsr1h,w,c
 35491  01C430  6EDA               	movwf	fsr2h,c
 35492                           
 35493                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 35494  01C432  0E08               	movlw	8
 35495  01C434  6E2A               	movwf	btemp^0,c
 35496  01C436  0EEE               	movlw	-18
 35497  01C438                     us821999:
 35498  01C438  006F FF7B FFE3     	movff	postinc2,plusw1
 35499  01C43E  28E8               	incf	wreg,w,c
 35500  01C440  2E2A               	decfsz	btemp^0,f,c
 35501  01C442  D7FA               	bra	us821999
 35502                           
 35503                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 35504  01C444  0EF6               	movlw	246
 35505  01C446  26E1               	addwf	fsr1l,f,c
 35506  01C448  0EFF               	movlw	255
 35507  01C44A  22E2               	addwfc	fsr1h,f,c
 35508  01C44C  0012               	return		;funcret
 35509  01C44E                     __end_of___aodiv:
 35510                           	opt callstack 0
 35511                           
 35512 ;; *************** function _ctoa *****************
 35513 ;; Defined at:
 35514 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35515 ;; Parameters:    Size  Location     Type
 35516 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35517 ;;		 -> f(6), NULL(0), 
 35518 ;;  c               1  [STACK] unsigned char 
 35519 ;; Auto vars:     Size  Location     Type
 35520 ;;  w               2  [STACK] int 
 35521 ;;  l               2    0        int 
 35522 ;; Return value:  Size  Location     Type
 35523 ;;                  2  [STACK] int 
 35524 ;; Registers used:
 35525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35526 ;; Tracked objects:
 35527 ;;		On entry : 0/0
 35528 ;;		On exit  : 0/0
 35529 ;;		Unchanged: 0/0
 35530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35535 ;;Total ram usage:        0 bytes
 35536 ;; Hardware stack levels used:    1
 35537 ;; Hardware stack levels required when called:   20
 35538 ;; This function calls:
 35539 ;;		_pad
 35540 ;; This function is called by:
 35541 ;;		_vfpfcnvrt
 35542 ;; This function uses a reentrant model
 35543 ;;
 35544                           
 35545                           	psect	text118
 35546  0010A8                     __ptext118:
 35547                           	opt callstack 0
 35548  0010A8                     _ctoa:
 35549                           	opt callstack 0
 35550                           
 35551                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35552  0010A8  52E6               	movf	postinc1,f,c
 35553  0010AA  52E6               	movf	postinc1,f,c
 35554                           
 35555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 35556                           
 35557                           ;incstack = 0
 35558 ;; hardware stack exceeded
 35559  0010AC  504A               	movf	_width^0,w,c
 35560  0010AE  104B               	iorwf	(_width+1)^0,w,c
 35561  0010B0  A4D8               	btfss	status,2,c
 35562  0010B2  D009               	goto	l15548
 35563                           
 35564                           ;stkvar	_w @ sp[(-2)+0]
 35565  0010B4  0EFE               	movlw	-2
 35566  0010B6  0060  F12B  FFE3   	movff	_width,plusw1
 35567  0010BC  0EFF               	movlw	-1
 35568  0010BE  0060  F12F  FFE3   	movff	_width+1,plusw1
 35569  0010C4  D016               	goto	l15550
 35570  0010C6                     l15548:
 35571  0010C6  0EFF               	movlw	255
 35572  0010C8  6E34               	movwf	(btemp+10)^0,c
 35573  0010CA  0EFF               	movlw	255
 35574  0010CC  6E35               	movwf	(btemp+11)^0,c
 35575  0010CE  0060  F128  F032   	movff	_width,btemp+8
 35576  0010D4  0060  F12C  F033   	movff	_width+1,btemp+9
 35577  0010DA  5034               	movf	(btemp+10)^0,w,c
 35578  0010DC  2632               	addwf	(btemp+8)^0,f,c
 35579  0010DE  5035               	movf	(btemp+11)^0,w,c
 35580  0010E0  2233               	addwfc	(btemp+9)^0,f,c
 35581                           
 35582                           ;stkvar	_w @ sp[(-2)+0]
 35583  0010E2  0EFE               	movlw	-2
 35584  0010E4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 35585  0010EA  0EFF               	movlw	-1
 35586  0010EC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 35587  0010F2                     l15550:
 35588                           
 35589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 35590                           ;stkvar	_c @ sp[(-2)+-3]
 35591  0010F2  0EFB               	movlw	-5
 35592  0010F4  006F FF8C  F354    	movff	plusw1,_dbuf
 35593                           
 35594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 35595  0010FA  0103               	movlb	3	; () banked
 35596  0010FC  6B55               	clrf	(_dbuf+1)& (0+255),b
 35597                           
 35598                           ; BSR set to: 3
 35599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 35600                           ;stkvar	_w @ sp[(-2)+0]
 35601  0010FE  0EFE               	movlw	-2
 35602  001100  006F FF8F FFE6     	movff	plusw1,postinc1
 35603  001106  006F FF8F FFE6     	movff	plusw1,postinc1
 35604  00110C  0E54               	movlw	low _dbuf
 35605  00110E  6EE6               	movwf	postinc1,c
 35606  001110  0E03               	movlw	high _dbuf
 35607  001112  6EE6               	movwf	postinc1,c
 35608                           
 35609                           ;stkvar	_fp @ sp[(-6)+-2]
 35610  001114  0EF8               	movlw	-8
 35611  001116  006F FF8F FFE6     	movff	plusw1,postinc1
 35612  00111C  006F FF8F FFE6     	movff	plusw1,postinc1
 35613  001122  ECC5  F0FC         	call	_pad	;wreg free
 35614                           
 35615                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 35616  001126  0EFB               	movlw	251
 35617  001128  26E1               	addwf	fsr1l,f,c
 35618  00112A  0EFF               	movlw	255
 35619  00112C  22E2               	addwfc	fsr1h,f,c
 35620  00112E  0012               	return		;funcret
 35621  001130                     __end_of_ctoa:
 35622                           	opt callstack 0
 35623                           
 35624 ;; *************** function _pad *****************
 35625 ;; Defined at:
 35626 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35627 ;; Parameters:    Size  Location     Type
 35628 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35629 ;;		 -> f(6), NULL(0), 
 35630 ;;  buf             2  [STACK] PTR unsigned char 
 35631 ;;		 -> dbuf(80), 
 35632 ;;  p               2  [STACK] int 
 35633 ;; Auto vars:     Size  Location     Type
 35634 ;;  w               2  [STACK] int 
 35635 ;;  i               2  [STACK] int 
 35636 ;; Return value:  Size  Location     Type
 35637 ;;                  2  [STACK] int 
 35638 ;; Registers used:
 35639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35640 ;; Tracked objects:
 35641 ;;		On entry : 0/3
 35642 ;;		On exit  : 0/0
 35643 ;;		Unchanged: 0/0
 35644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35649 ;;Total ram usage:        0 bytes
 35650 ;; Hardware stack levels used:    1
 35651 ;; Hardware stack levels required when called:   19
 35652 ;; This function calls:
 35653 ;;		_fputc
 35654 ;;		_fputs
 35655 ;;		_strlen
 35656 ;; This function is called by:
 35657 ;;		_ctoa
 35658 ;;		_dtoa
 35659 ;;		_efgtoa
 35660 ;;		_utoa
 35661 ;;		_xtoa
 35662 ;; This function uses a reentrant model
 35663 ;;
 35664                           
 35665                           	psect	text119
 35666  01F98A                     __ptext119:
 35667                           	opt callstack 0
 35668  01F98A                     _pad:
 35669                           	opt callstack 0
 35670                           
 35671                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35672  01F98A  52E6               	movf	postinc1,f,c
 35673  01F98C  52E6               	movf	postinc1,f,c
 35674  01F98E  52E6               	movf	postinc1,f,c
 35675  01F990  52E6               	movf	postinc1,f,c
 35676                           
 35677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 35678                           
 35679                           ;incstack = 0
 35680 ;; hardware stack exceeded
 35681  01F992  A04E               	btfss	_flags^0,0,c
 35682  01F994  D010               	goto	l15432
 35683                           
 35684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 35685                           ;stkvar	_fp @ sp[(-4)+-2]
 35686  01F996  0EFA               	movlw	-6
 35687  01F998  006F FF8F FFE6     	movff	plusw1,postinc1
 35688  01F99E  006F FF8F FFE6     	movff	plusw1,postinc1
 35689                           
 35690                           ;stkvar	_buf @ sp[(-6)+-4]
 35691  01F9A4  0EF6               	movlw	-10
 35692  01F9A6  006F FF8F FFE6     	movff	plusw1,postinc1
 35693  01F9AC  006F FF8F FFE6     	movff	plusw1,postinc1
 35694  01F9B2  EC9B  F006         	call	_fputs	;wreg free
 35695  01F9B6                     l15432:
 35696                           
 35697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 35698                           ;stkvar	_p @ sp[(-4)+-6]
 35699  01F9B6  0EF7               	movlw	-9
 35700  01F9B8  BEE3               	btfsc	plusw1,7,c
 35701  01F9BA  D011               	goto	l15436
 35702                           
 35703                           ;stkvar	_p @ sp[(-4)+-6]
 35704                           ;stkvar	_w @ sp[(-4)+0]
 35705  01F9BC  0EF6               	movlw	-10
 35706  01F9BE  006F FF8C  F02A    	movff	plusw1,btemp
 35707  01F9C4  0EFC               	movlw	-4
 35708  01F9C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 35709  01F9CC  0EF7               	movlw	-9
 35710  01F9CE  006F FF8C  F02A    	movff	plusw1,btemp
 35711  01F9D4  0EFD               	movlw	-3
 35712  01F9D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 35713  01F9DC  D004               	goto	l2467
 35714  01F9DE                     l15436:
 35715                           
 35716                           ;stkvar	_w @ sp[(-4)+0]
 35717  01F9DE  0EFC               	movlw	-4
 35718  01F9E0  6AE3               	clrf	plusw1,c
 35719  01F9E2  0EFD               	movlw	-3
 35720  01F9E4  6AE3               	clrf	plusw1,c
 35721  01F9E6                     l2467:
 35722                           
 35723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 35724                           ;stkvar	_i @ sp[(-4)+2]
 35725  01F9E6  0EFE               	movlw	-2
 35726  01F9E8  6AE3               	clrf	plusw1,c
 35727  01F9EA  0EFF               	movlw	-1
 35728  01F9EC  6AE3               	clrf	plusw1,c
 35729                           
 35730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35731  01F9EE  D01E               	goto	l15442
 35732  01F9F0                     l15438:
 35733                           
 35734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 35735                           ;stkvar	_fp @ sp[(-4)+-2]
 35736  01F9F0  0EFA               	movlw	-6
 35737  01F9F2  006F FF8F FFE6     	movff	plusw1,postinc1
 35738  01F9F8  006F FF8F FFE6     	movff	plusw1,postinc1
 35739  01F9FE  0E20               	movlw	32
 35740  01FA00  6EE6               	movwf	postinc1,c
 35741  01FA02  0E00               	movlw	0
 35742  01FA04  6EE6               	movwf	postinc1,c
 35743  01FA06  EC8E  F0FA         	call	_fputc	;wreg free
 35744                           
 35745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 35746                           ;stkvar	_i @ sp[(-4)+2]
 35747  01FA0A  0EFE               	movlw	-2
 35748  01FA0C  50E3               	movf	plusw1,w,c
 35749  01FA0E  0F01               	addlw	1
 35750  01FA10  6E2A               	movwf	btemp^0,c
 35751  01FA12  0EFE               	movlw	-2
 35752  01FA14  0060  F0AB  FFE3   	movff	btemp,plusw1
 35753  01FA1A  6A2A               	clrf	btemp^0,c
 35754  01FA1C  0EFF               	movlw	-1
 35755  01FA1E  50E3               	movf	plusw1,w,c
 35756  01FA20  202A               	addwfc	btemp^0,w,c
 35757  01FA22  6E2A               	movwf	btemp^0,c
 35758  01FA24  0EFF               	movlw	-1
 35759  01FA26  0060  F0AB  FFE3   	movff	btemp,plusw1
 35760  01FA2C                     l15442:
 35761                           
 35762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35763                           ;stkvar	_w @ sp[(-4)+0]
 35764                           ;stkvar	_i @ sp[(-4)+2]
 35765  01FA2C  50E1               	movf	fsr1l,w,c
 35766  01FA2E  0FFE               	addlw	-2
 35767  01FA30  6ED9               	movwf	fsr2l,c
 35768  01FA32  50E2               	movf	fsr1h,w,c
 35769  01FA34  6EDA               	movwf	fsr2h,c
 35770  01FA36  0EFF               	movlw	255
 35771  01FA38  22DA               	addwfc	fsr2h,f,c
 35772  01FA3A  0EFC               	movlw	-4
 35773  01FA3C  50E3               	movf	plusw1,w,c
 35774  01FA3E  5CDE               	subwf	postinc2,w,c
 35775  01FA40  50DE               	movf	postinc2,w,c
 35776  01FA42  0A80               	xorlw	128
 35777  01FA44  6E2A               	movwf	btemp^0,c
 35778  01FA46  0EFD               	movlw	-3
 35779  01FA48  50E3               	movf	plusw1,w,c
 35780  01FA4A  0A80               	xorlw	128
 35781  01FA4C  582A               	subwfb	btemp^0,w,c
 35782  01FA4E  A0D8               	btfss	status,0,c
 35783  01FA50  D7CF               	goto	l15438
 35784                           
 35785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 35786  01FA52  B04E               	btfsc	_flags^0,0,c
 35787  01FA54  D010               	goto	l15446
 35788                           
 35789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 35790                           ;stkvar	_fp @ sp[(-4)+-2]
 35791  01FA56  0EFA               	movlw	-6
 35792  01FA58  006F FF8F FFE6     	movff	plusw1,postinc1
 35793  01FA5E  006F FF8F FFE6     	movff	plusw1,postinc1
 35794                           
 35795                           ;stkvar	_buf @ sp[(-6)+-4]
 35796  01FA64  0EF6               	movlw	-10
 35797  01FA66  006F FF8F FFE6     	movff	plusw1,postinc1
 35798  01FA6C  006F FF8F FFE6     	movff	plusw1,postinc1
 35799  01FA72  EC9B  F006         	call	_fputs	;wreg free
 35800  01FA76                     l15446:
 35801                           
 35802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 35803                           ;stkvar	_w @ sp[(-4)+0]
 35804                           ;stkvar	_buf @ sp[(-4)+-4]
 35805  01FA76  0EF8               	movlw	-8
 35806  01FA78  006F FF8F FFE6     	movff	plusw1,postinc1
 35807  01FA7E  006F FF8F FFE6     	movff	plusw1,postinc1
 35808  01FA84  ECFD  F005         	call	_strlen	;wreg free
 35809  01FA88  0EFC               	movlw	-4
 35810  01FA8A  50E3               	movf	plusw1,w,c
 35811  01FA8C  262A               	addwf	btemp^0,f,c
 35812  01FA8E  0EFD               	movlw	-3
 35813  01FA90  50E3               	movf	plusw1,w,c
 35814  01FA92  222B               	addwfc	(btemp+1)^0,f,c
 35815                           
 35816                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 35817  01FA94  0EF6               	movlw	246
 35818  01FA96  26E1               	addwf	fsr1l,f,c
 35819  01FA98  0EFF               	movlw	255
 35820  01FA9A  22E2               	addwfc	fsr1h,f,c
 35821  01FA9C  0012               	return		;funcret
 35822  01FA9E                     __end_of_pad:
 35823                           	opt callstack 0
 35824                           
 35825 ;; *************** function _strlen *****************
 35826 ;; Defined at:
 35827 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 35828 ;; Parameters:    Size  Location     Type
 35829 ;;  s               2  [STACK] PTR const unsigned char 
 35830 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35831 ;;		 -> dbuf(80), spin(120), STR_75(9), STR_74(12), 
 35832 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35833 ;;		 -> STR_3(5), V(181), 
 35834 ;; Auto vars:     Size  Location     Type
 35835 ;;  a               2  [STACK] PTR const unsigned char 
 35836 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35837 ;;		 -> dbuf(80), spin(120), STR_75(9), STR_74(12), 
 35838 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35839 ;;		 -> STR_3(5), V(181), 
 35840 ;; Return value:  Size  Location     Type
 35841 ;;                  2  [STACK] unsigned int 
 35842 ;; Registers used:
 35843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 35844 ;; Tracked objects:
 35845 ;;		On entry : 0/0
 35846 ;;		On exit  : 0/0
 35847 ;;		Unchanged: 0/0
 35848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35853 ;;Total ram usage:        0 bytes
 35854 ;; Hardware stack levels used:    1
 35855 ;; Hardware stack levels required when called:   15
 35856 ;; This function calls:
 35857 ;;		Nothing
 35858 ;; This function is called by:
 35859 ;;		_eaDogM_WriteString
 35860 ;;		_spinners
 35861 ;;		_calc_bsoc
 35862 ;;		_pad
 35863 ;;		_stoa
 35864 ;; This function uses a reentrant model
 35865 ;;
 35866                           
 35867                           	psect	text120
 35868  000BFA                     __ptext120:
 35869                           	opt callstack 0
 35870  000BFA                     _strlen:
 35871                           	opt callstack 0
 35872                           
 35873                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35874  000BFA  52E6               	movf	postinc1,f,c
 35875  000BFC  52E6               	movf	postinc1,f,c
 35876                           
 35877                           ;stkvar	_s @ sp[(-2)+-2]
 35878                           
 35879                           ;incstack = 0
 35880 ;; hardware stack exceeded
 35881  000BFE  0EFC               	movlw	-4
 35882  000C00  006F FF8C  F034    	movff	plusw1,btemp+10
 35883  000C06  0EFD               	movlw	-3
 35884  000C08  006F FF8C  F035    	movff	plusw1,btemp+11
 35885                           
 35886                           ;stkvar	_a @ sp[(-2)+0]
 35887  000C0E  0EFF               	movlw	-1
 35888  000C10  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35889  000C16  0EFE               	movlw	-2
 35890  000C18  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35891  000C1E  D011               	goto	l15372
 35892  000C20                     l15370:
 35893                           
 35894                           ;stkvar	_s @ sp[(-2)+-2]
 35895  000C20  0EFC               	movlw	-4
 35896  000C22  50E3               	movf	plusw1,w,c
 35897  000C24  0F01               	addlw	1
 35898  000C26  6E2A               	movwf	btemp^0,c
 35899  000C28  0EFC               	movlw	-4
 35900  000C2A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35901  000C30  6A2A               	clrf	btemp^0,c
 35902  000C32  0EFD               	movlw	-3
 35903  000C34  50E3               	movf	plusw1,w,c
 35904  000C36  202A               	addwfc	btemp^0,w,c
 35905  000C38  6E2A               	movwf	btemp^0,c
 35906  000C3A  0EFD               	movlw	-3
 35907  000C3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 35908  000C42                     l15372:
 35909                           
 35910                           ;stkvar	_s @ sp[(-2)+-2]
 35911  000C42  0EFC               	movlw	-4
 35912  000C44  006F FF8F FFF6     	movff	plusw1,tblptrl
 35913  000C4A  0EFD               	movlw	-3
 35914  000C4C  006F FF8F FFF7     	movff	plusw1,tblptrh
 35915  000C52  0E00               	movlw	low (__mediumconst shr (0+16))
 35916  000C54  6EF8               	movwf	tblptru,c
 35917  000C56  0E1F               	movlw	(high __ramtop+-1)
 35918  000C58  64F7               	cpfsgt	tblptrh,c
 35919  000C5A  D003               	bra	u14247
 35920  000C5C  0008               	tblrd		*
 35921  000C5E  50F5               	movf	tablat,w,c
 35922  000C60  D007               	bra	u14240
 35923  000C62                     u14247:
 35924  000C62  006F FFDB FFE9     	movff	tblptrl,fsr0l
 35925  000C68  006F FFDF FFEA     	movff	tblptrh,fsr0h
 35926  000C6E  50EF               	movf	indf0,w,c
 35927  000C70                     u14240:
 35928  000C70  0900               	iorlw	0
 35929  000C72  A4D8               	btfss	status,2,c
 35930  000C74  D7D5               	goto	l15370
 35931                           
 35932                           ;stkvar	_a @ sp[(-2)+0]
 35933                           ;stkvar	_s @ sp[(-2)+-2]
 35934  000C76  0EFC               	movlw	-4
 35935  000C78  006F FF8C  F02A    	movff	plusw1,btemp
 35936  000C7E  0EFD               	movlw	-3
 35937  000C80  006F FF8C  F02B    	movff	plusw1,btemp+1
 35938  000C86  0EFE               	movlw	-2
 35939  000C88  50E3               	movf	plusw1,w,c
 35940  000C8A  5E2A               	subwf	btemp^0,f,c
 35941  000C8C  0EFF               	movlw	-1
 35942  000C8E  50E3               	movf	plusw1,w,c
 35943  000C90  5A2B               	subwfb	(btemp+1)^0,f,c
 35944                           
 35945                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 35946  000C92  52E5               	movf	postdec1,f,c
 35947  000C94  52E5               	movf	postdec1,f,c
 35948  000C96  52E5               	movf	postdec1,f,c
 35949  000C98  52E5               	movf	postdec1,f,c
 35950  000C9A  0012               	return		;funcret
 35951  000C9C                     __end_of_strlen:
 35952                           	opt callstack 0
 35953                           
 35954 ;; *************** function _fputs *****************
 35955 ;; Defined at:
 35956 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 35957 ;; Parameters:    Size  Location     Type
 35958 ;;  s               2  [STACK] PTR const unsigned char 
 35959 ;;		 -> dbuf(80), 
 35960 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35961 ;;		 -> f(6), NULL(0), 
 35962 ;; Auto vars:     Size  Location     Type
 35963 ;;  i               2  [STACK] int 
 35964 ;;  c               1  [STACK] unsigned char 
 35965 ;; Return value:  Size  Location     Type
 35966 ;;                  2  [STACK] int 
 35967 ;; Registers used:
 35968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35969 ;; Tracked objects:
 35970 ;;		On entry : 0/3
 35971 ;;		On exit  : 0/0
 35972 ;;		Unchanged: 0/0
 35973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35978 ;;Total ram usage:        0 bytes
 35979 ;; Hardware stack levels used:    1
 35980 ;; Hardware stack levels required when called:   18
 35981 ;; This function calls:
 35982 ;;		_fputc
 35983 ;; This function is called by:
 35984 ;;		_pad
 35985 ;; This function uses a reentrant model
 35986 ;;
 35987                           
 35988                           	psect	text121
 35989  000D36                     __ptext121:
 35990                           	opt callstack 0
 35991  000D36                     _fputs:
 35992                           	opt callstack 0
 35993                           
 35994                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35995  000D36  52E6               	movf	postinc1,f,c
 35996  000D38  52E6               	movf	postinc1,f,c
 35997  000D3A  52E6               	movf	postinc1,f,c
 35998                           
 35999                           ;stkvar	_i @ sp[(-3)+0]
 36000                           
 36001                           ;incstack = 0
 36002 ;; hardware stack exceeded
 36003  000D3C  0EFD               	movlw	-3
 36004  000D3E  6AE3               	clrf	plusw1,c
 36005  000D40  0EFE               	movlw	-2
 36006  000D42  6AE3               	clrf	plusw1,c
 36007  000D44  D01F               	goto	l15384
 36008  000D46                     l15380:
 36009                           
 36010                           ;stkvar	_fp @ sp[(-3)+-4]
 36011  000D46  0EF9               	movlw	-7
 36012  000D48  006F FF8F FFE6     	movff	plusw1,postinc1
 36013  000D4E  006F FF8F FFE6     	movff	plusw1,postinc1
 36014                           
 36015                           ;stkvar	_c @ sp[(-5)+2]
 36016  000D54  0EFD               	movlw	-3
 36017  000D56  50E3               	movf	plusw1,w,c
 36018  000D58  6EE6               	movwf	postinc1,c
 36019  000D5A  0E00               	movlw	0
 36020  000D5C  6EE6               	movwf	postinc1,c
 36021  000D5E  EC8E  F0FA         	call	_fputc	;wreg free
 36022                           
 36023                           ;stkvar	_i @ sp[(-3)+0]
 36024  000D62  0EFD               	movlw	-3
 36025  000D64  50E3               	movf	plusw1,w,c
 36026  000D66  0F01               	addlw	1
 36027  000D68  6E2A               	movwf	btemp^0,c
 36028  000D6A  0EFD               	movlw	-3
 36029  000D6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 36030  000D72  6A2A               	clrf	btemp^0,c
 36031  000D74  0EFE               	movlw	-2
 36032  000D76  50E3               	movf	plusw1,w,c
 36033  000D78  202A               	addwfc	btemp^0,w,c
 36034  000D7A  6E2A               	movwf	btemp^0,c
 36035  000D7C  0EFE               	movlw	-2
 36036  000D7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 36037  000D84                     l15384:
 36038                           
 36039                           ;stkvar	_i @ sp[(-3)+0]
 36040  000D84  0EFD               	movlw	-3
 36041  000D86  006F FF8C  F034    	movff	plusw1,btemp+10
 36042  000D8C  0EFE               	movlw	-2
 36043  000D8E  006F FF8C  F035    	movff	plusw1,btemp+11
 36044                           
 36045                           ;stkvar	_s @ sp[(-3)+-2]
 36046  000D94  0EFB               	movlw	-5
 36047  000D96  006F FF8C  F032    	movff	plusw1,btemp+8
 36048  000D9C  0EFC               	movlw	-4
 36049  000D9E  006F FF8C  F033    	movff	plusw1,btemp+9
 36050  000DA4  5034               	movf	(btemp+10)^0,w,c
 36051  000DA6  2432               	addwf	(btemp+8)^0,w,c
 36052  000DA8  6ED9               	movwf	fsr2l,c
 36053  000DAA  5035               	movf	(btemp+11)^0,w,c
 36054  000DAC  2033               	addwfc	(btemp+9)^0,w,c
 36055  000DAE  6EDA               	movwf	fsr2h,c
 36056  000DB0  50DF               	movf	indf2,w,c
 36057  000DB2  6E35               	movwf	(btemp+11)^0,c
 36058                           
 36059                           ;stkvar	_c @ sp[(-3)+2]
 36060  000DB4  0EFF               	movlw	-1
 36061  000DB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36062  000DBC  0EFF               	movlw	-1
 36063  000DBE  50E3               	movf	plusw1,w,c
 36064  000DC0  A4D8               	btfss	status,2,c
 36065  000DC2  D7C1               	goto	l15380
 36066                           
 36067                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36068  000DC4  0EF9               	movlw	249
 36069  000DC6  26E1               	addwf	fsr1l,f,c
 36070  000DC8  0EFF               	movlw	255
 36071  000DCA  22E2               	addwfc	fsr1h,f,c
 36072  000DCC  0012               	return		;funcret
 36073  000DCE                     __end_of_fputs:
 36074                           	opt callstack 0
 36075                           
 36076 ;; *************** function _fputc *****************
 36077 ;; Defined at:
 36078 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 36079 ;; Parameters:    Size  Location     Type
 36080 ;;  c               2  [STACK] int 
 36081 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36082 ;;		 -> f(6), NULL(0), 
 36083 ;; Auto vars:     Size  Location     Type
 36084 ;;		None
 36085 ;; Return value:  Size  Location     Type
 36086 ;;                  2  [STACK] int 
 36087 ;; Registers used:
 36088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36089 ;; Tracked objects:
 36090 ;;		On entry : 0/0
 36091 ;;		On exit  : 0/0
 36092 ;;		Unchanged: 0/0
 36093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36098 ;;Total ram usage:        0 bytes
 36099 ;; Hardware stack levels used:    1
 36100 ;; Hardware stack levels required when called:   17
 36101 ;; This function calls:
 36102 ;;		_putch
 36103 ;; This function is called by:
 36104 ;;		_pad
 36105 ;;		_stoa
 36106 ;;		_vfpfcnvrt
 36107 ;;		_fputs
 36108 ;; This function uses a reentrant model
 36109 ;;
 36110                           
 36111                           	psect	text122
 36112  01F51C                     __ptext122:
 36113                           	opt callstack 0
 36114  01F51C                     _fputc:
 36115                           	opt callstack 0
 36116                           
 36117                           ;stkvar	_fp @ sp[(0)+-4]
 36118                           
 36119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36120                           ;incstack = 0
 36121 ;; hardware stack exceeded
 36122  01F51C  0EFC               	movlw	-4
 36123  01F51E  006F FF8C  F02A    	movff	plusw1,btemp
 36124  01F524  0EFD               	movlw	-3
 36125  01F526  50E3               	movf	plusw1,w,c
 36126  01F528  102A               	iorwf	btemp^0,w,c
 36127  01F52A  B4D8               	btfsc	status,2,c
 36128  01F52C  D009               	goto	u14210
 36129                           
 36130                           ;stkvar	_fp @ sp[(0)+-4]
 36131  01F52E  0EFC               	movlw	-4
 36132  01F530  006F FF8C  F02A    	movff	plusw1,btemp
 36133  01F536  0EFD               	movlw	-3
 36134  01F538  50E3               	movf	plusw1,w,c
 36135  01F53A  102A               	iorwf	btemp^0,w,c
 36136  01F53C  A4D8               	btfss	status,2,c
 36137  01F53E  D006               	goto	l15358
 36138  01F540                     u14210:
 36139                           
 36140                           ;stkvar	_c @ sp[(0)+-2]
 36141  01F540  0EFE               	movlw	-2
 36142  01F542  50E3               	movf	plusw1,w,c
 36143  01F544  6EE6               	movwf	postinc1,c
 36144  01F546  EC17  F014         	call	_putch	;wreg free
 36145  01F54A  D075               	goto	l3543
 36146  01F54C                     l15358:
 36147                           
 36148                           ;stkvar	_fp @ sp[(0)+-4]
 36149  01F54C  0EFC               	movlw	-4
 36150  01F54E  006F FF8C  F034    	movff	plusw1,btemp+10
 36151  01F554  0EFD               	movlw	-3
 36152  01F556  006F FF8C  F035    	movff	plusw1,btemp+11
 36153  01F55C  0E04               	movlw	4
 36154  01F55E  2434               	addwf	(btemp+10)^0,w,c
 36155  01F560  6ED9               	movwf	fsr2l,c
 36156  01F562  0E00               	movlw	0
 36157  01F564  2035               	addwfc	(btemp+11)^0,w,c
 36158  01F566  6EDA               	movwf	fsr2h,c
 36159  01F568  50DE               	movf	postinc2,w,c
 36160  01F56A  10DE               	iorwf	postinc2,w,c
 36161  01F56C  B4D8               	btfsc	status,2,c
 36162  01F56E  D026               	goto	u14230
 36163                           
 36164                           ;stkvar	_fp @ sp[(0)+-4]
 36165  01F570  0EFC               	movlw	-4
 36166  01F572  006F FF8C  F034    	movff	plusw1,btemp+10
 36167  01F578  0EFD               	movlw	-3
 36168  01F57A  006F FF8C  F035    	movff	plusw1,btemp+11
 36169  01F580  0E04               	movlw	4
 36170  01F582  2434               	addwf	(btemp+10)^0,w,c
 36171  01F584  6ED9               	movwf	fsr2l,c
 36172  01F586  0E00               	movlw	0
 36173  01F588  2035               	addwfc	(btemp+11)^0,w,c
 36174  01F58A  6EDA               	movwf	fsr2h,c
 36175                           
 36176                           ;stkvar	_fp @ sp[(0)+-4]
 36177  01F58C  0EFC               	movlw	-4
 36178  01F58E  006F FF8C  F034    	movff	plusw1,btemp+10
 36179  01F594  0EFD               	movlw	-3
 36180  01F596  006F FF8C  F035    	movff	plusw1,btemp+11
 36181  01F59C  0E02               	movlw	2
 36182  01F59E  2434               	addwf	(btemp+10)^0,w,c
 36183  01F5A0  6EE9               	movwf	fsr0l,c
 36184  01F5A2  0E00               	movlw	0
 36185  01F5A4  2035               	addwfc	(btemp+11)^0,w,c
 36186  01F5A6  6EEA               	movwf	fsr0h,c
 36187  01F5A8  50DE               	movf	postinc2,w,c
 36188  01F5AA  5CEE               	subwf	postinc0,w,c
 36189  01F5AC  50EE               	movf	postinc0,w,c
 36190  01F5AE  0A80               	xorlw	128
 36191  01F5B0  6E2A               	movwf	btemp^0,c
 36192  01F5B2  50DE               	movf	postinc2,w,c
 36193  01F5B4  0A80               	xorlw	128
 36194  01F5B6  582A               	subwfb	btemp^0,w,c
 36195  01F5B8  B0D8               	btfsc	status,0,c
 36196  01F5BA  D03D               	goto	l3543
 36197  01F5BC                     u14230:
 36198                           
 36199                           ;stkvar	_c @ sp[(0)+-2]
 36200                           ;stkvar	_fp @ sp[(0)+-4]
 36201  01F5BC  0EFC               	movlw	-4
 36202  01F5BE  006F FF8C  F034    	movff	plusw1,btemp+10
 36203  01F5C4  0EFD               	movlw	-3
 36204  01F5C6  006F FF8C  F035    	movff	plusw1,btemp+11
 36205  01F5CC  0E02               	movlw	2
 36206  01F5CE  2434               	addwf	(btemp+10)^0,w,c
 36207  01F5D0  6ED9               	movwf	fsr2l,c
 36208  01F5D2  0E00               	movlw	0
 36209  01F5D4  2035               	addwfc	(btemp+11)^0,w,c
 36210  01F5D6  6EDA               	movwf	fsr2h,c
 36211  01F5D8  006F FF78  F034    	movff	postinc2,btemp+10
 36212  01F5DE  006F FF74  F035    	movff	postdec2,btemp+11
 36213                           
 36214                           ;stkvar	_fp @ sp[(0)+-4]
 36215  01F5E4  0EFC               	movlw	-4
 36216  01F5E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 36217  01F5EC  0EFD               	movlw	-3
 36218  01F5EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 36219  01F5F4  006F FF78  F032    	movff	postinc2,btemp+8
 36220  01F5FA  006F FF74  F033    	movff	postdec2,btemp+9
 36221  01F600  5034               	movf	(btemp+10)^0,w,c
 36222  01F602  2432               	addwf	(btemp+8)^0,w,c
 36223  01F604  6ED9               	movwf	fsr2l,c
 36224  01F606  5035               	movf	(btemp+11)^0,w,c
 36225  01F608  2033               	addwfc	(btemp+9)^0,w,c
 36226  01F60A  6EDA               	movwf	fsr2h,c
 36227  01F60C  0EFE               	movlw	-2
 36228  01F60E  006F FF8F FFDF     	movff	plusw1,indf2
 36229                           
 36230                           ;stkvar	_fp @ sp[(0)+-4]
 36231  01F614  0EFC               	movlw	-4
 36232  01F616  006F FF8C  F034    	movff	plusw1,btemp+10
 36233  01F61C  0EFD               	movlw	-3
 36234  01F61E  006F FF8C  F035    	movff	plusw1,btemp+11
 36235  01F624  0E02               	movlw	2
 36236  01F626  2434               	addwf	(btemp+10)^0,w,c
 36237  01F628  6ED9               	movwf	fsr2l,c
 36238  01F62A  0E00               	movlw	0
 36239  01F62C  2035               	addwfc	(btemp+11)^0,w,c
 36240  01F62E  6EDA               	movwf	fsr2h,c
 36241  01F630  2ADE               	incf	postinc2,f,c
 36242  01F632  0E00               	movlw	0
 36243  01F634  22DD               	addwfc	postdec2,f,c
 36244  01F636                     l3543:
 36245                           
 36246                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36247  01F636  52E5               	movf	postdec1,f,c
 36248  01F638  52E5               	movf	postdec1,f,c
 36249  01F63A  52E5               	movf	postdec1,f,c
 36250  01F63C  52E5               	movf	postdec1,f,c
 36251  01F63E  0012               	return		;funcret
 36252  01F640                     __end_of_fputc:
 36253                           	opt callstack 0
 36254                           
 36255 ;; *************** function _putch *****************
 36256 ;; Defined at:
 36257 ;;		line 420 in file "eadog.c"
 36258 ;; Parameters:    Size  Location     Type
 36259 ;;  c               1  [STACK] unsigned char 
 36260 ;; Auto vars:     Size  Location     Type
 36261 ;;		None
 36262 ;; Return value:  Size  Location     Type
 36263 ;;                  1  [STACK] void 
 36264 ;; Registers used:
 36265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36266 ;; Tracked objects:
 36267 ;;		On entry : 0/0
 36268 ;;		On exit  : 0/0
 36269 ;;		Unchanged: 0/0
 36270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36275 ;;Total ram usage:        0 bytes
 36276 ;; Hardware stack levels used:    1
 36277 ;; Hardware stack levels required when called:   16
 36278 ;; This function calls:
 36279 ;;		_ringBufS_put_dma
 36280 ;; This function is called by:
 36281 ;;		_fputc
 36282 ;; This function uses a reentrant model
 36283 ;;
 36284                           
 36285                           	psect	text123
 36286  00282E                     __ptext123:
 36287                           	opt callstack 0
 36288  00282E                     _putch:
 36289                           	opt callstack 0
 36290                           
 36291                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 36292                           ;stkvar	_c @ sp[(0)+-1]
 36293                           
 36294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36295                           ;incstack = 0
 36296 ;; hardware stack exceeded
 36297  00282E  0EFF               	movlw	-1
 36298  002830  50E3               	movf	plusw1,w,c
 36299  002832  6EE6               	movwf	postinc1,c
 36300  002834  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 36301  00283A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 36302  002840  EC03  F005         	call	_ringBufS_put_dma	;wreg free
 36303                           
 36304                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 36305  002844  52E5               	movf	postdec1,f,c
 36306  002846  0012               	return		;funcret
 36307  002848                     __end_of_putch:
 36308                           	opt callstack 0
 36309                           
 36310 ;; *************** function _ringBufS_put_dma *****************
 36311 ;; Defined at:
 36312 ;;		line 67 in file "ringbufs.c"
 36313 ;; Parameters:    Size  Location     Type
 36314 ;;  _this           2  [STACK] PTR struct ringBufS_t
 36315 ;;		 -> ring_buf1(67), 
 36316 ;;  c               1  [STACK] const unsigned char 
 36317 ;; Auto vars:     Size  Location     Type
 36318 ;;		None
 36319 ;; Return value:  Size  Location     Type
 36320 ;;                  1  [STACK] void 
 36321 ;; Registers used:
 36322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36323 ;; Tracked objects:
 36324 ;;		On entry : 0/3B
 36325 ;;		On exit  : 0/0
 36326 ;;		Unchanged: 0/0
 36327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36332 ;;Total ram usage:        0 bytes
 36333 ;; Hardware stack levels used:    1
 36334 ;; Hardware stack levels required when called:   15
 36335 ;; This function calls:
 36336 ;;		Nothing
 36337 ;; This function is called by:
 36338 ;;		_send_lcd_data_dma
 36339 ;;		_putch
 36340 ;; This function uses a reentrant model
 36341 ;;
 36342                           
 36343                           	psect	text124
 36344  000A06                     __ptext124:
 36345                           	opt callstack 0
 36346  000A06                     _ringBufS_put_dma:
 36347                           	opt callstack 0
 36348                           
 36349                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 36350                           ;stkvar	__this @ sp[(0)+-2]
 36351                           
 36352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36353                           ;incstack = 0
 36354 ;; hardware stack exceeded
 36355  000A06  0EFE               	movlw	-2
 36356  000A08  006F FF8C  F034    	movff	plusw1,btemp+10
 36357  000A0E  0EFF               	movlw	-1
 36358  000A10  006F FF8C  F035    	movff	plusw1,btemp+11
 36359  000A16  0E42               	movlw	66
 36360  000A18  2434               	addwf	(btemp+10)^0,w,c
 36361  000A1A  6ED9               	movwf	fsr2l,c
 36362  000A1C  0E00               	movlw	0
 36363  000A1E  2035               	addwfc	(btemp+11)^0,w,c
 36364  000A20  6EDA               	movwf	fsr2h,c
 36365  000A22  0E40               	movlw	64
 36366  000A24  60DF               	cpfslt	indf2,c
 36367  000A26  D040               	goto	l1742
 36368                           
 36369                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 36370                           ;stkvar	_c @ sp[(0)+-3]
 36371                           ;stkvar	__this @ sp[(0)+-2]
 36372  000A28  0EFE               	movlw	-2
 36373  000A2A  006F FF8C  F034    	movff	plusw1,btemp+10
 36374  000A30  0EFF               	movlw	-1
 36375  000A32  006F FF8C  F035    	movff	plusw1,btemp+11
 36376  000A38  0E40               	movlw	64
 36377  000A3A  2434               	addwf	(btemp+10)^0,w,c
 36378  000A3C  6ED9               	movwf	fsr2l,c
 36379  000A3E  0E00               	movlw	0
 36380  000A40  2035               	addwfc	(btemp+11)^0,w,c
 36381  000A42  6EDA               	movwf	fsr2h,c
 36382  000A44  50DF               	movf	indf2,w,c
 36383  000A46  6E35               	movwf	(btemp+11)^0,c
 36384                           
 36385                           ;stkvar	__this @ sp[(0)+-2]
 36386  000A48  0EFE               	movlw	-2
 36387  000A4A  006F FF8C  F032    	movff	plusw1,btemp+8
 36388  000A50  0EFF               	movlw	-1
 36389  000A52  006F FF8C  F033    	movff	plusw1,btemp+9
 36390  000A58  5035               	movf	(btemp+11)^0,w,c
 36391  000A5A  2432               	addwf	(btemp+8)^0,w,c
 36392  000A5C  6ED9               	movwf	fsr2l,c
 36393  000A5E  0E00               	movlw	0
 36394  000A60  2033               	addwfc	(btemp+9)^0,w,c
 36395  000A62  6EDA               	movwf	fsr2h,c
 36396  000A64  0EFD               	movlw	-3
 36397  000A66  006F FF8F FFDF     	movff	plusw1,indf2
 36398                           
 36399                           ;ringbufs.c: 71:   ++_this->head;
 36400                           ;stkvar	__this @ sp[(0)+-2]
 36401  000A6C  0EFE               	movlw	-2
 36402  000A6E  006F FF8C  F034    	movff	plusw1,btemp+10
 36403  000A74  0EFF               	movlw	-1
 36404  000A76  006F FF8C  F035    	movff	plusw1,btemp+11
 36405  000A7C  0E40               	movlw	64
 36406  000A7E  2434               	addwf	(btemp+10)^0,w,c
 36407  000A80  6ED9               	movwf	fsr2l,c
 36408  000A82  0E00               	movlw	0
 36409  000A84  2035               	addwfc	(btemp+11)^0,w,c
 36410  000A86  6EDA               	movwf	fsr2h,c
 36411  000A88  2ADF               	incf	indf2,f,c
 36412                           
 36413                           ;ringbufs.c: 72:   ++_this->count;
 36414                           ;stkvar	__this @ sp[(0)+-2]
 36415  000A8A  0EFE               	movlw	-2
 36416  000A8C  006F FF8C  F034    	movff	plusw1,btemp+10
 36417  000A92  0EFF               	movlw	-1
 36418  000A94  006F FF8C  F035    	movff	plusw1,btemp+11
 36419  000A9A  0E42               	movlw	66
 36420  000A9C  2434               	addwf	(btemp+10)^0,w,c
 36421  000A9E  6ED9               	movwf	fsr2l,c
 36422  000AA0  0E00               	movlw	0
 36423  000AA2  2035               	addwfc	(btemp+11)^0,w,c
 36424  000AA4  6EDA               	movwf	fsr2h,c
 36425  000AA6  2ADF               	incf	indf2,f,c
 36426  000AA8                     l1742:
 36427                           
 36428                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 36429  000AA8  52E5               	movf	postdec1,f,c
 36430  000AAA  52E5               	movf	postdec1,f,c
 36431  000AAC  52E5               	movf	postdec1,f,c
 36432  000AAE  0012               	return		;funcret
 36433  000AB0                     __end_of_ringBufS_put_dma:
 36434                           	opt callstack 0
 36435                           
 36436 ;; *************** function _atoi *****************
 36437 ;; Defined at:
 36438 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 36439 ;; Parameters:    Size  Location     Type
 36440 ;;  s               2  [STACK] PTR const unsigned char 
 36441 ;;		 -> STR_94(127), STR_92(3), STR_91(3), STR_90(21), 
 36442 ;;		 -> STR_89(21), STR_88(21), STR_87(21), STR_86(21), 
 36443 ;;		 -> STR_85(21), STR_84(26), STR_83(15), STR_82(15), 
 36444 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 36445 ;;		 -> STR_77(19), STR_76(19), STR_73(3), STR_72(14), 
 36446 ;;		 -> STR_71(28), STR_70(28), STR_69(28), STR_68(22), 
 36447 ;;		 -> STR_67(22), STR_66(22), STR_65(22), STR_64(22), 
 36448 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 36449 ;;		 -> STR_59(21), STR_58(22), STR_57(22), STR_56(22), 
 36450 ;;		 -> STR_55(22), STR_54(22), STR_53(22), STR_52(24), 
 36451 ;;		 -> STR_51(24), STR_50(24), STR_49(30), STR_48(24), 
 36452 ;;		 -> STR_47(24), STR_46(23), STR_45(23), STR_44(23), 
 36453 ;;		 -> STR_43(23), STR_42(23), STR_41(23), STR_40(23), 
 36454 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 36455 ;;		 -> STR_35(23), STR_34(18), STR_33(17), STR_32(17), 
 36456 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(14), 
 36457 ;;		 -> STR_27(27), STR_26(27), STR_25(23), STR_24(22), 
 36458 ;;		 -> STR_23(22), STR_22(22), STR_21(22), STR_20(23), 
 36459 ;;		 -> STR_19(23), STR_18(23), STR_17(26), STR_16(22), 
 36460 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 36461 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 36462 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 36463 ;;		 -> STR_2(21), STR_1(21), 
 36464 ;; Auto vars:     Size  Location     Type
 36465 ;;  n               2  [STACK] int 
 36466 ;;  neg             2  [STACK] int 
 36467 ;; Return value:  Size  Location     Type
 36468 ;;                  2  [STACK] int 
 36469 ;; Registers used:
 36470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 36471 ;; Tracked objects:
 36472 ;;		On entry : 0/0
 36473 ;;		On exit  : 0/0
 36474 ;;		Unchanged: 0/0
 36475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36480 ;;Total ram usage:        0 bytes
 36481 ;; Hardware stack levels used:    1
 36482 ;; Hardware stack levels required when called:   16
 36483 ;; This function calls:
 36484 ;;		_isdigit
 36485 ;;		_isspace
 36486 ;; This function is called by:
 36487 ;;		_vfpfcnvrt
 36488 ;; This function uses a reentrant model
 36489 ;;
 36490                           
 36491                           	psect	text125
 36492  01C44E                     __ptext125:
 36493                           	opt callstack 0
 36494  01C44E                     _atoi:
 36495                           	opt callstack 0
 36496                           
 36497                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36498  01C44E  0E09               	movlw	9
 36499  01C450  26E1               	addwf	fsr1l,f,c
 36500  01C452  0E00               	movlw	0
 36501  01C454  22E2               	addwfc	fsr1h,f,c
 36502                           
 36503                           ;stkvar	_n @ sp[(-9)+5]
 36504                           
 36505                           ;incstack = 0
 36506 ;; hardware stack exceeded
 36507  01C456  0EFC               	movlw	-4
 36508  01C458  6AE3               	clrf	plusw1,c
 36509  01C45A  0EFD               	movlw	-3
 36510  01C45C  6AE3               	clrf	plusw1,c
 36511                           
 36512                           ;stkvar	_neg @ sp[(-9)+7]
 36513  01C45E  0EFE               	movlw	-2
 36514  01C460  6AE3               	clrf	plusw1,c
 36515  01C462  0EFF               	movlw	-1
 36516  01C464  6AE3               	clrf	plusw1,c
 36517  01C466  D011               	goto	l11448
 36518  01C468                     l11446:
 36519                           
 36520                           ;stkvar	_s @ sp[(-9)+-2]
 36521  01C468  0EF5               	movlw	-11
 36522  01C46A  50E3               	movf	plusw1,w,c
 36523  01C46C  0F01               	addlw	1
 36524  01C46E  6E2A               	movwf	btemp^0,c
 36525  01C470  0EF5               	movlw	-11
 36526  01C472  0060  F0AB  FFE3   	movff	btemp,plusw1
 36527  01C478  6A2A               	clrf	btemp^0,c
 36528  01C47A  0EF6               	movlw	-10
 36529  01C47C  50E3               	movf	plusw1,w,c
 36530  01C47E  202A               	addwfc	btemp^0,w,c
 36531  01C480  6E2A               	movwf	btemp^0,c
 36532  01C482  0EF6               	movlw	-10
 36533  01C484  0060  F0AB  FFE3   	movff	btemp,plusw1
 36534  01C48A                     l11448:
 36535                           
 36536                           ;stkvar	_atoi$7208 @ sp[(-9)+4]
 36537  01C48A  0EFB               	movlw	-5
 36538  01C48C  6AE3               	clrf	plusw1,c
 36539  01C48E  2AE3               	incf	plusw1,f,c
 36540                           
 36541                           ;stkvar	_s @ sp[(-9)+-2]
 36542  01C490  50E1               	movf	fsr1l,w,c
 36543  01C492  0FF5               	addlw	-11
 36544  01C494  6ED9               	movwf	fsr2l,c
 36545  01C496  50E2               	movf	fsr1h,w,c
 36546  01C498  6EDA               	movwf	fsr2h,c
 36547  01C49A  0EFF               	movlw	255
 36548  01C49C  22DA               	addwfc	fsr2h,f,c
 36549  01C49E  006F FF7B FFF6     	movff	postinc2,tblptrl
 36550  01C4A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 36551  01C4AA                     	if	0	;tblptru may be non-zero
 36552  01C4AA                     	endif
 36553  01C4AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36554  01C4AA  0E00               	movlw	low (__mediumconst shr (0+16))
 36555  01C4AC  6EF8               	movwf	tblptru,c
 36556  01C4AE                     	endif
 36557  01C4AE  0008               	tblrd		*
 36558  01C4B0  50F5               	movf	tablat,w,c
 36559  01C4B2  0A20               	xorlw	32
 36560  01C4B4  B4D8               	btfsc	status,2,c
 36561  01C4B6  D023               	goto	l11456
 36562  01C4B8  0EF7               	movlw	247
 36563  01C4BA  6E34               	movwf	(btemp+10)^0,c
 36564  01C4BC  0EFF               	movlw	255
 36565  01C4BE  6E35               	movwf	(btemp+11)^0,c
 36566                           
 36567                           ;stkvar	_s @ sp[(-9)+-2]
 36568  01C4C0  50E1               	movf	fsr1l,w,c
 36569  01C4C2  0FF5               	addlw	-11
 36570  01C4C4  6ED9               	movwf	fsr2l,c
 36571  01C4C6  50E2               	movf	fsr1h,w,c
 36572  01C4C8  6EDA               	movwf	fsr2h,c
 36573  01C4CA  0EFF               	movlw	255
 36574  01C4CC  22DA               	addwfc	fsr2h,f,c
 36575  01C4CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 36576  01C4D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 36577  01C4DA                     	if	0	;tblptru may be non-zero
 36578  01C4DA                     	endif
 36579  01C4DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36580  01C4DA  0E00               	movlw	low (__mediumconst shr (0+16))
 36581  01C4DC  6EF8               	movwf	tblptru,c
 36582  01C4DE                     	endif
 36583  01C4DE  0008               	tblrd		*
 36584  01C4E0  50F5               	movf	tablat,w,c
 36585  01C4E2  6E32               	movwf	(btemp+8)^0,c
 36586  01C4E4  6A33               	clrf	(btemp+9)^0,c
 36587  01C4E6  5034               	movf	(btemp+10)^0,w,c
 36588  01C4E8  2632               	addwf	(btemp+8)^0,f,c
 36589  01C4EA  5035               	movf	(btemp+11)^0,w,c
 36590  01C4EC  2233               	addwfc	(btemp+9)^0,f,c
 36591  01C4EE  5033               	movf	(btemp+9)^0,w,c
 36592  01C4F0  E104               	bnz	u10380
 36593  01C4F2  0E05               	movlw	5
 36594  01C4F4  5C32               	subwf	(btemp+8)^0,w,c
 36595  01C4F6  A0D8               	btfss	status,0,c
 36596  01C4F8  D002               	goto	l11456
 36597  01C4FA                     u10380:
 36598                           
 36599                           ;stkvar	_atoi$7208 @ sp[(-9)+4]
 36600  01C4FA  0EFB               	movlw	-5
 36601  01C4FC  6AE3               	clrf	plusw1,c
 36602  01C4FE                     l11456:
 36603                           
 36604                           ;stkvar	_atoi$7208 @ sp[(-9)+4]
 36605  01C4FE  0EFB               	movlw	-5
 36606  01C500  50E3               	movf	plusw1,w,c
 36607  01C502  6E34               	movwf	(btemp+10)^0,c
 36608  01C504  6A35               	clrf	(btemp+11)^0,c
 36609                           
 36610                           ;stkvar	_atoi$7207 @ sp[(-9)+2]
 36611  01C506  0EF9               	movlw	-7
 36612  01C508  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36613  01C50E  0EFA               	movlw	-6
 36614  01C510  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36615                           
 36616                           ;stkvar	_atoi$7207 @ sp[(-9)+2]
 36617  01C516  0EF9               	movlw	-7
 36618  01C518  006F FF8C  F02A    	movff	plusw1,btemp
 36619  01C51E  0EFA               	movlw	-6
 36620  01C520  50E3               	movf	plusw1,w,c
 36621  01C522  102A               	iorwf	btemp^0,w,c
 36622  01C524  B4D8               	btfsc	status,2,c
 36623  01C526  D01F               	goto	l11466
 36624  01C528  D79F               	goto	l11446
 36625  01C52A                     l11462:
 36626  01C52A  0E01               	movlw	1
 36627  01C52C  6E34               	movwf	(btemp+10)^0,c
 36628  01C52E  0E00               	movlw	0
 36629  01C530  6E35               	movwf	(btemp+11)^0,c
 36630                           
 36631                           ;stkvar	_neg @ sp[(-9)+7]
 36632  01C532  0EFE               	movlw	-2
 36633  01C534  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36634  01C53A  0EFF               	movlw	-1
 36635  01C53C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36636  01C542                     l11464:
 36637                           
 36638                           ;stkvar	_s @ sp[(-9)+-2]
 36639  01C542  0EF5               	movlw	-11
 36640  01C544  50E3               	movf	plusw1,w,c
 36641  01C546  0F01               	addlw	1
 36642  01C548  6E2A               	movwf	btemp^0,c
 36643  01C54A  0EF5               	movlw	-11
 36644  01C54C  0060  F0AB  FFE3   	movff	btemp,plusw1
 36645  01C552  6A2A               	clrf	btemp^0,c
 36646  01C554  0EF6               	movlw	-10
 36647  01C556  50E3               	movf	plusw1,w,c
 36648  01C558  202A               	addwfc	btemp^0,w,c
 36649  01C55A  6E2A               	movwf	btemp^0,c
 36650  01C55C  0EF6               	movlw	-10
 36651  01C55E  0060  F0AB  FFE3   	movff	btemp,plusw1
 36652  01C564  D053               	goto	l11472
 36653  01C566                     l11466:
 36654                           
 36655                           ;stkvar	_s @ sp[(-9)+-2]
 36656  01C566  50E1               	movf	fsr1l,w,c
 36657  01C568  0FF5               	addlw	-11
 36658  01C56A  6ED9               	movwf	fsr2l,c
 36659  01C56C  50E2               	movf	fsr1h,w,c
 36660  01C56E  6EDA               	movwf	fsr2h,c
 36661  01C570  0EFF               	movlw	255
 36662  01C572  22DA               	addwfc	fsr2h,f,c
 36663  01C574  006F FF7B FFF6     	movff	postinc2,tblptrl
 36664  01C57A  006F FF77 FFF7     	movff	postdec2,tblptrh
 36665  01C580                     	if	0	;tblptru may be non-zero
 36666  01C580                     	endif
 36667  01C580                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36668  01C580  0E00               	movlw	low (__mediumconst shr (0+16))
 36669  01C582  6EF8               	movwf	tblptru,c
 36670  01C584                     	endif
 36671  01C584  0008               	tblrd		*
 36672  01C586  50F5               	movf	tablat,w,c
 36673  01C588  6E34               	movwf	(btemp+10)^0,c
 36674  01C58A  6A35               	clrf	(btemp+11)^0,c
 36675                           
 36676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36677                           ; Switch size 1, requested type "simple"
 36678                           ; Number of cases is 1, Range of values is 0 to 0
 36679                           ; switch strategies available:
 36680                           ; Name         Instructions Cycles
 36681                           ; simple_byte            4     3 (average)
 36682                           ;	Chosen strategy is simple_byte
 36683  01C58C  5035               	movf	(btemp+11)^0,w,c
 36684  01C58E  0A00               	xorlw	0	; case 0
 36685  01C590  A4D8               	btfss	status,2,c
 36686  01C592  D03C               	goto	l11472
 36687                           
 36688                           ; Switch size 1, requested type "simple"
 36689                           ; Number of cases is 2, Range of values is 43 to 45
 36690                           ; switch strategies available:
 36691                           ; Name         Instructions Cycles
 36692                           ; simple_byte            7     4 (average)
 36693                           ;	Chosen strategy is simple_byte
 36694  01C594  5034               	movf	(btemp+10)^0,w,c
 36695  01C596  0A2B               	xorlw	43	; case 43
 36696  01C598  B4D8               	btfsc	status,2,c
 36697  01C59A  D7D3               	goto	l11464
 36698  01C59C  0A06               	xorlw	6	; case 45
 36699  01C59E  B4D8               	btfsc	status,2,c
 36700  01C5A0  D7C4               	goto	l11462
 36701  01C5A2  D034               	goto	l11472
 36702  01C5A4                     l11468:
 36703                           
 36704                           ;stkvar	_n @ sp[(-9)+5]
 36705  01C5A4  0EFC               	movlw	-4
 36706  01C5A6  006F FF8C  F034    	movff	plusw1,btemp+10
 36707  01C5AC  0EFD               	movlw	-3
 36708  01C5AE  006F FF8C  F035    	movff	plusw1,btemp+11
 36709  01C5B4  0E0A               	movlw	10
 36710  01C5B6  0234               	mulwf	(btemp+10)^0,c
 36711  01C5B8  006F FFCC  F032    	movff	prodl,btemp+8
 36712  01C5BE  006F FFD0  F033    	movff	prodh,btemp+9
 36713  01C5C4  0235               	mulwf	(btemp+11)^0,c
 36714  01C5C6  50F3               	movf	prodl,w,c
 36715  01C5C8  2633               	addwf	(btemp+9)^0,f,c
 36716                           
 36717                           ;stkvar	_s @ sp[(-9)+-2]
 36718  01C5CA  50E1               	movf	fsr1l,w,c
 36719  01C5CC  0FF5               	addlw	-11
 36720  01C5CE  6ED9               	movwf	fsr2l,c
 36721  01C5D0  50E2               	movf	fsr1h,w,c
 36722  01C5D2  6EDA               	movwf	fsr2h,c
 36723  01C5D4  0EFF               	movlw	255
 36724  01C5D6  22DA               	addwfc	fsr2h,f,c
 36725  01C5D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 36726  01C5DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 36727  01C5E4                     	if	0	;tblptru may be non-zero
 36728  01C5E4                     	endif
 36729  01C5E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36730  01C5E4  0E00               	movlw	low (__mediumconst shr (0+16))
 36731  01C5E6  6EF8               	movwf	tblptru,c
 36732  01C5E8                     	endif
 36733  01C5E8  0008               	tblrd		*
 36734  01C5EA  50F5               	movf	tablat,w,c
 36735  01C5EC  5E32               	subwf	(btemp+8)^0,f,c
 36736  01C5EE  0E00               	movlw	0
 36737  01C5F0  5A33               	subwfb	(btemp+9)^0,f,c
 36738  01C5F2  0E30               	movlw	48
 36739  01C5F4  2632               	addwf	(btemp+8)^0,f,c
 36740  01C5F6  0E00               	movlw	0
 36741  01C5F8  2233               	addwfc	(btemp+9)^0,f,c
 36742                           
 36743                           ;stkvar	_n @ sp[(-9)+5]
 36744  01C5FA  0EFC               	movlw	-4
 36745  01C5FC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36746  01C602  0EFD               	movlw	-3
 36747  01C604  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36748  01C60A  D79B               	goto	l11464
 36749  01C60C                     l11472:
 36750  01C60C  0ED0               	movlw	208
 36751  01C60E  6E34               	movwf	(btemp+10)^0,c
 36752  01C610  0EFF               	movlw	255
 36753  01C612  6E35               	movwf	(btemp+11)^0,c
 36754                           
 36755                           ;stkvar	_s @ sp[(-9)+-2]
 36756  01C614  50E1               	movf	fsr1l,w,c
 36757  01C616  0FF5               	addlw	-11
 36758  01C618  6ED9               	movwf	fsr2l,c
 36759  01C61A  50E2               	movf	fsr1h,w,c
 36760  01C61C  6EDA               	movwf	fsr2h,c
 36761  01C61E  0EFF               	movlw	255
 36762  01C620  22DA               	addwfc	fsr2h,f,c
 36763  01C622  006F FF7B FFF6     	movff	postinc2,tblptrl
 36764  01C628  006F FF77 FFF7     	movff	postdec2,tblptrh
 36765  01C62E                     	if	0	;tblptru may be non-zero
 36766  01C62E                     	endif
 36767  01C62E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36768  01C62E  0E00               	movlw	low (__mediumconst shr (0+16))
 36769  01C630  6EF8               	movwf	tblptru,c
 36770  01C632                     	endif
 36771  01C632  0008               	tblrd		*
 36772  01C634  50F5               	movf	tablat,w,c
 36773  01C636  6E32               	movwf	(btemp+8)^0,c
 36774  01C638  6A33               	clrf	(btemp+9)^0,c
 36775  01C63A  5034               	movf	(btemp+10)^0,w,c
 36776  01C63C  2632               	addwf	(btemp+8)^0,f,c
 36777  01C63E  5035               	movf	(btemp+11)^0,w,c
 36778  01C640  2233               	addwfc	(btemp+9)^0,f,c
 36779  01C642  5033               	movf	(btemp+9)^0,w,c
 36780  01C644  E106               	bnz	u10400
 36781  01C646  0E0A               	movlw	10
 36782  01C648  5C32               	subwf	(btemp+8)^0,w,c
 36783  01C64A  B0D8               	btfsc	status,0,c
 36784  01C64C  D002               	goto	u10400
 36785  01C64E  0E01               	movlw	1
 36786  01C650  D001               	goto	u10410
 36787  01C652                     u10400:
 36788  01C652  0E00               	movlw	0
 36789  01C654                     u10410:
 36790  01C654  6E34               	movwf	(btemp+10)^0,c
 36791  01C656  6A35               	clrf	(btemp+11)^0,c
 36792                           
 36793                           ;stkvar	_atoi$7209 @ sp[(-9)+0]
 36794  01C658  0EF7               	movlw	-9
 36795  01C65A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36796  01C660  0EF8               	movlw	-8
 36797  01C662  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36798                           
 36799                           ;stkvar	_atoi$7209 @ sp[(-9)+0]
 36800  01C668  0EF7               	movlw	-9
 36801  01C66A  006F FF8C  F02A    	movff	plusw1,btemp
 36802  01C670  0EF8               	movlw	-8
 36803  01C672  50E3               	movf	plusw1,w,c
 36804  01C674  102A               	iorwf	btemp^0,w,c
 36805  01C676  A4D8               	btfss	status,2,c
 36806  01C678  D795               	goto	l11468
 36807                           
 36808                           ;stkvar	_neg @ sp[(-9)+7]
 36809  01C67A  0EFE               	movlw	-2
 36810  01C67C  006F FF8C  F02A    	movff	plusw1,btemp
 36811  01C682  0EFF               	movlw	-1
 36812  01C684  50E3               	movf	plusw1,w,c
 36813  01C686  102A               	iorwf	btemp^0,w,c
 36814  01C688  A4D8               	btfss	status,2,c
 36815  01C68A  D00E               	goto	l11482
 36816                           
 36817                           ;stkvar	_n @ sp[(-9)+5]
 36818  01C68C  0EFC               	movlw	-4
 36819  01C68E  006F FF8C  F02A    	movff	plusw1,btemp
 36820  01C694  1E2A               	comf	btemp^0,f,c
 36821  01C696  0EFD               	movlw	-3
 36822  01C698  006F FF8C  F02B    	movff	plusw1,btemp+1
 36823  01C69E  1E2B               	comf	(btemp+1)^0,f,c
 36824  01C6A0  2A2A               	incf	btemp^0,f,c
 36825  01C6A2  B4D8               	btfsc	status,2,c
 36826  01C6A4  2A2B               	incf	(btemp+1)^0,f,c
 36827  01C6A6  D008               	goto	l3454
 36828  01C6A8                     l11482:
 36829                           
 36830                           ;stkvar	_n @ sp[(-9)+5]
 36831  01C6A8  0EFC               	movlw	-4
 36832  01C6AA  006F FF8C  F02A    	movff	plusw1,btemp
 36833  01C6B0  0EFD               	movlw	-3
 36834  01C6B2  006F FF8C  F02B    	movff	plusw1,btemp+1
 36835  01C6B8                     l3454:
 36836                           
 36837                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 36838  01C6B8  0EF5               	movlw	245
 36839  01C6BA  26E1               	addwf	fsr1l,f,c
 36840  01C6BC  0EFF               	movlw	255
 36841  01C6BE  22E2               	addwfc	fsr1h,f,c
 36842  01C6C0  0012               	return		;funcret
 36843  01C6C2                     __end_of_atoi:
 36844                           	opt callstack 0
 36845                           
 36846 ;; *************** function _isspace *****************
 36847 ;; Defined at:
 36848 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 36849 ;; Parameters:    Size  Location     Type
 36850 ;;  c               2  [STACK] int 
 36851 ;; Auto vars:     Size  Location     Type
 36852 ;;		None
 36853 ;; Return value:  Size  Location     Type
 36854 ;;                  2  [STACK] int 
 36855 ;; Registers used:
 36856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36857 ;; Tracked objects:
 36858 ;;		On entry : 0/0
 36859 ;;		On exit  : 0/0
 36860 ;;		Unchanged: 0/0
 36861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36866 ;;Total ram usage:        0 bytes
 36867 ;; Hardware stack levels used:    1
 36868 ;; Hardware stack levels required when called:   15
 36869 ;; This function calls:
 36870 ;;		Nothing
 36871 ;; This function is called by:
 36872 ;;		_atoi
 36873 ;; This function uses a reentrant model
 36874 ;;
 36875                           
 36876                           	psect	text126
 36877  001AB8                     __ptext126:
 36878                           	opt callstack 0
 36879  001AB8                     _isspace:
 36880                           	opt callstack 0
 36881                           
 36882                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36883  001AB8  52E6               	movf	postinc1,f,c
 36884                           
 36885                           ;stkvar	_isspace$7258 @ sp[(-1)+0]
 36886                           
 36887                           ;incstack = 0
 36888 ;; hardware stack exceeded
 36889  001ABA  0EFF               	movlw	-1
 36890  001ABC  6AE3               	clrf	plusw1,c
 36891  001ABE  2AE3               	incf	plusw1,f,c
 36892                           
 36893                           ;stkvar	_c @ sp[(-1)+-2]
 36894  001AC0  0EFD               	movlw	-3
 36895  001AC2  006F FF8C  F02A    	movff	plusw1,btemp
 36896  001AC8  0E20               	movlw	32
 36897  001ACA  182A               	xorwf	btemp^0,w,c
 36898  001ACC  E104               	bnz	u9230
 36899  001ACE  0EFE               	movlw	-2
 36900  001AD0  50E3               	movf	plusw1,w,c
 36901  001AD2  B4D8               	btfsc	status,2,c
 36902  001AD4  D012               	goto	l10848
 36903  001AD6                     u9230:
 36904                           
 36905                           ;stkvar	_c @ sp[(-1)+-2]
 36906  001AD6  0EFD               	movlw	-3
 36907  001AD8  50E3               	movf	plusw1,w,c
 36908  001ADA  0FF7               	addlw	247
 36909  001ADC  6E34               	movwf	(btemp+10)^0,c
 36910  001ADE  0EFE               	movlw	-2
 36911  001AE0  006F FF8C  F035    	movff	plusw1,btemp+11
 36912  001AE6  0EFF               	movlw	255
 36913  001AE8  2235               	addwfc	(btemp+11)^0,f,c
 36914  001AEA  5035               	movf	(btemp+11)^0,w,c
 36915  001AEC  E104               	bnz	u9240
 36916  001AEE  0E05               	movlw	5
 36917  001AF0  5C34               	subwf	(btemp+10)^0,w,c
 36918  001AF2  A0D8               	btfss	status,0,c
 36919  001AF4  D002               	goto	l10848
 36920  001AF6                     u9240:
 36921                           
 36922                           ;stkvar	_isspace$7258 @ sp[(-1)+0]
 36923  001AF6  0EFF               	movlw	-1
 36924  001AF8  6AE3               	clrf	plusw1,c
 36925  001AFA                     l10848:
 36926                           
 36927                           ;stkvar	_isspace$7258 @ sp[(-1)+0]
 36928  001AFA  0EFF               	movlw	-1
 36929  001AFC  50E3               	movf	plusw1,w,c
 36930  001AFE  6E2A               	movwf	btemp^0,c
 36931  001B00  6A2B               	clrf	(btemp+1)^0,c
 36932                           
 36933                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36934  001B02  52E5               	movf	postdec1,f,c
 36935  001B04  52E5               	movf	postdec1,f,c
 36936  001B06  52E5               	movf	postdec1,f,c
 36937  001B08  0012               	return		;funcret
 36938  001B0A                     __end_of_isspace:
 36939                           	opt callstack 0
 36940                           
 36941 ;; *************** function _isdigit *****************
 36942 ;; Defined at:
 36943 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 36944 ;; Parameters:    Size  Location     Type
 36945 ;;  c               2  [STACK] int 
 36946 ;; Auto vars:     Size  Location     Type
 36947 ;;		None
 36948 ;; Return value:  Size  Location     Type
 36949 ;;                  2  [STACK] int 
 36950 ;; Registers used:
 36951 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36952 ;; Tracked objects:
 36953 ;;		On entry : 0/0
 36954 ;;		On exit  : 0/0
 36955 ;;		Unchanged: 0/0
 36956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36961 ;;Total ram usage:        0 bytes
 36962 ;; Hardware stack levels used:    1
 36963 ;; Hardware stack levels required when called:   15
 36964 ;; This function calls:
 36965 ;;		Nothing
 36966 ;; This function is called by:
 36967 ;;		_vfpfcnvrt
 36968 ;;		_atoi
 36969 ;; This function uses a reentrant model
 36970 ;;
 36971                           
 36972                           	psect	text127
 36973  0022D2                     __ptext127:
 36974                           	opt callstack 0
 36975  0022D2                     _isdigit:
 36976                           	opt callstack 0
 36977                           
 36978                           ;stkvar	_c @ sp[(0)+-2]
 36979                           
 36980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36981                           ;incstack = 0
 36982 ;; hardware stack exceeded
 36983  0022D2  0EFE               	movlw	-2
 36984  0022D4  50E3               	movf	plusw1,w,c
 36985  0022D6  0FD0               	addlw	208
 36986  0022D8  6E34               	movwf	(btemp+10)^0,c
 36987  0022DA  0EFF               	movlw	-1
 36988  0022DC  006F FF8C  F035    	movff	plusw1,btemp+11
 36989  0022E2  0EFF               	movlw	255
 36990  0022E4  2235               	addwfc	(btemp+11)^0,f,c
 36991  0022E6  5035               	movf	(btemp+11)^0,w,c
 36992  0022E8  E106               	bnz	u8020
 36993  0022EA  0E0A               	movlw	10
 36994  0022EC  5C34               	subwf	(btemp+10)^0,w,c
 36995  0022EE  B0D8               	btfsc	status,0,c
 36996  0022F0  D002               	goto	u8020
 36997  0022F2  0E01               	movlw	1
 36998  0022F4  D001               	goto	u8030
 36999  0022F6                     u8020:
 37000  0022F6  0E00               	movlw	0
 37001  0022F8                     u8030:
 37002  0022F8  6E2A               	movwf	btemp^0,c
 37003  0022FA  6A2B               	clrf	(btemp+1)^0,c
 37004                           
 37005                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37006  0022FC  52E5               	movf	postdec1,f,c
 37007  0022FE  52E5               	movf	postdec1,f,c
 37008  002300  0012               	return		;funcret
 37009  002302                     __end_of_isdigit:
 37010                           	opt callstack 0
 37011                           
 37012 ;; *************** function _set_vterm *****************
 37013 ;; Defined at:
 37014 ;;		line 110 in file "mconfig.c"
 37015 ;; Parameters:    Size  Location     Type
 37016 ;;  vterm           1  [STACK] const unsigned char 
 37017 ;; Auto vars:     Size  Location     Type
 37018 ;;		None
 37019 ;; Return value:  Size  Location     Type
 37020 ;;                  1  [STACK] unsigned char 
 37021 ;; Registers used:
 37022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 37023 ;; Tracked objects:
 37024 ;;		On entry : 0/2
 37025 ;;		On exit  : 0/0
 37026 ;;		Unchanged: 0/0
 37027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37032 ;;Total ram usage:        0 bytes
 37033 ;; Hardware stack levels used:    1
 37034 ;; Hardware stack levels required when called:   15
 37035 ;; This function calls:
 37036 ;;		Nothing
 37037 ;; This function is called by:
 37038 ;;		_main
 37039 ;;		_check_help
 37040 ;; This function uses a reentrant model
 37041 ;;
 37042                           
 37043                           	psect	text128
 37044  0027F2                     __ptext128:
 37045                           	opt callstack 0
 37046  0027F2                     _set_vterm:
 37047                           	opt callstack 15
 37048                           
 37049                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 37050                           ;stkvar	_vterm @ sp[(0)+-1]
 37051                           
 37052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37053                           ;incstack = 0
 37054  0027F2  0EFF               	movlw	-1
 37055  0027F4  006F FF8C  F035    	movff	plusw1,btemp+11
 37056  0027FA  0E03               	movlw	3
 37057  0027FC  1635               	andwf	(btemp+11)^0,f,c
 37058  0027FE  EE23  F0BF         	lfsr	2,_D+640
 37059  002802  50DF               	movf	223,w,c
 37060  002804  1835               	xorwf	(btemp+11)^0,w,c
 37061  002806  0BFE               	andlw	-2
 37062  002808  1835               	xorwf	(btemp+11)^0,w,c
 37063  00280A  6EDF               	movwf	223,c
 37064                           
 37065                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37066  00280C  52E5               	movf	postdec1,f,c
 37067  00280E  0012               	return		;funcret
 37068  002810                     __end_of_set_vterm:
 37069                           	opt callstack 0
 37070                           
 37071 ;; *************** function _set_temp_display_help *****************
 37072 ;; Defined at:
 37073 ;;		line 217 in file "mconfig.c"
 37074 ;; Parameters:    Size  Location     Type
 37075 ;;  new_response    1  [STACK] const enum E16677
 37076 ;; Auto vars:     Size  Location     Type
 37077 ;;		None
 37078 ;; Return value:  Size  Location     Type
 37079 ;;                  1  [STACK] enum E16677
 37080 ;; Registers used:
 37081 ;;		wreg, fsr1l, fsr1h
 37082 ;; Tracked objects:
 37083 ;;		On entry : 0/2
 37084 ;;		On exit  : 3F/2
 37085 ;;		Unchanged: 0/0
 37086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37091 ;;Total ram usage:        0 bytes
 37092 ;; Hardware stack levels used:    1
 37093 ;; Hardware stack levels required when called:   15
 37094 ;; This function calls:
 37095 ;;		Nothing
 37096 ;; This function is called by:
 37097 ;;		_check_help
 37098 ;; This function uses a reentrant model
 37099 ;;
 37100                           
 37101                           	psect	text129
 37102  002952                     __ptext129:
 37103                           	opt callstack 0
 37104  002952                     _set_temp_display_help:
 37105                           	opt callstack 14
 37106                           
 37107                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 37108                           
 37109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37110                           ;incstack = 0
 37111  002952  0102               	movlb	2	; () banked
 37112  002954  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 37113                           
 37114                           ; BSR set to: 2
 37115                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 37116                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37117  002956  0EFF               	movlw	-1
 37118  002958  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 37119                           
 37120                           ; BSR set to: 2
 37121                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 37122  00295E  52E5               	movf	postdec1,f,c
 37123  002960  0012               	return		;funcret
 37124  002962                     __end_of_set_temp_display_help:
 37125                           	opt callstack 0
 37126                           
 37127 ;; *************** function _set_display_info *****************
 37128 ;; Defined at:
 37129 ;;		line 206 in file "mconfig.c"
 37130 ;; Parameters:    Size  Location     Type
 37131 ;;  new_response    1  [STACK] const enum E16677
 37132 ;; Auto vars:     Size  Location     Type
 37133 ;;		None
 37134 ;; Return value:  Size  Location     Type
 37135 ;;                  1  [STACK] enum E17160
 37136 ;; Registers used:
 37137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37138 ;; Tracked objects:
 37139 ;;		On entry : 0/2
 37140 ;;		On exit  : 0/0
 37141 ;;		Unchanged: 0/0
 37142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37147 ;;Total ram usage:        0 bytes
 37148 ;; Hardware stack levels used:    1
 37149 ;; Hardware stack levels required when called:   16
 37150 ;; This function calls:
 37151 ;;		_TimerDone
 37152 ;; This function is called by:
 37153 ;;		_main
 37154 ;;		_check_help
 37155 ;; This function uses a reentrant model
 37156 ;;
 37157                           
 37158                           	psect	text130
 37159  002810                     __ptext130:
 37160                           	opt callstack 0
 37161  002810                     _set_display_info:
 37162                           	opt callstack 14
 37163                           
 37164                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 37165                           
 37166                           ; BSR set to: 2
 37167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37168                           ;incstack = 0
 37169  002810  0E07               	movlw	7
 37170  002812  6EE6               	movwf	postinc1,c
 37171  002814  EC03  F012         	call	_TimerDone	;wreg free
 37172  002818  502A               	movf	btemp^0,w,c
 37173  00281A  B4D8               	btfsc	status,2,c
 37174  00281C  D006               	goto	l1877
 37175                           
 37176                           ;mconfig.c: 211:   old_info = V.response.info;
 37177  00281E  0102               	movlb	2	; () banked
 37178  002820  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 37179                           
 37180                           ; BSR set to: 2
 37181                           ;mconfig.c: 212:   V.response.info = new_response_info;
 37182                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37183  002822  0EFF               	movlw	-1
 37184  002824  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 37185  00282A                     l1877:
 37186                           
 37187                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 37188  00282A  52E5               	movf	postdec1,f,c
 37189  00282C  0012               	return		;funcret
 37190  00282E                     __end_of_set_display_info:
 37191                           	opt callstack 0
 37192                           
 37193 ;; *************** function _mode_lamp_dim *****************
 37194 ;; Defined at:
 37195 ;;		line 13 in file "mconfig.c"
 37196 ;; Parameters:    Size  Location     Type
 37197 ;;  level           2  [STACK] const unsigned short 
 37198 ;; Auto vars:     Size  Location     Type
 37199 ;;		None
 37200 ;; Return value:  Size  Location     Type
 37201 ;;                  1  [STACK] void 
 37202 ;; Registers used:
 37203 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37204 ;; Tracked objects:
 37205 ;;		On entry : 0/2
 37206 ;;		On exit  : 0/0
 37207 ;;		Unchanged: 0/0
 37208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37213 ;;Total ram usage:        0 bytes
 37214 ;; Hardware stack levels used:    1
 37215 ;; Hardware stack levels required when called:   16
 37216 ;; This function calls:
 37217 ;;		_PWM8_LoadDutyValue
 37218 ;; This function is called by:
 37219 ;;		_main
 37220 ;;		_check_help
 37221 ;; This function uses a reentrant model
 37222 ;;
 37223                           
 37224                           	psect	text131
 37225  002862                     __ptext131:
 37226                           	opt callstack 0
 37227  002862                     _mode_lamp_dim:
 37228                           	opt callstack 14
 37229                           
 37230                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 37231                           ;stkvar	_level @ sp[(0)+-2]
 37232                           
 37233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37234                           ;incstack = 0
 37235  002862  0EFE               	movlw	-2
 37236  002864  006F FF8F FFE6     	movff	plusw1,postinc1
 37237  00286A  006F FF8F FFE6     	movff	plusw1,postinc1
 37238  002870  EC17  F00F         	call	_PWM8_LoadDutyValue	;wreg free
 37239                           
 37240                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 37241  002874  52E5               	movf	postdec1,f,c
 37242  002876  52E5               	movf	postdec1,f,c
 37243  002878  0012               	return		;funcret
 37244  00287A                     __end_of_mode_lamp_dim:
 37245                           	opt callstack 0
 37246                           
 37247 ;; *************** function _mode_lamp_bright *****************
 37248 ;; Defined at:
 37249 ;;		line 18 in file "mconfig.c"
 37250 ;; Parameters:    Size  Location     Type
 37251 ;;		None
 37252 ;; Auto vars:     Size  Location     Type
 37253 ;;		None
 37254 ;; Return value:  Size  Location     Type
 37255 ;;                  1  [STACK] void 
 37256 ;; Registers used:
 37257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37258 ;; Tracked objects:
 37259 ;;		On entry : 0/0
 37260 ;;		On exit  : 0/0
 37261 ;;		Unchanged: 0/0
 37262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37267 ;;Total ram usage:        0 bytes
 37268 ;; Hardware stack levels used:    1
 37269 ;; Hardware stack levels required when called:   16
 37270 ;; This function calls:
 37271 ;;		_PWM8_LoadDutyValue
 37272 ;; This function is called by:
 37273 ;;		_check_help
 37274 ;; This function uses a reentrant model
 37275 ;;
 37276                           
 37277                           	psect	text132
 37278  00298E                     __ptext132:
 37279                           	opt callstack 0
 37280  00298E                     _mode_lamp_bright:
 37281                           	opt callstack 13
 37282                           
 37283                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 37284                           
 37285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37286                           ;incstack = 0
 37287  00298E  0E2C               	movlw	44
 37288  002990  6EE6               	movwf	postinc1,c
 37289  002992  0E01               	movlw	1
 37290  002994  6EE6               	movwf	postinc1,c
 37291  002996  EC17  F00F         	call	_PWM8_LoadDutyValue	;wreg free
 37292                           
 37293                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 37294  00299A  0012               	return		;funcret
 37295  00299C                     __end_of_mode_lamp_bright:
 37296                           	opt callstack 0
 37297                           
 37298 ;; *************** function _PWM8_LoadDutyValue *****************
 37299 ;; Defined at:
 37300 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 37301 ;; Parameters:    Size  Location     Type
 37302 ;;  dutyValue       2  [STACK] unsigned short 
 37303 ;; Auto vars:     Size  Location     Type
 37304 ;;		None
 37305 ;; Return value:  Size  Location     Type
 37306 ;;                  1  [STACK] void 
 37307 ;; Registers used:
 37308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37309 ;; Tracked objects:
 37310 ;;		On entry : 0/2
 37311 ;;		On exit  : 0/0
 37312 ;;		Unchanged: 0/0
 37313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37318 ;;Total ram usage:        0 bytes
 37319 ;; Hardware stack levels used:    1
 37320 ;; Hardware stack levels required when called:   15
 37321 ;; This function calls:
 37322 ;;		Nothing
 37323 ;; This function is called by:
 37324 ;;		_mode_lamp_dim
 37325 ;;		_mode_lamp_bright
 37326 ;; This function uses a reentrant model
 37327 ;;
 37328                           
 37329                           	psect	text133
 37330  001E2E                     __ptext133:
 37331                           	opt callstack 0
 37332  001E2E                     _PWM8_LoadDutyValue:
 37333                           	opt callstack 14
 37334                           
 37335                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 37336                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37337                           
 37338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37339                           ;incstack = 0
 37340  001E2E  0EFE               	movlw	-2
 37341  001E30  006F FF8C  F034    	movff	plusw1,btemp+10
 37342  001E36  0EFF               	movlw	-1
 37343  001E38  006F FF8C  F035    	movff	plusw1,btemp+11
 37344  001E3E  90D8               	bcf	status,0,c
 37345  001E40  3235               	rrcf	(btemp+11)^0,f,c
 37346  001E42  3234               	rrcf	(btemp+10)^0,f,c
 37347  001E44  90D8               	bcf	status,0,c
 37348  001E46  3235               	rrcf	(btemp+11)^0,f,c
 37349  001E48  3234               	rrcf	(btemp+10)^0,f,c
 37350  001E4A  5034               	movf	(btemp+10)^0,w,c
 37351  001E4C  6E61               	movwf	97,c	;volatile
 37352                           
 37353                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 37354                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37355  001E4E  0EFE               	movlw	-2
 37356  001E50  006F FF8C  F035    	movff	plusw1,btemp+11
 37357  001E56  0E03               	movlw	3
 37358  001E58  1635               	andwf	(btemp+11)^0,f,c
 37359  001E5A  0E06               	movlw	6
 37360  001E5C  6E2A               	movwf	btemp^0,c
 37361  001E5E                     u12225:
 37362  001E5E  90D8               	bcf	status,0,c
 37363  001E60  3635               	rlcf	(btemp+11)^0,f,c
 37364  001E62  2E2A               	decfsz	btemp^0,f,c
 37365  001E64  D7FC               	goto	u12225
 37366  001E66  5035               	movf	(btemp+11)^0,w,c
 37367  001E68  6E60               	movwf	96,c	;volatile
 37368                           
 37369                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37370  001E6A  52E5               	movf	postdec1,f,c
 37371  001E6C  52E5               	movf	postdec1,f,c
 37372  001E6E  0012               	return		;funcret
 37373  001E70                     __end_of_PWM8_LoadDutyValue:
 37374                           	opt callstack 0
 37375                           
 37376 ;; *************** function _help_button *****************
 37377 ;; Defined at:
 37378 ;;		line 26 in file "mconfig.c"
 37379 ;; Parameters:    Size  Location     Type
 37380 ;;		None
 37381 ;; Auto vars:     Size  Location     Type
 37382 ;;		None
 37383 ;; Return value:  Size  Location     Type
 37384 ;;                  1  [STACK] _Bool 
 37385 ;; Registers used:
 37386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37387 ;; Tracked objects:
 37388 ;;		On entry : 0/2
 37389 ;;		On exit  : 0/0
 37390 ;;		Unchanged: 0/0
 37391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37396 ;;Total ram usage:        0 bytes
 37397 ;; Hardware stack levels used:    1
 37398 ;; Hardware stack levels required when called:   16
 37399 ;; This function calls:
 37400 ;;		_StartTimer
 37401 ;;		_TimerDone
 37402 ;; This function is called by:
 37403 ;;		_check_help
 37404 ;; This function uses a reentrant model
 37405 ;;
 37406                           
 37407                           	psect	text134
 37408  002064                     __ptext134:
 37409                           	opt callstack 0
 37410  002064                     _help_button:
 37411                           	opt callstack 13
 37412                           
 37413                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 37414                           
 37415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37416                           ;incstack = 0
 37417  002064  B0CB               	btfsc	203,0,c	;volatile
 37418  002066  D00C               	goto	l1820
 37419                           
 37420                           ;mconfig.c: 29:   V.help = 1;
 37421  002068  0102               	movlb	2	; () banked
 37422  00206A  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 37423                           
 37424                           ; BSR set to: 2
 37425                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 37426  00206C  0E08               	movlw	8
 37427  00206E  6EE6               	movwf	postinc1,c
 37428  002070  EC03  F012         	call	_TimerDone	;wreg free
 37429  002074  502A               	movf	btemp^0,w,c
 37430  002076  B4D8               	btfsc	status,2,c
 37431  002078  D003               	goto	l1820
 37432                           
 37433                           ;mconfig.c: 31:    return 1;
 37434  00207A  0E01               	movlw	1
 37435  00207C  6E2A               	movwf	btemp^0,c
 37436  00207E  0012               	return	
 37437  002080                     l1820:
 37438                           
 37439                           ;mconfig.c: 34:  if (!V.help)
 37440  002080  0102               	movlb	2	; () banked
 37441  002082  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 37442  002084  D008               	goto	l13606
 37443                           
 37444                           ; BSR set to: 2
 37445                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 37446  002086  0E2C               	movlw	44
 37447  002088  6EE6               	movwf	postinc1,c
 37448  00208A  0E01               	movlw	1
 37449  00208C  6EE6               	movwf	postinc1,c
 37450  00208E  0E08               	movlw	8
 37451  002090  6EE6               	movwf	postinc1,c
 37452  002092  EC78  F00F         	call	_StartTimer	;wreg free
 37453  002096                     l13606:
 37454                           
 37455                           ;mconfig.c: 37:  return 0;
 37456  002096  0E00               	movlw	0
 37457  002098  6E2A               	movwf	btemp^0,c
 37458                           
 37459                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 37460  00209A  0012               	return		;funcret
 37461  00209C                     __end_of_help_button:
 37462                           	opt callstack 0
 37463                           
 37464 ;; *************** function _TimerDone *****************
 37465 ;; Defined at:
 37466 ;;		line 20 in file "timers.c"
 37467 ;; Parameters:    Size  Location     Type
 37468 ;;  timer           1  [STACK] const unsigned char 
 37469 ;; Auto vars:     Size  Location     Type
 37470 ;;		None
 37471 ;; Return value:  Size  Location     Type
 37472 ;;                  1  [STACK] _Bool 
 37473 ;; Registers used:
 37474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37475 ;; Tracked objects:
 37476 ;;		On entry : 0/2
 37477 ;;		On exit  : 0/0
 37478 ;;		Unchanged: 0/0
 37479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37484 ;;Total ram usage:        0 bytes
 37485 ;; Hardware stack levels used:    1
 37486 ;; Hardware stack levels required when called:   15
 37487 ;; This function calls:
 37488 ;;		Nothing
 37489 ;; This function is called by:
 37490 ;;		_main
 37491 ;;		_WaitMs
 37492 ;;		_help_button
 37493 ;;		_check_help
 37494 ;;		_set_display_info
 37495 ;;		_update_adc_result
 37496 ;;		_esr_check
 37497 ;; This function uses a reentrant model
 37498 ;;
 37499                           
 37500                           	psect	text135
 37501  002406                     __ptext135:
 37502                           	opt callstack 0
 37503  002406                     _TimerDone:
 37504                           	opt callstack 14
 37505                           
 37506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37507                           ;incstack = 0
 37508  002406  0004               	clrwdt		;# 
 37509                           
 37510                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 37511                           ;stkvar	_timer @ sp[(0)+-1]
 37512  002408  0EFF               	movlw	-1
 37513  00240A  50E3               	movf	plusw1,w,c
 37514  00240C  0D02               	mullw	2
 37515  00240E  0EBC               	movlw	low _tickCount
 37516  002410  24F3               	addwf	243,w,c
 37517  002412  6ED9               	movwf	fsr2l,c
 37518  002414  0E02               	movlw	high _tickCount
 37519  002416  20F4               	addwfc	prodh,w,c
 37520  002418  6EDA               	movwf	fsr2h,c
 37521  00241A  50DE               	movf	postinc2,w,c
 37522  00241C  10DE               	iorwf	postinc2,w,c
 37523  00241E  A4D8               	btfss	status,2,c
 37524  002420  D002               	goto	l12362
 37525                           
 37526                           ;timers.c: 24:   return 1;
 37527  002422  0E01               	movlw	1
 37528  002424  D001               	goto	L42
 37529  002426                     l12362:
 37530                           
 37531                           ;timers.c: 26:  return 0;
 37532  002426  0E00               	movlw	0
 37533  002428                     L42:
 37534  002428  6E2A               	movwf	btemp^0,c
 37535                           
 37536                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37537  00242A  52E5               	movf	postdec1,f,c
 37538  00242C  0012               	return		;funcret
 37539  00242E                     __end_of_TimerDone:
 37540                           	opt callstack 0
 37541                           
 37542 ;; *************** function _StartTimer *****************
 37543 ;; Defined at:
 37544 ;;		line 12 in file "timers.c"
 37545 ;; Parameters:    Size  Location     Type
 37546 ;;  timer           1  [STACK] const unsigned char 
 37547 ;;  count           2  [STACK] const unsigned short 
 37548 ;; Auto vars:     Size  Location     Type
 37549 ;;		None
 37550 ;; Return value:  Size  Location     Type
 37551 ;;                  1  [STACK] void 
 37552 ;; Registers used:
 37553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37554 ;; Tracked objects:
 37555 ;;		On entry : 0/0
 37556 ;;		On exit  : 0/0
 37557 ;;		Unchanged: 0/0
 37558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37563 ;;Total ram usage:        0 bytes
 37564 ;; Hardware stack levels used:    1
 37565 ;; Hardware stack levels required when called:   15
 37566 ;; This function calls:
 37567 ;;		Nothing
 37568 ;; This function is called by:
 37569 ;;		_main
 37570 ;;		_WaitMs
 37571 ;;		_help_button
 37572 ;;		_check_help
 37573 ;;		_update_adc_result
 37574 ;;		_calc_bsoc
 37575 ;;		_esr_check
 37576 ;; This function uses a reentrant model
 37577 ;;
 37578                           
 37579                           	psect	text136
 37580  001EF0                     __ptext136:
 37581                           	opt callstack 0
 37582  001EF0                     _StartTimer:
 37583                           	opt callstack 0
 37584                           
 37585                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 37586                           ;stkvar	_count @ sp[(0)+-3]
 37587                           
 37588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37589                           ;incstack = 0
 37590 ;; hardware stack exceeded
 37591  001EF0  0EFD               	movlw	-3
 37592  001EF2  006F FF8C  F034    	movff	plusw1,btemp+10
 37593  001EF8  0EFE               	movlw	-2
 37594  001EFA  006F FF8C  F035    	movff	plusw1,btemp+11
 37595  001F00  90D8               	bcf	status,0,c
 37596  001F02  3434               	rlcf	(btemp+10)^0,w,c
 37597  001F04  6E32               	movwf	(btemp+8)^0,c
 37598  001F06  3435               	rlcf	(btemp+11)^0,w,c
 37599  001F08  6E33               	movwf	(btemp+9)^0,c
 37600                           
 37601                           ;stkvar	_timer @ sp[(0)+-1]
 37602  001F0A  0EFF               	movlw	-1
 37603  001F0C  50E3               	movf	plusw1,w,c
 37604  001F0E  0D02               	mullw	2
 37605  001F10  0EBC               	movlw	low _tickCount
 37606  001F12  24F3               	addwf	243,w,c
 37607  001F14  6ED9               	movwf	fsr2l,c
 37608  001F16  0E02               	movlw	high _tickCount
 37609  001F18  20F4               	addwfc	prodh,w,c
 37610  001F1A  6EDA               	movwf	fsr2h,c
 37611  001F1C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 37612  001F22  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 37613                           
 37614                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 37615  001F28  52E5               	movf	postdec1,f,c
 37616  001F2A  52E5               	movf	postdec1,f,c
 37617  001F2C  52E5               	movf	postdec1,f,c
 37618  001F2E  0012               	return		;funcret
 37619  001F30                     __end_of_StartTimer:
 37620                           	opt callstack 0
 37621                           
 37622 ;; *************** function _display_info *****************
 37623 ;; Defined at:
 37624 ;;		line 196 in file "mconfig.c"
 37625 ;; Parameters:    Size  Location     Type
 37626 ;;		None
 37627 ;; Auto vars:     Size  Location     Type
 37628 ;;		None
 37629 ;; Return value:  Size  Location     Type
 37630 ;;                  1  [STACK] enum E16677
 37631 ;; Registers used:
 37632 ;;		btemp
 37633 ;; Tracked objects:
 37634 ;;		On entry : 0/2
 37635 ;;		On exit  : 0/0
 37636 ;;		Unchanged: 0/0
 37637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37642 ;;Total ram usage:        0 bytes
 37643 ;; Hardware stack levels used:    1
 37644 ;; Hardware stack levels required when called:   15
 37645 ;; This function calls:
 37646 ;;		Nothing
 37647 ;; This function is called by:
 37648 ;;		_check_help
 37649 ;; This function uses a reentrant model
 37650 ;;
 37651                           
 37652                           	psect	text137
 37653  002A12                     __ptext137:
 37654                           	opt callstack 0
 37655  002A12                     _display_info:
 37656                           	opt callstack 14
 37657                           
 37658                           ;mconfig.c: 198:  return V.response.info;
 37659                           
 37660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37661                           ;incstack = 0
 37662  002A12  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 37663                           
 37664                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37665  002A18  0012               	return		;funcret
 37666  002A1A                     __end_of_display_info:
 37667                           	opt callstack 0
 37668                           
 37669 ;; *************** function _display_help *****************
 37670 ;; Defined at:
 37671 ;;		line 201 in file "mconfig.c"
 37672 ;; Parameters:    Size  Location     Type
 37673 ;;		None
 37674 ;; Auto vars:     Size  Location     Type
 37675 ;;		None
 37676 ;; Return value:  Size  Location     Type
 37677 ;;                  1  [STACK] enum E16677
 37678 ;; Registers used:
 37679 ;;		btemp
 37680 ;; Tracked objects:
 37681 ;;		On entry : 3F/2
 37682 ;;		On exit  : 0/0
 37683 ;;		Unchanged: 0/0
 37684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37689 ;;Total ram usage:        0 bytes
 37690 ;; Hardware stack levels used:    1
 37691 ;; Hardware stack levels required when called:   15
 37692 ;; This function calls:
 37693 ;;		Nothing
 37694 ;; This function is called by:
 37695 ;;		_check_help
 37696 ;; This function uses a reentrant model
 37697 ;;
 37698                           
 37699                           	psect	text138
 37700  002A1A                     __ptext138:
 37701                           	opt callstack 0
 37702  002A1A                     _display_help:
 37703                           	opt callstack 14
 37704                           
 37705                           ;mconfig.c: 203:  return V.response.help_temp;
 37706                           
 37707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37708                           ;incstack = 0
 37709  002A1A  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 37710                           
 37711                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37712  002A20  0012               	return		;funcret
 37713  002A22                     __end_of_display_help:
 37714                           	opt callstack 0
 37715                           
 37716 ;; *************** function _check_enter_button *****************
 37717 ;; Defined at:
 37718 ;;		line 49 in file "hid.c"
 37719 ;; Parameters:    Size  Location     Type
 37720 ;;  h               2  [STACK] PTR struct H_data
 37721 ;;		 -> H(9), 
 37722 ;; Auto vars:     Size  Location     Type
 37723 ;;		None
 37724 ;; Return value:  Size  Location     Type
 37725 ;;                  1  [STACK] _Bool 
 37726 ;; Registers used:
 37727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 37728 ;; Tracked objects:
 37729 ;;		On entry : 0/0
 37730 ;;		On exit  : 0/0
 37731 ;;		Unchanged: 0/0
 37732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37737 ;;Total ram usage:        0 bytes
 37738 ;; Hardware stack levels used:    1
 37739 ;; Hardware stack levels required when called:   15
 37740 ;; This function calls:
 37741 ;;		Nothing
 37742 ;; This function is called by:
 37743 ;;		_main
 37744 ;; This function uses a reentrant model
 37745 ;;
 37746                           
 37747                           	psect	text139
 37748  001426                     __ptext139:
 37749                           	opt callstack 0
 37750  001426                     _check_enter_button:
 37751                           	opt callstack 15
 37752                           
 37753                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 37754                           ;stkvar	_h @ sp[(0)+-2]
 37755                           
 37756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37757                           ;incstack = 0
 37758  001426  0EFE               	movlw	-2
 37759  001428  006F FF8C  F034    	movff	plusw1,btemp+10
 37760  00142E  0EFF               	movlw	-1
 37761  001430  006F FF8C  F035    	movff	plusw1,btemp+11
 37762  001436  0E04               	movlw	4
 37763  001438  2434               	addwf	(btemp+10)^0,w,c
 37764  00143A  6ED9               	movwf	fsr2l,c
 37765  00143C  0E00               	movlw	0
 37766  00143E  2035               	addwfc	(btemp+11)^0,w,c
 37767  001440  6EDA               	movwf	fsr2h,c
 37768  001442  50DF               	movf	indf2,w,c
 37769  001444  A4D8               	btfss	status,2,c
 37770  001446  D023               	goto	l17306
 37771                           
 37772                           ;stkvar	_h @ sp[(0)+-2]
 37773  001448  0EFE               	movlw	-2
 37774  00144A  006F FF8C  F034    	movff	plusw1,btemp+10
 37775  001450  0EFF               	movlw	-1
 37776  001452  006F FF8C  F035    	movff	plusw1,btemp+11
 37777  001458  0E05               	movlw	5
 37778  00145A  2434               	addwf	(btemp+10)^0,w,c
 37779  00145C  6ED9               	movwf	fsr2l,c
 37780  00145E  0E00               	movlw	0
 37781  001460  2035               	addwfc	(btemp+11)^0,w,c
 37782  001462  6EDA               	movwf	fsr2h,c
 37783  001464  50DF               	movf	indf2,w,c
 37784  001466  A4D8               	btfss	status,2,c
 37785  001468  D012               	goto	l17306
 37786                           
 37787                           ;hid.c: 52:   h->wait_enter = 1;
 37788                           ;stkvar	_h @ sp[(0)+-2]
 37789  00146A  0EFE               	movlw	-2
 37790  00146C  006F FF8C  F034    	movff	plusw1,btemp+10
 37791  001472  0EFF               	movlw	-1
 37792  001474  006F FF8C  F035    	movff	plusw1,btemp+11
 37793  00147A  0E04               	movlw	4
 37794  00147C  2434               	addwf	(btemp+10)^0,w,c
 37795  00147E  6ED9               	movwf	fsr2l,c
 37796  001480  0E00               	movlw	0
 37797  001482  2035               	addwfc	(btemp+11)^0,w,c
 37798  001484  6EDA               	movwf	fsr2h,c
 37799  001486  0E01               	movlw	1
 37800  001488  6EDF               	movwf	indf2,c
 37801                           
 37802                           ;hid.c: 53:   return 1;
 37803  00148A  0E01               	movlw	1
 37804  00148C  D001               	goto	L43
 37805  00148E                     l17306:
 37806                           
 37807                           ;hid.c: 55:  return 0;
 37808  00148E  0E00               	movlw	0
 37809  001490                     L43:
 37810  001490  6E2A               	movwf	btemp^0,c
 37811                           
 37812                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37813  001492  52E5               	movf	postdec1,f,c
 37814  001494  52E5               	movf	postdec1,f,c
 37815  001496  0012               	return		;funcret
 37816  001498                     __end_of_check_enter_button:
 37817                           	opt callstack 0
 37818                           
 37819 ;; *************** function _calc_ror_data *****************
 37820 ;; Defined at:
 37821 ;;		line 103 in file "mbmc.c"
 37822 ;; Parameters:    Size  Location     Type
 37823 ;;		None
 37824 ;; Auto vars:     Size  Location     Type
 37825 ;;		None
 37826 ;; Return value:  Size  Location     Type
 37827 ;;                  1  [STACK] void 
 37828 ;; Registers used:
 37829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37830 ;; Tracked objects:
 37831 ;;		On entry : 0/0
 37832 ;;		On exit  : 0/0
 37833 ;;		Unchanged: 0/0
 37834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37839 ;;Total ram usage:        0 bytes
 37840 ;; Hardware stack levels used:    1
 37841 ;; Hardware stack levels required when called:   18
 37842 ;; This function calls:
 37843 ;;		___flge
 37844 ;;		___flsub
 37845 ;;		_conv_raw_result
 37846 ;;		_fabsf
 37847 ;; This function is called by:
 37848 ;;		_main
 37849 ;; This function uses a reentrant model
 37850 ;;
 37851                           
 37852                           	psect	text140
 37853  01E1EE                     __ptext140:
 37854                           	opt callstack 0
 37855  01E1EE                     _calc_ror_data:
 37856                           	opt callstack 12
 37857                           
 37858                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 37859                           
 37860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37861                           ;incstack = 0
 37862  01E1EE  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 37863  01E1F4  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 37864  01E1FA  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 37865  01E200  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 37866  01E206  0E00               	movlw	0
 37867  01E208  6EE6               	movwf	postinc1,c
 37868  01E20A  0E00               	movlw	0
 37869  01E20C  6EE6               	movwf	postinc1,c
 37870  01E20E  EC76  F0C3         	call	_conv_raw_result	;wreg free
 37871  01E212  0060  F0AB  FFE6   	movff	btemp,postinc1
 37872  01E218  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37873  01E21E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37874  01E224  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37875  01E22A  ECD2  F00E         	call	___flsub	;wreg free
 37876  01E22E  0060  F0AB  FFE6   	movff	btemp,postinc1
 37877  01E234  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37878  01E23A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37879  01E240  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37880  01E246  EC56  F004         	call	_fabsf	;wreg free
 37881  01E24A  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 37882  01E250  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 37883  01E256  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 37884  01E25C  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 37885                           
 37886                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 37887  01E262  0E00               	movlw	0
 37888  01E264  6EE6               	movwf	postinc1,c
 37889  01E266  0E00               	movlw	0
 37890  01E268  6EE6               	movwf	postinc1,c
 37891  01E26A  EC76  F0C3         	call	_conv_raw_result	;wreg free
 37892  01E26E  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 37893  01E274  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 37894  01E27A  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 37895  01E280  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 37896                           
 37897                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 37898  01E286  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 37899  01E28C  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 37900  01E292  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 37901  01E298  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 37902  01E29E  0E00               	movlw	0
 37903  01E2A0  6EE6               	movwf	postinc1,c
 37904  01E2A2  0E04               	movlw	4
 37905  01E2A4  6EE6               	movwf	postinc1,c
 37906  01E2A6  EC76  F0C3         	call	_conv_raw_result	;wreg free
 37907  01E2AA  0060  F0AB  FFE6   	movff	btemp,postinc1
 37908  01E2B0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37909  01E2B6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37910  01E2BC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37911  01E2C2  ECD2  F00E         	call	___flsub	;wreg free
 37912  01E2C6  0060  F0AB  FFE6   	movff	btemp,postinc1
 37913  01E2CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37914  01E2D2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37915  01E2D8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37916  01E2DE  EC56  F004         	call	_fabsf	;wreg free
 37917  01E2E2  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 37918  01E2E8  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 37919  01E2EE  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 37920  01E2F4  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 37921                           
 37922                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 37923  01E2FA  0EE7               	movlw	231
 37924  01E2FC  6EE6               	movwf	postinc1,c
 37925  01E2FE  0E1D               	movlw	29
 37926  01E300  6EE6               	movwf	postinc1,c
 37927  01E302  0EA7               	movlw	167
 37928  01E304  6EE6               	movwf	postinc1,c
 37929  01E306  0E3B               	movlw	59
 37930  01E308  6EE6               	movwf	postinc1,c
 37931  01E30A  EE22  F16B         	lfsr	2,_C+108	;volatile
 37932  01E30E  006F FF7B FFE6     	movff	postinc2,postinc1
 37933  01E314  006F FF7B FFE6     	movff	postinc2,postinc1
 37934  01E31A  006F FF7B FFE6     	movff	postinc2,postinc1
 37935  01E320  006F FF7B FFE6     	movff	postinc2,postinc1
 37936  01E326  EC9F  F0F4         	call	___flge	;wreg free
 37937  01E32A  B02A               	btfsc	btemp& (0+255),0,c
 37938  01E32C  D010               	goto	l14196
 37939                           
 37940                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 37941  01E32E  0EB0               	movlw	176
 37942  01E330  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 37943  01E336  0E03               	movlw	3
 37944  01E338  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 37945  01E33E  0E67               	movlw	103
 37946  01E340  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 37947  01E346  0E3C               	movlw	60
 37948  01E348  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 37949  01E34E                     l14196:
 37950                           
 37951                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 37952  01E34E  0E00               	movlw	0
 37953  01E350  6EE6               	movwf	postinc1,c
 37954  01E352  0E04               	movlw	4
 37955  01E354  6EE6               	movwf	postinc1,c
 37956  01E356  EC76  F0C3         	call	_conv_raw_result	;wreg free
 37957  01E35A  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 37958  01E360  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 37959  01E366  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 37960  01E36C  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 37961                           
 37962                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 37963  01E372  0012               	return		;funcret
 37964  01E374                     __end_of_calc_ror_data:
 37965                           	opt callstack 0
 37966                           
 37967 ;; *************** function _fabsf *****************
 37968 ;; Defined at:
 37969 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 37970 ;; Parameters:    Size  Location     Type
 37971 ;;  x               4  [STACK] float 
 37972 ;; Auto vars:     Size  Location     Type
 37973 ;;  u               4  [STACK] struct .
 37974 ;; Return value:  Size  Location     Type
 37975 ;;                  4  [STACK] float 
 37976 ;; Registers used:
 37977 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 37978 ;; Tracked objects:
 37979 ;;		On entry : 0/0
 37980 ;;		On exit  : 0/0
 37981 ;;		Unchanged: 0/0
 37982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37987 ;;Total ram usage:        0 bytes
 37988 ;; Hardware stack levels used:    1
 37989 ;; Hardware stack levels required when called:   15
 37990 ;; This function calls:
 37991 ;;		Nothing
 37992 ;; This function is called by:
 37993 ;;		_main
 37994 ;;		_calc_ror_data
 37995 ;;		_calc_bsoc
 37996 ;;		_esr_check
 37997 ;; This function uses a reentrant model
 37998 ;;
 37999                           
 38000                           	psect	text141
 38001  0008AC                     __ptext141:
 38002                           	opt callstack 0
 38003  0008AC                     _fabsf:
 38004                           	opt callstack 0
 38005                           
 38006                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38007  0008AC  52E6               	movf	postinc1,f,c
 38008  0008AE  52E6               	movf	postinc1,f,c
 38009  0008B0  52E6               	movf	postinc1,f,c
 38010  0008B2  52E6               	movf	postinc1,f,c
 38011                           
 38012                           ;incstack = 0
 38013 ;; hardware stack exceeded
 38014  0008B4  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 38015  0008BA  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 38016  0008C0  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 38017  0008C6  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 38018                           
 38019                           ;stkvar	_u @ sp[(-4)+0]
 38020  0008CC  0EFC               	movlw	-4
 38021  0008CE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38022  0008D4  0EFD               	movlw	-3
 38023  0008D6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38024  0008DC  0EFE               	movlw	-2
 38025  0008DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38026  0008E4  0EFF               	movlw	-1
 38027  0008E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38028                           
 38029                           ;stkvar	_x @ sp[(-4)+-4]
 38030  0008EC  0EF8               	movlw	-8
 38031  0008EE  006F FF8C  F032    	movff	plusw1,btemp+8
 38032  0008F4  0EF9               	movlw	-7
 38033  0008F6  006F FF8C  F033    	movff	plusw1,btemp+9
 38034  0008FC  0EFA               	movlw	-6
 38035  0008FE  006F FF8C  F034    	movff	plusw1,btemp+10
 38036  000904  0EFB               	movlw	-5
 38037  000906  006F FF8C  F035    	movff	plusw1,btemp+11
 38038                           
 38039                           ;stkvar	_u @ sp[(-4)+0]
 38040  00090C  0EFC               	movlw	-4
 38041  00090E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38042  000914  0EFD               	movlw	-3
 38043  000916  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38044  00091C  0EFE               	movlw	-2
 38045  00091E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38046  000924  0EFF               	movlw	-1
 38047  000926  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38048                           
 38049                           ;stkvar	_u @ sp[(-4)+0]
 38050  00092C  0EFF               	movlw	-1
 38051  00092E  9EE3               	bcf	plusw1,7,c
 38052                           
 38053                           ;stkvar	_u @ sp[(-4)+0]
 38054  000930  0EFC               	movlw	-4
 38055  000932  006F FF8C  F02A    	movff	plusw1,btemp
 38056  000938  0EFD               	movlw	-3
 38057  00093A  006F FF8C  F02B    	movff	plusw1,btemp+1
 38058  000940  0EFE               	movlw	-2
 38059  000942  006F FF8C  F02C    	movff	plusw1,btemp+2
 38060  000948  0EFF               	movlw	-1
 38061  00094A  006F FF8C  F02D    	movff	plusw1,btemp+3
 38062                           
 38063                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 38064  000950  0EF8               	movlw	248
 38065  000952  26E1               	addwf	fsr1l,f,c
 38066  000954  0EFF               	movlw	255
 38067  000956  22E2               	addwfc	fsr1h,f,c
 38068  000958  0012               	return		;funcret
 38069  00095A                     __end_of_fabsf:
 38070                           	opt callstack 0
 38071                           
 38072 ;; *************** function _conv_raw_result *****************
 38073 ;; Defined at:
 38074 ;;		line 135 in file "daq.c"
 38075 ;; Parameters:    Size  Location     Type
 38076 ;;  chan            1  [STACK] const enum E16605
 38077 ;;  to_what         1  [STACK] const enum E16996
 38078 ;; Auto vars:     Size  Location     Type
 38079 ;;		None
 38080 ;; Return value:  Size  Location     Type
 38081 ;;                  4  [STACK] float 
 38082 ;; Registers used:
 38083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38084 ;; Tracked objects:
 38085 ;;		On entry : 0/0
 38086 ;;		On exit  : 0/0
 38087 ;;		Unchanged: 0/0
 38088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38093 ;;Total ram usage:        0 bytes
 38094 ;; Hardware stack levels used:    1
 38095 ;; Hardware stack levels required when called:   17
 38096 ;; This function calls:
 38097 ;;		___fldiv
 38098 ;;		___flmul
 38099 ;;		___flsub
 38100 ;;		___xxtofl
 38101 ;;		_get_raw_result
 38102 ;;		_nanf
 38103 ;; This function is called by:
 38104 ;;		_main
 38105 ;;		_convert_adc_data
 38106 ;;		_calc_ror_data
 38107 ;;		_check_day_time
 38108 ;;		_init_bsoc
 38109 ;;		_esr_check
 38110 ;; This function uses a reentrant model
 38111 ;;
 38112                           
 38113                           	psect	text142
 38114  0186EC                     __ptext142:
 38115                           	opt callstack 0
 38116  0186EC                     _conv_raw_result:
 38117                           	opt callstack 0
 38118                           
 38119                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 38120                           
 38121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38122                           ;incstack = 0
 38123 ;; hardware stack exceeded
 38124  0186EC  D24A               	goto	l12344
 38125  0186EE                     l12290:
 38126                           
 38127                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 38128                           ;stkvar	_chan @ sp[(0)+-1]
 38129  0186EE  0EFF               	movlw	-1
 38130  0186F0  006F FF8C  F035    	movff	plusw1,btemp+11
 38131  0186F6  0E77               	movlw	119
 38132  0186F8  6E32               	movwf	(btemp+8)^0,c
 38133  0186FA  0E3C               	movlw	60
 38134  0186FC  6E33               	movwf	(btemp+9)^0,c
 38135  0186FE  2A35               	incf	(btemp+11)^0,f,c
 38136  018700  D003               	goto	u11594
 38137  018702                     u11595:
 38138  018702  3433               	rlcf	(btemp+9)^0,w,c
 38139  018704  3233               	rrcf	(btemp+9)^0,f,c
 38140  018706  3232               	rrcf	(btemp+8)^0,f,c
 38141  018708                     u11594:
 38142  018708  2E35               	decfsz	(btemp+11)^0,f,c
 38143  01870A  D7FB               	goto	u11595
 38144  01870C  B032               	btfsc	(btemp+8)^0,0,c
 38145  01870E  D007               	goto	l12296
 38146                           
 38147                           ;daq.c: 141:    return nanf("");
 38148  018710  0E75               	movlw	low (STR_94+126)
 38149  018712  6EE6               	movwf	postinc1,c
 38150  018714  0EFA               	movlw	high (STR_94+126)
 38151  018716  6EE6               	movwf	postinc1,c
 38152  018718  EC1A  F00C         	call	_nanf	;wreg free
 38153  01871C  D242               	goto	l1977
 38154  01871E                     l12296:
 38155                           
 38156                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 38157                           ;stkvar	_chan @ sp[(0)+-1]
 38158  01871E  0EFF               	movlw	-1
 38159  018720  006F FF8C  F035    	movff	plusw1,btemp+11
 38160  018726  0E03               	movlw	3
 38161  018728  6E32               	movwf	(btemp+8)^0,c
 38162  01872A  0E00               	movlw	0
 38163  01872C  6E33               	movwf	(btemp+9)^0,c
 38164  01872E  2A35               	incf	(btemp+11)^0,f,c
 38165  018730  D003               	goto	u11614
 38166  018732                     u11615:
 38167  018732  3433               	rlcf	(btemp+9)^0,w,c
 38168  018734  3233               	rrcf	(btemp+9)^0,f,c
 38169  018736  3232               	rrcf	(btemp+8)^0,f,c
 38170  018738                     u11614:
 38171  018738  2E35               	decfsz	(btemp+11)^0,f,c
 38172  01873A  D7FB               	goto	u11615
 38173  01873C  A032               	btfss	(btemp+8)^0,0,c
 38174  01873E  D0F3               	goto	l12310
 38175                           
 38176                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 38177                           ;stkvar	_chan @ sp[(0)+-1]
 38178  018740  0EFF               	movlw	-1
 38179  018742  006F FF8C  F035    	movff	plusw1,btemp+11
 38180  018748  0E01               	movlw	1
 38181  01874A  6E32               	movwf	(btemp+8)^0,c
 38182  01874C  0E00               	movlw	0
 38183  01874E  6E33               	movwf	(btemp+9)^0,c
 38184  018750  2A35               	incf	(btemp+11)^0,f,c
 38185  018752  D003               	goto	u11634
 38186  018754                     u11635:
 38187  018754  3433               	rlcf	(btemp+9)^0,w,c
 38188  018756  3233               	rrcf	(btemp+9)^0,f,c
 38189  018758  3232               	rrcf	(btemp+8)^0,f,c
 38190  01875A                     u11634:
 38191  01875A  2E35               	decfsz	(btemp+11)^0,f,c
 38192  01875C  D7FB               	goto	u11635
 38193  01875E  A032               	btfss	(btemp+8)^0,0,c
 38194  018760  D071               	goto	l12306
 38195                           
 38196                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 38197  018762  0060  F4AB  FFE6   	movff	_R+42,postinc1
 38198  018768  0060  F4AF  FFE6   	movff	_R+43,postinc1
 38199  01876E  0060  F4B3  FFE6   	movff	_R+44,postinc1
 38200  018774  0060  F4B7  FFE6   	movff	_R+45,postinc1
 38201  01877A  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 38202  018780  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 38203  018786  0E00               	movlw	0
 38204  018788  BE33               	btfsc	(btemp+9)^0,7,c
 38205  01878A  0EFF               	movlw	255
 38206  01878C  6E34               	movwf	(btemp+10)^0,c
 38207  01878E  6E35               	movwf	(btemp+11)^0,c
 38208  018790  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38209  018796  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38210  01879C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38211  0187A2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38212  0187A8  0E01               	movlw	1
 38213  0187AA  6EE6               	movwf	postinc1,c
 38214  0187AC  EC05  F0EB         	call	___xxtofl	;wreg free
 38215  0187B0  0060  F0AB  FFE6   	movff	btemp,postinc1
 38216  0187B6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38217  0187BC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38218  0187C2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38219                           
 38220                           ;stkvar	_chan @ sp[(-8)+-1]
 38221  0187C8  0EF7               	movlw	-9
 38222  0187CA  50E3               	movf	plusw1,w,c
 38223  0187CC  6EE6               	movwf	postinc1,c
 38224  0187CE  EC88  F013         	call	_get_raw_result	;wreg free
 38225  0187D2  0060  F0A8  F034   	movff	btemp,btemp+10
 38226  0187D8  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38227  0187DE  5034               	movf	(btemp+10)^0,w,c
 38228  0187E0  6E2E               	movwf	(btemp+4)^0,c
 38229  0187E2  5035               	movf	(btemp+11)^0,w,c
 38230  0187E4  6E2F               	movwf	(btemp+5)^0,c
 38231  0187E6  6A30               	clrf	(btemp+6)^0,c
 38232  0187E8  6A31               	clrf	(btemp+7)^0,c
 38233  0187EA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38234  0187F0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38235  0187F6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38236  0187FC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38237  018802  0E00               	movlw	0
 38238  018804  6EE6               	movwf	postinc1,c
 38239  018806  EC05  F0EB         	call	___xxtofl	;wreg free
 38240  01880A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38241  018810  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38242  018816  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38243  01881C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38244  018822  ECD2  F00E         	call	___flsub	;wreg free
 38245  018826  0060  F0AB  FFE6   	movff	btemp,postinc1
 38246  01882C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38247  018832  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38248  018838  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38249  01883E  ECDD  F0B2         	call	___flmul	;wreg free
 38250  018842  D1AF               	goto	l1977
 38251  018844                     l12306:
 38252                           
 38253                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 38254  018844  0060  F4BB  FFE6   	movff	_R+46,postinc1
 38255  01884A  0060  F4BF  FFE6   	movff	_R+47,postinc1
 38256  018850  0060  F4C3  FFE6   	movff	_R+48,postinc1
 38257  018856  0060  F4C7  FFE6   	movff	_R+49,postinc1
 38258  01885C  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 38259  018862  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 38260  018868  0E00               	movlw	0
 38261  01886A  BE33               	btfsc	(btemp+9)^0,7,c
 38262  01886C  0EFF               	movlw	255
 38263  01886E  6E34               	movwf	(btemp+10)^0,c
 38264  018870  6E35               	movwf	(btemp+11)^0,c
 38265  018872  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38266  018878  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38267  01887E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38268  018884  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38269  01888A  0E01               	movlw	1
 38270  01888C  6EE6               	movwf	postinc1,c
 38271  01888E  EC05  F0EB         	call	___xxtofl	;wreg free
 38272  018892  0060  F0AB  FFE6   	movff	btemp,postinc1
 38273  018898  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38274  01889E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38275  0188A4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38276                           
 38277                           ;stkvar	_chan @ sp[(-8)+-1]
 38278  0188AA  0EF7               	movlw	-9
 38279  0188AC  50E3               	movf	plusw1,w,c
 38280  0188AE  6EE6               	movwf	postinc1,c
 38281  0188B0  EC88  F013         	call	_get_raw_result	;wreg free
 38282  0188B4  0060  F0A8  F034   	movff	btemp,btemp+10
 38283  0188BA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38284  0188C0  5034               	movf	(btemp+10)^0,w,c
 38285  0188C2  6E2E               	movwf	(btemp+4)^0,c
 38286  0188C4  5035               	movf	(btemp+11)^0,w,c
 38287  0188C6  6E2F               	movwf	(btemp+5)^0,c
 38288  0188C8  6A30               	clrf	(btemp+6)^0,c
 38289  0188CA  6A31               	clrf	(btemp+7)^0,c
 38290  0188CC  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38291  0188D2  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38292  0188D8  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38293  0188DE  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38294  0188E4  0E00               	movlw	0
 38295  0188E6  6EE6               	movwf	postinc1,c
 38296  0188E8  EC05  F0EB         	call	___xxtofl	;wreg free
 38297  0188EC  0060  F0AB  FFE6   	movff	btemp,postinc1
 38298  0188F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38299  0188F8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38300  0188FE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38301  018904  ECD2  F00E         	call	___flsub	;wreg free
 38302  018908  0060  F0AB  FFE6   	movff	btemp,postinc1
 38303  01890E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38304  018914  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38305  01891A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38306  018920  ECDD  F0B2         	call	___flmul	;wreg free
 38307  018924  D13E               	goto	l1977
 38308  018926                     l12310:
 38309                           
 38310                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 38311                           ;stkvar	_chan @ sp[(0)+-1]
 38312  018926  0EFF               	movlw	-1
 38313  018928  006F FF8C  F035    	movff	plusw1,btemp+11
 38314  01892E  0E00               	movlw	0
 38315  018930  6E32               	movwf	(btemp+8)^0,c
 38316  018932  0E08               	movlw	8
 38317  018934  6E33               	movwf	(btemp+9)^0,c
 38318  018936  2A35               	incf	(btemp+11)^0,f,c
 38319  018938  D003               	goto	u11654
 38320  01893A                     u11655:
 38321  01893A  3433               	rlcf	(btemp+9)^0,w,c
 38322  01893C  3233               	rrcf	(btemp+9)^0,f,c
 38323  01893E  3232               	rrcf	(btemp+8)^0,f,c
 38324  018940                     u11654:
 38325  018940  2E35               	decfsz	(btemp+11)^0,f,c
 38326  018942  D7FB               	goto	u11655
 38327  018944  A032               	btfss	(btemp+8)^0,0,c
 38328  018946  D008               	goto	l12318
 38329                           
 38330                           ;daq.c: 151:     return 25.0;
 38331  018948  0E00               	movlw	0
 38332  01894A  6E2A               	movwf	btemp^0,c
 38333  01894C  0E00               	movlw	0
 38334  01894E  6E2B               	movwf	(btemp+1)^0,c
 38335  018950  0EC8               	movlw	200
 38336  018952  6E2C               	movwf	(btemp+2)^0,c
 38337  018954  0E41               	movlw	65
 38338  018956  D113               	goto	L44
 38339  018958                     l12318:
 38340                           
 38341                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38342  018958  0E00               	movlw	0
 38343  01895A  6EE6               	movwf	postinc1,c
 38344  01895C  0E00               	movlw	0
 38345  01895E  6EE6               	movwf	postinc1,c
 38346  018960  0E7A               	movlw	122
 38347  018962  6EE6               	movwf	postinc1,c
 38348  018964  0E44               	movlw	68
 38349  018966  6EE6               	movwf	postinc1,c
 38350  018968  0E61               	movlw	97
 38351  01896A  6EE6               	movwf	postinc1,c
 38352  01896C  0E03               	movlw	3
 38353  01896E  6EE6               	movwf	postinc1,c
 38354  018970  0E84               	movlw	132
 38355  018972  6EE6               	movwf	postinc1,c
 38356  018974  0E40               	movlw	64
 38357  018976  6EE6               	movwf	postinc1,c
 38358                           
 38359                           ;stkvar	_chan @ sp[(-8)+-1]
 38360  018978  0EF7               	movlw	-9
 38361  01897A  50E3               	movf	plusw1,w,c
 38362  01897C  6EE6               	movwf	postinc1,c
 38363  01897E  EC88  F013         	call	_get_raw_result	;wreg free
 38364  018982  0060  F0A8  F034   	movff	btemp,btemp+10
 38365  018988  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38366  01898E  5034               	movf	(btemp+10)^0,w,c
 38367  018990  6E2E               	movwf	(btemp+4)^0,c
 38368  018992  5035               	movf	(btemp+11)^0,w,c
 38369  018994  6E2F               	movwf	(btemp+5)^0,c
 38370  018996  6A30               	clrf	(btemp+6)^0,c
 38371  018998  6A31               	clrf	(btemp+7)^0,c
 38372  01899A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38373  0189A0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38374  0189A6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38375  0189AC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38376  0189B2  0E00               	movlw	0
 38377  0189B4  6EE6               	movwf	postinc1,c
 38378  0189B6  EC05  F0EB         	call	___xxtofl	;wreg free
 38379  0189BA  0060  F0AB  FFE6   	movff	btemp,postinc1
 38380  0189C0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38381  0189C6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38382  0189CC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38383  0189D2  ECDD  F0B2         	call	___flmul	;wreg free
 38384  0189D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 38385  0189DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38386  0189E2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38387  0189E8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38388  0189EE  EC2E  F0BE         	call	___fldiv	;wreg free
 38389  0189F2  D0D7               	goto	l1977
 38390  0189F4                     l12322:
 38391                           
 38392                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 38393                           ;stkvar	_chan @ sp[(0)+-1]
 38394  0189F4  0EFF               	movlw	-1
 38395  0189F6  006F FF8C  F035    	movff	plusw1,btemp+11
 38396  0189FC  0E03               	movlw	3
 38397  0189FE  6E32               	movwf	(btemp+8)^0,c
 38398  018A00  0E00               	movlw	0
 38399  018A02  6E33               	movwf	(btemp+9)^0,c
 38400  018A04  2A35               	incf	(btemp+11)^0,f,c
 38401  018A06  D003               	goto	u11674
 38402  018A08                     u11675:
 38403  018A08  3433               	rlcf	(btemp+9)^0,w,c
 38404  018A0A  3233               	rrcf	(btemp+9)^0,f,c
 38405  018A0C  3232               	rrcf	(btemp+8)^0,f,c
 38406  018A0E                     u11674:
 38407  018A0E  2E35               	decfsz	(btemp+11)^0,f,c
 38408  018A10  D7FB               	goto	u11675
 38409  018A12  B032               	btfsc	(btemp+8)^0,0,c
 38410  018A14  D011               	goto	u11700
 38411                           
 38412                           ;stkvar	_chan @ sp[(0)+-1]
 38413  018A16  0EFF               	movlw	-1
 38414  018A18  006F FF8C  F035    	movff	plusw1,btemp+11
 38415  018A1E  0E00               	movlw	0
 38416  018A20  6E32               	movwf	(btemp+8)^0,c
 38417  018A22  0E08               	movlw	8
 38418  018A24  6E33               	movwf	(btemp+9)^0,c
 38419  018A26  2A35               	incf	(btemp+11)^0,f,c
 38420  018A28  D003               	goto	u11694
 38421  018A2A                     u11695:
 38422  018A2A  3433               	rlcf	(btemp+9)^0,w,c
 38423  018A2C  3233               	rrcf	(btemp+9)^0,f,c
 38424  018A2E  3232               	rrcf	(btemp+8)^0,f,c
 38425  018A30                     u11694:
 38426  018A30  2E35               	decfsz	(btemp+11)^0,f,c
 38427  018A32  D7FB               	goto	u11695
 38428  018A34  A032               	btfss	(btemp+8)^0,0,c
 38429  018A36  D04E               	goto	l12330
 38430  018A38                     u11700:
 38431                           
 38432                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 38433  018A38  0E00               	movlw	0
 38434  018A3A  6EE6               	movwf	postinc1,c
 38435  018A3C  0E00               	movlw	0
 38436  018A3E  6EE6               	movwf	postinc1,c
 38437  018A40  0E7A               	movlw	122
 38438  018A42  6EE6               	movwf	postinc1,c
 38439  018A44  0E44               	movlw	68
 38440  018A46  6EE6               	movwf	postinc1,c
 38441  018A48  0E00               	movlw	0
 38442  018A4A  6EE6               	movwf	postinc1,c
 38443  018A4C  0E00               	movlw	0
 38444  018A4E  6EE6               	movwf	postinc1,c
 38445  018A50  0E20               	movlw	32
 38446  018A52  6EE6               	movwf	postinc1,c
 38447  018A54  0E3F               	movlw	63
 38448  018A56  6EE6               	movwf	postinc1,c
 38449                           
 38450                           ;stkvar	_chan @ sp[(-8)+-1]
 38451  018A58  0EF7               	movlw	-9
 38452  018A5A  50E3               	movf	plusw1,w,c
 38453  018A5C  6EE6               	movwf	postinc1,c
 38454  018A5E  EC88  F013         	call	_get_raw_result	;wreg free
 38455  018A62  0060  F0A8  F034   	movff	btemp,btemp+10
 38456  018A68  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38457  018A6E  5034               	movf	(btemp+10)^0,w,c
 38458  018A70  6E2E               	movwf	(btemp+4)^0,c
 38459  018A72  5035               	movf	(btemp+11)^0,w,c
 38460  018A74  6E2F               	movwf	(btemp+5)^0,c
 38461  018A76  6A30               	clrf	(btemp+6)^0,c
 38462  018A78  6A31               	clrf	(btemp+7)^0,c
 38463  018A7A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38464  018A80  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38465  018A86  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38466  018A8C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38467  018A92  0E00               	movlw	0
 38468  018A94  6EE6               	movwf	postinc1,c
 38469  018A96  EC05  F0EB         	call	___xxtofl	;wreg free
 38470  018A9A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38471  018AA0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38472  018AA6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38473  018AAC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38474  018AB2  ECDD  F0B2         	call	___flmul	;wreg free
 38475  018AB6  0060  F0AB  FFE6   	movff	btemp,postinc1
 38476  018ABC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38477  018AC2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38478  018AC8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38479  018ACE  EC2E  F0BE         	call	___fldiv	;wreg free
 38480  018AD2  D067               	goto	l1977
 38481  018AD4                     l12330:
 38482                           
 38483                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38484  018AD4  0E00               	movlw	0
 38485  018AD6  6EE6               	movwf	postinc1,c
 38486  018AD8  0E00               	movlw	0
 38487  018ADA  6EE6               	movwf	postinc1,c
 38488  018ADC  0E7A               	movlw	122
 38489  018ADE  6EE6               	movwf	postinc1,c
 38490  018AE0  0E44               	movlw	68
 38491  018AE2  6EE6               	movwf	postinc1,c
 38492  018AE4  0E61               	movlw	97
 38493  018AE6  6EE6               	movwf	postinc1,c
 38494  018AE8  0E03               	movlw	3
 38495  018AEA  6EE6               	movwf	postinc1,c
 38496  018AEC  0E84               	movlw	132
 38497  018AEE  6EE6               	movwf	postinc1,c
 38498  018AF0  0E40               	movlw	64
 38499  018AF2  6EE6               	movwf	postinc1,c
 38500                           
 38501                           ;stkvar	_chan @ sp[(-8)+-1]
 38502  018AF4  0EF7               	movlw	-9
 38503  018AF6  50E3               	movf	plusw1,w,c
 38504  018AF8  6EE6               	movwf	postinc1,c
 38505  018AFA  EC88  F013         	call	_get_raw_result	;wreg free
 38506  018AFE  0060  F0A8  F034   	movff	btemp,btemp+10
 38507  018B04  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38508  018B0A  5034               	movf	(btemp+10)^0,w,c
 38509  018B0C  6E2E               	movwf	(btemp+4)^0,c
 38510  018B0E  5035               	movf	(btemp+11)^0,w,c
 38511  018B10  6E2F               	movwf	(btemp+5)^0,c
 38512  018B12  6A30               	clrf	(btemp+6)^0,c
 38513  018B14  6A31               	clrf	(btemp+7)^0,c
 38514  018B16  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38515  018B1C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38516  018B22  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38517  018B28  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38518  018B2E  0E00               	movlw	0
 38519  018B30  6EE6               	movwf	postinc1,c
 38520  018B32  EC05  F0EB         	call	___xxtofl	;wreg free
 38521  018B36  0060  F0AB  FFE6   	movff	btemp,postinc1
 38522  018B3C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38523  018B42  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38524  018B48  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38525  018B4E  ECDD  F0B2         	call	___flmul	;wreg free
 38526  018B52  0060  F0AB  FFE6   	movff	btemp,postinc1
 38527  018B58  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38528  018B5E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38529  018B64  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38530  018B6A  EC2E  F0BE         	call	___fldiv	;wreg free
 38531  018B6E  D019               	goto	l1977
 38532  018B70                     l12336:
 38533                           
 38534                           ;daq.c: 164:   return 0.0;
 38535  018B70  0E00               	movlw	0
 38536  018B72  6E2A               	movwf	btemp^0,c
 38537  018B74  0E00               	movlw	0
 38538  018B76  6E2B               	movwf	(btemp+1)^0,c
 38539  018B78  0E00               	movlw	0
 38540  018B7A  6E2C               	movwf	(btemp+2)^0,c
 38541  018B7C  0E00               	movlw	0
 38542  018B7E                     L44:
 38543  018B7E  6E2D               	movwf	(btemp+3)^0,c
 38544  018B80  D010               	goto	l1977
 38545  018B82                     l12344:
 38546                           
 38547                           ;stkvar	_to_what @ sp[(0)+-2]
 38548  018B82  0EFE               	movlw	-2
 38549  018B84  50E3               	movf	plusw1,w,c
 38550  018B86  6E34               	movwf	(btemp+10)^0,c
 38551  018B88  6A35               	clrf	(btemp+11)^0,c
 38552                           
 38553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38554                           ; Switch size 1, requested type "simple"
 38555                           ; Number of cases is 1, Range of values is 0 to 0
 38556                           ; switch strategies available:
 38557                           ; Name         Instructions Cycles
 38558                           ; simple_byte            4     3 (average)
 38559                           ;	Chosen strategy is simple_byte
 38560  018B8A  5035               	movf	(btemp+11)^0,w,c
 38561  018B8C  0A00               	xorlw	0	; case 0
 38562  018B8E  A4D8               	btfss	status,2,c
 38563  018B90  D7EF               	goto	l12336
 38564                           
 38565                           ; Switch size 1, requested type "simple"
 38566                           ; Number of cases is 2, Range of values is 0 to 1
 38567                           ; switch strategies available:
 38568                           ; Name         Instructions Cycles
 38569                           ; simple_byte            7     4 (average)
 38570                           ;	Chosen strategy is simple_byte
 38571  018B92  5034               	movf	(btemp+10)^0,w,c
 38572  018B94  0A00               	xorlw	0	; case 0
 38573  018B96  B4D8               	btfsc	status,2,c
 38574  018B98  D5AA               	goto	l12290
 38575  018B9A  0A01               	xorlw	1	; case 1
 38576  018B9C  B4D8               	btfsc	status,2,c
 38577  018B9E  D72A               	goto	l12322
 38578  018BA0  D7E7               	goto	l12336
 38579  018BA2                     l1977:
 38580                           
 38581                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 38582  018BA2  52E5               	movf	postdec1,f,c
 38583  018BA4  52E5               	movf	postdec1,f,c
 38584  018BA6  0012               	return		;funcret
 38585  018BA8                     __end_of_conv_raw_result:
 38586                           	opt callstack 0
 38587                           
 38588 ;; *************** function _nanf *****************
 38589 ;; Defined at:
 38590 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 38591 ;; Parameters:    Size  Location     Type
 38592 ;;  s               2  [STACK] PTR const unsigned char 
 38593 ;;		 -> STR_133(1), STR_93(1), 
 38594 ;; Auto vars:     Size  Location     Type
 38595 ;;  u               4  [STACK] struct .
 38596 ;; Return value:  Size  Location     Type
 38597 ;;                  4  [STACK] float 
 38598 ;; Registers used:
 38599 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38600 ;; Tracked objects:
 38601 ;;		On entry : 0/0
 38602 ;;		On exit  : 0/0
 38603 ;;		Unchanged: 0/0
 38604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38609 ;;Total ram usage:        0 bytes
 38610 ;; Hardware stack levels used:    1
 38611 ;; Hardware stack levels required when called:   15
 38612 ;; This function calls:
 38613 ;;		Nothing
 38614 ;; This function is called by:
 38615 ;;		_conv_raw_result
 38616 ;; This function uses a reentrant model
 38617 ;;
 38618                           
 38619                           	psect	text143
 38620  001834                     __ptext143:
 38621                           	opt callstack 0
 38622  001834                     _nanf:
 38623                           	opt callstack 0
 38624                           
 38625                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38626  001834  52E6               	movf	postinc1,f,c
 38627  001836  52E6               	movf	postinc1,f,c
 38628  001838  52E6               	movf	postinc1,f,c
 38629  00183A  52E6               	movf	postinc1,f,c
 38630                           
 38631                           ;incstack = 0
 38632 ;; hardware stack exceeded
 38633  00183C  0EFF               	movlw	255
 38634  00183E  6E32               	movwf	(btemp+8)^0,c
 38635  001840  0EFF               	movlw	255
 38636  001842  6E33               	movwf	(btemp+9)^0,c
 38637  001844  0EFF               	movlw	255
 38638  001846  6E34               	movwf	(btemp+10)^0,c
 38639  001848  0E7F               	movlw	127
 38640  00184A  6E35               	movwf	(btemp+11)^0,c
 38641                           
 38642                           ;stkvar	_u @ sp[(-4)+0]
 38643  00184C  0EFC               	movlw	-4
 38644  00184E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38645  001854  0EFD               	movlw	-3
 38646  001856  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38647  00185C  0EFE               	movlw	-2
 38648  00185E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38649  001864  0EFF               	movlw	-1
 38650  001866  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38651                           
 38652                           ;stkvar	_u @ sp[(-4)+0]
 38653  00186C  0EFC               	movlw	-4
 38654  00186E  006F FF8C  F02A    	movff	plusw1,btemp
 38655  001874  0EFD               	movlw	-3
 38656  001876  006F FF8C  F02B    	movff	plusw1,btemp+1
 38657  00187C  0EFE               	movlw	-2
 38658  00187E  006F FF8C  F02C    	movff	plusw1,btemp+2
 38659  001884  0EFF               	movlw	-1
 38660  001886  006F FF8C  F02D    	movff	plusw1,btemp+3
 38661                           
 38662                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 38663  00188C  0EFA               	movlw	250
 38664  00188E  26E1               	addwf	fsr1l,f,c
 38665  001890  0EFF               	movlw	255
 38666  001892  22E2               	addwfc	fsr1h,f,c
 38667  001894  0012               	return		;funcret
 38668  001896                     __end_of_nanf:
 38669                           	opt callstack 0
 38670                           
 38671 ;; *************** function _get_raw_result *****************
 38672 ;; Defined at:
 38673 ;;		line 127 in file "daq.c"
 38674 ;; Parameters:    Size  Location     Type
 38675 ;;  index           1  [STACK] const enum E16605
 38676 ;; Auto vars:     Size  Location     Type
 38677 ;;		None
 38678 ;; Return value:  Size  Location     Type
 38679 ;;                  2  [STACK] unsigned short 
 38680 ;; Registers used:
 38681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 38682 ;; Tracked objects:
 38683 ;;		On entry : 0/2
 38684 ;;		On exit  : 0/0
 38685 ;;		Unchanged: 0/0
 38686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38691 ;;Total ram usage:        0 bytes
 38692 ;; Hardware stack levels used:    1
 38693 ;; Hardware stack levels required when called:   15
 38694 ;; This function calls:
 38695 ;;		Nothing
 38696 ;; This function is called by:
 38697 ;;		_main
 38698 ;;		_current_sensor_cal
 38699 ;;		_conv_raw_result
 38700 ;; This function uses a reentrant model
 38701 ;;
 38702                           
 38703                           	psect	text144
 38704  002710                     __ptext144:
 38705                           	opt callstack 0
 38706  002710                     _get_raw_result:
 38707                           	opt callstack 0
 38708                           
 38709                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 38710                           ;stkvar	_index @ sp[(0)+-1]
 38711                           
 38712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38713                           ;incstack = 0
 38714 ;; hardware stack exceeded
 38715  002710  0EFF               	movlw	-1
 38716  002712  50E3               	movf	plusw1,w,c
 38717  002714  0D02               	mullw	2
 38718  002716  0E00               	movlw	low _R
 38719  002718  24F3               	addwf	243,w,c
 38720  00271A  6ED9               	movwf	fsr2l,c
 38721  00271C  0E01               	movlw	high _R
 38722  00271E  20F4               	addwfc	prodh,w,c
 38723  002720  6EDA               	movwf	fsr2h,c
 38724  002722  006F FF78  F02A    	movff	postinc2,btemp
 38725  002728  006F FF74  F02B    	movff	postdec2,btemp+1
 38726                           
 38727                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 38728  00272E  52E5               	movf	postdec1,f,c
 38729  002730  0012               	return		;funcret
 38730  002732                     __end_of_get_raw_result:
 38731                           	opt callstack 0
 38732                           
 38733 ;; *************** function ___xxtofl *****************
 38734 ;; Defined at:
 38735 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 38736 ;; Parameters:    Size  Location     Type
 38737 ;;  sign            1  [STACK] unsigned char 
 38738 ;;  val             4  [STACK] long 
 38739 ;; Auto vars:     Size  Location     Type
 38740 ;;  arg             4  [STACK] unsigned long 
 38741 ;;  exp             1  [STACK] unsigned char 
 38742 ;; Return value:  Size  Location     Type
 38743 ;;                  4  [STACK] unsigned char 
 38744 ;; Registers used:
 38745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38746 ;; Tracked objects:
 38747 ;;		On entry : 0/39
 38748 ;;		On exit  : 0/0
 38749 ;;		Unchanged: 0/0
 38750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38755 ;;Total ram usage:        0 bytes
 38756 ;; Hardware stack levels used:    1
 38757 ;; Hardware stack levels required when called:   15
 38758 ;; This function calls:
 38759 ;;		Nothing
 38760 ;; This function is called by:
 38761 ;;		_conv_raw_result
 38762 ;;		_load_hist_data
 38763 ;;		_init_bsoc
 38764 ;; This function uses a reentrant model
 38765 ;;
 38766                           
 38767                           	psect	text145
 38768  01D60A                     __ptext145:
 38769                           	opt callstack 0
 38770  01D60A                     ___xxtofl:
 38771                           	opt callstack 0
 38772                           
 38773                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38774  01D60A  0E05               	movlw	5
 38775  01D60C  26E1               	addwf	fsr1l,f,c
 38776  01D60E  0E00               	movlw	0
 38777  01D610  22E2               	addwfc	fsr1h,f,c
 38778                           
 38779                           ;stkvar	_sign @ sp[(-5)+-1]
 38780                           
 38781                           ;incstack = 0
 38782 ;; hardware stack exceeded
 38783  01D612  0EFA               	movlw	-6
 38784  01D614  50E3               	movf	plusw1,w,c
 38785  01D616  B4D8               	btfsc	status,2,c
 38786  01D618  D01D               	goto	l12012
 38787                           
 38788                           ;stkvar	_val @ sp[(-5)+-5]
 38789  01D61A  0EF9               	movlw	-7
 38790  01D61C  AEE3               	btfss	plusw1,7,c
 38791  01D61E  D01A               	goto	l12012
 38792                           
 38793                           ;stkvar	_val @ sp[(-5)+-5]
 38794  01D620  0EF6               	movlw	-10
 38795  01D622  006F FF8C  F032    	movff	plusw1,btemp+8
 38796  01D628  0EF7               	movlw	-9
 38797  01D62A  006F FF8C  F033    	movff	plusw1,btemp+9
 38798  01D630  0EF8               	movlw	-8
 38799  01D632  006F FF8C  F034    	movff	plusw1,btemp+10
 38800  01D638  0EF9               	movlw	-7
 38801  01D63A  006F FF8C  F035    	movff	plusw1,btemp+11
 38802  01D640  1E32               	comf	(btemp+8)^0,f,c
 38803  01D642  1E33               	comf	(btemp+9)^0,f,c
 38804  01D644  1E34               	comf	(btemp+10)^0,f,c
 38805  01D646  1E35               	comf	(btemp+11)^0,f,c
 38806  01D648  2A32               	incf	(btemp+8)^0,f,c
 38807  01D64A  0E00               	movlw	0
 38808  01D64C  2233               	addwfc	(btemp+9)^0,f,c
 38809  01D64E  2234               	addwfc	(btemp+10)^0,f,c
 38810  01D650  2235               	addwfc	(btemp+11)^0,f,c
 38811  01D652  D010               	goto	L45
 38812  01D654                     l12012:
 38813                           
 38814                           ;stkvar	_val @ sp[(-5)+-5]
 38815  01D654  0EF6               	movlw	-10
 38816  01D656  006F FF8C  F032    	movff	plusw1,btemp+8
 38817  01D65C  0EF7               	movlw	-9
 38818  01D65E  006F FF8C  F033    	movff	plusw1,btemp+9
 38819  01D664  0EF8               	movlw	-8
 38820  01D666  006F FF8C  F034    	movff	plusw1,btemp+10
 38821  01D66C  0EF9               	movlw	-7
 38822  01D66E  006F FF8C  F035    	movff	plusw1,btemp+11
 38823  01D674                     L45:
 38824                           
 38825                           ;stkvar	_arg @ sp[(-5)+0]
 38826  01D674  0EFB               	movlw	-5
 38827  01D676  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38828  01D67C  0EFC               	movlw	-4
 38829  01D67E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38830  01D684  0EFD               	movlw	-3
 38831  01D686  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38832  01D68C  0EFE               	movlw	-2
 38833  01D68E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38834                           
 38835                           ;stkvar	_val @ sp[(-5)+-5]
 38836  01D694  0EF6               	movlw	-10
 38837  01D696  50E3               	movf	plusw1,w,c
 38838  01D698  E113               	bnz	l12020
 38839  01D69A  0EF7               	movlw	-9
 38840  01D69C  50E3               	movf	plusw1,w,c
 38841  01D69E  E110               	bnz	l12020
 38842  01D6A0  0EF8               	movlw	-8
 38843  01D6A2  50E3               	movf	plusw1,w,c
 38844  01D6A4  E10D               	bnz	l12020
 38845  01D6A6  0EF9               	movlw	-7
 38846  01D6A8  50E3               	movf	plusw1,w,c
 38847  01D6AA  A4D8               	btfss	status,2,c
 38848  01D6AC  D009               	goto	l12020
 38849  01D6AE  0E00               	movlw	0
 38850  01D6B0  6E2A               	movwf	btemp^0,c
 38851  01D6B2  0E00               	movlw	0
 38852  01D6B4  6E2B               	movwf	(btemp+1)^0,c
 38853  01D6B6  0E00               	movlw	0
 38854  01D6B8  6E2C               	movwf	(btemp+2)^0,c
 38855  01D6BA  0E00               	movlw	0
 38856  01D6BC  6E2D               	movwf	(btemp+3)^0,c
 38857  01D6BE  D0A2               	goto	l3382
 38858  01D6C0                     l12020:
 38859  01D6C0  0E96               	movlw	150
 38860  01D6C2  6E35               	movwf	(btemp+11)^0,c
 38861                           
 38862                           ;stkvar	_exp @ sp[(-5)+4]
 38863  01D6C4  0EFF               	movlw	-1
 38864  01D6C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38865  01D6CC  D00B               	goto	l12024
 38866  01D6CE                     l12022:
 38867                           
 38868                           ;stkvar	_exp @ sp[(-5)+4]
 38869  01D6CE  0EFF               	movlw	-1
 38870  01D6D0  2AE3               	incf	plusw1,f,c
 38871                           
 38872                           ;stkvar	_arg @ sp[(-5)+0]
 38873  01D6D2  90D8               	bcf	status,0,c
 38874  01D6D4  0EFE               	movlw	-2
 38875  01D6D6  32E3               	rrcf	plusw1,f,c
 38876  01D6D8  0EFD               	movlw	-3
 38877  01D6DA  32E3               	rrcf	plusw1,f,c
 38878  01D6DC  0EFC               	movlw	-4
 38879  01D6DE  32E3               	rrcf	plusw1,f,c
 38880  01D6E0  0EFB               	movlw	-5
 38881  01D6E2  32E3               	rrcf	plusw1,f,c
 38882  01D6E4                     l12024:
 38883                           
 38884                           ;stkvar	_arg @ sp[(-5)+0]
 38885  01D6E4  50E1               	movf	fsr1l,w,c
 38886  01D6E6  0FFB               	addlw	-5
 38887  01D6E8  6ED9               	movwf	fsr2l,c
 38888  01D6EA  50E2               	movf	fsr1h,w,c
 38889  01D6EC  6EDA               	movwf	fsr2h,c
 38890  01D6EE  0EFF               	movlw	255
 38891  01D6F0  22DA               	addwfc	fsr2h,f,c
 38892  01D6F2  52DE               	movf	postinc2,f,c
 38893  01D6F4  52DE               	movf	postinc2,f,c
 38894  01D6F6  52DE               	movf	postinc2,f,c
 38895  01D6F8  0EFE               	movlw	254
 38896  01D6FA  14DD               	andwf	postdec2,w,c
 38897  01D6FC  B4D8               	btfsc	status,2,c
 38898  01D6FE  D018               	goto	l12032
 38899  01D700  D7E6               	goto	l12022
 38900  01D702                     l12026:
 38901                           
 38902                           ;stkvar	_exp @ sp[(-5)+4]
 38903  01D702  0EFF               	movlw	-1
 38904  01D704  2AE3               	incf	plusw1,f,c
 38905                           
 38906                           ;stkvar	_arg @ sp[(-5)+0]
 38907  01D706  50E1               	movf	fsr1l,w,c
 38908  01D708  0FFB               	addlw	-5
 38909  01D70A  6ED9               	movwf	fsr2l,c
 38910  01D70C  50E2               	movf	fsr1h,w,c
 38911  01D70E  6EDA               	movwf	fsr2h,c
 38912  01D710  0EFF               	movlw	255
 38913  01D712  22DA               	addwfc	fsr2h,f,c
 38914  01D714  2ADE               	incf	postinc2,f,c
 38915  01D716  0E00               	movlw	0
 38916  01D718  22DE               	addwfc	postinc2,f,c
 38917  01D71A  22DE               	addwfc	postinc2,f,c
 38918  01D71C  22DE               	addwfc	postinc2,f,c
 38919                           
 38920                           ;stkvar	_arg @ sp[(-5)+0]
 38921  01D71E  90D8               	bcf	status,0,c
 38922  01D720  0EFE               	movlw	-2
 38923  01D722  32E3               	rrcf	plusw1,f,c
 38924  01D724  0EFD               	movlw	-3
 38925  01D726  32E3               	rrcf	plusw1,f,c
 38926  01D728  0EFC               	movlw	-4
 38927  01D72A  32E3               	rrcf	plusw1,f,c
 38928  01D72C  0EFB               	movlw	-5
 38929  01D72E  32E3               	rrcf	plusw1,f,c
 38930  01D730                     l12032:
 38931                           
 38932                           ;stkvar	_arg @ sp[(-5)+0]
 38933  01D730  50E1               	movf	fsr1l,w,c
 38934  01D732  0FFB               	addlw	-5
 38935  01D734  6ED9               	movwf	fsr2l,c
 38936  01D736  50E2               	movf	fsr1h,w,c
 38937  01D738  6EDA               	movwf	fsr2h,c
 38938  01D73A  0EFF               	movlw	255
 38939  01D73C  22DA               	addwfc	fsr2h,f,c
 38940  01D73E  52DE               	movf	postinc2,f,c
 38941  01D740  52DE               	movf	postinc2,f,c
 38942  01D742  52DE               	movf	postinc2,f,c
 38943  01D744  0EFF               	movlw	255
 38944  01D746  14DD               	andwf	postdec2,w,c
 38945  01D748  B4D8               	btfsc	status,2,c
 38946  01D74A  D00C               	goto	l12036
 38947  01D74C  D7DA               	goto	l12026
 38948  01D74E                     l12034:
 38949                           
 38950                           ;stkvar	_exp @ sp[(-5)+4]
 38951  01D74E  0EFF               	movlw	-1
 38952  01D750  06E3               	decf	plusw1,f,c
 38953                           
 38954                           ;stkvar	_arg @ sp[(-5)+0]
 38955  01D752  90D8               	bcf	status,0,c
 38956  01D754  0EFB               	movlw	-5
 38957  01D756  36E3               	rlcf	plusw1,f,c
 38958  01D758  0EFC               	movlw	-4
 38959  01D75A  36E3               	rlcf	plusw1,f,c
 38960  01D75C  0EFD               	movlw	-3
 38961  01D75E  36E3               	rlcf	plusw1,f,c
 38962  01D760  0EFE               	movlw	-2
 38963  01D762  36E3               	rlcf	plusw1,f,c
 38964  01D764                     l12036:
 38965                           
 38966                           ;stkvar	_arg @ sp[(-5)+0]
 38967  01D764  0EFD               	movlw	-3
 38968  01D766  BEE3               	btfsc	plusw1,7,c
 38969  01D768  D007               	goto	u11350
 38970                           
 38971                           ;stkvar	_exp @ sp[(-5)+4]
 38972  01D76A  0EFF               	movlw	-1
 38973  01D76C  006F FF8C  F02A    	movff	plusw1,btemp
 38974  01D772  0E02               	movlw	2
 38975  01D774  602A               	cpfslt	btemp^0,c
 38976  01D776  D7EB               	goto	l12034
 38977  01D778                     u11350:
 38978                           
 38979                           ;stkvar	_exp @ sp[(-5)+4]
 38980  01D778  0EFF               	movlw	-1
 38981  01D77A  B0E3               	btfsc	plusw1,0,c
 38982  01D77C  D002               	goto	l12044
 38983                           
 38984                           ;stkvar	_arg @ sp[(-5)+0]
 38985  01D77E  0EFD               	movlw	-3
 38986  01D780  9EE3               	bcf	plusw1,7,c
 38987  01D782                     l12044:
 38988                           
 38989                           ;stkvar	_exp @ sp[(-5)+4]
 38990  01D782  50E1               	movf	fsr1l,w,c
 38991  01D784  0FFF               	addlw	-1
 38992  01D786  6ED9               	movwf	fsr2l,c
 38993  01D788  50E2               	movf	fsr1h,w,c
 38994  01D78A  6EDA               	movwf	fsr2h,c
 38995  01D78C  0EFF               	movlw	255
 38996  01D78E  22DA               	addwfc	fsr2h,f,c
 38997  01D790  90D8               	bcf	status,0,c
 38998  01D792  32DF               	rrcf	indf2,f,c
 38999                           
 39000                           ;stkvar	_exp @ sp[(-5)+4]
 39001  01D794  0EFF               	movlw	-1
 39002  01D796  006F FF8C  F035    	movff	plusw1,btemp+11
 39003  01D79C  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 39004  01D7A2  6A2F               	clrf	(btemp+5)^0,c
 39005  01D7A4  6A30               	clrf	(btemp+6)^0,c
 39006  01D7A6  6A31               	clrf	(btemp+7)^0,c
 39007  01D7A8  0060  F0B8  F031   	movff	btemp+4,btemp+7
 39008  01D7AE  6A30               	clrf	(btemp+6)^0,c
 39009  01D7B0  6A2F               	clrf	(btemp+5)^0,c
 39010  01D7B2  6A2E               	clrf	(btemp+4)^0,c
 39011                           
 39012                           ;stkvar	_arg @ sp[(-5)+0]
 39013  01D7B4  50E1               	movf	fsr1l,w,c
 39014  01D7B6  0FFB               	addlw	-5
 39015  01D7B8  6ED9               	movwf	fsr2l,c
 39016  01D7BA  50E2               	movf	fsr1h,w,c
 39017  01D7BC  6EDA               	movwf	fsr2h,c
 39018  01D7BE  0EFF               	movlw	255
 39019  01D7C0  22DA               	addwfc	fsr2h,f,c
 39020  01D7C2  502E               	movf	(btemp+4)^0,w,c
 39021  01D7C4  12DE               	iorwf	postinc2,f,c
 39022  01D7C6  502F               	movf	(btemp+5)^0,w,c
 39023  01D7C8  12DE               	iorwf	postinc2,f,c
 39024  01D7CA  5030               	movf	(btemp+6)^0,w,c
 39025  01D7CC  12DE               	iorwf	postinc2,f,c
 39026  01D7CE  5031               	movf	(btemp+7)^0,w,c
 39027  01D7D0  12DE               	iorwf	postinc2,f,c
 39028                           
 39029                           ;stkvar	_sign @ sp[(-5)+-1]
 39030  01D7D2  0EFA               	movlw	-6
 39031  01D7D4  50E3               	movf	plusw1,w,c
 39032  01D7D6  B4D8               	btfsc	status,2,c
 39033  01D7D8  D005               	goto	l12054
 39034                           
 39035                           ;stkvar	_val @ sp[(-5)+-5]
 39036  01D7DA  0EF9               	movlw	-7
 39037  01D7DC  AEE3               	btfss	plusw1,7,c
 39038  01D7DE  D002               	goto	l12054
 39039                           
 39040                           ;stkvar	_arg @ sp[(-5)+0]
 39041  01D7E0  0EFE               	movlw	-2
 39042  01D7E2  8EE3               	bsf	plusw1,7,c
 39043  01D7E4                     l12054:
 39044                           
 39045                           ;stkvar	_arg @ sp[(-5)+0]
 39046  01D7E4  0EFB               	movlw	-5
 39047  01D7E6  006F FF8C  F02A    	movff	plusw1,btemp
 39048  01D7EC  0EFC               	movlw	-4
 39049  01D7EE  006F FF8C  F02B    	movff	plusw1,btemp+1
 39050  01D7F4  0EFD               	movlw	-3
 39051  01D7F6  006F FF8C  F02C    	movff	plusw1,btemp+2
 39052  01D7FC  0EFE               	movlw	-2
 39053  01D7FE  006F FF8C  F02D    	movff	plusw1,btemp+3
 39054  01D804                     l3382:
 39055                           
 39056                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 39057  01D804  0EF6               	movlw	246
 39058  01D806  26E1               	addwf	fsr1l,f,c
 39059  01D808  0EFF               	movlw	255
 39060  01D80A  22E2               	addwfc	fsr1h,f,c
 39061  01D80C  0012               	return		;funcret
 39062  01D80E                     __end_of___xxtofl:
 39063                           	opt callstack 0
 39064                           
 39065 ;; *************** function ___fldiv *****************
 39066 ;; Defined at:
 39067 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 39068 ;; Parameters:    Size  Location     Type
 39069 ;;  b               4  [STACK] unsigned char 
 39070 ;;  a               4  [STACK] unsigned char 
 39071 ;; Auto vars:     Size  Location     Type
 39072 ;;  grs             4  [STACK] unsigned long 
 39073 ;;  rem             4  [STACK] unsigned long 
 39074 ;;  new_exp         2  [STACK] short 
 39075 ;;  aexp            1  [STACK] unsigned char 
 39076 ;;  bexp            1  [STACK] unsigned char 
 39077 ;;  sign            1  [STACK] unsigned char 
 39078 ;; Return value:  Size  Location     Type
 39079 ;;                  4  [STACK] unsigned char 
 39080 ;; Registers used:
 39081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 39082 ;; Tracked objects:
 39083 ;;		On entry : 0/3D
 39084 ;;		On exit  : 0/0
 39085 ;;		Unchanged: 0/0
 39086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39091 ;;Total ram usage:        0 bytes
 39092 ;; Hardware stack levels used:    1
 39093 ;; Hardware stack levels required when called:   15
 39094 ;; This function calls:
 39095 ;;		Nothing
 39096 ;; This function is called by:
 39097 ;;		_conv_raw_result
 39098 ;;		_convert_dac_raw
 39099 ;;		_calc_bsoc
 39100 ;;		_init_bsoc
 39101 ;;		_esr_check
 39102 ;;		_efgtoa
 39103 ;; This function uses a reentrant model
 39104 ;;
 39105                           
 39106                           	psect	text146
 39107  017C5C                     __ptext146:
 39108                           	opt callstack 0
 39109  017C5C                     ___fldiv:
 39110                           	opt callstack 0
 39111                           
 39112                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 39113  017C5C  0E0D               	movlw	13
 39114  017C5E  26E1               	addwf	fsr1l,f,c
 39115  017C60  0E00               	movlw	0
 39116  017C62  22E2               	addwfc	fsr1h,f,c
 39117                           
 39118                           ;stkvar	_b @ sp[(-13)+-4]
 39119                           
 39120                           ;incstack = 0
 39121 ;; hardware stack exceeded
 39122  017C64  0EF2               	movlw	242
 39123  017C66  24E1               	addwf	fsr1l,w,c
 39124  017C68  6ED9               	movwf	fsr2l,c
 39125  017C6A  0EFF               	movlw	255
 39126  017C6C  20E2               	addwfc	fsr1h,w,c
 39127  017C6E  6EDA               	movwf	fsr2h,c
 39128  017C70  50DF               	movf	indf2,w,c
 39129  017C72  6E35               	movwf	(btemp+11)^0,c
 39130  017C74  0E80               	movlw	128
 39131  017C76  1635               	andwf	(btemp+11)^0,f,c
 39132                           
 39133                           ;stkvar	_sign @ sp[(-13)+12]
 39134  017C78  0EFF               	movlw	-1
 39135  017C7A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39136                           
 39137                           ;stkvar	_b @ sp[(-13)+-4]
 39138  017C80  0EF2               	movlw	242
 39139  017C82  24E1               	addwf	fsr1l,w,c
 39140  017C84  6ED9               	movwf	fsr2l,c
 39141  017C86  0EFF               	movlw	255
 39142  017C88  20E2               	addwfc	fsr1h,w,c
 39143  017C8A  6EDA               	movwf	fsr2h,c
 39144  017C8C  50DF               	movf	indf2,w,c
 39145  017C8E  6E35               	movwf	(btemp+11)^0,c
 39146  017C90  90D8               	bcf	status,0,c
 39147  017C92  3435               	rlcf	(btemp+11)^0,w,c
 39148  017C94  6E34               	movwf	(btemp+10)^0,c
 39149                           
 39150                           ;stkvar	_bexp @ sp[(-13)+11]
 39151  017C96  0EFE               	movlw	-2
 39152  017C98  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39153                           
 39154                           ;stkvar	_b @ sp[(-13)+-4]
 39155  017C9E  0EF1               	movlw	241
 39156  017CA0  24E1               	addwf	fsr1l,w,c
 39157  017CA2  6ED9               	movwf	fsr2l,c
 39158  017CA4  0EFF               	movlw	255
 39159  017CA6  20E2               	addwfc	fsr1h,w,c
 39160  017CA8  6EDA               	movwf	fsr2h,c
 39161  017CAA  AEDF               	btfss	indf2,7,c
 39162  017CAC  D002               	goto	l10310
 39163                           
 39164                           ;stkvar	_bexp @ sp[(-13)+11]
 39165  017CAE  0EFE               	movlw	-2
 39166  017CB0  80E3               	bsf	plusw1,0,c
 39167  017CB2                     l10310:
 39168                           
 39169                           ;stkvar	_bexp @ sp[(-13)+11]
 39170  017CB2  0EFE               	movlw	-2
 39171  017CB4  50E3               	movf	plusw1,w,c
 39172  017CB6  B4D8               	btfsc	status,2,c
 39173  017CB8  D027               	goto	l10320
 39174                           
 39175                           ;stkvar	_bexp @ sp[(-13)+11]
 39176  017CBA  0EFE               	movlw	-2
 39177  017CBC  28E3               	incf	plusw1,w,c
 39178  017CBE  A4D8               	btfss	status,2,c
 39179  017CC0  D018               	goto	l10316
 39180  017CC2  0E00               	movlw	0
 39181  017CC4  6E32               	movwf	(btemp+8)^0,c
 39182  017CC6  0E00               	movlw	0
 39183  017CC8  6E33               	movwf	(btemp+9)^0,c
 39184  017CCA  0E00               	movlw	0
 39185  017CCC  6E34               	movwf	(btemp+10)^0,c
 39186  017CCE  0E00               	movlw	0
 39187  017CD0  6E35               	movwf	(btemp+11)^0,c
 39188                           
 39189                           ;stkvar	_b @ sp[(-13)+-4]
 39190  017CD2  0EEF               	movlw	-17
 39191  017CD4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39192  017CDA  0EF0               	movlw	-16
 39193  017CDC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39194  017CE2  0EF1               	movlw	-15
 39195  017CE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39196  017CEA  0EF2               	movlw	-14
 39197  017CEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39198  017CF2                     l10316:
 39199                           
 39200                           ;stkvar	_b @ sp[(-13)+-4]
 39201  017CF2  0EF1               	movlw	-15
 39202  017CF4  8EE3               	bsf	plusw1,7,c
 39203                           
 39204                           ;stkvar	_b @ sp[(-13)+-4]
 39205  017CF6  0EF2               	movlw	242
 39206  017CF8  24E1               	addwf	fsr1l,w,c
 39207  017CFA  6ED9               	movwf	fsr2l,c
 39208  017CFC  0EFF               	movlw	255
 39209  017CFE  20E2               	addwfc	fsr1h,w,c
 39210  017D00  6EDA               	movwf	fsr2h,c
 39211  017D02  0E00               	movlw	0
 39212  017D04  6EDF               	movwf	indf2,c
 39213  017D06  D018               	goto	l10322
 39214  017D08                     l10320:
 39215  017D08  0E00               	movlw	0
 39216  017D0A  6E32               	movwf	(btemp+8)^0,c
 39217  017D0C  0E00               	movlw	0
 39218  017D0E  6E33               	movwf	(btemp+9)^0,c
 39219  017D10  0E00               	movlw	0
 39220  017D12  6E34               	movwf	(btemp+10)^0,c
 39221  017D14  0E00               	movlw	0
 39222  017D16  6E35               	movwf	(btemp+11)^0,c
 39223                           
 39224                           ;stkvar	_b @ sp[(-13)+-4]
 39225  017D18  0EEF               	movlw	-17
 39226  017D1A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39227  017D20  0EF0               	movlw	-16
 39228  017D22  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39229  017D28  0EF1               	movlw	-15
 39230  017D2A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39231  017D30  0EF2               	movlw	-14
 39232  017D32  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39233  017D38                     l10322:
 39234                           
 39235                           ;stkvar	_a @ sp[(-13)+-8]
 39236  017D38  0EEE               	movlw	238
 39237  017D3A  24E1               	addwf	fsr1l,w,c
 39238  017D3C  6ED9               	movwf	fsr2l,c
 39239  017D3E  0EFF               	movlw	255
 39240  017D40  20E2               	addwfc	fsr1h,w,c
 39241  017D42  6EDA               	movwf	fsr2h,c
 39242  017D44  50DF               	movf	indf2,w,c
 39243  017D46  6E35               	movwf	(btemp+11)^0,c
 39244  017D48  0E80               	movlw	128
 39245  017D4A  1635               	andwf	(btemp+11)^0,f,c
 39246                           
 39247                           ;stkvar	_sign @ sp[(-13)+12]
 39248  017D4C  50E1               	movf	fsr1l,w,c
 39249  017D4E  0FFF               	addlw	-1
 39250  017D50  6ED9               	movwf	fsr2l,c
 39251  017D52  50E2               	movf	fsr1h,w,c
 39252  017D54  6EDA               	movwf	fsr2h,c
 39253  017D56  0EFF               	movlw	255
 39254  017D58  22DA               	addwfc	fsr2h,f,c
 39255  017D5A  5035               	movf	(btemp+11)^0,w,c
 39256  017D5C  1ADF               	xorwf	indf2,f,c
 39257                           
 39258                           ;stkvar	_a @ sp[(-13)+-8]
 39259  017D5E  0EEE               	movlw	238
 39260  017D60  24E1               	addwf	fsr1l,w,c
 39261  017D62  6ED9               	movwf	fsr2l,c
 39262  017D64  0EFF               	movlw	255
 39263  017D66  20E2               	addwfc	fsr1h,w,c
 39264  017D68  6EDA               	movwf	fsr2h,c
 39265  017D6A  50DF               	movf	indf2,w,c
 39266  017D6C  6E35               	movwf	(btemp+11)^0,c
 39267  017D6E  90D8               	bcf	status,0,c
 39268  017D70  3435               	rlcf	(btemp+11)^0,w,c
 39269  017D72  6E34               	movwf	(btemp+10)^0,c
 39270                           
 39271                           ;stkvar	_aexp @ sp[(-13)+10]
 39272  017D74  0EFD               	movlw	-3
 39273  017D76  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39274                           
 39275                           ;stkvar	_a @ sp[(-13)+-8]
 39276  017D7C  0EED               	movlw	237
 39277  017D7E  24E1               	addwf	fsr1l,w,c
 39278  017D80  6ED9               	movwf	fsr2l,c
 39279  017D82  0EFF               	movlw	255
 39280  017D84  20E2               	addwfc	fsr1h,w,c
 39281  017D86  6EDA               	movwf	fsr2h,c
 39282  017D88  AEDF               	btfss	indf2,7,c
 39283  017D8A  D002               	goto	l10330
 39284                           
 39285                           ;stkvar	_aexp @ sp[(-13)+10]
 39286  017D8C  0EFD               	movlw	-3
 39287  017D8E  80E3               	bsf	plusw1,0,c
 39288  017D90                     l10330:
 39289                           
 39290                           ;stkvar	_aexp @ sp[(-13)+10]
 39291  017D90  0EFD               	movlw	-3
 39292  017D92  50E3               	movf	plusw1,w,c
 39293  017D94  B4D8               	btfsc	status,2,c
 39294  017D96  D027               	goto	l10340
 39295                           
 39296                           ;stkvar	_aexp @ sp[(-13)+10]
 39297  017D98  0EFD               	movlw	-3
 39298  017D9A  28E3               	incf	plusw1,w,c
 39299  017D9C  A4D8               	btfss	status,2,c
 39300  017D9E  D018               	goto	l10336
 39301  017DA0  0E00               	movlw	0
 39302  017DA2  6E32               	movwf	(btemp+8)^0,c
 39303  017DA4  0E00               	movlw	0
 39304  017DA6  6E33               	movwf	(btemp+9)^0,c
 39305  017DA8  0E00               	movlw	0
 39306  017DAA  6E34               	movwf	(btemp+10)^0,c
 39307  017DAC  0E00               	movlw	0
 39308  017DAE  6E35               	movwf	(btemp+11)^0,c
 39309                           
 39310                           ;stkvar	_a @ sp[(-13)+-8]
 39311  017DB0  0EEB               	movlw	-21
 39312  017DB2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39313  017DB8  0EEC               	movlw	-20
 39314  017DBA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39315  017DC0  0EED               	movlw	-19
 39316  017DC2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39317  017DC8  0EEE               	movlw	-18
 39318  017DCA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39319  017DD0                     l10336:
 39320                           
 39321                           ;stkvar	_a @ sp[(-13)+-8]
 39322  017DD0  0EED               	movlw	-19
 39323  017DD2  8EE3               	bsf	plusw1,7,c
 39324                           
 39325                           ;stkvar	_a @ sp[(-13)+-8]
 39326  017DD4  0EEE               	movlw	238
 39327  017DD6  24E1               	addwf	fsr1l,w,c
 39328  017DD8  6ED9               	movwf	fsr2l,c
 39329  017DDA  0EFF               	movlw	255
 39330  017DDC  20E2               	addwfc	fsr1h,w,c
 39331  017DDE  6EDA               	movwf	fsr2h,c
 39332  017DE0  0E00               	movlw	0
 39333  017DE2  6EDF               	movwf	indf2,c
 39334  017DE4  D018               	goto	l10342
 39335  017DE6                     l10340:
 39336  017DE6  0E00               	movlw	0
 39337  017DE8  6E32               	movwf	(btemp+8)^0,c
 39338  017DEA  0E00               	movlw	0
 39339  017DEC  6E33               	movwf	(btemp+9)^0,c
 39340  017DEE  0E00               	movlw	0
 39341  017DF0  6E34               	movwf	(btemp+10)^0,c
 39342  017DF2  0E00               	movlw	0
 39343  017DF4  6E35               	movwf	(btemp+11)^0,c
 39344                           
 39345                           ;stkvar	_a @ sp[(-13)+-8]
 39346  017DF6  0EEB               	movlw	-21
 39347  017DF8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39348  017DFE  0EEC               	movlw	-20
 39349  017E00  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39350  017E06  0EED               	movlw	-19
 39351  017E08  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39352  017E0E  0EEE               	movlw	-18
 39353  017E10  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39354  017E16                     l10342:
 39355                           
 39356                           ;stkvar	_a @ sp[(-13)+-8]
 39357  017E16  0EEB               	movlw	-21
 39358  017E18  50E3               	movf	plusw1,w,c
 39359  017E1A  E139               	bnz	l10354
 39360  017E1C  0EEC               	movlw	-20
 39361  017E1E  50E3               	movf	plusw1,w,c
 39362  017E20  E136               	bnz	l10354
 39363  017E22  0EED               	movlw	-19
 39364  017E24  50E3               	movf	plusw1,w,c
 39365  017E26  E133               	bnz	l10354
 39366  017E28  0EEE               	movlw	-18
 39367  017E2A  50E3               	movf	plusw1,w,c
 39368  017E2C  A4D8               	btfss	status,2,c
 39369  017E2E  D02F               	goto	l10354
 39370                           
 39371                           ;stkvar	_b @ sp[(-13)+-4]
 39372  017E30  0EEF               	movlw	-17
 39373  017E32  6AE3               	clrf	plusw1,c
 39374  017E34  0EF0               	movlw	-16
 39375  017E36  6AE3               	clrf	plusw1,c
 39376  017E38  0EF1               	movlw	-15
 39377  017E3A  6AE3               	clrf	plusw1,c
 39378  017E3C  0EF2               	movlw	-14
 39379  017E3E  6AE3               	clrf	plusw1,c
 39380                           
 39381                           ;stkvar	_b @ sp[(-13)+-4]
 39382  017E40  0EF1               	movlw	241
 39383  017E42  24E1               	addwf	fsr1l,w,c
 39384  017E44  6ED9               	movwf	fsr2l,c
 39385  017E46  0EFF               	movlw	255
 39386  017E48  20E2               	addwfc	fsr1h,w,c
 39387  017E4A  6EDA               	movwf	fsr2h,c
 39388  017E4C  0E80               	movlw	128
 39389  017E4E  12DE               	iorwf	postinc2,f,c
 39390  017E50  0E7F               	movlw	127
 39391  017E52  12DD               	iorwf	postdec2,f,c
 39392  017E54                     l10348:
 39393                           
 39394                           ;stkvar	_sign @ sp[(-13)+12]
 39395  017E54  0EFF               	movlw	-1
 39396  017E56  006F FF8C  F035    	movff	plusw1,btemp+11
 39397                           
 39398                           ;stkvar	_b @ sp[(-13)+-4]
 39399  017E5C  0EF2               	movlw	242
 39400  017E5E  24E1               	addwf	fsr1l,w,c
 39401  017E60  6ED9               	movwf	fsr2l,c
 39402  017E62  0EFF               	movlw	255
 39403  017E64  20E2               	addwfc	fsr1h,w,c
 39404  017E66  6EDA               	movwf	fsr2h,c
 39405  017E68  5035               	movf	(btemp+11)^0,w,c
 39406  017E6A  12DF               	iorwf	indf2,f,c
 39407                           
 39408                           ;stkvar	_b @ sp[(-13)+-4]
 39409  017E6C  0EEF               	movlw	-17
 39410  017E6E  006F FF8C  F02A    	movff	plusw1,btemp
 39411  017E74  0EF0               	movlw	-16
 39412  017E76  006F FF8C  F02B    	movff	plusw1,btemp+1
 39413  017E7C  0EF1               	movlw	-15
 39414  017E7E  006F FF8C  F02C    	movff	plusw1,btemp+2
 39415  017E84  0EF2               	movlw	-14
 39416  017E86  006F FF8C  F02D    	movff	plusw1,btemp+3
 39417  017E8C  D19F               	goto	l3306
 39418  017E8E                     l10354:
 39419                           
 39420                           ;stkvar	_bexp @ sp[(-13)+11]
 39421  017E8E  0EFE               	movlw	-2
 39422  017E90  50E3               	movf	plusw1,w,c
 39423  017E92  A4D8               	btfss	status,2,c
 39424  017E94  D009               	goto	l10362
 39425  017E96  0E00               	movlw	0
 39426  017E98  6E2A               	movwf	btemp^0,c
 39427  017E9A  0E00               	movlw	0
 39428  017E9C  6E2B               	movwf	(btemp+1)^0,c
 39429  017E9E  0E00               	movlw	0
 39430  017EA0  6E2C               	movwf	(btemp+2)^0,c
 39431  017EA2  0E00               	movlw	0
 39432  017EA4  6E2D               	movwf	(btemp+3)^0,c
 39433  017EA6  D192               	goto	l3306
 39434  017EA8                     l10362:
 39435                           
 39436                           ;stkvar	_bexp @ sp[(-13)+11]
 39437  017EA8  0EFE               	movlw	-2
 39438  017EAA  50E3               	movf	plusw1,w,c
 39439  017EAC  6E34               	movwf	(btemp+10)^0,c
 39440  017EAE  6A35               	clrf	(btemp+11)^0,c
 39441                           
 39442                           ;stkvar	_aexp @ sp[(-13)+10]
 39443  017EB0  0EFD               	movlw	-3
 39444  017EB2  50E3               	movf	plusw1,w,c
 39445  017EB4  5E34               	subwf	(btemp+10)^0,f,c
 39446  017EB6  0E00               	movlw	0
 39447  017EB8  5A35               	subwfb	(btemp+11)^0,f,c
 39448  017EBA  0E7F               	movlw	127
 39449  017EBC  2634               	addwf	(btemp+10)^0,f,c
 39450  017EBE  0E00               	movlw	0
 39451  017EC0  2235               	addwfc	(btemp+11)^0,f,c
 39452                           
 39453                           ;stkvar	_new_exp @ sp[(-13)+8]
 39454  017EC2  0EFB               	movlw	-5
 39455  017EC4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39456  017ECA  0EFC               	movlw	-4
 39457  017ECC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39458                           
 39459                           ;stkvar	_b @ sp[(-13)+-4]
 39460  017ED2  0EEF               	movlw	-17
 39461  017ED4  006F FF8C  F032    	movff	plusw1,btemp+8
 39462  017EDA  0EF0               	movlw	-16
 39463  017EDC  006F FF8C  F033    	movff	plusw1,btemp+9
 39464  017EE2  0EF1               	movlw	-15
 39465  017EE4  006F FF8C  F034    	movff	plusw1,btemp+10
 39466  017EEA  0EF2               	movlw	-14
 39467  017EEC  006F FF8C  F035    	movff	plusw1,btemp+11
 39468                           
 39469                           ;stkvar	_rem @ sp[(-13)+4]
 39470  017EF2  0EF7               	movlw	-9
 39471  017EF4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39472  017EFA  0EF8               	movlw	-8
 39473  017EFC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39474  017F02  0EF9               	movlw	-7
 39475  017F04  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39476  017F0A  0EFA               	movlw	-6
 39477  017F0C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39478                           
 39479                           ;stkvar	_b @ sp[(-13)+-4]
 39480  017F12  0EEF               	movlw	-17
 39481  017F14  6AE3               	clrf	plusw1,c
 39482  017F16  0EF0               	movlw	-16
 39483  017F18  6AE3               	clrf	plusw1,c
 39484  017F1A  0EF1               	movlw	-15
 39485  017F1C  6AE3               	clrf	plusw1,c
 39486  017F1E  0EF2               	movlw	-14
 39487  017F20  6AE3               	clrf	plusw1,c
 39488                           
 39489                           ;stkvar	_grs @ sp[(-13)+0]
 39490  017F22  0EF3               	movlw	-13
 39491  017F24  6AE3               	clrf	plusw1,c
 39492  017F26  0EF4               	movlw	-12
 39493  017F28  6AE3               	clrf	plusw1,c
 39494  017F2A  0EF5               	movlw	-11
 39495  017F2C  6AE3               	clrf	plusw1,c
 39496  017F2E  0EF6               	movlw	-10
 39497  017F30  6AE3               	clrf	plusw1,c
 39498                           
 39499                           ;stkvar	_aexp @ sp[(-13)+10]
 39500  017F32  0EFD               	movlw	-3
 39501  017F34  6AE3               	clrf	plusw1,c
 39502  017F36  D050               	goto	l10390
 39503  017F38                     l10372:
 39504                           
 39505                           ;stkvar	_aexp @ sp[(-13)+10]
 39506  017F38  0EFD               	movlw	-3
 39507  017F3A  50E3               	movf	plusw1,w,c
 39508  017F3C  B4D8               	btfsc	status,2,c
 39509  017F3E  D020               	goto	l10382
 39510                           
 39511                           ;stkvar	_rem @ sp[(-13)+4]
 39512  017F40  90D8               	bcf	status,0,c
 39513  017F42  0EF7               	movlw	-9
 39514  017F44  36E3               	rlcf	plusw1,f,c
 39515  017F46  0EF8               	movlw	-8
 39516  017F48  36E3               	rlcf	plusw1,f,c
 39517  017F4A  0EF9               	movlw	-7
 39518  017F4C  36E3               	rlcf	plusw1,f,c
 39519  017F4E  0EFA               	movlw	-6
 39520  017F50  36E3               	rlcf	plusw1,f,c
 39521                           
 39522                           ;stkvar	_b @ sp[(-13)+-4]
 39523  017F52  90D8               	bcf	status,0,c
 39524  017F54  0EEF               	movlw	-17
 39525  017F56  36E3               	rlcf	plusw1,f,c
 39526  017F58  0EF0               	movlw	-16
 39527  017F5A  36E3               	rlcf	plusw1,f,c
 39528  017F5C  0EF1               	movlw	-15
 39529  017F5E  36E3               	rlcf	plusw1,f,c
 39530  017F60  0EF2               	movlw	-14
 39531  017F62  36E3               	rlcf	plusw1,f,c
 39532                           
 39533                           ;stkvar	_grs @ sp[(-13)+0]
 39534  017F64  0EF6               	movlw	-10
 39535  017F66  AEE3               	btfss	plusw1,7,c
 39536  017F68  D002               	goto	l10380
 39537                           
 39538                           ;stkvar	_b @ sp[(-13)+-4]
 39539  017F6A  0EEF               	movlw	-17
 39540  017F6C  80E3               	bsf	plusw1,0,c
 39541  017F6E                     l10380:
 39542                           
 39543                           ;stkvar	_grs @ sp[(-13)+0]
 39544  017F6E  90D8               	bcf	status,0,c
 39545  017F70  0EF3               	movlw	-13
 39546  017F72  36E3               	rlcf	plusw1,f,c
 39547  017F74  0EF4               	movlw	-12
 39548  017F76  36E3               	rlcf	plusw1,f,c
 39549  017F78  0EF5               	movlw	-11
 39550  017F7A  36E3               	rlcf	plusw1,f,c
 39551  017F7C  0EF6               	movlw	-10
 39552  017F7E  36E3               	rlcf	plusw1,f,c
 39553  017F80                     l10382:
 39554                           
 39555                           ;stkvar	_a @ sp[(-13)+-8]
 39556                           ;stkvar	_rem @ sp[(-13)+4]
 39557  017F80  50E1               	movf	fsr1l,w,c
 39558  017F82  0FF7               	addlw	-9
 39559  017F84  6ED9               	movwf	fsr2l,c
 39560  017F86  50E2               	movf	fsr1h,w,c
 39561  017F88  6EDA               	movwf	fsr2h,c
 39562  017F8A  0EFF               	movlw	255
 39563  017F8C  22DA               	addwfc	fsr2h,f,c
 39564  017F8E  0EEB               	movlw	-21
 39565  017F90  50E3               	movf	plusw1,w,c
 39566  017F92  5CDE               	subwf	postinc2,w,c
 39567  017F94  0EEC               	movlw	-20
 39568  017F96  50E3               	movf	plusw1,w,c
 39569  017F98  58DE               	subwfb	postinc2,w,c
 39570  017F9A  0EED               	movlw	-19
 39571  017F9C  50E3               	movf	plusw1,w,c
 39572  017F9E  58DE               	subwfb	postinc2,w,c
 39573  017FA0  0EEE               	movlw	-18
 39574  017FA2  50E3               	movf	plusw1,w,c
 39575  017FA4  58DE               	subwfb	postinc2,w,c
 39576  017FA6  A0D8               	btfss	status,0,c
 39577  017FA8  D015               	goto	l10388
 39578                           
 39579                           ;stkvar	_grs @ sp[(-13)+0]
 39580  017FAA  0EF6               	movlw	-10
 39581  017FAC  8CE3               	bsf	plusw1,6,c
 39582                           
 39583                           ;stkvar	_a @ sp[(-13)+-8]
 39584                           ;stkvar	_rem @ sp[(-13)+4]
 39585  017FAE  50E1               	movf	fsr1l,w,c
 39586  017FB0  0FF7               	addlw	-9
 39587  017FB2  6ED9               	movwf	fsr2l,c
 39588  017FB4  50E2               	movf	fsr1h,w,c
 39589  017FB6  6EDA               	movwf	fsr2h,c
 39590  017FB8  0EFF               	movlw	255
 39591  017FBA  22DA               	addwfc	fsr2h,f,c
 39592  017FBC  0EEB               	movlw	-21
 39593  017FBE  50E3               	movf	plusw1,w,c
 39594  017FC0  5EDE               	subwf	postinc2,f,c
 39595  017FC2  0EEC               	movlw	-20
 39596  017FC4  50E3               	movf	plusw1,w,c
 39597  017FC6  5ADE               	subwfb	postinc2,f,c
 39598  017FC8  0EED               	movlw	-19
 39599  017FCA  50E3               	movf	plusw1,w,c
 39600  017FCC  5ADE               	subwfb	postinc2,f,c
 39601  017FCE  0EEE               	movlw	-18
 39602  017FD0  50E3               	movf	plusw1,w,c
 39603  017FD2  5ADE               	subwfb	postinc2,f,c
 39604  017FD4                     l10388:
 39605                           
 39606                           ;stkvar	_aexp @ sp[(-13)+10]
 39607  017FD4  0EFD               	movlw	-3
 39608  017FD6  2AE3               	incf	plusw1,f,c
 39609  017FD8                     l10390:
 39610                           
 39611                           ;stkvar	_aexp @ sp[(-13)+10]
 39612  017FD8  0EFD               	movlw	-3
 39613  017FDA  006F FF8C  F02A    	movff	plusw1,btemp
 39614  017FE0  0E19               	movlw	25
 39615  017FE2  642A               	cpfsgt	btemp^0,c
 39616  017FE4  D7A9               	goto	l10372
 39617                           
 39618                           ;stkvar	_rem @ sp[(-13)+4]
 39619  017FE6  0EF7               	movlw	-9
 39620  017FE8  50E3               	movf	plusw1,w,c
 39621  017FEA  E10A               	bnz	u8450
 39622  017FEC  0EF8               	movlw	-8
 39623  017FEE  50E3               	movf	plusw1,w,c
 39624  017FF0  E107               	bnz	u8450
 39625  017FF2  0EF9               	movlw	-7
 39626  017FF4  50E3               	movf	plusw1,w,c
 39627  017FF6  E104               	bnz	u8450
 39628  017FF8  0EFA               	movlw	-6
 39629  017FFA  50E3               	movf	plusw1,w,c
 39630  017FFC  B4D8               	btfsc	status,2,c
 39631  017FFE  D024               	goto	l10406
 39632  018000                     u8450:
 39633                           
 39634                           ;stkvar	_grs @ sp[(-13)+0]
 39635  018000  0EF3               	movlw	-13
 39636  018002  80E3               	bsf	plusw1,0,c
 39637  018004  D021               	goto	l10406
 39638  018006                     l10396:
 39639                           
 39640                           ;stkvar	_b @ sp[(-13)+-4]
 39641  018006  90D8               	bcf	status,0,c
 39642  018008  0EEF               	movlw	-17
 39643  01800A  36E3               	rlcf	plusw1,f,c
 39644  01800C  0EF0               	movlw	-16
 39645  01800E  36E3               	rlcf	plusw1,f,c
 39646  018010  0EF1               	movlw	-15
 39647  018012  36E3               	rlcf	plusw1,f,c
 39648  018014  0EF2               	movlw	-14
 39649  018016  36E3               	rlcf	plusw1,f,c
 39650                           
 39651                           ;stkvar	_grs @ sp[(-13)+0]
 39652  018018  0EF6               	movlw	-10
 39653  01801A  AEE3               	btfss	plusw1,7,c
 39654  01801C  D002               	goto	l10402
 39655                           
 39656                           ;stkvar	_b @ sp[(-13)+-4]
 39657  01801E  0EEF               	movlw	-17
 39658  018020  80E3               	bsf	plusw1,0,c
 39659  018022                     l10402:
 39660                           
 39661                           ;stkvar	_grs @ sp[(-13)+0]
 39662  018022  90D8               	bcf	status,0,c
 39663  018024  0EF3               	movlw	-13
 39664  018026  36E3               	rlcf	plusw1,f,c
 39665  018028  0EF4               	movlw	-12
 39666  01802A  36E3               	rlcf	plusw1,f,c
 39667  01802C  0EF5               	movlw	-11
 39668  01802E  36E3               	rlcf	plusw1,f,c
 39669  018030  0EF6               	movlw	-10
 39670  018032  36E3               	rlcf	plusw1,f,c
 39671                           
 39672                           ;stkvar	_new_exp @ sp[(-13)+8]
 39673  018034  50E1               	movf	fsr1l,w,c
 39674  018036  0FFB               	addlw	-5
 39675  018038  6ED9               	movwf	fsr2l,c
 39676  01803A  50E2               	movf	fsr1h,w,c
 39677  01803C  6EDA               	movwf	fsr2h,c
 39678  01803E  0EFF               	movlw	255
 39679  018040  22DA               	addwfc	fsr2h,f,c
 39680  018042  06DE               	decf	postinc2,f,c
 39681  018044  0E00               	movlw	0
 39682  018046  5ADD               	subwfb	postdec2,f,c
 39683  018048                     l10406:
 39684                           
 39685                           ;stkvar	_b @ sp[(-13)+-4]
 39686  018048  0EF1               	movlw	-15
 39687  01804A  AEE3               	btfss	plusw1,7,c
 39688  01804C  D7DC               	goto	l10396
 39689                           
 39690                           ;stkvar	_aexp @ sp[(-13)+10]
 39691  01804E  0EFD               	movlw	-3
 39692  018050  6AE3               	clrf	plusw1,c
 39693                           
 39694                           ;stkvar	_grs @ sp[(-13)+0]
 39695  018052  0EF6               	movlw	-10
 39696  018054  AEE3               	btfss	plusw1,7,c
 39697  018056  D020               	goto	l10420
 39698                           
 39699                           ;stkvar	_grs @ sp[(-13)+0]
 39700  018058  50E1               	movf	fsr1l,w,c
 39701  01805A  0FF3               	addlw	-13
 39702  01805C  6ED9               	movwf	fsr2l,c
 39703  01805E  50E2               	movf	fsr1h,w,c
 39704  018060  6EDA               	movwf	fsr2h,c
 39705  018062  0EFF               	movlw	255
 39706  018064  22DA               	addwfc	fsr2h,f,c
 39707  018066  0EFF               	movlw	255
 39708  018068  14DE               	andwf	postinc2,w,c
 39709  01806A  6E32               	movwf	(btemp+8)^0,c
 39710  01806C  0EFF               	movlw	255
 39711  01806E  14DE               	andwf	postinc2,w,c
 39712  018070  6E33               	movwf	(btemp+9)^0,c
 39713  018072  0EFF               	movlw	255
 39714  018074  14DE               	andwf	postinc2,w,c
 39715  018076  6E34               	movwf	(btemp+10)^0,c
 39716  018078  0E7F               	movlw	127
 39717  01807A  14DE               	andwf	postinc2,w,c
 39718  01807C  6E35               	movwf	(btemp+11)^0,c
 39719  01807E  5032               	movf	(btemp+8)^0,w,c
 39720  018080  1033               	iorwf	(btemp+9)^0,w,c
 39721  018082  1034               	iorwf	(btemp+10)^0,w,c
 39722  018084  1035               	iorwf	(btemp+11)^0,w,c
 39723  018086  B4D8               	btfsc	status,2,c
 39724  018088  D004               	goto	l10416
 39725  01808A                     u8490:
 39726                           
 39727                           ;stkvar	_aexp @ sp[(-13)+10]
 39728  01808A  0EFD               	movlw	-3
 39729  01808C  6AE3               	clrf	plusw1,c
 39730  01808E  2AE3               	incf	plusw1,f,c
 39731  018090  D003               	goto	l10420
 39732  018092                     l10416:
 39733                           
 39734                           ;stkvar	_b @ sp[(-13)+-4]
 39735  018092  0EEF               	movlw	-17
 39736  018094  B0E3               	btfsc	plusw1,0,c
 39737  018096  D7F9               	goto	u8490
 39738  018098                     l10420:
 39739                           
 39740                           ;stkvar	_aexp @ sp[(-13)+10]
 39741  018098  0EFD               	movlw	-3
 39742  01809A  50E3               	movf	plusw1,w,c
 39743  01809C  B4D8               	btfsc	status,2,c
 39744  01809E  D036               	goto	l10430
 39745                           
 39746                           ;stkvar	_b @ sp[(-13)+-4]
 39747  0180A0  50E1               	movf	fsr1l,w,c
 39748  0180A2  0FEF               	addlw	-17
 39749  0180A4  6ED9               	movwf	fsr2l,c
 39750  0180A6  50E2               	movf	fsr1h,w,c
 39751  0180A8  6EDA               	movwf	fsr2h,c
 39752  0180AA  0EFF               	movlw	255
 39753  0180AC  22DA               	addwfc	fsr2h,f,c
 39754  0180AE  2ADE               	incf	postinc2,f,c
 39755  0180B0  0E00               	movlw	0
 39756  0180B2  22DE               	addwfc	postinc2,f,c
 39757  0180B4  22DE               	addwfc	postinc2,f,c
 39758  0180B6  22DE               	addwfc	postinc2,f,c
 39759                           
 39760                           ;stkvar	_b @ sp[(-13)+-4]
 39761  0180B8  0EF2               	movlw	-14
 39762  0180BA  A0E3               	btfss	plusw1,0,c
 39763  0180BC  D027               	goto	l10430
 39764  0180BE  0E01               	movlw	1
 39765  0180C0  6E35               	movwf	(btemp+11)^0,c
 39766                           
 39767                           ;stkvar	_b @ sp[(-13)+-4]
 39768  0180C2  50E1               	movf	fsr1l,w,c
 39769  0180C4  0FEF               	addlw	-17
 39770  0180C6  6ED9               	movwf	fsr2l,c
 39771  0180C8  50E2               	movf	fsr1h,w,c
 39772  0180CA  6EDA               	movwf	fsr2h,c
 39773  0180CC  0EFF               	movlw	255
 39774  0180CE  22DA               	addwfc	fsr2h,f,c
 39775  0180D0  2835               	incf	(btemp+11)^0,w,c
 39776  0180D2  52DE               	movf	postinc2,f,c
 39777  0180D4  D008               	goto	u8530
 39778  0180D6                     u8535:
 39779  0180D6  52DE               	movf	postinc2,f,c
 39780  0180D8  90D8               	bcf	status,0,c
 39781  0180DA  BEDC               	btfsc	preinc2,7,c
 39782  0180DC  80D8               	bsf	status,0,c
 39783  0180DE  32DD               	rrcf	postdec2,f,c
 39784  0180E0  32DD               	rrcf	postdec2,f,c
 39785  0180E2  32DD               	rrcf	postdec2,f,c
 39786  0180E4  32DE               	rrcf	postinc2,f,c
 39787  0180E6                     u8530:
 39788  0180E6  2EE8               	decfsz	wreg,f,c
 39789  0180E8  D7F6               	goto	u8535
 39790                           
 39791                           ;stkvar	_new_exp @ sp[(-13)+8]
 39792  0180EA  0EFB               	movlw	-5
 39793  0180EC  50E3               	movf	plusw1,w,c
 39794  0180EE  0F01               	addlw	1
 39795  0180F0  6E2A               	movwf	btemp^0,c
 39796  0180F2  0EFB               	movlw	-5
 39797  0180F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 39798  0180FA  6A2A               	clrf	btemp^0,c
 39799  0180FC  0EFC               	movlw	-4
 39800  0180FE  50E3               	movf	plusw1,w,c
 39801  018100  202A               	addwfc	btemp^0,w,c
 39802  018102  6E2A               	movwf	btemp^0,c
 39803  018104  0EFC               	movlw	-4
 39804  018106  0060  F0AB  FFE3   	movff	btemp,plusw1
 39805  01810C                     l10430:
 39806                           
 39807                           ;stkvar	_new_exp @ sp[(-13)+8]
 39808  01810C  0EFC               	movlw	-4
 39809  01810E  BEE3               	btfsc	plusw1,7,c
 39810  018110  D01B               	goto	l10436
 39811  018112  0EFC               	movlw	-4
 39812  018114  50E3               	movf	plusw1,w,c
 39813  018116  E104               	bnz	u8540
 39814  018118  0EFB               	movlw	-5
 39815  01811A  28E3               	incf	plusw1,w,c
 39816  01811C  A0D8               	btfss	status,0,c
 39817  01811E  D014               	goto	l10436
 39818  018120                     u8540:
 39819  018120  0EFF               	movlw	255
 39820  018122  6E34               	movwf	(btemp+10)^0,c
 39821  018124  0E00               	movlw	0
 39822  018126  6E35               	movwf	(btemp+11)^0,c
 39823                           
 39824                           ;stkvar	_new_exp @ sp[(-13)+8]
 39825  018128  0EFB               	movlw	-5
 39826  01812A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39827  018130  0EFC               	movlw	-4
 39828  018132  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39829                           
 39830                           ;stkvar	_b @ sp[(-13)+-4]
 39831  018138  0EEF               	movlw	-17
 39832  01813A  6AE3               	clrf	plusw1,c
 39833  01813C  0EF0               	movlw	-16
 39834  01813E  6AE3               	clrf	plusw1,c
 39835  018140  0EF1               	movlw	-15
 39836  018142  6AE3               	clrf	plusw1,c
 39837  018144  0EF2               	movlw	-14
 39838  018146  6AE3               	clrf	plusw1,c
 39839  018148                     l10436:
 39840                           
 39841                           ;stkvar	_new_exp @ sp[(-13)+8]
 39842  018148  0EFC               	movlw	-4
 39843  01814A  BEE3               	btfsc	plusw1,7,c
 39844  01814C  D007               	goto	u8550
 39845  01814E  0EFC               	movlw	-4
 39846  018150  50E3               	movf	plusw1,w,c
 39847  018152  E112               	bnz	l10442
 39848  018154  0EFB               	movlw	-5
 39849  018156  04E3               	decf	plusw1,w,c
 39850  018158  B0D8               	btfsc	status,0,c
 39851  01815A  D00E               	goto	l10442
 39852  01815C                     u8550:
 39853                           
 39854                           ;stkvar	_new_exp @ sp[(-13)+8]
 39855  01815C  0EFB               	movlw	-5
 39856  01815E  6AE3               	clrf	plusw1,c
 39857  018160  0EFC               	movlw	-4
 39858  018162  6AE3               	clrf	plusw1,c
 39859                           
 39860                           ;stkvar	_b @ sp[(-13)+-4]
 39861  018164  0EEF               	movlw	-17
 39862  018166  6AE3               	clrf	plusw1,c
 39863  018168  0EF0               	movlw	-16
 39864  01816A  6AE3               	clrf	plusw1,c
 39865  01816C  0EF1               	movlw	-15
 39866  01816E  6AE3               	clrf	plusw1,c
 39867  018170  0EF2               	movlw	-14
 39868  018172  6AE3               	clrf	plusw1,c
 39869                           
 39870                           ;stkvar	_sign @ sp[(-13)+12]
 39871  018174  0EFF               	movlw	-1
 39872  018176  6AE3               	clrf	plusw1,c
 39873  018178                     l10442:
 39874                           
 39875                           ;stkvar	_new_exp @ sp[(-13)+8]
 39876                           ;stkvar	_bexp @ sp[(-13)+11]
 39877  018178  0EFB               	movlw	-5
 39878  01817A  006F FF8C  F02A    	movff	plusw1,btemp
 39879  018180  0EFE               	movlw	-2
 39880  018182  0060  F0AB  FFE3   	movff	btemp,plusw1
 39881                           
 39882                           ;stkvar	_bexp @ sp[(-13)+11]
 39883  018188  0EFE               	movlw	-2
 39884  01818A  A0E3               	btfss	plusw1,0,c
 39885  01818C  D009               	goto	l10448
 39886                           
 39887                           ;stkvar	_b @ sp[(-13)+-4]
 39888  01818E  0EF1               	movlw	241
 39889  018190  24E1               	addwf	fsr1l,w,c
 39890  018192  6ED9               	movwf	fsr2l,c
 39891  018194  0EFF               	movlw	255
 39892  018196  20E2               	addwfc	fsr1h,w,c
 39893  018198  6EDA               	movwf	fsr2h,c
 39894  01819A  0E00               	movlw	0
 39895  01819C  8EDB               	bsf	plusw2,7,c
 39896  01819E  D008               	goto	l10450
 39897  0181A0                     l10448:
 39898                           
 39899                           ;stkvar	_b @ sp[(-13)+-4]
 39900  0181A0  0EF1               	movlw	241
 39901  0181A2  24E1               	addwf	fsr1l,w,c
 39902  0181A4  6ED9               	movwf	fsr2l,c
 39903  0181A6  0EFF               	movlw	255
 39904  0181A8  20E2               	addwfc	fsr1h,w,c
 39905  0181AA  6EDA               	movwf	fsr2h,c
 39906  0181AC  0E7F               	movlw	127
 39907  0181AE  16DF               	andwf	indf2,f,c
 39908  0181B0                     l10450:
 39909                           
 39910                           ;stkvar	_b @ sp[(-13)+-4]
 39911  0181B0  0EF2               	movlw	242
 39912  0181B2  24E1               	addwf	fsr1l,w,c
 39913  0181B4  6ED9               	movwf	fsr2l,c
 39914  0181B6  0EFF               	movlw	255
 39915  0181B8  20E2               	addwfc	fsr1h,w,c
 39916  0181BA  6EDA               	movwf	fsr2h,c
 39917                           
 39918                           ;stkvar	_bexp @ sp[(-13)+11]
 39919  0181BC  0EFE               	movlw	-2
 39920  0181BE  006F FF8C  F035    	movff	plusw1,btemp+11
 39921  0181C4  90D8               	bcf	status,0,c
 39922  0181C6  3035               	rrcf	(btemp+11)^0,w,c
 39923  0181C8  6EDF               	movwf	indf2,c
 39924  0181CA  D644               	goto	l10348
 39925  0181CC                     l3306:
 39926                           
 39927                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 39928  0181CC  0EEB               	movlw	235
 39929  0181CE  26E1               	addwf	fsr1l,f,c
 39930  0181D0  0EFF               	movlw	255
 39931  0181D2  22E2               	addwfc	fsr1h,f,c
 39932  0181D4  0012               	return		;funcret
 39933  0181D6                     __end_of___fldiv:
 39934                           	opt callstack 0
 39935                           
 39936 ;; *************** function ___flge *****************
 39937 ;; Defined at:
 39938 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 39939 ;; Parameters:    Size  Location     Type
 39940 ;;  ff1             4  [STACK] unsigned char 
 39941 ;;  ff2             4  [STACK] unsigned char 
 39942 ;; Auto vars:     Size  Location     Type
 39943 ;;		None
 39944 ;; Return value:  Size  Location     Type
 39945 ;;		None               void
 39946 ;; Registers used:
 39947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 39948 ;; Tracked objects:
 39949 ;;		On entry : 0/1
 39950 ;;		On exit  : 0/0
 39951 ;;		Unchanged: 0/0
 39952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39957 ;;Total ram usage:        0 bytes
 39958 ;; Hardware stack levels used:    1
 39959 ;; Hardware stack levels required when called:   15
 39960 ;; This function calls:
 39961 ;;		Nothing
 39962 ;; This function is called by:
 39963 ;;		_main
 39964 ;;		_convert_dac_raw
 39965 ;;		_calc_ror_data
 39966 ;;		_check_day_time
 39967 ;;		_calc_bsoc
 39968 ;;		_efgtoa
 39969 ;; This function uses a reentrant model
 39970 ;;
 39971                           
 39972                           	psect	text147
 39973  01E93E                     __ptext147:
 39974                           	opt callstack 0
 39975  01E93E                     ___flge:
 39976                           	opt callstack 0
 39977                           
 39978                           ;stkvar	_ff1 @ sp[(0)+-4]
 39979                           
 39980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39981                           ;incstack = 0
 39982 ;; hardware stack exceeded
 39983  01E93E  50E1               	movf	fsr1l,w,c
 39984  01E940  0FFC               	addlw	-4
 39985  01E942  6ED9               	movwf	fsr2l,c
 39986  01E944  50E2               	movf	fsr1h,w,c
 39987  01E946  6EDA               	movwf	fsr2h,c
 39988  01E948  0EFF               	movlw	255
 39989  01E94A  22DA               	addwfc	fsr2h,f,c
 39990  01E94C  0E00               	movlw	0
 39991  01E94E  14DE               	andwf	postinc2,w,c
 39992  01E950  6E32               	movwf	(btemp+8)^0,c
 39993  01E952  0E00               	movlw	0
 39994  01E954  14DE               	andwf	postinc2,w,c
 39995  01E956  6E33               	movwf	(btemp+9)^0,c
 39996  01E958  0E80               	movlw	128
 39997  01E95A  14DE               	andwf	postinc2,w,c
 39998  01E95C  6E34               	movwf	(btemp+10)^0,c
 39999  01E95E  0E7F               	movlw	127
 40000  01E960  14DE               	andwf	postinc2,w,c
 40001  01E962  6E35               	movwf	(btemp+11)^0,c
 40002  01E964  5032               	movf	(btemp+8)^0,w,c
 40003  01E966  1033               	iorwf	(btemp+9)^0,w,c
 40004  01E968  1034               	iorwf	(btemp+10)^0,w,c
 40005  01E96A  1035               	iorwf	(btemp+11)^0,w,c
 40006  01E96C  A4D8               	btfss	status,2,c
 40007  01E96E  D008               	goto	l10724
 40008                           
 40009                           ;stkvar	_ff1 @ sp[(0)+-4]
 40010  01E970  0EFC               	movlw	-4
 40011  01E972  6AE3               	clrf	plusw1,c
 40012  01E974  0EFD               	movlw	-3
 40013  01E976  6AE3               	clrf	plusw1,c
 40014  01E978  0EFE               	movlw	-2
 40015  01E97A  6AE3               	clrf	plusw1,c
 40016  01E97C  0EFF               	movlw	-1
 40017  01E97E  6AE3               	clrf	plusw1,c
 40018  01E980                     l10724:
 40019                           
 40020                           ;stkvar	_ff2 @ sp[(0)+-8]
 40021  01E980  50E1               	movf	fsr1l,w,c
 40022  01E982  0FF8               	addlw	-8
 40023  01E984  6ED9               	movwf	fsr2l,c
 40024  01E986  50E2               	movf	fsr1h,w,c
 40025  01E988  6EDA               	movwf	fsr2h,c
 40026  01E98A  0EFF               	movlw	255
 40027  01E98C  22DA               	addwfc	fsr2h,f,c
 40028  01E98E  0E00               	movlw	0
 40029  01E990  14DE               	andwf	postinc2,w,c
 40030  01E992  6E32               	movwf	(btemp+8)^0,c
 40031  01E994  0E00               	movlw	0
 40032  01E996  14DE               	andwf	postinc2,w,c
 40033  01E998  6E33               	movwf	(btemp+9)^0,c
 40034  01E99A  0E80               	movlw	128
 40035  01E99C  14DE               	andwf	postinc2,w,c
 40036  01E99E  6E34               	movwf	(btemp+10)^0,c
 40037  01E9A0  0E7F               	movlw	127
 40038  01E9A2  14DE               	andwf	postinc2,w,c
 40039  01E9A4  6E35               	movwf	(btemp+11)^0,c
 40040  01E9A6  5032               	movf	(btemp+8)^0,w,c
 40041  01E9A8  1033               	iorwf	(btemp+9)^0,w,c
 40042  01E9AA  1034               	iorwf	(btemp+10)^0,w,c
 40043  01E9AC  1035               	iorwf	(btemp+11)^0,w,c
 40044  01E9AE  A4D8               	btfss	status,2,c
 40045  01E9B0  D008               	goto	l2987
 40046                           
 40047                           ;stkvar	_ff2 @ sp[(0)+-8]
 40048  01E9B2  0EF8               	movlw	-8
 40049  01E9B4  6AE3               	clrf	plusw1,c
 40050  01E9B6  0EF9               	movlw	-7
 40051  01E9B8  6AE3               	clrf	plusw1,c
 40052  01E9BA  0EFA               	movlw	-6
 40053  01E9BC  6AE3               	clrf	plusw1,c
 40054  01E9BE  0EFB               	movlw	-5
 40055  01E9C0  6AE3               	clrf	plusw1,c
 40056  01E9C2                     l2987:
 40057                           
 40058                           ;stkvar	_ff1 @ sp[(0)+-4]
 40059  01E9C2  0EFF               	movlw	-1
 40060  01E9C4  AEE3               	btfss	plusw1,7,c
 40061  01E9C6  D024               	goto	l10730
 40062                           
 40063                           ;stkvar	_ff1 @ sp[(0)+-4]
 40064  01E9C8  0E00               	movlw	0
 40065  01E9CA  6E32               	movwf	(btemp+8)^0,c
 40066  01E9CC  0E00               	movlw	0
 40067  01E9CE  6E33               	movwf	(btemp+9)^0,c
 40068  01E9D0  0E00               	movlw	0
 40069  01E9D2  6E34               	movwf	(btemp+10)^0,c
 40070  01E9D4  0E80               	movlw	128
 40071  01E9D6  6E35               	movwf	(btemp+11)^0,c
 40072  01E9D8  0EFC               	movlw	-4
 40073  01E9DA  50E3               	movf	plusw1,w,c
 40074  01E9DC  5E32               	subwf	(btemp+8)^0,f,c
 40075  01E9DE  0EFD               	movlw	-3
 40076  01E9E0  50E3               	movf	plusw1,w,c
 40077  01E9E2  5A33               	subwfb	(btemp+9)^0,f,c
 40078  01E9E4  0EFE               	movlw	-2
 40079  01E9E6  50E3               	movf	plusw1,w,c
 40080  01E9E8  5A34               	subwfb	(btemp+10)^0,f,c
 40081  01E9EA  0EFF               	movlw	-1
 40082  01E9EC  50E3               	movf	plusw1,w,c
 40083  01E9EE  5A35               	subwfb	(btemp+11)^0,f,c
 40084                           
 40085                           ;stkvar	_ff1 @ sp[(0)+-4]
 40086  01E9F0  0EFC               	movlw	-4
 40087  01E9F2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40088  01E9F8  0EFD               	movlw	-3
 40089  01E9FA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40090  01EA00  0EFE               	movlw	-2
 40091  01EA02  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40092  01EA08  0EFF               	movlw	-1
 40093  01EA0A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40094  01EA10                     l10730:
 40095                           
 40096                           ;stkvar	_ff2 @ sp[(0)+-8]
 40097  01EA10  0EFB               	movlw	-5
 40098  01EA12  AEE3               	btfss	plusw1,7,c
 40099  01EA14  D024               	goto	l10734
 40100                           
 40101                           ;stkvar	_ff2 @ sp[(0)+-8]
 40102  01EA16  0E00               	movlw	0
 40103  01EA18  6E32               	movwf	(btemp+8)^0,c
 40104  01EA1A  0E00               	movlw	0
 40105  01EA1C  6E33               	movwf	(btemp+9)^0,c
 40106  01EA1E  0E00               	movlw	0
 40107  01EA20  6E34               	movwf	(btemp+10)^0,c
 40108  01EA22  0E80               	movlw	128
 40109  01EA24  6E35               	movwf	(btemp+11)^0,c
 40110  01EA26  0EF8               	movlw	-8
 40111  01EA28  50E3               	movf	plusw1,w,c
 40112  01EA2A  5E32               	subwf	(btemp+8)^0,f,c
 40113  01EA2C  0EF9               	movlw	-7
 40114  01EA2E  50E3               	movf	plusw1,w,c
 40115  01EA30  5A33               	subwfb	(btemp+9)^0,f,c
 40116  01EA32  0EFA               	movlw	-6
 40117  01EA34  50E3               	movf	plusw1,w,c
 40118  01EA36  5A34               	subwfb	(btemp+10)^0,f,c
 40119  01EA38  0EFB               	movlw	-5
 40120  01EA3A  50E3               	movf	plusw1,w,c
 40121  01EA3C  5A35               	subwfb	(btemp+11)^0,f,c
 40122                           
 40123                           ;stkvar	_ff2 @ sp[(0)+-8]
 40124  01EA3E  0EF8               	movlw	-8
 40125  01EA40  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40126  01EA46  0EF9               	movlw	-7
 40127  01EA48  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40128  01EA4E  0EFA               	movlw	-6
 40129  01EA50  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40130  01EA56  0EFB               	movlw	-5
 40131  01EA58  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40132  01EA5E                     l10734:
 40133                           
 40134                           ;stkvar	_ff1 @ sp[(0)+-4]
 40135  01EA5E  0EFF               	movlw	-1
 40136  01EA60  7EE3               	btg	plusw1,7,c
 40137                           
 40138                           ;stkvar	_ff2 @ sp[(0)+-8]
 40139  01EA62  0EFB               	movlw	-5
 40140  01EA64  7EE3               	btg	plusw1,7,c
 40141                           
 40142                           ;stkvar	_ff2 @ sp[(0)+-8]
 40143                           ;stkvar	_ff1 @ sp[(0)+-4]
 40144  01EA66  50E1               	movf	fsr1l,w,c
 40145  01EA68  0FFC               	addlw	-4
 40146  01EA6A  6ED9               	movwf	fsr2l,c
 40147  01EA6C  50E2               	movf	fsr1h,w,c
 40148  01EA6E  6EDA               	movwf	fsr2h,c
 40149  01EA70  0EFF               	movlw	255
 40150  01EA72  22DA               	addwfc	fsr2h,f,c
 40151  01EA74  0EF8               	movlw	-8
 40152  01EA76  50E3               	movf	plusw1,w,c
 40153  01EA78  5CDE               	subwf	postinc2,w,c
 40154  01EA7A  0EF9               	movlw	-7
 40155  01EA7C  50E3               	movf	plusw1,w,c
 40156  01EA7E  58DE               	subwfb	postinc2,w,c
 40157  01EA80  0EFA               	movlw	-6
 40158  01EA82  50E3               	movf	plusw1,w,c
 40159  01EA84  58DE               	subwfb	postinc2,w,c
 40160  01EA86  0EFB               	movlw	-5
 40161  01EA88  50E3               	movf	plusw1,w,c
 40162  01EA8A  58DE               	subwfb	postinc2,w,c
 40163  01EA8C  B0D8               	btfsc	status,0,c
 40164  01EA8E  D002               	goto	l10742
 40165  01EA90  902A               	bcf	btemp& (0+255),0,c
 40166  01EA92  D001               	goto	l2994
 40167  01EA94                     l10742:
 40168  01EA94  802A               	bsf	btemp& (0+255),0,c
 40169  01EA96                     l2994:
 40170                           
 40171                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 40172  01EA96  0EF8               	movlw	248
 40173  01EA98  26E1               	addwf	fsr1l,f,c
 40174  01EA9A  0EFF               	movlw	255
 40175  01EA9C  22E2               	addwfc	fsr1h,f,c
 40176  01EA9E  0012               	return		;funcret
 40177  01EAA0                     __end_of___flge:
 40178                           	opt callstack 0
 40179                           
 40180 ;; *************** function _calc_model_data *****************
 40181 ;; Defined at:
 40182 ;;		line 67 in file "mbmc.c"
 40183 ;; Parameters:    Size  Location     Type
 40184 ;;		None
 40185 ;; Auto vars:     Size  Location     Type
 40186 ;;		None
 40187 ;; Return value:  Size  Location     Type
 40188 ;;                  1  [STACK] void 
 40189 ;; Registers used:
 40190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40191 ;; Tracked objects:
 40192 ;;		On entry : 3F/0
 40193 ;;		On exit  : 3F/39
 40194 ;;		Unchanged: 0/0
 40195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40200 ;;Total ram usage:        0 bytes
 40201 ;; Hardware stack levels used:    1
 40202 ;; Hardware stack levels required when called:   18
 40203 ;; This function calls:
 40204 ;;		___fladd
 40205 ;;		___flmul
 40206 ;;		___flsub
 40207 ;;		_lp_filter
 40208 ;;		_start_bsoc
 40209 ;;		_stop_bsoc
 40210 ;; This function is called by:
 40211 ;;		_main
 40212 ;; This function uses a reentrant model
 40213 ;;
 40214                           
 40215                           	psect	text148
 40216  019902                     __ptext148:
 40217                           	opt callstack 0
 40218  019902                     _calc_model_data:
 40219                           	opt callstack 12
 40220                           
 40221                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 40222                           
 40223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40224                           ;incstack = 0
 40225  019902  EC24  F015         	call	_stop_bsoc	;wreg free
 40226                           
 40227                           ; BSR set to: 57
 40228                           ;mbmc.c: 72:  if (!V.calib) {
 40229  019906  0102               	movlb	2	; () banked
 40230  019908  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 40231  01990A  A4D8               	btfss	status,2,c
 40232  01990C  D220               	goto	l14418
 40233                           
 40234                           ; BSR set to: 2
 40235                           ;mbmc.c: 73:   C.updates++;
 40236  01990E  EE22  F23B         	lfsr	2,_C+316	;volatile
 40237  019912  2ADE               	incf	postinc2,f,c
 40238  019914  0E00               	movlw	0
 40239  019916  22DE               	addwfc	postinc2,f,c
 40240  019918  22DE               	addwfc	postinc2,f,c
 40241  01991A  22DE               	addwfc	postinc2,f,c
 40242                           
 40243                           ; BSR set to: 2
 40244                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 40245  01991C  EE22  F0FF         	lfsr	2,_C
 40246  019920  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 40247  019926  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 40248  01992C  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 40249  019932  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 40250                           
 40251                           ; BSR set to: 2
 40252                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 40253  019938  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 40254  01993E  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 40255  019944  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 40256  01994A  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 40257  019950  EE22  F143         	lfsr	2,_C+68	;volatile
 40258  019954  006F FF7B FFE6     	movff	postinc2,postinc1
 40259  01995A  006F FF7B FFE6     	movff	postinc2,postinc1
 40260  019960  006F FF7B FFE6     	movff	postinc2,postinc1
 40261  019966  006F FF7B FFE6     	movff	postinc2,postinc1
 40262  01996C  ECD2  F00E         	call	___flsub	;wreg free
 40263  019970  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 40264  019976  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 40265  01997C  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 40266  019982  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 40267                           
 40268                           ;mbmc.c: 76:   bcror = C.c_bat;
 40269  019988  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 40270  01998C  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 40271  019990  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 40272  019994  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 40273                           
 40274                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 40275  019998  EE22  F103         	lfsr	2,_C+4	;volatile
 40276  01999C  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 40277  0199A2  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 40278  0199A8  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 40279  0199AE  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 40280                           
 40281                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 40282  0199B4  EE22  F10F         	lfsr	2,_C+16	;volatile
 40283  0199B8  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 40284  0199BE  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 40285  0199C4  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 40286  0199CA  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 40287                           
 40288                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 40289  0199D0  EE22  F133         	lfsr	2,_C+52	;volatile
 40290  0199D4  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 40291  0199DA  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 40292  0199E0  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 40293  0199E6  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 40294                           
 40295                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 40296  0199EC  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 40297  0199F2  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 40298  0199F8  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 40299  0199FE  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 40300  019A04  EE22  F153         	lfsr	2,_C+84	;volatile
 40301  019A08  006F FF7B FFE6     	movff	postinc2,postinc1
 40302  019A0E  006F FF7B FFE6     	movff	postinc2,postinc1
 40303  019A14  006F FF7B FFE6     	movff	postinc2,postinc1
 40304  019A1A  006F FF7B FFE6     	movff	postinc2,postinc1
 40305  019A20  ECD2  F00E         	call	___flsub	;wreg free
 40306  019A24  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 40307  019A2A  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 40308  019A30  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 40309  019A36  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 40310                           
 40311                           ;mbmc.c: 81:   bvror = C.v_bat;
 40312  019A3C  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 40313  019A40  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 40314  019A44  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 40315  019A48  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 40316                           
 40317                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 40318  019A4C  EE22  F113         	lfsr	2,_C+20	;volatile
 40319  019A50  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 40320  019A56  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 40321  019A5C  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 40322  019A62  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 40323                           
 40324                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 40325  019A68  EE22  F107         	lfsr	2,_C+8	;volatile
 40326  019A6C  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 40327  019A72  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 40328  019A78  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 40329  019A7E  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 40330                           
 40331                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 40332  019A84  EE22  F12F         	lfsr	2,_C+48	;volatile
 40333  019A88  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 40334  019A8E  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 40335  019A94  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 40336  019A9A  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 40337                           
 40338                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 40339  019AA0  0E01               	movlw	1
 40340  019AA2  6EE6               	movwf	postinc1,c
 40341  019AA4  0E10               	movlw	16
 40342  019AA6  6EE6               	movwf	postinc1,c
 40343  019AA8  EE22  F0FF         	lfsr	2,_C
 40344  019AAC  006F FF7B FFE6     	movff	postinc2,postinc1
 40345  019AB2  006F FF7B FFE6     	movff	postinc2,postinc1
 40346  019AB8  006F FF7B FFE6     	movff	postinc2,postinc1
 40347  019ABE  006F FF7B FFE6     	movff	postinc2,postinc1
 40348  019AC4  EE22  F103         	lfsr	2,_C+4	;volatile
 40349  019AC8  006F FF7B FFE6     	movff	postinc2,postinc1
 40350  019ACE  006F FF7B FFE6     	movff	postinc2,postinc1
 40351  019AD4  006F FF7B FFE6     	movff	postinc2,postinc1
 40352  019ADA  006F FF7B FFE6     	movff	postinc2,postinc1
 40353  019AE0  ECD2  F00E         	call	___flsub	;wreg free
 40354  019AE4  0060  F0AB  FFE6   	movff	btemp,postinc1
 40355  019AEA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40356  019AF0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40357  019AF6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40358  019AFC  ECEC  F0EC         	call	_lp_filter	;wreg free
 40359  019B00  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 40360  019B06  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 40361  019B0C  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 40362  019B12  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 40363                           
 40364                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 40365  019B18  0E01               	movlw	1
 40366  019B1A  6EE6               	movwf	postinc1,c
 40367  019B1C  0E11               	movlw	17
 40368  019B1E  6EE6               	movwf	postinc1,c
 40369  019B20  EE22  F153         	lfsr	2,_C+84	;volatile
 40370  019B24  006F FF7B FFE6     	movff	postinc2,postinc1
 40371  019B2A  006F FF7B FFE6     	movff	postinc2,postinc1
 40372  019B30  006F FF7B FFE6     	movff	postinc2,postinc1
 40373  019B36  006F FF7B FFE6     	movff	postinc2,postinc1
 40374  019B3C  EE22  F13F         	lfsr	2,_C+64	;volatile
 40375  019B40  006F FF7B FFE6     	movff	postinc2,postinc1
 40376  019B46  006F FF7B FFE6     	movff	postinc2,postinc1
 40377  019B4C  006F FF7B FFE6     	movff	postinc2,postinc1
 40378  019B52  006F FF7B FFE6     	movff	postinc2,postinc1
 40379  019B58  ECDD  F0B2         	call	___flmul	;wreg free
 40380  019B5C  0060  F0AB  FFE6   	movff	btemp,postinc1
 40381  019B62  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40382  019B68  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40383  019B6E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40384  019B74  ECEC  F0EC         	call	_lp_filter	;wreg free
 40385  019B78  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 40386  019B7E  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 40387  019B84  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 40388  019B8A  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 40389                           
 40390                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 40391  019B90  0E01               	movlw	1
 40392  019B92  6EE6               	movwf	postinc1,c
 40393  019B94  0E12               	movlw	18
 40394  019B96  6EE6               	movwf	postinc1,c
 40395  019B98  EE22  F14F         	lfsr	2,_C+80	;volatile
 40396  019B9C  006F FF7B FFE6     	movff	postinc2,postinc1
 40397  019BA2  006F FF7B FFE6     	movff	postinc2,postinc1
 40398  019BA8  006F FF7B FFE6     	movff	postinc2,postinc1
 40399  019BAE  006F FF7B FFE6     	movff	postinc2,postinc1
 40400  019BB4  EE22  F147         	lfsr	2,_C+72	;volatile
 40401  019BB8  006F FF7B FFE6     	movff	postinc2,postinc1
 40402  019BBE  006F FF7B FFE6     	movff	postinc2,postinc1
 40403  019BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 40404  019BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 40405  019BD0  ECDD  F0B2         	call	___flmul	;wreg free
 40406  019BD4  0060  F0AB  FFE6   	movff	btemp,postinc1
 40407  019BDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40408  019BE0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40409  019BE6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40410  019BEC  ECEC  F0EC         	call	_lp_filter	;wreg free
 40411  019BF0  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 40412  019BF6  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 40413  019BFC  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 40414  019C02  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 40415                           
 40416                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 40417  019C08  0E01               	movlw	1
 40418  019C0A  6EE6               	movwf	postinc1,c
 40419  019C0C  0E13               	movlw	19
 40420  019C0E  6EE6               	movwf	postinc1,c
 40421  019C10  0E00               	movlw	0
 40422  019C12  6EE6               	movwf	postinc1,c
 40423  019C14  0E00               	movlw	0
 40424  019C16  6EE6               	movwf	postinc1,c
 40425  019C18  0E60               	movlw	96
 40426  019C1A  6EE6               	movwf	postinc1,c
 40427  019C1C  0EC1               	movlw	193
 40428  019C1E  6EE6               	movwf	postinc1,c
 40429  019C20  EE22  F163         	lfsr	2,_C+100	;volatile
 40430  019C24  006F FF7B FFE6     	movff	postinc2,postinc1
 40431  019C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 40432  019C30  006F FF7B FFE6     	movff	postinc2,postinc1
 40433  019C36  006F FF7B FFE6     	movff	postinc2,postinc1
 40434  019C3C  EE22  F13F         	lfsr	2,_C+64	;volatile
 40435  019C40  006F FF7B FFE6     	movff	postinc2,postinc1
 40436  019C46  006F FF7B FFE6     	movff	postinc2,postinc1
 40437  019C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 40438  019C52  006F FF7B FFE6     	movff	postinc2,postinc1
 40439  019C58  ECDD  F0B2         	call	___flmul	;wreg free
 40440  019C5C  0060  F0AB  FFE6   	movff	btemp,postinc1
 40441  019C62  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40442  019C68  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40443  019C6E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40444  019C74  ECF2  F0B6         	call	___fladd	;wreg free
 40445  019C78  0060  F0AB  FFE6   	movff	btemp,postinc1
 40446  019C7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40447  019C84  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40448  019C8A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40449  019C90  ECEC  F0EC         	call	_lp_filter	;wreg free
 40450  019C94  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 40451  019C9A  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 40452  019CA0  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 40453  019CA6  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 40454                           
 40455                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 40456  019CAC  0E01               	movlw	1
 40457  019CAE  6EE6               	movwf	postinc1,c
 40458  019CB0  0E14               	movlw	20
 40459  019CB2  6EE6               	movwf	postinc1,c
 40460  019CB4  EE22  F153         	lfsr	2,_C+84	;volatile
 40461  019CB8  006F FF7B FFE6     	movff	postinc2,postinc1
 40462  019CBE  006F FF7B FFE6     	movff	postinc2,postinc1
 40463  019CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 40464  019CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 40465  019CD0  EE22  F143         	lfsr	2,_C+68	;volatile
 40466  019CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 40467  019CDA  006F FF7B FFE6     	movff	postinc2,postinc1
 40468  019CE0  006F FF7B FFE6     	movff	postinc2,postinc1
 40469  019CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 40470  019CEC  ECDD  F0B2         	call	___flmul	;wreg free
 40471  019CF0  0060  F0AB  FFE6   	movff	btemp,postinc1
 40472  019CF6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40473  019CFC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40474  019D02  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40475  019D08  ECEC  F0EC         	call	_lp_filter	;wreg free
 40476  019D0C  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 40477  019D12  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 40478  019D18  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 40479  019D1E  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 40480                           
 40481                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 40482  019D24  EE22  F177         	lfsr	2,_C+120	;volatile
 40483  019D28  0E03               	movlw	3
 40484  019D2A  AEDB               	btfss	plusw2,7,c
 40485  019D2C  D010               	goto	l14418
 40486                           
 40487                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 40488  019D2E  0E17               	movlw	23
 40489  019D30  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 40490  019D36  0EB7               	movlw	183
 40491  019D38  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 40492  019D3E  0ED1               	movlw	209
 40493  019D40  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 40494  019D46  0E38               	movlw	56
 40495  019D48  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 40496  019D4E                     l14418:
 40497                           
 40498                           ;mbmc.c: 96:  start_bsoc();
 40499  019D4E  EC99  F013         	call	_start_bsoc	;wreg free
 40500                           
 40501                           ; BSR set to: 57
 40502                           ;mbmc.c: 97:  C.update = 1;
 40503  019D52  0E01               	movlw	1
 40504  019D54  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 40505                           
 40506                           ; BSR set to: 57
 40507                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 40508  019D5A  0012               	return		;funcret
 40509  019D5C                     __end_of_calc_model_data:
 40510                           	opt callstack 0
 40511                           
 40512 ;; *************** function _stop_bsoc *****************
 40513 ;; Defined at:
 40514 ;;		line 130 in file "bsoc.c"
 40515 ;; Parameters:    Size  Location     Type
 40516 ;;		None
 40517 ;; Auto vars:     Size  Location     Type
 40518 ;;		None
 40519 ;; Return value:  Size  Location     Type
 40520 ;;                  1  [STACK] void 
 40521 ;; Registers used:
 40522 ;;		None
 40523 ;; Tracked objects:
 40524 ;;		On entry : 0/1
 40525 ;;		On exit  : 3F/39
 40526 ;;		Unchanged: 0/0
 40527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40532 ;;Total ram usage:        0 bytes
 40533 ;; Hardware stack levels used:    1
 40534 ;; Hardware stack levels required when called:   15
 40535 ;; This function calls:
 40536 ;;		Nothing
 40537 ;; This function is called by:
 40538 ;;		_calc_model_data
 40539 ;;		_load_hist_data
 40540 ;; This function uses a reentrant model
 40541 ;;
 40542                           
 40543                           	psect	text149
 40544  002A48                     __ptext149:
 40545                           	opt callstack 0
 40546  002A48                     _stop_bsoc:
 40547                           	opt callstack 14
 40548                           
 40549                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 40550                           
 40551                           ; BSR set to: 57
 40552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40553                           ;incstack = 0
 40554  002A48  0139               	movlb	57	; () banked
 40555  002A4A  9D96               	bcf	150,6,b	;volatile
 40556                           
 40557                           ; BSR set to: 57
 40558                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 40559  002A4C  0012               	return		;funcret
 40560  002A4E                     __end_of_stop_bsoc:
 40561                           	opt callstack 0
 40562                           
 40563 ;; *************** function _start_bsoc *****************
 40564 ;; Defined at:
 40565 ;;		line 121 in file "bsoc.c"
 40566 ;; Parameters:    Size  Location     Type
 40567 ;;		None
 40568 ;; Auto vars:     Size  Location     Type
 40569 ;;		None
 40570 ;; Return value:  Size  Location     Type
 40571 ;;                  1  [STACK] void 
 40572 ;; Registers used:
 40573 ;;		wreg, status,2, status,0, btemp+11
 40574 ;; Tracked objects:
 40575 ;;		On entry : 0/39
 40576 ;;		On exit  : 3F/39
 40577 ;;		Unchanged: 0/0
 40578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40583 ;;Total ram usage:        0 bytes
 40584 ;; Hardware stack levels used:    1
 40585 ;; Hardware stack levels required when called:   15
 40586 ;; This function calls:
 40587 ;;		Nothing
 40588 ;; This function is called by:
 40589 ;;		_calc_model_data
 40590 ;;		_load_hist_data
 40591 ;; This function uses a reentrant model
 40592 ;;
 40593                           
 40594                           	psect	text150
 40595  002732                     __ptext150:
 40596                           	opt callstack 0
 40597  002732                     _start_bsoc:
 40598                           	opt callstack 14
 40599                           
 40600                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 40601                           
 40602                           ; BSR set to: 57
 40603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40604                           ;incstack = 0
 40605  002732  0139               	movlb	57	; () banked
 40606  002734  8D96               	bsf	150,6,b	;volatile
 40607                           
 40608                           ; BSR set to: 57
 40609  002736  A4BE               	btfss	190,2,c	;volatile
 40610  002738  D002               	goto	u12760
 40611  00273A  0E01               	movlw	1
 40612  00273C  D001               	goto	u12766
 40613  00273E                     u12760:
 40614  00273E  0E00               	movlw	0
 40615  002740                     u12766:
 40616  002740  0AFF               	xorlw	255
 40617  002742  6E35               	movwf	(btemp+11)^0,c
 40618  002744  4635               	rlncf	(btemp+11)^0,f,c
 40619  002746  4635               	rlncf	(btemp+11)^0,f,c
 40620  002748  50BE               	movf	190,w,c	;volatile
 40621  00274A  1835               	xorwf	(btemp+11)^0,w,c
 40622  00274C  0BFB               	andlw	-5
 40623  00274E  1835               	xorwf	(btemp+11)^0,w,c
 40624  002750  6EBE               	movwf	190,c	;volatile
 40625                           
 40626                           ; BSR set to: 57
 40627                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 40628  002752  0012               	return		;funcret
 40629  002754                     __end_of_start_bsoc:
 40630                           	opt callstack 0
 40631                           
 40632 ;; *************** function _lp_filter *****************
 40633 ;; Defined at:
 40634 ;;		line 29 in file "mbmc.c"
 40635 ;; Parameters:    Size  Location     Type
 40636 ;;  new             4  [STACK] const float 
 40637 ;;  bn              1  [STACK] const unsigned char 
 40638 ;;  slow            1  [STACK] const char 
 40639 ;; Auto vars:     Size  Location     Type
 40640 ;;  lp_speed        4  [STACK] float 
 40641 ;; Return value:  Size  Location     Type
 40642 ;;                  4  [STACK] float 
 40643 ;; Registers used:
 40644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40645 ;; Tracked objects:
 40646 ;;		On entry : 0/2
 40647 ;;		On exit  : 0/0
 40648 ;;		Unchanged: 0/0
 40649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40654 ;;Total ram usage:        0 bytes
 40655 ;; Hardware stack levels used:    1
 40656 ;; Hardware stack levels required when called:   17
 40657 ;; This function calls:
 40658 ;;		___fladd
 40659 ;;		___flmul
 40660 ;;		___flsub
 40661 ;; This function is called by:
 40662 ;;		_main
 40663 ;;		_convert_adc_data
 40664 ;;		_calc_model_data
 40665 ;; This function uses a reentrant model
 40666 ;;
 40667                           
 40668                           	psect	text151
 40669  01D9D8                     __ptext151:
 40670                           	opt callstack 0
 40671  01D9D8                     _lp_filter:
 40672                           	opt callstack 0
 40673                           
 40674                           ; BSR set to: 57
 40675                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40676  01D9D8  52E6               	movf	postinc1,f,c
 40677  01D9DA  52E6               	movf	postinc1,f,c
 40678  01D9DC  52E6               	movf	postinc1,f,c
 40679  01D9DE  52E6               	movf	postinc1,f,c
 40680                           
 40681                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 40682                           ;stkvar	_bn @ sp[(-4)+-5]
 40683                           
 40684                           ;incstack = 0
 40685  01D9E0  0EF7               	movlw	-9
 40686  01D9E2  006F FF8C  F02A    	movff	plusw1,btemp
 40687  01D9E8  0E14               	movlw	20
 40688  01D9EA  642A               	cpfsgt	btemp^0,c
 40689  01D9EC  D011               	goto	l13530
 40690  01D9EE                     u12590:
 40691                           
 40692                           ;mbmc.c: 35:   return new;
 40693                           ;stkvar	_new @ sp[(-4)+-4]
 40694  01D9EE  0EF8               	movlw	-8
 40695  01D9F0  006F FF8C  F02A    	movff	plusw1,btemp
 40696  01D9F6  0EF9               	movlw	-7
 40697  01D9F8  006F FF8C  F02B    	movff	plusw1,btemp+1
 40698  01D9FE  0EFA               	movlw	-6
 40699  01DA00  006F FF8C  F02C    	movff	plusw1,btemp+2
 40700  01DA06  0EFB               	movlw	-5
 40701  01DA08  006F FF8C  F02D    	movff	plusw1,btemp+3
 40702  01DA0E  D0BD               	goto	l2137
 40703  01DA10                     l13530:
 40704                           
 40705                           ;mbmc.c: 37:  if (slow == (-1)) {
 40706                           ;stkvar	_slow @ sp[(-4)+-6]
 40707  01DA10  0EF6               	movlw	-10
 40708  01DA12  28E3               	incf	plusw1,w,c
 40709  01DA14  A4D8               	btfss	status,2,c
 40710  01DA16  D012               	goto	l13538
 40711                           
 40712                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 40713                           ;stkvar	_bn @ sp[(-4)+-5]
 40714  01DA18  0EF7               	movlw	-9
 40715  01DA1A  50E3               	movf	plusw1,w,c
 40716  01DA1C  0D04               	mullw	4
 40717  01DA1E  0E00               	movlw	low lp_filter@smooth
 40718  01DA20  24F3               	addwf	243,w,c
 40719  01DA22  6ED9               	movwf	fsr2l,c
 40720  01DA24  0E03               	movlw	high lp_filter@smooth
 40721  01DA26  20F4               	addwfc	prodh,w,c
 40722  01DA28  6EDA               	movwf	fsr2h,c
 40723  01DA2A  0E00               	movlw	0
 40724  01DA2C  6EDE               	movwf	postinc2,c
 40725  01DA2E  0E00               	movlw	0
 40726  01DA30  6EDE               	movwf	postinc2,c
 40727  01DA32  0E00               	movlw	0
 40728  01DA34  6EDE               	movwf	postinc2,c
 40729  01DA36  0E00               	movlw	0
 40730  01DA38  6EDD               	movwf	postdec2,c
 40731  01DA3A  D7D9               	goto	u12590
 40732  01DA3C                     l13538:
 40733                           
 40734                           ;mbmc.c: 42:  if (slow) {
 40735                           ;stkvar	_slow @ sp[(-4)+-6]
 40736  01DA3C  0EF6               	movlw	-10
 40737  01DA3E  50E3               	movf	plusw1,w,c
 40738  01DA40  B4D8               	btfsc	status,2,c
 40739  01DA42  D006               	goto	l13542
 40740                           
 40741                           ;mbmc.c: 43:   lp_speed = 0.033;
 40742  01DA44  0E02               	movlw	2
 40743  01DA46  6E32               	movwf	(btemp+8)^0,c
 40744  01DA48  0E2B               	movlw	43
 40745  01DA4A  6E33               	movwf	(btemp+9)^0,c
 40746  01DA4C  0E07               	movlw	7
 40747  01DA4E  D005               	goto	L46
 40748  01DA50                     l13542:
 40749                           
 40750                           ;mbmc.c: 45:   lp_speed = 0.066;
 40751  01DA50  0E02               	movlw	2
 40752  01DA52  6E32               	movwf	(btemp+8)^0,c
 40753  01DA54  0E2B               	movlw	43
 40754  01DA56  6E33               	movwf	(btemp+9)^0,c
 40755  01DA58  0E87               	movlw	135
 40756  01DA5A                     L46:
 40757  01DA5A  6E34               	movwf	(btemp+10)^0,c
 40758  01DA5C  0E3D               	movlw	61
 40759  01DA5E  6E35               	movwf	(btemp+11)^0,c
 40760                           
 40761                           ;stkvar	_lp_speed @ sp[(-4)+0]
 40762  01DA60  0EFC               	movlw	-4
 40763  01DA62  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40764  01DA68  0EFD               	movlw	-3
 40765  01DA6A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40766  01DA70  0EFE               	movlw	-2
 40767  01DA72  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40768  01DA78  0EFF               	movlw	-1
 40769  01DA7A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40770                           
 40771                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 40772                           ;stkvar	_bn @ sp[(-4)+-5]
 40773  01DA80  0EF7               	movlw	-9
 40774  01DA82  50E3               	movf	plusw1,w,c
 40775  01DA84  0D04               	mullw	4
 40776  01DA86  0E00               	movlw	low lp_filter@smooth
 40777  01DA88  24F3               	addwf	243,w,c
 40778  01DA8A  6ED9               	movwf	fsr2l,c
 40779  01DA8C  0E03               	movlw	high lp_filter@smooth
 40780  01DA8E  20F4               	addwfc	prodh,w,c
 40781  01DA90  6EDA               	movwf	fsr2h,c
 40782  01DA92  006F FF7B FFE6     	movff	postinc2,postinc1
 40783  01DA98  006F FF7B FFE6     	movff	postinc2,postinc1
 40784  01DA9E  006F FF7B FFE6     	movff	postinc2,postinc1
 40785  01DAA4  006F FF7B FFE6     	movff	postinc2,postinc1
 40786                           
 40787                           ;stkvar	_lp_speed @ sp[(-8)+0]
 40788  01DAAA  0EF8               	movlw	-8
 40789  01DAAC  006F FF8F FFE6     	movff	plusw1,postinc1
 40790  01DAB2  006F FF8F FFE6     	movff	plusw1,postinc1
 40791  01DAB8  006F FF8F FFE6     	movff	plusw1,postinc1
 40792  01DABE  006F FF8F FFE6     	movff	plusw1,postinc1
 40793                           
 40794                           ;stkvar	_bn @ sp[(-12)+-5]
 40795  01DAC4  0EEF               	movlw	-17
 40796  01DAC6  50E3               	movf	plusw1,w,c
 40797  01DAC8  0D04               	mullw	4
 40798  01DACA  0E00               	movlw	low lp_filter@smooth
 40799  01DACC  24F3               	addwf	243,w,c
 40800  01DACE  6ED9               	movwf	fsr2l,c
 40801  01DAD0  0E03               	movlw	high lp_filter@smooth
 40802  01DAD2  20F4               	addwfc	prodh,w,c
 40803  01DAD4  6EDA               	movwf	fsr2h,c
 40804  01DAD6  006F FF7B FFE6     	movff	postinc2,postinc1
 40805  01DADC  006F FF7B FFE6     	movff	postinc2,postinc1
 40806  01DAE2  006F FF7B FFE6     	movff	postinc2,postinc1
 40807  01DAE8  006F FF7B FFE6     	movff	postinc2,postinc1
 40808                           
 40809                           ;stkvar	_new @ sp[(-16)+-4]
 40810  01DAEE  0EEC               	movlw	-20
 40811  01DAF0  006F FF8F FFE6     	movff	plusw1,postinc1
 40812  01DAF6  006F FF8F FFE6     	movff	plusw1,postinc1
 40813  01DAFC  006F FF8F FFE6     	movff	plusw1,postinc1
 40814  01DB02  006F FF8F FFE6     	movff	plusw1,postinc1
 40815  01DB08  ECD2  F00E         	call	___flsub	;wreg free
 40816  01DB0C  0060  F0AB  FFE6   	movff	btemp,postinc1
 40817  01DB12  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40818  01DB18  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40819  01DB1E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40820  01DB24  ECDD  F0B2         	call	___flmul	;wreg free
 40821  01DB28  0060  F0AB  FFE6   	movff	btemp,postinc1
 40822  01DB2E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40823  01DB34  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40824  01DB3A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40825  01DB40  ECF2  F0B6         	call	___fladd	;wreg free
 40826                           
 40827                           ;stkvar	_bn @ sp[(-4)+-5]
 40828  01DB44  0EF7               	movlw	-9
 40829  01DB46  50E3               	movf	plusw1,w,c
 40830  01DB48  0D04               	mullw	4
 40831  01DB4A  0E00               	movlw	low lp_filter@smooth
 40832  01DB4C  24F3               	addwf	243,w,c
 40833  01DB4E  6ED9               	movwf	fsr2l,c
 40834  01DB50  0E03               	movlw	high lp_filter@smooth
 40835  01DB52  20F4               	addwfc	prodh,w,c
 40836  01DB54  6EDA               	movwf	fsr2h,c
 40837  01DB56  0060  F0AB  FFDE   	movff	btemp,postinc2
 40838  01DB5C  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 40839  01DB62  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 40840  01DB68  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 40841  01DB6E  52DD               	movf	postdec2,f,c
 40842  01DB70  52DD               	movf	postdec2,f,c
 40843  01DB72  006F FF78  F02A    	movff	postinc2,btemp
 40844  01DB78  006F FF78  F02B    	movff	postinc2,btemp+1
 40845  01DB7E  006F FF78  F02C    	movff	postinc2,btemp+2
 40846  01DB84  006F FF78  F02D    	movff	postinc2,btemp+3
 40847  01DB8A                     l2137:
 40848                           
 40849                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 40850  01DB8A  0EF6               	movlw	246
 40851  01DB8C  26E1               	addwf	fsr1l,f,c
 40852  01DB8E  0EFF               	movlw	255
 40853  01DB90  22E2               	addwfc	fsr1h,f,c
 40854  01DB92  0012               	return		;funcret
 40855  01DB94                     __end_of_lp_filter:
 40856                           	opt callstack 0
 40857                           
 40858 ;; *************** function ___flsub *****************
 40859 ;; Defined at:
 40860 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40861 ;; Parameters:    Size  Location     Type
 40862 ;;  b               4  [STACK] float 
 40863 ;;  a               4  [STACK] float 
 40864 ;; Auto vars:     Size  Location     Type
 40865 ;;		None
 40866 ;; Return value:  Size  Location     Type
 40867 ;;                  4  [STACK] float 
 40868 ;; Registers used:
 40869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40870 ;; Tracked objects:
 40871 ;;		On entry : 0/0
 40872 ;;		On exit  : 0/0
 40873 ;;		Unchanged: 0/0
 40874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40879 ;;Total ram usage:        0 bytes
 40880 ;; Hardware stack levels used:    1
 40881 ;; Hardware stack levels required when called:   16
 40882 ;; This function calls:
 40883 ;;		___fladd
 40884 ;; This function is called by:
 40885 ;;		_conv_raw_result
 40886 ;;		_lp_filter
 40887 ;;		_calc_model_data
 40888 ;;		_calc_ror_data
 40889 ;;		_esr_check
 40890 ;;		_efgtoa
 40891 ;; This function uses a reentrant model
 40892 ;;
 40893                           
 40894                           	psect	text152
 40895  001DA4                     __ptext152:
 40896                           	opt callstack 0
 40897  001DA4                     ___flsub:
 40898                           	opt callstack 0
 40899                           
 40900                           ;stkvar	_a @ sp[(0)+-8]
 40901                           
 40902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40903                           ;incstack = 0
 40904 ;; hardware stack exceeded
 40905  001DA4  0EFB               	movlw	-5
 40906  001DA6  7EE3               	btg	plusw1,7,c
 40907                           
 40908                           ;stkvar	_a @ sp[(0)+-8]
 40909  001DA8  0EF8               	movlw	-8
 40910  001DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 40911  001DB0  006F FF8F FFE6     	movff	plusw1,postinc1
 40912  001DB6  006F FF8F FFE6     	movff	plusw1,postinc1
 40913  001DBC  006F FF8F FFE6     	movff	plusw1,postinc1
 40914                           
 40915                           ;stkvar	_b @ sp[(-4)+-4]
 40916  001DC2  0EF8               	movlw	-8
 40917  001DC4  006F FF8F FFE6     	movff	plusw1,postinc1
 40918  001DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 40919  001DD0  006F FF8F FFE6     	movff	plusw1,postinc1
 40920  001DD6  006F FF8F FFE6     	movff	plusw1,postinc1
 40921  001DDC  ECF2  F0B6         	call	___fladd	;wreg free
 40922                           
 40923                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 40924  001DE0  0EF8               	movlw	248
 40925  001DE2  26E1               	addwf	fsr1l,f,c
 40926  001DE4  0EFF               	movlw	255
 40927  001DE6  22E2               	addwfc	fsr1h,f,c
 40928  001DE8  0012               	return		;funcret
 40929  001DEA                     __end_of___flsub:
 40930                           	opt callstack 0
 40931                           
 40932 ;; *************** function ___fladd *****************
 40933 ;; Defined at:
 40934 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40935 ;; Parameters:    Size  Location     Type
 40936 ;;  b               4  [STACK] float 
 40937 ;;  a               4  [STACK] float 
 40938 ;; Auto vars:     Size  Location     Type
 40939 ;;  grs             1  [STACK] unsigned char 
 40940 ;;  bexp            1  [STACK] unsigned char 
 40941 ;;  aexp            1  [STACK] unsigned char 
 40942 ;;  signs           1  [STACK] unsigned char 
 40943 ;; Return value:  Size  Location     Type
 40944 ;;                  4  [STACK] unsigned char 
 40945 ;; Registers used:
 40946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40947 ;; Tracked objects:
 40948 ;;		On entry : 0/0
 40949 ;;		On exit  : 0/0
 40950 ;;		Unchanged: 0/0
 40951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40956 ;;Total ram usage:        0 bytes
 40957 ;; Hardware stack levels used:    1
 40958 ;; Hardware stack levels required when called:   15
 40959 ;; This function calls:
 40960 ;;		Nothing
 40961 ;; This function is called by:
 40962 ;;		_main
 40963 ;;		_lp_filter
 40964 ;;		_calc_model_data
 40965 ;;		_load_hist_data
 40966 ;;		_efgtoa
 40967 ;;		___asfladd
 40968 ;;		___flsub
 40969 ;; This function uses a reentrant model
 40970 ;;
 40971                           
 40972                           	psect	text153
 40973  016DE4                     __ptext153:
 40974                           	opt callstack 0
 40975  016DE4                     ___fladd:
 40976                           	opt callstack 0
 40977                           
 40978                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40979  016DE4  52E6               	movf	postinc1,f,c
 40980  016DE6  52E6               	movf	postinc1,f,c
 40981  016DE8  52E6               	movf	postinc1,f,c
 40982  016DEA  52E6               	movf	postinc1,f,c
 40983                           
 40984                           ;stkvar	_b @ sp[(-4)+-4]
 40985                           
 40986                           ;incstack = 0
 40987 ;; hardware stack exceeded
 40988  016DEC  0EFB               	movlw	251
 40989  016DEE  24E1               	addwf	fsr1l,w,c
 40990  016DF0  6ED9               	movwf	fsr2l,c
 40991  016DF2  0EFF               	movlw	255
 40992  016DF4  20E2               	addwfc	fsr1h,w,c
 40993  016DF6  6EDA               	movwf	fsr2h,c
 40994  016DF8  50DF               	movf	indf2,w,c
 40995  016DFA  6E35               	movwf	(btemp+11)^0,c
 40996  016DFC  0E80               	movlw	128
 40997  016DFE  1635               	andwf	(btemp+11)^0,f,c
 40998                           
 40999                           ;stkvar	_signs @ sp[(-4)+3]
 41000  016E00  0EFF               	movlw	-1
 41001  016E02  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41002                           
 41003                           ;stkvar	_b @ sp[(-4)+-4]
 41004  016E08  0EFB               	movlw	251
 41005  016E0A  24E1               	addwf	fsr1l,w,c
 41006  016E0C  6ED9               	movwf	fsr2l,c
 41007  016E0E  0EFF               	movlw	255
 41008  016E10  20E2               	addwfc	fsr1h,w,c
 41009  016E12  6EDA               	movwf	fsr2h,c
 41010  016E14  50DF               	movf	indf2,w,c
 41011  016E16  6E35               	movwf	(btemp+11)^0,c
 41012  016E18  90D8               	bcf	status,0,c
 41013  016E1A  3435               	rlcf	(btemp+11)^0,w,c
 41014  016E1C  6E34               	movwf	(btemp+10)^0,c
 41015                           
 41016                           ;stkvar	_bexp @ sp[(-4)+1]
 41017  016E1E  0EFD               	movlw	-3
 41018  016E20  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41019                           
 41020                           ;stkvar	_b @ sp[(-4)+-4]
 41021  016E26  0EFA               	movlw	250
 41022  016E28  24E1               	addwf	fsr1l,w,c
 41023  016E2A  6ED9               	movwf	fsr2l,c
 41024  016E2C  0EFF               	movlw	255
 41025  016E2E  20E2               	addwfc	fsr1h,w,c
 41026  016E30  6EDA               	movwf	fsr2h,c
 41027  016E32  AEDF               	btfss	indf2,7,c
 41028  016E34  D002               	goto	l9794
 41029                           
 41030                           ;stkvar	_bexp @ sp[(-4)+1]
 41031  016E36  0EFD               	movlw	-3
 41032  016E38  80E3               	bsf	plusw1,0,c
 41033  016E3A                     l9794:
 41034                           
 41035                           ;stkvar	_bexp @ sp[(-4)+1]
 41036  016E3A  0EFD               	movlw	-3
 41037  016E3C  50E3               	movf	plusw1,w,c
 41038  016E3E  B4D8               	btfsc	status,2,c
 41039  016E40  D027               	goto	l9804
 41040                           
 41041                           ;stkvar	_bexp @ sp[(-4)+1]
 41042  016E42  0EFD               	movlw	-3
 41043  016E44  28E3               	incf	plusw1,w,c
 41044  016E46  A4D8               	btfss	status,2,c
 41045  016E48  D018               	goto	l9800
 41046  016E4A  0E00               	movlw	0
 41047  016E4C  6E32               	movwf	(btemp+8)^0,c
 41048  016E4E  0E00               	movlw	0
 41049  016E50  6E33               	movwf	(btemp+9)^0,c
 41050  016E52  0E00               	movlw	0
 41051  016E54  6E34               	movwf	(btemp+10)^0,c
 41052  016E56  0E00               	movlw	0
 41053  016E58  6E35               	movwf	(btemp+11)^0,c
 41054                           
 41055                           ;stkvar	_b @ sp[(-4)+-4]
 41056  016E5A  0EF8               	movlw	-8
 41057  016E5C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41058  016E62  0EF9               	movlw	-7
 41059  016E64  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41060  016E6A  0EFA               	movlw	-6
 41061  016E6C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41062  016E72  0EFB               	movlw	-5
 41063  016E74  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41064  016E7A                     l9800:
 41065                           
 41066                           ;stkvar	_b @ sp[(-4)+-4]
 41067  016E7A  0EFA               	movlw	-6
 41068  016E7C  8EE3               	bsf	plusw1,7,c
 41069                           
 41070                           ;stkvar	_b @ sp[(-4)+-4]
 41071  016E7E  0EFB               	movlw	251
 41072  016E80  24E1               	addwf	fsr1l,w,c
 41073  016E82  6ED9               	movwf	fsr2l,c
 41074  016E84  0EFF               	movlw	255
 41075  016E86  20E2               	addwfc	fsr1h,w,c
 41076  016E88  6EDA               	movwf	fsr2h,c
 41077  016E8A  0E00               	movlw	0
 41078  016E8C  6EDF               	movwf	indf2,c
 41079  016E8E  D018               	goto	l9806
 41080  016E90                     l9804:
 41081  016E90  0E00               	movlw	0
 41082  016E92  6E32               	movwf	(btemp+8)^0,c
 41083  016E94  0E00               	movlw	0
 41084  016E96  6E33               	movwf	(btemp+9)^0,c
 41085  016E98  0E00               	movlw	0
 41086  016E9A  6E34               	movwf	(btemp+10)^0,c
 41087  016E9C  0E00               	movlw	0
 41088  016E9E  6E35               	movwf	(btemp+11)^0,c
 41089                           
 41090                           ;stkvar	_b @ sp[(-4)+-4]
 41091  016EA0  0EF8               	movlw	-8
 41092  016EA2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41093  016EA8  0EF9               	movlw	-7
 41094  016EAA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41095  016EB0  0EFA               	movlw	-6
 41096  016EB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41097  016EB8  0EFB               	movlw	-5
 41098  016EBA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41099  016EC0                     l9806:
 41100                           
 41101                           ;stkvar	_a @ sp[(-4)+-8]
 41102  016EC0  0EF7               	movlw	247
 41103  016EC2  24E1               	addwf	fsr1l,w,c
 41104  016EC4  6ED9               	movwf	fsr2l,c
 41105  016EC6  0EFF               	movlw	255
 41106  016EC8  20E2               	addwfc	fsr1h,w,c
 41107  016ECA  6EDA               	movwf	fsr2h,c
 41108  016ECC  50DF               	movf	indf2,w,c
 41109  016ECE  6E35               	movwf	(btemp+11)^0,c
 41110  016ED0  0E80               	movlw	128
 41111  016ED2  1635               	andwf	(btemp+11)^0,f,c
 41112                           
 41113                           ;stkvar	_aexp @ sp[(-4)+2]
 41114  016ED4  0EFE               	movlw	-2
 41115  016ED6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41116                           
 41117                           ;stkvar	_signs @ sp[(-4)+3]
 41118                           ;stkvar	_aexp @ sp[(-4)+2]
 41119  016EDC  50E1               	movf	fsr1l,w,c
 41120  016EDE  0FFE               	addlw	-2
 41121  016EE0  6ED9               	movwf	fsr2l,c
 41122  016EE2  50E2               	movf	fsr1h,w,c
 41123  016EE4  6EDA               	movwf	fsr2h,c
 41124  016EE6  0EFF               	movlw	255
 41125  016EE8  22DA               	addwfc	fsr2h,f,c
 41126  016EEA  0EFF               	movlw	-1
 41127  016EEC  50E3               	movf	plusw1,w,c
 41128  016EEE  18DE               	xorwf	postinc2,w,c
 41129  016EF0  B4D8               	btfsc	status,2,c
 41130  016EF2  D002               	goto	l9812
 41131                           
 41132                           ;stkvar	_signs @ sp[(-4)+3]
 41133  016EF4  0EFF               	movlw	-1
 41134  016EF6  8CE3               	bsf	plusw1,6,c
 41135  016EF8                     l9812:
 41136                           
 41137                           ;stkvar	_a @ sp[(-4)+-8]
 41138  016EF8  0EF7               	movlw	247
 41139  016EFA  24E1               	addwf	fsr1l,w,c
 41140  016EFC  6ED9               	movwf	fsr2l,c
 41141  016EFE  0EFF               	movlw	255
 41142  016F00  20E2               	addwfc	fsr1h,w,c
 41143  016F02  6EDA               	movwf	fsr2h,c
 41144  016F04  50DF               	movf	indf2,w,c
 41145  016F06  6E35               	movwf	(btemp+11)^0,c
 41146  016F08  90D8               	bcf	status,0,c
 41147  016F0A  3435               	rlcf	(btemp+11)^0,w,c
 41148  016F0C  6E34               	movwf	(btemp+10)^0,c
 41149                           
 41150                           ;stkvar	_aexp @ sp[(-4)+2]
 41151  016F0E  0EFE               	movlw	-2
 41152  016F10  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41153                           
 41154                           ;stkvar	_a @ sp[(-4)+-8]
 41155  016F16  0EF6               	movlw	246
 41156  016F18  24E1               	addwf	fsr1l,w,c
 41157  016F1A  6ED9               	movwf	fsr2l,c
 41158  016F1C  0EFF               	movlw	255
 41159  016F1E  20E2               	addwfc	fsr1h,w,c
 41160  016F20  6EDA               	movwf	fsr2h,c
 41161  016F22  AEDF               	btfss	indf2,7,c
 41162  016F24  D002               	goto	l9818
 41163                           
 41164                           ;stkvar	_aexp @ sp[(-4)+2]
 41165  016F26  0EFE               	movlw	-2
 41166  016F28  80E3               	bsf	plusw1,0,c
 41167  016F2A                     l9818:
 41168                           
 41169                           ;stkvar	_aexp @ sp[(-4)+2]
 41170  016F2A  0EFE               	movlw	-2
 41171  016F2C  50E3               	movf	plusw1,w,c
 41172  016F2E  B4D8               	btfsc	status,2,c
 41173  016F30  D027               	goto	l9828
 41174                           
 41175                           ;stkvar	_aexp @ sp[(-4)+2]
 41176  016F32  0EFE               	movlw	-2
 41177  016F34  28E3               	incf	plusw1,w,c
 41178  016F36  A4D8               	btfss	status,2,c
 41179  016F38  D018               	goto	l9824
 41180  016F3A  0E00               	movlw	0
 41181  016F3C  6E32               	movwf	(btemp+8)^0,c
 41182  016F3E  0E00               	movlw	0
 41183  016F40  6E33               	movwf	(btemp+9)^0,c
 41184  016F42  0E00               	movlw	0
 41185  016F44  6E34               	movwf	(btemp+10)^0,c
 41186  016F46  0E00               	movlw	0
 41187  016F48  6E35               	movwf	(btemp+11)^0,c
 41188                           
 41189                           ;stkvar	_a @ sp[(-4)+-8]
 41190  016F4A  0EF4               	movlw	-12
 41191  016F4C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41192  016F52  0EF5               	movlw	-11
 41193  016F54  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41194  016F5A  0EF6               	movlw	-10
 41195  016F5C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41196  016F62  0EF7               	movlw	-9
 41197  016F64  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41198  016F6A                     l9824:
 41199                           
 41200                           ;stkvar	_a @ sp[(-4)+-8]
 41201  016F6A  0EF6               	movlw	-10
 41202  016F6C  8EE3               	bsf	plusw1,7,c
 41203                           
 41204                           ;stkvar	_a @ sp[(-4)+-8]
 41205  016F6E  0EF7               	movlw	247
 41206  016F70  24E1               	addwf	fsr1l,w,c
 41207  016F72  6ED9               	movwf	fsr2l,c
 41208  016F74  0EFF               	movlw	255
 41209  016F76  20E2               	addwfc	fsr1h,w,c
 41210  016F78  6EDA               	movwf	fsr2h,c
 41211  016F7A  0E00               	movlw	0
 41212  016F7C  6EDF               	movwf	indf2,c
 41213  016F7E  D018               	goto	l9830
 41214  016F80                     l9828:
 41215  016F80  0E00               	movlw	0
 41216  016F82  6E32               	movwf	(btemp+8)^0,c
 41217  016F84  0E00               	movlw	0
 41218  016F86  6E33               	movwf	(btemp+9)^0,c
 41219  016F88  0E00               	movlw	0
 41220  016F8A  6E34               	movwf	(btemp+10)^0,c
 41221  016F8C  0E00               	movlw	0
 41222  016F8E  6E35               	movwf	(btemp+11)^0,c
 41223                           
 41224                           ;stkvar	_a @ sp[(-4)+-8]
 41225  016F90  0EF4               	movlw	-12
 41226  016F92  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41227  016F98  0EF5               	movlw	-11
 41228  016F9A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41229  016FA0  0EF6               	movlw	-10
 41230  016FA2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41231  016FA8  0EF7               	movlw	-9
 41232  016FAA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41233  016FB0                     l9830:
 41234                           
 41235                           ;stkvar	_bexp @ sp[(-4)+1]
 41236                           ;stkvar	_aexp @ sp[(-4)+2]
 41237  016FB0  50E1               	movf	fsr1l,w,c
 41238  016FB2  0FFE               	addlw	-2
 41239  016FB4  6ED9               	movwf	fsr2l,c
 41240  016FB6  50E2               	movf	fsr1h,w,c
 41241  016FB8  6EDA               	movwf	fsr2h,c
 41242  016FBA  0EFF               	movlw	255
 41243  016FBC  22DA               	addwfc	fsr2h,f,c
 41244  016FBE  0EFD               	movlw	-3
 41245  016FC0  50E3               	movf	plusw1,w,c
 41246  016FC2  5CDE               	subwf	postinc2,w,c
 41247  016FC4  B0D8               	btfsc	status,0,c
 41248  016FC6  D0A4               	goto	l9866
 41249                           
 41250                           ;stkvar	_signs @ sp[(-4)+3]
 41251  016FC8  0EFF               	movlw	-1
 41252  016FCA  ACE3               	btfss	plusw1,6,c
 41253  016FCC  D002               	goto	l9836
 41254                           
 41255                           ;stkvar	_signs @ sp[(-4)+3]
 41256  016FCE  0EFF               	movlw	-1
 41257  016FD0  7EE3               	btg	plusw1,7,c
 41258  016FD2                     l9836:
 41259                           
 41260                           ;stkvar	_bexp @ sp[(-4)+1]
 41261                           ;stkvar	_grs @ sp[(-4)+0]
 41262  016FD2  0EFD               	movlw	-3
 41263  016FD4  006F FF8C  F02A    	movff	plusw1,btemp
 41264  016FDA  0EFC               	movlw	-4
 41265  016FDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41266                           
 41267                           ;stkvar	_aexp @ sp[(-4)+2]
 41268                           ;stkvar	_bexp @ sp[(-4)+1]
 41269  016FE2  0EFE               	movlw	-2
 41270  016FE4  006F FF8C  F02A    	movff	plusw1,btemp
 41271  016FEA  0EFD               	movlw	-3
 41272  016FEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41273                           
 41274                           ;stkvar	_grs @ sp[(-4)+0]
 41275                           ;stkvar	_aexp @ sp[(-4)+2]
 41276  016FF2  0EFC               	movlw	-4
 41277  016FF4  006F FF8C  F02A    	movff	plusw1,btemp
 41278  016FFA  0EFE               	movlw	-2
 41279  016FFC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41280                           
 41281                           ;stkvar	_b @ sp[(-4)+-4]
 41282                           ;stkvar	_grs @ sp[(-4)+0]
 41283  017002  0EF8               	movlw	-8
 41284  017004  006F FF8C  F02A    	movff	plusw1,btemp
 41285  01700A  0EFC               	movlw	-4
 41286  01700C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41287                           
 41288                           ;stkvar	_a @ sp[(-4)+-8]
 41289                           ;stkvar	_b @ sp[(-4)+-4]
 41290  017012  0EF4               	movlw	-12
 41291  017014  006F FF8C  F02A    	movff	plusw1,btemp
 41292  01701A  0EF8               	movlw	-8
 41293  01701C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41294                           
 41295                           ;stkvar	_grs @ sp[(-4)+0]
 41296                           ;stkvar	_a @ sp[(-4)+-8]
 41297  017022  0EFC               	movlw	-4
 41298  017024  006F FF8C  F02A    	movff	plusw1,btemp
 41299  01702A  0EF4               	movlw	-12
 41300  01702C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41301                           
 41302                           ;stkvar	_b @ sp[(-4)+-4]
 41303  017032  0EF9               	movlw	249
 41304  017034  24E1               	addwf	fsr1l,w,c
 41305  017036  6ED9               	movwf	fsr2l,c
 41306  017038  0EFF               	movlw	255
 41307  01703A  20E2               	addwfc	fsr1h,w,c
 41308  01703C  6EDA               	movwf	fsr2h,c
 41309  01703E  50DF               	movf	indf2,w,c
 41310  017040  6E35               	movwf	(btemp+11)^0,c
 41311                           
 41312                           ;stkvar	_grs @ sp[(-4)+0]
 41313  017042  0EFC               	movlw	-4
 41314  017044  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41315                           
 41316                           ;stkvar	_a @ sp[(-4)+-8]
 41317  01704A  0EF5               	movlw	245
 41318  01704C  24E1               	addwf	fsr1l,w,c
 41319  01704E  6ED9               	movwf	fsr2l,c
 41320  017050  0EFF               	movlw	255
 41321  017052  20E2               	addwfc	fsr1h,w,c
 41322  017054  6EDA               	movwf	fsr2h,c
 41323                           
 41324                           ;stkvar	_b @ sp[(-4)+-4]
 41325  017056  0EF9               	movlw	249
 41326  017058  24E1               	addwf	fsr1l,w,c
 41327  01705A  6EE9               	movwf	fsr0l,c
 41328  01705C  0EFF               	movlw	255
 41329  01705E  20E2               	addwfc	fsr1h,w,c
 41330  017060  6EEA               	movwf	fsr0h,c
 41331  017062  006F FF7F FFEF     	movff	indf2,indf0
 41332                           
 41333                           ;stkvar	_grs @ sp[(-4)+0]
 41334                           ;stkvar	_a @ sp[(-4)+-8]
 41335  017068  0EF5               	movlw	245
 41336  01706A  24E1               	addwf	fsr1l,w,c
 41337  01706C  6ED9               	movwf	fsr2l,c
 41338  01706E  0EFF               	movlw	255
 41339  017070  20E2               	addwfc	fsr1h,w,c
 41340  017072  6EDA               	movwf	fsr2h,c
 41341  017074  0EFC               	movlw	-4
 41342  017076  006F FF8F FFDF     	movff	plusw1,indf2
 41343                           
 41344                           ;stkvar	_b @ sp[(-4)+-4]
 41345  01707C  0EFA               	movlw	250
 41346  01707E  24E1               	addwf	fsr1l,w,c
 41347  017080  6ED9               	movwf	fsr2l,c
 41348  017082  0EFF               	movlw	255
 41349  017084  20E2               	addwfc	fsr1h,w,c
 41350  017086  6EDA               	movwf	fsr2h,c
 41351  017088  50DF               	movf	indf2,w,c
 41352  01708A  6E35               	movwf	(btemp+11)^0,c
 41353                           
 41354                           ;stkvar	_grs @ sp[(-4)+0]
 41355  01708C  0EFC               	movlw	-4
 41356  01708E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41357                           
 41358                           ;stkvar	_a @ sp[(-4)+-8]
 41359  017094  0EF6               	movlw	246
 41360  017096  24E1               	addwf	fsr1l,w,c
 41361  017098  6ED9               	movwf	fsr2l,c
 41362  01709A  0EFF               	movlw	255
 41363  01709C  20E2               	addwfc	fsr1h,w,c
 41364  01709E  6EDA               	movwf	fsr2h,c
 41365                           
 41366                           ;stkvar	_b @ sp[(-4)+-4]
 41367  0170A0  0EFA               	movlw	250
 41368  0170A2  24E1               	addwf	fsr1l,w,c
 41369  0170A4  6EE9               	movwf	fsr0l,c
 41370  0170A6  0EFF               	movlw	255
 41371  0170A8  20E2               	addwfc	fsr1h,w,c
 41372  0170AA  6EEA               	movwf	fsr0h,c
 41373  0170AC  006F FF7F FFEF     	movff	indf2,indf0
 41374                           
 41375                           ;stkvar	_grs @ sp[(-4)+0]
 41376                           ;stkvar	_a @ sp[(-4)+-8]
 41377  0170B2  0EF6               	movlw	246
 41378  0170B4  24E1               	addwf	fsr1l,w,c
 41379  0170B6  6ED9               	movwf	fsr2l,c
 41380  0170B8  0EFF               	movlw	255
 41381  0170BA  20E2               	addwfc	fsr1h,w,c
 41382  0170BC  6EDA               	movwf	fsr2h,c
 41383  0170BE  0EFC               	movlw	-4
 41384  0170C0  006F FF8F FFDF     	movff	plusw1,indf2
 41385                           
 41386                           ;stkvar	_b @ sp[(-4)+-4]
 41387  0170C6  0EFB               	movlw	251
 41388  0170C8  24E1               	addwf	fsr1l,w,c
 41389  0170CA  6ED9               	movwf	fsr2l,c
 41390  0170CC  0EFF               	movlw	255
 41391  0170CE  20E2               	addwfc	fsr1h,w,c
 41392  0170D0  6EDA               	movwf	fsr2h,c
 41393  0170D2  50DF               	movf	indf2,w,c
 41394  0170D4  6E35               	movwf	(btemp+11)^0,c
 41395                           
 41396                           ;stkvar	_grs @ sp[(-4)+0]
 41397  0170D6  0EFC               	movlw	-4
 41398  0170D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41399                           
 41400                           ;stkvar	_a @ sp[(-4)+-8]
 41401  0170DE  0EF7               	movlw	247
 41402  0170E0  24E1               	addwf	fsr1l,w,c
 41403  0170E2  6ED9               	movwf	fsr2l,c
 41404  0170E4  0EFF               	movlw	255
 41405  0170E6  20E2               	addwfc	fsr1h,w,c
 41406  0170E8  6EDA               	movwf	fsr2h,c
 41407                           
 41408                           ;stkvar	_b @ sp[(-4)+-4]
 41409  0170EA  0EFB               	movlw	251
 41410  0170EC  24E1               	addwf	fsr1l,w,c
 41411  0170EE  6EE9               	movwf	fsr0l,c
 41412  0170F0  0EFF               	movlw	255
 41413  0170F2  20E2               	addwfc	fsr1h,w,c
 41414  0170F4  6EEA               	movwf	fsr0h,c
 41415  0170F6  006F FF7F FFEF     	movff	indf2,indf0
 41416                           
 41417                           ;stkvar	_grs @ sp[(-4)+0]
 41418                           ;stkvar	_a @ sp[(-4)+-8]
 41419  0170FC  0EF7               	movlw	247
 41420  0170FE  24E1               	addwf	fsr1l,w,c
 41421  017100  6ED9               	movwf	fsr2l,c
 41422  017102  0EFF               	movlw	255
 41423  017104  20E2               	addwfc	fsr1h,w,c
 41424  017106  6EDA               	movwf	fsr2h,c
 41425  017108  0EFC               	movlw	-4
 41426  01710A  006F FF8F FFDF     	movff	plusw1,indf2
 41427  017110                     l9866:
 41428                           
 41429                           ;stkvar	_grs @ sp[(-4)+0]
 41430  017110  0EFC               	movlw	-4
 41431  017112  6AE3               	clrf	plusw1,c
 41432                           
 41433                           ;stkvar	_aexp @ sp[(-4)+2]
 41434  017114  0EFE               	movlw	-2
 41435  017116  50E3               	movf	plusw1,w,c
 41436  017118  6E34               	movwf	(btemp+10)^0,c
 41437  01711A  6A35               	clrf	(btemp+11)^0,c
 41438                           
 41439                           ;stkvar	_bexp @ sp[(-4)+1]
 41440  01711C  0EFD               	movlw	-3
 41441  01711E  50E3               	movf	plusw1,w,c
 41442  017120  5E34               	subwf	(btemp+10)^0,f,c
 41443  017122  0E00               	movlw	0
 41444  017124  5A35               	subwfb	(btemp+11)^0,f,c
 41445  017126  BE35               	btfsc	(btemp+11)^0,7,c
 41446  017128  D062               	goto	l9890
 41447  01712A  5035               	movf	(btemp+11)^0,w,c
 41448  01712C  E104               	bnz	u7290
 41449  01712E  0E1A               	movlw	26
 41450  017130  5C34               	subwf	(btemp+10)^0,w,c
 41451  017132  A0D8               	btfss	status,0,c
 41452  017134  D05C               	goto	l9890
 41453  017136                     u7290:
 41454                           
 41455                           ;stkvar	_b @ sp[(-4)+-4]
 41456  017136  0EF8               	movlw	-8
 41457  017138  50E3               	movf	plusw1,w,c
 41458  01713A  E10A               	bnz	u7301
 41459  01713C  0EF9               	movlw	-7
 41460  01713E  50E3               	movf	plusw1,w,c
 41461  017140  E107               	bnz	u7301
 41462  017142  0EFA               	movlw	-6
 41463  017144  50E3               	movf	plusw1,w,c
 41464  017146  E104               	bnz	u7301
 41465  017148  0EFB               	movlw	-5
 41466  01714A  50E3               	movf	plusw1,w,c
 41467  01714C  B4D8               	btfsc	status,2,c
 41468  01714E  D003               	goto	u7300
 41469  017150                     u7301:
 41470  017150  6A35               	clrf	(btemp+11)^0,c
 41471  017152  2A35               	incf	(btemp+11)^0,f,c
 41472  017154  D001               	goto	u7318
 41473  017156                     u7300:
 41474  017156  6A35               	clrf	(btemp+11)^0,c
 41475  017158                     u7318:
 41476                           
 41477                           ;stkvar	_grs @ sp[(-4)+0]
 41478  017158  0EFC               	movlw	-4
 41479  01715A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41480                           
 41481                           ;stkvar	_b @ sp[(-4)+-4]
 41482  017160  0EF8               	movlw	-8
 41483  017162  6AE3               	clrf	plusw1,c
 41484  017164  0EF9               	movlw	-7
 41485  017166  6AE3               	clrf	plusw1,c
 41486  017168  0EFA               	movlw	-6
 41487  01716A  6AE3               	clrf	plusw1,c
 41488  01716C  0EFB               	movlw	-5
 41489  01716E  6AE3               	clrf	plusw1,c
 41490                           
 41491                           ;stkvar	_aexp @ sp[(-4)+2]
 41492                           ;stkvar	_bexp @ sp[(-4)+1]
 41493  017170  0EFE               	movlw	-2
 41494  017172  006F FF8C  F02A    	movff	plusw1,btemp
 41495  017178  0EFD               	movlw	-3
 41496  01717A  0060  F0AB  FFE3   	movff	btemp,plusw1
 41497  017180  D042               	goto	u7350
 41498  017182                     l9876:
 41499                           
 41500                           ;stkvar	_grs @ sp[(-4)+0]
 41501  017182  0EFC               	movlw	-4
 41502  017184  A0E3               	btfss	plusw1,0,c
 41503  017186  D00D               	goto	l9880
 41504                           
 41505                           ;stkvar	_grs @ sp[(-4)+0]
 41506  017188  0EFC               	movlw	-4
 41507  01718A  006F FF8C  F035    	movff	plusw1,btemp+11
 41508  017190  90D8               	bcf	status,0,c
 41509  017192  3235               	rrcf	(btemp+11)^0,f,c
 41510  017194  0E01               	movlw	1
 41511  017196  1235               	iorwf	(btemp+11)^0,f,c
 41512                           
 41513                           ;stkvar	_grs @ sp[(-4)+0]
 41514  017198  0EFC               	movlw	-4
 41515  01719A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41516  0171A0  D009               	goto	l9882
 41517  0171A2                     l9880:
 41518                           
 41519                           ;stkvar	_grs @ sp[(-4)+0]
 41520  0171A2  50E1               	movf	fsr1l,w,c
 41521  0171A4  0FFC               	addlw	-4
 41522  0171A6  6ED9               	movwf	fsr2l,c
 41523  0171A8  50E2               	movf	fsr1h,w,c
 41524  0171AA  6EDA               	movwf	fsr2h,c
 41525  0171AC  0EFF               	movlw	255
 41526  0171AE  22DA               	addwfc	fsr2h,f,c
 41527  0171B0  90D8               	bcf	status,0,c
 41528  0171B2  32DF               	rrcf	indf2,f,c
 41529  0171B4                     l9882:
 41530                           
 41531                           ;stkvar	_b @ sp[(-4)+-4]
 41532  0171B4  0EF8               	movlw	-8
 41533  0171B6  A0E3               	btfss	plusw1,0,c
 41534  0171B8  D002               	goto	l9886
 41535                           
 41536                           ;stkvar	_grs @ sp[(-4)+0]
 41537  0171BA  0EFC               	movlw	-4
 41538  0171BC  8EE3               	bsf	plusw1,7,c
 41539  0171BE                     l9886:
 41540  0171BE  0E01               	movlw	1
 41541  0171C0  6E35               	movwf	(btemp+11)^0,c
 41542                           
 41543                           ;stkvar	_b @ sp[(-4)+-4]
 41544  0171C2  50E1               	movf	fsr1l,w,c
 41545  0171C4  0FF8               	addlw	-8
 41546  0171C6  6ED9               	movwf	fsr2l,c
 41547  0171C8  50E2               	movf	fsr1h,w,c
 41548  0171CA  6EDA               	movwf	fsr2h,c
 41549  0171CC  0EFF               	movlw	255
 41550  0171CE  22DA               	addwfc	fsr2h,f,c
 41551  0171D0  2835               	incf	(btemp+11)^0,w,c
 41552  0171D2  52DE               	movf	postinc2,f,c
 41553  0171D4  D008               	goto	u7340
 41554  0171D6                     u7345:
 41555  0171D6  52DE               	movf	postinc2,f,c
 41556  0171D8  90D8               	bcf	status,0,c
 41557  0171DA  BEDC               	btfsc	preinc2,7,c
 41558  0171DC  80D8               	bsf	status,0,c
 41559  0171DE  32DD               	rrcf	postdec2,f,c
 41560  0171E0  32DD               	rrcf	postdec2,f,c
 41561  0171E2  32DD               	rrcf	postdec2,f,c
 41562  0171E4  32DE               	rrcf	postinc2,f,c
 41563  0171E6                     u7340:
 41564  0171E6  2EE8               	decfsz	wreg,f,c
 41565  0171E8  D7F6               	goto	u7345
 41566                           
 41567                           ;stkvar	_bexp @ sp[(-4)+1]
 41568  0171EA  0EFD               	movlw	-3
 41569  0171EC  2AE3               	incf	plusw1,f,c
 41570  0171EE                     l9890:
 41571                           
 41572                           ;stkvar	_aexp @ sp[(-4)+2]
 41573                           ;stkvar	_bexp @ sp[(-4)+1]
 41574  0171EE  50E1               	movf	fsr1l,w,c
 41575  0171F0  0FFD               	addlw	-3
 41576  0171F2  6ED9               	movwf	fsr2l,c
 41577  0171F4  50E2               	movf	fsr1h,w,c
 41578  0171F6  6EDA               	movwf	fsr2h,c
 41579  0171F8  0EFF               	movlw	255
 41580  0171FA  22DA               	addwfc	fsr2h,f,c
 41581  0171FC  0EFE               	movlw	-2
 41582  0171FE  50E3               	movf	plusw1,w,c
 41583  017200  5CDE               	subwf	postinc2,w,c
 41584  017202  A0D8               	btfss	status,0,c
 41585  017204  D7BE               	goto	l9876
 41586  017206                     u7350:
 41587                           
 41588                           ;stkvar	_signs @ sp[(-4)+3]
 41589  017206  0EFF               	movlw	-1
 41590  017208  BCE3               	btfsc	plusw1,6,c
 41591  01720A  D066               	goto	l9918
 41592                           
 41593                           ;stkvar	_bexp @ sp[(-4)+1]
 41594  01720C  0EFD               	movlw	-3
 41595  01720E  50E3               	movf	plusw1,w,c
 41596  017210  B4D8               	btfsc	status,2,c
 41597  017212  D0F2               	goto	u7450
 41598                           
 41599                           ;stkvar	_a @ sp[(-4)+-8]
 41600                           ;stkvar	_b @ sp[(-4)+-4]
 41601  017214  0EF8               	movlw	-8
 41602  017216  50E3               	movf	plusw1,w,c
 41603  017218  6E2A               	movwf	btemp^0,c
 41604  01721A  0EF4               	movlw	-12
 41605  01721C  50E3               	movf	plusw1,w,c
 41606  01721E  262A               	addwf	btemp^0,f,c
 41607  017220  0EF8               	movlw	-8
 41608  017222  0060  F0AB  FFE3   	movff	btemp,plusw1
 41609  017228  0EF9               	movlw	-7
 41610  01722A  50E3               	movf	plusw1,w,c
 41611  01722C  6E2A               	movwf	btemp^0,c
 41612  01722E  0EF5               	movlw	-11
 41613  017230  50E3               	movf	plusw1,w,c
 41614  017232  222A               	addwfc	btemp^0,f,c
 41615  017234  0EF9               	movlw	-7
 41616  017236  0060  F0AB  FFE3   	movff	btemp,plusw1
 41617  01723C  0EFA               	movlw	-6
 41618  01723E  50E3               	movf	plusw1,w,c
 41619  017240  6E2A               	movwf	btemp^0,c
 41620  017242  0EF6               	movlw	-10
 41621  017244  50E3               	movf	plusw1,w,c
 41622  017246  222A               	addwfc	btemp^0,f,c
 41623  017248  0EFA               	movlw	-6
 41624  01724A  0060  F0AB  FFE3   	movff	btemp,plusw1
 41625  017250  0EFB               	movlw	-5
 41626  017252  50E3               	movf	plusw1,w,c
 41627  017254  6E2A               	movwf	btemp^0,c
 41628  017256  0EF7               	movlw	-9
 41629  017258  50E3               	movf	plusw1,w,c
 41630  01725A  222A               	addwfc	btemp^0,f,c
 41631  01725C  0EFB               	movlw	-5
 41632  01725E  0060  F0AB  FFE3   	movff	btemp,plusw1
 41633                           
 41634                           ;stkvar	_b @ sp[(-4)+-4]
 41635  017264  0EFB               	movlw	-5
 41636  017266  A0E3               	btfss	plusw1,0,c
 41637  017268  D101               	goto	u7490
 41638                           
 41639                           ;stkvar	_grs @ sp[(-4)+0]
 41640  01726A  0EFC               	movlw	-4
 41641  01726C  A0E3               	btfss	plusw1,0,c
 41642  01726E  D00D               	goto	l9908
 41643                           
 41644                           ;stkvar	_grs @ sp[(-4)+0]
 41645  017270  0EFC               	movlw	-4
 41646  017272  006F FF8C  F035    	movff	plusw1,btemp+11
 41647  017278  90D8               	bcf	status,0,c
 41648  01727A  3235               	rrcf	(btemp+11)^0,f,c
 41649  01727C  0E01               	movlw	1
 41650  01727E  1235               	iorwf	(btemp+11)^0,f,c
 41651                           
 41652                           ;stkvar	_grs @ sp[(-4)+0]
 41653  017280  0EFC               	movlw	-4
 41654  017282  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41655  017288  D009               	goto	l9910
 41656  01728A                     l9908:
 41657                           
 41658                           ;stkvar	_grs @ sp[(-4)+0]
 41659  01728A  50E1               	movf	fsr1l,w,c
 41660  01728C  0FFC               	addlw	-4
 41661  01728E  6ED9               	movwf	fsr2l,c
 41662  017290  50E2               	movf	fsr1h,w,c
 41663  017292  6EDA               	movwf	fsr2h,c
 41664  017294  0EFF               	movlw	255
 41665  017296  22DA               	addwfc	fsr2h,f,c
 41666  017298  90D8               	bcf	status,0,c
 41667  01729A  32DF               	rrcf	indf2,f,c
 41668  01729C                     l9910:
 41669                           
 41670                           ;stkvar	_b @ sp[(-4)+-4]
 41671  01729C  0EF8               	movlw	-8
 41672  01729E  A0E3               	btfss	plusw1,0,c
 41673  0172A0  D002               	goto	l9914
 41674                           
 41675                           ;stkvar	_grs @ sp[(-4)+0]
 41676  0172A2  0EFC               	movlw	-4
 41677  0172A4  8EE3               	bsf	plusw1,7,c
 41678  0172A6                     l9914:
 41679  0172A6  0E01               	movlw	1
 41680  0172A8  6E35               	movwf	(btemp+11)^0,c
 41681                           
 41682                           ;stkvar	_b @ sp[(-4)+-4]
 41683  0172AA  50E1               	movf	fsr1l,w,c
 41684  0172AC  0FF8               	addlw	-8
 41685  0172AE  6ED9               	movwf	fsr2l,c
 41686  0172B0  50E2               	movf	fsr1h,w,c
 41687  0172B2  6EDA               	movwf	fsr2h,c
 41688  0172B4  0EFF               	movlw	255
 41689  0172B6  22DA               	addwfc	fsr2h,f,c
 41690  0172B8  2835               	incf	(btemp+11)^0,w,c
 41691  0172BA  52DE               	movf	postinc2,f,c
 41692  0172BC  D008               	goto	u7410
 41693  0172BE                     u7415:
 41694  0172BE  52DE               	movf	postinc2,f,c
 41695  0172C0  90D8               	bcf	status,0,c
 41696  0172C2  BEDC               	btfsc	preinc2,7,c
 41697  0172C4  80D8               	bsf	status,0,c
 41698  0172C6  32DD               	rrcf	postdec2,f,c
 41699  0172C8  32DD               	rrcf	postdec2,f,c
 41700  0172CA  32DD               	rrcf	postdec2,f,c
 41701  0172CC  32DE               	rrcf	postinc2,f,c
 41702  0172CE                     u7410:
 41703  0172CE  2EE8               	decfsz	wreg,f,c
 41704  0172D0  D7F6               	goto	u7415
 41705                           
 41706                           ;stkvar	_bexp @ sp[(-4)+1]
 41707  0172D2  0EFD               	movlw	-3
 41708  0172D4  2AE3               	incf	plusw1,f,c
 41709  0172D6  D0CA               	goto	u7490
 41710  0172D8                     l9918:
 41711                           
 41712                           ;stkvar	_a @ sp[(-4)+-8]
 41713                           ;stkvar	_b @ sp[(-4)+-4]
 41714  0172D8  50E1               	movf	fsr1l,w,c
 41715  0172DA  0FF8               	addlw	-8
 41716  0172DC  6ED9               	movwf	fsr2l,c
 41717  0172DE  50E2               	movf	fsr1h,w,c
 41718  0172E0  6EDA               	movwf	fsr2h,c
 41719  0172E2  0EFF               	movlw	255
 41720  0172E4  22DA               	addwfc	fsr2h,f,c
 41721  0172E6  0EF4               	movlw	-12
 41722  0172E8  50E3               	movf	plusw1,w,c
 41723  0172EA  5CDE               	subwf	postinc2,w,c
 41724  0172EC  0EF5               	movlw	-11
 41725  0172EE  50E3               	movf	plusw1,w,c
 41726  0172F0  58DE               	subwfb	postinc2,w,c
 41727  0172F2  0EF6               	movlw	-10
 41728  0172F4  50E3               	movf	plusw1,w,c
 41729  0172F6  58DE               	subwfb	postinc2,w,c
 41730  0172F8  50DE               	movf	postinc2,w,c
 41731  0172FA  0A80               	xorlw	128
 41732  0172FC  6E2A               	movwf	btemp^0,c
 41733  0172FE  0EF7               	movlw	-9
 41734  017300  50E3               	movf	plusw1,w,c
 41735  017302  0A80               	xorlw	128
 41736  017304  582A               	subwfb	btemp^0,w,c
 41737  017306  B0D8               	btfsc	status,0,c
 41738  017308  D053               	goto	l9930
 41739                           
 41740                           ;stkvar	_b @ sp[(-4)+-4]
 41741                           ;stkvar	_a @ sp[(-4)+-8]
 41742  01730A  0EF4               	movlw	-12
 41743  01730C  006F FF8C  F032    	movff	plusw1,btemp+8
 41744  017312  0EF5               	movlw	-11
 41745  017314  006F FF8C  F033    	movff	plusw1,btemp+9
 41746  01731A  0EF6               	movlw	-10
 41747  01731C  006F FF8C  F034    	movff	plusw1,btemp+10
 41748  017322  0EF7               	movlw	-9
 41749  017324  006F FF8C  F035    	movff	plusw1,btemp+11
 41750  01732A  0EF8               	movlw	-8
 41751  01732C  50E3               	movf	plusw1,w,c
 41752  01732E  5E32               	subwf	(btemp+8)^0,f,c
 41753  017330  0EF9               	movlw	-7
 41754  017332  50E3               	movf	plusw1,w,c
 41755  017334  5A33               	subwfb	(btemp+9)^0,f,c
 41756  017336  0EFA               	movlw	-6
 41757  017338  50E3               	movf	plusw1,w,c
 41758  01733A  5A34               	subwfb	(btemp+10)^0,f,c
 41759  01733C  0EFB               	movlw	-5
 41760  01733E  50E3               	movf	plusw1,w,c
 41761  017340  5A35               	subwfb	(btemp+11)^0,f,c
 41762  017342  0EFF               	movlw	255
 41763  017344  2432               	addwf	(btemp+8)^0,w,c
 41764  017346  6E2E               	movwf	(btemp+4)^0,c
 41765  017348  0EFF               	movlw	255
 41766  01734A  2033               	addwfc	(btemp+9)^0,w,c
 41767  01734C  6E2F               	movwf	(btemp+5)^0,c
 41768  01734E  0EFF               	movlw	255
 41769  017350  2034               	addwfc	(btemp+10)^0,w,c
 41770  017352  6E30               	movwf	(btemp+6)^0,c
 41771  017354  0EFF               	movlw	255
 41772  017356  2035               	addwfc	(btemp+11)^0,w,c
 41773  017358  6E31               	movwf	(btemp+7)^0,c
 41774                           
 41775                           ;stkvar	_b @ sp[(-4)+-4]
 41776  01735A  0EF8               	movlw	-8
 41777  01735C  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 41778  017362  0EF9               	movlw	-7
 41779  017364  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 41780  01736A  0EFA               	movlw	-6
 41781  01736C  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 41782  017372  0EFB               	movlw	-5
 41783  017374  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 41784                           
 41785                           ;stkvar	_signs @ sp[(-4)+3]
 41786  01737A  0EFF               	movlw	-1
 41787  01737C  7EE3               	btg	plusw1,7,c
 41788                           
 41789                           ;stkvar	_grs @ sp[(-4)+0]
 41790  01737E  0EFC               	movlw	-4
 41791  017380  50E3               	movf	plusw1,w,c
 41792  017382  0800               	sublw	0
 41793  017384  6E35               	movwf	(btemp+11)^0,c
 41794                           
 41795                           ;stkvar	_grs @ sp[(-4)+0]
 41796  017386  0EFC               	movlw	-4
 41797  017388  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41798                           
 41799                           ;stkvar	_grs @ sp[(-4)+0]
 41800  01738E  0EFC               	movlw	-4
 41801  017390  50E3               	movf	plusw1,w,c
 41802  017392  A4D8               	btfss	status,2,c
 41803  017394  D020               	goto	l9932
 41804                           
 41805                           ;stkvar	_b @ sp[(-4)+-4]
 41806  017396  50E1               	movf	fsr1l,w,c
 41807  017398  0FF8               	addlw	-8
 41808  01739A  6ED9               	movwf	fsr2l,c
 41809  01739C  50E2               	movf	fsr1h,w,c
 41810  01739E  6EDA               	movwf	fsr2h,c
 41811  0173A0  0EFF               	movlw	255
 41812  0173A2  22DA               	addwfc	fsr2h,f,c
 41813  0173A4  2ADE               	incf	postinc2,f,c
 41814  0173A6  0E00               	movlw	0
 41815  0173A8  22DE               	addwfc	postinc2,f,c
 41816  0173AA  22DE               	addwfc	postinc2,f,c
 41817  0173AC  22DE               	addwfc	postinc2,f,c
 41818  0173AE  D013               	goto	l9932
 41819  0173B0                     l9930:
 41820                           
 41821                           ;stkvar	_a @ sp[(-4)+-8]
 41822                           ;stkvar	_b @ sp[(-4)+-4]
 41823  0173B0  50E1               	movf	fsr1l,w,c
 41824  0173B2  0FF8               	addlw	-8
 41825  0173B4  6ED9               	movwf	fsr2l,c
 41826  0173B6  50E2               	movf	fsr1h,w,c
 41827  0173B8  6EDA               	movwf	fsr2h,c
 41828  0173BA  0EFF               	movlw	255
 41829  0173BC  22DA               	addwfc	fsr2h,f,c
 41830  0173BE  0EF4               	movlw	-12
 41831  0173C0  50E3               	movf	plusw1,w,c
 41832  0173C2  5EDE               	subwf	postinc2,f,c
 41833  0173C4  0EF5               	movlw	-11
 41834  0173C6  50E3               	movf	plusw1,w,c
 41835  0173C8  5ADE               	subwfb	postinc2,f,c
 41836  0173CA  0EF6               	movlw	-10
 41837  0173CC  50E3               	movf	plusw1,w,c
 41838  0173CE  5ADE               	subwfb	postinc2,f,c
 41839  0173D0  0EF7               	movlw	-9
 41840  0173D2  50E3               	movf	plusw1,w,c
 41841  0173D4  5ADE               	subwfb	postinc2,f,c
 41842  0173D6                     l9932:
 41843                           
 41844                           ;stkvar	_b @ sp[(-4)+-4]
 41845  0173D6  0EF8               	movlw	-8
 41846  0173D8  50E3               	movf	plusw1,w,c
 41847  0173DA  E145               	bnz	l9954
 41848  0173DC  0EF9               	movlw	-7
 41849  0173DE  50E3               	movf	plusw1,w,c
 41850  0173E0  E142               	bnz	l9954
 41851  0173E2  0EFA               	movlw	-6
 41852  0173E4  50E3               	movf	plusw1,w,c
 41853  0173E6  E13F               	bnz	l9954
 41854  0173E8  0EFB               	movlw	-5
 41855  0173EA  50E3               	movf	plusw1,w,c
 41856  0173EC  A4D8               	btfss	status,2,c
 41857  0173EE  D03B               	goto	l9954
 41858                           
 41859                           ;stkvar	_grs @ sp[(-4)+0]
 41860  0173F0  0EFC               	movlw	-4
 41861  0173F2  50E3               	movf	plusw1,w,c
 41862  0173F4  A4D8               	btfss	status,2,c
 41863  0173F6  D037               	goto	l9954
 41864  0173F8                     u7450:
 41865  0173F8  0E00               	movlw	0
 41866  0173FA  6E2A               	movwf	btemp^0,c
 41867  0173FC  0E00               	movlw	0
 41868  0173FE  6E2B               	movwf	(btemp+1)^0,c
 41869  017400  0E00               	movlw	0
 41870  017402  6E2C               	movwf	(btemp+2)^0,c
 41871  017404  0E00               	movlw	0
 41872  017406  6E2D               	movwf	(btemp+3)^0,c
 41873  017408  D0C6               	goto	l3261
 41874  01740A                     l9940:
 41875                           
 41876                           ;stkvar	_b @ sp[(-4)+-4]
 41877  01740A  90D8               	bcf	status,0,c
 41878  01740C  0EF8               	movlw	-8
 41879  01740E  36E3               	rlcf	plusw1,f,c
 41880  017410  0EF9               	movlw	-7
 41881  017412  36E3               	rlcf	plusw1,f,c
 41882  017414  0EFA               	movlw	-6
 41883  017416  36E3               	rlcf	plusw1,f,c
 41884  017418  0EFB               	movlw	-5
 41885  01741A  36E3               	rlcf	plusw1,f,c
 41886                           
 41887                           ;stkvar	_grs @ sp[(-4)+0]
 41888  01741C  0EFC               	movlw	-4
 41889  01741E  AEE3               	btfss	plusw1,7,c
 41890  017420  D002               	goto	l3273
 41891                           
 41892                           ;stkvar	_b @ sp[(-4)+-4]
 41893  017422  0EF8               	movlw	-8
 41894  017424  80E3               	bsf	plusw1,0,c
 41895  017426                     l3273:
 41896                           
 41897                           ;stkvar	_grs @ sp[(-4)+0]
 41898  017426  0EFC               	movlw	-4
 41899  017428  A0E3               	btfss	plusw1,0,c
 41900  01742A  D00E               	goto	l9948
 41901                           
 41902                           ;stkvar	_grs @ sp[(-4)+0]
 41903  01742C  0EFC               	movlw	-4
 41904  01742E  006F FF8C  F035    	movff	plusw1,btemp+11
 41905  017434  90D8               	bcf	status,0,c
 41906  017436  3435               	rlcf	(btemp+11)^0,w,c
 41907  017438  6E34               	movwf	(btemp+10)^0,c
 41908  01743A  0E01               	movlw	1
 41909  01743C  1234               	iorwf	(btemp+10)^0,f,c
 41910                           
 41911                           ;stkvar	_grs @ sp[(-4)+0]
 41912  01743E  0EFC               	movlw	-4
 41913  017440  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41914  017446  D009               	goto	l9950
 41915  017448                     l9948:
 41916                           
 41917                           ;stkvar	_grs @ sp[(-4)+0]
 41918  017448  50E1               	movf	fsr1l,w,c
 41919  01744A  0FFC               	addlw	-4
 41920  01744C  6ED9               	movwf	fsr2l,c
 41921  01744E  50E2               	movf	fsr1h,w,c
 41922  017450  6EDA               	movwf	fsr2h,c
 41923  017452  0EFF               	movlw	255
 41924  017454  22DA               	addwfc	fsr2h,f,c
 41925  017456  90D8               	bcf	status,0,c
 41926  017458  36DF               	rlcf	indf2,f,c
 41927  01745A                     l9950:
 41928                           
 41929                           ;stkvar	_bexp @ sp[(-4)+1]
 41930  01745A  0EFD               	movlw	-3
 41931  01745C  50E3               	movf	plusw1,w,c
 41932  01745E  B4D8               	btfsc	status,2,c
 41933  017460  D002               	goto	l9954
 41934                           
 41935                           ;stkvar	_bexp @ sp[(-4)+1]
 41936  017462  0EFD               	movlw	-3
 41937  017464  06E3               	decf	plusw1,f,c
 41938  017466                     l9954:
 41939                           
 41940                           ;stkvar	_b @ sp[(-4)+-4]
 41941  017466  0EFA               	movlw	-6
 41942  017468  AEE3               	btfss	plusw1,7,c
 41943  01746A  D7CF               	goto	l9940
 41944  01746C                     u7490:
 41945                           
 41946                           ;stkvar	_aexp @ sp[(-4)+2]
 41947  01746C  0EFE               	movlw	-2
 41948  01746E  6AE3               	clrf	plusw1,c
 41949                           
 41950                           ;stkvar	_grs @ sp[(-4)+0]
 41951  017470  0EFC               	movlw	-4
 41952  017472  AEE3               	btfss	plusw1,7,c
 41953  017474  D00F               	goto	l9968
 41954                           
 41955                           ;stkvar	_grs @ sp[(-4)+0]
 41956  017476  0EFC               	movlw	-4
 41957  017478  006F FF8C  F035    	movff	plusw1,btemp+11
 41958  01747E  0E7F               	movlw	127
 41959  017480  1635               	andwf	(btemp+11)^0,f,c
 41960  017482  B4D8               	btfsc	status,2,c
 41961  017484  D004               	goto	l9964
 41962  017486                     u7510:
 41963                           
 41964                           ;stkvar	_aexp @ sp[(-4)+2]
 41965  017486  0EFE               	movlw	-2
 41966  017488  6AE3               	clrf	plusw1,c
 41967  01748A  2AE3               	incf	plusw1,f,c
 41968  01748C  D003               	goto	l9968
 41969  01748E                     l9964:
 41970                           
 41971                           ;stkvar	_b @ sp[(-4)+-4]
 41972  01748E  0EF8               	movlw	-8
 41973  017490  B0E3               	btfsc	plusw1,0,c
 41974  017492  D7F9               	goto	u7510
 41975  017494                     l9968:
 41976                           
 41977                           ;stkvar	_aexp @ sp[(-4)+2]
 41978  017494  0EFE               	movlw	-2
 41979  017496  50E3               	movf	plusw1,w,c
 41980  017498  B4D8               	btfsc	status,2,c
 41981  01749A  D02B               	goto	l9980
 41982                           
 41983                           ;stkvar	_b @ sp[(-4)+-4]
 41984  01749C  50E1               	movf	fsr1l,w,c
 41985  01749E  0FF8               	addlw	-8
 41986  0174A0  6ED9               	movwf	fsr2l,c
 41987  0174A2  50E2               	movf	fsr1h,w,c
 41988  0174A4  6EDA               	movwf	fsr2h,c
 41989  0174A6  0EFF               	movlw	255
 41990  0174A8  22DA               	addwfc	fsr2h,f,c
 41991  0174AA  2ADE               	incf	postinc2,f,c
 41992  0174AC  0E00               	movlw	0
 41993  0174AE  22DE               	addwfc	postinc2,f,c
 41994  0174B0  22DE               	addwfc	postinc2,f,c
 41995  0174B2  22DE               	addwfc	postinc2,f,c
 41996                           
 41997                           ;stkvar	_b @ sp[(-4)+-4]
 41998  0174B4  0EFB               	movlw	-5
 41999  0174B6  A0E3               	btfss	plusw1,0,c
 42000  0174B8  D01C               	goto	l9980
 42001  0174BA  0E01               	movlw	1
 42002  0174BC  6E35               	movwf	(btemp+11)^0,c
 42003                           
 42004                           ;stkvar	_b @ sp[(-4)+-4]
 42005  0174BE  50E1               	movf	fsr1l,w,c
 42006  0174C0  0FF8               	addlw	-8
 42007  0174C2  6ED9               	movwf	fsr2l,c
 42008  0174C4  50E2               	movf	fsr1h,w,c
 42009  0174C6  6EDA               	movwf	fsr2h,c
 42010  0174C8  0EFF               	movlw	255
 42011  0174CA  22DA               	addwfc	fsr2h,f,c
 42012  0174CC  2835               	incf	(btemp+11)^0,w,c
 42013  0174CE  52DE               	movf	postinc2,f,c
 42014  0174D0  D008               	goto	u7550
 42015  0174D2                     u7555:
 42016  0174D2  52DE               	movf	postinc2,f,c
 42017  0174D4  90D8               	bcf	status,0,c
 42018  0174D6  BEDC               	btfsc	preinc2,7,c
 42019  0174D8  80D8               	bsf	status,0,c
 42020  0174DA  32DD               	rrcf	postdec2,f,c
 42021  0174DC  32DD               	rrcf	postdec2,f,c
 42022  0174DE  32DD               	rrcf	postdec2,f,c
 42023  0174E0  32DE               	rrcf	postinc2,f,c
 42024  0174E2                     u7550:
 42025  0174E2  2EE8               	decfsz	wreg,f,c
 42026  0174E4  D7F6               	goto	u7555
 42027                           
 42028                           ;stkvar	_bexp @ sp[(-4)+1]
 42029  0174E6  0EFD               	movlw	-3
 42030  0174E8  28E3               	incf	plusw1,w,c
 42031  0174EA  B4D8               	btfsc	status,2,c
 42032  0174EC  D002               	goto	l9980
 42033                           
 42034                           ;stkvar	_bexp @ sp[(-4)+1]
 42035  0174EE  0EFD               	movlw	-3
 42036  0174F0  2AE3               	incf	plusw1,f,c
 42037  0174F2                     l9980:
 42038                           
 42039                           ;stkvar	_bexp @ sp[(-4)+1]
 42040  0174F2  0EFD               	movlw	-3
 42041  0174F4  28E3               	incf	plusw1,w,c
 42042  0174F6  B4D8               	btfsc	status,2,c
 42043  0174F8  D004               	goto	u7580
 42044                           
 42045                           ;stkvar	_bexp @ sp[(-4)+1]
 42046  0174FA  0EFD               	movlw	-3
 42047  0174FC  50E3               	movf	plusw1,w,c
 42048  0174FE  A4D8               	btfss	status,2,c
 42049  017500  D00E               	goto	l9990
 42050  017502                     u7580:
 42051                           
 42052                           ;stkvar	_b @ sp[(-4)+-4]
 42053  017502  0EF8               	movlw	-8
 42054  017504  6AE3               	clrf	plusw1,c
 42055  017506  0EF9               	movlw	-7
 42056  017508  6AE3               	clrf	plusw1,c
 42057  01750A  0EFA               	movlw	-6
 42058  01750C  6AE3               	clrf	plusw1,c
 42059  01750E  0EFB               	movlw	-5
 42060  017510  6AE3               	clrf	plusw1,c
 42061                           
 42062                           ;stkvar	_bexp @ sp[(-4)+1]
 42063  017512  0EFD               	movlw	-3
 42064  017514  50E3               	movf	plusw1,w,c
 42065  017516  A4D8               	btfss	status,2,c
 42066  017518  D002               	goto	l9990
 42067                           
 42068                           ;stkvar	_signs @ sp[(-4)+3]
 42069  01751A  0EFF               	movlw	-1
 42070  01751C  6AE3               	clrf	plusw1,c
 42071  01751E                     l9990:
 42072                           
 42073                           ;stkvar	_bexp @ sp[(-4)+1]
 42074  01751E  0EFD               	movlw	-3
 42075  017520  A0E3               	btfss	plusw1,0,c
 42076  017522  D009               	goto	l9994
 42077                           
 42078                           ;stkvar	_b @ sp[(-4)+-4]
 42079  017524  0EFA               	movlw	250
 42080  017526  24E1               	addwf	fsr1l,w,c
 42081  017528  6ED9               	movwf	fsr2l,c
 42082  01752A  0EFF               	movlw	255
 42083  01752C  20E2               	addwfc	fsr1h,w,c
 42084  01752E  6EDA               	movwf	fsr2h,c
 42085  017530  0E00               	movlw	0
 42086  017532  8EDB               	bsf	plusw2,7,c
 42087  017534  D008               	goto	l9996
 42088  017536                     l9994:
 42089                           
 42090                           ;stkvar	_b @ sp[(-4)+-4]
 42091  017536  0EFA               	movlw	250
 42092  017538  24E1               	addwf	fsr1l,w,c
 42093  01753A  6ED9               	movwf	fsr2l,c
 42094  01753C  0EFF               	movlw	255
 42095  01753E  20E2               	addwfc	fsr1h,w,c
 42096  017540  6EDA               	movwf	fsr2h,c
 42097  017542  0E7F               	movlw	127
 42098  017544  16DF               	andwf	indf2,f,c
 42099  017546                     l9996:
 42100                           
 42101                           ;stkvar	_b @ sp[(-4)+-4]
 42102  017546  0EFB               	movlw	251
 42103  017548  24E1               	addwf	fsr1l,w,c
 42104  01754A  6ED9               	movwf	fsr2l,c
 42105  01754C  0EFF               	movlw	255
 42106  01754E  20E2               	addwfc	fsr1h,w,c
 42107  017550  6EDA               	movwf	fsr2h,c
 42108                           
 42109                           ;stkvar	_bexp @ sp[(-4)+1]
 42110  017552  0EFD               	movlw	-3
 42111  017554  006F FF8C  F035    	movff	plusw1,btemp+11
 42112  01755A  90D8               	bcf	status,0,c
 42113  01755C  3035               	rrcf	(btemp+11)^0,w,c
 42114  01755E  6EDF               	movwf	indf2,c
 42115                           
 42116                           ;stkvar	_signs @ sp[(-4)+3]
 42117  017560  0EFF               	movlw	-1
 42118  017562  AEE3               	btfss	plusw1,7,c
 42119  017564  D008               	goto	l10002
 42120                           
 42121                           ;stkvar	_b @ sp[(-4)+-4]
 42122  017566  0EFB               	movlw	251
 42123  017568  24E1               	addwf	fsr1l,w,c
 42124  01756A  6ED9               	movwf	fsr2l,c
 42125  01756C  0EFF               	movlw	255
 42126  01756E  20E2               	addwfc	fsr1h,w,c
 42127  017570  6EDA               	movwf	fsr2h,c
 42128  017572  0E00               	movlw	0
 42129  017574  8EDB               	bsf	plusw2,7,c
 42130  017576                     l10002:
 42131                           
 42132                           ;stkvar	_b @ sp[(-4)+-4]
 42133  017576  0EF8               	movlw	-8
 42134  017578  006F FF8C  F02A    	movff	plusw1,btemp
 42135  01757E  0EF9               	movlw	-7
 42136  017580  006F FF8C  F02B    	movff	plusw1,btemp+1
 42137  017586  0EFA               	movlw	-6
 42138  017588  006F FF8C  F02C    	movff	plusw1,btemp+2
 42139  01758E  0EFB               	movlw	-5
 42140  017590  006F FF8C  F02D    	movff	plusw1,btemp+3
 42141  017596                     l3261:
 42142                           
 42143                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42144  017596  0EF4               	movlw	244
 42145  017598  26E1               	addwf	fsr1l,f,c
 42146  01759A  0EFF               	movlw	255
 42147  01759C  22E2               	addwfc	fsr1h,f,c
 42148  01759E  0012               	return		;funcret
 42149  0175A0                     __end_of___fladd:
 42150                           	opt callstack 0
 42151                           
 42152 ;; *************** function ___flmul *****************
 42153 ;; Defined at:
 42154 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 42155 ;; Parameters:    Size  Location     Type
 42156 ;;  b               4  [STACK] unsigned char 
 42157 ;;  a               4  [STACK] unsigned char 
 42158 ;; Auto vars:     Size  Location     Type
 42159 ;;  prod            4  [STACK] struct .
 42160 ;;  grs             4  [STACK] unsigned long 
 42161 ;;  temp            2  [STACK] struct .
 42162 ;;  bexp            1  [STACK] unsigned char 
 42163 ;;  aexp            1  [STACK] unsigned char 
 42164 ;;  sign            1  [STACK] unsigned char 
 42165 ;; Return value:  Size  Location     Type
 42166 ;;                  4  [STACK] unsigned char 
 42167 ;; Registers used:
 42168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 42169 ;; Tracked objects:
 42170 ;;		On entry : 0/39
 42171 ;;		On exit  : 0/0
 42172 ;;		Unchanged: 0/0
 42173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42178 ;;Total ram usage:        0 bytes
 42179 ;; Hardware stack levels used:    1
 42180 ;; Hardware stack levels required when called:   15
 42181 ;; This function calls:
 42182 ;;		Nothing
 42183 ;; This function is called by:
 42184 ;;		_conv_raw_result
 42185 ;;		_lp_filter
 42186 ;;		_calc_model_data
 42187 ;;		_load_hist_data
 42188 ;;		_calc_bsoc
 42189 ;;		_init_bsoc
 42190 ;;		_efgtoa
 42191 ;; This function uses a reentrant model
 42192 ;;
 42193                           
 42194                           	psect	text154
 42195  0165BA                     __ptext154:
 42196                           	opt callstack 0
 42197  0165BA                     ___flmul:
 42198                           	opt callstack 0
 42199                           
 42200                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 42201  0165BA  0E0D               	movlw	13
 42202  0165BC  26E1               	addwf	fsr1l,f,c
 42203  0165BE  0E00               	movlw	0
 42204  0165C0  22E2               	addwfc	fsr1h,f,c
 42205                           
 42206                           ;stkvar	_b @ sp[(-13)+-4]
 42207                           
 42208                           ;incstack = 0
 42209 ;; hardware stack exceeded
 42210  0165C2  0EF2               	movlw	242
 42211  0165C4  24E1               	addwf	fsr1l,w,c
 42212  0165C6  6ED9               	movwf	fsr2l,c
 42213  0165C8  0EFF               	movlw	255
 42214  0165CA  20E2               	addwfc	fsr1h,w,c
 42215  0165CC  6EDA               	movwf	fsr2h,c
 42216  0165CE  50DF               	movf	indf2,w,c
 42217  0165D0  6E35               	movwf	(btemp+11)^0,c
 42218  0165D2  0E80               	movlw	128
 42219  0165D4  1635               	andwf	(btemp+11)^0,f,c
 42220                           
 42221                           ;stkvar	_sign @ sp[(-13)+12]
 42222  0165D6  0EFF               	movlw	-1
 42223  0165D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42224                           
 42225                           ;stkvar	_b @ sp[(-13)+-4]
 42226  0165DE  0EF2               	movlw	242
 42227  0165E0  24E1               	addwf	fsr1l,w,c
 42228  0165E2  6ED9               	movwf	fsr2l,c
 42229  0165E4  0EFF               	movlw	255
 42230  0165E6  20E2               	addwfc	fsr1h,w,c
 42231  0165E8  6EDA               	movwf	fsr2h,c
 42232  0165EA  50DF               	movf	indf2,w,c
 42233  0165EC  6E35               	movwf	(btemp+11)^0,c
 42234  0165EE  90D8               	bcf	status,0,c
 42235  0165F0  3435               	rlcf	(btemp+11)^0,w,c
 42236  0165F2  6E34               	movwf	(btemp+10)^0,c
 42237                           
 42238                           ;stkvar	_bexp @ sp[(-13)+10]
 42239  0165F4  0EFD               	movlw	-3
 42240  0165F6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42241                           
 42242                           ;stkvar	_b @ sp[(-13)+-4]
 42243  0165FC  0EF1               	movlw	241
 42244  0165FE  24E1               	addwf	fsr1l,w,c
 42245  016600  6ED9               	movwf	fsr2l,c
 42246  016602  0EFF               	movlw	255
 42247  016604  20E2               	addwfc	fsr1h,w,c
 42248  016606  6EDA               	movwf	fsr2h,c
 42249  016608  AEDF               	btfss	indf2,7,c
 42250  01660A  D002               	goto	l10466
 42251                           
 42252                           ;stkvar	_bexp @ sp[(-13)+10]
 42253  01660C  0EFD               	movlw	-3
 42254  01660E  80E3               	bsf	plusw1,0,c
 42255  016610                     l10466:
 42256                           
 42257                           ;stkvar	_bexp @ sp[(-13)+10]
 42258  016610  0EFD               	movlw	-3
 42259  016612  50E3               	movf	plusw1,w,c
 42260  016614  B4D8               	btfsc	status,2,c
 42261  016616  D01F               	goto	l10474
 42262                           
 42263                           ;stkvar	_bexp @ sp[(-13)+10]
 42264  016618  0EFD               	movlw	-3
 42265  01661A  28E3               	incf	plusw1,w,c
 42266  01661C  A4D8               	btfss	status,2,c
 42267  01661E  D018               	goto	l10472
 42268  016620  0E00               	movlw	0
 42269  016622  6E32               	movwf	(btemp+8)^0,c
 42270  016624  0E00               	movlw	0
 42271  016626  6E33               	movwf	(btemp+9)^0,c
 42272  016628  0E00               	movlw	0
 42273  01662A  6E34               	movwf	(btemp+10)^0,c
 42274  01662C  0E00               	movlw	0
 42275  01662E  6E35               	movwf	(btemp+11)^0,c
 42276                           
 42277                           ;stkvar	_b @ sp[(-13)+-4]
 42278  016630  0EEF               	movlw	-17
 42279  016632  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42280  016638  0EF0               	movlw	-16
 42281  01663A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42282  016640  0EF1               	movlw	-15
 42283  016642  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42284  016648  0EF2               	movlw	-14
 42285  01664A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42286  016650                     l10472:
 42287                           
 42288                           ;stkvar	_b @ sp[(-13)+-4]
 42289  016650  0EF1               	movlw	-15
 42290  016652  8EE3               	bsf	plusw1,7,c
 42291  016654  D018               	goto	l10476
 42292  016656                     l10474:
 42293  016656  0E00               	movlw	0
 42294  016658  6E32               	movwf	(btemp+8)^0,c
 42295  01665A  0E00               	movlw	0
 42296  01665C  6E33               	movwf	(btemp+9)^0,c
 42297  01665E  0E00               	movlw	0
 42298  016660  6E34               	movwf	(btemp+10)^0,c
 42299  016662  0E00               	movlw	0
 42300  016664  6E35               	movwf	(btemp+11)^0,c
 42301                           
 42302                           ;stkvar	_b @ sp[(-13)+-4]
 42303  016666  0EEF               	movlw	-17
 42304  016668  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42305  01666E  0EF0               	movlw	-16
 42306  016670  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42307  016676  0EF1               	movlw	-15
 42308  016678  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42309  01667E  0EF2               	movlw	-14
 42310  016680  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42311  016686                     l10476:
 42312                           
 42313                           ;stkvar	_a @ sp[(-13)+-8]
 42314  016686  0EEE               	movlw	238
 42315  016688  24E1               	addwf	fsr1l,w,c
 42316  01668A  6ED9               	movwf	fsr2l,c
 42317  01668C  0EFF               	movlw	255
 42318  01668E  20E2               	addwfc	fsr1h,w,c
 42319  016690  6EDA               	movwf	fsr2h,c
 42320  016692  50DF               	movf	indf2,w,c
 42321  016694  6E35               	movwf	(btemp+11)^0,c
 42322  016696  0E80               	movlw	128
 42323  016698  1635               	andwf	(btemp+11)^0,f,c
 42324                           
 42325                           ;stkvar	_sign @ sp[(-13)+12]
 42326  01669A  50E1               	movf	fsr1l,w,c
 42327  01669C  0FFF               	addlw	-1
 42328  01669E  6ED9               	movwf	fsr2l,c
 42329  0166A0  50E2               	movf	fsr1h,w,c
 42330  0166A2  6EDA               	movwf	fsr2h,c
 42331  0166A4  0EFF               	movlw	255
 42332  0166A6  22DA               	addwfc	fsr2h,f,c
 42333  0166A8  5035               	movf	(btemp+11)^0,w,c
 42334  0166AA  1ADF               	xorwf	indf2,f,c
 42335                           
 42336                           ;stkvar	_a @ sp[(-13)+-8]
 42337  0166AC  0EEE               	movlw	238
 42338  0166AE  24E1               	addwf	fsr1l,w,c
 42339  0166B0  6ED9               	movwf	fsr2l,c
 42340  0166B2  0EFF               	movlw	255
 42341  0166B4  20E2               	addwfc	fsr1h,w,c
 42342  0166B6  6EDA               	movwf	fsr2h,c
 42343  0166B8  50DF               	movf	indf2,w,c
 42344  0166BA  6E35               	movwf	(btemp+11)^0,c
 42345  0166BC  90D8               	bcf	status,0,c
 42346  0166BE  3435               	rlcf	(btemp+11)^0,w,c
 42347  0166C0  6E34               	movwf	(btemp+10)^0,c
 42348                           
 42349                           ;stkvar	_aexp @ sp[(-13)+11]
 42350  0166C2  0EFE               	movlw	-2
 42351  0166C4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42352                           
 42353                           ;stkvar	_a @ sp[(-13)+-8]
 42354  0166CA  0EED               	movlw	237
 42355  0166CC  24E1               	addwf	fsr1l,w,c
 42356  0166CE  6ED9               	movwf	fsr2l,c
 42357  0166D0  0EFF               	movlw	255
 42358  0166D2  20E2               	addwfc	fsr1h,w,c
 42359  0166D4  6EDA               	movwf	fsr2h,c
 42360  0166D6  AEDF               	btfss	indf2,7,c
 42361  0166D8  D002               	goto	l10484
 42362                           
 42363                           ;stkvar	_aexp @ sp[(-13)+11]
 42364  0166DA  0EFE               	movlw	-2
 42365  0166DC  80E3               	bsf	plusw1,0,c
 42366  0166DE                     l10484:
 42367                           
 42368                           ;stkvar	_aexp @ sp[(-13)+11]
 42369  0166DE  0EFE               	movlw	-2
 42370  0166E0  50E3               	movf	plusw1,w,c
 42371  0166E2  B4D8               	btfsc	status,2,c
 42372  0166E4  D01F               	goto	l10492
 42373                           
 42374                           ;stkvar	_aexp @ sp[(-13)+11]
 42375  0166E6  0EFE               	movlw	-2
 42376  0166E8  28E3               	incf	plusw1,w,c
 42377  0166EA  A4D8               	btfss	status,2,c
 42378  0166EC  D018               	goto	l10490
 42379  0166EE  0E00               	movlw	0
 42380  0166F0  6E32               	movwf	(btemp+8)^0,c
 42381  0166F2  0E00               	movlw	0
 42382  0166F4  6E33               	movwf	(btemp+9)^0,c
 42383  0166F6  0E00               	movlw	0
 42384  0166F8  6E34               	movwf	(btemp+10)^0,c
 42385  0166FA  0E00               	movlw	0
 42386  0166FC  6E35               	movwf	(btemp+11)^0,c
 42387                           
 42388                           ;stkvar	_a @ sp[(-13)+-8]
 42389  0166FE  0EEB               	movlw	-21
 42390  016700  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42391  016706  0EEC               	movlw	-20
 42392  016708  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42393  01670E  0EED               	movlw	-19
 42394  016710  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42395  016716  0EEE               	movlw	-18
 42396  016718  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42397  01671E                     l10490:
 42398                           
 42399                           ;stkvar	_a @ sp[(-13)+-8]
 42400  01671E  0EED               	movlw	-19
 42401  016720  8EE3               	bsf	plusw1,7,c
 42402  016722  D018               	goto	l10494
 42403  016724                     l10492:
 42404  016724  0E00               	movlw	0
 42405  016726  6E32               	movwf	(btemp+8)^0,c
 42406  016728  0E00               	movlw	0
 42407  01672A  6E33               	movwf	(btemp+9)^0,c
 42408  01672C  0E00               	movlw	0
 42409  01672E  6E34               	movwf	(btemp+10)^0,c
 42410  016730  0E00               	movlw	0
 42411  016732  6E35               	movwf	(btemp+11)^0,c
 42412                           
 42413                           ;stkvar	_a @ sp[(-13)+-8]
 42414  016734  0EEB               	movlw	-21
 42415  016736  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42416  01673C  0EEC               	movlw	-20
 42417  01673E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42418  016744  0EED               	movlw	-19
 42419  016746  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42420  01674C  0EEE               	movlw	-18
 42421  01674E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42422  016754                     l10494:
 42423                           
 42424                           ;stkvar	_aexp @ sp[(-13)+11]
 42425  016754  0EFE               	movlw	-2
 42426  016756  50E3               	movf	plusw1,w,c
 42427  016758  B4D8               	btfsc	status,2,c
 42428  01675A  D004               	goto	u8640
 42429                           
 42430                           ;stkvar	_bexp @ sp[(-13)+10]
 42431  01675C  0EFD               	movlw	-3
 42432  01675E  50E3               	movf	plusw1,w,c
 42433  016760  A4D8               	btfss	status,2,c
 42434  016762  D009               	goto	l10502
 42435  016764                     u8640:
 42436  016764  0E00               	movlw	0
 42437  016766  6E2A               	movwf	btemp^0,c
 42438  016768  0E00               	movlw	0
 42439  01676A  6E2B               	movwf	(btemp+1)^0,c
 42440  01676C  0E00               	movlw	0
 42441  01676E  6E2C               	movwf	(btemp+2)^0,c
 42442  016770  0E00               	movlw	0
 42443  016772  6E2D               	movwf	(btemp+3)^0,c
 42444  016774  D332               	goto	l3342
 42445  016776                     l10502:
 42446                           
 42447                           ;stkvar	_b @ sp[(-13)+-4]
 42448  016776  0EEF               	movlw	-17
 42449  016778  006F FF8C  F035    	movff	plusw1,btemp+11
 42450                           
 42451                           ;stkvar	_a @ sp[(-13)+-8]
 42452  01677E  0EED               	movlw	237
 42453  016780  24E1               	addwf	fsr1l,w,c
 42454  016782  6ED9               	movwf	fsr2l,c
 42455  016784  0EFF               	movlw	255
 42456  016786  20E2               	addwfc	fsr1h,w,c
 42457  016788  6EDA               	movwf	fsr2h,c
 42458  01678A  50DF               	movf	indf2,w,c
 42459  01678C  0235               	mulwf	(btemp+11)^0,c
 42460                           
 42461                           ;stkvar	_temp @ sp[(-13)+8]
 42462  01678E  0EFB               	movlw	-5
 42463  016790  006F FFCF FFE3     	movff	prodl,plusw1
 42464  016796  0EFC               	movlw	-4
 42465  016798  006F FFD3 FFE3     	movff	prodh,plusw1
 42466                           
 42467                           ;stkvar	_temp @ sp[(-13)+8]
 42468  01679E  0EFB               	movlw	-5
 42469  0167A0  006F FF8C  F035    	movff	plusw1,btemp+11
 42470  0167A6  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42471  0167AC  6A2F               	clrf	(btemp+5)^0,c
 42472  0167AE  6A30               	clrf	(btemp+6)^0,c
 42473  0167B0  6A31               	clrf	(btemp+7)^0,c
 42474                           
 42475                           ;stkvar	_grs @ sp[(-13)+4]
 42476  0167B2  0EF7               	movlw	-9
 42477  0167B4  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42478  0167BA  0EF8               	movlw	-8
 42479  0167BC  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42480  0167C2  0EF9               	movlw	-7
 42481  0167C4  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42482  0167CA  0EFA               	movlw	-6
 42483  0167CC  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42484                           
 42485                           ;stkvar	_temp @ sp[(-13)+8]
 42486  0167D2  0EFC               	movlw	252
 42487  0167D4  24E1               	addwf	fsr1l,w,c
 42488  0167D6  6ED9               	movwf	fsr2l,c
 42489  0167D8  0EFF               	movlw	255
 42490  0167DA  20E2               	addwfc	fsr1h,w,c
 42491  0167DC  6EDA               	movwf	fsr2h,c
 42492  0167DE  50DF               	movf	indf2,w,c
 42493  0167E0  6E35               	movwf	(btemp+11)^0,c
 42494  0167E2  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42495  0167E8  6A2F               	clrf	(btemp+5)^0,c
 42496  0167EA  6A30               	clrf	(btemp+6)^0,c
 42497  0167EC  6A31               	clrf	(btemp+7)^0,c
 42498                           
 42499                           ;stkvar	_prod @ sp[(-13)+0]
 42500  0167EE  0EF3               	movlw	-13
 42501  0167F0  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42502  0167F6  0EF4               	movlw	-12
 42503  0167F8  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42504  0167FE  0EF5               	movlw	-11
 42505  016800  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42506  016806  0EF6               	movlw	-10
 42507  016808  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42508                           
 42509                           ;stkvar	_b @ sp[(-13)+-4]
 42510  01680E  0EF0               	movlw	240
 42511  016810  24E1               	addwf	fsr1l,w,c
 42512  016812  6ED9               	movwf	fsr2l,c
 42513  016814  0EFF               	movlw	255
 42514  016816  20E2               	addwfc	fsr1h,w,c
 42515  016818  6EDA               	movwf	fsr2h,c
 42516  01681A  50DF               	movf	indf2,w,c
 42517  01681C  6E35               	movwf	(btemp+11)^0,c
 42518                           
 42519                           ;stkvar	_a @ sp[(-13)+-8]
 42520  01681E  0EEC               	movlw	236
 42521  016820  24E1               	addwf	fsr1l,w,c
 42522  016822  6ED9               	movwf	fsr2l,c
 42523  016824  0EFF               	movlw	255
 42524  016826  20E2               	addwfc	fsr1h,w,c
 42525  016828  6EDA               	movwf	fsr2h,c
 42526  01682A  50DF               	movf	indf2,w,c
 42527  01682C  0235               	mulwf	(btemp+11)^0,c
 42528                           
 42529                           ;stkvar	_temp @ sp[(-13)+8]
 42530  01682E  0EFB               	movlw	-5
 42531  016830  006F FFCF FFE3     	movff	prodl,plusw1
 42532  016836  0EFC               	movlw	-4
 42533  016838  006F FFD3 FFE3     	movff	prodh,plusw1
 42534                           
 42535                           ;stkvar	_grs @ sp[(-13)+4]
 42536  01683E  50E1               	movf	fsr1l,w,c
 42537  016840  0FF7               	addlw	-9
 42538  016842  6ED9               	movwf	fsr2l,c
 42539  016844  50E2               	movf	fsr1h,w,c
 42540  016846  6EDA               	movwf	fsr2h,c
 42541  016848  0EFF               	movlw	255
 42542  01684A  22DA               	addwfc	fsr2h,f,c
 42543                           
 42544                           ;stkvar	_temp @ sp[(-13)+8]
 42545  01684C  0EFB               	movlw	-5
 42546  01684E  50E3               	movf	plusw1,w,c
 42547  016850  26DE               	addwf	postinc2,f,c
 42548  016852  0E00               	movlw	0
 42549  016854  22DE               	addwfc	postinc2,f,c
 42550  016856  22DE               	addwfc	postinc2,f,c
 42551  016858  22DE               	addwfc	postinc2,f,c
 42552                           
 42553                           ;stkvar	_prod @ sp[(-13)+0]
 42554  01685A  50E1               	movf	fsr1l,w,c
 42555  01685C  0FF3               	addlw	-13
 42556  01685E  6ED9               	movwf	fsr2l,c
 42557  016860  50E2               	movf	fsr1h,w,c
 42558  016862  6EDA               	movwf	fsr2h,c
 42559  016864  0EFF               	movlw	255
 42560  016866  22DA               	addwfc	fsr2h,f,c
 42561                           
 42562                           ;stkvar	_temp @ sp[(-13)+8]
 42563  016868  0EFC               	movlw	252
 42564  01686A  24E1               	addwf	fsr1l,w,c
 42565  01686C  6EE9               	movwf	fsr0l,c
 42566  01686E  0EFF               	movlw	255
 42567  016870  20E2               	addwfc	fsr1h,w,c
 42568  016872  6EEA               	movwf	fsr0h,c
 42569  016874  50EF               	movf	indf0,w,c
 42570  016876  26DE               	addwf	postinc2,f,c
 42571  016878  0E00               	movlw	0
 42572  01687A  22DE               	addwfc	postinc2,f,c
 42573  01687C  22DE               	addwfc	postinc2,f,c
 42574  01687E  22DE               	addwfc	postinc2,f,c
 42575                           
 42576                           ;stkvar	_b @ sp[(-13)+-4]
 42577  016880  0EF1               	movlw	241
 42578  016882  24E1               	addwf	fsr1l,w,c
 42579  016884  6ED9               	movwf	fsr2l,c
 42580  016886  0EFF               	movlw	255
 42581  016888  20E2               	addwfc	fsr1h,w,c
 42582  01688A  6EDA               	movwf	fsr2h,c
 42583  01688C  50DF               	movf	indf2,w,c
 42584  01688E  6E35               	movwf	(btemp+11)^0,c
 42585                           
 42586                           ;stkvar	_a @ sp[(-13)+-8]
 42587  016890  0EEB               	movlw	-21
 42588  016892  50E3               	movf	plusw1,w,c
 42589  016894  0235               	mulwf	(btemp+11)^0,c
 42590                           
 42591                           ;stkvar	_temp @ sp[(-13)+8]
 42592  016896  0EFB               	movlw	-5
 42593  016898  006F FFCF FFE3     	movff	prodl,plusw1
 42594  01689E  0EFC               	movlw	-4
 42595  0168A0  006F FFD3 FFE3     	movff	prodh,plusw1
 42596                           
 42597                           ;stkvar	_grs @ sp[(-13)+4]
 42598  0168A6  50E1               	movf	fsr1l,w,c
 42599  0168A8  0FF7               	addlw	-9
 42600  0168AA  6ED9               	movwf	fsr2l,c
 42601  0168AC  50E2               	movf	fsr1h,w,c
 42602  0168AE  6EDA               	movwf	fsr2h,c
 42603  0168B0  0EFF               	movlw	255
 42604  0168B2  22DA               	addwfc	fsr2h,f,c
 42605                           
 42606                           ;stkvar	_temp @ sp[(-13)+8]
 42607  0168B4  0EFB               	movlw	-5
 42608  0168B6  50E3               	movf	plusw1,w,c
 42609  0168B8  26DE               	addwf	postinc2,f,c
 42610  0168BA  0E00               	movlw	0
 42611  0168BC  22DE               	addwfc	postinc2,f,c
 42612  0168BE  22DE               	addwfc	postinc2,f,c
 42613  0168C0  22DE               	addwfc	postinc2,f,c
 42614                           
 42615                           ;stkvar	_prod @ sp[(-13)+0]
 42616  0168C2  50E1               	movf	fsr1l,w,c
 42617  0168C4  0FF3               	addlw	-13
 42618  0168C6  6ED9               	movwf	fsr2l,c
 42619  0168C8  50E2               	movf	fsr1h,w,c
 42620  0168CA  6EDA               	movwf	fsr2h,c
 42621  0168CC  0EFF               	movlw	255
 42622  0168CE  22DA               	addwfc	fsr2h,f,c
 42623                           
 42624                           ;stkvar	_temp @ sp[(-13)+8]
 42625  0168D0  0EFC               	movlw	252
 42626  0168D2  24E1               	addwf	fsr1l,w,c
 42627  0168D4  6EE9               	movwf	fsr0l,c
 42628  0168D6  0EFF               	movlw	255
 42629  0168D8  20E2               	addwfc	fsr1h,w,c
 42630  0168DA  6EEA               	movwf	fsr0h,c
 42631  0168DC  50EF               	movf	indf0,w,c
 42632  0168DE  26DE               	addwf	postinc2,f,c
 42633  0168E0  0E00               	movlw	0
 42634  0168E2  22DE               	addwfc	postinc2,f,c
 42635  0168E4  22DE               	addwfc	postinc2,f,c
 42636  0168E6  22DE               	addwfc	postinc2,f,c
 42637                           
 42638                           ;stkvar	_grs @ sp[(-13)+4]
 42639  0168E8  50E1               	movf	fsr1l,w,c
 42640  0168EA  0FF7               	addlw	-9
 42641  0168EC  6ED9               	movwf	fsr2l,c
 42642  0168EE  50E2               	movf	fsr1h,w,c
 42643  0168F0  6EDA               	movwf	fsr2h,c
 42644  0168F2  0EFF               	movlw	255
 42645  0168F4  22DA               	addwfc	fsr2h,f,c
 42646  0168F6  0E08               	movlw	8
 42647  0168F8                     u8655:
 42648  0168F8  90D8               	bcf	status,0,c
 42649  0168FA  36DE               	rlcf	postinc2,f,c
 42650  0168FC  36DE               	rlcf	postinc2,f,c
 42651  0168FE  36DE               	rlcf	postinc2,f,c
 42652  016900  36DD               	rlcf	postdec2,f,c
 42653  016902  52DD               	movf	postdec2,f,c
 42654  016904  52DD               	movf	postdec2,f,c
 42655  016906  2EE8               	decfsz	wreg,f,c
 42656  016908  D7F7               	goto	u8655
 42657                           
 42658                           ;stkvar	_b @ sp[(-13)+-4]
 42659  01690A  0EF0               	movlw	240
 42660  01690C  24E1               	addwf	fsr1l,w,c
 42661  01690E  6ED9               	movwf	fsr2l,c
 42662  016910  0EFF               	movlw	255
 42663  016912  20E2               	addwfc	fsr1h,w,c
 42664  016914  6EDA               	movwf	fsr2h,c
 42665  016916  50DF               	movf	indf2,w,c
 42666  016918  6E35               	movwf	(btemp+11)^0,c
 42667                           
 42668                           ;stkvar	_a @ sp[(-13)+-8]
 42669  01691A  0EEB               	movlw	-21
 42670  01691C  50E3               	movf	plusw1,w,c
 42671  01691E  0235               	mulwf	(btemp+11)^0,c
 42672                           
 42673                           ;stkvar	_temp @ sp[(-13)+8]
 42674  016920  0EFB               	movlw	-5
 42675  016922  006F FFCF FFE3     	movff	prodl,plusw1
 42676  016928  0EFC               	movlw	-4
 42677  01692A  006F FFD3 FFE3     	movff	prodh,plusw1
 42678                           
 42679                           ;stkvar	_temp @ sp[(-13)+8]
 42680  016930  0EFB               	movlw	-5
 42681  016932  006F FF8C  F034    	movff	plusw1,btemp+10
 42682  016938  0EFC               	movlw	-4
 42683  01693A  006F FF8C  F035    	movff	plusw1,btemp+11
 42684                           
 42685                           ;stkvar	_grs @ sp[(-13)+4]
 42686  016940  50E1               	movf	fsr1l,w,c
 42687  016942  0FF7               	addlw	-9
 42688  016944  6ED9               	movwf	fsr2l,c
 42689  016946  50E2               	movf	fsr1h,w,c
 42690  016948  6EDA               	movwf	fsr2h,c
 42691  01694A  0EFF               	movlw	255
 42692  01694C  22DA               	addwfc	fsr2h,f,c
 42693  01694E  5034               	movf	(btemp+10)^0,w,c
 42694  016950  26DE               	addwf	postinc2,f,c
 42695  016952  5035               	movf	(btemp+11)^0,w,c
 42696  016954  22DE               	addwfc	postinc2,f,c
 42697  016956  0E00               	movlw	0
 42698  016958  22DE               	addwfc	postinc2,f,c
 42699  01695A  22DE               	addwfc	postinc2,f,c
 42700                           
 42701                           ;stkvar	_b @ sp[(-13)+-4]
 42702  01695C  0EEF               	movlw	-17
 42703  01695E  006F FF8C  F035    	movff	plusw1,btemp+11
 42704                           
 42705                           ;stkvar	_a @ sp[(-13)+-8]
 42706  016964  0EEC               	movlw	236
 42707  016966  24E1               	addwf	fsr1l,w,c
 42708  016968  6ED9               	movwf	fsr2l,c
 42709  01696A  0EFF               	movlw	255
 42710  01696C  20E2               	addwfc	fsr1h,w,c
 42711  01696E  6EDA               	movwf	fsr2h,c
 42712  016970  50DF               	movf	indf2,w,c
 42713  016972  0235               	mulwf	(btemp+11)^0,c
 42714                           
 42715                           ;stkvar	_temp @ sp[(-13)+8]
 42716  016974  0EFB               	movlw	-5
 42717  016976  006F FFCF FFE3     	movff	prodl,plusw1
 42718  01697C  0EFC               	movlw	-4
 42719  01697E  006F FFD3 FFE3     	movff	prodh,plusw1
 42720                           
 42721                           ;stkvar	_temp @ sp[(-13)+8]
 42722  016984  0EFB               	movlw	-5
 42723  016986  006F FF8C  F034    	movff	plusw1,btemp+10
 42724  01698C  0EFC               	movlw	-4
 42725  01698E  006F FF8C  F035    	movff	plusw1,btemp+11
 42726                           
 42727                           ;stkvar	_grs @ sp[(-13)+4]
 42728  016994  50E1               	movf	fsr1l,w,c
 42729  016996  0FF7               	addlw	-9
 42730  016998  6ED9               	movwf	fsr2l,c
 42731  01699A  50E2               	movf	fsr1h,w,c
 42732  01699C  6EDA               	movwf	fsr2h,c
 42733  01699E  0EFF               	movlw	255
 42734  0169A0  22DA               	addwfc	fsr2h,f,c
 42735  0169A2  5034               	movf	(btemp+10)^0,w,c
 42736  0169A4  26DE               	addwf	postinc2,f,c
 42737  0169A6  5035               	movf	(btemp+11)^0,w,c
 42738  0169A8  22DE               	addwfc	postinc2,f,c
 42739  0169AA  0E00               	movlw	0
 42740  0169AC  22DE               	addwfc	postinc2,f,c
 42741  0169AE  22DE               	addwfc	postinc2,f,c
 42742                           
 42743                           ;stkvar	_grs @ sp[(-13)+4]
 42744  0169B0  50E1               	movf	fsr1l,w,c
 42745  0169B2  0FF7               	addlw	-9
 42746  0169B4  6ED9               	movwf	fsr2l,c
 42747  0169B6  50E2               	movf	fsr1h,w,c
 42748  0169B8  6EDA               	movwf	fsr2h,c
 42749  0169BA  0EFF               	movlw	255
 42750  0169BC  22DA               	addwfc	fsr2h,f,c
 42751  0169BE  0E08               	movlw	8
 42752  0169C0                     u8665:
 42753  0169C0  90D8               	bcf	status,0,c
 42754  0169C2  36DE               	rlcf	postinc2,f,c
 42755  0169C4  36DE               	rlcf	postinc2,f,c
 42756  0169C6  36DE               	rlcf	postinc2,f,c
 42757  0169C8  36DD               	rlcf	postdec2,f,c
 42758  0169CA  52DD               	movf	postdec2,f,c
 42759  0169CC  52DD               	movf	postdec2,f,c
 42760  0169CE  2EE8               	decfsz	wreg,f,c
 42761  0169D0  D7F7               	goto	u8665
 42762                           
 42763                           ;stkvar	_b @ sp[(-13)+-4]
 42764  0169D2  0EEF               	movlw	-17
 42765  0169D4  006F FF8C  F035    	movff	plusw1,btemp+11
 42766                           
 42767                           ;stkvar	_a @ sp[(-13)+-8]
 42768  0169DA  0EEB               	movlw	-21
 42769  0169DC  50E3               	movf	plusw1,w,c
 42770  0169DE  0235               	mulwf	(btemp+11)^0,c
 42771                           
 42772                           ;stkvar	_temp @ sp[(-13)+8]
 42773  0169E0  0EFB               	movlw	-5
 42774  0169E2  006F FFCF FFE3     	movff	prodl,plusw1
 42775  0169E8  0EFC               	movlw	-4
 42776  0169EA  006F FFD3 FFE3     	movff	prodh,plusw1
 42777                           
 42778                           ;stkvar	_temp @ sp[(-13)+8]
 42779  0169F0  0EFB               	movlw	-5
 42780  0169F2  006F FF8C  F034    	movff	plusw1,btemp+10
 42781  0169F8  0EFC               	movlw	-4
 42782  0169FA  006F FF8C  F035    	movff	plusw1,btemp+11
 42783                           
 42784                           ;stkvar	_grs @ sp[(-13)+4]
 42785  016A00  50E1               	movf	fsr1l,w,c
 42786  016A02  0FF7               	addlw	-9
 42787  016A04  6ED9               	movwf	fsr2l,c
 42788  016A06  50E2               	movf	fsr1h,w,c
 42789  016A08  6EDA               	movwf	fsr2h,c
 42790  016A0A  0EFF               	movlw	255
 42791  016A0C  22DA               	addwfc	fsr2h,f,c
 42792  016A0E  5034               	movf	(btemp+10)^0,w,c
 42793  016A10  26DE               	addwf	postinc2,f,c
 42794  016A12  5035               	movf	(btemp+11)^0,w,c
 42795  016A14  22DE               	addwfc	postinc2,f,c
 42796  016A16  0E00               	movlw	0
 42797  016A18  22DE               	addwfc	postinc2,f,c
 42798  016A1A  22DE               	addwfc	postinc2,f,c
 42799                           
 42800                           ;stkvar	_b @ sp[(-13)+-4]
 42801  016A1C  0EF0               	movlw	240
 42802  016A1E  24E1               	addwf	fsr1l,w,c
 42803  016A20  6ED9               	movwf	fsr2l,c
 42804  016A22  0EFF               	movlw	255
 42805  016A24  20E2               	addwfc	fsr1h,w,c
 42806  016A26  6EDA               	movwf	fsr2h,c
 42807  016A28  50DF               	movf	indf2,w,c
 42808  016A2A  6E35               	movwf	(btemp+11)^0,c
 42809                           
 42810                           ;stkvar	_a @ sp[(-13)+-8]
 42811  016A2C  0EED               	movlw	237
 42812  016A2E  24E1               	addwf	fsr1l,w,c
 42813  016A30  6ED9               	movwf	fsr2l,c
 42814  016A32  0EFF               	movlw	255
 42815  016A34  20E2               	addwfc	fsr1h,w,c
 42816  016A36  6EDA               	movwf	fsr2h,c
 42817  016A38  50DF               	movf	indf2,w,c
 42818  016A3A  0235               	mulwf	(btemp+11)^0,c
 42819                           
 42820                           ;stkvar	_temp @ sp[(-13)+8]
 42821  016A3C  0EFB               	movlw	-5
 42822  016A3E  006F FFCF FFE3     	movff	prodl,plusw1
 42823  016A44  0EFC               	movlw	-4
 42824  016A46  006F FFD3 FFE3     	movff	prodh,plusw1
 42825                           
 42826                           ;stkvar	_temp @ sp[(-13)+8]
 42827  016A4C  0EFB               	movlw	-5
 42828  016A4E  006F FF8C  F034    	movff	plusw1,btemp+10
 42829  016A54  0EFC               	movlw	-4
 42830  016A56  006F FF8C  F035    	movff	plusw1,btemp+11
 42831                           
 42832                           ;stkvar	_prod @ sp[(-13)+0]
 42833  016A5C  50E1               	movf	fsr1l,w,c
 42834  016A5E  0FF3               	addlw	-13
 42835  016A60  6ED9               	movwf	fsr2l,c
 42836  016A62  50E2               	movf	fsr1h,w,c
 42837  016A64  6EDA               	movwf	fsr2h,c
 42838  016A66  0EFF               	movlw	255
 42839  016A68  22DA               	addwfc	fsr2h,f,c
 42840  016A6A  5034               	movf	(btemp+10)^0,w,c
 42841  016A6C  26DE               	addwf	postinc2,f,c
 42842  016A6E  5035               	movf	(btemp+11)^0,w,c
 42843  016A70  22DE               	addwfc	postinc2,f,c
 42844  016A72  0E00               	movlw	0
 42845  016A74  22DE               	addwfc	postinc2,f,c
 42846  016A76  22DE               	addwfc	postinc2,f,c
 42847                           
 42848                           ;stkvar	_b @ sp[(-13)+-4]
 42849  016A78  0EF1               	movlw	241
 42850  016A7A  24E1               	addwf	fsr1l,w,c
 42851  016A7C  6ED9               	movwf	fsr2l,c
 42852  016A7E  0EFF               	movlw	255
 42853  016A80  20E2               	addwfc	fsr1h,w,c
 42854  016A82  6EDA               	movwf	fsr2h,c
 42855  016A84  50DF               	movf	indf2,w,c
 42856  016A86  6E35               	movwf	(btemp+11)^0,c
 42857                           
 42858                           ;stkvar	_a @ sp[(-13)+-8]
 42859  016A88  0EEC               	movlw	236
 42860  016A8A  24E1               	addwf	fsr1l,w,c
 42861  016A8C  6ED9               	movwf	fsr2l,c
 42862  016A8E  0EFF               	movlw	255
 42863  016A90  20E2               	addwfc	fsr1h,w,c
 42864  016A92  6EDA               	movwf	fsr2h,c
 42865  016A94  50DF               	movf	indf2,w,c
 42866  016A96  0235               	mulwf	(btemp+11)^0,c
 42867                           
 42868                           ;stkvar	_temp @ sp[(-13)+8]
 42869  016A98  0EFB               	movlw	-5
 42870  016A9A  006F FFCF FFE3     	movff	prodl,plusw1
 42871  016AA0  0EFC               	movlw	-4
 42872  016AA2  006F FFD3 FFE3     	movff	prodh,plusw1
 42873                           
 42874                           ;stkvar	_temp @ sp[(-13)+8]
 42875  016AA8  0EFB               	movlw	-5
 42876  016AAA  006F FF8C  F034    	movff	plusw1,btemp+10
 42877  016AB0  0EFC               	movlw	-4
 42878  016AB2  006F FF8C  F035    	movff	plusw1,btemp+11
 42879                           
 42880                           ;stkvar	_prod @ sp[(-13)+0]
 42881  016AB8  50E1               	movf	fsr1l,w,c
 42882  016ABA  0FF3               	addlw	-13
 42883  016ABC  6ED9               	movwf	fsr2l,c
 42884  016ABE  50E2               	movf	fsr1h,w,c
 42885  016AC0  6EDA               	movwf	fsr2h,c
 42886  016AC2  0EFF               	movlw	255
 42887  016AC4  22DA               	addwfc	fsr2h,f,c
 42888  016AC6  5034               	movf	(btemp+10)^0,w,c
 42889  016AC8  26DE               	addwf	postinc2,f,c
 42890  016ACA  5035               	movf	(btemp+11)^0,w,c
 42891  016ACC  22DE               	addwfc	postinc2,f,c
 42892  016ACE  0E00               	movlw	0
 42893  016AD0  22DE               	addwfc	postinc2,f,c
 42894  016AD2  22DE               	addwfc	postinc2,f,c
 42895                           
 42896                           ;stkvar	_b @ sp[(-13)+-4]
 42897  016AD4  0EF1               	movlw	241
 42898  016AD6  24E1               	addwf	fsr1l,w,c
 42899  016AD8  6ED9               	movwf	fsr2l,c
 42900  016ADA  0EFF               	movlw	255
 42901  016ADC  20E2               	addwfc	fsr1h,w,c
 42902  016ADE  6EDA               	movwf	fsr2h,c
 42903  016AE0  50DF               	movf	indf2,w,c
 42904  016AE2  6E35               	movwf	(btemp+11)^0,c
 42905                           
 42906                           ;stkvar	_a @ sp[(-13)+-8]
 42907  016AE4  0EED               	movlw	237
 42908  016AE6  24E1               	addwf	fsr1l,w,c
 42909  016AE8  6ED9               	movwf	fsr2l,c
 42910  016AEA  0EFF               	movlw	255
 42911  016AEC  20E2               	addwfc	fsr1h,w,c
 42912  016AEE  6EDA               	movwf	fsr2h,c
 42913  016AF0  50DF               	movf	indf2,w,c
 42914  016AF2  0235               	mulwf	(btemp+11)^0,c
 42915                           
 42916                           ;stkvar	_temp @ sp[(-13)+8]
 42917  016AF4  0EFB               	movlw	-5
 42918  016AF6  006F FFCF FFE3     	movff	prodl,plusw1
 42919  016AFC  0EFC               	movlw	-4
 42920  016AFE  006F FFD3 FFE3     	movff	prodh,plusw1
 42921                           
 42922                           ;stkvar	_temp @ sp[(-13)+8]
 42923  016B04  0EFB               	movlw	-5
 42924  016B06  006F FF8C  F034    	movff	plusw1,btemp+10
 42925  016B0C  0EFC               	movlw	-4
 42926  016B0E  006F FF8C  F035    	movff	plusw1,btemp+11
 42927  016B14  5034               	movf	(btemp+10)^0,w,c
 42928  016B16  6E2E               	movwf	(btemp+4)^0,c
 42929  016B18  5035               	movf	(btemp+11)^0,w,c
 42930  016B1A  6E2F               	movwf	(btemp+5)^0,c
 42931  016B1C  6A30               	clrf	(btemp+6)^0,c
 42932  016B1E  6A31               	clrf	(btemp+7)^0,c
 42933  016B20  0060  F0C0  F031   	movff	btemp+6,btemp+7
 42934  016B26  0060  F0BC  F030   	movff	btemp+5,btemp+6
 42935  016B2C  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 42936  016B32  6A2E               	clrf	(btemp+4)^0,c
 42937                           
 42938                           ;stkvar	_prod @ sp[(-13)+0]
 42939  016B34  50E1               	movf	fsr1l,w,c
 42940  016B36  0FF3               	addlw	-13
 42941  016B38  6ED9               	movwf	fsr2l,c
 42942  016B3A  50E2               	movf	fsr1h,w,c
 42943  016B3C  6EDA               	movwf	fsr2h,c
 42944  016B3E  0EFF               	movlw	255
 42945  016B40  22DA               	addwfc	fsr2h,f,c
 42946  016B42  502E               	movf	(btemp+4)^0,w,c
 42947  016B44  26DE               	addwf	postinc2,f,c
 42948  016B46  502F               	movf	(btemp+5)^0,w,c
 42949  016B48  22DE               	addwfc	postinc2,f,c
 42950  016B4A  5030               	movf	(btemp+6)^0,w,c
 42951  016B4C  22DE               	addwfc	postinc2,f,c
 42952  016B4E  5031               	movf	(btemp+7)^0,w,c
 42953  016B50  22DE               	addwfc	postinc2,f,c
 42954                           
 42955                           ;stkvar	_prod @ sp[(-13)+0]
 42956  016B52  50E1               	movf	fsr1l,w,c
 42957  016B54  0FF3               	addlw	-13
 42958  016B56  6ED9               	movwf	fsr2l,c
 42959  016B58  50E2               	movf	fsr1h,w,c
 42960  016B5A  6EDA               	movwf	fsr2h,c
 42961  016B5C  0EFF               	movlw	255
 42962  016B5E  22DA               	addwfc	fsr2h,f,c
 42963                           
 42964                           ;stkvar	_grs @ sp[(-13)+4]
 42965  016B60  0EFA               	movlw	250
 42966  016B62  24E1               	addwf	fsr1l,w,c
 42967  016B64  6EE9               	movwf	fsr0l,c
 42968  016B66  0EFF               	movlw	255
 42969  016B68  20E2               	addwfc	fsr1h,w,c
 42970  016B6A  6EEA               	movwf	fsr0h,c
 42971  016B6C  50EF               	movf	indf0,w,c
 42972  016B6E  26DE               	addwf	postinc2,f,c
 42973  016B70  0E00               	movlw	0
 42974  016B72  22DE               	addwfc	postinc2,f,c
 42975  016B74  22DE               	addwfc	postinc2,f,c
 42976  016B76  22DE               	addwfc	postinc2,f,c
 42977                           
 42978                           ;stkvar	_grs @ sp[(-13)+4]
 42979  016B78  50E1               	movf	fsr1l,w,c
 42980  016B7A  0FF7               	addlw	-9
 42981  016B7C  6ED9               	movwf	fsr2l,c
 42982  016B7E  50E2               	movf	fsr1h,w,c
 42983  016B80  6EDA               	movwf	fsr2h,c
 42984  016B82  0EFF               	movlw	255
 42985  016B84  22DA               	addwfc	fsr2h,f,c
 42986  016B86  0E08               	movlw	8
 42987  016B88                     u8675:
 42988  016B88  90D8               	bcf	status,0,c
 42989  016B8A  36DE               	rlcf	postinc2,f,c
 42990  016B8C  36DE               	rlcf	postinc2,f,c
 42991  016B8E  36DE               	rlcf	postinc2,f,c
 42992  016B90  36DD               	rlcf	postdec2,f,c
 42993  016B92  52DD               	movf	postdec2,f,c
 42994  016B94  52DD               	movf	postdec2,f,c
 42995  016B96  2EE8               	decfsz	wreg,f,c
 42996  016B98  D7F7               	goto	u8675
 42997  016B9A  0E82               	movlw	130
 42998  016B9C  6E34               	movwf	(btemp+10)^0,c
 42999  016B9E  0EFF               	movlw	255
 43000  016BA0  6E35               	movwf	(btemp+11)^0,c
 43001                           
 43002                           ;stkvar	_bexp @ sp[(-13)+10]
 43003  016BA2  0EFD               	movlw	-3
 43004  016BA4  50E3               	movf	plusw1,w,c
 43005  016BA6  6E32               	movwf	(btemp+8)^0,c
 43006  016BA8  6A33               	clrf	(btemp+9)^0,c
 43007                           
 43008                           ;stkvar	_aexp @ sp[(-13)+11]
 43009  016BAA  0EFE               	movlw	-2
 43010  016BAC  50E3               	movf	plusw1,w,c
 43011  016BAE  2632               	addwf	(btemp+8)^0,f,c
 43012  016BB0  0E00               	movlw	0
 43013  016BB2  2233               	addwfc	(btemp+9)^0,f,c
 43014  016BB4  5034               	movf	(btemp+10)^0,w,c
 43015  016BB6  2632               	addwf	(btemp+8)^0,f,c
 43016  016BB8  5035               	movf	(btemp+11)^0,w,c
 43017  016BBA  2233               	addwfc	(btemp+9)^0,f,c
 43018                           
 43019                           ;stkvar	_temp @ sp[(-13)+8]
 43020  016BBC  0EFB               	movlw	-5
 43021  016BBE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43022  016BC4  0EFC               	movlw	-4
 43023  016BC6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43024  016BCC  D021               	goto	l10564
 43025  016BCE                     l10554:
 43026                           
 43027                           ;stkvar	_prod @ sp[(-13)+0]
 43028  016BCE  90D8               	bcf	status,0,c
 43029  016BD0  0EF3               	movlw	-13
 43030  016BD2  36E3               	rlcf	plusw1,f,c
 43031  016BD4  0EF4               	movlw	-12
 43032  016BD6  36E3               	rlcf	plusw1,f,c
 43033  016BD8  0EF5               	movlw	-11
 43034  016BDA  36E3               	rlcf	plusw1,f,c
 43035  016BDC  0EF6               	movlw	-10
 43036  016BDE  36E3               	rlcf	plusw1,f,c
 43037                           
 43038                           ;stkvar	_grs @ sp[(-13)+4]
 43039  016BE0  0EFA               	movlw	-6
 43040  016BE2  AEE3               	btfss	plusw1,7,c
 43041  016BE4  D002               	goto	l10560
 43042                           
 43043                           ;stkvar	_prod @ sp[(-13)+0]
 43044  016BE6  0EF3               	movlw	-13
 43045  016BE8  80E3               	bsf	plusw1,0,c
 43046  016BEA                     l10560:
 43047                           
 43048                           ;stkvar	_grs @ sp[(-13)+4]
 43049  016BEA  90D8               	bcf	status,0,c
 43050  016BEC  0EF7               	movlw	-9
 43051  016BEE  36E3               	rlcf	plusw1,f,c
 43052  016BF0  0EF8               	movlw	-8
 43053  016BF2  36E3               	rlcf	plusw1,f,c
 43054  016BF4  0EF9               	movlw	-7
 43055  016BF6  36E3               	rlcf	plusw1,f,c
 43056  016BF8  0EFA               	movlw	-6
 43057  016BFA  36E3               	rlcf	plusw1,f,c
 43058                           
 43059                           ;stkvar	_temp @ sp[(-13)+8]
 43060  016BFC  50E1               	movf	fsr1l,w,c
 43061  016BFE  0FFB               	addlw	-5
 43062  016C00  6ED9               	movwf	fsr2l,c
 43063  016C02  50E2               	movf	fsr1h,w,c
 43064  016C04  6EDA               	movwf	fsr2h,c
 43065  016C06  0EFF               	movlw	255
 43066  016C08  22DA               	addwfc	fsr2h,f,c
 43067  016C0A  06DE               	decf	postinc2,f,c
 43068  016C0C  0E00               	movlw	0
 43069  016C0E  5ADD               	subwfb	postdec2,f,c
 43070  016C10                     l10564:
 43071                           
 43072                           ;stkvar	_prod @ sp[(-13)+0]
 43073  016C10  0EF5               	movlw	-11
 43074  016C12  AEE3               	btfss	plusw1,7,c
 43075  016C14  D7DC               	goto	l10554
 43076                           
 43077                           ;stkvar	_aexp @ sp[(-13)+11]
 43078  016C16  0EFE               	movlw	-2
 43079  016C18  6AE3               	clrf	plusw1,c
 43080                           
 43081                           ;stkvar	_grs @ sp[(-13)+4]
 43082  016C1A  0EFA               	movlw	-6
 43083  016C1C  AEE3               	btfss	plusw1,7,c
 43084  016C1E  D020               	goto	l10578
 43085                           
 43086                           ;stkvar	_grs @ sp[(-13)+4]
 43087  016C20  50E1               	movf	fsr1l,w,c
 43088  016C22  0FF7               	addlw	-9
 43089  016C24  6ED9               	movwf	fsr2l,c
 43090  016C26  50E2               	movf	fsr1h,w,c
 43091  016C28  6EDA               	movwf	fsr2h,c
 43092  016C2A  0EFF               	movlw	255
 43093  016C2C  22DA               	addwfc	fsr2h,f,c
 43094  016C2E  0EFF               	movlw	255
 43095  016C30  14DE               	andwf	postinc2,w,c
 43096  016C32  6E32               	movwf	(btemp+8)^0,c
 43097  016C34  0EFF               	movlw	255
 43098  016C36  14DE               	andwf	postinc2,w,c
 43099  016C38  6E33               	movwf	(btemp+9)^0,c
 43100  016C3A  0EFF               	movlw	255
 43101  016C3C  14DE               	andwf	postinc2,w,c
 43102  016C3E  6E34               	movwf	(btemp+10)^0,c
 43103  016C40  0E7F               	movlw	127
 43104  016C42  14DE               	andwf	postinc2,w,c
 43105  016C44  6E35               	movwf	(btemp+11)^0,c
 43106  016C46  5032               	movf	(btemp+8)^0,w,c
 43107  016C48  1033               	iorwf	(btemp+9)^0,w,c
 43108  016C4A  1034               	iorwf	(btemp+10)^0,w,c
 43109  016C4C  1035               	iorwf	(btemp+11)^0,w,c
 43110  016C4E  B4D8               	btfsc	status,2,c
 43111  016C50  D004               	goto	l10574
 43112  016C52                     u8710:
 43113                           
 43114                           ;stkvar	_aexp @ sp[(-13)+11]
 43115  016C52  0EFE               	movlw	-2
 43116  016C54  6AE3               	clrf	plusw1,c
 43117  016C56  2AE3               	incf	plusw1,f,c
 43118  016C58  D003               	goto	l10578
 43119  016C5A                     l10574:
 43120                           
 43121                           ;stkvar	_prod @ sp[(-13)+0]
 43122  016C5A  0EF3               	movlw	-13
 43123  016C5C  B0E3               	btfsc	plusw1,0,c
 43124  016C5E  D7F9               	goto	u8710
 43125  016C60                     l10578:
 43126                           
 43127                           ;stkvar	_aexp @ sp[(-13)+11]
 43128  016C60  0EFE               	movlw	-2
 43129  016C62  50E3               	movf	plusw1,w,c
 43130  016C64  B4D8               	btfsc	status,2,c
 43131  016C66  D036               	goto	l10588
 43132                           
 43133                           ;stkvar	_prod @ sp[(-13)+0]
 43134  016C68  50E1               	movf	fsr1l,w,c
 43135  016C6A  0FF3               	addlw	-13
 43136  016C6C  6ED9               	movwf	fsr2l,c
 43137  016C6E  50E2               	movf	fsr1h,w,c
 43138  016C70  6EDA               	movwf	fsr2h,c
 43139  016C72  0EFF               	movlw	255
 43140  016C74  22DA               	addwfc	fsr2h,f,c
 43141  016C76  2ADE               	incf	postinc2,f,c
 43142  016C78  0E00               	movlw	0
 43143  016C7A  22DE               	addwfc	postinc2,f,c
 43144  016C7C  22DE               	addwfc	postinc2,f,c
 43145  016C7E  22DE               	addwfc	postinc2,f,c
 43146                           
 43147                           ;stkvar	_prod @ sp[(-13)+0]
 43148  016C80  0EF6               	movlw	-10
 43149  016C82  A0E3               	btfss	plusw1,0,c
 43150  016C84  D027               	goto	l10588
 43151  016C86  0E01               	movlw	1
 43152  016C88  6E35               	movwf	(btemp+11)^0,c
 43153                           
 43154                           ;stkvar	_prod @ sp[(-13)+0]
 43155  016C8A  50E1               	movf	fsr1l,w,c
 43156  016C8C  0FF3               	addlw	-13
 43157  016C8E  6ED9               	movwf	fsr2l,c
 43158  016C90  50E2               	movf	fsr1h,w,c
 43159  016C92  6EDA               	movwf	fsr2h,c
 43160  016C94  0EFF               	movlw	255
 43161  016C96  22DA               	addwfc	fsr2h,f,c
 43162  016C98  2835               	incf	(btemp+11)^0,w,c
 43163  016C9A  52DE               	movf	postinc2,f,c
 43164  016C9C  D008               	goto	u8750
 43165  016C9E                     u8755:
 43166  016C9E  52DE               	movf	postinc2,f,c
 43167  016CA0  90D8               	bcf	status,0,c
 43168  016CA2  BEDC               	btfsc	preinc2,7,c
 43169  016CA4  80D8               	bsf	status,0,c
 43170  016CA6  32DD               	rrcf	postdec2,f,c
 43171  016CA8  32DD               	rrcf	postdec2,f,c
 43172  016CAA  32DD               	rrcf	postdec2,f,c
 43173  016CAC  32DE               	rrcf	postinc2,f,c
 43174  016CAE                     u8750:
 43175  016CAE  2EE8               	decfsz	wreg,f,c
 43176  016CB0  D7F6               	goto	u8755
 43177                           
 43178                           ;stkvar	_temp @ sp[(-13)+8]
 43179  016CB2  0EFB               	movlw	-5
 43180  016CB4  50E3               	movf	plusw1,w,c
 43181  016CB6  0F01               	addlw	1
 43182  016CB8  6E2A               	movwf	btemp^0,c
 43183  016CBA  0EFB               	movlw	-5
 43184  016CBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 43185  016CC2  6A2A               	clrf	btemp^0,c
 43186  016CC4  0EFC               	movlw	-4
 43187  016CC6  50E3               	movf	plusw1,w,c
 43188  016CC8  202A               	addwfc	btemp^0,w,c
 43189  016CCA  6E2A               	movwf	btemp^0,c
 43190  016CCC  0EFC               	movlw	-4
 43191  016CCE  0060  F0AB  FFE3   	movff	btemp,plusw1
 43192  016CD4                     l10588:
 43193                           
 43194                           ;stkvar	_temp @ sp[(-13)+8]
 43195  016CD4  0EFC               	movlw	-4
 43196  016CD6  BEE3               	btfsc	plusw1,7,c
 43197  016CD8  D020               	goto	l10592
 43198  016CDA  0EFC               	movlw	-4
 43199  016CDC  50E3               	movf	plusw1,w,c
 43200  016CDE  E104               	bnz	u8760
 43201  016CE0  0EFB               	movlw	-5
 43202  016CE2  28E3               	incf	plusw1,w,c
 43203  016CE4  A0D8               	btfss	status,0,c
 43204  016CE6  D019               	goto	l10592
 43205  016CE8                     u8760:
 43206  016CE8  0E00               	movlw	0
 43207  016CEA  6E32               	movwf	(btemp+8)^0,c
 43208  016CEC  0E00               	movlw	0
 43209  016CEE  6E33               	movwf	(btemp+9)^0,c
 43210  016CF0  0E80               	movlw	128
 43211  016CF2  6E34               	movwf	(btemp+10)^0,c
 43212  016CF4  0E7F               	movlw	127
 43213  016CF6  6E35               	movwf	(btemp+11)^0,c
 43214                           
 43215                           ;stkvar	_prod @ sp[(-13)+0]
 43216  016CF8  0EF3               	movlw	-13
 43217  016CFA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43218  016D00  0EF4               	movlw	-12
 43219  016D02  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43220  016D08  0EF5               	movlw	-11
 43221  016D0A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43222  016D10  0EF6               	movlw	-10
 43223  016D12  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43224  016D18  D044               	goto	l10608
 43225  016D1A                     l10592:
 43226                           
 43227                           ;stkvar	_temp @ sp[(-13)+8]
 43228  016D1A  0EFC               	movlw	-4
 43229  016D1C  BEE3               	btfsc	plusw1,7,c
 43230  016D1E  D007               	goto	u8770
 43231  016D20  0EFC               	movlw	-4
 43232  016D22  50E3               	movf	plusw1,w,c
 43233  016D24  E10F               	bnz	l10598
 43234  016D26  0EFB               	movlw	-5
 43235  016D28  04E3               	decf	plusw1,w,c
 43236  016D2A  B0D8               	btfsc	status,0,c
 43237  016D2C  D00B               	goto	l10598
 43238  016D2E                     u8770:
 43239                           
 43240                           ;stkvar	_prod @ sp[(-13)+0]
 43241  016D2E  0EF3               	movlw	-13
 43242  016D30  6AE3               	clrf	plusw1,c
 43243  016D32  0EF4               	movlw	-12
 43244  016D34  6AE3               	clrf	plusw1,c
 43245  016D36  0EF5               	movlw	-11
 43246  016D38  6AE3               	clrf	plusw1,c
 43247  016D3A  0EF6               	movlw	-10
 43248  016D3C  6AE3               	clrf	plusw1,c
 43249                           
 43250                           ;stkvar	_sign @ sp[(-13)+12]
 43251  016D3E  0EFF               	movlw	-1
 43252  016D40  6AE3               	clrf	plusw1,c
 43253  016D42  D02F               	goto	l10608
 43254  016D44                     l10598:
 43255                           
 43256                           ;stkvar	_temp @ sp[(-13)+8]
 43257                           ;stkvar	_bexp @ sp[(-13)+10]
 43258  016D44  0EFB               	movlw	-5
 43259  016D46  006F FF8C  F02A    	movff	plusw1,btemp
 43260  016D4C  0EFD               	movlw	-3
 43261  016D4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 43262                           
 43263                           ;stkvar	_prod @ sp[(-13)+0]
 43264  016D54  50E1               	movf	fsr1l,w,c
 43265  016D56  0FF3               	addlw	-13
 43266  016D58  6ED9               	movwf	fsr2l,c
 43267  016D5A  50E2               	movf	fsr1h,w,c
 43268  016D5C  6EDA               	movwf	fsr2h,c
 43269  016D5E  0EFF               	movlw	255
 43270  016D60  22DA               	addwfc	fsr2h,f,c
 43271  016D62  0EFF               	movlw	255
 43272  016D64  16DE               	andwf	postinc2,f,c
 43273  016D66  0EFF               	movlw	255
 43274  016D68  16DE               	andwf	postinc2,f,c
 43275  016D6A  0E7F               	movlw	127
 43276  016D6C  16DE               	andwf	postinc2,f,c
 43277  016D6E  0E00               	movlw	0
 43278  016D70  16DE               	andwf	postinc2,f,c
 43279                           
 43280                           ;stkvar	_bexp @ sp[(-13)+10]
 43281  016D72  0EFD               	movlw	-3
 43282  016D74  A0E3               	btfss	plusw1,0,c
 43283  016D76  D008               	goto	l10606
 43284                           
 43285                           ;stkvar	_prod @ sp[(-13)+0]
 43286  016D78  0EF5               	movlw	245
 43287  016D7A  24E1               	addwf	fsr1l,w,c
 43288  016D7C  6ED9               	movwf	fsr2l,c
 43289  016D7E  0EFF               	movlw	255
 43290  016D80  20E2               	addwfc	fsr1h,w,c
 43291  016D82  6EDA               	movwf	fsr2h,c
 43292  016D84  0E00               	movlw	0
 43293  016D86  8EDB               	bsf	plusw2,7,c
 43294  016D88                     l10606:
 43295                           
 43296                           ;stkvar	_prod @ sp[(-13)+0]
 43297  016D88  0EF6               	movlw	246
 43298  016D8A  24E1               	addwf	fsr1l,w,c
 43299  016D8C  6ED9               	movwf	fsr2l,c
 43300  016D8E  0EFF               	movlw	255
 43301  016D90  20E2               	addwfc	fsr1h,w,c
 43302  016D92  6EDA               	movwf	fsr2h,c
 43303                           
 43304                           ;stkvar	_bexp @ sp[(-13)+10]
 43305  016D94  0EFD               	movlw	-3
 43306  016D96  006F FF8C  F035    	movff	plusw1,btemp+11
 43307  016D9C  90D8               	bcf	status,0,c
 43308  016D9E  3035               	rrcf	(btemp+11)^0,w,c
 43309  016DA0  6EDF               	movwf	indf2,c
 43310  016DA2                     l10608:
 43311                           
 43312                           ;stkvar	_sign @ sp[(-13)+12]
 43313  016DA2  0EFF               	movlw	-1
 43314  016DA4  006F FF8C  F035    	movff	plusw1,btemp+11
 43315                           
 43316                           ;stkvar	_prod @ sp[(-13)+0]
 43317  016DAA  0EF6               	movlw	246
 43318  016DAC  24E1               	addwf	fsr1l,w,c
 43319  016DAE  6ED9               	movwf	fsr2l,c
 43320  016DB0  0EFF               	movlw	255
 43321  016DB2  20E2               	addwfc	fsr1h,w,c
 43322  016DB4  6EDA               	movwf	fsr2h,c
 43323  016DB6  5035               	movf	(btemp+11)^0,w,c
 43324  016DB8  12DF               	iorwf	indf2,f,c
 43325                           
 43326                           ;stkvar	_prod @ sp[(-13)+0]
 43327  016DBA  0EF3               	movlw	-13
 43328  016DBC  006F FF8C  F02A    	movff	plusw1,btemp
 43329  016DC2  0EF4               	movlw	-12
 43330  016DC4  006F FF8C  F02B    	movff	plusw1,btemp+1
 43331  016DCA  0EF5               	movlw	-11
 43332  016DCC  006F FF8C  F02C    	movff	plusw1,btemp+2
 43333  016DD2  0EF6               	movlw	-10
 43334  016DD4  006F FF8C  F02D    	movff	plusw1,btemp+3
 43335  016DDA                     l3342:
 43336                           
 43337                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 43338  016DDA  0EEB               	movlw	235
 43339  016DDC  26E1               	addwf	fsr1l,f,c
 43340  016DDE  0EFF               	movlw	255
 43341  016DE0  22E2               	addwfc	fsr1h,f,c
 43342  016DE2  0012               	return		;funcret
 43343  016DE4                     __end_of___flmul:
 43344                           	opt callstack 0
 43345                           
 43346 ;; *************** function _SYSTEM_Initialize *****************
 43347 ;; Defined at:
 43348 ;;		line 50 in file "mcc_generated_files/mcc.c"
 43349 ;; Parameters:    Size  Location     Type
 43350 ;;		None
 43351 ;; Auto vars:     Size  Location     Type
 43352 ;;		None
 43353 ;; Return value:  Size  Location     Type
 43354 ;;                  1  [STACK] void 
 43355 ;; Registers used:
 43356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 43357 ;; Tracked objects:
 43358 ;;		On entry : 0/0
 43359 ;;		On exit  : 3F/3C
 43360 ;;		Unchanged: 0/0
 43361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43366 ;;Total ram usage:        0 bytes
 43367 ;; Hardware stack levels used:    1
 43368 ;; Hardware stack levels required when called:   17
 43369 ;; This function calls:
 43370 ;;		_ADCC_Initialize
 43371 ;;		_CLKREF_Initialize
 43372 ;;		_CRC_Initialize
 43373 ;;		_DMA1_Initialize
 43374 ;;		_DMA2_Initialize
 43375 ;;		_EXT_INT_Initialize
 43376 ;;		_FVR_Initialize
 43377 ;;		_INTERRUPT_Initialize
 43378 ;;		_OSCILLATOR_Initialize
 43379 ;;		_PIN_MANAGER_Initialize
 43380 ;;		_PMD_Initialize
 43381 ;;		_PWM8_Initialize
 43382 ;;		_SPI1_Initialize
 43383 ;;		_TMR2_Initialize
 43384 ;;		_TMR3_Initialize
 43385 ;;		_TMR5_Initialize
 43386 ;;		_TMR6_Initialize
 43387 ;;		_UART1_Initialize
 43388 ;;		_UART2_Initialize
 43389 ;; This function is called by:
 43390 ;;		_main
 43391 ;; This function uses a reentrant model
 43392 ;;
 43393                           
 43394                           	psect	text155
 43395  001B5C                     __ptext155:
 43396                           	opt callstack 0
 43397  001B5C                     _SYSTEM_Initialize:
 43398                           	opt callstack 13
 43399                           
 43400                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 43401                           
 43402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43403                           ;incstack = 0
 43404  001B5C  EC52  F00B         	call	_INTERRUPT_Initialize	;wreg free
 43405                           
 43406                           ; BSR set to: 57
 43407                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 43408  001B60  EC75  F014         	call	_PMD_Initialize	;wreg free
 43409                           
 43410                           ; BSR set to: 57
 43411                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 43412  001B64  ECC2  F007         	call	_PIN_MANAGER_Initialize	;wreg free
 43413                           
 43414                           ; BSR set to: 58
 43415                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 43416  001B68  EC6A  F014         	call	_OSCILLATOR_Initialize	;wreg free
 43417                           
 43418                           ; BSR set to: 57
 43419                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 43420  001B6C  EC11  F015         	call	_FVR_Initialize	;wreg free
 43421                           
 43422                           ; BSR set to: 62
 43423                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 43424  001B70  EC0B  F008         	call	_CRC_Initialize	;wreg free
 43425                           
 43426                           ; BSR set to: 0
 43427                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 43428  001B74  EC81  F00A         	call	_ADCC_Initialize	;wreg free
 43429                           
 43430                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 43431  001B78  EC3D  F014         	call	_TMR2_Initialize	;wreg free
 43432                           
 43433                           ; BSR set to: 57
 43434                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 43435  001B7C  EC5F  F014         	call	_PWM8_Initialize	;wreg free
 43436                           
 43437                           ; BSR set to: 63
 43438                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 43439  001B80  ECEE  F010         	call	_EXT_INT_Initialize	;wreg free
 43440                           
 43441                           ; BSR set to: 57
 43442                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 43443  001B84  ECDA  F011         	call	_TMR6_Initialize	;wreg free
 43444                           
 43445                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 43446  001B88  EC68  F00E         	call	_TMR3_Initialize	;wreg free
 43447                           
 43448                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 43449  001B8C  EC44  F00E         	call	_TMR5_Initialize	;wreg free
 43450                           
 43451                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 43452  001B90  EC20  F00E         	call	_UART1_Initialize	;wreg free
 43453                           
 43454                           ; BSR set to: 57
 43455                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 43456  001B94  EC4B  F00C         	call	_UART2_Initialize	;wreg free
 43457                           
 43458                           ; BSR set to: 57
 43459                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 43460  001B98  EC54  F014         	call	_SPI1_Initialize	;wreg free
 43461                           
 43462                           ; BSR set to: 61
 43463                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 43464  001B9C  EC04  F00D         	call	_DMA2_Initialize	;wreg free
 43465                           
 43466                           ; BSR set to: 59
 43467                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 43468  001BA0  EC4C  F00A         	call	_DMA1_Initialize	;wreg free
 43469                           
 43470                           ; BSR set to: 59
 43471                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 43472  001BA4  ECE5  F014         	call	_CLKREF_Initialize	;wreg free
 43473                           
 43474                           ; BSR set to: 60
 43475                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 43476  001BA8  0012               	return		;funcret
 43477  001BAA                     __end_of_SYSTEM_Initialize:
 43478                           	opt callstack 0
 43479                           
 43480 ;; *************** function _UART2_Initialize *****************
 43481 ;; Defined at:
 43482 ;;		line 78 in file "mcc_generated_files/uart2.c"
 43483 ;; Parameters:    Size  Location     Type
 43484 ;;		None
 43485 ;; Auto vars:     Size  Location     Type
 43486 ;;		None
 43487 ;; Return value:  Size  Location     Type
 43488 ;;                  1  [STACK] void 
 43489 ;; Registers used:
 43490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43491 ;; Tracked objects:
 43492 ;;		On entry : 3F/39
 43493 ;;		On exit  : 3F/39
 43494 ;;		Unchanged: 0/0
 43495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43500 ;;Total ram usage:        0 bytes
 43501 ;; Hardware stack levels used:    1
 43502 ;; Hardware stack levels required when called:   16
 43503 ;; This function calls:
 43504 ;;		_UART2_SetRxInterruptHandler
 43505 ;;		_UART2_SetTxInterruptHandler
 43506 ;; This function is called by:
 43507 ;;		_SYSTEM_Initialize
 43508 ;; This function uses a reentrant model
 43509 ;;
 43510                           
 43511                           	psect	text156
 43512  001896                     __ptext156:
 43513                           	opt callstack 0
 43514  001896                     _UART2_Initialize:
 43515                           	opt callstack 13
 43516                           
 43517                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 43518                           
 43519                           ; BSR set to: 60
 43520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43521                           ;incstack = 0
 43522  001896  0139               	movlb	57	; () banked
 43523  001898  9596               	bcf	150,2,b	;volatile
 43524                           
 43525                           ; BSR set to: 57
 43526                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 43527  00189A  0E96               	movlw	low _UART2_Receive_ISR
 43528  00189C  6EE6               	movwf	postinc1,c
 43529  00189E  0E27               	movlw	high _UART2_Receive_ISR
 43530  0018A0  6EE6               	movwf	postinc1,c
 43531  0018A2  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 43532  0018A4  6EE6               	movwf	postinc1,c
 43533  0018A6  EC2B  F012         	call	_UART2_SetRxInterruptHandler	;wreg free
 43534                           
 43535                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 43536  0018AA  0139               	movlb	57	; () banked
 43537  0018AC  9796               	bcf	150,3,b	;volatile
 43538                           
 43539                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 43540  0018AE  0E88               	movlw	low _UART2_Transmit_ISR
 43541  0018B0  6EE6               	movwf	postinc1,c
 43542  0018B2  0E23               	movlw	high _UART2_Transmit_ISR
 43543  0018B4  6EE6               	movwf	postinc1,c
 43544  0018B6  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 43545  0018B8  6EE6               	movwf	postinc1,c
 43546  0018BA  EC17  F012         	call	_UART2_SetTxInterruptHandler	;wreg free
 43547                           
 43548                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 43549  0018BE  013D               	movlb	61	; () banked
 43550  0018C0  6BD4               	clrf	212,b	;volatile
 43551                           
 43552                           ; BSR set to: 61
 43553                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 43554  0018C2  6BD6               	clrf	214,b	;volatile
 43555                           
 43556                           ; BSR set to: 61
 43557                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 43558  0018C4  6BD8               	clrf	216,b	;volatile
 43559                           
 43560                           ; BSR set to: 61
 43561                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 43562  0018C6  0EB0               	movlw	176
 43563  0018C8  6FDA               	movwf	218,b	;volatile
 43564                           
 43565                           ; BSR set to: 61
 43566                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 43567  0018CA  0E80               	movlw	128
 43568  0018CC  6FDB               	movwf	219,b	;volatile
 43569                           
 43570                           ; BSR set to: 61
 43571                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 43572  0018CE  6BDC               	clrf	220,b	;volatile
 43573                           
 43574                           ; BSR set to: 61
 43575                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 43576  0018D0  0E82               	movlw	130
 43577  0018D2  6FDD               	movwf	221,b	;volatile
 43578                           
 43579                           ; BSR set to: 61
 43580                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 43581  0018D4  0E06               	movlw	6
 43582  0018D6  6FDE               	movwf	222,b	;volatile
 43583                           
 43584                           ; BSR set to: 61
 43585                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 43586  0018D8  6BDF               	clrf	223,b	;volatile
 43587                           
 43588                           ; BSR set to: 61
 43589                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 43590  0018DA  6BE0               	clrf	224,b	;volatile
 43591                           
 43592                           ; BSR set to: 61
 43593                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 43594  0018DC  6BE1               	clrf	225,b	;volatile
 43595                           
 43596                           ; BSR set to: 61
 43597                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 43598  0018DE  6BE2               	clrf	226,b	;volatile
 43599                           
 43600                           ; BSR set to: 61
 43601                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 43602  0018E0  0100               	movlb	0	; () banked
 43603  0018E2  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 43604                           
 43605                           ; BSR set to: 0
 43606                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 43607  0018E4  6A56               	clrf	_uart2TxTail^0,c	;volatile
 43608                           
 43609                           ; BSR set to: 0
 43610                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 43611  0018E6  0E40               	movlw	64
 43612  0018E8  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 43613                           
 43614                           ; BSR set to: 0
 43615                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 43616  0018EA  6A54               	clrf	_uart2RxHead^0,c	;volatile
 43617                           
 43618                           ; BSR set to: 0
 43619                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 43620  0018EC  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 43621                           
 43622                           ; BSR set to: 0
 43623                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 43624  0018EE  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 43625                           
 43626                           ; BSR set to: 0
 43627                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 43628  0018F0  0139               	movlb	57	; () banked
 43629  0018F2  8596               	bsf	150,2,b	;volatile
 43630                           
 43631                           ; BSR set to: 57
 43632                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43633  0018F4  0012               	return		;funcret
 43634  0018F6                     __end_of_UART2_Initialize:
 43635                           	opt callstack 0
 43636                           
 43637 ;; *************** function _UART2_SetTxInterruptHandler *****************
 43638 ;; Defined at:
 43639 ;;		line 252 in file "mcc_generated_files/uart2.c"
 43640 ;; Parameters:    Size  Location     Type
 43641 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43642 ;;		 -> UART2_Transmit_ISR(1), 
 43643 ;; Auto vars:     Size  Location     Type
 43644 ;;		None
 43645 ;; Return value:  Size  Location     Type
 43646 ;;                  1  [STACK] void 
 43647 ;; Registers used:
 43648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43649 ;; Tracked objects:
 43650 ;;		On entry : 3F/39
 43651 ;;		On exit  : 0/0
 43652 ;;		Unchanged: 0/0
 43653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43658 ;;Total ram usage:        0 bytes
 43659 ;; Hardware stack levels used:    1
 43660 ;; Hardware stack levels required when called:   15
 43661 ;; This function calls:
 43662 ;;		Nothing
 43663 ;; This function is called by:
 43664 ;;		_UART2_Initialize
 43665 ;; This function uses a reentrant model
 43666 ;;
 43667                           
 43668                           	psect	text157
 43669  00242E                     __ptext157:
 43670                           	opt callstack 0
 43671  00242E                     _UART2_SetTxInterruptHandler:
 43672                           	opt callstack 13
 43673                           
 43674                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 43675                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43676                           
 43677                           ; BSR set to: 57
 43678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43679                           ;incstack = 0
 43680  00242E  50E1               	movf	fsr1l,w,c
 43681  002430  0FFD               	addlw	-3
 43682  002432  6ED9               	movwf	fsr2l,c
 43683  002434  50E2               	movf	fsr1h,w,c
 43684  002436  6EDA               	movwf	fsr2h,c
 43685  002438  0EFF               	movlw	255
 43686  00243A  22DA               	addwfc	fsr2h,f,c
 43687  00243C  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 43688  002442  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 43689  002448  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 43690                           
 43691                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43692  00244E  52E5               	movf	postdec1,f,c
 43693  002450  52E5               	movf	postdec1,f,c
 43694  002452  52E5               	movf	postdec1,f,c
 43695  002454  0012               	return		;funcret
 43696  002456                     __end_of_UART2_SetTxInterruptHandler:
 43697                           	opt callstack 0
 43698                           
 43699 ;; *************** function _UART2_SetRxInterruptHandler *****************
 43700 ;; Defined at:
 43701 ;;		line 248 in file "mcc_generated_files/uart2.c"
 43702 ;; Parameters:    Size  Location     Type
 43703 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43704 ;;		 -> UART2_Receive_ISR(1), 
 43705 ;; Auto vars:     Size  Location     Type
 43706 ;;		None
 43707 ;; Return value:  Size  Location     Type
 43708 ;;                  1  [STACK] void 
 43709 ;; Registers used:
 43710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43711 ;; Tracked objects:
 43712 ;;		On entry : 3F/39
 43713 ;;		On exit  : 0/0
 43714 ;;		Unchanged: 0/0
 43715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43720 ;;Total ram usage:        0 bytes
 43721 ;; Hardware stack levels used:    1
 43722 ;; Hardware stack levels required when called:   15
 43723 ;; This function calls:
 43724 ;;		Nothing
 43725 ;; This function is called by:
 43726 ;;		_UART2_Initialize
 43727 ;; This function uses a reentrant model
 43728 ;;
 43729                           
 43730                           	psect	text158
 43731  002456                     __ptext158:
 43732                           	opt callstack 0
 43733  002456                     _UART2_SetRxInterruptHandler:
 43734                           	opt callstack 13
 43735                           
 43736                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 43737                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43738                           
 43739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43740                           ;incstack = 0
 43741  002456  50E1               	movf	fsr1l,w,c
 43742  002458  0FFD               	addlw	-3
 43743  00245A  6ED9               	movwf	fsr2l,c
 43744  00245C  50E2               	movf	fsr1h,w,c
 43745  00245E  6EDA               	movwf	fsr2h,c
 43746  002460  0EFF               	movlw	255
 43747  002462  22DA               	addwfc	fsr2h,f,c
 43748  002464  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 43749  00246A  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 43750  002470  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 43751                           
 43752                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43753  002476  52E5               	movf	postdec1,f,c
 43754  002478  52E5               	movf	postdec1,f,c
 43755  00247A  52E5               	movf	postdec1,f,c
 43756  00247C  0012               	return		;funcret
 43757  00247E                     __end_of_UART2_SetRxInterruptHandler:
 43758                           	opt callstack 0
 43759                           
 43760 ;; *************** function _UART1_Initialize *****************
 43761 ;; Defined at:
 43762 ;;		line 75 in file "mcc_generated_files/uart1.c"
 43763 ;; Parameters:    Size  Location     Type
 43764 ;;		None
 43765 ;; Auto vars:     Size  Location     Type
 43766 ;;		None
 43767 ;; Return value:  Size  Location     Type
 43768 ;;                  1  [STACK] void 
 43769 ;; Registers used:
 43770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43771 ;; Tracked objects:
 43772 ;;		On entry : 0/39
 43773 ;;		On exit  : 3F/39
 43774 ;;		Unchanged: 0/0
 43775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43780 ;;Total ram usage:        0 bytes
 43781 ;; Hardware stack levels used:    1
 43782 ;; Hardware stack levels required when called:   16
 43783 ;; This function calls:
 43784 ;;		_UART1_SetRxInterruptHandler
 43785 ;; This function is called by:
 43786 ;;		_SYSTEM_Initialize
 43787 ;; This function uses a reentrant model
 43788 ;;
 43789                           
 43790                           	psect	text159
 43791  001C40                     __ptext159:
 43792                           	opt callstack 0
 43793  001C40                     _UART1_Initialize:
 43794                           	opt callstack 13
 43795                           
 43796                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 43797                           
 43798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43799                           ;incstack = 0
 43800  001C40  0139               	movlb	57	; () banked
 43801  001C42  9793               	bcf	147,3,b	;volatile
 43802                           
 43803                           ; BSR set to: 57
 43804                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 43805  001C44  0E54               	movlw	low _UART1_Receive_ISR
 43806  001C46  6EE6               	movwf	postinc1,c
 43807  001C48  0E27               	movlw	high _UART1_Receive_ISR
 43808  001C4A  6EE6               	movwf	postinc1,c
 43809  001C4C  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 43810  001C4E  6EE6               	movwf	postinc1,c
 43811  001C50  EC3F  F012         	call	_UART1_SetRxInterruptHandler	;wreg free
 43812                           
 43813                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 43814  001C54  013D               	movlb	61	; () banked
 43815  001C56  6BEC               	clrf	236,b	;volatile
 43816                           
 43817                           ; BSR set to: 61
 43818                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 43819  001C58  6BED               	clrf	237,b	;volatile
 43820                           
 43821                           ; BSR set to: 61
 43822                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 43823  001C5A  6BEE               	clrf	238,b	;volatile
 43824                           
 43825                           ; BSR set to: 61
 43826                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 43827  001C5C  6BEF               	clrf	239,b	;volatile
 43828                           
 43829                           ; BSR set to: 61
 43830                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 43831  001C5E  6BF0               	clrf	240,b	;volatile
 43832                           
 43833                           ; BSR set to: 61
 43834                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 43835  001C60  6BF1               	clrf	241,b	;volatile
 43836                           
 43837                           ; BSR set to: 61
 43838                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 43839  001C62  0EB0               	movlw	176
 43840  001C64  6FF2               	movwf	242,b	;volatile
 43841                           
 43842                           ; BSR set to: 61
 43843                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 43844  001C66  0E80               	movlw	128
 43845  001C68  6FF3               	movwf	243,b	;volatile
 43846                           
 43847                           ; BSR set to: 61
 43848                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 43849  001C6A  6BF4               	clrf	244,b	;volatile
 43850                           
 43851                           ; BSR set to: 61
 43852                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 43853  001C6C  0E8A               	movlw	138
 43854  001C6E  6FF5               	movwf	245,b	;volatile
 43855                           
 43856                           ; BSR set to: 61
 43857                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 43858  001C70  6BF6               	clrf	246,b	;volatile
 43859                           
 43860                           ; BSR set to: 61
 43861                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 43862  001C72  6BF7               	clrf	247,b	;volatile
 43863                           
 43864                           ; BSR set to: 61
 43865                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 43866  001C74  6BF8               	clrf	248,b	;volatile
 43867                           
 43868                           ; BSR set to: 61
 43869                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 43870  001C76  6BF9               	clrf	249,b	;volatile
 43871                           
 43872                           ; BSR set to: 61
 43873                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 43874  001C78  6BFA               	clrf	250,b	;volatile
 43875                           
 43876                           ; BSR set to: 61
 43877                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 43878  001C7A  6A57               	clrf	_uart1RxHead^0,c	;volatile
 43879                           
 43880                           ; BSR set to: 61
 43881                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 43882  001C7C  0100               	movlb	0	; () banked
 43883  001C7E  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 43884                           
 43885                           ; BSR set to: 0
 43886                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 43887  001C80  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 43888                           
 43889                           ; BSR set to: 0
 43890                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 43891  001C82  0139               	movlb	57	; () banked
 43892  001C84  8793               	bsf	147,3,b	;volatile
 43893                           
 43894                           ; BSR set to: 57
 43895                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43896  001C86  0012               	return		;funcret
 43897  001C88                     __end_of_UART1_Initialize:
 43898                           	opt callstack 0
 43899                           
 43900 ;; *************** function _UART1_SetRxInterruptHandler *****************
 43901 ;; Defined at:
 43902 ;;		line 207 in file "mcc_generated_files/uart1.c"
 43903 ;; Parameters:    Size  Location     Type
 43904 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43905 ;;		 -> UART1_Receive_ISR(1), 
 43906 ;; Auto vars:     Size  Location     Type
 43907 ;;		None
 43908 ;; Return value:  Size  Location     Type
 43909 ;;                  1  [STACK] void 
 43910 ;; Registers used:
 43911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43912 ;; Tracked objects:
 43913 ;;		On entry : 3F/39
 43914 ;;		On exit  : 0/0
 43915 ;;		Unchanged: 0/0
 43916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43921 ;;Total ram usage:        0 bytes
 43922 ;; Hardware stack levels used:    1
 43923 ;; Hardware stack levels required when called:   15
 43924 ;; This function calls:
 43925 ;;		Nothing
 43926 ;; This function is called by:
 43927 ;;		_UART1_Initialize
 43928 ;; This function uses a reentrant model
 43929 ;;
 43930                           
 43931                           	psect	text160
 43932  00247E                     __ptext160:
 43933                           	opt callstack 0
 43934  00247E                     _UART1_SetRxInterruptHandler:
 43935                           	opt callstack 13
 43936                           
 43937                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 43938                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43939                           
 43940                           ; BSR set to: 57
 43941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43942                           ;incstack = 0
 43943  00247E  50E1               	movf	fsr1l,w,c
 43944  002480  0FFD               	addlw	-3
 43945  002482  6ED9               	movwf	fsr2l,c
 43946  002484  50E2               	movf	fsr1h,w,c
 43947  002486  6EDA               	movwf	fsr2h,c
 43948  002488  0EFF               	movlw	255
 43949  00248A  22DA               	addwfc	fsr2h,f,c
 43950  00248C  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 43951  002492  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 43952  002498  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 43953                           
 43954                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43955  00249E  52E5               	movf	postdec1,f,c
 43956  0024A0  52E5               	movf	postdec1,f,c
 43957  0024A2  52E5               	movf	postdec1,f,c
 43958  0024A4  0012               	return		;funcret
 43959  0024A6                     __end_of_UART1_SetRxInterruptHandler:
 43960                           	opt callstack 0
 43961                           
 43962 ;; *************** function _TMR6_Initialize *****************
 43963 ;; Defined at:
 43964 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 43965 ;; Parameters:    Size  Location     Type
 43966 ;;		None
 43967 ;; Auto vars:     Size  Location     Type
 43968 ;;		None
 43969 ;; Return value:  Size  Location     Type
 43970 ;;                  1  [STACK] void 
 43971 ;; Registers used:
 43972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43973 ;; Tracked objects:
 43974 ;;		On entry : 3F/39
 43975 ;;		On exit  : 0/0
 43976 ;;		Unchanged: 0/0
 43977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43982 ;;Total ram usage:        0 bytes
 43983 ;; Hardware stack levels used:    1
 43984 ;; Hardware stack levels required when called:   16
 43985 ;; This function calls:
 43986 ;;		_TMR6_SetInterruptHandler
 43987 ;; This function is called by:
 43988 ;;		_SYSTEM_Initialize
 43989 ;; This function uses a reentrant model
 43990 ;;
 43991                           
 43992                           	psect	text161
 43993  0023B4                     __ptext161:
 43994                           	opt callstack 0
 43995  0023B4                     _TMR6_Initialize:
 43996                           	opt callstack 13
 43997                           
 43998                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 43999                           
 44000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44001                           ;incstack = 0
 44002  0023B4  0E01               	movlw	1
 44003  0023B6  6E96               	movwf	150,c	;volatile
 44004                           
 44005                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 44006  0023B8  6A95               	clrf	149,c	;volatile
 44007                           
 44008                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 44009  0023BA  6A97               	clrf	151,c	;volatile
 44010                           
 44011                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 44012  0023BC  0E7C               	movlw	124
 44013  0023BE  6E93               	movwf	147,c	;volatile
 44014                           
 44015                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 44016  0023C0  6A92               	clrf	146,c	;volatile
 44017                           
 44018                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 44019  0023C2  0139               	movlb	57	; () banked
 44020  0023C4  91A9               	bcf	169,0,b	;volatile
 44021                           
 44022                           ; BSR set to: 57
 44023                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 44024  0023C6  8199               	bsf	153,0,b	;volatile
 44025                           
 44026                           ; BSR set to: 57
 44027                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 44028  0023C8  0EAA               	movlw	low _TMR6_DefaultInterruptHandler
 44029  0023CA  6EE6               	movwf	postinc1,c
 44030  0023CC  0E1B               	movlw	high _TMR6_DefaultInterruptHandler
 44031  0023CE  6EE6               	movwf	postinc1,c
 44032  0023D0  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 44033  0023D2  6EE6               	movwf	postinc1,c
 44034  0023D4  EC53  F012         	call	_TMR6_SetInterruptHandler	;wreg free
 44035                           
 44036                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 44037  0023D8  0EE0               	movlw	224
 44038  0023DA  6E94               	movwf	148,c	;volatile
 44039                           
 44040                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44041  0023DC  0012               	return		;funcret
 44042  0023DE                     __end_of_TMR6_Initialize:
 44043                           	opt callstack 0
 44044                           
 44045 ;; *************** function _TMR6_SetInterruptHandler *****************
 44046 ;; Defined at:
 44047 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 44048 ;; Parameters:    Size  Location     Type
 44049 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44050 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 44051 ;; Auto vars:     Size  Location     Type
 44052 ;;		None
 44053 ;; Return value:  Size  Location     Type
 44054 ;;                  1  [STACK] void 
 44055 ;; Registers used:
 44056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44057 ;; Tracked objects:
 44058 ;;		On entry : 3F/39
 44059 ;;		On exit  : 0/0
 44060 ;;		Unchanged: 0/0
 44061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44066 ;;Total ram usage:        0 bytes
 44067 ;; Hardware stack levels used:    1
 44068 ;; Hardware stack levels required when called:   15
 44069 ;; This function calls:
 44070 ;;		Nothing
 44071 ;; This function is called by:
 44072 ;;		_TMR6_Initialize
 44073 ;; This function uses a reentrant model
 44074 ;;
 44075                           
 44076                           	psect	text162
 44077  0024A6                     __ptext162:
 44078                           	opt callstack 0
 44079  0024A6                     _TMR6_SetInterruptHandler:
 44080                           	opt callstack 13
 44081                           
 44082                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 44083                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44084                           
 44085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44086                           ;incstack = 0
 44087  0024A6  50E1               	movf	fsr1l,w,c
 44088  0024A8  0FFD               	addlw	-3
 44089  0024AA  6ED9               	movwf	fsr2l,c
 44090  0024AC  50E2               	movf	fsr1h,w,c
 44091  0024AE  6EDA               	movwf	fsr2h,c
 44092  0024B0  0EFF               	movlw	255
 44093  0024B2  22DA               	addwfc	fsr2h,f,c
 44094  0024B4  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 44095  0024BA  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 44096  0024C0  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 44097                           
 44098                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44099  0024C6  52E5               	movf	postdec1,f,c
 44100  0024C8  52E5               	movf	postdec1,f,c
 44101  0024CA  52E5               	movf	postdec1,f,c
 44102  0024CC  0012               	return		;funcret
 44103  0024CE                     __end_of_TMR6_SetInterruptHandler:
 44104                           	opt callstack 0
 44105                           
 44106 ;; *************** function _TMR5_Initialize *****************
 44107 ;; Defined at:
 44108 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 44109 ;; Parameters:    Size  Location     Type
 44110 ;;		None
 44111 ;; Auto vars:     Size  Location     Type
 44112 ;;		None
 44113 ;; Return value:  Size  Location     Type
 44114 ;;                  1  [STACK] void 
 44115 ;; Registers used:
 44116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44117 ;; Tracked objects:
 44118 ;;		On entry : 0/39
 44119 ;;		On exit  : 0/0
 44120 ;;		Unchanged: 0/0
 44121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44126 ;;Total ram usage:        0 bytes
 44127 ;; Hardware stack levels used:    1
 44128 ;; Hardware stack levels required when called:   16
 44129 ;; This function calls:
 44130 ;;		_TMR5_SetInterruptHandler
 44131 ;; This function is called by:
 44132 ;;		_SYSTEM_Initialize
 44133 ;; This function uses a reentrant model
 44134 ;;
 44135                           
 44136                           	psect	text163
 44137  001C88                     __ptext163:
 44138                           	opt callstack 0
 44139  001C88                     _TMR5_Initialize:
 44140                           	opt callstack 13
 44141                           
 44142                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 44143                           
 44144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44145                           ;incstack = 0
 44146  001C88  6A9B               	clrf	155,c	;volatile
 44147                           
 44148                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 44149  001C8A  6A9C               	clrf	156,c	;volatile
 44150                           
 44151                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 44152  001C8C  0E01               	movlw	1
 44153  001C8E  6E9D               	movwf	157,c	;volatile
 44154                           
 44155                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 44156  001C90  0E63               	movlw	99
 44157  001C92  6E99               	movwf	153,c	;volatile
 44158                           
 44159                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 44160  001C94  0EC0               	movlw	192
 44161  001C96  6E98               	movwf	152,c	;volatile
 44162                           
 44163                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 44164  001C98  5098               	movf	152,w,c	;volatile
 44165  001C9A  006F FE64  F02A    	movff	16281,btemp	;volatile
 44166  001CA0  6A2B               	clrf	(btemp+1)^0,c
 44167  001CA2  0060  F0A8  F02B   	movff	btemp,btemp+1
 44168  001CA8  6A2A               	clrf	btemp^0,c
 44169  001CAA  102A               	iorwf	btemp^0,w,c
 44170  001CAC  0100               	movlb	0	; () banked
 44171  001CAE  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 44172  001CB0  502B               	movf	(btemp+1)^0,w,c
 44173  001CB2  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 44174                           
 44175                           ; BSR set to: 0
 44176                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 44177  001CB4  0139               	movlb	57	; () banked
 44178  001CB6  9DA8               	bcf	168,6,b	;volatile
 44179                           
 44180                           ; BSR set to: 57
 44181                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 44182  001CB8  8D98               	bsf	152,6,b	;volatile
 44183                           
 44184                           ; BSR set to: 57
 44185                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 44186  001CBA  0E9C               	movlw	low _TMR5_DefaultInterruptHandler
 44187  001CBC  6EE6               	movwf	postinc1,c
 44188  001CBE  0E20               	movlw	high _TMR5_DefaultInterruptHandler
 44189  001CC0  6EE6               	movwf	postinc1,c
 44190  001CC2  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 44191  001CC4  6EE6               	movwf	postinc1,c
 44192  001CC6  EC67  F012         	call	_TMR5_SetInterruptHandler	;wreg free
 44193                           
 44194                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 44195  001CCA  0E31               	movlw	49
 44196  001CCC  6E9A               	movwf	154,c	;volatile
 44197                           
 44198                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44199  001CCE  0012               	return		;funcret
 44200  001CD0                     __end_of_TMR5_Initialize:
 44201                           	opt callstack 0
 44202                           
 44203 ;; *************** function _TMR5_SetInterruptHandler *****************
 44204 ;; Defined at:
 44205 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 44206 ;; Parameters:    Size  Location     Type
 44207 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44208 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 44209 ;; Auto vars:     Size  Location     Type
 44210 ;;		None
 44211 ;; Return value:  Size  Location     Type
 44212 ;;                  1  [STACK] void 
 44213 ;; Registers used:
 44214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44215 ;; Tracked objects:
 44216 ;;		On entry : 3F/39
 44217 ;;		On exit  : 0/0
 44218 ;;		Unchanged: 0/0
 44219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44224 ;;Total ram usage:        0 bytes
 44225 ;; Hardware stack levels used:    1
 44226 ;; Hardware stack levels required when called:   15
 44227 ;; This function calls:
 44228 ;;		Nothing
 44229 ;; This function is called by:
 44230 ;;		_TMR5_Initialize
 44231 ;; This function uses a reentrant model
 44232 ;;
 44233                           
 44234                           	psect	text164
 44235  0024CE                     __ptext164:
 44236                           	opt callstack 0
 44237  0024CE                     _TMR5_SetInterruptHandler:
 44238                           	opt callstack 13
 44239                           
 44240                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 44241                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44242                           
 44243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44244                           ;incstack = 0
 44245  0024CE  50E1               	movf	fsr1l,w,c
 44246  0024D0  0FFD               	addlw	-3
 44247  0024D2  6ED9               	movwf	fsr2l,c
 44248  0024D4  50E2               	movf	fsr1h,w,c
 44249  0024D6  6EDA               	movwf	fsr2h,c
 44250  0024D8  0EFF               	movlw	255
 44251  0024DA  22DA               	addwfc	fsr2h,f,c
 44252  0024DC  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 44253  0024E2  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 44254  0024E8  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 44255                           
 44256                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44257  0024EE  52E5               	movf	postdec1,f,c
 44258  0024F0  52E5               	movf	postdec1,f,c
 44259  0024F2  52E5               	movf	postdec1,f,c
 44260  0024F4  0012               	return		;funcret
 44261  0024F6                     __end_of_TMR5_SetInterruptHandler:
 44262                           	opt callstack 0
 44263                           
 44264 ;; *************** function _TMR3_Initialize *****************
 44265 ;; Defined at:
 44266 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 44267 ;; Parameters:    Size  Location     Type
 44268 ;;		None
 44269 ;; Auto vars:     Size  Location     Type
 44270 ;;		None
 44271 ;; Return value:  Size  Location     Type
 44272 ;;                  1  [STACK] void 
 44273 ;; Registers used:
 44274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44275 ;; Tracked objects:
 44276 ;;		On entry : 0/39
 44277 ;;		On exit  : 0/0
 44278 ;;		Unchanged: 0/0
 44279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44284 ;;Total ram usage:        0 bytes
 44285 ;; Hardware stack levels used:    1
 44286 ;; Hardware stack levels required when called:   16
 44287 ;; This function calls:
 44288 ;;		_TMR3_SetInterruptHandler
 44289 ;; This function is called by:
 44290 ;;		_SYSTEM_Initialize
 44291 ;; This function uses a reentrant model
 44292 ;;
 44293                           
 44294                           	psect	text165
 44295  001CD0                     __ptext165:
 44296                           	opt callstack 0
 44297  001CD0                     _TMR3_Initialize:
 44298                           	opt callstack 13
 44299                           
 44300                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 44301                           
 44302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44303                           ;incstack = 0
 44304  001CD0  6AA7               	clrf	167,c	;volatile
 44305                           
 44306                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 44307  001CD2  6AA8               	clrf	168,c	;volatile
 44308                           
 44309                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 44310  001CD4  0E01               	movlw	1
 44311  001CD6  6EA9               	movwf	169,c	;volatile
 44312                           
 44313                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 44314  001CD8  0E3C               	movlw	60
 44315  001CDA  6EA5               	movwf	165,c	;volatile
 44316                           
 44317                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 44318  001CDC  0EB0               	movlw	176
 44319  001CDE  6EA4               	movwf	164,c	;volatile
 44320                           
 44321                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 44322  001CE0  50A4               	movf	164,w,c	;volatile
 44323  001CE2  006F FE94  F02A    	movff	16293,btemp	;volatile
 44324  001CE8  6A2B               	clrf	(btemp+1)^0,c
 44325  001CEA  0060  F0A8  F02B   	movff	btemp,btemp+1
 44326  001CF0  6A2A               	clrf	btemp^0,c
 44327  001CF2  102A               	iorwf	btemp^0,w,c
 44328  001CF4  0100               	movlb	0	; () banked
 44329  001CF6  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 44330  001CF8  502B               	movf	(btemp+1)^0,w,c
 44331  001CFA  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 44332                           
 44333                           ; BSR set to: 0
 44334                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 44335  001CFC  0139               	movlb	57	; () banked
 44336  001CFE  9DA6               	bcf	166,6,b	;volatile
 44337                           
 44338                           ; BSR set to: 57
 44339                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 44340  001D00  8D96               	bsf	150,6,b	;volatile
 44341                           
 44342                           ; BSR set to: 57
 44343                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 44344  001D02  0E58               	movlw	low _TMR3_DefaultInterruptHandler
 44345  001D04  6EE6               	movwf	postinc1,c
 44346  001D06  0E2A               	movlw	high _TMR3_DefaultInterruptHandler
 44347  001D08  6EE6               	movwf	postinc1,c
 44348  001D0A  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 44349  001D0C  6EE6               	movwf	postinc1,c
 44350  001D0E  EC7B  F012         	call	_TMR3_SetInterruptHandler	;wreg free
 44351                           
 44352                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 44353  001D12  0E31               	movlw	49
 44354  001D14  6EA6               	movwf	166,c	;volatile
 44355                           
 44356                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44357  001D16  0012               	return		;funcret
 44358  001D18                     __end_of_TMR3_Initialize:
 44359                           	opt callstack 0
 44360                           
 44361 ;; *************** function _TMR3_SetInterruptHandler *****************
 44362 ;; Defined at:
 44363 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 44364 ;; Parameters:    Size  Location     Type
 44365 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44366 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 44367 ;; Auto vars:     Size  Location     Type
 44368 ;;		None
 44369 ;; Return value:  Size  Location     Type
 44370 ;;                  1  [STACK] void 
 44371 ;; Registers used:
 44372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44373 ;; Tracked objects:
 44374 ;;		On entry : 0/1
 44375 ;;		On exit  : 0/0
 44376 ;;		Unchanged: 0/0
 44377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44382 ;;Total ram usage:        0 bytes
 44383 ;; Hardware stack levels used:    1
 44384 ;; Hardware stack levels required when called:   15
 44385 ;; This function calls:
 44386 ;;		Nothing
 44387 ;; This function is called by:
 44388 ;;		_TMR3_Initialize
 44389 ;;		_init_bsoc
 44390 ;; This function uses a reentrant model
 44391 ;;
 44392                           
 44393                           	psect	text166
 44394  0024F6                     __ptext166:
 44395                           	opt callstack 0
 44396  0024F6                     _TMR3_SetInterruptHandler:
 44397                           	opt callstack 14
 44398                           
 44399                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 44400                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44401                           
 44402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44403                           ;incstack = 0
 44404  0024F6  50E1               	movf	fsr1l,w,c
 44405  0024F8  0FFD               	addlw	-3
 44406  0024FA  6ED9               	movwf	fsr2l,c
 44407  0024FC  50E2               	movf	fsr1h,w,c
 44408  0024FE  6EDA               	movwf	fsr2h,c
 44409  002500  0EFF               	movlw	255
 44410  002502  22DA               	addwfc	fsr2h,f,c
 44411  002504  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 44412  00250A  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 44413  002510  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 44414                           
 44415                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44416  002516  52E5               	movf	postdec1,f,c
 44417  002518  52E5               	movf	postdec1,f,c
 44418  00251A  52E5               	movf	postdec1,f,c
 44419  00251C  0012               	return		;funcret
 44420  00251E                     __end_of_TMR3_SetInterruptHandler:
 44421                           	opt callstack 0
 44422                           
 44423 ;; *************** function _TMR2_Initialize *****************
 44424 ;; Defined at:
 44425 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 44426 ;; Parameters:    Size  Location     Type
 44427 ;;		None
 44428 ;; Auto vars:     Size  Location     Type
 44429 ;;		None
 44430 ;; Return value:  Size  Location     Type
 44431 ;;                  1  [STACK] void 
 44432 ;; Registers used:
 44433 ;;		wreg, status,2
 44434 ;; Tracked objects:
 44435 ;;		On entry : 0/0
 44436 ;;		On exit  : 3F/39
 44437 ;;		Unchanged: 0/0
 44438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44443 ;;Total ram usage:        0 bytes
 44444 ;; Hardware stack levels used:    1
 44445 ;; Hardware stack levels required when called:   15
 44446 ;; This function calls:
 44447 ;;		Nothing
 44448 ;; This function is called by:
 44449 ;;		_SYSTEM_Initialize
 44450 ;; This function uses a reentrant model
 44451 ;;
 44452                           
 44453                           	psect	text167
 44454  00287A                     __ptext167:
 44455                           	opt callstack 0
 44456  00287A                     _TMR2_Initialize:
 44457                           	opt callstack 14
 44458                           
 44459                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 44460                           
 44461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44462                           ;incstack = 0
 44463  00287A  0E01               	movlw	1
 44464  00287C  6EAE               	movwf	174,c	;volatile
 44465                           
 44466                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 44467  00287E  6AAD               	clrf	173,c	;volatile
 44468                           
 44469                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 44470  002880  6AAF               	clrf	175,c	;volatile
 44471                           
 44472                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 44473  002882  0E63               	movlw	99
 44474  002884  6EAB               	movwf	171,c	;volatile
 44475                           
 44476                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 44477  002886  6AAA               	clrf	170,c	;volatile
 44478                           
 44479                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 44480  002888  0139               	movlb	57	; () banked
 44481  00288A  95A4               	bcf	164,2,b	;volatile
 44482                           
 44483                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 44484  00288C  0EC0               	movlw	192
 44485  00288E  6EAC               	movwf	172,c	;volatile
 44486                           
 44487                           ; BSR set to: 57
 44488                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44489  002890  0012               	return		;funcret
 44490  002892                     __end_of_TMR2_Initialize:
 44491                           	opt callstack 0
 44492                           
 44493 ;; *************** function _SPI1_Initialize *****************
 44494 ;; Defined at:
 44495 ;;		line 64 in file "mcc_generated_files/spi1.c"
 44496 ;; Parameters:    Size  Location     Type
 44497 ;;		None
 44498 ;; Auto vars:     Size  Location     Type
 44499 ;;		None
 44500 ;; Return value:  Size  Location     Type
 44501 ;;                  1  [STACK] void 
 44502 ;; Registers used:
 44503 ;;		wreg, status,2
 44504 ;; Tracked objects:
 44505 ;;		On entry : 3F/39
 44506 ;;		On exit  : 3F/3D
 44507 ;;		Unchanged: 0/0
 44508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44513 ;;Total ram usage:        0 bytes
 44514 ;; Hardware stack levels used:    1
 44515 ;; Hardware stack levels required when called:   15
 44516 ;; This function calls:
 44517 ;;		Nothing
 44518 ;; This function is called by:
 44519 ;;		_SYSTEM_Initialize
 44520 ;; This function uses a reentrant model
 44521 ;;
 44522                           
 44523                           	psect	text168
 44524  0028A8                     __ptext168:
 44525                           	opt callstack 0
 44526  0028A8                     _SPI1_Initialize:
 44527                           	opt callstack 14
 44528                           
 44529                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 44530                           
 44531                           ; BSR set to: 57
 44532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44533                           ;incstack = 0
 44534  0028A8  0E40               	movlw	64
 44535  0028AA  013D               	movlb	61	; () banked
 44536  0028AC  6F15               	movwf	21,b	;volatile
 44537                           
 44538                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 44539  0028AE  0E03               	movlw	3
 44540  0028B0  6F16               	movwf	22,b	;volatile
 44541                           
 44542                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 44543  0028B2  0E4F               	movlw	79
 44544  0028B4  6F19               	movwf	25,b	;volatile
 44545                           
 44546                           ; BSR set to: 61
 44547                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 44548  0028B6  6B1C               	clrf	28,b	;volatile
 44549                           
 44550                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 44551  0028B8  0E83               	movlw	131
 44552  0028BA  6F14               	movwf	20,b	;volatile
 44553                           
 44554                           ; BSR set to: 61
 44555                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44556  0028BC  0012               	return		;funcret
 44557  0028BE                     __end_of_SPI1_Initialize:
 44558                           	opt callstack 0
 44559                           
 44560 ;; *************** function _PWM8_Initialize *****************
 44561 ;; Defined at:
 44562 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 44563 ;; Parameters:    Size  Location     Type
 44564 ;;		None
 44565 ;; Auto vars:     Size  Location     Type
 44566 ;;		None
 44567 ;; Return value:  Size  Location     Type
 44568 ;;                  1  [STACK] void 
 44569 ;; Registers used:
 44570 ;;		wreg, status,2
 44571 ;; Tracked objects:
 44572 ;;		On entry : 3F/39
 44573 ;;		On exit  : 3F/3F
 44574 ;;		Unchanged: 0/0
 44575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44580 ;;Total ram usage:        0 bytes
 44581 ;; Hardware stack levels used:    1
 44582 ;; Hardware stack levels required when called:   15
 44583 ;; This function calls:
 44584 ;;		Nothing
 44585 ;; This function is called by:
 44586 ;;		_SYSTEM_Initialize
 44587 ;; This function uses a reentrant model
 44588 ;;
 44589                           
 44590                           	psect	text169
 44591  0028BE                     __ptext169:
 44592                           	opt callstack 0
 44593  0028BE                     _PWM8_Initialize:
 44594                           	opt callstack 14
 44595                           
 44596                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 44597                           
 44598                           ; BSR set to: 61
 44599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44600                           ;incstack = 0
 44601  0028BE  0E80               	movlw	128
 44602  0028C0  6E62               	movwf	98,c	;volatile
 44603                           
 44604                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 44605  0028C2  6A61               	clrf	97,c	;volatile
 44606                           
 44607                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 44608  0028C4  0E40               	movlw	64
 44609  0028C6  6E60               	movwf	96,c	;volatile
 44610                           
 44611                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 44612  0028C8  013F               	movlb	63	; () banked
 44613  0028CA  515F               	movf	95,w,b	;volatile
 44614  0028CC  0B3F               	andlw	-193
 44615  0028CE  0940               	iorlw	64
 44616  0028D0  6F5F               	movwf	95,b	;volatile
 44617                           
 44618                           ; BSR set to: 63
 44619                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44620  0028D2  0012               	return		;funcret
 44621  0028D4                     __end_of_PWM8_Initialize:
 44622                           	opt callstack 0
 44623                           
 44624 ;; *************** function _PMD_Initialize *****************
 44625 ;; Defined at:
 44626 ;;		line 91 in file "mcc_generated_files/mcc.c"
 44627 ;; Parameters:    Size  Location     Type
 44628 ;;		None
 44629 ;; Auto vars:     Size  Location     Type
 44630 ;;		None
 44631 ;; Return value:  Size  Location     Type
 44632 ;;                  1  [STACK] void 
 44633 ;; Registers used:
 44634 ;;		None
 44635 ;; Tracked objects:
 44636 ;;		On entry : 3F/39
 44637 ;;		On exit  : 3F/39
 44638 ;;		Unchanged: 0/0
 44639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44644 ;;Total ram usage:        0 bytes
 44645 ;; Hardware stack levels used:    1
 44646 ;; Hardware stack levels required when called:   15
 44647 ;; This function calls:
 44648 ;;		Nothing
 44649 ;; This function is called by:
 44650 ;;		_SYSTEM_Initialize
 44651 ;; This function uses a reentrant model
 44652 ;;
 44653                           
 44654                           	psect	text170
 44655  0028EA                     __ptext170:
 44656                           	opt callstack 0
 44657  0028EA                     _PMD_Initialize:
 44658                           	opt callstack 14
 44659                           
 44660                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 44661                           
 44662                           ; BSR set to: 63
 44663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44664                           ;incstack = 0
 44665  0028EA  0139               	movlb	57	; () banked
 44666  0028EC  6BC0               	clrf	192,b	;volatile
 44667                           
 44668                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 44669  0028EE  6BC1               	clrf	193,b	;volatile
 44670                           
 44671                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 44672  0028F0  6BC2               	clrf	194,b	;volatile
 44673                           
 44674                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 44675  0028F2  6BC3               	clrf	195,b	;volatile
 44676                           
 44677                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 44678  0028F4  6BC4               	clrf	196,b	;volatile
 44679                           
 44680                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 44681  0028F6  6BC5               	clrf	197,b	;volatile
 44682                           
 44683                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 44684  0028F8  6BC6               	clrf	198,b	;volatile
 44685                           
 44686                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 44687  0028FA  6BC7               	clrf	199,b	;volatile
 44688                           
 44689                           ; BSR set to: 57
 44690                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44691  0028FC  0012               	return		;funcret
 44692  0028FE                     __end_of_PMD_Initialize:
 44693                           	opt callstack 0
 44694                           
 44695 ;; *************** function _PIN_MANAGER_Initialize *****************
 44696 ;; Defined at:
 44697 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 44698 ;; Parameters:    Size  Location     Type
 44699 ;;		None
 44700 ;; Auto vars:     Size  Location     Type
 44701 ;;		None
 44702 ;; Return value:  Size  Location     Type
 44703 ;;                  1  [STACK] void 
 44704 ;; Registers used:
 44705 ;;		wreg, status,2
 44706 ;; Tracked objects:
 44707 ;;		On entry : 3F/39
 44708 ;;		On exit  : 3F/3A
 44709 ;;		Unchanged: 0/0
 44710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44715 ;;Total ram usage:        0 bytes
 44716 ;; Hardware stack levels used:    1
 44717 ;; Hardware stack levels required when called:   15
 44718 ;; This function calls:
 44719 ;;		Nothing
 44720 ;; This function is called by:
 44721 ;;		_SYSTEM_Initialize
 44722 ;; This function uses a reentrant model
 44723 ;;
 44724                           
 44725                           	psect	text171
 44726  000F84                     __ptext171:
 44727                           	opt callstack 0
 44728  000F84                     _PIN_MANAGER_Initialize:
 44729                           	opt callstack 14
 44730                           
 44731                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 44732                           
 44733                           ; BSR set to: 57
 44734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44735                           ;incstack = 0
 44736  000F84  0E07               	movlw	7
 44737  000F86  6EBE               	movwf	190,c	;volatile
 44738                           
 44739                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 44740  000F88  6ABD               	clrf	189,c	;volatile
 44741                           
 44742                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 44743  000F8A  6ABA               	clrf	186,c	;volatile
 44744                           
 44745                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 44746  000F8C  0E23               	movlw	35
 44747  000F8E  6EBF               	movwf	191,c	;volatile
 44748                           
 44749                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 44750  000F90  6ABB               	clrf	187,c	;volatile
 44751                           
 44752                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 44753  000F92  0E07               	movlw	7
 44754  000F94  6EBC               	movwf	188,c	;volatile
 44755                           
 44756                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 44757  000F96  6AC6               	clrf	198,c	;volatile
 44758                           
 44759                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 44760  000F98  0E0C               	movlw	12
 44761  000F9A  6EC7               	movwf	199,c	;volatile
 44762                           
 44763                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 44764  000F9C  68C2               	setf	194,c	;volatile
 44765                           
 44766                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 44767  000F9E  0EBF               	movlw	191
 44768  000FA0  6EC3               	movwf	195,c	;volatile
 44769                           
 44770                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 44771  000FA2  0E90               	movlw	144
 44772  000FA4  6EC4               	movwf	196,c	;volatile
 44773                           
 44774                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 44775  000FA6  0E0C               	movlw	12
 44776  000FA8  6EC5               	movwf	197,c	;volatile
 44777                           
 44778                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 44779  000FAA  013A               	movlb	58	; () banked
 44780  000FAC  6B70               	clrf	112,b	;volatile
 44781                           
 44782                           ; BSR set to: 58
 44783                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 44784  000FAE  6B60               	clrf	96,b	;volatile
 44785                           
 44786                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 44787  000FB0  0E3C               	movlw	60
 44788  000FB2  6F50               	movwf	80,b	;volatile
 44789                           
 44790                           ; BSR set to: 58
 44791                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 44792  000FB4  6B80               	clrf	128,b	;volatile
 44793                           
 44794                           ; BSR set to: 58
 44795                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 44796  000FB6  6B90               	clrf	144,b	;volatile
 44797                           
 44798                           ; BSR set to: 58
 44799                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 44800  000FB8  6940               	setf	64,b	;volatile
 44801                           
 44802                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 44803  000FBA  0E0C               	movlw	12
 44804  000FBC  6F71               	movwf	113,b	;volatile
 44805                           
 44806                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 44807  000FBE  0E0C               	movlw	12
 44808  000FC0  6F91               	movwf	145,b	;volatile
 44809                           
 44810                           ; BSR set to: 58
 44811                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 44812  000FC2  6B81               	clrf	129,b	;volatile
 44813                           
 44814                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 44815  000FC4  0E83               	movlw	131
 44816  000FC6  6F51               	movwf	81,b	;volatile
 44817                           
 44818                           ; BSR set to: 58
 44819                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 44820  000FC8  6B41               	clrf	65,b	;volatile
 44821                           
 44822                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 44823  000FCA  0E97               	movlw	151
 44824  000FCC  6F61               	movwf	97,b	;volatile
 44825                           
 44826                           ; BSR set to: 58
 44827                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 44828  000FCE  6B82               	clrf	130,b	;volatile
 44829                           
 44830                           ; BSR set to: 58
 44831                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 44832  000FD0  6B92               	clrf	146,b	;volatile
 44833                           
 44834                           ; BSR set to: 58
 44835                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 44836  000FD2  6B42               	clrf	66,b	;volatile
 44837                           
 44838                           ; BSR set to: 58
 44839                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 44840  000FD4  6B52               	clrf	82,b	;volatile
 44841                           
 44842                           ; BSR set to: 58
 44843                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 44844  000FD6  6B62               	clrf	98,b	;volatile
 44845                           
 44846                           ; BSR set to: 58
 44847                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 44848  000FD8  6B72               	clrf	114,b	;volatile
 44849                           
 44850                           ; BSR set to: 58
 44851                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 44852  000FDA  6943               	setf	67,b	;volatile
 44853                           
 44854                           ; BSR set to: 58
 44855                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 44856  000FDC  6953               	setf	83,b	;volatile
 44857                           
 44858                           ; BSR set to: 58
 44859                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 44860  000FDE  6963               	setf	99,b	;volatile
 44861                           
 44862                           ; BSR set to: 58
 44863                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 44864  000FE0  6973               	setf	115,b	;volatile
 44865                           
 44866                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 44867  000FE2  0E07               	movlw	7
 44868  000FE4  6F83               	movwf	131,b	;volatile
 44869                           
 44870                           ; BSR set to: 58
 44871                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 44872  000FE6  6993               	setf	147,b	;volatile
 44873                           
 44874                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 44875  000FE8  0E0F               	movlw	15
 44876  000FEA  6FE8               	movwf	232,b	;volatile
 44877                           
 44878                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 44879  000FEC  0E13               	movlw	19
 44880  000FEE  6FDE               	movwf	222,b	;volatile
 44881                           
 44882                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 44883  000FF0  0E16               	movlw	22
 44884  000FF2  6F0E               	movwf	14,b	;volatile
 44885                           
 44886                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 44887  000FF4  0E1E               	movlw	30
 44888  000FF6  6F13               	movwf	19,b	;volatile
 44889                           
 44890                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 44891  000FF8  0E08               	movlw	8
 44892  000FFA  6FC0               	movwf	192,b	;volatile
 44893                           
 44894                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 44895  000FFC  0E10               	movlw	16
 44896  000FFE  6F19               	movwf	25,b	;volatile
 44897                           
 44898                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 44899  001000  0E09               	movlw	9
 44900  001002  6FC1               	movwf	193,b	;volatile
 44901                           
 44902                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 44903  001004  0E1F               	movlw	31
 44904  001006  6F15               	movwf	21,b	;volatile
 44905                           
 44906                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 44907  001008  0E13               	movlw	19
 44908  00100A  6F16               	movwf	22,b	;volatile
 44909                           
 44910                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 44911  00100C  0E17               	movlw	23
 44912  00100E  6FE5               	movwf	229,b	;volatile
 44913                           
 44914                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 44915  001010  0E14               	movlw	20
 44916  001012  6FDF               	movwf	223,b	;volatile
 44917                           
 44918                           ; BSR set to: 58
 44919                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 44920  001014  0012               	return		;funcret
 44921  001016                     __end_of_PIN_MANAGER_Initialize:
 44922                           	opt callstack 0
 44923                           
 44924 ;; *************** function _OSCILLATOR_Initialize *****************
 44925 ;; Defined at:
 44926 ;;		line 73 in file "mcc_generated_files/mcc.c"
 44927 ;; Parameters:    Size  Location     Type
 44928 ;;		None
 44929 ;; Auto vars:     Size  Location     Type
 44930 ;;		None
 44931 ;; Return value:  Size  Location     Type
 44932 ;;                  1  [STACK] void 
 44933 ;; Registers used:
 44934 ;;		wreg, status,2
 44935 ;; Tracked objects:
 44936 ;;		On entry : 3F/3A
 44937 ;;		On exit  : 3F/39
 44938 ;;		Unchanged: 0/0
 44939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44944 ;;Total ram usage:        0 bytes
 44945 ;; Hardware stack levels used:    1
 44946 ;; Hardware stack levels required when called:   15
 44947 ;; This function calls:
 44948 ;;		Nothing
 44949 ;; This function is called by:
 44950 ;;		_SYSTEM_Initialize
 44951 ;; This function uses a reentrant model
 44952 ;;
 44953                           
 44954                           	psect	text172
 44955  0028D4                     __ptext172:
 44956                           	opt callstack 0
 44957  0028D4                     _OSCILLATOR_Initialize:
 44958                           	opt callstack 14
 44959                           
 44960                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 44961                           
 44962                           ; BSR set to: 58
 44963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44964                           ;incstack = 0
 44965  0028D4  0E20               	movlw	32
 44966  0028D6  0139               	movlb	57	; () banked
 44967  0028D8  6FD9               	movwf	217,b	;volatile
 44968                           
 44969                           ; BSR set to: 57
 44970                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 44971  0028DA  6BDB               	clrf	219,b	;volatile
 44972                           
 44973                           ; BSR set to: 57
 44974                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 44975  0028DC  6BDD               	clrf	221,b	;volatile
 44976                           
 44977                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 44978  0028DE  0E02               	movlw	2
 44979  0028E0  6FDF               	movwf	223,b	;volatile
 44980                           
 44981                           ; BSR set to: 57
 44982                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 44983  0028E2  6BDE               	clrf	222,b	;volatile
 44984  0028E4                     l171:
 44985                           
 44986                           ; BSR set to: 57
 44987                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 44988  0028E4  B1DC               	btfsc	220,0,b	;volatile
 44989  0028E6  0012               	return	
 44990  0028E8  D7FD               	goto	l171
 44991  0028EA                     __end_of_OSCILLATOR_Initialize:
 44992                           	opt callstack 0
 44993                           
 44994 ;; *************** function _INTERRUPT_Initialize *****************
 44995 ;; Defined at:
 44996 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 44997 ;; Parameters:    Size  Location     Type
 44998 ;;		None
 44999 ;; Auto vars:     Size  Location     Type
 45000 ;;  state           1  [STACK] _Bool 
 45001 ;; Return value:  Size  Location     Type
 45002 ;;                  1  [STACK] void 
 45003 ;; Registers used:
 45004 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 45005 ;; Tracked objects:
 45006 ;;		On entry : 0/0
 45007 ;;		On exit  : 3F/39
 45008 ;;		Unchanged: 0/0
 45009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45014 ;;Total ram usage:        0 bytes
 45015 ;; Hardware stack levels used:    1
 45016 ;; Hardware stack levels required when called:   15
 45017 ;; This function calls:
 45018 ;;		Nothing
 45019 ;; This function is called by:
 45020 ;;		_SYSTEM_Initialize
 45021 ;; This function uses a reentrant model
 45022 ;;
 45023                           
 45024                           	psect	text173
 45025  0016A4                     __ptext173:
 45026                           	opt callstack 0
 45027  0016A4                     _INTERRUPT_Initialize:
 45028                           	opt callstack 0
 45029                           
 45030                           ; BSR set to: 57
 45031                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45032  0016A4  52E6               	movf	postinc1,f,c
 45033                           
 45034                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 45035                           
 45036                           ;incstack = 0
 45037  0016A6  8AD2               	bsf	210,5,c	;volatile
 45038                           
 45039                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 45040  0016A8  AED2               	btfss	16338,7,c	;volatile
 45041  0016AA  D003               	goto	u12420
 45042  0016AC  6A35               	clrf	(btemp+11)^0,c
 45043  0016AE  2A35               	incf	(btemp+11)^0,f,c
 45044  0016B0  D001               	goto	u12438
 45045  0016B2                     u12420:
 45046  0016B2  6A35               	clrf	(btemp+11)^0,c
 45047  0016B4                     u12438:
 45048                           
 45049                           ;stkvar	_state @ sp[(-1)+0]
 45050  0016B4  0EFF               	movlw	-1
 45051  0016B6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45052                           
 45053                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 45054  0016BC  9ED2               	bcf	16338,7,c	;volatile
 45055                           
 45056                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 45057  0016BE  0E55               	movlw	85
 45058  0016C0  6ED4               	movwf	212,c	;volatile
 45059                           
 45060                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 45061  0016C2  0EAA               	movlw	170
 45062  0016C4  6ED4               	movwf	212,c	;volatile
 45063                           
 45064                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 45065  0016C6  90D4               	bcf	212,0,c	;volatile
 45066                           
 45067                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 45068  0016C8  0138               	movlb	56	; () banked
 45069  0016CA  6B9F               	clrf	159,b	;volatile
 45070                           
 45071                           ; BSR set to: 56
 45072                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 45073  0016CC  6B9E               	clrf	158,b	;volatile
 45074                           
 45075                           ; BSR set to: 56
 45076                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 45077  0016CE  0E08               	movlw	8
 45078  0016D0  6F9D               	movwf	157,b	;volatile
 45079                           
 45080                           ; BSR set to: 56
 45081                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 45082  0016D2  0E55               	movlw	85
 45083  0016D4  6ED4               	movwf	212,c	;volatile
 45084                           
 45085                           ; BSR set to: 56
 45086                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 45087  0016D6  0EAA               	movlw	170
 45088  0016D8  6ED4               	movwf	212,c	;volatile
 45089                           
 45090                           ; BSR set to: 56
 45091                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 45092  0016DA  80D4               	bsf	212,0,c	;volatile
 45093                           
 45094                           ; BSR set to: 56
 45095                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 45096                           ;stkvar	_state @ sp[(-1)+0]
 45097  0016DC  0EFF               	movlw	-1
 45098  0016DE  B0E3               	btfsc	plusw1,0,c
 45099  0016E0  D002               	bra	u12445
 45100  0016E2  9ED2               	bcf	16338,7,c	;volatile
 45101  0016E4  D001               	bra	u12446
 45102  0016E6                     u12445:
 45103  0016E6  8ED2               	bsf	16338,7,c	;volatile
 45104  0016E8                     u12446:
 45105                           
 45106                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 45107  0016E8  0139               	movlb	57	; () banked
 45108  0016EA  8782               	bsf	130,3,b	;volatile
 45109                           
 45110                           ; BSR set to: 57
 45111                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 45112  0016EC  8382               	bsf	130,1,b	;volatile
 45113                           
 45114                           ; BSR set to: 57
 45115                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 45116  0016EE  8182               	bsf	130,0,b	;volatile
 45117                           
 45118                           ; BSR set to: 57
 45119                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 45120  0016F0  8582               	bsf	130,2,b	;volatile
 45121                           
 45122                           ; BSR set to: 57
 45123                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 45124  0016F2  8786               	bsf	134,3,b	;volatile
 45125                           
 45126                           ; BSR set to: 57
 45127                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 45128  0016F4  8586               	bsf	134,2,b	;volatile
 45129                           
 45130                           ; BSR set to: 57
 45131                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 45132  0016F6  8783               	bsf	131,3,b	;volatile
 45133                           
 45134                           ; BSR set to: 57
 45135                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 45136  0016F8  8181               	bsf	129,0,b	;volatile
 45137                           
 45138                           ; BSR set to: 57
 45139                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 45140  0016FA  9185               	bcf	133,0,b	;volatile
 45141                           
 45142                           ; BSR set to: 57
 45143                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 45144  0016FC  8189               	bsf	137,0,b	;volatile
 45145                           
 45146                           ; BSR set to: 57
 45147                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 45148  0016FE  9D88               	bcf	136,6,b	;volatile
 45149                           
 45150                           ; BSR set to: 57
 45151                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 45152  001700  8581               	bsf	129,2,b	;volatile
 45153                           
 45154                           ; BSR set to: 57
 45155                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 45156  001702  8781               	bsf	129,3,b	;volatile
 45157                           
 45158                           ; BSR set to: 57
 45159                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 45160  001704  9D86               	bcf	134,6,b	;volatile
 45161                           
 45162                           ; BSR set to: 57
 45163                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 45164  001706  52E5               	movf	postdec1,f,c
 45165  001708  0012               	return		;funcret
 45166  00170A                     __end_of_INTERRUPT_Initialize:
 45167                           	opt callstack 0
 45168                           
 45169 ;; *************** function _FVR_Initialize *****************
 45170 ;; Defined at:
 45171 ;;		line 58 in file "mcc_generated_files/fvr.c"
 45172 ;; Parameters:    Size  Location     Type
 45173 ;;		None
 45174 ;; Auto vars:     Size  Location     Type
 45175 ;;		None
 45176 ;; Return value:  Size  Location     Type
 45177 ;;                  1  [STACK] void 
 45178 ;; Registers used:
 45179 ;;		wreg, status,2
 45180 ;; Tracked objects:
 45181 ;;		On entry : 3F/39
 45182 ;;		On exit  : 3F/3E
 45183 ;;		Unchanged: 0/0
 45184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45189 ;;Total ram usage:        0 bytes
 45190 ;; Hardware stack levels used:    1
 45191 ;; Hardware stack levels required when called:   15
 45192 ;; This function calls:
 45193 ;;		Nothing
 45194 ;; This function is called by:
 45195 ;;		_SYSTEM_Initialize
 45196 ;; This function uses a reentrant model
 45197 ;;
 45198                           
 45199                           	psect	text174
 45200  002A22                     __ptext174:
 45201                           	opt callstack 0
 45202  002A22                     _FVR_Initialize:
 45203                           	opt callstack 14
 45204                           
 45205                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 45206                           
 45207                           ; BSR set to: 57
 45208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45209                           ;incstack = 0
 45210  002A22  0EAF               	movlw	175
 45211  002A24  013E               	movlb	62	; () banked
 45212  002A26  6FC1               	movwf	193,b	;volatile
 45213                           
 45214                           ; BSR set to: 62
 45215                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45216  002A28  0012               	return		;funcret
 45217  002A2A                     __end_of_FVR_Initialize:
 45218                           	opt callstack 0
 45219                           
 45220 ;; *************** function _EXT_INT_Initialize *****************
 45221 ;; Defined at:
 45222 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 45223 ;; Parameters:    Size  Location     Type
 45224 ;;		None
 45225 ;; Auto vars:     Size  Location     Type
 45226 ;;		None
 45227 ;; Return value:  Size  Location     Type
 45228 ;;                  1  [STACK] void 
 45229 ;; Registers used:
 45230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45231 ;; Tracked objects:
 45232 ;;		On entry : 3F/3F
 45233 ;;		On exit  : 3F/39
 45234 ;;		Unchanged: 0/0
 45235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45240 ;;Total ram usage:        0 bytes
 45241 ;; Hardware stack levels used:    1
 45242 ;; Hardware stack levels required when called:   16
 45243 ;; This function calls:
 45244 ;;		_INT0_SetInterruptHandler
 45245 ;;		_INT1_SetInterruptHandler
 45246 ;; This function is called by:
 45247 ;;		_SYSTEM_Initialize
 45248 ;; This function uses a reentrant model
 45249 ;;
 45250                           
 45251                           	psect	text175
 45252  0021DC                     __ptext175:
 45253                           	opt callstack 0
 45254  0021DC                     _EXT_INT_Initialize:
 45255                           	opt callstack 13
 45256                           
 45257                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 45258                           
 45259                           ; BSR set to: 62
 45260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45261                           ;incstack = 0
 45262  0021DC  0139               	movlb	57	; () banked
 45263  0021DE  91A1               	bcf	161,0,b	;volatile
 45264                           
 45265                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 45266  0021E0  90D2               	bcf	210,0,c	;volatile
 45267                           
 45268                           ; BSR set to: 57
 45269                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 45270  0021E2  0E5A               	movlw	low _INT0_DefaultInterruptHandler
 45271  0021E4  6EE6               	movwf	postinc1,c
 45272  0021E6  0E2A               	movlw	high _INT0_DefaultInterruptHandler
 45273  0021E8  6EE6               	movwf	postinc1,c
 45274  0021EA  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 45275  0021EC  6EE6               	movwf	postinc1,c
 45276  0021EE  ECA3  F012         	call	_INT0_SetInterruptHandler	;wreg free
 45277                           
 45278                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 45279  0021F2  0139               	movlb	57	; () banked
 45280  0021F4  8191               	bsf	145,0,b	;volatile
 45281                           
 45282                           ; BSR set to: 57
 45283                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 45284  0021F6  91A5               	bcf	165,0,b	;volatile
 45285                           
 45286                           ; BSR set to: 57
 45287                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 45288  0021F8  92D2               	bcf	210,1,c	;volatile
 45289                           
 45290                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 45291  0021FA  0E56               	movlw	low _INT1_DefaultInterruptHandler
 45292  0021FC  6EE6               	movwf	postinc1,c
 45293  0021FE  0E2A               	movlw	high _INT1_DefaultInterruptHandler
 45294  002200  6EE6               	movwf	postinc1,c
 45295  002202  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 45296  002204  6EE6               	movwf	postinc1,c
 45297  002206  EC8F  F012         	call	_INT1_SetInterruptHandler	;wreg free
 45298                           
 45299                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 45300  00220A  0139               	movlb	57	; () banked
 45301  00220C  8195               	bsf	149,0,b	;volatile
 45302                           
 45303                           ; BSR set to: 57
 45304                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 45305  00220E  0012               	return		;funcret
 45306  002210                     __end_of_EXT_INT_Initialize:
 45307                           	opt callstack 0
 45308                           
 45309 ;; *************** function _INT1_SetInterruptHandler *****************
 45310 ;; Defined at:
 45311 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 45312 ;; Parameters:    Size  Location     Type
 45313 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45314 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 45315 ;; Auto vars:     Size  Location     Type
 45316 ;;		None
 45317 ;; Return value:  Size  Location     Type
 45318 ;;                  1  [STACK] void 
 45319 ;; Registers used:
 45320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45321 ;; Tracked objects:
 45322 ;;		On entry : 3F/39
 45323 ;;		On exit  : 0/0
 45324 ;;		Unchanged: 0/0
 45325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45330 ;;Total ram usage:        0 bytes
 45331 ;; Hardware stack levels used:    1
 45332 ;; Hardware stack levels required when called:   15
 45333 ;; This function calls:
 45334 ;;		Nothing
 45335 ;; This function is called by:
 45336 ;;		_EXT_INT_Initialize
 45337 ;;		_start_switch_handler
 45338 ;; This function uses a reentrant model
 45339 ;;
 45340                           
 45341                           	psect	text176
 45342  00251E                     __ptext176:
 45343                           	opt callstack 0
 45344  00251E                     _INT1_SetInterruptHandler:
 45345                           	opt callstack 14
 45346                           
 45347                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 45348                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45349                           
 45350                           ; BSR set to: 57
 45351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45352                           ;incstack = 0
 45353  00251E  50E1               	movf	fsr1l,w,c
 45354  002520  0FFD               	addlw	-3
 45355  002522  6ED9               	movwf	fsr2l,c
 45356  002524  50E2               	movf	fsr1h,w,c
 45357  002526  6EDA               	movwf	fsr2h,c
 45358  002528  0EFF               	movlw	255
 45359  00252A  22DA               	addwfc	fsr2h,f,c
 45360  00252C  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 45361  002532  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 45362  002538  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 45363                           
 45364                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45365  00253E  52E5               	movf	postdec1,f,c
 45366  002540  52E5               	movf	postdec1,f,c
 45367  002542  52E5               	movf	postdec1,f,c
 45368  002544  0012               	return		;funcret
 45369  002546                     __end_of_INT1_SetInterruptHandler:
 45370                           	opt callstack 0
 45371                           
 45372 ;; *************** function _INT0_SetInterruptHandler *****************
 45373 ;; Defined at:
 45374 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 45375 ;; Parameters:    Size  Location     Type
 45376 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45377 ;;		 -> INT0_DefaultInterruptHandler(1), 
 45378 ;; Auto vars:     Size  Location     Type
 45379 ;;		None
 45380 ;; Return value:  Size  Location     Type
 45381 ;;                  1  [STACK] void 
 45382 ;; Registers used:
 45383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45384 ;; Tracked objects:
 45385 ;;		On entry : 3F/39
 45386 ;;		On exit  : 0/0
 45387 ;;		Unchanged: 0/0
 45388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45393 ;;Total ram usage:        0 bytes
 45394 ;; Hardware stack levels used:    1
 45395 ;; Hardware stack levels required when called:   15
 45396 ;; This function calls:
 45397 ;;		Nothing
 45398 ;; This function is called by:
 45399 ;;		_EXT_INT_Initialize
 45400 ;; This function uses a reentrant model
 45401 ;;
 45402                           
 45403                           	psect	text177
 45404  002546                     __ptext177:
 45405                           	opt callstack 0
 45406  002546                     _INT0_SetInterruptHandler:
 45407                           	opt callstack 13
 45408                           
 45409                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 45410                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45411                           
 45412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45413                           ;incstack = 0
 45414  002546  50E1               	movf	fsr1l,w,c
 45415  002548  0FFD               	addlw	-3
 45416  00254A  6ED9               	movwf	fsr2l,c
 45417  00254C  50E2               	movf	fsr1h,w,c
 45418  00254E  6EDA               	movwf	fsr2h,c
 45419  002550  0EFF               	movlw	255
 45420  002552  22DA               	addwfc	fsr2h,f,c
 45421  002554  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 45422  00255A  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 45423  002560  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 45424                           
 45425                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45426  002566  52E5               	movf	postdec1,f,c
 45427  002568  52E5               	movf	postdec1,f,c
 45428  00256A  52E5               	movf	postdec1,f,c
 45429  00256C  0012               	return		;funcret
 45430  00256E                     __end_of_INT0_SetInterruptHandler:
 45431                           	opt callstack 0
 45432                           
 45433 ;; *************** function _DMA2_Initialize *****************
 45434 ;; Defined at:
 45435 ;;		line 61 in file "mcc_generated_files/dma2.c"
 45436 ;; Parameters:    Size  Location     Type
 45437 ;;		None
 45438 ;; Auto vars:     Size  Location     Type
 45439 ;;		None
 45440 ;; Return value:  Size  Location     Type
 45441 ;;                  1  [STACK] void 
 45442 ;; Registers used:
 45443 ;;		wreg, status,2
 45444 ;; Tracked objects:
 45445 ;;		On entry : 3F/3D
 45446 ;;		On exit  : 3F/3B
 45447 ;;		Unchanged: 0/0
 45448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45453 ;;Total ram usage:        0 bytes
 45454 ;; Hardware stack levels used:    1
 45455 ;; Hardware stack levels required when called:   15
 45456 ;; This function calls:
 45457 ;;		Nothing
 45458 ;; This function is called by:
 45459 ;;		_SYSTEM_Initialize
 45460 ;; This function uses a reentrant model
 45461 ;;
 45462                           
 45463                           	psect	text178
 45464  001A08                     __ptext178:
 45465                           	opt callstack 0
 45466  001A08                     _DMA2_Initialize:
 45467                           	opt callstack 14
 45468                           
 45469                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 45470                           
 45471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45472                           ;incstack = 0
 45473  001A08  0E00               	movlw	0
 45474  001A0A  013B               	movlb	59	; () banked
 45475  001A0C  6FD9               	movwf	217,b	;volatile
 45476  001A0E  0E10               	movlw	16
 45477  001A10  6FDA               	movwf	218,b	;volatile
 45478  001A12  0E00               	movlw	0
 45479  001A14  6FDB               	movwf	219,b	;volatile
 45480                           
 45481                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 45482  001A16  0E3F               	movlw	63
 45483  001A18  6FD1               	movwf	209,b	;volatile
 45484  001A1A  0EBB               	movlw	187
 45485  001A1C  6FD0               	movwf	208,b	;volatile
 45486                           
 45487                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 45488  001A1E  0E03               	movlw	3
 45489  001A20  6FDD               	movwf	221,b	;volatile
 45490                           
 45491                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 45492  001A22  0E00               	movlw	0
 45493  001A24  6FD8               	movwf	216,b	;volatile
 45494  001A26  0E01               	movlw	1
 45495  001A28  6FD7               	movwf	215,b	;volatile
 45496                           
 45497                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 45498  001A2A  0E00               	movlw	0
 45499  001A2C  6FCF               	movwf	207,b	;volatile
 45500  001A2E  0E01               	movlw	1
 45501  001A30  6FCE               	movwf	206,b	;volatile
 45502                           
 45503                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 45504  001A32  0E1C               	movlw	28
 45505  001A34  6FDF               	movwf	223,b	;volatile
 45506                           
 45507                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 45508  001A36  0E3D               	movlw	61
 45509  001A38  6FDE               	movwf	222,b	;volatile
 45510                           
 45511                           ; BSR set to: 59
 45512                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 45513  001A3A  0139               	movlb	57	; () banked
 45514  001A3C  97A5               	bcf	165,3,b	;volatile
 45515                           
 45516                           ; BSR set to: 57
 45517                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 45518  001A3E  95A5               	bcf	165,2,b	;volatile
 45519                           
 45520                           ; BSR set to: 57
 45521                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 45522  001A40  9BA5               	bcf	165,5,b	;volatile
 45523                           
 45524                           ; BSR set to: 57
 45525                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 45526  001A42  99A5               	bcf	165,4,b	;volatile
 45527                           
 45528                           ; BSR set to: 57
 45529                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 45530  001A44  9795               	bcf	149,3,b	;volatile
 45531                           
 45532                           ; BSR set to: 57
 45533                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 45534  001A46  9595               	bcf	149,2,b	;volatile
 45535                           
 45536                           ; BSR set to: 57
 45537                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 45538  001A48  9B95               	bcf	149,5,b	;volatile
 45539                           
 45540                           ; BSR set to: 57
 45541                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 45542  001A4A  9995               	bcf	149,4,b	;volatile
 45543  001A4C  9ED2               	bcf	16338,7,c	;# 
 45544  001A4E  0139               	banksel	14831	;# 
 45545  001A50  0E55               	movlw	85	;# 
 45546  001A52  6FEF               	movwf	14831,b	;# 
 45547  001A54  0EAA               	movlw	170	;# 
 45548  001A56  6FEF               	movwf	14831,b	;# 
 45549  001A58  81EF               	bsf	14831,0,b	;# 
 45550  001A5A  8ED2               	bsf	16338,7,c	;# 
 45551                           
 45552                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 45553  001A5C  013B               	movlb	59	; () banked
 45554  001A5E  6BDC               	clrf	220,b	;volatile
 45555                           
 45556                           ; BSR set to: 59
 45557                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45558  001A60  0012               	return		;funcret
 45559  001A62                     __end_of_DMA2_Initialize:
 45560                           	opt callstack 0
 45561                           
 45562 ;; *************** function _DMA1_Initialize *****************
 45563 ;; Defined at:
 45564 ;;		line 86 in file "mcc_generated_files/dma1.c"
 45565 ;; Parameters:    Size  Location     Type
 45566 ;;		None
 45567 ;; Auto vars:     Size  Location     Type
 45568 ;;		None
 45569 ;; Return value:  Size  Location     Type
 45570 ;;                  1  [STACK] void 
 45571 ;; Registers used:
 45572 ;;		wreg, status,2
 45573 ;; Tracked objects:
 45574 ;;		On entry : 3F/3B
 45575 ;;		On exit  : 3F/3B
 45576 ;;		Unchanged: 0/0
 45577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45582 ;;Total ram usage:        0 bytes
 45583 ;; Hardware stack levels used:    1
 45584 ;; Hardware stack levels required when called:   15
 45585 ;; This function calls:
 45586 ;;		Nothing
 45587 ;; This function is called by:
 45588 ;;		_SYSTEM_Initialize
 45589 ;; This function uses a reentrant model
 45590 ;;
 45591                           
 45592                           	psect	text179
 45593  001498                     __ptext179:
 45594                           	opt callstack 0
 45595  001498                     _DMA1_Initialize:
 45596                           	opt callstack 14
 45597                           
 45598                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 45599                           
 45600                           ; BSR set to: 59
 45601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45602                           ;incstack = 0
 45603  001498  0E00               	movlw	0
 45604  00149A  013B               	movlb	59	; () banked
 45605  00149C  6FF9               	movwf	249,b	;volatile
 45606  00149E  0E10               	movlw	16
 45607  0014A0  6FFA               	movwf	250,b	;volatile
 45608  0014A2  0E00               	movlw	0
 45609  0014A4  6FFB               	movwf	251,b	;volatile
 45610                           
 45611                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 45612  0014A6  0E3D               	movlw	61
 45613  0014A8  6FF1               	movwf	241,b	;volatile
 45614  0014AA  0E11               	movlw	17
 45615  0014AC  6FF0               	movwf	240,b	;volatile
 45616                           
 45617                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 45618  0014AE  0E03               	movlw	3
 45619  0014B0  6FFD               	movwf	253,b	;volatile
 45620                           
 45621                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 45622  0014B2  0E00               	movlw	0
 45623  0014B4  6FF8               	movwf	248,b	;volatile
 45624  0014B6  0E01               	movlw	1
 45625  0014B8  6FF7               	movwf	247,b	;volatile
 45626                           
 45627                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 45628  0014BA  0E00               	movlw	0
 45629  0014BC  6FEF               	movwf	239,b	;volatile
 45630  0014BE  0E01               	movlw	1
 45631  0014C0  6FEE               	movwf	238,b	;volatile
 45632                           
 45633                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 45634  0014C2  0E15               	movlw	21
 45635  0014C4  6FFF               	movwf	255,b	;volatile
 45636                           
 45637                           ; BSR set to: 59
 45638                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 45639  0014C6  6BFE               	clrf	254,b	;volatile
 45640                           
 45641                           ; BSR set to: 59
 45642                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 45643  0014C8  0139               	movlb	57	; () banked
 45644  0014CA  93A2               	bcf	162,1,b	;volatile
 45645                           
 45646                           ; BSR set to: 57
 45647                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 45648  0014CC  91A2               	bcf	162,0,b	;volatile
 45649                           
 45650                           ; BSR set to: 57
 45651                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 45652  0014CE  97A2               	bcf	162,3,b	;volatile
 45653                           
 45654                           ; BSR set to: 57
 45655                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 45656  0014D0  95A2               	bcf	162,2,b	;volatile
 45657                           
 45658                           ; BSR set to: 57
 45659                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 45660  0014D2  8392               	bsf	146,1,b	;volatile
 45661                           
 45662                           ; BSR set to: 57
 45663                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 45664  0014D4  8192               	bsf	146,0,b	;volatile
 45665                           
 45666                           ; BSR set to: 57
 45667                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 45668  0014D6  8792               	bsf	146,3,b	;volatile
 45669                           
 45670                           ; BSR set to: 57
 45671                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 45672  0014D8  8592               	bsf	146,2,b	;volatile
 45673                           
 45674                           ; BSR set to: 57
 45675                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 45676  0014DA  6BF1               	clrf	241,b	;volatile
 45677                           
 45678                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 45679  0014DC  0E01               	movlw	1
 45680  0014DE  6FF2               	movwf	242,b	;volatile
 45681                           
 45682                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 45683  0014E0  0E04               	movlw	4
 45684  0014E2  6FF3               	movwf	243,b	;volatile
 45685                           
 45686                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 45687  0014E4  0E02               	movlw	2
 45688  0014E6  6FF4               	movwf	244,b	;volatile
 45689                           
 45690                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 45691  0014E8  0E03               	movlw	3
 45692  0014EA  6FF7               	movwf	247,b	;volatile
 45693  0014EC  9ED2               	bcf	16338,7,c	;# 
 45694  0014EE  0139               	banksel	14831	;# 
 45695  0014F0  0E55               	movlw	85	;# 
 45696  0014F2  6FEF               	movwf	14831,b	;# 
 45697  0014F4  0EAA               	movlw	170	;# 
 45698  0014F6  6FEF               	movwf	14831,b	;# 
 45699  0014F8  81EF               	bsf	14831,0,b	;# 
 45700  0014FA  8ED2               	bsf	16338,7,c	;# 
 45701                           
 45702                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 45703  0014FC  013B               	movlb	59	; () banked
 45704  0014FE  6BFC               	clrf	252,b	;volatile
 45705                           
 45706                           ; BSR set to: 59
 45707                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45708  001500  0012               	return		;funcret
 45709  001502                     __end_of_DMA1_Initialize:
 45710                           	opt callstack 0
 45711                           
 45712 ;; *************** function _CRC_Initialize *****************
 45713 ;; Defined at:
 45714 ;;		line 76 in file "mcc_generated_files/crc.c"
 45715 ;; Parameters:    Size  Location     Type
 45716 ;;		None
 45717 ;; Auto vars:     Size  Location     Type
 45718 ;;  seed            2  [STACK] unsigned short 
 45719 ;;  poly            2  [STACK] unsigned short 
 45720 ;; Return value:  Size  Location     Type
 45721 ;;                  1  [STACK] void 
 45722 ;; Registers used:
 45723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 45724 ;; Tracked objects:
 45725 ;;		On entry : 0/39
 45726 ;;		On exit  : 3F/0
 45727 ;;		Unchanged: 0/0
 45728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45733 ;;Total ram usage:        0 bytes
 45734 ;; Hardware stack levels used:    1
 45735 ;; Hardware stack levels required when called:   15
 45736 ;; This function calls:
 45737 ;;		Nothing
 45738 ;; This function is called by:
 45739 ;;		_SYSTEM_Initialize
 45740 ;;		_read_cal_data
 45741 ;;		_write_cal_data
 45742 ;; This function uses a reentrant model
 45743 ;;
 45744                           
 45745                           	psect	text180
 45746  001016                     __ptext180:
 45747                           	opt callstack 0
 45748  001016                     _CRC_Initialize:
 45749                           	opt callstack 0
 45750                           
 45751                           ; BSR set to: 59
 45752                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45753  001016  52E6               	movf	postinc1,f,c
 45754  001018  52E6               	movf	postinc1,f,c
 45755  00101A  52E6               	movf	postinc1,f,c
 45756  00101C  52E6               	movf	postinc1,f,c
 45757                           
 45758                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 45759                           
 45760                           ;incstack = 0
 45761  00101E  0E80               	movlw	128
 45762  001020  0139               	movlb	57	; () banked
 45763  001022  6F68               	movwf	104,b	;volatile
 45764                           
 45765                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 45766  001024  0E07               	movlw	7
 45767  001026  6F69               	movwf	105,b	;volatile
 45768                           
 45769                           ; BSR set to: 57
 45770                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 45771  001028  6B62               	clrf	98,b	;volatile
 45772                           
 45773                           ; BSR set to: 57
 45774                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 45775  00102A  6B63               	clrf	99,b	;volatile
 45776                           
 45777                           ; BSR set to: 57
 45778                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 45779  00102C  6B7C               	clrf	124,b	;volatile
 45780                           
 45781                           ; BSR set to: 57
 45782                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 45783  00102E  6B78               	clrf	120,b	;volatile
 45784                           
 45785                           ; BSR set to: 57
 45786                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 45787  001030  6B77               	clrf	119,b	;volatile
 45788                           
 45789                           ; BSR set to: 57
 45790                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 45791  001032  6B76               	clrf	118,b	;volatile
 45792                           
 45793                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 45794  001034  0E3F               	movlw	63
 45795  001036  6F7B               	movwf	123,b	;volatile
 45796                           
 45797                           ; BSR set to: 57
 45798                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 45799  001038  697A               	setf	122,b	;volatile
 45800                           
 45801                           ; BSR set to: 57
 45802                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 45803  00103A  6979               	setf	121,b	;volatile
 45804                           
 45805                           ; BSR set to: 57
 45806                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 45807  00103C  6B7D               	clrf	125,b	;volatile
 45808                           
 45809                           ; BSR set to: 57
 45810                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 45811  00103E  0ED5               	movlw	213
 45812  001040  6E34               	movwf	(btemp+10)^0,c
 45813  001042  0E00               	movlw	0
 45814  001044  6E35               	movwf	(btemp+11)^0,c
 45815                           
 45816                           ;stkvar	_poly @ sp[(-4)+2]
 45817  001046  0EFE               	movlw	-2
 45818  001048  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 45819  00104E  0EFF               	movlw	-1
 45820  001050  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45821                           
 45822                           ; BSR set to: 57
 45823                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 45824                           ;stkvar	_poly @ sp[(-4)+2]
 45825  001056  0EFF               	movlw	255
 45826  001058  24E1               	addwf	fsr1l,w,c
 45827  00105A  6ED9               	movwf	fsr2l,c
 45828  00105C  0EFF               	movlw	255
 45829  00105E  20E2               	addwfc	fsr1h,w,c
 45830  001060  6EDA               	movwf	fsr2h,c
 45831  001062  50DF               	movf	indf2,w,c
 45832  001064  6F67               	movwf	103,b	;volatile
 45833                           
 45834                           ; BSR set to: 57
 45835                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 45836  001066  0ED5               	movlw	213
 45837  001068  6F66               	movwf	102,b	;volatile
 45838                           
 45839                           ; BSR set to: 57
 45840                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 45841                           ;stkvar	_seed @ sp[(-4)+0]
 45842  00106A  0EFC               	movlw	-4
 45843  00106C  6AE3               	clrf	plusw1,c
 45844  00106E  0EFD               	movlw	-3
 45845  001070  6AE3               	clrf	plusw1,c
 45846                           
 45847                           ; BSR set to: 57
 45848                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 45849                           ;stkvar	_seed @ sp[(-4)+0]
 45850  001072  0EFD               	movlw	253
 45851  001074  24E1               	addwf	fsr1l,w,c
 45852  001076  6ED9               	movwf	fsr2l,c
 45853  001078  0EFF               	movlw	255
 45854  00107A  20E2               	addwfc	fsr1h,w,c
 45855  00107C  6EDA               	movwf	fsr2h,c
 45856  00107E  50DF               	movf	indf2,w,c
 45857  001080  6F63               	movwf	99,b	;volatile
 45858                           
 45859                           ; BSR set to: 57
 45860                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 45861  001082  6B62               	clrf	98,b	;volatile
 45862                           
 45863                           ; BSR set to: 57
 45864                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 45865  001084  3969               	swapf	105,w,b	;volatile
 45866  001086  0B0F               	andlw	15
 45867  001088  6E35               	movwf	(btemp+11)^0,c
 45868  00108A  2835               	incf	(btemp+11)^0,w,c
 45869  00108C  0100               	movlb	0	; () banked
 45870  00108E  6FE2               	movwf	_crcObj& (0+255),b
 45871                           
 45872                           ; BSR set to: 0
 45873                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 45874  001090  0139               	movlb	57	; () banked
 45875  001092  5169               	movf	105,w,b	;volatile
 45876  001094  0B0F               	andlw	15
 45877  001096  6E35               	movwf	(btemp+11)^0,c
 45878  001098  2835               	incf	(btemp+11)^0,w,c
 45879  00109A  0100               	movlb	0	; () banked
 45880  00109C  6FE3               	movwf	(_crcObj+1)& (0+255),b
 45881                           
 45882                           ; BSR set to: 0
 45883                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45884  00109E  52E5               	movf	postdec1,f,c
 45885  0010A0  52E5               	movf	postdec1,f,c
 45886  0010A2  52E5               	movf	postdec1,f,c
 45887  0010A4  52E5               	movf	postdec1,f,c
 45888  0010A6  0012               	return		;funcret
 45889  0010A8                     __end_of_CRC_Initialize:
 45890                           	opt callstack 0
 45891                           
 45892 ;; *************** function _CLKREF_Initialize *****************
 45893 ;; Defined at:
 45894 ;;		line 58 in file "mcc_generated_files/clkref.c"
 45895 ;; Parameters:    Size  Location     Type
 45896 ;;		None
 45897 ;; Auto vars:     Size  Location     Type
 45898 ;;		None
 45899 ;; Return value:  Size  Location     Type
 45900 ;;                  1  [STACK] void 
 45901 ;; Registers used:
 45902 ;;		wreg, status,2
 45903 ;; Tracked objects:
 45904 ;;		On entry : 3F/3B
 45905 ;;		On exit  : 3F/3C
 45906 ;;		Unchanged: 0/0
 45907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45912 ;;Total ram usage:        0 bytes
 45913 ;; Hardware stack levels used:    1
 45914 ;; Hardware stack levels required when called:   15
 45915 ;; This function calls:
 45916 ;;		Nothing
 45917 ;; This function is called by:
 45918 ;;		_SYSTEM_Initialize
 45919 ;; This function uses a reentrant model
 45920 ;;
 45921                           
 45922                           	psect	text181
 45923  0029CA                     __ptext181:
 45924                           	opt callstack 0
 45925  0029CA                     _CLKREF_Initialize:
 45926                           	opt callstack 14
 45927                           
 45928                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 45929                           
 45930                           ; BSR set to: 0
 45931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45932                           ;incstack = 0
 45933  0029CA  013C               	movlb	60	; () banked
 45934  0029CC  6BE6               	clrf	230,b	;volatile
 45935                           
 45936                           ; BSR set to: 60
 45937                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 45938  0029CE  0E94               	movlw	148
 45939  0029D0  6FE5               	movwf	229,b	;volatile
 45940                           
 45941                           ; BSR set to: 60
 45942                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 45943  0029D2  0012               	return		;funcret
 45944  0029D4                     __end_of_CLKREF_Initialize:
 45945                           	opt callstack 0
 45946                           
 45947 ;; *************** function _ADCC_Initialize *****************
 45948 ;; Defined at:
 45949 ;;		line 65 in file "mcc_generated_files/adcc.c"
 45950 ;; Parameters:    Size  Location     Type
 45951 ;;		None
 45952 ;; Auto vars:     Size  Location     Type
 45953 ;;		None
 45954 ;; Return value:  Size  Location     Type
 45955 ;;                  1  [STACK] void 
 45956 ;; Registers used:
 45957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 45958 ;; Tracked objects:
 45959 ;;		On entry : 3F/0
 45960 ;;		On exit  : 0/0
 45961 ;;		Unchanged: 0/0
 45962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45967 ;;Total ram usage:        0 bytes
 45968 ;; Hardware stack levels used:    1
 45969 ;; Hardware stack levels required when called:   16
 45970 ;; This function calls:
 45971 ;;		_ADCC_SetADIInterruptHandler
 45972 ;;		_ADCC_SetADTIInterruptHandler
 45973 ;; This function is called by:
 45974 ;;		_SYSTEM_Initialize
 45975 ;; This function uses a reentrant model
 45976 ;;
 45977                           
 45978                           	psect	text182
 45979  001502                     __ptext182:
 45980                           	opt callstack 0
 45981  001502                     _ADCC_Initialize:
 45982                           	opt callstack 13
 45983                           
 45984                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 45985                           
 45986                           ; BSR set to: 60
 45987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45988                           ;incstack = 0
 45989  001502  013E               	movlb	62	; () banked
 45990  001504  6BDE               	clrf	222,b	;volatile
 45991                           
 45992                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 45993  001506  6BDF               	clrf	223,b	;volatile
 45994                           
 45995                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 45996  001508  6BE0               	clrf	224,b	;volatile
 45997                           
 45998                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 45999  00150A  6BE1               	clrf	225,b	;volatile
 46000                           
 46001                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 46002  00150C  6BE4               	clrf	228,b	;volatile
 46003                           
 46004                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 46005  00150E  6BE5               	clrf	229,b	;volatile
 46006                           
 46007                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 46008  001510  6BEA               	clrf	234,b	;volatile
 46009                           
 46010                           ; BSR set to: 62
 46011                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 46012  001512  0E40               	movlw	64
 46013  001514  6FEC               	movwf	236,b	;volatile
 46014                           
 46015                           ; BSR set to: 62
 46016                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 46017  001516  6BF1               	clrf	241,b	;volatile
 46018                           
 46019                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 46020  001518  0E20               	movlw	32
 46021  00151A  6FF3               	movwf	243,b	;volatile
 46022                           
 46023                           ; BSR set to: 62
 46024                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 46025  00151C  6BF4               	clrf	244,b	;volatile
 46026                           
 46027                           ; BSR set to: 62
 46028                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 46029  00151E  6BF5               	clrf	245,b	;volatile
 46030                           
 46031                           ; BSR set to: 62
 46032                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 46033  001520  6BF6               	clrf	246,b	;volatile
 46034                           
 46035                           ; BSR set to: 62
 46036                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 46037  001522  6BF7               	clrf	247,b	;volatile
 46038                           
 46039                           ; BSR set to: 62
 46040                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 46041  001524  6BF9               	clrf	249,b	;volatile
 46042                           
 46043                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 46044  001526  0E5B               	movlw	91
 46045  001528  6FFA               	movwf	250,b	;volatile
 46046                           
 46047                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 46048  00152A  0E27               	movlw	39
 46049  00152C  6FFB               	movwf	251,b	;volatile
 46050                           
 46051                           ; BSR set to: 62
 46052                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 46053  00152E  6BFC               	clrf	252,b	;volatile
 46054                           
 46055                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 46056  001530  0E02               	movlw	2
 46057  001532  6FFD               	movwf	253,b	;volatile
 46058                           
 46059                           ; BSR set to: 62
 46060                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 46061  001534  6BFE               	clrf	254,b	;volatile
 46062                           
 46063                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 46064  001536  0E07               	movlw	7
 46065  001538  6FFF               	movwf	255,b	;volatile
 46066                           
 46067                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 46068  00153A  0E84               	movlw	132
 46069  00153C  6FF8               	movwf	248,b	;volatile
 46070                           
 46071                           ; BSR set to: 62
 46072                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 46073  00153E  0139               	movlb	57	; () banked
 46074  001540  95A1               	bcf	161,2,b	;volatile
 46075                           
 46076                           ; BSR set to: 57
 46077                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 46078  001542  8591               	bsf	145,2,b	;volatile
 46079                           
 46080                           ; BSR set to: 57
 46081                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 46082  001544  0E5C               	movlw	low _ADCC_DefaultInterruptHandler
 46083  001546  6EE6               	movwf	postinc1,c
 46084  001548  0E2A               	movlw	high _ADCC_DefaultInterruptHandler
 46085  00154A  6EE6               	movwf	postinc1,c
 46086  00154C  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46087  00154E  6EE6               	movwf	postinc1,c
 46088  001550  ECCB  F012         	call	_ADCC_SetADIInterruptHandler	;wreg free
 46089                           
 46090                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 46091  001554  0139               	movlb	57	; () banked
 46092  001556  97A1               	bcf	161,3,b	;volatile
 46093                           
 46094                           ; BSR set to: 57
 46095                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 46096  001558  8791               	bsf	145,3,b	;volatile
 46097                           
 46098                           ; BSR set to: 57
 46099                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 46100  00155A  0E5C               	movlw	low _ADCC_DefaultInterruptHandler
 46101  00155C  6EE6               	movwf	postinc1,c
 46102  00155E  0E2A               	movlw	high _ADCC_DefaultInterruptHandler
 46103  001560  6EE6               	movwf	postinc1,c
 46104  001562  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46105  001564  6EE6               	movwf	postinc1,c
 46106  001566  ECB7  F012         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 46107                           
 46108                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46109  00156A  0012               	return		;funcret
 46110  00156C                     __end_of_ADCC_Initialize:
 46111                           	opt callstack 0
 46112                           
 46113 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 46114 ;; Defined at:
 46115 ;;		line 336 in file "mcc_generated_files/adcc.c"
 46116 ;; Parameters:    Size  Location     Type
 46117 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46118 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 46119 ;; Auto vars:     Size  Location     Type
 46120 ;;		None
 46121 ;; Return value:  Size  Location     Type
 46122 ;;                  1  [STACK] void 
 46123 ;; Registers used:
 46124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46125 ;; Tracked objects:
 46126 ;;		On entry : 0/1
 46127 ;;		On exit  : 0/0
 46128 ;;		Unchanged: 0/0
 46129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46134 ;;Total ram usage:        0 bytes
 46135 ;; Hardware stack levels used:    1
 46136 ;; Hardware stack levels required when called:   15
 46137 ;; This function calls:
 46138 ;;		Nothing
 46139 ;; This function is called by:
 46140 ;;		_ADCC_Initialize
 46141 ;;		_start_adc_scan
 46142 ;; This function uses a reentrant model
 46143 ;;
 46144                           
 46145                           	psect	text183
 46146  00256E                     __ptext183:
 46147                           	opt callstack 0
 46148  00256E                     _ADCC_SetADTIInterruptHandler:
 46149                           	opt callstack 14
 46150                           
 46151                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 46152                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46153                           
 46154                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46155                           ;incstack = 0
 46156  00256E  50E1               	movf	fsr1l,w,c
 46157  002570  0FFD               	addlw	-3
 46158  002572  6ED9               	movwf	fsr2l,c
 46159  002574  50E2               	movf	fsr1h,w,c
 46160  002576  6EDA               	movwf	fsr2h,c
 46161  002578  0EFF               	movlw	255
 46162  00257A  22DA               	addwfc	fsr2h,f,c
 46163  00257C  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 46164  002582  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 46165  002588  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 46166                           
 46167                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 46168  00258E  52E5               	movf	postdec1,f,c
 46169  002590  52E5               	movf	postdec1,f,c
 46170  002592  52E5               	movf	postdec1,f,c
 46171  002594  0012               	return		;funcret
 46172  002596                     __end_of_ADCC_SetADTIInterruptHandler:
 46173                           	opt callstack 0
 46174                           
 46175 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 46176 ;; Defined at:
 46177 ;;		line 323 in file "mcc_generated_files/adcc.c"
 46178 ;; Parameters:    Size  Location     Type
 46179 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46180 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 46181 ;; Auto vars:     Size  Location     Type
 46182 ;;		None
 46183 ;; Return value:  Size  Location     Type
 46184 ;;                  1  [STACK] void 
 46185 ;; Registers used:
 46186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46187 ;; Tracked objects:
 46188 ;;		On entry : 7/1
 46189 ;;		On exit  : 0/0
 46190 ;;		Unchanged: 0/0
 46191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46196 ;;Total ram usage:        0 bytes
 46197 ;; Hardware stack levels used:    1
 46198 ;; Hardware stack levels required when called:   15
 46199 ;; This function calls:
 46200 ;;		Nothing
 46201 ;; This function is called by:
 46202 ;;		_ADCC_Initialize
 46203 ;;		_start_adc_scan
 46204 ;; This function uses a reentrant model
 46205 ;;
 46206                           
 46207                           	psect	text184
 46208  002596                     __ptext184:
 46209                           	opt callstack 0
 46210  002596                     _ADCC_SetADIInterruptHandler:
 46211                           	opt callstack 14
 46212                           
 46213                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 46214                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46215                           
 46216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46217                           ;incstack = 0
 46218  002596  50E1               	movf	fsr1l,w,c
 46219  002598  0FFD               	addlw	-3
 46220  00259A  6ED9               	movwf	fsr2l,c
 46221  00259C  50E2               	movf	fsr1h,w,c
 46222  00259E  6EDA               	movwf	fsr2h,c
 46223  0025A0  0EFF               	movlw	255
 46224  0025A2  22DA               	addwfc	fsr2h,f,c
 46225  0025A4  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 46226  0025AA  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 46227  0025B0  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 46228                           
 46229                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 46230  0025B6  52E5               	movf	postdec1,f,c
 46231  0025B8  52E5               	movf	postdec1,f,c
 46232  0025BA  52E5               	movf	postdec1,f,c
 46233  0025BC  0012               	return		;funcret
 46234  0025BE                     __end_of_ADCC_SetADIInterruptHandler:
 46235                           	opt callstack 0
 46236                           
 46237 ;; *************** function _INT1_ISR *****************
 46238 ;; Defined at:
 46239 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 46240 ;; Parameters:    Size  Location     Type
 46241 ;;		None
 46242 ;; Auto vars:     Size  Location     Type
 46243 ;;		None
 46244 ;; Return value:  Size  Location     Type
 46245 ;;                  1    wreg      void 
 46246 ;; Registers used:
 46247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46248 ;; Tracked objects:
 46249 ;;		On entry : 0/0
 46250 ;;		On exit  : 0/0
 46251 ;;		Unchanged: 0/0
 46252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46255 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46256 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46257 ;;Total ram usage:        4 bytes
 46258 ;; Hardware stack levels used:    1
 46259 ;; Hardware stack levels required when called:    5
 46260 ;; This function calls:
 46261 ;;		_INT1_CallBack
 46262 ;; This function is called by:
 46263 ;;		Interrupt level 1
 46264 ;; This function uses a non-reentrant model
 46265 ;;
 46266                           
 46267                           	psect	text185
 46268  001FB0                     __ptext185:
 46269                           	opt callstack 0
 46270  001FB0                     _INT1_ISR:
 46271                           	opt callstack 12
 46272                           
 46273                           ;incstack = 0
 46274  001FB0  006F FF60  F007    	movff	status,??_INT1_ISR
 46275  001FB6  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 46276  001FBC  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 46277  001FC2  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 46278  001FC8  EE16  F196         	lfsr	1,___intlo_sp
 46279                           
 46280                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 46281  001FCC  0139               	movlb	57	; () banked
 46282  001FCE  91A5               	bcf	165,0,b	;volatile
 46283                           
 46284                           ; BSR set to: 57
 46285                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 46286  001FD0  EC2E  F013         	call	_INT1_CallBack	;wreg free
 46287  001FD4  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 46288  001FDA  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 46289  001FE0  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 46290  001FE6  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 46291  001FEC  0011               	retfie		f
 46292  001FEE                     __end_of_INT1_ISR:
 46293                           	opt callstack 0
 46294                           
 46295 ;; *************** function _INT1_CallBack *****************
 46296 ;; Defined at:
 46297 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 46298 ;; Parameters:    Size  Location     Type
 46299 ;;		None
 46300 ;; Auto vars:     Size  Location     Type
 46301 ;;		None
 46302 ;; Return value:  Size  Location     Type
 46303 ;;                  1  [STACK] void 
 46304 ;; Registers used:
 46305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46306 ;; Tracked objects:
 46307 ;;		On entry : 3F/39
 46308 ;;		On exit  : 0/0
 46309 ;;		Unchanged: 0/0
 46310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46315 ;;Total ram usage:        0 bytes
 46316 ;; Hardware stack levels used:    1
 46317 ;; Hardware stack levels required when called:    4
 46318 ;; This function calls:
 46319 ;;		Absolute function
 46320 ;;		_INT1_DefaultInterruptHandler
 46321 ;;		_switch_handler
 46322 ;; This function is called by:
 46323 ;;		_INT1_ISR
 46324 ;; This function uses a reentrant model
 46325 ;;
 46326                           
 46327                           	psect	text186
 46328  00265C                     __ptext186:
 46329                           	opt callstack 0
 46330  00265C                     _INT1_CallBack:
 46331                           	opt callstack 12
 46332                           
 46333                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 46334                           
 46335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46336                           ;incstack = 0
 46337  00265C  0100               	movlb	0	; () banked
 46338  00265E  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46339  002660  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46340  002662  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46341  002664  B4D8               	btfsc	status,2,c
 46342  002666  0012               	return	
 46343                           
 46344                           ; BSR set to: 0
 46345                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 46346  002668  D801               	call	u1313_28
 46347  00266A  0012               	return	
 46348  00266C                     u1313_28:
 46349  00266C  0005               	push	
 46350  00266E  6EFA               	movwf	pclath,c
 46351  002670  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46352  002672  6EFD               	movwf	tosl,c
 46353  002674  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46354  002676  6EFE               	movwf	tosh,c
 46355  002678  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46356  00267A  6EFF               	movwf	tosu,c
 46357  00267C  50FA               	movf	pclath,w,c
 46358  00267E  0012               	return		;indir
 46359  002680                     __end_of_INT1_CallBack:
 46360                           	opt callstack 0
 46361                           
 46362 ;; *************** function _INT1_DefaultInterruptHandler *****************
 46363 ;; Defined at:
 46364 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 46365 ;; Parameters:    Size  Location     Type
 46366 ;;		None
 46367 ;; Auto vars:     Size  Location     Type
 46368 ;;		None
 46369 ;; Return value:  Size  Location     Type
 46370 ;;                  1  [STACK] void 
 46371 ;; Registers used:
 46372 ;;		None
 46373 ;; Tracked objects:
 46374 ;;		On entry : 3F/0
 46375 ;;		On exit  : 0/0
 46376 ;;		Unchanged: 0/0
 46377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46382 ;;Total ram usage:        0 bytes
 46383 ;; Hardware stack levels used:    1
 46384 ;; Hardware stack levels required when called:    3
 46385 ;; This function calls:
 46386 ;;		Nothing
 46387 ;; This function is called by:
 46388 ;;		_EXT_INT_Initialize
 46389 ;;		_INT1_CallBack
 46390 ;; This function uses a reentrant model
 46391 ;;
 46392                           
 46393                           	psect	text187
 46394  002A56                     __ptext187:
 46395                           	opt callstack 0
 46396  002A56                     _INT1_DefaultInterruptHandler:
 46397                           	opt callstack 12
 46398                           
 46399                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46400                           
 46401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46402                           ;incstack = 0
 46403  002A56  0012               	return		;funcret
 46404  002A58                     __end_of_INT1_DefaultInterruptHandler:
 46405                           	opt callstack 0
 46406                           
 46407 ;; *************** function _switch_handler *****************
 46408 ;; Defined at:
 46409 ;;		line 58 in file "dio.c"
 46410 ;; Parameters:    Size  Location     Type
 46411 ;;		None
 46412 ;; Auto vars:     Size  Location     Type
 46413 ;;  i               1  [STACK] unsigned char 
 46414 ;;  sw_value        1  [STACK] unsigned char 
 46415 ;; Return value:  Size  Location     Type
 46416 ;;                  1  [STACK] void 
 46417 ;; Registers used:
 46418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 46419 ;; Tracked objects:
 46420 ;;		On entry : 3F/0
 46421 ;;		On exit  : 0/0
 46422 ;;		Unchanged: 0/0
 46423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46428 ;;Total ram usage:        0 bytes
 46429 ;; Hardware stack levels used:    1
 46430 ;; Hardware stack levels required when called:    3
 46431 ;; This function calls:
 46432 ;;		Nothing
 46433 ;; This function is called by:
 46434 ;;		_start_switch_handler
 46435 ;;		_INT1_CallBack
 46436 ;; This function uses a reentrant model
 46437 ;;
 46438                           
 46439                           	psect	text188
 46440  01F162                     __ptext188:
 46441                           	opt callstack 0
 46442  01F162                     _switch_handler:
 46443                           	opt callstack 0
 46444                           
 46445                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46446  01F162  52E6               	movf	postinc1,f,c
 46447  01F164  52E6               	movf	postinc1,f,c
 46448                           
 46449                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 46450                           ;stkvar	_i @ sp[(-2)+0]
 46451                           
 46452                           ;incstack = 0
 46453  01F166  0EFE               	movlw	-2
 46454  01F168  6AE3               	clrf	plusw1,c
 46455  01F16A  9ABF               	bcf	191,5,c	;volatile
 46456                           
 46457                           ;dio.c: 72:  __nop();
 46458  01F16C  F000               	nop	
 46459                           
 46460                           ;dio.c: 73:  __nop();
 46461  01F16E  F000               	nop	
 46462                           
 46463                           ;dio.c: 74:  __nop();
 46464  01F170  F000               	nop	
 46465                           
 46466                           ;dio.c: 75:  __nop();
 46467  01F172  F000               	nop	
 46468                           
 46469                           ;dio.c: 76:  __nop();
 46470  01F174  F000               	nop	
 46471                           
 46472                           ;dio.c: 77:  __nop();
 46473  01F176  F000               	nop	
 46474  01F178  D016               	goto	l13732
 46475  01F17A                     l13718:
 46476                           
 46477                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 46478  01F17A  A6CF               	btfss	207,3,c	;volatile
 46479  01F17C  D00E               	goto	u1279_20
 46480  01F17E  D00A               	goto	u1279_21
 46481  01F180                     u1277_28:
 46482                           
 46483                           ;stkvar	_sw_value @ sp[(-2)+1]
 46484  01F180  0EFF               	movlw	-1
 46485  01F182  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46486                           
 46487                           ;dio.c: 83:    break;
 46488  01F188  D027               	goto	l13734
 46489  01F18A                     l13720:
 46490                           
 46491                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 46492  01F18A  A4CF               	btfss	207,2,c	;volatile
 46493  01F18C  D006               	goto	u1279_20
 46494  01F18E  D002               	goto	u1279_21
 46495  01F190                     l13722:
 46496                           
 46497                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 46498  01F190  A6CD               	btfss	205,3,c	;volatile
 46499  01F192  D003               	goto	u1279_20
 46500  01F194                     u1279_21:
 46501  01F194  6A35               	clrf	(btemp+11)^0,c
 46502  01F196  2A35               	incf	(btemp+11)^0,f,c
 46503  01F198  D7F3               	goto	u1277_28
 46504  01F19A                     u1279_20:
 46505  01F19A  6A35               	clrf	(btemp+11)^0,c
 46506  01F19C  D7F1               	goto	u1277_28
 46507  01F19E                     l13724:
 46508                           
 46509                           ;dio.c: 91:    sw_value = 1;
 46510                           ;stkvar	_sw_value @ sp[(-2)+1]
 46511  01F19E  0EFF               	movlw	-1
 46512  01F1A0  6AE3               	clrf	plusw1,c
 46513  01F1A2  2AE3               	incf	plusw1,f,c
 46514                           
 46515                           ;dio.c: 92:    break;
 46516  01F1A4  D019               	goto	l13734
 46517  01F1A6                     l13732:
 46518                           
 46519                           ;stkvar	_i @ sp[(-2)+0]
 46520  01F1A6  0EFE               	movlw	-2
 46521  01F1A8  50E3               	movf	plusw1,w,c
 46522  01F1AA  6E34               	movwf	(btemp+10)^0,c
 46523  01F1AC  6A35               	clrf	(btemp+11)^0,c
 46524                           
 46525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 46526                           ; Switch size 1, requested type "simple"
 46527                           ; Number of cases is 1, Range of values is 0 to 0
 46528                           ; switch strategies available:
 46529                           ; Name         Instructions Cycles
 46530                           ; simple_byte            4     3 (average)
 46531                           ;	Chosen strategy is simple_byte
 46532  01F1AE  5035               	movf	(btemp+11)^0,w,c
 46533  01F1B0  0A00               	xorlw	0	; case 0
 46534  01F1B2  A4D8               	btfss	status,2,c
 46535  01F1B4  D7F4               	goto	l13724
 46536                           
 46537                           ; Switch size 1, requested type "simple"
 46538                           ; Number of cases is 5, Range of values is 0 to 4
 46539                           ; switch strategies available:
 46540                           ; Name         Instructions Cycles
 46541                           ; simple_byte           16     9 (average)
 46542                           ;	Chosen strategy is simple_byte
 46543  01F1B6  5034               	movf	(btemp+10)^0,w,c
 46544  01F1B8  0A00               	xorlw	0	; case 0
 46545  01F1BA  B4D8               	btfsc	status,2,c
 46546  01F1BC  D7F0               	goto	l13724
 46547  01F1BE  0A01               	xorlw	1	; case 1
 46548  01F1C0  B4D8               	btfsc	status,2,c
 46549  01F1C2  D7ED               	goto	l13724
 46550  01F1C4  0A03               	xorlw	3	; case 2
 46551  01F1C6  B4D8               	btfsc	status,2,c
 46552  01F1C8  D7E0               	goto	l13720
 46553  01F1CA  0A01               	xorlw	1	; case 3
 46554  01F1CC  B4D8               	btfsc	status,2,c
 46555  01F1CE  D7D5               	goto	l13718
 46556  01F1D0  0A07               	xorlw	7	; case 4
 46557  01F1D2  B4D8               	btfsc	status,2,c
 46558  01F1D4  D7DD               	goto	l13722
 46559  01F1D6  D7E3               	goto	l13724
 46560  01F1D8                     l13734:
 46561                           
 46562                           ;dio.c: 102:   if (sw_value) {
 46563                           ;stkvar	_sw_value @ sp[(-2)+1]
 46564  01F1D8  0EFF               	movlw	-1
 46565  01F1DA  50E3               	movf	plusw1,w,c
 46566  01F1DC  B4D8               	btfsc	status,2,c
 46567  01F1DE  D018               	goto	l13740
 46568                           
 46569                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 46570                           ;stkvar	_i @ sp[(-2)+0]
 46571  01F1E0  0EFE               	movlw	-2
 46572  01F1E2  50E3               	movf	plusw1,w,c
 46573  01F1E4  0D05               	mullw	5
 46574  01F1E6  0EA4               	movlw	low _S
 46575  01F1E8  24F3               	addwf	243,w,c
 46576  01F1EA  6ED9               	movwf	fsr2l,c
 46577  01F1EC  0E01               	movlw	high _S
 46578  01F1EE  20F4               	addwfc	prodh,w,c
 46579  01F1F0  6EDA               	movwf	fsr2h,c
 46580  01F1F2  04DE               	decf	postinc2,w,c
 46581  01F1F4  A4D8               	btfss	status,2,c
 46582  01F1F6  D049               	goto	l13748
 46583                           
 46584                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 46585                           ;stkvar	_i @ sp[(-2)+0]
 46586  01F1F8  0EFE               	movlw	-2
 46587  01F1FA  50E3               	movf	plusw1,w,c
 46588  01F1FC  0D05               	mullw	5
 46589  01F1FE  0EA4               	movlw	low _S
 46590  01F200  24F3               	addwf	243,w,c
 46591  01F202  6ED9               	movwf	fsr2l,c
 46592  01F204  0E01               	movlw	high _S
 46593  01F206  20F4               	addwfc	prodh,w,c
 46594  01F208  6EDA               	movwf	fsr2h,c
 46595  01F20A  0E00               	movlw	0
 46596  01F20C  6EDF               	movwf	indf2,c
 46597  01F20E  D03D               	goto	l13748
 46598  01F210                     l13740:
 46599                           
 46600                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 46601                           ;stkvar	_i @ sp[(-2)+0]
 46602  01F210  0EFE               	movlw	-2
 46603  01F212  50E3               	movf	plusw1,w,c
 46604  01F214  0D05               	mullw	5
 46605  01F216  0EA4               	movlw	low _S
 46606  01F218  24F3               	addwf	243,w,c
 46607  01F21A  6ED9               	movwf	fsr2l,c
 46608  01F21C  0E01               	movlw	high _S
 46609  01F21E  20F4               	addwfc	prodh,w,c
 46610  01F220  6EDA               	movwf	fsr2h,c
 46611  01F222  50DF               	movf	indf2,w,c
 46612  01F224  A4D8               	btfss	status,2,c
 46613  01F226  D031               	goto	l13748
 46614                           
 46615                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 46616                           ;stkvar	_i @ sp[(-2)+0]
 46617  01F228  0EFE               	movlw	-2
 46618  01F22A  50E3               	movf	plusw1,w,c
 46619  01F22C  0D05               	mullw	5
 46620  01F22E  0EA4               	movlw	low _S
 46621  01F230  24F3               	addwf	243,w,c
 46622  01F232  6ED9               	movwf	fsr2l,c
 46623  01F234  0E01               	movlw	high _S
 46624  01F236  20F4               	addwfc	prodh,w,c
 46625  01F238  6EDA               	movwf	fsr2h,c
 46626  01F23A  0E01               	movlw	1
 46627  01F23C  6EDF               	movwf	indf2,c
 46628                           
 46629                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 46630  01F23E  EE20  F2B8         	lfsr	2,_V+177	;volatile
 46631                           
 46632                           ;stkvar	_i @ sp[(-2)+0]
 46633  01F242  0EFE               	movlw	-2
 46634  01F244  50E3               	movf	plusw1,w,c
 46635  01F246  0D05               	mullw	5
 46636  01F248  0EA5               	movlw	low (_S+1)
 46637  01F24A  24F3               	addwf	243,w,c
 46638  01F24C  6EE9               	movwf	fsr0l,c
 46639  01F24E  0E01               	movlw	high (_S+1)
 46640  01F250  20F4               	addwfc	prodh,w,c
 46641  01F252  6EEA               	movwf	fsr0h,c
 46642  01F254  006F FF7B FFEE     	movff	postinc2,postinc0
 46643  01F25A  006F FF7B FFEE     	movff	postinc2,postinc0
 46644  01F260  006F FF7B FFEE     	movff	postinc2,postinc0
 46645  01F266  006F FF7B FFEE     	movff	postinc2,postinc0
 46646                           
 46647                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 46648                           ;stkvar	_i @ sp[(-2)+0]
 46649  01F26C  0EFE               	movlw	-2
 46650  01F26E  006F FF8C  F035    	movff	plusw1,btemp+11
 46651  01F274  0E01               	movlw	1
 46652  01F276  6E34               	movwf	(btemp+10)^0,c
 46653  01F278  2A35               	incf	(btemp+11)^0,f,c
 46654  01F27A  D002               	goto	u1283_24
 46655  01F27C                     u1283_25:
 46656  01F27C  90D8               	bcf	status,0,c
 46657  01F27E  3634               	rlcf	(btemp+10)^0,f,c
 46658  01F280                     u1283_24:
 46659  01F280  2E35               	decfsz	(btemp+11)^0,f,c
 46660  01F282  D7FC               	goto	u1283_25
 46661  01F284  5034               	movf	(btemp+10)^0,w,c
 46662  01F286  0101               	movlb	1	; () banked
 46663  01F288  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 46664  01F28A                     l13748:
 46665                           
 46666                           ;dio.c: 113:  } while (++i < 6);
 46667                           ;stkvar	_i @ sp[(-2)+0]
 46668  01F28A  0EFE               	movlw	-2
 46669  01F28C  2AE3               	incf	plusw1,f,c
 46670  01F28E  0EFE               	movlw	-2
 46671  01F290  006F FF8C  F02A    	movff	plusw1,btemp
 46672  01F296  0E05               	movlw	5
 46673  01F298  642A               	cpfsgt	btemp^0,c
 46674  01F29A  D785               	goto	l13732
 46675                           
 46676                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 46677  01F29C  8ABF               	bsf	191,5,c	;volatile
 46678                           
 46679                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46680  01F29E  52E5               	movf	postdec1,f,c
 46681  01F2A0  52E5               	movf	postdec1,f,c
 46682  01F2A2  0012               	return		;funcret
 46683  01F2A4                     __end_of_switch_handler:
 46684                           	opt callstack 0
 46685                           
 46686 ;; *************** function _TMR5_ISR *****************
 46687 ;; Defined at:
 46688 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 46689 ;; Parameters:    Size  Location     Type
 46690 ;;		None
 46691 ;; Auto vars:     Size  Location     Type
 46692 ;;		None
 46693 ;; Return value:  Size  Location     Type
 46694 ;;                  1    wreg      void 
 46695 ;; Registers used:
 46696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46697 ;; Tracked objects:
 46698 ;;		On entry : 0/0
 46699 ;;		On exit  : 3F/0
 46700 ;;		Unchanged: 0/0
 46701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46704 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46705 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46706 ;;Total ram usage:       31 bytes
 46707 ;; Hardware stack levels used:    1
 46708 ;; Hardware stack levels required when called:    9
 46709 ;; This function calls:
 46710 ;;		_TMR5_CallBack
 46711 ;;		_TMR5_WriteTimer
 46712 ;; This function is called by:
 46713 ;;		Interrupt level 1
 46714 ;; This function uses a non-reentrant model
 46715 ;;
 46716                           
 46717                           	psect	text189
 46718  01DB94                     __ptext189:
 46719                           	opt callstack 0
 46720  01DB94                     _TMR5_ISR:
 46721                           	opt callstack 8
 46722                           
 46723                           ;incstack = 0
 46724  01DB94  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 46725  01DB9A  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 46726  01DBA0  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 46727  01DBA6  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 46728  01DBAC  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 46729  01DBB2  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 46730  01DBB8  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 46731  01DBBE  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 46732  01DBC4  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 46733  01DBCA  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 46734  01DBD0  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 46735  01DBD6  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 46736  01DBDC  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 46737  01DBE2  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 46738  01DBE8  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 46739  01DBEE  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 46740  01DBF4  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 46741  01DBFA  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 46742  01DC00  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 46743  01DC06  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 46744  01DC0C  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 46745  01DC12  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 46746  01DC18  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 46747  01DC1E  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 46748  01DC24  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 46749  01DC2A  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 46750  01DC30  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 46751  01DC36  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 46752  01DC3C  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 46753  01DC42  EE16  F196         	lfsr	1,___intlo_sp
 46754                           
 46755                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 46756  01DC46  0139               	movlb	57	; () banked
 46757  01DC48  9DA8               	bcf	168,6,b	;volatile
 46758                           
 46759                           ; BSR set to: 57
 46760                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 46761  01DC4A  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 46762  01DC50  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 46763  01DC56  EC98  F00F         	call	_TMR5_WriteTimer	;wreg free
 46764                           
 46765                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 46766  01DC5A  0102               	movlb	2	; () banked
 46767  01DC5C  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 46768  01DC5E  6E0B               	movwf	??_TMR5_ISR^0,c
 46769  01DC60  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 46770  01DC62  0E05               	movlw	5
 46771  01DC64  260B               	addwf	??_TMR5_ISR^0,f,c
 46772  01DC66  0E00               	movlw	0
 46773  01DC68  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 46774  01DC6A  0100               	movlb	0	; () banked
 46775  01DC6C  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 46776  01DC6E  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46777  01DC70  500B               	movf	??_TMR5_ISR^0,w,c
 46778  01DC72  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 46779  01DC74  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 46780  01DC76  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46781  01DC78  A0D8               	btfss	status,0,c
 46782  01DC7A  D005               	goto	i1l1021
 46783                           
 46784                           ; BSR set to: 0
 46785                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 46786  01DC7C  EC40  F013         	call	_TMR5_CallBack	;wreg free
 46787                           
 46788                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 46789  01DC80  0100               	movlb	0	; () banked
 46790  01DC82  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 46791  01DC84  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 46792  01DC86                     i1l1021:
 46793                           
 46794                           ; BSR set to: 0
 46795  01DC86  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 46796  01DC8C  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 46797  01DC92  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 46798  01DC98  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 46799  01DC9E  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 46800  01DCA4  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 46801  01DCAA  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 46802  01DCB0  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 46803  01DCB6  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 46804  01DCBC  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 46805  01DCC2  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 46806  01DCC8  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 46807  01DCCE  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 46808  01DCD4  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 46809  01DCDA  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 46810  01DCE0  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 46811  01DCE6  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 46812  01DCEC  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 46813  01DCF2  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 46814  01DCF8  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 46815  01DCFE  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 46816  01DD04  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 46817  01DD0A  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 46818  01DD10  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 46819  01DD16  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 46820  01DD1C  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 46821  01DD22  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 46822  01DD28  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 46823  01DD2E  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 46824  01DD34  0011               	retfie		f
 46825  01DD36                     __end_of_TMR5_ISR:
 46826                           	opt callstack 0
 46827                           
 46828 ;; *************** function _TMR5_WriteTimer *****************
 46829 ;; Defined at:
 46830 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 46831 ;; Parameters:    Size  Location     Type
 46832 ;;  timerVal        2  [STACK] unsigned short 
 46833 ;; Auto vars:     Size  Location     Type
 46834 ;;		None
 46835 ;; Return value:  Size  Location     Type
 46836 ;;                  1  [STACK] void 
 46837 ;; Registers used:
 46838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46839 ;; Tracked objects:
 46840 ;;		On entry : 3F/39
 46841 ;;		On exit  : 0/0
 46842 ;;		Unchanged: 0/0
 46843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46848 ;;Total ram usage:        0 bytes
 46849 ;; Hardware stack levels used:    1
 46850 ;; Hardware stack levels required when called:    3
 46851 ;; This function calls:
 46852 ;;		Nothing
 46853 ;; This function is called by:
 46854 ;;		_TMR5_ISR
 46855 ;; This function uses a reentrant model
 46856 ;;
 46857                           
 46858                           	psect	text190
 46859  001F30                     __ptext190:
 46860                           	opt callstack 0
 46861  001F30                     _TMR5_WriteTimer:
 46862                           	opt callstack 13
 46863                           
 46864                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 46865                           
 46866                           ; BSR set to: 0
 46867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46868                           ;incstack = 0
 46869  001F30  A49A               	btfss	154,2,c	;volatile
 46870  001F32  D00F               	goto	l13960
 46871                           
 46872                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 46873  001F34  909A               	bcf	154,0,c	;volatile
 46874                           
 46875                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 46876                           ;stkvar	_timerVal @ sp[(0)+-2]
 46877  001F36  0EFF               	movlw	255
 46878  001F38  24E1               	addwf	fsr1l,w,c
 46879  001F3A  6ED9               	movwf	fsr2l,c
 46880  001F3C  0EFF               	movlw	255
 46881  001F3E  20E2               	addwfc	fsr1h,w,c
 46882  001F40  6EDA               	movwf	fsr2h,c
 46883  001F42  50DF               	movf	indf2,w,c
 46884  001F44  6E99               	movwf	153,c	;volatile
 46885                           
 46886                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 46887                           ;stkvar	_timerVal @ sp[(0)+-2]
 46888  001F46  0EFE               	movlw	-2
 46889  001F48  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46890                           
 46891                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 46892  001F4E  809A               	bsf	154,0,c	;volatile
 46893                           
 46894                           ;mcc_generated_files/tmr5.c: 144:  } else {
 46895  001F50  D00C               	goto	l1004
 46896  001F52                     l13960:
 46897                           
 46898                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 46899                           ;stkvar	_timerVal @ sp[(0)+-2]
 46900  001F52  0EFF               	movlw	255
 46901  001F54  24E1               	addwf	fsr1l,w,c
 46902  001F56  6ED9               	movwf	fsr2l,c
 46903  001F58  0EFF               	movlw	255
 46904  001F5A  20E2               	addwfc	fsr1h,w,c
 46905  001F5C  6EDA               	movwf	fsr2h,c
 46906  001F5E  50DF               	movf	indf2,w,c
 46907  001F60  6E99               	movwf	153,c	;volatile
 46908                           
 46909                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 46910                           ;stkvar	_timerVal @ sp[(0)+-2]
 46911  001F62  0EFE               	movlw	-2
 46912  001F64  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46913  001F6A                     l1004:
 46914                           
 46915                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46916  001F6A  52E5               	movf	postdec1,f,c
 46917  001F6C  52E5               	movf	postdec1,f,c
 46918  001F6E  0012               	return		;funcret
 46919  001F70                     __end_of_TMR5_WriteTimer:
 46920                           	opt callstack 0
 46921                           
 46922 ;; *************** function _TMR5_CallBack *****************
 46923 ;; Defined at:
 46924 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 46925 ;; Parameters:    Size  Location     Type
 46926 ;;		None
 46927 ;; Auto vars:     Size  Location     Type
 46928 ;;		None
 46929 ;; Return value:  Size  Location     Type
 46930 ;;                  1  [STACK] void 
 46931 ;; Registers used:
 46932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46933 ;; Tracked objects:
 46934 ;;		On entry : 3F/0
 46935 ;;		On exit  : 0/0
 46936 ;;		Unchanged: 0/0
 46937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46942 ;;Total ram usage:        0 bytes
 46943 ;; Hardware stack levels used:    1
 46944 ;; Hardware stack levels required when called:    8
 46945 ;; This function calls:
 46946 ;;		Absolute function
 46947 ;;		_TMR5_DefaultInterruptHandler
 46948 ;; This function is called by:
 46949 ;;		_TMR5_ISR
 46950 ;; This function uses a reentrant model
 46951 ;;
 46952                           
 46953                           	psect	text191
 46954  002680                     __ptext191:
 46955                           	opt callstack 0
 46956  002680                     _TMR5_CallBack:
 46957                           	opt callstack 8
 46958                           
 46959                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 46960                           
 46961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46962                           ;incstack = 0
 46963  002680  0100               	movlb	0	; () banked
 46964  002682  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46965  002684  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46966  002686  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46967  002688  B4D8               	btfsc	status,2,c
 46968  00268A  0012               	return	
 46969                           
 46970                           ; BSR set to: 0
 46971                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 46972  00268C  D801               	call	u1322_28
 46973  00268E  0012               	return	
 46974  002690                     u1322_28:
 46975  002690  0005               	push	
 46976  002692  6EFA               	movwf	pclath,c
 46977  002694  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46978  002696  6EFD               	movwf	tosl,c
 46979  002698  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46980  00269A  6EFE               	movwf	tosh,c
 46981  00269C  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46982  00269E  6EFF               	movwf	tosu,c
 46983  0026A0  50FA               	movf	pclath,w,c
 46984  0026A2  0012               	return		;indir
 46985  0026A4                     __end_of_TMR5_CallBack:
 46986                           	opt callstack 0
 46987                           
 46988 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 46989 ;; Defined at:
 46990 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 46991 ;; Parameters:    Size  Location     Type
 46992 ;;		None
 46993 ;; Auto vars:     Size  Location     Type
 46994 ;;		None
 46995 ;; Return value:  Size  Location     Type
 46996 ;;                  1  [STACK] void 
 46997 ;; Registers used:
 46998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 46999 ;; Tracked objects:
 47000 ;;		On entry : 3F/0
 47001 ;;		On exit  : 0/0
 47002 ;;		Unchanged: 0/0
 47003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47008 ;;Total ram usage:        0 bytes
 47009 ;; Hardware stack levels used:    1
 47010 ;; Hardware stack levels required when called:    7
 47011 ;; This function calls:
 47012 ;;		_check_day_time
 47013 ;; This function is called by:
 47014 ;;		_TMR5_Initialize
 47015 ;;		_TMR5_CallBack
 47016 ;; This function uses a reentrant model
 47017 ;;
 47018                           
 47019                           	psect	text192
 47020  00209C                     __ptext192:
 47021                           	opt callstack 0
 47022  00209C                     _TMR5_DefaultInterruptHandler:
 47023                           	opt callstack 8
 47024                           
 47025                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 47026                           
 47027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47028                           ;incstack = 0
 47029  00209C  A0BE               	btfss	190,0,c	;volatile
 47030  00209E  D002               	goto	u1248_20
 47031  0020A0  0E01               	movlw	1
 47032  0020A2  D001               	goto	u1248_26
 47033  0020A4                     u1248_20:
 47034  0020A4  0E00               	movlw	0
 47035  0020A6                     u1248_26:
 47036  0020A6  0AFF               	xorlw	255
 47037  0020A8  6E35               	movwf	(btemp+11)^0,c
 47038  0020AA  50BE               	movf	190,w,c	;volatile
 47039  0020AC  1835               	xorwf	(btemp+11)^0,w,c
 47040  0020AE  0BFE               	andlw	-2
 47041  0020B0  1835               	xorwf	(btemp+11)^0,w,c
 47042  0020B2  6EBE               	movwf	190,c	;volatile
 47043                           
 47044                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 47045  0020B4  0E01               	movlw	1
 47046  0020B6  0102               	movlb	2	; () banked
 47047  0020B8  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 47048  0020BA  0E00               	movlw	0
 47049  0020BC  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 47050  0020BE  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 47051  0020C0  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 47052                           
 47053                           ; BSR set to: 2
 47054                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 47055  0020C2  0E01               	movlw	1
 47056  0020C4  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 47057  0020C6  0E00               	movlw	0
 47058  0020C8  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 47059  0020CA  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 47060  0020CC  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 47061                           
 47062                           ; BSR set to: 2
 47063                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 47064  0020CE  EC8B  F0D0         	call	_check_day_time	;wreg free
 47065                           
 47066                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47067  0020D2  0012               	return		;funcret
 47068  0020D4                     __end_of_TMR5_DefaultInterruptHandler:
 47069                           	opt callstack 0
 47070                           
 47071 ;; *************** function _check_day_time *****************
 47072 ;; Defined at:
 47073 ;;		line 167 in file "mbmc.c"
 47074 ;; Parameters:    Size  Location     Type
 47075 ;;		None
 47076 ;; Auto vars:     Size  Location     Type
 47077 ;;  light           4  [STACK] float 
 47078 ;; Return value:  Size  Location     Type
 47079 ;;                  1  [STACK] _Bool 
 47080 ;; Registers used:
 47081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47082 ;; Tracked objects:
 47083 ;;		On entry : 3F/2
 47084 ;;		On exit  : 0/0
 47085 ;;		Unchanged: 0/0
 47086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47091 ;;Total ram usage:        0 bytes
 47092 ;; Hardware stack levels used:    1
 47093 ;; Hardware stack levels required when called:    6
 47094 ;; This function calls:
 47095 ;;		___flge
 47096 ;;		_conv_raw_result
 47097 ;;		_get_ac_charger_relay
 47098 ;;		_set_ac_charger_relay
 47099 ;;		_time
 47100 ;; This function is called by:
 47101 ;;		_TMR5_DefaultInterruptHandler
 47102 ;; This function uses a reentrant model
 47103 ;;
 47104                           
 47105                           	psect	text193
 47106  01A116                     __ptext193:
 47107                           	opt callstack 0
 47108  01A116                     _check_day_time:
 47109                           	opt callstack 0
 47110                           
 47111                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47112  01A116  52E6               	movf	postinc1,f,c
 47113  01A118  52E6               	movf	postinc1,f,c
 47114  01A11A  52E6               	movf	postinc1,f,c
 47115  01A11C  52E6               	movf	postinc1,f,c
 47116                           
 47117                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 47118                           
 47119                           ;incstack = 0
 47120  01A11E  0E00               	movlw	0
 47121  01A120  6EE6               	movwf	postinc1,c
 47122  01A122  0E0D               	movlw	13
 47123  01A124  6EE6               	movwf	postinc1,c
 47124  01A126  EC76  F0C3         	call	_conv_raw_result	;wreg free
 47125                           
 47126                           ;stkvar	_light @ sp[(-4)+0]
 47127  01A12A  0EFC               	movlw	-4
 47128  01A12C  0060  F0AB  FFE3   	movff	btemp,plusw1
 47129  01A132  0EFD               	movlw	-3
 47130  01A134  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 47131  01A13A  0EFE               	movlw	-2
 47132  01A13C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 47133  01A142  0EFF               	movlw	-1
 47134  01A144  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 47135                           
 47136                           ;mbmc.c: 176:  if (C.day_update) {
 47137  01A14A  EE22  F237         	lfsr	2,_C+312	;volatile
 47138  01A14E  50DE               	movf	postinc2,w,c
 47139  01A150  10DE               	iorwf	postinc2,w,c
 47140  01A152  10DE               	iorwf	postinc2,w,c
 47141  01A154  10DE               	iorwf	postinc2,w,c
 47142  01A156  B4D8               	btfsc	status,2,c
 47143  01A158  D068               	goto	l12706
 47144                           
 47145                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 47146  01A15A  0062  F8DC  F032   	movff	_C+312,btemp+8	;volatile
 47147  01A160  0062  F8E0  F033   	movff	_C+313,btemp+9	;volatile
 47148  01A166  0062  F8E4  F034   	movff	_C+314,btemp+10	;volatile
 47149  01A16C  0062  F8E8  F035   	movff	_C+315,btemp+11	;volatile
 47150  01A172  5032               	movf	(btemp+8)^0,w,c
 47151  01A174  6E3A               	movwf	(btemp+16)^0,c
 47152  01A176  5033               	movf	(btemp+9)^0,w,c
 47153  01A178  6E3B               	movwf	(btemp+17)^0,c
 47154  01A17A  5034               	movf	(btemp+10)^0,w,c
 47155  01A17C  6E3C               	movwf	(btemp+18)^0,c
 47156  01A17E  5035               	movf	(btemp+11)^0,w,c
 47157  01A180  6E3D               	movwf	(btemp+19)^0,c
 47158  01A182  6A3E               	clrf	(btemp+20)^0,c
 47159  01A184  6A3F               	clrf	(btemp+21)^0,c
 47160  01A186  6A40               	clrf	(btemp+22)^0,c
 47161  01A188  6A41               	clrf	(btemp+23)^0,c
 47162  01A18A  0E00               	movlw	0
 47163  01A18C  6EE6               	movwf	postinc1,c
 47164  01A18E  0E00               	movlw	0
 47165  01A190  6EE6               	movwf	postinc1,c
 47166  01A192  EC7B  F00C         	call	_time	;wreg free
 47167  01A196  52E5               	movf	postdec1,f,c
 47168  01A198  006F FF9C  F049    	movff	indf1,btemp+31
 47169  01A19E  52E5               	movf	postdec1,f,c
 47170  01A1A0  006F FF9C  F048    	movff	indf1,btemp+30
 47171  01A1A6  52E5               	movf	postdec1,f,c
 47172  01A1A8  006F FF9C  F047    	movff	indf1,btemp+29
 47173  01A1AE  52E5               	movf	postdec1,f,c
 47174  01A1B0  006F FF9C  F046    	movff	indf1,btemp+28
 47175  01A1B6  52E5               	movf	postdec1,f,c
 47176  01A1B8  006F FF9C  F045    	movff	indf1,btemp+27
 47177  01A1BE  52E5               	movf	postdec1,f,c
 47178  01A1C0  006F FF9C  F044    	movff	indf1,btemp+26
 47179  01A1C6  52E5               	movf	postdec1,f,c
 47180  01A1C8  006F FF9C  F043    	movff	indf1,btemp+25
 47181  01A1CE  52E5               	movf	postdec1,f,c
 47182  01A1D0  006F FF9C  F042    	movff	indf1,btemp+24
 47183  01A1D6  503A               	movf	(btemp+16)^0,w,c
 47184  01A1D8  5C42               	subwf	(btemp+24)^0,w,c
 47185  01A1DA  503B               	movf	(btemp+17)^0,w,c
 47186  01A1DC  5843               	subwfb	(btemp+25)^0,w,c
 47187  01A1DE  503C               	movf	(btemp+18)^0,w,c
 47188  01A1E0  5844               	subwfb	(btemp+26)^0,w,c
 47189  01A1E2  503D               	movf	(btemp+19)^0,w,c
 47190  01A1E4  5845               	subwfb	(btemp+27)^0,w,c
 47191  01A1E6  503E               	movf	(btemp+20)^0,w,c
 47192  01A1E8  5846               	subwfb	(btemp+28)^0,w,c
 47193  01A1EA  503F               	movf	(btemp+21)^0,w,c
 47194  01A1EC  5847               	subwfb	(btemp+29)^0,w,c
 47195  01A1EE  5040               	movf	(btemp+22)^0,w,c
 47196  01A1F0  5848               	subwfb	(btemp+30)^0,w,c
 47197  01A1F2  5049               	movf	(btemp+31)^0,w,c
 47198  01A1F4  0A80               	xorlw	128
 47199  01A1F6  6E2A               	movwf	btemp^0,c
 47200  01A1F8  5041               	movf	(btemp+23)^0,w,c
 47201  01A1FA  0A80               	xorlw	128
 47202  01A1FC  582A               	subwfb	btemp^0,w,c
 47203  01A1FE  A0D8               	btfss	status,0,c
 47204  01A200  D014               	goto	l12706
 47205                           
 47206                           ; BSR set to: 57
 47207                           ;mbmc.c: 178:    C.day_update = 0;
 47208  01A202  0E00               	movlw	0
 47209  01A204  006F FFA0  FA37    	movff	wreg,_C+312	;volatile
 47210  01A20A  0E00               	movlw	0
 47211  01A20C  006F FFA0  FA38    	movff	wreg,_C+313	;volatile
 47212  01A212  0E00               	movlw	0
 47213  01A214  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 47214  01A21A  0E00               	movlw	0
 47215  01A21C  006F FFA0  FA3A    	movff	wreg,_C+315	;volatile
 47216                           
 47217                           ;mbmc.c: 179:    C.dupdate = 1;
 47218  01A222  0E01               	movlw	1
 47219  01A224  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
 47220  01A22A                     l12706:
 47221                           
 47222                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 47223  01A22A  2A51               	incf	check_day_time@day_delay^0,f,c
 47224  01A22C  0451               	decf	check_day_time@day_delay^0,w,c
 47225  01A22E  A4D8               	btfss	status,2,c
 47226  01A230  D123               	goto	l2203
 47227  01A232  0102               	movlb	2	; () banked
 47228  01A234  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 47229  01A236  B4D8               	btfsc	status,2,c
 47230  01A238  D11F               	goto	l2203
 47231                           
 47232                           ; BSR set to: 2
 47233                           ;mbmc.c: 184:   if (C.soc > 3) {
 47234  01A23A  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47235  01A23E  0E01               	movlw	1
 47236  01A240  50DB               	movf	plusw2,w,c
 47237  01A242  E104               	bnz	u1213_20
 47238  01A244  0E04               	movlw	4
 47239  01A246  5CDE               	subwf	postinc2,w,c
 47240  01A248  A0D8               	btfss	status,0,c
 47241  01A24A  D0ED               	goto	l12740
 47242  01A24C                     u1213_20:
 47243                           
 47244                           ; BSR set to: 2
 47245                           ;mbmc.c: 185:    if (!C.day) {
 47246  01A24C  EE22  F22D         	lfsr	2,_C+302	;volatile
 47247  01A250  50DF               	movf	indf2,w,c
 47248  01A252  A4D8               	btfss	status,2,c
 47249  01A254  D065               	goto	l12726
 47250                           
 47251                           ; BSR set to: 2
 47252                           ;mbmc.c: 186:     if (light > 22.0) {
 47253                           ;stkvar	_light @ sp[(-4)+0]
 47254  01A256  0EFC               	movlw	-4
 47255  01A258  006F FF8F FFE6     	movff	plusw1,postinc1
 47256  01A25E  006F FF8F FFE6     	movff	plusw1,postinc1
 47257  01A264  006F FF8F FFE6     	movff	plusw1,postinc1
 47258  01A26A  006F FF8F FFE6     	movff	plusw1,postinc1
 47259  01A270  0E00               	movlw	0
 47260  01A272  6EE6               	movwf	postinc1,c
 47261  01A274  0E00               	movlw	0
 47262  01A276  6EE6               	movwf	postinc1,c
 47263  01A278  0EB0               	movlw	176
 47264  01A27A  6EE6               	movwf	postinc1,c
 47265  01A27C  0E41               	movlw	65
 47266  01A27E  6EE6               	movwf	postinc1,c
 47267  01A280  EC9F  F0F4         	call	___flge	;wreg free
 47268  01A284  B02A               	btfsc	btemp& (0+255),0,c
 47269  01A286  D0F8               	goto	l2203
 47270                           
 47271                           ;mbmc.c: 187:      C.day = 1;
 47272  01A288  0E01               	movlw	1
 47273  01A28A  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47274                           
 47275                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 47276  01A290  0E00               	movlw	0
 47277  01A292  6EE6               	movwf	postinc1,c
 47278  01A294  0E00               	movlw	0
 47279  01A296  6EE6               	movwf	postinc1,c
 47280  01A298  EC7B  F00C         	call	_time	;wreg free
 47281  01A29C  52E5               	movf	postdec1,f,c
 47282  01A29E  006F FF9C  F041    	movff	indf1,btemp+23
 47283  01A2A4  52E5               	movf	postdec1,f,c
 47284  01A2A6  006F FF9C  F040    	movff	indf1,btemp+22
 47285  01A2AC  52E5               	movf	postdec1,f,c
 47286  01A2AE  006F FF9C  F03F    	movff	indf1,btemp+21
 47287  01A2B4  52E5               	movf	postdec1,f,c
 47288  01A2B6  006F FF9C  F03E    	movff	indf1,btemp+20
 47289  01A2BC  52E5               	movf	postdec1,f,c
 47290  01A2BE  006F FF9C  F03D    	movff	indf1,btemp+19
 47291  01A2C4  52E5               	movf	postdec1,f,c
 47292  01A2C6  006F FF9C  F03C    	movff	indf1,btemp+18
 47293  01A2CC  52E5               	movf	postdec1,f,c
 47294  01A2CE  006F FF9C  F03B    	movff	indf1,btemp+17
 47295  01A2D4  52E5               	movf	postdec1,f,c
 47296  01A2D6  006F FF9C  F03A    	movff	indf1,btemp+16
 47297  01A2DC  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47298  01A2E2  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47299  01A2E8  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47300  01A2EE  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47301  01A2F4  0060  F0C8  FA2F   	movff	btemp+8,_C+304	;volatile
 47302  01A2FA  0060  F0CC  FA30   	movff	btemp+9,_C+305	;volatile
 47303  01A300  0060  F0D0  FA31   	movff	btemp+10,_C+306	;volatile
 47304  01A306  0060  F0D4  FA32   	movff	btemp+11,_C+307	;volatile
 47305                           
 47306                           ; BSR set to: 57
 47307                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 47308  01A30C  ECCE  F014         	call	_get_ac_charger_relay	;wreg free
 47309  01A310  502A               	movf	btemp^0,w,c
 47310  01A312  B4D8               	btfsc	status,2,c
 47311  01A314  D0B5               	goto	l2199
 47312                           
 47313                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 47314  01A316  0E00               	movlw	0
 47315  01A318  6EE6               	movwf	postinc1,c
 47316  01A31A  ECB1  F014         	call	_set_ac_charger_relay	;wreg free
 47317  01A31E  D0B0               	goto	l2199
 47318  01A320                     l12726:
 47319                           
 47320                           ; BSR set to: 2
 47321                           ;mbmc.c: 195:     if (light < 12.0) {
 47322  01A320  0E00               	movlw	0
 47323  01A322  6EE6               	movwf	postinc1,c
 47324  01A324  0E00               	movlw	0
 47325  01A326  6EE6               	movwf	postinc1,c
 47326  01A328  0E40               	movlw	64
 47327  01A32A  6EE6               	movwf	postinc1,c
 47328  01A32C  0E41               	movlw	65
 47329  01A32E  6EE6               	movwf	postinc1,c
 47330                           
 47331                           ;stkvar	_light @ sp[(-8)+0]
 47332  01A330  0EF8               	movlw	-8
 47333  01A332  006F FF8F FFE6     	movff	plusw1,postinc1
 47334  01A338  006F FF8F FFE6     	movff	plusw1,postinc1
 47335  01A33E  006F FF8F FFE6     	movff	plusw1,postinc1
 47336  01A344  006F FF8F FFE6     	movff	plusw1,postinc1
 47337  01A34A  EC9F  F0F4         	call	___flge	;wreg free
 47338  01A34E  B02A               	btfsc	btemp& (0+255),0,c
 47339  01A350  D093               	goto	l2203
 47340                           
 47341                           ;mbmc.c: 196:      C.day = 0;
 47342  01A352  0E00               	movlw	0
 47343  01A354  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47344                           
 47345                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 47346  01A35A  0E00               	movlw	0
 47347  01A35C  6EE6               	movwf	postinc1,c
 47348  01A35E  0E00               	movlw	0
 47349  01A360  6EE6               	movwf	postinc1,c
 47350  01A362  EC7B  F00C         	call	_time	;wreg free
 47351  01A366  52E5               	movf	postdec1,f,c
 47352  01A368  006F FF9C  F041    	movff	indf1,btemp+23
 47353  01A36E  52E5               	movf	postdec1,f,c
 47354  01A370  006F FF9C  F040    	movff	indf1,btemp+22
 47355  01A376  52E5               	movf	postdec1,f,c
 47356  01A378  006F FF9C  F03F    	movff	indf1,btemp+21
 47357  01A37E  52E5               	movf	postdec1,f,c
 47358  01A380  006F FF9C  F03E    	movff	indf1,btemp+20
 47359  01A386  52E5               	movf	postdec1,f,c
 47360  01A388  006F FF9C  F03D    	movff	indf1,btemp+19
 47361  01A38E  52E5               	movf	postdec1,f,c
 47362  01A390  006F FF9C  F03C    	movff	indf1,btemp+18
 47363  01A396  52E5               	movf	postdec1,f,c
 47364  01A398  006F FF9C  F03B    	movff	indf1,btemp+17
 47365  01A39E  52E5               	movf	postdec1,f,c
 47366  01A3A0  006F FF9C  F03A    	movff	indf1,btemp+16
 47367  01A3A6  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47368  01A3AC  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47369  01A3B2  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47370  01A3B8  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47371  01A3BE  0060  F0C8  FA33   	movff	btemp+8,_C+308	;volatile
 47372  01A3C4  0060  F0CC  FA34   	movff	btemp+9,_C+309	;volatile
 47373  01A3CA  0060  F0D0  FA35   	movff	btemp+10,_C+310	;volatile
 47374  01A3D0  0060  F0D4  FA36   	movff	btemp+11,_C+311	;volatile
 47375                           
 47376                           ; BSR set to: 57
 47377                           ;mbmc.c: 198:      C.day_update = C.day_end + 600;
 47378  01A3D6  EE22  F233         	lfsr	2,_C+308	;volatile
 47379  01A3DA  0E58               	movlw	88
 47380  01A3DC  24DE               	addwf	postinc2,w,c
 47381  01A3DE  6E32               	movwf	(btemp+8)^0,c
 47382  01A3E0  0E02               	movlw	2
 47383  01A3E2  20DE               	addwfc	postinc2,w,c
 47384  01A3E4  6E33               	movwf	(btemp+9)^0,c
 47385  01A3E6  0E00               	movlw	0
 47386  01A3E8  20DE               	addwfc	postinc2,w,c
 47387  01A3EA  6E34               	movwf	(btemp+10)^0,c
 47388  01A3EC  0E00               	movlw	0
 47389  01A3EE  20DE               	addwfc	postinc2,w,c
 47390  01A3F0  6E35               	movwf	(btemp+11)^0,c
 47391  01A3F2  0060  F0C8  FA37   	movff	btemp+8,_C+312	;volatile
 47392  01A3F8  0060  F0CC  FA38   	movff	btemp+9,_C+313	;volatile
 47393  01A3FE  0060  F0D0  FA39   	movff	btemp+10,_C+314	;volatile
 47394  01A404  0060  F0D4  FA3A   	movff	btemp+11,_C+315	;volatile
 47395                           
 47396                           ; BSR set to: 57
 47397                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 47398  01A40A  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47399  01A40E  0E01               	movlw	1
 47400  01A410  50DB               	movf	plusw2,w,c
 47401  01A412  E136               	bnz	l2199
 47402  01A414  0E14               	movlw	20
 47403  01A416  5CDE               	subwf	postinc2,w,c
 47404  01A418  B0D8               	btfsc	status,0,c
 47405  01A41A  D032               	goto	l2199
 47406                           
 47407                           ; BSR set to: 57
 47408                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 47409  01A41C  0E01               	movlw	1
 47410  01A41E  6EE6               	movwf	postinc1,c
 47411  01A420  ECB1  F014         	call	_set_ac_charger_relay	;wreg free
 47412  01A424  D02D               	goto	l2199
 47413  01A426                     l12740:
 47414                           
 47415                           ; BSR set to: 2
 47416                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 47417  01A426  EE22  F177         	lfsr	2,_C+120	;volatile
 47418  01A42A  006F FF7B FFE6     	movff	postinc2,postinc1
 47419  01A430  006F FF7B FFE6     	movff	postinc2,postinc1
 47420  01A436  006F FF7B FFE6     	movff	postinc2,postinc1
 47421  01A43C  006F FF7B FFE6     	movff	postinc2,postinc1
 47422  01A442  EE22  F17B         	lfsr	2,_C+124	;volatile
 47423  01A446  006F FF7B FFE6     	movff	postinc2,postinc1
 47424  01A44C  006F FF7B FFE6     	movff	postinc2,postinc1
 47425  01A452  006F FF7B FFE6     	movff	postinc2,postinc1
 47426  01A458  006F FF7B FFE6     	movff	postinc2,postinc1
 47427  01A45E  EC9F  F0F4         	call	___flge	;wreg free
 47428  01A462  B02A               	btfsc	btemp& (0+255),0,c
 47429  01A464  D009               	goto	l2203
 47430                           
 47431                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 47432  01A466  ECCE  F014         	call	_get_ac_charger_relay	;wreg free
 47433  01A46A  502A               	movf	btemp^0,w,c
 47434  01A46C  A4D8               	btfss	status,2,c
 47435  01A46E  D004               	goto	l2203
 47436                           
 47437                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 47438  01A470  0E01               	movlw	1
 47439  01A472  6EE6               	movwf	postinc1,c
 47440  01A474  ECB1  F014         	call	_set_ac_charger_relay	;wreg free
 47441  01A478                     l2203:
 47442                           
 47443                           ;mbmc.c: 216:  if (day_delay >= 240)
 47444  01A478  0EEF               	movlw	239
 47445  01A47A  6451               	cpfsgt	check_day_time@day_delay^0,c
 47446  01A47C  D001               	goto	l2199
 47447                           
 47448                           ;mbmc.c: 217:   day_delay = 0;
 47449  01A47E  6A51               	clrf	check_day_time@day_delay^0,c
 47450  01A480                     l2199:
 47451                           
 47452                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47453  01A480  52E5               	movf	postdec1,f,c
 47454  01A482  52E5               	movf	postdec1,f,c
 47455  01A484  52E5               	movf	postdec1,f,c
 47456  01A486  52E5               	movf	postdec1,f,c
 47457  01A488  0012               	return		;funcret
 47458  01A48A                     __end_of_check_day_time:
 47459                           	opt callstack 0
 47460                           
 47461 ;; *************** function _set_ac_charger_relay *****************
 47462 ;; Defined at:
 47463 ;;		line 136 in file "mbmc.c"
 47464 ;; Parameters:    Size  Location     Type
 47465 ;;  mode            1  [STACK] const _Bool 
 47466 ;; Auto vars:     Size  Location     Type
 47467 ;;		None
 47468 ;; Return value:  Size  Location     Type
 47469 ;;                  1  [STACK] void 
 47470 ;; Registers used:
 47471 ;;		wreg, fsr1l, fsr1h
 47472 ;; Tracked objects:
 47473 ;;		On entry : 0/39
 47474 ;;		On exit  : 0/0
 47475 ;;		Unchanged: 0/0
 47476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47481 ;;Total ram usage:        0 bytes
 47482 ;; Hardware stack levels used:    1
 47483 ;; Hardware stack levels required when called:    3
 47484 ;; This function calls:
 47485 ;;		Nothing
 47486 ;; This function is called by:
 47487 ;;		_check_day_time
 47488 ;; This function uses a reentrant model
 47489 ;;
 47490                           
 47491                           	psect	text194
 47492  002962                     __ptext194:
 47493                           	opt callstack 0
 47494  002962                     _set_ac_charger_relay:
 47495                           	opt callstack 10
 47496                           
 47497                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 47498                           ;stkvar	_mode @ sp[(0)+-1]
 47499                           
 47500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47501                           ;incstack = 0
 47502  002962  0EFF               	movlw	-1
 47503  002964  B0E3               	btfsc	plusw1,0,c
 47504  002966  D002               	bra	u1173_25
 47505  002968  9CBD               	bcf	189,6,c	;volatile
 47506  00296A  D001               	bra	u1173_26
 47507  00296C                     u1173_25:
 47508  00296C  8CBD               	bsf	189,6,c	;volatile
 47509  00296E                     u1173_26:
 47510                           
 47511                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 47512  00296E  52E5               	movf	postdec1,f,c
 47513  002970  0012               	return		;funcret
 47514  002972                     __end_of_set_ac_charger_relay:
 47515                           	opt callstack 0
 47516                           
 47517 ;; *************** function _get_ac_charger_relay *****************
 47518 ;; Defined at:
 47519 ;;		line 141 in file "mbmc.c"
 47520 ;; Parameters:    Size  Location     Type
 47521 ;;		None
 47522 ;; Auto vars:     Size  Location     Type
 47523 ;;		None
 47524 ;; Return value:  Size  Location     Type
 47525 ;;                  1  [STACK] _Bool 
 47526 ;; Registers used:
 47527 ;;		btemp
 47528 ;; Tracked objects:
 47529 ;;		On entry : 0/39
 47530 ;;		On exit  : 0/0
 47531 ;;		Unchanged: 0/0
 47532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47537 ;;Total ram usage:        0 bytes
 47538 ;; Hardware stack levels used:    1
 47539 ;; Hardware stack levels required when called:    3
 47540 ;; This function calls:
 47541 ;;		Nothing
 47542 ;; This function is called by:
 47543 ;;		_check_day_time
 47544 ;;		_calc_bsoc
 47545 ;; This function uses a reentrant model
 47546 ;;
 47547                           
 47548                           	psect	text195
 47549  00299C                     __ptext195:
 47550                           	opt callstack 0
 47551  00299C                     _get_ac_charger_relay:
 47552                           	opt callstack 11
 47553                           
 47554                           ;mbmc.c: 143:  return LATDbits.LATD6;
 47555                           
 47556                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47557                           ;incstack = 0
 47558  00299C  ACBD               	btfss	189,6,c	;volatile
 47559  00299E  D003               	goto	u1237_20
 47560  0029A0  6A2A               	clrf	btemp^0,c
 47561  0029A2  2A2A               	incf	btemp^0,f,c
 47562  0029A4  0012               	return	
 47563  0029A6                     u1237_20:
 47564  0029A6  6A2A               	clrf	btemp^0,c
 47565                           
 47566                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 47567  0029A8  0012               	return		;funcret
 47568  0029AA                     __end_of_get_ac_charger_relay:
 47569                           	opt callstack 0
 47570                           
 47571 ;; *************** function _TMR3_ISR *****************
 47572 ;; Defined at:
 47573 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 47574 ;; Parameters:    Size  Location     Type
 47575 ;;		None
 47576 ;; Auto vars:     Size  Location     Type
 47577 ;;		None
 47578 ;; Return value:  Size  Location     Type
 47579 ;;                  1    wreg      void 
 47580 ;; Registers used:
 47581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47582 ;; Tracked objects:
 47583 ;;		On entry : 0/0
 47584 ;;		On exit  : 3F/0
 47585 ;;		Unchanged: 0/0
 47586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47589 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47590 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47591 ;;Total ram usage:       25 bytes
 47592 ;; Hardware stack levels used:    1
 47593 ;; Hardware stack levels required when called:   14
 47594 ;; This function calls:
 47595 ;;		_TMR3_CallBack
 47596 ;;		_TMR3_WriteTimer
 47597 ;; This function is called by:
 47598 ;;		Interrupt level 1
 47599 ;; This function uses a non-reentrant model
 47600 ;;
 47601                           
 47602                           	psect	text196
 47603  01EAA0                     __ptext196:
 47604                           	opt callstack 0
 47605  01EAA0                     _TMR3_ISR:
 47606                           	opt callstack 3
 47607                           
 47608                           ;incstack = 0
 47609  01EAA0  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 47610  01EAA6  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 47611  01EAAC  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 47612  01EAB2  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 47613  01EAB8  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 47614  01EABE  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 47615  01EAC4  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 47616  01EACA  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 47617  01EAD0  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 47618  01EAD6  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 47619  01EADC  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 47620  01EAE2  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 47621  01EAE8  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 47622  01EAEE  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 47623  01EAF4  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 47624  01EAFA  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 47625  01EB00  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 47626  01EB06  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 47627  01EB0C  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 47628  01EB12  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 47629  01EB18  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 47630  01EB1E  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 47631  01EB24  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 47632  01EB2A  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 47633  01EB30  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 47634  01EB36  EE16  F196         	lfsr	1,___intlo_sp
 47635                           
 47636                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 47637  01EB3A  0139               	movlb	57	; () banked
 47638  01EB3C  9DA6               	bcf	166,6,b	;volatile
 47639                           
 47640                           ; BSR set to: 57
 47641                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 47642  01EB3E  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 47643  01EB44  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 47644  01EB4A  ECB8  F00F         	call	_TMR3_WriteTimer	;wreg free
 47645                           
 47646                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 47647  01EB4E  0100               	movlb	0	; () banked
 47648  01EB50  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 47649  01EB52  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47650  01EB54  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47651  01EB56  E104               	bnz	i1u1700_20
 47652  01EB58  0E28               	movlw	40
 47653  01EB5A  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 47654  01EB5C  A0D8               	btfss	status,0,c
 47655  01EB5E  D005               	goto	i1l1209
 47656  01EB60                     i1u1700_20:
 47657                           
 47658                           ; BSR set to: 0
 47659                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 47660  01EB60  EC52  F013         	call	_TMR3_CallBack	;wreg free
 47661                           
 47662                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 47663  01EB64  0100               	movlb	0	; () banked
 47664  01EB66  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 47665  01EB68  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 47666  01EB6A                     i1l1209:
 47667                           
 47668                           ; BSR set to: 0
 47669  01EB6A  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 47670  01EB70  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 47671  01EB76  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 47672  01EB7C  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 47673  01EB82  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 47674  01EB88  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 47675  01EB8E  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 47676  01EB94  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 47677  01EB9A  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 47678  01EBA0  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 47679  01EBA6  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 47680  01EBAC  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 47681  01EBB2  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 47682  01EBB8  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 47683  01EBBE  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 47684  01EBC4  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 47685  01EBCA  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 47686  01EBD0  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 47687  01EBD6  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 47688  01EBDC  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 47689  01EBE2  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 47690  01EBE8  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 47691  01EBEE  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 47692  01EBF4  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 47693  01EBFA  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 47694  01EC00  0011               	retfie		f
 47695  01EC02                     __end_of_TMR3_ISR:
 47696                           	opt callstack 0
 47697                           
 47698 ;; *************** function _TMR3_WriteTimer *****************
 47699 ;; Defined at:
 47700 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 47701 ;; Parameters:    Size  Location     Type
 47702 ;;  timerVal        2  [STACK] unsigned short 
 47703 ;; Auto vars:     Size  Location     Type
 47704 ;;		None
 47705 ;; Return value:  Size  Location     Type
 47706 ;;                  1  [STACK] void 
 47707 ;; Registers used:
 47708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47709 ;; Tracked objects:
 47710 ;;		On entry : 3F/39
 47711 ;;		On exit  : 0/0
 47712 ;;		Unchanged: 0/0
 47713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47718 ;;Total ram usage:        0 bytes
 47719 ;; Hardware stack levels used:    1
 47720 ;; Hardware stack levels required when called:    3
 47721 ;; This function calls:
 47722 ;;		Nothing
 47723 ;; This function is called by:
 47724 ;;		_TMR3_ISR
 47725 ;; This function uses a reentrant model
 47726 ;;
 47727                           
 47728                           	psect	text197
 47729  001F70                     __ptext197:
 47730                           	opt callstack 0
 47731  001F70                     _TMR3_WriteTimer:
 47732                           	opt callstack 13
 47733                           
 47734                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 47735                           
 47736                           ; BSR set to: 0
 47737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47738                           ;incstack = 0
 47739  001F70  A4A6               	btfss	166,2,c	;volatile
 47740  001F72  D00F               	goto	l13978
 47741                           
 47742                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 47743  001F74  90A6               	bcf	166,0,c	;volatile
 47744                           
 47745                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 47746                           ;stkvar	_timerVal @ sp[(0)+-2]
 47747  001F76  0EFF               	movlw	255
 47748  001F78  24E1               	addwf	fsr1l,w,c
 47749  001F7A  6ED9               	movwf	fsr2l,c
 47750  001F7C  0EFF               	movlw	255
 47751  001F7E  20E2               	addwfc	fsr1h,w,c
 47752  001F80  6EDA               	movwf	fsr2h,c
 47753  001F82  50DF               	movf	indf2,w,c
 47754  001F84  6EA5               	movwf	165,c	;volatile
 47755                           
 47756                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 47757                           ;stkvar	_timerVal @ sp[(0)+-2]
 47758  001F86  0EFE               	movlw	-2
 47759  001F88  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47760                           
 47761                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 47762  001F8E  80A6               	bsf	166,0,c	;volatile
 47763                           
 47764                           ;mcc_generated_files/tmr3.c: 141:     }
 47765  001F90  D00C               	goto	l1192
 47766  001F92                     l13978:
 47767                           
 47768                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 47769                           ;stkvar	_timerVal @ sp[(0)+-2]
 47770  001F92  0EFF               	movlw	255
 47771  001F94  24E1               	addwf	fsr1l,w,c
 47772  001F96  6ED9               	movwf	fsr2l,c
 47773  001F98  0EFF               	movlw	255
 47774  001F9A  20E2               	addwfc	fsr1h,w,c
 47775  001F9C  6EDA               	movwf	fsr2h,c
 47776  001F9E  50DF               	movf	indf2,w,c
 47777  001FA0  6EA5               	movwf	165,c	;volatile
 47778                           
 47779                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 47780                           ;stkvar	_timerVal @ sp[(0)+-2]
 47781  001FA2  0EFE               	movlw	-2
 47782  001FA4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47783  001FAA                     l1192:
 47784                           
 47785                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47786  001FAA  52E5               	movf	postdec1,f,c
 47787  001FAC  52E5               	movf	postdec1,f,c
 47788  001FAE  0012               	return		;funcret
 47789  001FB0                     __end_of_TMR3_WriteTimer:
 47790                           	opt callstack 0
 47791                           
 47792 ;; *************** function _TMR3_CallBack *****************
 47793 ;; Defined at:
 47794 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 47795 ;; Parameters:    Size  Location     Type
 47796 ;;		None
 47797 ;; Auto vars:     Size  Location     Type
 47798 ;;		None
 47799 ;; Return value:  Size  Location     Type
 47800 ;;                  1  [STACK] void 
 47801 ;; Registers used:
 47802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47803 ;; Tracked objects:
 47804 ;;		On entry : 3F/0
 47805 ;;		On exit  : 0/0
 47806 ;;		Unchanged: 0/0
 47807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47812 ;;Total ram usage:        0 bytes
 47813 ;; Hardware stack levels used:    1
 47814 ;; Hardware stack levels required when called:   13
 47815 ;; This function calls:
 47816 ;;		Absolute function
 47817 ;;		_TMR3_DefaultInterruptHandler
 47818 ;;		_calc_bsoc
 47819 ;; This function is called by:
 47820 ;;		_TMR3_ISR
 47821 ;; This function uses a reentrant model
 47822 ;;
 47823                           
 47824                           	psect	text198
 47825  0026A4                     __ptext198:
 47826                           	opt callstack 0
 47827  0026A4                     _TMR3_CallBack:
 47828                           	opt callstack 3
 47829                           
 47830                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 47831                           
 47832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47833                           ;incstack = 0
 47834  0026A4  0100               	movlb	0	; () banked
 47835  0026A6  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47836  0026A8  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47837  0026AA  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47838  0026AC  B4D8               	btfsc	status,2,c
 47839  0026AE  0012               	return	
 47840                           
 47841                           ; BSR set to: 0
 47842                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 47843  0026B0  D801               	call	u1678_28
 47844  0026B2  0012               	return	
 47845  0026B4                     u1678_28:
 47846  0026B4  0005               	push	
 47847  0026B6  6EFA               	movwf	pclath,c
 47848  0026B8  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47849  0026BA  6EFD               	movwf	tosl,c
 47850  0026BC  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47851  0026BE  6EFE               	movwf	tosh,c
 47852  0026C0  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47853  0026C2  6EFF               	movwf	tosu,c
 47854  0026C4  50FA               	movf	pclath,w,c
 47855  0026C6  0012               	return		;indir
 47856  0026C8                     __end_of_TMR3_CallBack:
 47857                           	opt callstack 0
 47858                           
 47859 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 47860 ;; Defined at:
 47861 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 47862 ;; Parameters:    Size  Location     Type
 47863 ;;		None
 47864 ;; Auto vars:     Size  Location     Type
 47865 ;;		None
 47866 ;; Return value:  Size  Location     Type
 47867 ;;                  1  [STACK] void 
 47868 ;; Registers used:
 47869 ;;		None
 47870 ;; Tracked objects:
 47871 ;;		On entry : 3F/0
 47872 ;;		On exit  : 0/0
 47873 ;;		Unchanged: 0/0
 47874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47879 ;;Total ram usage:        0 bytes
 47880 ;; Hardware stack levels used:    1
 47881 ;; Hardware stack levels required when called:    3
 47882 ;; This function calls:
 47883 ;;		Nothing
 47884 ;; This function is called by:
 47885 ;;		_TMR3_Initialize
 47886 ;;		_TMR3_CallBack
 47887 ;; This function uses a reentrant model
 47888 ;;
 47889                           
 47890                           	psect	text199
 47891  002A58                     __ptext199:
 47892                           	opt callstack 0
 47893  002A58                     _TMR3_DefaultInterruptHandler:
 47894                           	opt callstack 12
 47895                           
 47896                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47897                           
 47898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47899                           ;incstack = 0
 47900  002A58  0012               	return		;funcret
 47901  002A5A                     __end_of_TMR3_DefaultInterruptHandler:
 47902                           	opt callstack 0
 47903                           
 47904 ;; *************** function _calc_bsoc *****************
 47905 ;; Defined at:
 47906 ;;		line 39 in file "bsoc.c"
 47907 ;; Parameters:    Size  Location     Type
 47908 ;;		None
 47909 ;; Auto vars:     Size  Location     Type
 47910 ;;  adj             4  [STACK] float 
 47911 ;;  log_ptr         2  [STACK] PTR unsigned char 
 47912 ;;		 -> port_data(512), 
 47913 ;; Return value:  Size  Location     Type
 47914 ;;                  1  [STACK] void 
 47915 ;; Registers used:
 47916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 47917 ;; Tracked objects:
 47918 ;;		On entry : 3F/0
 47919 ;;		On exit  : 6/2
 47920 ;;		Unchanged: 0/0
 47921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47926 ;;Total ram usage:        0 bytes
 47927 ;; Hardware stack levels used:    1
 47928 ;; Hardware stack levels required when called:   12
 47929 ;; This function calls:
 47930 ;;		_StartTimer
 47931 ;;		___asfladd
 47932 ;;		___fldiv
 47933 ;;		___flge
 47934 ;;		___flmul
 47935 ;;		___flneg
 47936 ;;		___fltol
 47937 ;;		_fabsf
 47938 ;;		_get_ac_charger_relay
 47939 ;;		_port_data_dma_ptr
 47940 ;;		_send_port_data_dma
 47941 ;;		_sprintf
 47942 ;;		_strlen
 47943 ;; This function is called by:
 47944 ;;		_init_bsoc
 47945 ;;		_TMR3_CallBack
 47946 ;; This function uses a reentrant model
 47947 ;;
 47948                           
 47949                           	psect	text200
 47950  014938                     __ptext200:
 47951                           	opt callstack 0
 47952  014938                     _calc_bsoc:
 47953                           	opt callstack 0
 47954                           
 47955                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47956  014938  0E06               	movlw	6
 47957  01493A  26E1               	addwf	fsr1l,f,c
 47958  01493C  0E00               	movlw	0
 47959  01493E  22E2               	addwfc	fsr1h,f,c
 47960                           
 47961                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 47962                           
 47963                           ;incstack = 0
 47964  014940  0E00               	movlw	0
 47965  014942  6E32               	movwf	(btemp+8)^0,c
 47966  014944  0E00               	movlw	0
 47967  014946  6E33               	movwf	(btemp+9)^0,c
 47968  014948  0E80               	movlw	128
 47969  01494A  6E34               	movwf	(btemp+10)^0,c
 47970  01494C  0E3F               	movlw	63
 47971  01494E  6E35               	movwf	(btemp+11)^0,c
 47972                           
 47973                           ;stkvar	_adj @ sp[(-6)+0]
 47974  014950  0EFA               	movlw	-6
 47975  014952  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47976  014958  0EFB               	movlw	-5
 47977  01495A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47978  014960  0EFC               	movlw	-4
 47979  014962  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47980  014968  0EFD               	movlw	-3
 47981  01496A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47982  014970  82BE               	bsf	190,1,c	;volatile
 47983                           
 47984                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 47985  014972  0E00               	movlw	0
 47986  014974  6EE6               	movwf	postinc1,c
 47987  014976  0E00               	movlw	0
 47988  014978  6EE6               	movwf	postinc1,c
 47989  01497A  0E61               	movlw	97
 47990  01497C  6EE6               	movwf	postinc1,c
 47991  01497E  0E45               	movlw	69
 47992  014980  6EE6               	movwf	postinc1,c
 47993  014982  EE22  F143         	lfsr	2,_C+68	;volatile
 47994  014986  006F FF7B FFE6     	movff	postinc2,postinc1
 47995  01498C  006F FF7B FFE6     	movff	postinc2,postinc1
 47996  014992  006F FF7B FFE6     	movff	postinc2,postinc1
 47997  014998  006F FF7B FFE6     	movff	postinc2,postinc1
 47998  01499E  EC2E  F0BE         	call	___fldiv	;wreg free
 47999  0149A2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48000  0149A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48001  0149AE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48002  0149B4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48003  0149BA  0E8F               	movlw	low (_C+144)
 48004  0149BC  6EE6               	movwf	postinc1,c
 48005  0149BE  0E09               	movlw	high (_C+144)
 48006  0149C0  6EE6               	movwf	postinc1,c
 48007  0149C2  ECD7  F009         	call	___asfladd	;wreg free
 48008                           
 48009                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 48010  0149C6  EE22  F18F         	lfsr	2,_C+144	;volatile
 48011  0149CA  006F FF7B FFE6     	movff	postinc2,postinc1
 48012  0149D0  006F FF7B FFE6     	movff	postinc2,postinc1
 48013  0149D6  006F FF7B FFE6     	movff	postinc2,postinc1
 48014  0149DC  006F FF7B FFE6     	movff	postinc2,postinc1
 48015  0149E2  EE22  F18B         	lfsr	2,_C+140	;volatile
 48016  0149E6  006F FF7B FFE6     	movff	postinc2,postinc1
 48017  0149EC  006F FF7B FFE6     	movff	postinc2,postinc1
 48018  0149F2  006F FF7B FFE6     	movff	postinc2,postinc1
 48019  0149F8  006F FF7B FFE6     	movff	postinc2,postinc1
 48020  0149FE  EC9F  F0F4         	call	___flge	;wreg free
 48021  014A02  B02A               	btfsc	btemp& (0+255),0,c
 48022  014A04  D00E               	goto	l17048
 48023                           
 48024                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 48025  014A06  EE22  F18B         	lfsr	2,_C+140	;volatile
 48026  014A0A  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 48027  014A10  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 48028  014A16  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 48029  014A1C  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 48030  014A22                     l17048:
 48031                           
 48032                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 48033  014A22  0ECD               	movlw	205
 48034  014A24  6EE6               	movwf	postinc1,c
 48035  014A26  0ECC               	movlw	204
 48036  014A28  6EE6               	movwf	postinc1,c
 48037  014A2A  0ECC               	movlw	204
 48038  014A2C  6EE6               	movwf	postinc1,c
 48039  014A2E  0E3D               	movlw	61
 48040  014A30  6EE6               	movwf	postinc1,c
 48041  014A32  EE22  F18F         	lfsr	2,_C+144	;volatile
 48042  014A36  006F FF7B FFE6     	movff	postinc2,postinc1
 48043  014A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 48044  014A42  006F FF7B FFE6     	movff	postinc2,postinc1
 48045  014A48  006F FF7B FFE6     	movff	postinc2,postinc1
 48046  014A4E  EC9F  F0F4         	call	___flge	;wreg free
 48047  014A52  B02A               	btfsc	btemp& (0+255),0,c
 48048  014A54  D010               	goto	l17052
 48049                           
 48050                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 48051  014A56  0ECD               	movlw	205
 48052  014A58  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 48053  014A5E  0ECC               	movlw	204
 48054  014A60  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 48055  014A66  0ECC               	movlw	204
 48056  014A68  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 48057  014A6E  0E3D               	movlw	61
 48058  014A70  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 48059  014A76                     l17052:
 48060                           
 48061                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 48062  014A76  EE22  F143         	lfsr	2,_C+68	;volatile
 48063  014A7A  006F FF7B FFE6     	movff	postinc2,postinc1
 48064  014A80  006F FF7B FFE6     	movff	postinc2,postinc1
 48065  014A86  006F FF7B FFE6     	movff	postinc2,postinc1
 48066  014A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 48067  014A92  0E0A               	movlw	10
 48068  014A94  6EE6               	movwf	postinc1,c
 48069  014A96  0ED7               	movlw	215
 48070  014A98  6EE6               	movwf	postinc1,c
 48071  014A9A  0E23               	movlw	35
 48072  014A9C  6EE6               	movwf	postinc1,c
 48073  014A9E  0E3C               	movlw	60
 48074  014AA0  6EE6               	movwf	postinc1,c
 48075  014AA2  EC9F  F0F4         	call	___flge	;wreg free
 48076  014AA6  B02A               	btfsc	btemp& (0+255),0,c
 48077  014AA8  D01C               	goto	l17056
 48078                           
 48079                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 48080  014AAA  0062  F750  F032   	movff	_C+213,btemp+8	;volatile
 48081  014AB0  0062  F754  F033   	movff	_C+214,btemp+9	;volatile
 48082  014AB6  0062  F758  F034   	movff	_C+215,btemp+10	;volatile
 48083  014ABC  0062  F75C  F035   	movff	_C+216,btemp+11	;volatile
 48084                           
 48085                           ;stkvar	_adj @ sp[(-6)+0]
 48086  014AC2  0EFA               	movlw	-6
 48087  014AC4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48088  014ACA  0EFB               	movlw	-5
 48089  014ACC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48090  014AD2  0EFC               	movlw	-4
 48091  014AD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48092  014ADA  0EFD               	movlw	-3
 48093  014ADC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48094  014AE2                     l17056:
 48095                           
 48096                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 48097  014AE2  0E0A               	movlw	10
 48098  014AE4  6EE6               	movwf	postinc1,c
 48099  014AE6  0ED7               	movlw	215
 48100  014AE8  6EE6               	movwf	postinc1,c
 48101  014AEA  0E23               	movlw	35
 48102  014AEC  6EE6               	movwf	postinc1,c
 48103  014AEE  0E3C               	movlw	60
 48104  014AF0  6EE6               	movwf	postinc1,c
 48105  014AF2  EE22  F143         	lfsr	2,_C+68	;volatile
 48106  014AF6  006F FF7B FFE6     	movff	postinc2,postinc1
 48107  014AFC  006F FF7B FFE6     	movff	postinc2,postinc1
 48108  014B02  006F FF7B FFE6     	movff	postinc2,postinc1
 48109  014B08  006F FF7B FFE6     	movff	postinc2,postinc1
 48110  014B0E  EC9F  F0F4         	call	___flge	;wreg free
 48111  014B12  B02A               	btfsc	btemp& (0+255),0,c
 48112  014B14  D01C               	goto	l17060
 48113                           
 48114                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 48115  014B16  0062  F740  F032   	movff	_C+209,btemp+8	;volatile
 48116  014B1C  0062  F744  F033   	movff	_C+210,btemp+9	;volatile
 48117  014B22  0062  F748  F034   	movff	_C+211,btemp+10	;volatile
 48118  014B28  0062  F74C  F035   	movff	_C+212,btemp+11	;volatile
 48119                           
 48120                           ;stkvar	_adj @ sp[(-6)+0]
 48121  014B2E  0EFA               	movlw	-6
 48122  014B30  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48123  014B36  0EFB               	movlw	-5
 48124  014B38  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48125  014B3E  0EFC               	movlw	-4
 48126  014B40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48127  014B46  0EFD               	movlw	-3
 48128  014B48  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48129  014B4E                     l17060:
 48130                           
 48131                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 48132  014B4E  0E00               	movlw	0
 48133  014B50  6EE6               	movwf	postinc1,c
 48134  014B52  0E00               	movlw	0
 48135  014B54  6EE6               	movwf	postinc1,c
 48136  014B56  0E61               	movlw	97
 48137  014B58  6EE6               	movwf	postinc1,c
 48138  014B5A  0E45               	movlw	69
 48139  014B5C  6EE6               	movwf	postinc1,c
 48140                           
 48141                           ;stkvar	_adj @ sp[(-10)+0]
 48142  014B5E  0EF6               	movlw	-10
 48143  014B60  006F FF8F FFE6     	movff	plusw1,postinc1
 48144  014B66  006F FF8F FFE6     	movff	plusw1,postinc1
 48145  014B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 48146  014B72  006F FF8F FFE6     	movff	plusw1,postinc1
 48147  014B78  EE22  F143         	lfsr	2,_C+68	;volatile
 48148  014B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 48149  014B82  006F FF7B FFE6     	movff	postinc2,postinc1
 48150  014B88  006F FF7B FFE6     	movff	postinc2,postinc1
 48151  014B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 48152  014B94  ECDD  F0B2         	call	___flmul	;wreg free
 48153  014B98  0060  F0AB  FFE6   	movff	btemp,postinc1
 48154  014B9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48155  014BA4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48156  014BAA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48157  014BB0  EC2E  F0BE         	call	___fldiv	;wreg free
 48158  014BB4  0060  F0AB  FFE6   	movff	btemp,postinc1
 48159  014BBA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48160  014BC0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48161  014BC6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48162  014BCC  0E8F               	movlw	low (_C+144)
 48163  014BCE  6EE6               	movwf	postinc1,c
 48164  014BD0  0E09               	movlw	high (_C+144)
 48165  014BD2  6EE6               	movwf	postinc1,c
 48166  014BD4  ECD7  F009         	call	___asfladd	;wreg free
 48167                           
 48168                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 48169  014BD8  EE22  F18F         	lfsr	2,_C+144	;volatile
 48170  014BDC  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 48171  014BE2  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 48172  014BE8  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 48173  014BEE  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 48174                           
 48175                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 48176  014BF4  EE22  F19B         	lfsr	2,_C+156	;volatile
 48177  014BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 48178  014BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 48179  014C04  006F FF7B FFE6     	movff	postinc2,postinc1
 48180  014C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 48181  014C10  EE22  F18B         	lfsr	2,_C+140	;volatile
 48182  014C14  006F FF7B FFE6     	movff	postinc2,postinc1
 48183  014C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 48184  014C20  006F FF7B FFE6     	movff	postinc2,postinc1
 48185  014C26  006F FF7B FFE6     	movff	postinc2,postinc1
 48186  014C2C  EC9F  F0F4         	call	___flge	;wreg free
 48187  014C30  B02A               	btfsc	btemp& (0+255),0,c
 48188  014C32  D00E               	goto	l17068
 48189                           
 48190                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 48191  014C34  EE22  F18B         	lfsr	2,_C+140	;volatile
 48192  014C38  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 48193  014C3E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 48194  014C44  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 48195  014C4A  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 48196  014C50                     l17068:
 48197                           
 48198                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 48199  014C50  0ECD               	movlw	205
 48200  014C52  6EE6               	movwf	postinc1,c
 48201  014C54  0ECC               	movlw	204
 48202  014C56  6EE6               	movwf	postinc1,c
 48203  014C58  0ECC               	movlw	204
 48204  014C5A  6EE6               	movwf	postinc1,c
 48205  014C5C  0E3D               	movlw	61
 48206  014C5E  6EE6               	movwf	postinc1,c
 48207  014C60  EE22  F19B         	lfsr	2,_C+156	;volatile
 48208  014C64  006F FF7B FFE6     	movff	postinc2,postinc1
 48209  014C6A  006F FF7B FFE6     	movff	postinc2,postinc1
 48210  014C70  006F FF7B FFE6     	movff	postinc2,postinc1
 48211  014C76  006F FF7B FFE6     	movff	postinc2,postinc1
 48212  014C7C  EC9F  F0F4         	call	___flge	;wreg free
 48213  014C80  B02A               	btfsc	btemp& (0+255),0,c
 48214  014C82  D010               	goto	l17072
 48215                           
 48216                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 48217  014C84  0ECD               	movlw	205
 48218  014C86  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 48219  014C8C  0ECC               	movlw	204
 48220  014C8E  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 48221  014C94  0ECC               	movlw	204
 48222  014C96  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 48223  014C9C  0E3D               	movlw	61
 48224  014C9E  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 48225  014CA4                     l17072:
 48226                           
 48227                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 48228  014CA4  0E00               	movlw	0
 48229  014CA6  6EE6               	movwf	postinc1,c
 48230  014CA8  0E00               	movlw	0
 48231  014CAA  6EE6               	movwf	postinc1,c
 48232  014CAC  0E61               	movlw	97
 48233  014CAE  6EE6               	movwf	postinc1,c
 48234  014CB0  0E45               	movlw	69
 48235  014CB2  6EE6               	movwf	postinc1,c
 48236  014CB4  EE22  F147         	lfsr	2,_C+72	;volatile
 48237  014CB8  006F FF7B FFE6     	movff	postinc2,postinc1
 48238  014CBE  006F FF7B FFE6     	movff	postinc2,postinc1
 48239  014CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 48240  014CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 48241  014CD0  EC2E  F0BE         	call	___fldiv	;wreg free
 48242  014CD4  0060  F0AB  FFE6   	movff	btemp,postinc1
 48243  014CDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48244  014CE0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48245  014CE6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48246  014CEC  0E93               	movlw	low (_C+148)
 48247  014CEE  6EE6               	movwf	postinc1,c
 48248  014CF0  0E09               	movlw	high (_C+148)
 48249  014CF2  6EE6               	movwf	postinc1,c
 48250  014CF4  ECD7  F009         	call	___asfladd	;wreg free
 48251                           
 48252                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 48253  014CF8  0E00               	movlw	0
 48254  014CFA  6EE6               	movwf	postinc1,c
 48255  014CFC  0E00               	movlw	0
 48256  014CFE  6EE6               	movwf	postinc1,c
 48257  014D00  0E61               	movlw	97
 48258  014D02  6EE6               	movwf	postinc1,c
 48259  014D04  0E45               	movlw	69
 48260  014D06  6EE6               	movwf	postinc1,c
 48261  014D08  EE22  F17B         	lfsr	2,_C+124	;volatile
 48262  014D0C  006F FF7B FFE6     	movff	postinc2,postinc1
 48263  014D12  006F FF7B FFE6     	movff	postinc2,postinc1
 48264  014D18  006F FF7B FFE6     	movff	postinc2,postinc1
 48265  014D1E  006F FF7B FFE6     	movff	postinc2,postinc1
 48266  014D24  EC2E  F0BE         	call	___fldiv	;wreg free
 48267  014D28  0060  F0AB  FFE6   	movff	btemp,postinc1
 48268  014D2E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48269  014D34  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48270  014D3A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48271  014D40  0EA7               	movlw	low (_C+168)
 48272  014D42  6EE6               	movwf	postinc1,c
 48273  014D44  0E09               	movlw	high (_C+168)
 48274  014D46  6EE6               	movwf	postinc1,c
 48275  014D48  ECD7  F009         	call	___asfladd	;wreg free
 48276                           
 48277                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 48278  014D4C  0E00               	movlw	0
 48279  014D4E  6EE6               	movwf	postinc1,c
 48280  014D50  0E00               	movlw	0
 48281  014D52  6EE6               	movwf	postinc1,c
 48282  014D54  0E61               	movlw	97
 48283  014D56  6EE6               	movwf	postinc1,c
 48284  014D58  0E45               	movlw	69
 48285  014D5A  6EE6               	movwf	postinc1,c
 48286  014D5C  EE22  F177         	lfsr	2,_C+120	;volatile
 48287  014D60  006F FF7B FFE6     	movff	postinc2,postinc1
 48288  014D66  006F FF7B FFE6     	movff	postinc2,postinc1
 48289  014D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 48290  014D72  006F FF7B FFE6     	movff	postinc2,postinc1
 48291  014D78  EC2E  F0BE         	call	___fldiv	;wreg free
 48292  014D7C  0060  F0AB  FFE6   	movff	btemp,postinc1
 48293  014D82  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48294  014D88  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48295  014D8E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48296  014D94  0EAB               	movlw	low (_C+172)
 48297  014D96  6EE6               	movwf	postinc1,c
 48298  014D98  0E09               	movlw	high (_C+172)
 48299  014D9A  6EE6               	movwf	postinc1,c
 48300  014D9C  ECD7  F009         	call	___asfladd	;wreg free
 48301                           
 48302                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 48303  014DA0  0E00               	movlw	0
 48304  014DA2  6EE6               	movwf	postinc1,c
 48305  014DA4  0E00               	movlw	0
 48306  014DA6  6EE6               	movwf	postinc1,c
 48307  014DA8  0E61               	movlw	97
 48308  014DAA  6EE6               	movwf	postinc1,c
 48309  014DAC  0E45               	movlw	69
 48310  014DAE  6EE6               	movwf	postinc1,c
 48311  014DB0  EE22  F173         	lfsr	2,_C+116	;volatile
 48312  014DB4  006F FF7B FFE6     	movff	postinc2,postinc1
 48313  014DBA  006F FF7B FFE6     	movff	postinc2,postinc1
 48314  014DC0  006F FF7B FFE6     	movff	postinc2,postinc1
 48315  014DC6  006F FF7B FFE6     	movff	postinc2,postinc1
 48316  014DCC  EC2E  F0BE         	call	___fldiv	;wreg free
 48317  014DD0  0060  F0AB  FFE6   	movff	btemp,postinc1
 48318  014DD6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48319  014DDC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48320  014DE2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48321  014DE8  0EAF               	movlw	low (_C+176)
 48322  014DEA  6EE6               	movwf	postinc1,c
 48323  014DEC  0E09               	movlw	high (_C+176)
 48324  014DEE  6EE6               	movwf	postinc1,c
 48325  014DF0  ECD7  F009         	call	___asfladd	;wreg free
 48326                           
 48327                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 48328  014DF4  EE22  F17F         	lfsr	2,_C+128	;volatile
 48329  014DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 48330  014DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 48331  014E04  006F FF7B FFE6     	movff	postinc2,postinc1
 48332  014E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 48333  014E10  0E00               	movlw	0
 48334  014E12  6EE6               	movwf	postinc1,c
 48335  014E14  0E00               	movlw	0
 48336  014E16  6EE6               	movwf	postinc1,c
 48337  014E18  0E00               	movlw	0
 48338  014E1A  6EE6               	movwf	postinc1,c
 48339  014E1C  0E00               	movlw	0
 48340  014E1E  6EE6               	movwf	postinc1,c
 48341  014E20  EC9F  F0F4         	call	___flge	;wreg free
 48342  014E24  B02A               	btfsc	btemp& (0+255),0,c
 48343  014E26  D02A               	goto	l17078
 48344                           
 48345                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 48346  014E28  0E00               	movlw	0
 48347  014E2A  6EE6               	movwf	postinc1,c
 48348  014E2C  0E00               	movlw	0
 48349  014E2E  6EE6               	movwf	postinc1,c
 48350  014E30  0E61               	movlw	97
 48351  014E32  6EE6               	movwf	postinc1,c
 48352  014E34  0E45               	movlw	69
 48353  014E36  6EE6               	movwf	postinc1,c
 48354  014E38  EE22  F17F         	lfsr	2,_C+128	;volatile
 48355  014E3C  006F FF7B FFE6     	movff	postinc2,postinc1
 48356  014E42  006F FF7B FFE6     	movff	postinc2,postinc1
 48357  014E48  006F FF7B FFE6     	movff	postinc2,postinc1
 48358  014E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 48359  014E54  EC2E  F0BE         	call	___fldiv	;wreg free
 48360  014E58  0060  F0AB  FFE6   	movff	btemp,postinc1
 48361  014E5E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48362  014E64  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48363  014E6A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48364  014E70  0E9F               	movlw	low (_C+160)
 48365  014E72  6EE6               	movwf	postinc1,c
 48366  014E74  0E09               	movlw	high (_C+160)
 48367  014E76  6EE6               	movwf	postinc1,c
 48368  014E78  ECD7  F009         	call	___asfladd	;wreg free
 48369  014E7C                     l17078:
 48370                           
 48371                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 48372  014E7C  EE22  F17F         	lfsr	2,_C+128	;volatile
 48373  014E80  0E03               	movlw	3
 48374  014E82  AEDB               	btfss	plusw2,7,c
 48375  014E84  D038               	goto	l17082
 48376                           
 48377                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 48378  014E86  0E00               	movlw	0
 48379  014E88  6EE6               	movwf	postinc1,c
 48380  014E8A  0E00               	movlw	0
 48381  014E8C  6EE6               	movwf	postinc1,c
 48382  014E8E  0E61               	movlw	97
 48383  014E90  6EE6               	movwf	postinc1,c
 48384  014E92  0E45               	movlw	69
 48385  014E94  6EE6               	movwf	postinc1,c
 48386  014E96  EE22  F17F         	lfsr	2,_C+128	;volatile
 48387  014E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 48388  014EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 48389  014EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 48390  014EAC  006F FF7B FFE6     	movff	postinc2,postinc1
 48391  014EB2  EC2E  F0BE         	call	___fldiv	;wreg free
 48392  014EB6  0060  F0AB  FFE6   	movff	btemp,postinc1
 48393  014EBC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48394  014EC2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48395  014EC8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48396  014ECE  EC56  F004         	call	_fabsf	;wreg free
 48397  014ED2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48398  014ED8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48399  014EDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48400  014EE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48401  014EEA  0EA3               	movlw	low (_C+164)
 48402  014EEC  6EE6               	movwf	postinc1,c
 48403  014EEE  0E09               	movlw	high (_C+164)
 48404  014EF0  6EE6               	movwf	postinc1,c
 48405  014EF2  ECD7  F009         	call	___asfladd	;wreg free
 48406  014EF6                     l17082:
 48407                           
 48408                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 48409  014EF6  0E00               	movlw	0
 48410  014EF8  6EE6               	movwf	postinc1,c
 48411  014EFA  0E00               	movlw	0
 48412  014EFC  6EE6               	movwf	postinc1,c
 48413  014EFE  0EC8               	movlw	200
 48414  014F00  6EE6               	movwf	postinc1,c
 48415  014F02  0E42               	movlw	66
 48416  014F04  6EE6               	movwf	postinc1,c
 48417  014F06  EE22  F18B         	lfsr	2,_C+140	;volatile
 48418  014F0A  006F FF7B FFE6     	movff	postinc2,postinc1
 48419  014F10  006F FF7B FFE6     	movff	postinc2,postinc1
 48420  014F16  006F FF7B FFE6     	movff	postinc2,postinc1
 48421  014F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 48422  014F22  EE22  F19B         	lfsr	2,_C+156	;volatile
 48423  014F26  006F FF7B FFE6     	movff	postinc2,postinc1
 48424  014F2C  006F FF7B FFE6     	movff	postinc2,postinc1
 48425  014F32  006F FF7B FFE6     	movff	postinc2,postinc1
 48426  014F38  006F FF7B FFE6     	movff	postinc2,postinc1
 48427  014F3E  EC2E  F0BE         	call	___fldiv	;wreg free
 48428  014F42  0060  F0AB  FFE6   	movff	btemp,postinc1
 48429  014F48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48430  014F4E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48431  014F54  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48432  014F5A  ECDD  F0B2         	call	___flmul	;wreg free
 48433  014F5E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48434  014F64  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48435  014F6A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48436  014F70  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48437  014F76  EC33  F0F3         	call	___fltol	;wreg free
 48438  014F7A  0060  F0A8  F034   	movff	btemp,btemp+10
 48439  014F80  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48440  014F86  0E01               	movlw	1
 48441  014F88  2634               	addwf	(btemp+10)^0,f,c
 48442  014F8A  0E00               	movlw	0
 48443  014F8C  2235               	addwfc	(btemp+11)^0,f,c
 48444  014F8E  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 48445  014F94  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 48446                           
 48447                           ;bsoc.c: 76:  if (C.soc > 100)
 48448  014F9A  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48449  014F9E  0E01               	movlw	1
 48450  014FA0  50DB               	movf	plusw2,w,c
 48451  014FA2  E104               	bnz	u1671_20
 48452  014FA4  0E65               	movlw	101
 48453  014FA6  5CDE               	subwf	postinc2,w,c
 48454  014FA8  A0D8               	btfss	status,0,c
 48455  014FAA  D008               	goto	l17088
 48456  014FAC                     u1671_20:
 48457                           
 48458                           ;bsoc.c: 77:   C.soc = 100;
 48459  014FAC  0E64               	movlw	100
 48460  014FAE  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 48461  014FB4  0E00               	movlw	0
 48462  014FB6  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 48463  014FBC                     l17088:
 48464                           
 48465                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 48466  014FBC  EE22  F143         	lfsr	2,_C+68	;volatile
 48467  014FC0  0E03               	movlw	3
 48468  014FC2  AEDB               	btfss	plusw2,7,c
 48469  014FC4  D047               	goto	l2362
 48470                           
 48471                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 48472  014FC6  EE22  F143         	lfsr	2,_C+68	;volatile
 48473  014FCA  006F FF7B FFE6     	movff	postinc2,postinc1
 48474  014FD0  006F FF7B FFE6     	movff	postinc2,postinc1
 48475  014FD6  006F FF7B FFE6     	movff	postinc2,postinc1
 48476  014FDC  006F FF7B FFE6     	movff	postinc2,postinc1
 48477  014FE2  EE22  F19B         	lfsr	2,_C+156	;volatile
 48478  014FE6  006F FF7B FFE6     	movff	postinc2,postinc1
 48479  014FEC  006F FF7B FFE6     	movff	postinc2,postinc1
 48480  014FF2  006F FF7B FFE6     	movff	postinc2,postinc1
 48481  014FF8  006F FF7B FFE6     	movff	postinc2,postinc1
 48482  014FFE  EC2E  F0BE         	call	___fldiv	;wreg free
 48483  015002  0060  F0AB  FFE6   	movff	btemp,postinc1
 48484  015008  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48485  01500E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48486  015014  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48487  01501A  ECFC  F00D         	call	___flneg	;wreg free
 48488  01501E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48489  015024  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48490  01502A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48491  015030  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48492  015036  EC33  F0F3         	call	___fltol	;wreg free
 48493  01503A  0060  F0A8  F034   	movff	btemp,btemp+10
 48494  015040  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48495  015046  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 48496  01504C  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 48497                           
 48498                           ;bsoc.c: 81:  } else {
 48499  015052  D008               	goto	l17092
 48500  015054                     l2362:
 48501                           
 48502                           ;bsoc.c: 82:   C.runtime = 99;
 48503  015054  0E63               	movlw	99
 48504  015056  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48505  01505C  0E00               	movlw	0
 48506  01505E  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48507  015064                     l17092:
 48508                           
 48509                           ;bsoc.c: 84:  if (C.runtime > 99)
 48510  015064  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48511  015068  0E01               	movlw	1
 48512  01506A  50DB               	movf	plusw2,w,c
 48513  01506C  E104               	bnz	u1673_20
 48514  01506E  0E64               	movlw	100
 48515  015070  5CDE               	subwf	postinc2,w,c
 48516  015072  A0D8               	btfss	status,0,c
 48517  015074  D008               	goto	l17096
 48518  015076                     u1673_20:
 48519                           
 48520                           ;bsoc.c: 85:   C.runtime = 99;
 48521  015076  0E63               	movlw	99
 48522  015078  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48523  01507E  0E00               	movlw	0
 48524  015080  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48525  015086                     l17096:
 48526                           
 48527                           ;bsoc.c: 87:  V.lowint_count++;
 48528  015086  0E01               	movlw	1
 48529  015088  0102               	movlb	2	; () banked
 48530  01508A  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 48531  01508C  0E00               	movlw	0
 48532  01508E  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 48533  015090  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 48534  015092  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 48535                           
 48536                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 48537  015094  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 48538  015096  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 48539  015098  A4D8               	btfss	status,2,c
 48540  01509A  D177               	goto	l17108
 48541                           
 48542                           ; BSR set to: 2
 48543  01509C  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 48544  01509E  B4D8               	btfsc	status,2,c
 48545  0150A0  D174               	goto	l17108
 48546                           
 48547                           ; BSR set to: 2
 48548                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 48549  0150A2  ECEA  F014         	call	_port_data_dma_ptr	;wreg free
 48550                           
 48551                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48552  0150A6  0EFF               	movlw	-1
 48553  0150A8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 48554  0150AE  0EFE               	movlw	-2
 48555  0150B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 48556                           
 48557                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 48558  0150B6  EE22  F1D0         	lfsr	2,_C+209	;volatile
 48559  0150BA  006F FF7B FFE6     	movff	postinc2,postinc1
 48560  0150C0  006F FF7B FFE6     	movff	postinc2,postinc1
 48561  0150C6  006F FF7B FFE6     	movff	postinc2,postinc1
 48562  0150CC  006F FF7B FFE6     	movff	postinc2,postinc1
 48563  0150D2  EE22  F1D4         	lfsr	2,_C+213	;volatile
 48564  0150D6  006F FF7B FFE6     	movff	postinc2,postinc1
 48565  0150DC  006F FF7B FFE6     	movff	postinc2,postinc1
 48566  0150E2  006F FF7B FFE6     	movff	postinc2,postinc1
 48567  0150E8  006F FF7B FFE6     	movff	postinc2,postinc1
 48568  0150EE  EE22  F19B         	lfsr	2,_C+156	;volatile
 48569  0150F2  006F FF7B FFE6     	movff	postinc2,postinc1
 48570  0150F8  006F FF7B FFE6     	movff	postinc2,postinc1
 48571  0150FE  006F FF7B FFE6     	movff	postinc2,postinc1
 48572  015104  006F FF7B FFE6     	movff	postinc2,postinc1
 48573  01510A  EE22  F233         	lfsr	2,_C+308	;volatile
 48574  01510E  006F FF7B FFE6     	movff	postinc2,postinc1
 48575  015114  006F FF7B FFE6     	movff	postinc2,postinc1
 48576  01511A  006F FF7B FFE6     	movff	postinc2,postinc1
 48577  015120  006F FF7B FFE6     	movff	postinc2,postinc1
 48578  015126  EE22  F22F         	lfsr	2,_C+304	;volatile
 48579  01512A  006F FF7B FFE6     	movff	postinc2,postinc1
 48580  015130  006F FF7B FFE6     	movff	postinc2,postinc1
 48581  015136  006F FF7B FFE6     	movff	postinc2,postinc1
 48582  01513C  006F FF7B FFE6     	movff	postinc2,postinc1
 48583  015142  EE22  F22D         	lfsr	2,_C+302	;volatile
 48584  015146  50DF               	movf	indf2,w,c
 48585  015148  6EE6               	movwf	postinc1,c
 48586  01514A  0E00               	movlw	0
 48587  01514C  6EE6               	movwf	postinc1,c
 48588  01514E  ECCE  F014         	call	_get_ac_charger_relay	;wreg free
 48589  015152  502A               	movf	btemp^0,w,c
 48590  015154  6EE6               	movwf	postinc1,c
 48591  015156  0E00               	movlw	0
 48592  015158  6EE6               	movwf	postinc1,c
 48593  01515A  EE22  F167         	lfsr	2,_C+104	;volatile
 48594  01515E  006F FF7B FFE6     	movff	postinc2,postinc1
 48595  015164  006F FF7B FFE6     	movff	postinc2,postinc1
 48596  01516A  006F FF7B FFE6     	movff	postinc2,postinc1
 48597  015170  006F FF7B FFE6     	movff	postinc2,postinc1
 48598  015176  EE22  F187         	lfsr	2,_C+136	;volatile
 48599  01517A  006F FF7B FFE6     	movff	postinc2,postinc1
 48600  015180  006F FF7B FFE6     	movff	postinc2,postinc1
 48601  015186  006F FF7B FFE6     	movff	postinc2,postinc1
 48602  01518C  006F FF7B FFE6     	movff	postinc2,postinc1
 48603  015192  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48604  015196  006F FF78  F034    	movff	postinc2,btemp+10
 48605  01519C  006F FF74  F035    	movff	postdec2,btemp+11
 48606  0151A2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48607  0151A8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48608  0151AE  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48609  0151B2  006F FF78  F034    	movff	postinc2,btemp+10
 48610  0151B8  006F FF74  F035    	movff	postdec2,btemp+11
 48611  0151BE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48612  0151C4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48613  0151CA  EE22  F193         	lfsr	2,_C+148	;volatile
 48614  0151CE  006F FF7B FFE6     	movff	postinc2,postinc1
 48615  0151D4  006F FF7B FFE6     	movff	postinc2,postinc1
 48616  0151DA  006F FF7B FFE6     	movff	postinc2,postinc1
 48617  0151E0  006F FF7B FFE6     	movff	postinc2,postinc1
 48618  0151E6  EE22  F18F         	lfsr	2,_C+144	;volatile
 48619  0151EA  006F FF7B FFE6     	movff	postinc2,postinc1
 48620  0151F0  006F FF7B FFE6     	movff	postinc2,postinc1
 48621  0151F6  006F FF7B FFE6     	movff	postinc2,postinc1
 48622  0151FC  006F FF7B FFE6     	movff	postinc2,postinc1
 48623  015202  EE22  F177         	lfsr	2,_C+120	;volatile
 48624  015206  006F FF7B FFE6     	movff	postinc2,postinc1
 48625  01520C  006F FF7B FFE6     	movff	postinc2,postinc1
 48626  015212  006F FF7B FFE6     	movff	postinc2,postinc1
 48627  015218  006F FF7B FFE6     	movff	postinc2,postinc1
 48628  01521E  EE22  F173         	lfsr	2,_C+116	;volatile
 48629  015222  006F FF7B FFE6     	movff	postinc2,postinc1
 48630  015228  006F FF7B FFE6     	movff	postinc2,postinc1
 48631  01522E  006F FF7B FFE6     	movff	postinc2,postinc1
 48632  015234  006F FF7B FFE6     	movff	postinc2,postinc1
 48633  01523A  EE22  F17B         	lfsr	2,_C+124	;volatile
 48634  01523E  006F FF7B FFE6     	movff	postinc2,postinc1
 48635  015244  006F FF7B FFE6     	movff	postinc2,postinc1
 48636  01524A  006F FF7B FFE6     	movff	postinc2,postinc1
 48637  015250  006F FF7B FFE6     	movff	postinc2,postinc1
 48638  015256  EE22  F17F         	lfsr	2,_C+128	;volatile
 48639  01525A  006F FF7B FFE6     	movff	postinc2,postinc1
 48640  015260  006F FF7B FFE6     	movff	postinc2,postinc1
 48641  015266  006F FF7B FFE6     	movff	postinc2,postinc1
 48642  01526C  006F FF7B FFE6     	movff	postinc2,postinc1
 48643  015272  EE22  F147         	lfsr	2,_C+72	;volatile
 48644  015276  006F FF7B FFE6     	movff	postinc2,postinc1
 48645  01527C  006F FF7B FFE6     	movff	postinc2,postinc1
 48646  015282  006F FF7B FFE6     	movff	postinc2,postinc1
 48647  015288  006F FF7B FFE6     	movff	postinc2,postinc1
 48648  01528E  EE22  F143         	lfsr	2,_C+68	;volatile
 48649  015292  006F FF7B FFE6     	movff	postinc2,postinc1
 48650  015298  006F FF7B FFE6     	movff	postinc2,postinc1
 48651  01529E  006F FF7B FFE6     	movff	postinc2,postinc1
 48652  0152A4  006F FF7B FFE6     	movff	postinc2,postinc1
 48653  0152AA  EE22  F163         	lfsr	2,_C+100	;volatile
 48654  0152AE  006F FF7B FFE6     	movff	postinc2,postinc1
 48655  0152B4  006F FF7B FFE6     	movff	postinc2,postinc1
 48656  0152BA  006F FF7B FFE6     	movff	postinc2,postinc1
 48657  0152C0  006F FF7B FFE6     	movff	postinc2,postinc1
 48658  0152C6  EE22  F14B         	lfsr	2,_C+76	;volatile
 48659  0152CA  006F FF7B FFE6     	movff	postinc2,postinc1
 48660  0152D0  006F FF7B FFE6     	movff	postinc2,postinc1
 48661  0152D6  006F FF7B FFE6     	movff	postinc2,postinc1
 48662  0152DC  006F FF7B FFE6     	movff	postinc2,postinc1
 48663  0152E2  EE22  F14F         	lfsr	2,_C+80	;volatile
 48664  0152E6  006F FF7B FFE6     	movff	postinc2,postinc1
 48665  0152EC  006F FF7B FFE6     	movff	postinc2,postinc1
 48666  0152F2  006F FF7B FFE6     	movff	postinc2,postinc1
 48667  0152F8  006F FF7B FFE6     	movff	postinc2,postinc1
 48668  0152FE  EE22  F153         	lfsr	2,_C+84	;volatile
 48669  015302  006F FF7B FFE6     	movff	postinc2,postinc1
 48670  015308  006F FF7B FFE6     	movff	postinc2,postinc1
 48671  01530E  006F FF7B FFE6     	movff	postinc2,postinc1
 48672  015314  006F FF7B FFE6     	movff	postinc2,postinc1
 48673  01531A  0060  FA23  FFE6   	movff	_V+129,postinc1
 48674  015320  0060  FA27  FFE6   	movff	_V+130,postinc1
 48675  015326  0060  FA2B  FFE6   	movff	_V+131,postinc1
 48676  01532C  0060  FA2F  FFE6   	movff	_V+132,postinc1
 48677  015332  0E32               	movlw	50
 48678  015334  6EE6               	movwf	postinc1,c
 48679  015336  0E00               	movlw	0
 48680  015338  6EE6               	movwf	postinc1,c
 48681  01533A  0EF7               	movlw	low STR_94
 48682  01533C  6EE6               	movwf	postinc1,c
 48683  01533E  0EF9               	movlw	high STR_94
 48684  015340  6EE6               	movwf	postinc1,c
 48685                           
 48686                           ;stkvar	_log_ptr @ sp[(-98)+4]
 48687  015342  0EA2               	movlw	-94
 48688  015344  006F FF8F FFE6     	movff	plusw1,postinc1
 48689  01534A  006F FF8F FFE6     	movff	plusw1,postinc1
 48690  015350  0E5E               	movlw	94
 48691  015352  6EE6               	movwf	postinc1,c
 48692  015354  EC4F  F0FD         	call	_sprintf	;wreg free
 48693                           
 48694                           ; BSR set to: 0
 48695                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 48696  015358  0E7D               	movlw	125
 48697  01535A  6EE6               	movwf	postinc1,c
 48698  01535C  0E00               	movlw	0
 48699  01535E  6EE6               	movwf	postinc1,c
 48700  015360  0E0A               	movlw	10
 48701  015362  6EE6               	movwf	postinc1,c
 48702  015364  EC78  F00F         	call	_StartTimer	;wreg free
 48703                           
 48704                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 48705                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48706  015368  0EFE               	movlw	-2
 48707  01536A  006F FF8F FFE6     	movff	plusw1,postinc1
 48708  015370  006F FF8F FFE6     	movff	plusw1,postinc1
 48709  015376  ECFD  F005         	call	_strlen	;wreg free
 48710  01537A  0060  F0AB  FFE6   	movff	btemp,postinc1
 48711  015380  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48712  015386  EC85  F00D         	call	_send_port_data_dma	;wreg free
 48713  01538A                     l17108:
 48714                           
 48715                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 48716  01538A  0E09               	movlw	9
 48717  01538C  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 48718  01538E  D001               	goto	l2366
 48719                           
 48720                           ;bsoc.c: 102:   log_update_wait = 0;
 48721  015390  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 48722  015392                     l2366:
 48723                           
 48724                           ;bsoc.c: 104:  C.update = 0;
 48725  015392  0E00               	movlw	0
 48726  015394  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 48727                           
 48728                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 48729  01539A  92BE               	bcf	190,1,c	;volatile
 48730                           
 48731                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 48732  01539C  0EFA               	movlw	250
 48733  01539E  26E1               	addwf	fsr1l,f,c
 48734  0153A0  0EFF               	movlw	255
 48735  0153A2  22E2               	addwfc	fsr1h,f,c
 48736  0153A4  0012               	return		;funcret
 48737  0153A6                     __end_of_calc_bsoc:
 48738                           	opt callstack 0
 48739                           
 48740 ;; *************** function _send_port_data_dma *****************
 48741 ;; Defined at:
 48742 ;;		line 397 in file "eadog.c"
 48743 ;; Parameters:    Size  Location     Type
 48744 ;;  dsize           2  [STACK] unsigned short 
 48745 ;; Auto vars:     Size  Location     Type
 48746 ;;		None
 48747 ;; Return value:  Size  Location     Type
 48748 ;;                  1  [STACK] void 
 48749 ;; Registers used:
 48750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 48751 ;; Tracked objects:
 48752 ;;		On entry : 0/0
 48753 ;;		On exit  : 3F/3B
 48754 ;;		Unchanged: 0/0
 48755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48760 ;;Total ram usage:        0 bytes
 48761 ;; Hardware stack levels used:    1
 48762 ;; Hardware stack levels required when called:    3
 48763 ;; This function calls:
 48764 ;;		Nothing
 48765 ;; This function is called by:
 48766 ;;		_calc_bsoc
 48767 ;; This function uses a reentrant model
 48768 ;;
 48769                           
 48770                           	psect	text201
 48771  001B0A                     __ptext201:
 48772                           	opt callstack 0
 48773  001B0A                     _send_port_data_dma:
 48774                           	opt callstack 11
 48775                           
 48776                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 48777                           ;stkvar	_dsize @ sp[(0)+-2]
 48778                           
 48779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48780                           ;incstack = 0
 48781  001B0A  0EFE               	movlw	-2
 48782  001B0C  04E3               	decf	plusw1,w,c
 48783  001B0E  0EFF               	movlw	-1
 48784  001B10  006F FF8C  F02A    	movff	plusw1,btemp
 48785  001B16  0E02               	movlw	2
 48786  001B18  5A2A               	subwfb	btemp^0,f,c
 48787  001B1A  A0D8               	btfss	status,0,c
 48788  001B1C  D00C               	goto	l12906
 48789                           
 48790                           ;eadog.c: 400:   dsize = 512;
 48791  001B1E  0E00               	movlw	0
 48792  001B20  6E34               	movwf	(btemp+10)^0,c
 48793  001B22  0E02               	movlw	2
 48794  001B24  6E35               	movwf	(btemp+11)^0,c
 48795                           
 48796                           ;stkvar	_dsize @ sp[(0)+-2]
 48797  001B26  0EFE               	movlw	-2
 48798  001B28  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48799  001B2E  0EFF               	movlw	-1
 48800  001B30  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48801  001B36                     l12906:
 48802                           
 48803                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 48804  001B36  013B               	movlb	59	; () banked
 48805  001B38  9FDC               	bcf	220,7,b	;volatile
 48806                           
 48807                           ; BSR set to: 59
 48808                           ;eadog.c: 403:  DMA2SSZ = dsize;
 48809                           ;stkvar	_dsize @ sp[(0)+-2]
 48810  001B3A  0EFE               	movlw	-2
 48811  001B3C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 48812  001B42  0EFF               	movlw	-1
 48813  001B44  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 48814                           
 48815                           ; BSR set to: 59
 48816                           ;eadog.c: 404:  DMA2DSZ = 1;
 48817  001B4A  0E00               	movlw	0
 48818  001B4C  6FCF               	movwf	207,b	;volatile
 48819  001B4E  0E01               	movlw	1
 48820  001B50  6FCE               	movwf	206,b	;volatile
 48821                           
 48822                           ; BSR set to: 59
 48823                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 48824  001B52  8FDC               	bsf	220,7,b	;volatile
 48825                           
 48826                           ; BSR set to: 59
 48827                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 48828  001B54  8DDC               	bsf	220,6,b	;volatile
 48829                           
 48830                           ; BSR set to: 59
 48831                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 48832  001B56  52E5               	movf	postdec1,f,c
 48833  001B58  52E5               	movf	postdec1,f,c
 48834  001B5A  0012               	return		;funcret
 48835  001B5C                     __end_of_send_port_data_dma:
 48836                           	opt callstack 0
 48837                           
 48838 ;; *************** function _port_data_dma_ptr *****************
 48839 ;; Defined at:
 48840 ;;		line 412 in file "eadog.c"
 48841 ;; Parameters:    Size  Location     Type
 48842 ;;		None
 48843 ;; Auto vars:     Size  Location     Type
 48844 ;;		None
 48845 ;; Return value:  Size  Location     Type
 48846 ;;                  2  [STACK] PTR unsigned char 
 48847 ;; Registers used:
 48848 ;;		wreg, status,2, status,0, btemp, btemp+1
 48849 ;; Tracked objects:
 48850 ;;		On entry : 3F/2
 48851 ;;		On exit  : 0/0
 48852 ;;		Unchanged: 0/0
 48853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48858 ;;Total ram usage:        0 bytes
 48859 ;; Hardware stack levels used:    1
 48860 ;; Hardware stack levels required when called:    3
 48861 ;; This function calls:
 48862 ;;		Nothing
 48863 ;; This function is called by:
 48864 ;;		_calc_bsoc
 48865 ;; This function uses a reentrant model
 48866 ;;
 48867                           
 48868                           	psect	text202
 48869  0029D4                     __ptext202:
 48870                           	opt callstack 0
 48871  0029D4                     _port_data_dma_ptr:
 48872                           	opt callstack 11
 48873                           
 48874                           ;eadog.c: 414:  return port_data;
 48875                           
 48876                           ; BSR set to: 59
 48877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48878                           ;incstack = 0
 48879  0029D4  0EFF               	movlw	low _port_data
 48880  0029D6  6E2A               	movwf	btemp^0,c
 48881  0029D8  0E06               	movlw	high _port_data
 48882  0029DA  6E2B               	movwf	(btemp+1)^0,c
 48883                           
 48884                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48885  0029DC  0012               	return		;funcret
 48886  0029DE                     __end_of_port_data_dma_ptr:
 48887                           	opt callstack 0
 48888                           
 48889 ;; *************** function ___asfladd *****************
 48890 ;; Defined at:
 48891 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 48892 ;; Parameters:    Size  Location     Type
 48893 ;;  f1p             2  [STACK] PTR 
 48894 ;;		 -> C(320), 
 48895 ;;  f2              4  [STACK] PTR 
 48896 ;; Auto vars:     Size  Location     Type
 48897 ;;		None
 48898 ;; Return value:  Size  Location     Type
 48899 ;;                  4  [STACK] PTR 
 48900 ;; Registers used:
 48901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 48902 ;; Tracked objects:
 48903 ;;		On entry : 0/0
 48904 ;;		On exit  : 0/0
 48905 ;;		Unchanged: 0/0
 48906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48911 ;;Total ram usage:        0 bytes
 48912 ;; Hardware stack levels used:    1
 48913 ;; Hardware stack levels required when called:    4
 48914 ;; This function calls:
 48915 ;;		___fladd
 48916 ;; This function is called by:
 48917 ;;		_calc_bsoc
 48918 ;; This function uses a reentrant model
 48919 ;;
 48920                           
 48921                           	psect	text203
 48922  0013AE                     __ptext203:
 48923                           	opt callstack 0
 48924  0013AE                     ___asfladd:
 48925                           	opt callstack 10
 48926                           
 48927                           ;	Return value of ___asfladd is never used
 48928                           ;stkvar	_f2 @ sp[(0)+-6]
 48929                           
 48930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48931                           ;incstack = 0
 48932  0013AE  0EFA               	movlw	-6
 48933  0013B0  006F FF8F FFE6     	movff	plusw1,postinc1
 48934  0013B6  006F FF8F FFE6     	movff	plusw1,postinc1
 48935  0013BC  006F FF8F FFE6     	movff	plusw1,postinc1
 48936  0013C2  006F FF8F FFE6     	movff	plusw1,postinc1
 48937                           
 48938                           ;stkvar	_f1p @ sp[(-4)+-2]
 48939  0013C8  0EFA               	movlw	-6
 48940  0013CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 48941  0013D0  0EFB               	movlw	-5
 48942  0013D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 48943  0013D8  006F FF7B FFE6     	movff	postinc2,postinc1
 48944  0013DE  006F FF7B FFE6     	movff	postinc2,postinc1
 48945  0013E4  006F FF7B FFE6     	movff	postinc2,postinc1
 48946  0013EA  006F FF7B FFE6     	movff	postinc2,postinc1
 48947  0013F0  ECF2  F0B6         	call	___fladd	;wreg free
 48948                           
 48949                           ;stkvar	_f1p @ sp[(0)+-2]
 48950  0013F4  0EFE               	movlw	-2
 48951  0013F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 48952  0013FC  0EFF               	movlw	-1
 48953  0013FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 48954  001404  0060  F0AB  FFDE   	movff	btemp,postinc2
 48955  00140A  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 48956  001410  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 48957  001416  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 48958                           
 48959                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 48960  00141C  0EFA               	movlw	250
 48961  00141E  26E1               	addwf	fsr1l,f,c
 48962  001420  0EFF               	movlw	255
 48963  001422  22E2               	addwfc	fsr1h,f,c
 48964  001424  0012               	return		;funcret
 48965  001426                     __end_of___asfladd:
 48966                           	opt callstack 0
 48967                           
 48968 ;; *************** function _INT0_ISR *****************
 48969 ;; Defined at:
 48970 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 48971 ;; Parameters:    Size  Location     Type
 48972 ;;		None
 48973 ;; Auto vars:     Size  Location     Type
 48974 ;;		None
 48975 ;; Return value:  Size  Location     Type
 48976 ;;                  1    wreg      void 
 48977 ;; Registers used:
 48978 ;;		wreg, status,2, status,0, pclath, tosl
 48979 ;; Tracked objects:
 48980 ;;		On entry : 0/0
 48981 ;;		On exit  : 0/0
 48982 ;;		Unchanged: 0/0
 48983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48988 ;;Total ram usage:        0 bytes
 48989 ;; Hardware stack levels used:    1
 48990 ;; Hardware stack levels required when called:    2
 48991 ;; This function calls:
 48992 ;;		_INT0_CallBack
 48993 ;; This function is called by:
 48994 ;;		Interrupt level 2
 48995 ;; This function uses a non-reentrant model
 48996 ;;
 48997                           
 48998                           	psect	text204
 48999  0029AC                     __ptext204:
 49000                           	opt callstack 0
 49001  0029AC                     _INT0_ISR:
 49002                           	opt callstack 3
 49003                           
 49004                           ;incstack = 0
 49005  0029AC  EE14  F32C         	lfsr	1,___inthi_sp
 49006                           
 49007                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 49008  0029B0  0139               	movlb	57	; () banked
 49009  0029B2  91A1               	bcf	161,0,b	;volatile
 49010                           
 49011                           ; BSR set to: 57
 49012                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 49013  0029B4  EC64  F013         	call	_INT0_CallBack	;wreg free
 49014  0029B8  0011               	retfie		f
 49015  0029BA                     __end_of_INT0_ISR:
 49016                           	opt callstack 0
 49017                           
 49018 ;; *************** function _INT0_CallBack *****************
 49019 ;; Defined at:
 49020 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 49021 ;; Parameters:    Size  Location     Type
 49022 ;;		None
 49023 ;; Auto vars:     Size  Location     Type
 49024 ;;		None
 49025 ;; Return value:  Size  Location     Type
 49026 ;;                  1  [STACK] void 
 49027 ;; Registers used:
 49028 ;;		wreg, status,2, status,0, pclath, tosl
 49029 ;; Tracked objects:
 49030 ;;		On entry : 3F/39
 49031 ;;		On exit  : 0/0
 49032 ;;		Unchanged: 0/0
 49033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49038 ;;Total ram usage:        0 bytes
 49039 ;; Hardware stack levels used:    1
 49040 ;; Hardware stack levels required when called:    1
 49041 ;; This function calls:
 49042 ;;		Absolute function
 49043 ;;		_INT0_DefaultInterruptHandler
 49044 ;; This function is called by:
 49045 ;;		_INT0_ISR
 49046 ;; This function uses a reentrant model
 49047 ;;
 49048                           
 49049                           	psect	text205
 49050  0026C8                     __ptext205:
 49051                           	opt callstack 0
 49052  0026C8                     _INT0_CallBack:
 49053                           	opt callstack 3
 49054                           
 49055                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 49056                           
 49057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49058                           ;incstack = 0
 49059  0026C8  0100               	movlb	0	; () banked
 49060  0026CA  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49061  0026CC  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49062  0026CE  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49063  0026D0  B4D8               	btfsc	status,2,c
 49064  0026D2  0012               	return	
 49065                           
 49066                           ; BSR set to: 0
 49067                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 49068  0026D4  D801               	call	u1311_48
 49069  0026D6  0012               	return	
 49070  0026D8                     u1311_48:
 49071  0026D8  0005               	push	
 49072  0026DA  6EFA               	movwf	pclath,c
 49073  0026DC  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49074  0026DE  6EFD               	movwf	tosl,c
 49075  0026E0  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49076  0026E2  6EFE               	movwf	tosh,c
 49077  0026E4  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49078  0026E6  6EFF               	movwf	tosu,c
 49079  0026E8  50FA               	movf	pclath,w,c
 49080  0026EA  0012               	return		;indir
 49081  0026EC                     __end_of_INT0_CallBack:
 49082                           	opt callstack 0
 49083                           
 49084 ;; *************** function _INT0_DefaultInterruptHandler *****************
 49085 ;; Defined at:
 49086 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 49087 ;; Parameters:    Size  Location     Type
 49088 ;;		None
 49089 ;; Auto vars:     Size  Location     Type
 49090 ;;		None
 49091 ;; Return value:  Size  Location     Type
 49092 ;;                  1  [STACK] void 
 49093 ;; Registers used:
 49094 ;;		None
 49095 ;; Tracked objects:
 49096 ;;		On entry : 3F/0
 49097 ;;		On exit  : 0/0
 49098 ;;		Unchanged: 0/0
 49099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49104 ;;Total ram usage:        0 bytes
 49105 ;; Hardware stack levels used:    1
 49106 ;; This function calls:
 49107 ;;		Nothing
 49108 ;; This function is called by:
 49109 ;;		_EXT_INT_Initialize
 49110 ;;		_INT0_CallBack
 49111 ;; This function uses a reentrant model
 49112 ;;
 49113                           
 49114                           	psect	text206
 49115  002A5A                     __ptext206:
 49116                           	opt callstack 0
 49117  002A5A                     _INT0_DefaultInterruptHandler:
 49118                           	opt callstack 3
 49119                           
 49120                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49121                           
 49122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49123                           ;incstack = 0
 49124  002A5A  0012               	return		;funcret
 49125  002A5C                     __end_of_INT0_DefaultInterruptHandler:
 49126                           	opt callstack 0
 49127                           
 49128 ;; *************** function _Default_ISR *****************
 49129 ;; Defined at:
 49130 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 49131 ;; Parameters:    Size  Location     Type
 49132 ;;		None
 49133 ;; Auto vars:     Size  Location     Type
 49134 ;;		None
 49135 ;; Return value:  Size  Location     Type
 49136 ;;                  1    wreg      void 
 49137 ;; Registers used:
 49138 ;;		None
 49139 ;; Tracked objects:
 49140 ;;		On entry : 0/0
 49141 ;;		On exit  : 0/0
 49142 ;;		Unchanged: 0/0
 49143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49148 ;;Total ram usage:        0 bytes
 49149 ;; Hardware stack levels used:    1
 49150 ;; This function calls:
 49151 ;;		Nothing
 49152 ;; This function is called by:
 49153 ;;		Interrupt level 2
 49154 ;; This function uses a non-reentrant model
 49155 ;;
 49156                           
 49157                           	psect	text207
 49158  002A50                     __ptext207:
 49159                           	opt callstack 0
 49160  002A50                     _Default_ISR:
 49161                           	opt callstack 5
 49162                           
 49163                           ;incstack = 0
 49164  002A50  EE14  F32C         	lfsr	1,___inthi_sp
 49165  002A54  0011               	retfie		f
 49166  002A56                     __end_of_Default_ISR:
 49167                           	opt callstack 0
 49168                           
 49169 ;; *************** function _ADCC_ISR *****************
 49170 ;; Defined at:
 49171 ;;		line 314 in file "mcc_generated_files/adcc.c"
 49172 ;; Parameters:    Size  Location     Type
 49173 ;;		None
 49174 ;; Auto vars:     Size  Location     Type
 49175 ;;		None
 49176 ;; Return value:  Size  Location     Type
 49177 ;;                  1    wreg      void 
 49178 ;; Registers used:
 49179 ;;		wreg, status,2, status,0, pclath, tosl
 49180 ;; Tracked objects:
 49181 ;;		On entry : 0/0
 49182 ;;		On exit  : 0/0
 49183 ;;		Unchanged: 0/0
 49184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49189 ;;Total ram usage:        0 bytes
 49190 ;; Hardware stack levels used:    1
 49191 ;; Hardware stack levels required when called:    1
 49192 ;; This function calls:
 49193 ;;		Absolute function
 49194 ;;		_ADCC_DefaultInterruptHandler
 49195 ;;		_adc_int_handler
 49196 ;; This function is called by:
 49197 ;;		Interrupt level 2
 49198 ;; This function uses a non-reentrant model
 49199 ;;
 49200                           
 49201                           	psect	text208
 49202  00235C                     __ptext208:
 49203                           	opt callstack 0
 49204  00235C                     _ADCC_ISR:
 49205                           	opt callstack 4
 49206                           
 49207                           ;incstack = 0
 49208  00235C  EE14  F32C         	lfsr	1,___inthi_sp
 49209                           
 49210                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 49211  002360  0139               	movlb	57	; () banked
 49212  002362  95A1               	bcf	161,2,b	;volatile
 49213                           
 49214                           ; BSR set to: 57
 49215                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 49216  002364  0100               	movlb	0	; () banked
 49217  002366  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49218  002368  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49219  00236A  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49220  00236C  B4D8               	btfsc	status,2,c
 49221  00236E  0011               	retfie		f
 49222                           
 49223                           ; BSR set to: 0
 49224                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 49225  002370  D801               	call	i2u1378_48
 49226  002372  0011               	retfie		f
 49227  002374                     i2u1378_48:
 49228  002374  0005               	push	
 49229  002376  6EFA               	movwf	pclath,c
 49230  002378  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49231  00237A  6EFD               	movwf	tosl,c
 49232  00237C  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49233  00237E  6EFE               	movwf	tosh,c
 49234  002380  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49235  002382  6EFF               	movwf	tosu,c
 49236  002384  50FA               	movf	pclath,w,c
 49237  002386  0012               	return		;indir
 49238  002388                     __end_of_ADCC_ISR:
 49239                           	opt callstack 0
 49240                           
 49241 ;; *************** function _adc_int_t_handler *****************
 49242 ;; Defined at:
 49243 ;;		line 183 in file "daq.c"
 49244 ;; Parameters:    Size  Location     Type
 49245 ;;		None
 49246 ;; Auto vars:     Size  Location     Type
 49247 ;;		None
 49248 ;; Return value:  Size  Location     Type
 49249 ;;                  1  [STACK] void 
 49250 ;; Registers used:
 49251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 49252 ;; Tracked objects:
 49253 ;;		On entry : 3F/0
 49254 ;;		On exit  : 0/0
 49255 ;;		Unchanged: 0/0
 49256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49261 ;;Total ram usage:        0 bytes
 49262 ;; Hardware stack levels used:    1
 49263 ;; Hardware stack levels required when called:    1
 49264 ;; This function calls:
 49265 ;;		_ADCC_DischargeSampleCapacitor
 49266 ;;		_ADCC_StartConversion
 49267 ;; This function is called by:
 49268 ;;		_start_adc_scan
 49269 ;;		_ADCC_ThresholdISR
 49270 ;; This function uses a reentrant model
 49271 ;;
 49272                           
 49273                           	psect	text209
 49274  01FF7E                     __ptext209:
 49275                           	opt callstack 0
 49276  01FF7E                     _adc_int_t_handler:
 49277                           	opt callstack 3
 49278                           
 49279                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 49280                           
 49281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49282                           ;incstack = 0
 49283  01FF7E  013E               	movlb	62	; () banked
 49284  01FF80  51E6               	movf	230,w,b	;volatile
 49285  01FF82  006F FB9C  F02A    	movff	16103,btemp	;volatile
 49286  01FF88  6A2B               	clrf	(btemp+1)^0,c
 49287  01FF8A  0060  F0A8  F02B   	movff	btemp,btemp+1
 49288  01FF90  6A2A               	clrf	btemp^0,c
 49289  01FF92  262A               	addwf	btemp^0,f,c
 49290  01FF94  0E00               	movlw	0
 49291  01FF96  222B               	addwfc	(btemp+1)^0,f,c
 49292  01FF98  0101               	movlb	1	; () banked
 49293  01FF9A  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49294  01FF9C  0D02               	mullw	2
 49295  01FF9E  0E00               	movlw	low _R
 49296  01FFA0  24F3               	addwf	243,w,c
 49297  01FFA2  6ED9               	movwf	fsr2l,c
 49298  01FFA4  0E01               	movlw	high _R
 49299  01FFA6  20F4               	addwfc	prodh,w,c
 49300  01FFA8  6EDA               	movwf	fsr2h,c
 49301  01FFAA  0060  F0AB  FFDE   	movff	btemp,postinc2
 49302  01FFB0  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 49303  01FFB6                     l14614:
 49304                           
 49305                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 49306  01FFB6  0101               	movlb	1	; () banked
 49307  01FFB8  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 49308  01FFBA  0E0D               	movlw	13
 49309  01FFBC  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 49310  01FFBE  D003               	goto	l14620
 49311                           
 49312                           ; BSR set to: 1
 49313                           ;daq.c: 191:    R.done = 1;
 49314  01FFC0  0E01               	movlw	1
 49315  01FFC2  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 49316  01FFC4  0012               	return	
 49317  01FFC6                     l14620:
 49318                           
 49319                           ; BSR set to: 1
 49320                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 49321  01FFC6  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 49322  01FFCC  EE20  F133         	lfsr	2,_R+51	;volatile
 49323  01FFD0  006F FF78  F032    	movff	postinc2,btemp+8
 49324  01FFD6  006F FF74  F033    	movff	postdec2,btemp+9
 49325  01FFDC  2A35               	incf	(btemp+11)^0,f,c
 49326  01FFDE  D003               	goto	u1375_44
 49327  01FFE0                     u1375_45:
 49328  01FFE0  90D8               	bcf	status,0,c
 49329  01FFE2  3233               	rrcf	(btemp+9)^0,f,c
 49330  01FFE4  3232               	rrcf	(btemp+8)^0,f,c
 49331  01FFE6                     u1375_44:
 49332  01FFE6  2E35               	decfsz	(btemp+11)^0,f,c
 49333  01FFE8  D7FB               	goto	u1375_45
 49334  01FFEA  A032               	btfss	(btemp+8)^0,0,c
 49335  01FFEC  D7E4               	goto	l14614
 49336                           
 49337                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 49338  01FFEE  EC05  F015         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 49339                           
 49340                           ; BSR set to: 62
 49341                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 49342  01FFF2  0101               	movlb	1	; () banked
 49343  01FFF4  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49344  01FFF6  0B0F               	andlw	15
 49345  01FFF8  6EE6               	movwf	postinc1,c
 49346  01FFFA  EC88  F014         	call	_ADCC_StartConversion	;wreg free
 49347                           
 49348                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49349  01FFFE  0012               	return		;funcret
 49350  020000                     __end_of_adc_int_t_handler:
 49351                           	opt callstack 0
 49352                           
 49353 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 49354 ;; Defined at:
 49355 ;;		line 339 in file "mcc_generated_files/adcc.c"
 49356 ;; Parameters:    Size  Location     Type
 49357 ;;		None
 49358 ;; Auto vars:     Size  Location     Type
 49359 ;;		None
 49360 ;; Return value:  Size  Location     Type
 49361 ;;                  1  [STACK] void 
 49362 ;; Registers used:
 49363 ;;		None
 49364 ;; Tracked objects:
 49365 ;;		On entry : 3F/0
 49366 ;;		On exit  : 0/0
 49367 ;;		Unchanged: 0/0
 49368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49373 ;;Total ram usage:        0 bytes
 49374 ;; Hardware stack levels used:    1
 49375 ;; This function calls:
 49376 ;;		Nothing
 49377 ;; This function is called by:
 49378 ;;		_ADCC_Initialize
 49379 ;;		_ADCC_ISR
 49380 ;;		_ADCC_ThresholdISR
 49381 ;; This function uses a reentrant model
 49382 ;;
 49383                           
 49384                           	psect	text210
 49385  002A5C                     __ptext210:
 49386                           	opt callstack 0
 49387  002A5C                     _ADCC_DefaultInterruptHandler:
 49388                           	opt callstack 4
 49389                           
 49390                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49391                           
 49392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49393                           ;incstack = 0
 49394  002A5C  0012               	return		;funcret
 49395  002A5E                     __end_of_ADCC_DefaultInterruptHandler:
 49396                           	opt callstack 0
 49397                           
 49398 ;; *************** function _adc_int_handler *****************
 49399 ;; Defined at:
 49400 ;;		line 173 in file "daq.c"
 49401 ;; Parameters:    Size  Location     Type
 49402 ;;		None
 49403 ;; Auto vars:     Size  Location     Type
 49404 ;;		None
 49405 ;; Return value:  Size  Location     Type
 49406 ;;                  1  [STACK] void 
 49407 ;; Registers used:
 49408 ;;		None
 49409 ;; Tracked objects:
 49410 ;;		On entry : 3F/0
 49411 ;;		On exit  : 0/0
 49412 ;;		Unchanged: 0/0
 49413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49418 ;;Total ram usage:        0 bytes
 49419 ;; Hardware stack levels used:    1
 49420 ;; This function calls:
 49421 ;;		Nothing
 49422 ;; This function is called by:
 49423 ;;		_start_adc_scan
 49424 ;;		_ADCC_ISR
 49425 ;; This function uses a reentrant model
 49426 ;;
 49427                           
 49428                           	psect	text211
 49429  002A5E                     __ptext211:
 49430                           	opt callstack 0
 49431  002A5E                     _adc_int_handler:
 49432                           	opt callstack 4
 49433                           
 49434                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 49435                           
 49436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49437                           ;incstack = 0
 49438  002A5E  0012               	return		;funcret
 49439  002A60                     __end_of_adc_int_handler:
 49440                           	opt callstack 0
 49441                           
 49442 ;; *************** function _ADCC_ThresholdISR *****************
 49443 ;; Defined at:
 49444 ;;		line 327 in file "mcc_generated_files/adcc.c"
 49445 ;; Parameters:    Size  Location     Type
 49446 ;;		None
 49447 ;; Auto vars:     Size  Location     Type
 49448 ;;		None
 49449 ;; Return value:  Size  Location     Type
 49450 ;;                  1    wreg      void 
 49451 ;; Registers used:
 49452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 49453 ;; Tracked objects:
 49454 ;;		On entry : 0/0
 49455 ;;		On exit  : 0/0
 49456 ;;		Unchanged: 0/0
 49457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49460 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49461 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49462 ;;Total ram usage:        5 bytes
 49463 ;; Hardware stack levels used:    1
 49464 ;; Hardware stack levels required when called:    2
 49465 ;; This function calls:
 49466 ;;		Absolute function
 49467 ;;		_ADCC_DefaultInterruptHandler
 49468 ;;		_adc_int_t_handler
 49469 ;; This function is called by:
 49470 ;;		Interrupt level 2
 49471 ;; This function uses a non-reentrant model
 49472 ;;
 49473                           
 49474                           	psect	text212
 49475  00156C                     __ptext212:
 49476                           	opt callstack 0
 49477  00156C                     _ADCC_ThresholdISR:
 49478                           	opt callstack 3
 49479                           
 49480                           ;incstack = 0
 49481  00156C  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 49482  001572  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 49483  001578  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 49484  00157E  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 49485  001584  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 49486  00158A  EE14  F32C         	lfsr	1,___inthi_sp
 49487                           
 49488                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 49489  00158E  0139               	movlb	57	; () banked
 49490  001590  97A1               	bcf	161,3,b	;volatile
 49491                           
 49492                           ; BSR set to: 57
 49493                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 49494  001592  0100               	movlb	0	; () banked
 49495  001594  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49496  001596  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49497  001598  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49498  00159A  B4D8               	btfsc	status,2,c
 49499  00159C  D00C               	goto	i2u1380_49
 49500                           
 49501                           ; BSR set to: 0
 49502                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 49503  00159E  D801               	call	i2u1380_48
 49504  0015A0  D00A               	goto	i2u1380_49
 49505  0015A2                     i2u1380_48:
 49506  0015A2  0005               	push	
 49507  0015A4  6EFA               	movwf	pclath,c
 49508  0015A6  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49509  0015A8  6EFD               	movwf	tosl,c
 49510  0015AA  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49511  0015AC  6EFE               	movwf	tosh,c
 49512  0015AE  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49513  0015B0  6EFF               	movwf	tosu,c
 49514  0015B2  50FA               	movf	pclath,w,c
 49515  0015B4  0012               	return		;indir
 49516  0015B6                     i2u1380_49:
 49517  0015B6  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 49518  0015BC  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 49519  0015C2  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 49520  0015C8  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 49521  0015CE  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 49522  0015D4  0011               	retfie		f
 49523  0015D6                     __end_of_ADCC_ThresholdISR:
 49524                           	opt callstack 0
 49525                           
 49526 ;; *************** function _UART1_rx_vect_isr *****************
 49527 ;; Defined at:
 49528 ;;		line 181 in file "mcc_generated_files/uart1.c"
 49529 ;; Parameters:    Size  Location     Type
 49530 ;;		None
 49531 ;; Auto vars:     Size  Location     Type
 49532 ;;		None
 49533 ;; Return value:  Size  Location     Type
 49534 ;;                  1    wreg      void 
 49535 ;; Registers used:
 49536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49537 ;; Tracked objects:
 49538 ;;		On entry : 0/0
 49539 ;;		On exit  : 0/0
 49540 ;;		Unchanged: 0/0
 49541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49546 ;;Total ram usage:        0 bytes
 49547 ;; Hardware stack levels used:    1
 49548 ;; Hardware stack levels required when called:    1
 49549 ;; This function calls:
 49550 ;;		Absolute function
 49551 ;;		_UART1_Receive_ISR
 49552 ;; This function is called by:
 49553 ;;		Interrupt level 2
 49554 ;; This function uses a non-reentrant model
 49555 ;;
 49556                           
 49557                           	psect	text213
 49558  0025C0                     __ptext213:
 49559                           	opt callstack 0
 49560  0025C0                     _UART1_rx_vect_isr:
 49561                           	opt callstack 4
 49562                           
 49563                           ;incstack = 0
 49564  0025C0  EE14  F32C         	lfsr	1,___inthi_sp
 49565                           
 49566                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 49567  0025C4  0100               	movlb	0	; () banked
 49568  0025C6  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49569  0025C8  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49570  0025CA  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49571  0025CC  B4D8               	btfsc	status,2,c
 49572  0025CE  0011               	retfie		f
 49573                           
 49574                           ; BSR set to: 0
 49575                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 49576  0025D0  D801               	call	i2u1382_48
 49577  0025D2  0011               	retfie		f
 49578  0025D4                     i2u1382_48:
 49579  0025D4  0005               	push	
 49580  0025D6  6EFA               	movwf	pclath,c
 49581  0025D8  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49582  0025DA  6EFD               	movwf	tosl,c
 49583  0025DC  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49584  0025DE  6EFE               	movwf	tosh,c
 49585  0025E0  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49586  0025E2  6EFF               	movwf	tosu,c
 49587  0025E4  50FA               	movf	pclath,w,c
 49588  0025E6  0012               	return		;indir
 49589  0025E8                     __end_of_UART1_rx_vect_isr:
 49590                           	opt callstack 0
 49591                           
 49592 ;; *************** function _UART1_Receive_ISR *****************
 49593 ;; Defined at:
 49594 ;;		line 192 in file "mcc_generated_files/uart1.c"
 49595 ;; Parameters:    Size  Location     Type
 49596 ;;		None
 49597 ;; Auto vars:     Size  Location     Type
 49598 ;;		None
 49599 ;; Return value:  Size  Location     Type
 49600 ;;                  1  [STACK] void 
 49601 ;; Registers used:
 49602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49603 ;; Tracked objects:
 49604 ;;		On entry : 3F/0
 49605 ;;		On exit  : 3F/0
 49606 ;;		Unchanged: 0/0
 49607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49612 ;;Total ram usage:        0 bytes
 49613 ;; Hardware stack levels used:    1
 49614 ;; This function calls:
 49615 ;;		Nothing
 49616 ;; This function is called by:
 49617 ;;		_UART1_Initialize
 49618 ;;		_UART1_rx_vect_isr
 49619 ;; This function uses a reentrant model
 49620 ;;
 49621                           
 49622                           	psect	text214
 49623  002754                     __ptext214:
 49624                           	opt callstack 0
 49625  002754                     _UART1_Receive_ISR:
 49626                           	opt callstack 4
 49627                           
 49628                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 49629                           
 49630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49631                           ;incstack = 0
 49632  002754  0ED6               	movlw	low _uart1RxBuffer
 49633  002756  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 49634  002758  6ED9               	movwf	fsr2l,c
 49635  00275A  6ADA               	clrf	fsr2h,c
 49636  00275C  0E02               	movlw	high _uart1RxBuffer
 49637  00275E  22DA               	addwfc	fsr2h,f,c
 49638  002760  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 49639  002766  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 49640                           
 49641                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 49642  002768  0E07               	movlw	7
 49643  00276A  6457               	cpfsgt	_uart1RxHead^0,c
 49644  00276C  D001               	goto	l13922
 49645                           
 49646                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 49647  00276E  6A57               	clrf	_uart1RxHead^0,c	;volatile
 49648  002770                     l13922:
 49649                           
 49650                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 49651  002770  0100               	movlb	0	; () banked
 49652  002772  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 49653                           
 49654                           ; BSR set to: 0
 49655                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49656  002774  0012               	return		;funcret
 49657  002776                     __end_of_UART1_Receive_ISR:
 49658                           	opt callstack 0
 49659                           
 49660 ;; *************** function _UART2_tx_vect_isr *****************
 49661 ;; Defined at:
 49662 ;;		line 195 in file "mcc_generated_files/uart2.c"
 49663 ;; Parameters:    Size  Location     Type
 49664 ;;		None
 49665 ;; Auto vars:     Size  Location     Type
 49666 ;;		None
 49667 ;; Return value:  Size  Location     Type
 49668 ;;                  1    wreg      void 
 49669 ;; Registers used:
 49670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49671 ;; Tracked objects:
 49672 ;;		On entry : 0/0
 49673 ;;		On exit  : 0/0
 49674 ;;		Unchanged: 0/0
 49675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49680 ;;Total ram usage:        0 bytes
 49681 ;; Hardware stack levels used:    1
 49682 ;; Hardware stack levels required when called:    1
 49683 ;; This function calls:
 49684 ;;		Absolute function
 49685 ;;		_UART2_Transmit_ISR
 49686 ;; This function is called by:
 49687 ;;		Interrupt level 2
 49688 ;; This function uses a non-reentrant model
 49689 ;;
 49690                           
 49691                           	psect	text215
 49692  0025E8                     __ptext215:
 49693                           	opt callstack 0
 49694  0025E8                     _UART2_tx_vect_isr:
 49695                           	opt callstack 4
 49696                           
 49697                           ; BSR set to: 0
 49698                           ;incstack = 0
 49699  0025E8  EE14  F32C         	lfsr	1,___inthi_sp
 49700                           
 49701                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 49702  0025EC  0100               	movlb	0	; () banked
 49703  0025EE  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49704  0025F0  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49705  0025F2  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49706  0025F4  B4D8               	btfsc	status,2,c
 49707  0025F6  0011               	retfie		f
 49708                           
 49709                           ; BSR set to: 0
 49710                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 49711  0025F8  D801               	call	i2u1384_48
 49712  0025FA  0011               	retfie		f
 49713  0025FC                     i2u1384_48:
 49714  0025FC  0005               	push	
 49715  0025FE  6EFA               	movwf	pclath,c
 49716  002600  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49717  002602  6EFD               	movwf	tosl,c
 49718  002604  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49719  002606  6EFE               	movwf	tosh,c
 49720  002608  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49721  00260A  6EFF               	movwf	tosu,c
 49722  00260C  50FA               	movf	pclath,w,c
 49723  00260E  0012               	return		;indir
 49724  002610                     __end_of_UART2_tx_vect_isr:
 49725                           	opt callstack 0
 49726                           
 49727 ;; *************** function _UART2_Transmit_ISR *****************
 49728 ;; Defined at:
 49729 ;;		line 213 in file "mcc_generated_files/uart2.c"
 49730 ;; Parameters:    Size  Location     Type
 49731 ;;		None
 49732 ;; Auto vars:     Size  Location     Type
 49733 ;;		None
 49734 ;; Return value:  Size  Location     Type
 49735 ;;                  1  [STACK] void 
 49736 ;; Registers used:
 49737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49738 ;; Tracked objects:
 49739 ;;		On entry : 3F/0
 49740 ;;		On exit  : 3B/39
 49741 ;;		Unchanged: 0/0
 49742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49747 ;;Total ram usage:        0 bytes
 49748 ;; Hardware stack levels used:    1
 49749 ;; This function calls:
 49750 ;;		Nothing
 49751 ;; This function is called by:
 49752 ;;		_UART2_Initialize
 49753 ;;		_UART2_tx_vect_isr
 49754 ;; This function uses a reentrant model
 49755 ;;
 49756                           
 49757                           	psect	text216
 49758  002388                     __ptext216:
 49759                           	opt callstack 0
 49760  002388                     _UART2_Transmit_ISR:
 49761                           	opt callstack 4
 49762                           
 49763                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 49764                           
 49765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49766                           ;incstack = 0
 49767  002388  0E40               	movlw	64
 49768  00238A  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 49769  00238C  D010               	goto	l675
 49770                           
 49771                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 49772  00238E  0E00               	movlw	low _uart2TxBuffer
 49773  002390  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 49774  002392  6ED9               	movwf	fsr2l,c
 49775  002394  6ADA               	clrf	fsr2h,c
 49776  002396  0E04               	movlw	high _uart2TxBuffer
 49777  002398  22DA               	addwfc	fsr2h,f,c
 49778  00239A  50DF               	movf	indf2,w,c
 49779  00239C  013D               	movlb	61	; () banked
 49780  00239E  6FD2               	movwf	210,b	;volatile
 49781                           
 49782                           ; BSR set to: 61
 49783  0023A0  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 49784                           
 49785                           ; BSR set to: 61
 49786                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 49787  0023A2  0E3F               	movlw	63
 49788  0023A4  6456               	cpfsgt	_uart2TxTail^0,c
 49789  0023A6  D001               	goto	l13934
 49790                           
 49791                           ; BSR set to: 61
 49792                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 49793  0023A8  6A56               	clrf	_uart2TxTail^0,c	;volatile
 49794  0023AA                     l13934:
 49795                           
 49796                           ; BSR set to: 61
 49797                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 49798  0023AA  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 49799                           
 49800                           ;mcc_generated_files/uart2.c: 224:     }
 49801  0023AC  0012               	return	
 49802  0023AE                     l675:
 49803                           
 49804                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 49805  0023AE  0139               	movlb	57	; () banked
 49806  0023B0  9796               	bcf	150,3,b	;volatile
 49807                           
 49808                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 49809  0023B2  0012               	return		;funcret
 49810  0023B4                     __end_of_UART2_Transmit_ISR:
 49811                           	opt callstack 0
 49812                           
 49813 ;; *************** function _UART2_rx_vect_isr *****************
 49814 ;; Defined at:
 49815 ;;		line 203 in file "mcc_generated_files/uart2.c"
 49816 ;; Parameters:    Size  Location     Type
 49817 ;;		None
 49818 ;; Auto vars:     Size  Location     Type
 49819 ;;		None
 49820 ;; Return value:  Size  Location     Type
 49821 ;;                  1    wreg      void 
 49822 ;; Registers used:
 49823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49824 ;; Tracked objects:
 49825 ;;		On entry : 0/0
 49826 ;;		On exit  : 0/0
 49827 ;;		Unchanged: 0/0
 49828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49833 ;;Total ram usage:        0 bytes
 49834 ;; Hardware stack levels used:    1
 49835 ;; Hardware stack levels required when called:    1
 49836 ;; This function calls:
 49837 ;;		Absolute function
 49838 ;;		_UART2_Receive_ISR
 49839 ;; This function is called by:
 49840 ;;		Interrupt level 2
 49841 ;; This function uses a non-reentrant model
 49842 ;;
 49843                           
 49844                           	psect	text217
 49845  002610                     __ptext217:
 49846                           	opt callstack 0
 49847  002610                     _UART2_rx_vect_isr:
 49848                           	opt callstack 4
 49849                           
 49850                           ;incstack = 0
 49851  002610  EE14  F32C         	lfsr	1,___inthi_sp
 49852                           
 49853                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 49854  002614  0100               	movlb	0	; () banked
 49855  002616  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49856  002618  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49857  00261A  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49858  00261C  B4D8               	btfsc	status,2,c
 49859  00261E  0011               	retfie		f
 49860                           
 49861                           ; BSR set to: 0
 49862                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 49863  002620  D801               	call	i2u1386_48
 49864  002622  0011               	retfie		f
 49865  002624                     i2u1386_48:
 49866  002624  0005               	push	
 49867  002626  6EFA               	movwf	pclath,c
 49868  002628  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49869  00262A  6EFD               	movwf	tosl,c
 49870  00262C  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49871  00262E  6EFE               	movwf	tosh,c
 49872  002630  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49873  002632  6EFF               	movwf	tosu,c
 49874  002634  50FA               	movf	pclath,w,c
 49875  002636  0012               	return		;indir
 49876  002638                     __end_of_UART2_rx_vect_isr:
 49877                           	opt callstack 0
 49878                           
 49879 ;; *************** function _UART2_Receive_ISR *****************
 49880 ;; Defined at:
 49881 ;;		line 233 in file "mcc_generated_files/uart2.c"
 49882 ;; Parameters:    Size  Location     Type
 49883 ;;		None
 49884 ;; Auto vars:     Size  Location     Type
 49885 ;;		None
 49886 ;; Return value:  Size  Location     Type
 49887 ;;                  1  [STACK] void 
 49888 ;; Registers used:
 49889 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49890 ;; Tracked objects:
 49891 ;;		On entry : 3F/0
 49892 ;;		On exit  : 3F/0
 49893 ;;		Unchanged: 0/0
 49894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49899 ;;Total ram usage:        0 bytes
 49900 ;; Hardware stack levels used:    1
 49901 ;; This function calls:
 49902 ;;		Nothing
 49903 ;; This function is called by:
 49904 ;;		_UART2_Initialize
 49905 ;;		_UART2_rx_vect_isr
 49906 ;; This function uses a reentrant model
 49907 ;;
 49908                           
 49909                           	psect	text218
 49910  002796                     __ptext218:
 49911                           	opt callstack 0
 49912  002796                     _UART2_Receive_ISR:
 49913                           	opt callstack 4
 49914                           
 49915                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 49916                           
 49917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49918                           ;incstack = 0
 49919  002796  0E00               	movlw	low _uart2RxBuffer
 49920  002798  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 49921  00279A  6ED9               	movwf	fsr2l,c
 49922  00279C  6ADA               	clrf	fsr2h,c
 49923  00279E  0E06               	movlw	high _uart2RxBuffer
 49924  0027A0  22DA               	addwfc	fsr2h,f,c
 49925  0027A2  006F F743 FFDF     	movff	15824,indf2	;volatile
 49926  0027A8  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 49927                           
 49928                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 49929  0027AA  2854               	incf	_uart2RxHead^0,w,c
 49930  0027AC  B4D8               	btfsc	status,2,c
 49931                           
 49932                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 49933  0027AE  6A54               	clrf	_uart2RxHead^0,c	;volatile
 49934                           
 49935                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 49936  0027B0  0100               	movlb	0	; () banked
 49937  0027B2  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 49938                           
 49939                           ; BSR set to: 0
 49940                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49941  0027B4  0012               	return		;funcret
 49942  0027B6                     __end_of_UART2_Receive_ISR:
 49943                           	opt callstack 0
 49944                           
 49945 ;; *************** function _TMR6_ISR *****************
 49946 ;; Defined at:
 49947 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 49948 ;; Parameters:    Size  Location     Type
 49949 ;;		None
 49950 ;; Auto vars:     Size  Location     Type
 49951 ;;		None
 49952 ;; Return value:  Size  Location     Type
 49953 ;;                  1    wreg      void 
 49954 ;; Registers used:
 49955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49956 ;; Tracked objects:
 49957 ;;		On entry : 0/0
 49958 ;;		On exit  : 0/0
 49959 ;;		Unchanged: 0/0
 49960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49963 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49965 ;;Total ram usage:        1 bytes
 49966 ;; Hardware stack levels used:    1
 49967 ;; Hardware stack levels required when called:    2
 49968 ;; This function calls:
 49969 ;;		_TMR6_CallBack
 49970 ;; This function is called by:
 49971 ;;		Interrupt level 2
 49972 ;; This function uses a non-reentrant model
 49973 ;;
 49974                           
 49975                           	psect	text219
 49976  002848                     __ptext219:
 49977                           	opt callstack 0
 49978  002848                     _TMR6_ISR:
 49979                           	opt callstack 3
 49980                           
 49981                           ; BSR set to: 0
 49982                           ;incstack = 0
 49983  002848  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 49984  00284E  EE14  F32C         	lfsr	1,___inthi_sp
 49985                           
 49986                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 49987  002852  0139               	movlb	57	; () banked
 49988  002854  91A9               	bcf	169,0,b	;volatile
 49989                           
 49990                           ; BSR set to: 57
 49991                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 49992  002856  EC76  F013         	call	_TMR6_CallBack	;wreg free
 49993  00285A  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 49994  002860  0011               	retfie		f
 49995  002862                     __end_of_TMR6_ISR:
 49996                           	opt callstack 0
 49997                           
 49998 ;; *************** function _TMR6_CallBack *****************
 49999 ;; Defined at:
 50000 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 50001 ;; Parameters:    Size  Location     Type
 50002 ;;		None
 50003 ;; Auto vars:     Size  Location     Type
 50004 ;;		None
 50005 ;; Return value:  Size  Location     Type
 50006 ;;                  1  [STACK] void 
 50007 ;; Registers used:
 50008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50009 ;; Tracked objects:
 50010 ;;		On entry : 3F/39
 50011 ;;		On exit  : 0/0
 50012 ;;		Unchanged: 0/0
 50013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50018 ;;Total ram usage:        0 bytes
 50019 ;; Hardware stack levels used:    1
 50020 ;; Hardware stack levels required when called:    1
 50021 ;; This function calls:
 50022 ;;		Absolute function
 50023 ;;		_TMR6_DefaultInterruptHandler
 50024 ;; This function is called by:
 50025 ;;		_TMR6_ISR
 50026 ;; This function uses a reentrant model
 50027 ;;
 50028                           
 50029                           	psect	text220
 50030  0026EC                     __ptext220:
 50031                           	opt callstack 0
 50032  0026EC                     _TMR6_CallBack:
 50033                           	opt callstack 3
 50034                           
 50035                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 50036                           
 50037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50038                           ;incstack = 0
 50039  0026EC  0100               	movlb	0	; () banked
 50040  0026EE  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50041  0026F0  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50042  0026F2  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50043  0026F4  B4D8               	btfsc	status,2,c
 50044  0026F6  0012               	return	
 50045                           
 50046                           ; BSR set to: 0
 50047                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 50048  0026F8  D801               	call	u1319_48
 50049  0026FA  0012               	return	
 50050  0026FC                     u1319_48:
 50051  0026FC  0005               	push	
 50052  0026FE  6EFA               	movwf	pclath,c
 50053  002700  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50054  002702  6EFD               	movwf	tosl,c
 50055  002704  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50056  002706  6EFE               	movwf	tosh,c
 50057  002708  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50058  00270A  6EFF               	movwf	tosu,c
 50059  00270C  50FA               	movf	pclath,w,c
 50060  00270E  0012               	return		;indir
 50061  002710                     __end_of_TMR6_CallBack:
 50062                           	opt callstack 0
 50063                           
 50064 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 50065 ;; Defined at:
 50066 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 50067 ;; Parameters:    Size  Location     Type
 50068 ;;		None
 50069 ;; Auto vars:     Size  Location     Type
 50070 ;;  i               1  [STACK] unsigned char 
 50071 ;; Return value:  Size  Location     Type
 50072 ;;                  1  [STACK] void 
 50073 ;; Registers used:
 50074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 50075 ;; Tracked objects:
 50076 ;;		On entry : 3F/0
 50077 ;;		On exit  : 0/0
 50078 ;;		Unchanged: 0/0
 50079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50084 ;;Total ram usage:        0 bytes
 50085 ;; Hardware stack levels used:    1
 50086 ;; This function calls:
 50087 ;;		Nothing
 50088 ;; This function is called by:
 50089 ;;		_TMR6_Initialize
 50090 ;;		_TMR6_CallBack
 50091 ;; This function uses a reentrant model
 50092 ;;
 50093                           
 50094                           	psect	text221
 50095  001BAA                     __ptext221:
 50096                           	opt callstack 0
 50097  001BAA                     _TMR6_DefaultInterruptHandler:
 50098                           	opt callstack 0
 50099                           
 50100                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50101  001BAA  52E6               	movf	postinc1,f,c
 50102                           
 50103                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 50104                           ;stkvar	_i @ sp[(-1)+0]
 50105                           
 50106                           ;incstack = 0
 50107  001BAC  0EFF               	movlw	-1
 50108  001BAE  6AE3               	clrf	plusw1,c
 50109  001BB0                     l13342:
 50110                           
 50111                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 50112                           ;stkvar	_i @ sp[(-1)+0]
 50113  001BB0  0EFF               	movlw	-1
 50114  001BB2  50E3               	movf	plusw1,w,c
 50115  001BB4  0D02               	mullw	2
 50116  001BB6  0EBC               	movlw	low _tickCount
 50117  001BB8  24F3               	addwf	243,w,c
 50118  001BBA  6ED9               	movwf	fsr2l,c
 50119  001BBC  0E02               	movlw	high _tickCount
 50120  001BBE  20F4               	addwfc	prodh,w,c
 50121  001BC0  6EDA               	movwf	fsr2h,c
 50122  001BC2  50DE               	movf	postinc2,w,c
 50123  001BC4  10DE               	iorwf	postinc2,w,c
 50124  001BC6  B4D8               	btfsc	status,2,c
 50125  001BC8  D00C               	goto	l13346
 50126                           
 50127                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 50128                           ;stkvar	_i @ sp[(-1)+0]
 50129  001BCA  0EFF               	movlw	-1
 50130  001BCC  50E3               	movf	plusw1,w,c
 50131  001BCE  0D02               	mullw	2
 50132  001BD0  0EBC               	movlw	low _tickCount
 50133  001BD2  24F3               	addwf	243,w,c
 50134  001BD4  6ED9               	movwf	fsr2l,c
 50135  001BD6  0E02               	movlw	high _tickCount
 50136  001BD8  20F4               	addwfc	prodh,w,c
 50137  001BDA  6EDA               	movwf	fsr2h,c
 50138  001BDC  06DE               	decf	postinc2,f,c
 50139  001BDE  0E00               	movlw	0
 50140  001BE0  5ADD               	subwfb	postdec2,f,c
 50141  001BE2                     l13346:
 50142                           
 50143                           ;mcc_generated_files/tmr6.c: 207:  }
 50144                           ;stkvar	_i @ sp[(-1)+0]
 50145  001BE2  0EFF               	movlw	-1
 50146  001BE4  2AE3               	incf	plusw1,f,c
 50147                           
 50148                           ;stkvar	_i @ sp[(-1)+0]
 50149  001BE6  0EFF               	movlw	-1
 50150  001BE8  006F FF8C  F02A    	movff	plusw1,btemp
 50151  001BEE  0E0C               	movlw	12
 50152  001BF0  642A               	cpfsgt	btemp^0,c
 50153  001BF2  D7DE               	goto	l13342
 50154                           
 50155                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50156  001BF4  52E5               	movf	postdec1,f,c
 50157  001BF6  0012               	return		;funcret
 50158  001BF8                     __end_of_TMR6_DefaultInterruptHandler:
 50159                           	opt callstack 0
 50160                           
 50161 ;; *************** function _DMA1_DMASCNT_ISR *****************
 50162 ;; Defined at:
 50163 ;;		line 126 in file "mcc_generated_files/dma1.c"
 50164 ;; Parameters:    Size  Location     Type
 50165 ;;		None
 50166 ;; Auto vars:     Size  Location     Type
 50167 ;;		None
 50168 ;; Return value:  Size  Location     Type
 50169 ;;                  1    wreg      void 
 50170 ;; Registers used:
 50171 ;;		None
 50172 ;; Tracked objects:
 50173 ;;		On entry : 0/0
 50174 ;;		On exit  : 3F/0
 50175 ;;		Unchanged: 0/0
 50176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50181 ;;Total ram usage:        0 bytes
 50182 ;; Hardware stack levels used:    1
 50183 ;; This function calls:
 50184 ;;		Nothing
 50185 ;; This function is called by:
 50186 ;;		Interrupt level 2
 50187 ;; This function uses a non-reentrant model
 50188 ;;
 50189                           
 50190                           	psect	text222
 50191  0029BC                     __ptext222:
 50192                           	opt callstack 0
 50193  0029BC                     _DMA1_DMASCNT_ISR:
 50194                           	opt callstack 5
 50195                           
 50196                           ;incstack = 0
 50197  0029BC  EE14  F32C         	lfsr	1,___inthi_sp
 50198                           
 50199                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 50200  0029C0  0139               	movlb	57	; () banked
 50201  0029C2  91A2               	bcf	162,0,b	;volatile
 50202                           
 50203                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 50204  0029C4  0100               	movlb	0	; () banked
 50205  0029C6  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 50206                           
 50207                           ; BSR set to: 0
 50208  0029C8  0011               	retfie		f
 50209  0029CA                     __end_of_DMA1_DMASCNT_ISR:
 50210                           	opt callstack 0
 50211                           
 50212 ;; *************** function _DMA1_DMADCNT_ISR *****************
 50213 ;; Defined at:
 50214 ;;		line 133 in file "mcc_generated_files/dma1.c"
 50215 ;; Parameters:    Size  Location     Type
 50216 ;;		None
 50217 ;; Auto vars:     Size  Location     Type
 50218 ;;		None
 50219 ;; Return value:  Size  Location     Type
 50220 ;;                  1    wreg      void 
 50221 ;; Registers used:
 50222 ;;		None
 50223 ;; Tracked objects:
 50224 ;;		On entry : 0/0
 50225 ;;		On exit  : 3F/39
 50226 ;;		Unchanged: 0/0
 50227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50232 ;;Total ram usage:        0 bytes
 50233 ;; Hardware stack levels used:    1
 50234 ;; This function calls:
 50235 ;;		Nothing
 50236 ;; This function is called by:
 50237 ;;		Interrupt level 2
 50238 ;; This function uses a non-reentrant model
 50239 ;;
 50240                           
 50241                           	psect	text223
 50242  0029E0                     __ptext223:
 50243                           	opt callstack 0
 50244  0029E0                     _DMA1_DMADCNT_ISR:
 50245                           	opt callstack 5
 50246                           
 50247                           ; BSR set to: 0
 50248                           ;incstack = 0
 50249  0029E0  EE14  F32C         	lfsr	1,___inthi_sp
 50250                           
 50251                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 50252  0029E4  0139               	movlb	57	; () banked
 50253  0029E6  93A2               	bcf	162,1,b	;volatile
 50254                           
 50255                           ; BSR set to: 57
 50256  0029E8  0011               	retfie		f
 50257  0029EA                     __end_of_DMA1_DMADCNT_ISR:
 50258                           	opt callstack 0
 50259                           
 50260 ;; *************** function _DMA1_DMAA_ISR *****************
 50261 ;; Defined at:
 50262 ;;		line 143 in file "mcc_generated_files/dma1.c"
 50263 ;; Parameters:    Size  Location     Type
 50264 ;;		None
 50265 ;; Auto vars:     Size  Location     Type
 50266 ;;		None
 50267 ;; Return value:  Size  Location     Type
 50268 ;;                  1    wreg      void 
 50269 ;; Registers used:
 50270 ;;		None
 50271 ;; Tracked objects:
 50272 ;;		On entry : 0/0
 50273 ;;		On exit  : 3F/39
 50274 ;;		Unchanged: 0/0
 50275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50280 ;;Total ram usage:        0 bytes
 50281 ;; Hardware stack levels used:    1
 50282 ;; This function calls:
 50283 ;;		Nothing
 50284 ;; This function is called by:
 50285 ;;		Interrupt level 2
 50286 ;; This function uses a non-reentrant model
 50287 ;;
 50288                           
 50289                           	psect	text224
 50290  0029EC                     __ptext224:
 50291                           	opt callstack 0
 50292  0029EC                     _DMA1_DMAA_ISR:
 50293                           	opt callstack 5
 50294                           
 50295                           ; BSR set to: 57
 50296                           ;incstack = 0
 50297  0029EC  EE14  F32C         	lfsr	1,___inthi_sp
 50298                           
 50299                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 50300  0029F0  0139               	movlb	57	; () banked
 50301  0029F2  97A2               	bcf	162,3,b	;volatile
 50302                           
 50303                           ; BSR set to: 57
 50304  0029F4  0011               	retfie		f
 50305  0029F6                     __end_of_DMA1_DMAA_ISR:
 50306                           	opt callstack 0
 50307                           
 50308 ;; *************** function _DMA1_DMAOR_ISR *****************
 50309 ;; Defined at:
 50310 ;;		line 154 in file "mcc_generated_files/dma1.c"
 50311 ;; Parameters:    Size  Location     Type
 50312 ;;		None
 50313 ;; Auto vars:     Size  Location     Type
 50314 ;;		None
 50315 ;; Return value:  Size  Location     Type
 50316 ;;                  1    wreg      void 
 50317 ;; Registers used:
 50318 ;;		None
 50319 ;; Tracked objects:
 50320 ;;		On entry : 0/0
 50321 ;;		On exit  : 3F/39
 50322 ;;		Unchanged: 0/0
 50323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50328 ;;Total ram usage:        0 bytes
 50329 ;; Hardware stack levels used:    1
 50330 ;; This function calls:
 50331 ;;		Nothing
 50332 ;; This function is called by:
 50333 ;;		Interrupt level 2
 50334 ;; This function uses a non-reentrant model
 50335 ;;
 50336                           
 50337                           	psect	text225
 50338  0029F8                     __ptext225:
 50339                           	opt callstack 0
 50340  0029F8                     _DMA1_DMAOR_ISR:
 50341                           	opt callstack 5
 50342                           
 50343                           ; BSR set to: 57
 50344                           ;incstack = 0
 50345  0029F8  EE14  F32C         	lfsr	1,___inthi_sp
 50346                           
 50347                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 50348  0029FC  0139               	movlb	57	; () banked
 50349  0029FE  95A2               	bcf	162,2,b	;volatile
 50350                           
 50351                           ; BSR set to: 57
 50352  002A00  0011               	retfie		f
 50353  002A02                     __end_of_DMA1_DMAOR_ISR:
 50354                           	opt callstack 0
 50355                           
 50356                           ;
 50357                           ; Interrupt Vector Table @ 0x8
 50358                           ;
 50359                           
 50360                           	psect	ivt0x8
 50361  000008                     __pivt0x8:
 50362                           	opt callstack 0
 50363  000008                     ivt0x8_base:
 50364                           	opt callstack 0
 50365                           
 50366                           ; Vector 0 : SWINT
 50367  000008  0A94               	dw	_Default_ISR shr (0+2)
 50368                           
 50369                           ; Vector 1 : HLVD
 50370  00000A  0A94               	dw	_Default_ISR shr (0+2)
 50371                           
 50372                           ; Vector 2 : OSF
 50373  00000C  0A94               	dw	_Default_ISR shr (0+2)
 50374                           
 50375                           ; Vector 3 : CSW
 50376  00000E  0A94               	dw	_Default_ISR shr (0+2)
 50377                           
 50378                           ; Vector 4 : NVM
 50379  000010  0A94               	dw	_Default_ISR shr (0+2)
 50380                           
 50381                           ; Vector 5 : SCAN
 50382  000012  0A94               	dw	_Default_ISR shr (0+2)
 50383                           
 50384                           ; Vector 6 : CRC
 50385  000014  0A94               	dw	_Default_ISR shr (0+2)
 50386                           
 50387                           ; Vector 7 : IOC
 50388  000016  0A94               	dw	_Default_ISR shr (0+2)
 50389                           
 50390                           ; Vector 8 : INT0
 50391  000018  0A6B               	dw	_INT0_ISR shr (0+2)
 50392                           
 50393                           ; Vector 9 : ZCD
 50394  00001A  0A94               	dw	_Default_ISR shr (0+2)
 50395                           
 50396                           ; Vector 10 : AD
 50397  00001C  08D7               	dw	_ADCC_ISR shr (0+2)
 50398                           
 50399                           ; Vector 11 : ADT
 50400  00001E  055B               	dw	_ADCC_ThresholdISR shr (0+2)
 50401                           
 50402                           ; Vector 12 : CMP1
 50403  000020  0A94               	dw	_Default_ISR shr (0+2)
 50404                           
 50405                           ; Vector 13 : SMT1
 50406  000022  0A94               	dw	_Default_ISR shr (0+2)
 50407                           
 50408                           ; Vector 14 : SMT1PRA
 50409  000024  0A94               	dw	_Default_ISR shr (0+2)
 50410                           
 50411                           ; Vector 15 : SMT1PRW
 50412  000026  0A94               	dw	_Default_ISR shr (0+2)
 50413                           
 50414                           ; Vector 16 : DMA1SCNT
 50415  000028  0A6F               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 50416                           
 50417                           ; Vector 17 : DMA1DCNT
 50418  00002A  0A78               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 50419                           
 50420                           ; Vector 18 : DMA1OR
 50421  00002C  0A7E               	dw	_DMA1_DMAOR_ISR shr (0+2)
 50422                           
 50423                           ; Vector 19 : DMA1A
 50424  00002E  0A7B               	dw	_DMA1_DMAA_ISR shr (0+2)
 50425                           
 50426                           ; Vector 20 : SPI1RX
 50427  000030  0A94               	dw	_Default_ISR shr (0+2)
 50428                           
 50429                           ; Vector 21 : SPI1TX
 50430  000032  0A94               	dw	_Default_ISR shr (0+2)
 50431                           
 50432                           ; Vector 22 : SPI1
 50433  000034  0A94               	dw	_Default_ISR shr (0+2)
 50434                           
 50435                           ; Vector 23 : I2C1RX
 50436  000036  0A94               	dw	_Default_ISR shr (0+2)
 50437                           
 50438                           ; Vector 24 : I2C1TX
 50439  000038  0A94               	dw	_Default_ISR shr (0+2)
 50440                           
 50441                           ; Vector 25 : I2C1
 50442  00003A  0A94               	dw	_Default_ISR shr (0+2)
 50443                           
 50444                           ; Vector 26 : I2C1E
 50445  00003C  0A94               	dw	_Default_ISR shr (0+2)
 50446                           
 50447                           ; Vector 27 : U1RX
 50448  00003E  0970               	dw	_UART1_rx_vect_isr shr (0+2)
 50449                           
 50450                           ; Vector 28 : U1TX
 50451  000040  0A94               	dw	_Default_ISR shr (0+2)
 50452                           
 50453                           ; Vector 29 : U1E
 50454  000042  0A94               	dw	_Default_ISR shr (0+2)
 50455                           
 50456                           ; Vector 30 : U1
 50457  000044  0A94               	dw	_Default_ISR shr (0+2)
 50458                           
 50459                           ; Vector 31 : TMR0
 50460  000046  0A94               	dw	_Default_ISR shr (0+2)
 50461                           
 50462                           ; Vector 32 : TMR1
 50463  000048  0A94               	dw	_Default_ISR shr (0+2)
 50464                           
 50465                           ; Vector 33 : TMR1G
 50466  00004A  0A94               	dw	_Default_ISR shr (0+2)
 50467                           
 50468                           ; Vector 34 : TMR2
 50469  00004C  0A94               	dw	_Default_ISR shr (0+2)
 50470                           
 50471                           ; Vector 35 : CCP1
 50472  00004E  0A94               	dw	_Default_ISR shr (0+2)
 50473                           
 50474                           ; Vector 36 : Undefined
 50475  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 50476                           
 50477                           ; Vector 37 : NCO1
 50478  000052  0A94               	dw	_Default_ISR shr (0+2)
 50479                           
 50480                           ; Vector 38 : CWG1
 50481  000054  0A94               	dw	_Default_ISR shr (0+2)
 50482                           
 50483                           ; Vector 39 : CLC1
 50484  000056  0A94               	dw	_Default_ISR shr (0+2)
 50485                           
 50486                           ; Vector 40 : INT1
 50487  000058  07EC               	dw	_INT1_ISR shr (0+2)
 50488                           
 50489                           ; Vector 41 : CMP2
 50490  00005A  0A94               	dw	_Default_ISR shr (0+2)
 50491                           
 50492                           ; Vector 42 : DMA2SCNT
 50493  00005C  0A94               	dw	_Default_ISR shr (0+2)
 50494                           
 50495                           ; Vector 43 : DMA2DCNT
 50496  00005E  0A94               	dw	_Default_ISR shr (0+2)
 50497                           
 50498                           ; Vector 44 : DMA2OR
 50499  000060  0A94               	dw	_Default_ISR shr (0+2)
 50500                           
 50501                           ; Vector 45 : DMA2A
 50502  000062  0A94               	dw	_Default_ISR shr (0+2)
 50503                           
 50504                           ; Vector 46 : I2C2RX
 50505  000064  0A94               	dw	_Default_ISR shr (0+2)
 50506                           
 50507                           ; Vector 47 : I2C2TX
 50508  000066  0A94               	dw	_Default_ISR shr (0+2)
 50509                           
 50510                           ; Vector 48 : I2C2
 50511  000068  0A94               	dw	_Default_ISR shr (0+2)
 50512                           
 50513                           ; Vector 49 : I2C2E
 50514  00006A  0A94               	dw	_Default_ISR shr (0+2)
 50515                           
 50516                           ; Vector 50 : U2RX
 50517  00006C  0984               	dw	_UART2_rx_vect_isr shr (0+2)
 50518                           
 50519                           ; Vector 51 : U2TX
 50520  00006E  097A               	dw	_UART2_tx_vect_isr shr (0+2)
 50521                           
 50522                           ; Vector 52 : U2E
 50523  000070  0A94               	dw	_Default_ISR shr (0+2)
 50524                           
 50525                           ; Vector 53 : U2
 50526  000072  0A94               	dw	_Default_ISR shr (0+2)
 50527                           
 50528                           ; Vector 54 : TMR3
 50529  000074  7AA8               	dw	_TMR3_ISR shr (0+2)
 50530                           
 50531                           ; Vector 55 : TMR3G
 50532  000076  0A94               	dw	_Default_ISR shr (0+2)
 50533                           
 50534                           ; Vector 56 : TMR4
 50535  000078  0A94               	dw	_Default_ISR shr (0+2)
 50536                           
 50537                           ; Vector 57 : CCP2
 50538  00007A  0A94               	dw	_Default_ISR shr (0+2)
 50539                           
 50540                           ; Vector 58 : Undefined
 50541  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 50542                           
 50543                           ; Vector 59 : CWG2
 50544  00007E  0A94               	dw	_Default_ISR shr (0+2)
 50545                           
 50546                           ; Vector 60 : CLC2
 50547  000080  0A94               	dw	_Default_ISR shr (0+2)
 50548                           
 50549                           ; Vector 61 : INT2
 50550  000082  0A94               	dw	_Default_ISR shr (0+2)
 50551                           
 50552                           ; Vector 62 : Undefined
 50553  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 50554                           
 50555                           ; Vector 63 : Undefined
 50556  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 50557                           
 50558                           ; Vector 64 : Undefined
 50559  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 50560                           
 50561                           ; Vector 65 : Undefined
 50562  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 50563                           
 50564                           ; Vector 66 : Undefined
 50565  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 50566                           
 50567                           ; Vector 67 : Undefined
 50568  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 50569                           
 50570                           ; Vector 68 : Undefined
 50571  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 50572                           
 50573                           ; Vector 69 : Undefined
 50574  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 50575                           
 50576                           ; Vector 70 : TMR5
 50577  000094  76E5               	dw	_TMR5_ISR shr (0+2)
 50578                           
 50579                           ; Vector 71 : TMR5G
 50580  000096  0A94               	dw	_Default_ISR shr (0+2)
 50581                           
 50582                           ; Vector 72 : TMR6
 50583  000098  0A12               	dw	_TMR6_ISR shr (0+2)
 50584                           
 50585                           ; Vector 73 : CCP3
 50586  00009A  0A94               	dw	_Default_ISR shr (0+2)
 50587                           
 50588                           ; Vector 74 : CWG3
 50589  00009C  0A94               	dw	_Default_ISR shr (0+2)
 50590                           
 50591                           ; Vector 75 : CLC3
 50592  00009E  0A94               	dw	_Default_ISR shr (0+2)
 50593                           
 50594                           ; Vector 76 : Undefined
 50595  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 50596                           
 50597                           ; Vector 77 : Undefined
 50598  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 50599                           
 50600                           ; Vector 78 : Undefined
 50601  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 50602                           
 50603                           ; Vector 79 : Undefined
 50604  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 50605                           
 50606                           ; Vector 80 : CCP4
 50607  0000A8  0A94               	dw	_Default_ISR shr (0+2)
 50608                           
 50609                           ; Vector 81 : CLC4
 50610  0000AA  0A94               	dw	_Default_ISR shr (0+2)
 50611  0000AC                     ivt0x8_undefint:
 50612                           	opt callstack 0
 50613  0000AC  00FF               	reset	
 50614                           
 50615                           	psect	text226
 50616  000000                     __ptext226:
 50617                           	opt callstack 0
 50618                           
 50619                           	psect	rparam
 50620  0000                     
 50621                           	psect	temp
 50622  00002A                     btemp:
 50623                           	opt callstack 0
 50624  00002A                     	ds	32
 50625  0000                     wtemp0	set	btemp
 50626  0000                     wtemp1	set	btemp+2
 50627  0000                     wtemp2	set	btemp+4
 50628  0000                     wtemp3	set	btemp+6
 50629  0000                     wtemp4	set	btemp+8
 50630  0000                     wtemp5	set	btemp+10
 50631  0000                     wtemp8	set	btemp+1
 50632  0000                     ttemp0	set	btemp
 50633  0000                     ttemp1	set	btemp+3
 50634  0000                     ttemp2	set	btemp+6
 50635  0000                     ttemp3	set	btemp+9
 50636  0000                     ttemp5	set	btemp+1
 50637  0000                     ttemp6	set	btemp+4
 50638  0000                     ttemp7	set	btemp+8
 50639  0000                     ltemp0	set	btemp
 50640  0000                     ltemp1	set	btemp+4
 50641  0000                     ltemp2	set	btemp+8
 50642  0000                     lltemp0	set	btemp
 50643  0000                     lltemp1	set	btemp+8
 50644  0000                     lltemp2	set	btemp+16
 50645  0000                     lltemp3	set	btemp+24
 50646                           tosu	equ	0x3FFF
 50647                           tosh	equ	0x3FFE
 50648                           tosl	equ	0x3FFD
 50649                           stkptr	equ	0x3FFC
 50650                           pclatu	equ	0x3FFB
 50651                           pclath	equ	0x3FFA
 50652                           pcl	equ	0x3FF9
 50653                           tblptru	equ	0x3FF8
 50654                           tblptrh	equ	0x3FF7
 50655                           tblptrl	equ	0x3FF6
 50656                           tablat	equ	0x3FF5
 50657                           prodh	equ	0x3FF4
 50658                           prodl	equ	0x3FF3
 50659                           indf0	equ	0x3FEF
 50660                           postinc0	equ	0x3FEE
 50661                           postdec0	equ	0x3FED
 50662                           preinc0	equ	0x3FEC
 50663                           plusw0	equ	0x3FEB
 50664                           fsr0h	equ	0x3FEA
 50665                           fsr0l	equ	0x3FE9
 50666                           wreg	equ	0x3FE8
 50667                           indf1	equ	0x3FE7
 50668                           postinc1	equ	0x3FE6
 50669                           postdec1	equ	0x3FE5
 50670                           preinc1	equ	0x3FE4
 50671                           plusw1	equ	0x3FE3
 50672                           fsr1h	equ	0x3FE2
 50673                           fsr1l	equ	0x3FE1
 50674                           bsr	equ	0x3FE0
 50675                           indf2	equ	0x3FDF
 50676                           postinc2	equ	0x3FDE
 50677                           postdec2	equ	0x3FDD
 50678                           preinc2	equ	0x3FDC
 50679                           plusw2	equ	0x3FDB
 50680                           fsr2h	equ	0x3FDA
 50681                           fsr2l	equ	0x3FD9
 50682                           status	equ	0x3FD8


Data Sizes:
    Strings     1544
    Constant    588
    Data        1184
    BSS         1775
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_133(CODE[1]), STR_93(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_134(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_128(CODE[3]), STR_124(CODE[3]), STR_119(CODE[3]), STR_114(CODE[3]), 
		 -> STR_109(CODE[3]), STR_105(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_128(CODE[3]), STR_124(CODE[3]), STR_119(CODE[3]), STR_114(CODE[3]), 
		 -> STR_109(CODE[3]), STR_105(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_94(CODE[127]), STR_92(CODE[3]), STR_91(CODE[3]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[21]), STR_84(CODE[26]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), 
		 -> STR_78(CODE[10]), STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), 
		 -> STR_72(CODE[14]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[28]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[21]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[24]), STR_49(CODE[30]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[18]), STR_33(CODE[17]), 
		 -> STR_32(CODE[17]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_94(CODE[127]), STR_92(CODE[3]), STR_91(CODE[3]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[21]), STR_84(CODE[26]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), 
		 -> STR_78(CODE[10]), STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), 
		 -> STR_72(CODE[14]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[28]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[21]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[24]), STR_49(CODE[30]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[18]), STR_33(CODE[17]), 
		 -> STR_32(CODE[17]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_75(CODE[9]), STR_74(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_75(CODE[9]), STR_74(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_100(CODE[4]), STR_99(CODE[4]), STR_96(CODE[4]), STR_95(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_100(CODE[4]), STR_99(CODE[4]), STR_96(CODE[4]), STR_95(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_73(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_94(CODE[127]), STR_92(CODE[3]), STR_91(CODE[3]), STR_90(CODE[21]), 
		 -> STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[26]), STR_83(CODE[15]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_72(CODE[14]), STR_71(CODE[28]), 
		 -> STR_70(CODE[28]), STR_69(CODE[28]), STR_68(CODE[22]), STR_67(CODE[22]), 
		 -> STR_66(CODE[22]), STR_65(CODE[22]), STR_64(CODE[22]), STR_63(CODE[22]), 
		 -> STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), STR_59(CODE[21]), 
		 -> STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[22]), 
		 -> STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[24]), STR_51(CODE[24]), 
		 -> STR_50(CODE[24]), STR_49(CODE[30]), STR_48(CODE[24]), STR_47(CODE[24]), 
		 -> STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[18]), STR_33(CODE[17]), STR_32(CODE[17]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[14]), STR_27(CODE[27]), 
		 -> STR_26(CODE[27]), STR_25(CODE[23]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[22]), STR_20(CODE[23]), STR_19(CODE[23]), 
		 -> STR_18(CODE[23]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7385_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_94(CODE[127]), STR_92(CODE[3]), STR_91(CODE[3]), STR_90(CODE[21]), 
		 -> STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[26]), STR_83(CODE[15]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[14]), 
		 -> STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[28]), STR_68(CODE[22]), 
		 -> STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[21]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[24]), 
		 -> STR_51(CODE[24]), STR_50(CODE[24]), STR_49(CODE[30]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[18]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[14]), 
		 -> STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), STR_20(CODE[23]), 
		 -> STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_132(CODE[37]), STR_131(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_94(CODE[127]), STR_92(CODE[3]), STR_91(CODE[3]), STR_90(CODE[21]), 
		 -> STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[26]), STR_83(CODE[15]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[14]), 
		 -> STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[28]), STR_68(CODE[22]), 
		 -> STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[21]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[24]), 
		 -> STR_51(CODE[24]), STR_50(CODE[24]), STR_49(CODE[30]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[18]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[14]), 
		 -> STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), STR_20(CODE[23]), 
		 -> STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_94(CODE[127]), STR_92(CODE[3]), STR_91(CODE[3]), STR_90(CODE[21]), 
		 -> STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[26]), STR_83(CODE[15]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[14]), 
		 -> STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[28]), STR_68(CODE[22]), 
		 -> STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[21]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[24]), 
		 -> STR_51(CODE[24]), STR_50(CODE[24]), STR_49(CODE[30]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[18]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[14]), 
		 -> STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), STR_20(CODE[23]), 
		 -> STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_75(CODE[9]), 
		 -> STR_74(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_75(CODE[9]), 
		 -> STR_74(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_75(CODE[9]), STR_74(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_75(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_74(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  439880
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    4070
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1451
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83116
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0   67566
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  131766
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65599
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35090
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34808
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1420
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
     _wait_lcd_done
   _wait_lcd_done
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 03:03:54 2020

                         _SPI1_Exchange8bit 27B6                    __end_of_set_display_info 282E  
                                         _C 08FF                                           _D 0A3F  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F8B7                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 24F6                __end_of_start_switch_handler 2796  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1A62                                          _r0 01E5  
                                        _r1 01DB                                          _bp F9DF  
                    __end_of_FVR_Initialize 2A2A                              _check_day_time A116  
                               __CFG_LVP$ON 000000                                         l171 28E4  
                                       l809 27C4                                         l675 23AE  
                                       l942 1622                                         _GIE 01FE97  
                                       _abs 1D5E                                         _pad F98A  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 287A  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs 01A2  
                             _INT0_CallBack 26C8                           _update_adc_result 202A  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 265C  
                              __CFG_ZCD$OFF 000000                                        l1004 1F6A  
                                      l2017 13AA                                        l2033 089A  
                                      l2203 A478                                        l3021 E7CE  
                                      l1501 1636                                        l1271 290C  
                                      l1192 1FAA                                        l1520 9492  
                                      l2137 DB8A                                        l2058 0E56  
                                      l1282 E522                             _timer3ReloadVal 00C0  
                                      l1284 E528                                        l4021 7A9C  
                                      l1614 19B8                                        l1462 0444  
                                      l1455 005E                                        l2184 FDAA  
                                      l2408 BA0C                                        l2096 132C  
                                      l2362 5054                                        l3306 81CC  
                                      l2523 28B0                                        l2283 F516  
                                      l1475 0962                                        l1820 2080  
                                      l2292 D3F2                                        l3261 7596  
                                      l3413 1D9E                                        l3405 DEC2  
                                      l2605 BAFA                                        l4029 65B0  
                                      l1485 0C30                                        l1477 0968  
                                      l2366 5392                                        l3342 6DDA  
                                      l1742 0AA8                                        l1830 D606  
                                      l2199 A480                                        l1495 0E36  
                                      l2552 1CE0                                        l1496 1060  
                                      l3273 7426                                        l2641 9DA0  
                                      l1761 2122                                        l2626 AB7A  
                                      l1746 0F7C                                        l3418 F750  
                                      l2467 F9E6                                        l1837 ED5E  
                                      l1829 D4AA                                        l2733 02A4  
                                      l3517 CB44                                        l3382 D804  
                                      l3454 C6B8                        _ADCC_StartConversion 2910  
                                      l3543 F636                                        l2487 8C86  
                                      l2567 2190                                        l3810 D1D2  
                                      l2691 492E                                        l1877 282A  
                                      l1977 8BA2                                        l3825 122E  
                                      l3933 CFB2                                        l3838 11AA  
                                      l3942 C1C4                                        l2983 05BE  
                                      l3849 3982                                        l2994 EA96  
                                      l2987 E9C2                                        l3977 BF48  
                                      l3969 BE62                                        l9800 6E7A  
                                      l9812 6EF8                                        l9804 6E90  
                                      l9910 729C                                        l9830 6FB0  
                                      l9806 6EC0                                        l9824 6F6A  
                                      l9930 73B0                                        l9914 72A6  
                                      l9818 6F2A                                        l9940 740A  
                                      l9932 73D6                                        l9908 728A  
                                      l9836 6FD2                                        l9828 6F80  
                                      l9950 745A                                        l9918 72D8  
                                      STR_1 FF1D                                        l9880 71A2  
                                      STR_2 FF08                                        STR_3 FFD5  
                                      l9954 7466                                        l9882 71B4  
                                      l9890 71EE                                        l9866 7110  
                                      l9794 6E3A                                        STR_4 FEF3  
                                      STR_5 FBB9                                        l9980 74F2  
                                      l9964 748E                                        l9948 7448  
                                      l9876 7182                                        STR_6 FBB9  
                                      STR_7 FBB9                                        l9990 751E  
                                      l9886 71BE                                        STR_8 FBB9  
                                      STR_9 FBB9                                        l9968 7494  
                                      l9994 7536                                        l9996 7546  
                                      _LATA 003FBA                                        _LATB 003FBB  
                                      _LATC 003FBC                                        _LATD 003FBD  
                                      _LATE 003FBE                                        _LATF 003FBF  
                                      _T2PR 003FAB                                        _T6PR 003F93  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      _PMD2 0039C2                                        _PMD3 0039C3  
                                      u8000 115A                                        _PMD4 0039C4  
                                      _PMD5 0039C5                                        _PMD6 0039C6  
                                      _PMD7 0039C7                                        u7300 7156  
                                      u8020 22F6                                        u7301 7150  
                                      u8030 22F8                                        u8110 C22A  
                                      u8200 C426                                        u7410 72CE  
                                      u8130 C280                                        u9010 1C12  
                                      u7340 71E6                                        u9020 E698  
                                      u7180 22C6                                        u8141 C28A  
                                      u8061 ED70                                        u7510 7486  
                                      u7350 7206                                        u7318 7158  
                                      u8150 C2C4                                        u8310 CD68  
                                      u8230 CBA4                                        u9110 E7AE  
                                      u9030 E6AC                                        u7190 22C8  
                                      u7415 72BE                                        u8160 C2F6  
                                      u9040 E6E6                                        u7345 71D6  
                                      u9025 E68E                                        u9121 E382  
                                      u8081 EE92                                        u7450 73F8  
                                      u7290 7136                                        u8250 CBFA  
                                      u9130 E3BC                                        u9210 F3C2  
                                      u8180 C3D4                                        u8260 CC2C  
                                      u9140 E3EE                                        u7620 2296  
                                      u9045 E6DC                                        u7550 74E2  
                                      u9230 1AD6                                        u8270 CC5E  
                                      u7630 2298                                        u9240 1AF6  
                                      u7800 DEB2                                        u9160 E4CC  
                                      u7640 FF64                                        u7490 746C  
                                      u8530 80E6                                        u8450 8000  
                                      u8290 CD16                                        u9090 E784  
                                      u7810 DEB4                                        u7555 74D2  
                                      u7580 7502                                        u8540 8120  
                                      u7740 1D72                                        u9180 F2D8  
                                      u8710 6C52                                        u8550 815C  
                                      u7750 DDE4                                        u9190 F30A  
                                      u8535 80D6                                        u8640 6764  
                                      u7920 A66C                                        u7840 11DC  
                                      u7905 A5C6                                        u8490 808A  
                                      u7906 A5CC                                        u7850 11DE  
                                      u7755 DDDA                                        u7907 A5DA  
                                      u7940 A744                                        u7925 A662  
                                      u8750 6CAE                                        u7870 A540  
                                      u8655 68F8                                        u8760 6CE8  
                                      u7880 A58C                                        u8665 69C0  
                                      u7945 A73A                                        u8770 6D2E  
                                      u7970 1E22                                        _PLLR 01CEE0  
                                      u8755 6C9E                                        u8675 6B88  
                                      u7795 DE94                                        u7875 A536  
                                      u7980 1E24                                        u8950 05B8  
                                      u7990 1158                     __end_of_display_history B738  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUD 003A71  
                                      _WPUE 003A81                                        _WPUF 003A91  
                          __end_of_ADCC_ISR 2388                       __size_of___secs_to_tm 10D2  
                             __CFG_FCMEN$ON 000000                                _rule_to_secs 75A0  
                                      _dbuf 0354                          __size_of_CRC_Start 0006  
                                      _cp_h F9F3                                        _cp_l F9EF  
                                      _atoi C44E                                        _ctoa 10A8  
                                      _main 0000                                        _dtoa 8BA8  
                                      _nanf 1834                                        _lock 01D3  
                                      _seed 02DE                                        _prec 004C  
                                      _time 18F6                                        _nout 00BA  
                                      _spin F967                                        fsr0h 003FEA  
                                      fsr1h 003FE2                                        indf0 003FEF  
                                      fsr2h 003FDA                                        fsr0l 003FE9  
                                      indf1 003FE7                                        indf2 003FDF  
                                      fsr1l 003FE1                                        fsr2l 003FD9  
                                      _stoa BA10                                        btemp 002A  
                                      _utoa AB36                                        _xtoa 9D5C  
                    __end_of_check_adc_scan 2A0A                               ___fpclassifyf DD36  
                                      prodh 003FF4                                        prodl 003FF3  
                                      start 00AE                             _timer5ReloadVal 00C4  
                 __end_of_SPI1_Exchange8bit 27D4                   __size_of_clear_hid_pflags 0066  
                           _TMR3_Initialize 1CD0                 __size_of_set_load_relay_one 0010  
               __size_of_set_load_relay_two 0010                               __CFG_CSWEN$ON 000000  
                            _SPI1STATUSbits 003D17                           _UART1_rx_vect_isr 25C0  
                              ___param_bank 000000                        display_history@bwait 0053  
                    __end_of_check_day_time A48A                          ?_UART1_rx_vect_isr 0001  
                 __size_of_DATAEE_WriteByte 0068                            _update_hist_data 12B8  
                          __end_of_INT0_ISR 29BA                            __end_of_INT1_ISR 1FEE  
            __size_of_OSCILLATOR_Initialize 0016                    __end_of_ringBufS_put_dma 0AB0  
             __end_of_OSCILLATOR_Initialize 28EA                                       l10002 7576  
                                     l10012 FE9A                                       l10104 DE60  
                                     l10200 02FA                                       l10016 FF20  
                                     l10114 DEBA                                       l10210 ED78  
                                     l10108 DE64                                       l10132 121E  
                                     l10310 7CB2                                       l10230 C230  
                                     l10214 EE1E                                       l10320 7D08  
                                     l10160 A6C6                                       l10402 8022  
                                     l10330 7D90                                       l10322 7D38  
                                     l10242 C2CA                                       l10090 1D8E  
                                     l10170 A7CC                                       l10162 A716  
                                     l10146 A5A8                                       l10420 8098  
                                     l10340 7DE6                                       l10316 7CF2  
                                     l12020 D6C0                                       l12012 D654  
                                     l10236 C284                                       l10502 6776  
                                     l10430 810C                                       l10406 8048  
                                     l10342 7E16                                       l12022 D6CE  
                                     l10254 C39C                                       l10166 A75E  
                                     l10416 8092                                       l10336 7DD0  
                                     l12032 D730                                       l12024 D6E4  
                                     l10450 81B0                                       l10442 8178  
                                     l10362 7EA8                                       l10354 7E8E  
                                     l12034 D74E                                       l12026 D702  
                                     l10290 CCDE                                       l10282 CC32  
                                     l10274 CBAA                                       l10436 8148  
                                     l10380 7F6E                                       l10372 7F38  
                                     l10348 7E54                                       l12044 D782  
                                     l12036 D764                                       l11500 D0B0  
                                     l10188 119A                                       l10606 6D88  
                                     l10382 7F80                                       l10390 7FD8  
                                     l12054 D7E4                                       l12310 8926  
                                     l10608 6DA2                                       l10560 6BEA  
                                     l10472 6650                                       l10448 81A0  
                                     l10712 0588                                       l10800 E3C2  
                                     l11520 DF06                                       l10554 6BCE  
                                     l10490 671E                                       l10474 6656  
                                     l10466 6610                                       l10730 EA10  
                                     l12330 8AD4                                       l12322 89F4  
                                     l12306 8844                                       l10564 6C10  
                                     l10492 6724                                       l10484 66DE  
                                     l10476 6686                                       l10724 E980  
                                     l10396 8006                                       l10388 7FD4  
                                     l10716 05BC                                       l10708 0546  
                                     l10812 E494                                       l12260 0486  
                                     l11532 DF62                                       l10574 6C5A  
                                     l10494 6754                                       l10742 EA94  
                                     l10734 EA5E                                       l12318 8958  
                                     l11462 C52A                                       l11446 C468  
                                     l10750 1C16                                       l11526 DF32  
                                     l11710 5A66                                       l10592 6D1A  
                                     l12336 8B70                                       l12344 8B82  
                                     l11472 C60C                                       l11464 C542  
                                     l11456 C4FE                                       l11448 C48A  
                                     l10760 E6B8                                       l10832 F38A  
                                     l10824 F2DE                                       l12264 04C4  
                                     l11544 DFE4                                       l11704 59D2  
                                     l10578 6C60                                       l12290 86EE  
                                     l12362 2426                                       l11482 C6A8  
                                     l11466 C566                                       l11650 54EA  
                                     l14114 D856                                       l10588 6CD4  
                                     l11468 C5A4                                       l12268 04D8  
                                     l10860 CDF6                                       l11724 0178  
                                     l11660 5626                                       l11628 1732  
                                     l14220 B76A                                       PRLOCK 0039EF  
                                     l13342 1BB0                                       l10598 6D44  
                                     l11670 587E                                       l11646 54C0  
                                     l11654 55F0                                       l14230 B7A6  
                                     l14142 D9C2                                       l14126 D90C  
                                     l14134 D9BE                                       l12296 871E  
                                     l10848 1AFA                                       l10784 E766  
                                     l10776 E73A                                       l12800 212C  
                                     l13512 EF12                                       l10864 CE36  
                                     l14216 B754                                       l14128 D940  
                                     l13346 1BE2                                       l12706 A22A  
                                     l13530 DA10                                       l10786 E77C  
                                     l10778 E756                                       l11498 D044  
                                     l10882 CF98                                       l11690 5954  
                                     l14242 B7F8                                       l14226 B79A  
                                     l14218 B764                                       l14154 1A92  
                                     l12740 A426                                       l13516 EF88  
                                     l16100 BFF6                                       l11676 58B0  
                                     l14236 B7D0                                       l14164 12CE  
                                     l12726 A320                                       l13542 DA50  
                                     l13606 2096                                       l16006 ADBC  
                                     l10878 CF74                                       l16102 C00E  
                                     l11686 5926                                       l11678 58BA  
                                     l14262 B878                                       l14254 B852  
                                     l14246 B804                                       l13720 F18A  
                                     l16040 9E06                                       l15400 B20A  
                                     l16120 C1A0                                       l16104 C034  
                                     l11696 599E                                       l14176 1306  
                                     l12906 1B36                                       l13722 F190  
                                     l13538 DA3C                                       l14418 9D4E  
                                     l16034 9DCA                                       l13554 0DFA  
                                     l11698 59A6                                       l14442 9638  
                                     l14620 FFC6                                       l13740 F210  
                                     l13724 F19E                                       l13732 F1A6  
                                     l14196 E34E                                       l16028 9D90  
                                     l16300 4322                                       l15420 B3E0  
                                     l15412 B332                                       l14372 0782  
                                     l16140 AFEA                                       l16132 AF5E  
                                     l13644 204A                                       l14284 B9D2  
                                     l14614 FFB6                                       l13734 F1D8  
                                     l13718 F17A                                       l16310 43D0  
                                     l16214 3BF0                                       l15406 B2C8  
                                     l12926 1270                                       l13566 0E30  
                                     l12854 2342                                       l14286 B9FC  
                                     l17030 F4B0                                       l14438 95FC  
                                     l15432 F9B6                                       l15512 F8A4  
                                     l16064 9F5C                                       l16048 9E66  
                                     l16072 9FE2                                       l16320 44F2  
                                     l16216 3C2A                                       l14368 0744  
                                     l12784 E5EA                                       l16144 B084  
                                     l16128 AEC4                                       l17024 F44A  
                                     l13680 1380                                       l13922 2770  
                                     l15370 0C20                                       l15442 FA2C  
                                     l16330 45A8                                       l16234 3DA4  
                                     l16218 3C40                                       l11994 E8C2  
                                     l11986 E856                                       l11978 E80E  
                                     l16138 AFE0                                       l17108 538A  
                                     l17060 4B4E                                       l17052 4A76  
                                     l13748 F28A                                       l15380 0D46  
                                     l15372 0C42                                       l15436 F9DE  
                                     l15620 8FDE                                       l15516 F8BC  
                                     l15508 F892                                       l15452 03AA  
                                     l16252 3F28                                       l16244 3E3C  
                                     l12788 E614                                       l17204 90E0  
                                     l16148 B110                                       l13860 0712  
                                     l13668 1368                                       l13692 F81E  
                                     l13934 23AA                                       l15358 F54C  
                                     l15446 FA76                                       l15438 F9F0  
                                     l15550 10F2                                       l15462 F038  
                                     l15534 F970                                       l15526 F93C  
                                     l15702 1A7C                                       l16414 BEDA  
                                     l16406 BE48                                       l17072 4CA4  
                                     l17056 4AE2                                       l17048 4A22  
                                     l13960 1F52                                       l15384 0D84  
                                     l15616 8FA2                                       l15800 2188  
                                     l15720 1BCA                                       l15704 1AE6  
                                     l16088 A0CC                                       l16344 4724  
                                     l16280 41C2                                       l16256 3F7C  
                                     l16192 3A6E                                       l17216 9156  
                                     l17208 90F4                                       l16408 BE6C  
                                     l13856 0696                                       l13688 F7BC  
                                     l17082 4EF6                                       l17306 148E  
                                     l15474 F06E                                       l15802 21AA  
                                     l15634 1722                                       l16194 3AA8  
                                     l16434 2018                                       l17330 B724  
                                     l17092 5064                                       l17068 4C50  
                                     l15548 10C6                                       l15468 F04E  
                                     l15900 2758                                       l15740 1C6C  
                                     l15732 1C0A                                       l15724 1BF2  
                                     l15708 1B48                                       l16364 48B6  
                                     l16276 418E                                       l16268 40D6  
                                     l16196 3ABE                                       l16604 0986  
                                     l17078 4E7C                                       l15582 8CC0  
                                     l15574 8C76                                       l15742 1C78  
                                     l15726 1C04                                       l15646 1766  
                                     l15654 17BC                                       l16358 485C  
                                     l16374 48DA                                       l16606 09C8  
                                     l17254 93DE                                       l16550 77AE  
                                     l17262 D1F0                                       l17430 0066  
                                     l17096 5086                                       l17088 4FBC  
                                     l15496 F148                                       l15488 F114  
                                     l15816 22A8                                       l15664 1860  
                                     l15672 18CE                                       l16368 48BA  
                                     l16624 0D0E                                       l16616 0CAA  
                                     l16800 3618                                       l17336 B728  
                                     l17512 045E                                       l17504 03F2  
                                     l17432 007A                                       l17424 0040  
                                     l13978 1F92                                       l15586 8CDE  
                                     l15762 1D66                                       l15682 1972  
                                     l15690 19A0                                       l15666 188C  
                                     l17362 D47A                                       l16706 6594  
                                     l17610 09D0                                       l17506 041C  
                                     l17426 0048                                       l15596 8EF0  
                                     l15916 2810                                       l15828 2330  
                                     l15836 239A                                       l15844 2406  
                                     l15852 2518                                       l15668 18A2  
                                     l16716 2978                                       l16548 775A  
                                     l16660 5F80                                       l15758 1D2E  
                                     l16742 2F60                                       l16734 2D60  
                                     l16566 7B12                                       l16670 6266  
                                     l16654 5E4A                                       l17278 D2E4  
                                     l15880 2666                                       l15864 25B0  
                                     l15792 20BE                                       l15768 1DF0  
                                     l15960 BB9C                                       l15952 BB30  
                                     l15936 BA7C                                       l16584 0B08  
                                     l16840 0E64                                       l17376 D5A2  
                                     l16808 3712                                       l16728 2C24  
                                     l16680 6346                                       l16656 5E6A  
                                     l17288 D3BC                                       l17616 09F6  
                                     l17720 1560                                       l17560 06EE  
                                     l15890 2708                                       l15778 1F9C  
                                     l15698 1A0C                                       l15970 BC52  
                                     l16842 0E6C                                       l16906 EC26  
                                     l16658 5F60                                       l17730 159E  
                                     l17706 1508                                       l15956 BB6C  
                                     l16844 0E76                                       l16852 0E8A  
                                     l16932 FDCA                                       l16764 3190  
                                     l16756 30BC                                       l16748 2FE8  
                                     l17652 0C42                                       l17572 07C8  
                                     l15878 264C                                       l15974 BC8E  
                                     l15966 BC26                                       l16846 0E84  
                                     l16854 0EB6                                       l16774 322E  
                                     l16694 64A8                                       l17646 0C20  
                                     l17590 0958                                       l16792 355A  
                                     l16784 32EE                                       l16776 3234  
                                     l17744 15E6                                       l17736 15B0  
                                     l17680 1300                                       l17664 0D42  
                                     l16938 FE7C                                       l16698 64C6  
                                     l17738 15C8                                       l17690 1482  
                                     l15996 ABC6                                       l15988 AB6A  
                                     l16876 F710                                       l16788 34FA  
                                     l17748 160C                                       l17676 129E  
                                     l17692 14AE                                       l17596 096C  
                                     l16886 C976                                       l17758 1662  
                                     l17598 099C                             __end_of___aldiv E060  
                           __end_of___aodiv C44E                                _Volts_to_SOC 0684  
                                     _ADCAP 003EF5                                       _ADACT 003EFE  
                           __end_of___almod E93E                             __end_of___fladd 75A0  
                                     _ADCLK 003EFF                             __end_of___aomod CD8C  
                                     _ADPCH 003EF1                             __end_of___fldiv 81D6  
                                     _ADREF 003EFD                             __end_of___awdiv F162  
                           __end_of___flneg 1C40                                       STR_10 FBB9  
                                     STR_11 FBB9                                       STR_12 FBB9  
                                     STR_20 FBB7                                       STR_13 FBB9  
                                     STR_21 FD95                                       STR_14 FF32  
                                     STR_22 FDAB                                       STR_30 FD7F  
                                     STR_15 FF5C                                       STR_23 FE5B  
                                     STR_31 FE2F                                       STR_32 FF96  
                                     STR_24 FE19                                       STR_16 FD69  
                                     STR_40 FC41                                       STR_41 FD10  
                                     STR_25 FBCE                                       STR_17 FB25  
                             __CFG_WDTE$OFF 000000                                       STR_34 FF84  
                                     STR_42 FCE2                                       STR_18 FBE5  
                                     STR_50 FB3F                                       STR_26 FAD5  
                                     STR_43 FCF9                                       STR_19 FCCB  
                                     STR_35 FCB4                                       STR_51 FB6F  
                                     STR_27 FAF0                                       STR_28 FF76  
                                     STR_60 FE45                                       STR_36 FC9D  
                                     STR_44 FBFC                                       STR_52 FB87  
                           __end_of___awmod F98A                                       STR_29 FEB3  
                                     STR_53 FE87                                       STR_61 FD3D  
                                     STR_37 FC86                                       STR_45 FC13  
                                     STR_70 FAB9                                       STR_54 FE87  
                                     STR_62 FE9D                                       STR_38 FC6F  
                                     STR_46 FC2A                                       STR_71 FAB9  
                                     STR_63 FE03                                       STR_55 FE87  
                                     STR_39 FC58                                       STR_47 FB57  
                                     STR_72 FF76                                       STR_80 FFA7  
                                     STR_56 FE03                                       STR_64 FD53  
                                     STR_48 FB9F                                       _ADRPT 003EEC  
                                     STR_81 FFA7                                       STR_73 FFFC  
                                     STR_65 FDED                                       STR_57 FDD7  
                                     STR_49 FA9B                                       STR_66 FE03  
                                     STR_82 FFA7                                       STR_74 FFB6  
                                     STR_58 FDC1                                       STR_67 FD53  
                                     STR_83 FFA7                                       STR_75 FFCC  
                                     STR_59 FF47                                       STR_76 FF71  
                                     STR_68 FE71                                       STR_84 FB0B  
                           __end_of___lbmod 0D36                                       STR_93 FA75  
                                     STR_77 FF71                                       STR_85 FEC9  
                                     STR_69 FAB9                                       STR_78 FFC2  
                                     STR_86 FEDE                                       STR_94 F9F7  
                                     STR_79 FFC2                                       STR_95 FFDA  
                                     STR_96 FFE2                             __end_of___flmul 6DE4  
                                     STR_99 FFDE                             __end_of___flsub 1DEA  
                           __end_of___fltol E7D8                                       u10400 C652  
                                     u11200 E808                                       u10410 C654  
                                     u10500 D1A6                                       u11220 E836  
                                     u11230 E850                                       u10600 E036  
                                     u10520 DF00                                       u11240 E872  
                                     u10450 D0DE                                       u10507 D198  
                           __end_of___lodiv E4F4                                       u10380 C4FA  
                                     u12060 15E2                                       u10540 DF2E  
                                     u11260 E8EA                                       u11350 D778  
                                     u10550 DF5C                                       u10711 5420  
                                     u10560 DF7E                                       u11280 E914  
                                     u10800 5970                                       u10704 1750  
                                     u12225 1E5E                                       u10457 D0D0  
                                     u10705 174A                                       u10490 D178  
                                     _U1P1H 003DED                                       u12420 16B2  
                                     u11700 8A38                                       u11540 0478  
                                     u12068 15E4                                       u10580 E00C  
                                     u10820 5A44                                       _U1P2H 003DEF  
                                     u12085 1632                                       u11614 8738  
                                     u12350 126C                                       u12086 1634  
                                     u10830 5A46                                       _U1P1L 003DEC  
                                     _U1P3H 003DF1                                       u11615 8732  
                                     u10495 D172                                       _T3CLK 003FA9  
                                     u13320 D9BE                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u10497 D164  
                                     u11545 0472                                       u12505 292C  
                                     u11634 875A                                       u14210 F540  
                                     u12274 E596                                       u12290 294E  
                                     u10850 015A                                       u12506 292E  
                                     _U1P3L 003DF0                                       u11635 8754  
                                     u12275 E590                                       u13331 1A6C  
                                     u13411 131C                                       u15020 208E  
                                     u10860 2986                                       u12620 0DF6  
                                     u10780 58D6                                       u12445 16E6  
                                     u12446 16E8                                       u12438 16B4  
                                     u11654 8940                                       u14230 F5BC  
                                     u14310 B454                                       _U2P1L 003DD4  
                                     u11655 893A                                       u14240 0C70  
                                     u15200 27E4                                       u15120 255A  
                                     u12640 0E2A                                       u13360 12CA  
                                     _T3CON 003FA6                                       _U2P2L 003DD6  
                                     u11674 8A0E                                       u11594 8708  
                                     u14410 F09A                                       u15210 27E6  
                                     u16010 BE1E                                       _U2P3L 003DD8  
                                     u11675 8A08                                       u11595 8702  
                                     u14500 F95C                                       u12590 D9EE  
                                     u11694 8A30                                       u14430 F134  
                                     u11695 8A2A                                       u14247 0C62  
                                     u12495 293C                                       u13391 12F2  
                                     _T5CLK 003F9D                                       u12760 273E  
                                     u14600 8C5C                                       u14360 0424  
                                     u15320 BCB4                                       u15400 AE2C  
                                     u12496 293E                             __end_of___lomod F3E4  
                                     u16130 0AE8                                       u14620 8CAC  
                                     u15180 272E                                       u15340 AB50  
                                     u15500 9F14                                       u15420 9D76  
                                     u17100 0920                                       _T2HLT 003FAD  
                                     u12766 2740                                       u14630 8F04  
                                     u14550 8BD8                                       u16070 7734  
                                     u17110 0922                                       u14367 0416  
                                     u14560 8BDA                                       u14480 F8E8  
                                     u14800 191C                                       u15280 BB92  
                                     u15520 9FDE                                       u16080 7746  
                                     _T5CON 003F9A                                       u14641 8F34  
                                     u14650 8F4A                                       u14810 191E  
                                     u14730 1750                                       u15290 BBD8  
                                     u15530 9FFE                                       u15450 9E5E  
                                     u16250 63DA                                       u14651 8F48  
                                     u15371 ADFE                                       u14660 8F5E  
                                     u14580 8C4A                                       u15380 AE14  
                                     u15460 9EB2                                       u15700 3B06  
                                     u16420 35E2                                       u15381 AE12  
                                     u15541 A02E                                       u15525 9FC0  
                                     u16405 3310                                       u14670 8F62  
                                     u14910 1C3C                                       u15390 AE28  
                                     u15550 A044                                       u15470 9EB4  
                                     u15710 3B08                                       u16430 3690  
                                     u17070 0578                                       u15551 A042  
                                     u16431 368C                                       u14760 180A  
                                     u15560 A058                                       u15720 3B2E  
                                     u16280 2914                                       u15640 AFC8  
                                     u17240 14F8                                       _T6CON 003F94  
                                     u15297 BBCA                                       u14690 8F78  
                                     u14850 1B84                                       u14770 180C  
                                     u15570 A05C                                       u15490 9F12  
                                     u16290 2964                                       u16610 F4F2  
                                     u17250 1512                                       u17090 07F6  
                                     u15820 3E90                                       u16380 322E  
                                     u15660 B110                                       u16460 C936  
                                     u17260 1524                                       u14950 1CBE  
                                     u15750 3C88                                       u15590 BFC8  
                                     u16470 C96C                                       u16550 F426  
                                     u17246 14FA                              __CFG_DEBUG$OFF 000000  
                                     u14880 1BD8                                       u15840 4004  
                                     u15760 3C8A                                       u17256 1514  
                                     u15770 3CB0                                       u17266 1526  
                                     u15940 45FC                                       u16820 929C  
                                     u16628 F4F4                                       u16580 F48C  
                                     u15870 427C                                       u16830 92C6  
                                     u15960 47AC                                       u15880 427E  
                                     u16568 F428                                       u16825 928E  
                                     u16835 92B8                                       _T6HLT 003F95  
                                     u16598 F48E                  _ADCC_ADTI_InterruptHandler 00A1  
                                     u16980 D5F2                                       u16990 D5F4  
                                     _T2TMR 003FAA                                       _U1UIR 003DF8  
                                     _T2RST 003FAF                                       _U1RXB 003DE8  
                                     _U2UIR 003DE0                                       _U2RXB 003DD0  
                                     _U2TXB 003DD2                                       _T6TMR 003F92  
                                     _T6RST 003F97                         ??_UART1_rx_vect_isr 0006  
                                     _ISRPR 0039F1                                       _OSCEN 0039DD  
                                     _TMR3H 003FA5                                       _TMR5H 003F99  
                                     _TMR3L 003FA4                                       _TMR5L 003F98  
                 __end_of_update_adc_result 2064                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                                     _TRISD 003FC5                                       _TRISE 003FC6  
                                     _TRISF 003FC7                                 _Default_ISR 2A50  
                       __size_of_CRC_IsBusy 0010                     __size_of_clear_adc_scan 0006  
                        _current_sensor_cal 9028           __size_of_TMR3_SetInterruptHandler 0028  
                              ___secs_to_tm 28BA           __size_of_TMR6_SetInterruptHandler 0028  
                           __end_of_asctime 86EC                               __CFG_WRTB$OFF 000000  
                          __end_of_TMR3_ISR EC02                               __CFG_WRTC$OFF 000000  
                          _cal_current_zero 0DCE                                       ___gmt F9E7  
                             __CFG_WRTD$OFF 000000                            __end_of_TMR5_ISR DD36  
                           __end_of_getname B172                                _DMA1CON0bits 003BFC  
                          __end_of_TMR6_ISR 2862                                _DMA1CON1bits 003BFD  
                __size_of_send_lcd_data_dma 0046                             _DATAEE_ReadByte 2210  
                                     _fabsf 08AC                             __end_of_getrule C1CE  
                                     _flags 004E                        __size_of_check_range 0080  
                 __size_of_CRC_ReverseValue 00CE                                       _r_cal 0440  
                  __size_of_calc_model_data 045A                                _DMA2CON0bits 003BDC  
                              _DMA2CON1bits 003BDD                __end_of_get_ac_charger_relay 29AA  
                                     _fputc F51C                  __size_of_send_lcd_cmd_long 0040  
                           __end_of_isalpha 1E2E                                       _fputs 0D36  
                           __end_of_isdigit 2302                             __end_of_ivln2_h F9EF  
                                     _put2d F640                          __CFG_MCLRE$EXTMCLR 000000  
                                     _srand 2140                                       _width 004A  
                                     _putch 282E                __end_of_set_ac_charger_relay 2972  
                           __end_of_islower 22A2                             __end_of_isspace 1B0A  
                  _INT1_SetInterruptHandler 251E                             __end_of_set_dac 08AC  
                           __end_of_isupper 22D2                                       pclath 003FFA  
                                     tablat 003FF5                                       ltemp0 002A  
                                     ltemp1 002E                                       ltemp2 0032  
                  __size_of_DMA1_Initialize 006A                                       plusw0 003FEB  
                                     plusw1 003FE3                                       plusw2 003FDB  
                                     ttemp0 002A                                       ttemp1 002D  
                                     ttemp2 0030                                       ttemp3 0033  
                                     ttemp5 002B                                       ttemp6 002E  
                                     ttemp7 0032                                       status 003FD8  
       __end_of_UART1_SetRxInterruptHandler 24A6                 _UART1_SetRxInterruptHandler 247E  
                                     wtemp0 002A                                       wtemp1 002C  
                                     wtemp2 002E                                       wtemp3 0030  
                                     wtemp4 0032                                       wtemp5 0034  
                                     wtemp8 002B                             __end_of_sprintf FBA8  
                           __end_of_tolower 1238                             __end_of_strncmp D1DC  
                           __end_of_toupper 11B4                   __size_of_DMA1_DMADCNT_ISR 000A  
                 __end_of_UART1_rx_vect_isr 25E8                    __size_of_SPI1_Initialize 0016  
                   __end_of_update_cal_data 1AB8                             _TMR5_Initialize 1C88  
                     __end_of_ringBufS_init 2406                             __initialization FBA8  
                         _UART2_rx_vect_isr 2610                               ___localtime_r C908  
                              __end_of_cp_h F9F7                                __end_of_cp_l F9F3  
                              __end_of_atoi C6C2                                __end_of_ctoa 1130  
                              __end_of_main 1676                                __end_of_dtoa 9028  
                              __end_of_nanf 1896                                __end_of_time 1954  
                              __end_of_spin F9DF                                __end_of_stoa BCCE  
                              __end_of_utoa AE76                                __end_of_xtoa A116  
                            __CFG_SAFEN$OFF 000000                          ?_UART2_rx_vect_isr 0001  
                   __end_of_TMR2_Initialize 2892                       __end_of_send_lcd_data 265C  
                  __size_of_DMA2_Initialize 005A                  __end_of_check_enter_button 1498  
                         __end_of_CRC_Start 2A36                    _TMR5_SetInterruptHandler 24CE  
                             __activetblptr 000003                   __size_of_DMA1_DMASCNT_ISR 000E  
                     _TMR3_InterruptHandler 0098                           _port_data_dma_ptr 29D4  
                        esr_check@esr_state 00C6                         ??_UART2_rx_vect_isr 0006  
                                    INTCON0 003FD2        __size_of_UART2_SetRxInterruptHandler 0028  
                            __CFG_MVECEN$ON 000000                             _TMR6_Initialize 23B4  
                           _PWM8_Initialize 28BE                            _UART1_Initialize 1C40  
                         _UART2_tx_vect_isr 25E8                          _UART2_Transmit_ISR 2388  
                                    _ADACCU 003EEA                                      _ADACQH 003EF4  
                                    _ADACQL 003EF3                                      _ADCON0 003EF8  
                                    _ADCON1 003EF9                                      _ADCON2 003EFA  
                                    _ADCON3 003EFB                              _start_adc_scan 176E  
                                    _ADLTHH 003EDF                                      STR_100 FFE6  
                                    _ADLTHL 003EDE                                      STR_103 FFED  
                                    STR_112 FFF0                                      STR_105 FFED  
                                    STR_114 FFF0                                      STR_122 FFF9  
                                    STR_107 FFF3                                      STR_131 FD27  
                                    STR_124 FFF9                                      STR_132 FA76  
                                    STR_109 FFF3                                      STR_117 FFF6  
                                    STR_126 FFEA                                      STR_119 FFF6  
                                    STR_128 FFEA                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 1E2E                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 DC86  
                                    _RB6PPS 003A0E                                      i1l1209 EB6A  
                      _start_switch_handler 2776                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 1D18  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 298E                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl D80E  
     __end_of_ADCC_DischargeSampleCapacitor 2A12      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 2A0A                    __end_of_send_lcd_cmd_dma 27F2  
                           _TMR3_WriteTimer 1F70                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 2638                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 29CA  
                          _UART2_Initialize 1896                                      _WaitMs 210A  
                           _conv_raw_result 86EC                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset BF4E  
                                    ___flge E93E                                      ___fleq 0504  
                                    ___lmul 028C                                      ___omul ED62  
                         _ADCC_ThresholdISR 156C                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E2                              _ringBufS_flush 0EF2  
                                    _efgtoa 1676                                      _getoff CD8C  
                                    _getint FE8C                                      _floorf A48A  
                         dac_spi_control@S0 00CB                           dac_spi_control@S1 00CA  
                         dac_spi_control@S2 00C9                           dac_spi_control@SB 00C7  
                         dac_spi_control@SC 00C8                          ?_ADCC_ThresholdISR 0001  
                                    _memset B172                                      _pclock 00DA  
                      __size_of_help_button 0038                                      clear_0 FC1A  
                                    clear_1 FC2E                                      clear_2 FC40  
                                    clear_3 FC4C                                      clear_4 FC58  
                                    clear_5 FC64                                      clear_6 FC70  
                                    clear_7 FC7C                                      clear_8 FC88  
                                    _t_mbmc 00BC                   __end_of_port_data_dma_ptr 29DE  
                    __size_of_read_cal_data 01CA                                      _printf 17D2  
                        _eaDogM_WriteString 0AB0                     __end_of_DATAEE_ReadByte 2242  
                                    _strcpy 0362                                   ?_ADCC_ISR 0001  
                                    _strlen 0BFA                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 1502  
                            _PMD_Initialize 28EA                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 2610                            __end_of_set_time 210A  
                                    lltemp0 002A                                      lltemp1 0032  
                                    lltemp2 003A                                      lltemp3 0042  
                       ??_ADCC_ThresholdISR 0001                      __end_of_start_adc_scan 17D2  
                              __mediumconst F7AA                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 1A08                            __end_of_spinners FE8C  
                          __end_of_vfprintf 0A06                                  _StartTimer 1EF0  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 1CD0  
                         _SYSTEM_Initialize 1B5C                                  ___daylight 00B8  
                                __accesstop 0060                     __end_of__initialization FC9A  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                      __end_of_display_help 2A22                        __end_of_display_info 2A1A  
                 __end_of_CLKREF_Initialize 29D4                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 1F30  
                     _set_temp_display_help 2952                            _clear_hid_pflags 163E  
                     __end_of_TMR3_CallBack 26C8                   __end_of_ADCC_ThresholdISR 15D6  
                     __end_of_set_hist_flag 2A30                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 0F84                              __pcstackCOMRAM 0001  
                                ___inthi_sp 132C                                  ___intlo_sp 1996  
                              __pidataBANK1 0B56                                __pidataBANK2 05C8  
                             __end_of___gmt F9EB                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf 095A                                   ?_TMR3_ISR 0001  
                                 ?_TMR5_ISR 0001                                   ?_TMR6_ISR 0001  
                          _DATAEE_WriteByte 15D6                              ivt0x8_undefint 00AC  
                             __end_of_fputc F640                               __end_of_fputs 0DCE  
                      _get_ac_charger_relay 299C                               __end_of_put2d F75A  
                             __end_of_srand 2174                       __end_of_TMR5_CallBack 26A4  
                             __end_of_putch 2848                        _set_ac_charger_relay 2962  
                   __end_of_PWM8_Initialize 28D4                     __end_of_TMR6_Initialize 23DE  
                         _adc_int_t_handler FF7E                      __end_of_PMD_Initialize 28FE  
                                __end_of_bp F9E7                                  ___timezone 0070  
                                ??_ADCC_ISR 0001                       __end_of_TMR6_CallBack 2710  
               __size_of_EXT_INT_Initialize 0034                    calc_bsoc@log_update_wait 0050  
                    __size_of_calc_ror_data 0186                               _DMA1_DMAA_ISR 29EC  
                     TMR3_ISR@CountCallBack 00BE                              _clear_adc_scan 2A36  
                        __size_of_hid_input 0138                          __end_of_CRC_IsBusy 2952  
                    __size_of_mode_lamp_dim 0018                            time@current_time 00D2  
                          _CRC_ReverseValue 0436                    _UART2_RxInterruptHandler 00AD  
                 __end_of_SYSTEM_Initialize 1BAA                             __CFG_PR1WAY$OFF 000000  
                           __CFG_IVT1WAY$ON 000000                     __end_of_TMR3_WriteTimer 1FB0  
                                __pbssBANK0 0060                                  __pbssBANK1 01A4  
                                __pbssBANK2 02BC                                  __pbssBANK3 0300  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                    __end_of_update_hist_data 1334  
                                _check_help D3F8                               _read_cal_data D80E  
                   __end_of_conv_raw_result 8BA8                          __size_of_esr_check 02D8  
                     _INT0_InterruptHandler 00B3                                  ??_INT0_ISR 0001  
                                ??_INT1_ISR 0007                       __end_of_days_in_month 176E  
                         __end_of_TimerDone 242E                            _DMA1_DMADCNT_ISR 29E0  
                           _convert_dac_raw F75A                          __size_of_init_bsoc 0246  
                __size_of_UART2_rx_vect_isr 0028                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                        __size_of_lp_filter 01BC                          __size_of_localtime 0016  
                             _init_port_dma 2242                       __end_of_wait_lcd_done 298E  
                  __end_of_cal_current_zero 0E60            __end_of_TMR3_SetInterruptHandler 251E  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 24CE  
                                ??_TMR3_ISR 00E5                     __end_of_ADCC_Initialize 156C  
                                ??_TMR5_ISR 000B                   __end_of_adc_int_t_handler 0000  
                                ??_TMR6_ISR 0006                           __end_of___asfladd 1426  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 2596       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 256E                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 0466                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 2754  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 2A3C                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1213_20 A24C  
                            ?_DMA1_DMAA_ISR 0001                            _DMA1_DMASCNT_ISR 29BC  
                                   u1311_48 26D8                                     _U1ERRIE 003DFA  
                                   u1313_28 266C                          __size_of_set_vterm 001E  
                                   u1322_28 2690                                     _U1ERRIR 003DF9  
                                   u1237_20 29A6                                     u1173_25 296C  
                                   u1173_26 296E                                     _U2ERRIE 003DE2  
                                   _U2ERRIR 003DE1                                     u1248_20 20A4  
                                   u1319_48 26FC                                     u1248_26 20A6  
                                   u1283_24 F280                                     u1283_25 F27C  
                                   u1277_28 F180                                     u1279_20 F19A  
                                   u1279_21 F194                                     u1375_44 FFE6  
                                   u1375_45 FFE0                           _CRC_8BitDataWrite 28FE  
                                   _INT0PPS 003AC0                         __CFG_PWRTS$PWRT_OFF 000000  
                                   _INT1PPS 003AC1                                     u1671_20 4FAC  
                              ?_Default_ISR 0001                                     u1673_20 5076  
                __size_of_UART2_tx_vect_isr 0028                                     u1678_28 26B4  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 1334                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 53A6  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 2330  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 1F70                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 2942  
                __end_of_set_load_relay_two 2932           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data E1EE  
                            ___secs_to_zone 5D18                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 2862                                     __Lparam 0000  
                  __end_of_UART1_Initialize 1C88                           __end_of_hid_input F51C  
                           __size_of_WaitMs 0036                                     ___aldiv DECC  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv C1CE                                     ___almod E7D8  
                                   ___fladd 6DE4                                     ___aomod CB4C  
                                   ___fldiv 7C5C                                     ___awdiv F014  
                                   ___flneg 1BF8                             __size_of___lmul 00D6  
                                   ___awmod F872                             __size_of___omul 015A  
                                   ___lbmod 0C9C                                     ___flmul 65BA  
                                   ___flsub 1DA4                                     ___fltol E666  
                                   ___lodiv E374                                     ___lomod F2A4  
                 __end_of_UART1_Receive_ISR 2776                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display 028C  
                                   __pcinit FBA8                    __end_of_mode_lamp_bright 299C  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 2972                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 2910                                     __ptext0 0000  
                                   __ptext1 12B8                                     __ptext2 1A62  
                                   __ptext3 1954                                     __ptext4 2776  
                                   __ptext5 2140                                     __ptext6 20D4  
                                   __ptext7 2A2A                                     __ptext8 2174  
                                   __ptext9 21A8                           __end_of_esr_check BA10  
                         _UART2_Receive_ISR 2796                                     _asctime 81D6  
                           __size_of_printf 0062                                     _getname AE76  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule BF4E  
                                   _dst_off 00B6                       _OSCILLATOR_Initialize 28D4  
                              __size_of_abs 0046                                __size_of_pad 0114  
                                   us821999 C438                           __end_of_init_bsoc C908  
                                   _isalpha 1DEA                                     _isdigit 22D2  
                                   us832999 CD7A                                     us809999 EEA6  
                                   _ivln2_h F9EB                                     us922999 F3D4  
                                   us917999 E4DE                                   _T3CONbits 003FA6  
                                   _mode_sw 00CC                           __end_of_lp_filter DB94  
                         __end_of_localtime 28A8                                     _islower 2272  
                                   _isspace 1AB8                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 1FEE                                   _T5CONbits 003F9A  
                                   _set_dac 07F6                    __end_of_UART2_Initialize 18F6  
                                   _isupper 22A2                                   _CRC_Start 2A30  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf FA9E                                     _tolower 11B4  
                     __size_of_display_help 0008                                     _utctime 01D7  
                   __end_of_convert_dac_raw F872                       __size_of_display_info 0008  
                                   _strncmp CFBC                                     _toupper 1130  
                      end_of_initialization FC9A                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 1426  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 21DC  
                         __end_of_set_dac_b 21A8                      __end_of___secs_to_zone 65BA  
                                 i1u1700_20 EB60         __end_of_UART2_SetRxInterruptHandler 247E  
               _UART2_SetRxInterruptHandler 2456                     check_day_time@day_delay 0051  
                                 i2u1380_48 15A2                                   i2u1380_49 15B6  
                         __end_of_set_vterm 2810                                   i2u1382_48 25D4  
                                 i2u1384_48 25FC                                   i2u1386_48 2624  
                                 i2u1378_48 2374                           __end_of_vfpfcnvrt 4938  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 FD96  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 2A48                   __end_of_UART2_Receive_ISR 27B6  
                            wdtdelay@dcount 0090                     __end_of_dac_spi_control 13AE  
               __size_of_current_sensor_cal 0474                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00B0  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 2A4E  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 24F6  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 24A6  
                              _display_help 2A1A                       _TMR5_InterruptHandler 009B  
                              _display_info 2A12        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 16A4                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 25BE                 _ADCC_SetADIInterruptHandler 2596  
                                asctime@buf 03C4                                  _update_lcd EC02  
                           _calc_model_data 9902                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 1954  
                  __end_of_DATAEE_WriteByte 163E                             _DMA1_Initialize 1498  
                       __end_of_check_range 12B8                                  _start_bsoc 2732  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 28A8                       __end_of_get_vterm_ptr 2330  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 02DA                    __end_of_CRC_ReverseValue 0504  
                            __end_of_WaitMs 2140                __end_of_INTERRUPT_Initialize 170A  
                                _vterm_dump E060                              __end_of___flge EAA0  
                            __end_of___fleq 05C8        __end_of_INT0_DefaultInterruptHandler 2A5C  
     __size_of_INT0_DefaultInterruptHandler 0002                _INT0_DefaultInterruptHandler 2A5A  
                __size_of_UART1_Receive_ISR 0022                             _DMA2_Initialize 1A08  
                            __end_of___lmul 0362                              __end_of___omul EEBC  
                             __pidataBIGRAM A7F6                              _load_hist_data 949C  
                            __end_of_efgtoa 28BA                  __size_of_CRC_8BitDataWrite 0012  
                         __size_of_TMR3_ISR 0162                              __end_of_getoff CFBC  
                         __size_of_TMR5_ISR 01A2                              __end_of_getint FF7E  
                         __size_of_TMR6_ISR 001A                         __size_of_check_help 0212  
                            __end_of_floorf A7F6                 __size_of_UART2_Transmit_ISR 002C  
                                floorf@F524 0074                              __end_of_memset B45E  
__end_of___month_to_secs@secs_through_month F8AB          ___month_to_secs@secs_through_month F87B  
                            __end_of_printf 1834                    __end_of_DMA1_DMADCNT_ISR 29EA  
               __size_of_PWM8_LoadDutyValue 0042                       __end_of_INT0_CallBack 26EC  
                            __end_of_strcpy 0436                              __end_of_strlen 0C9C  
                       start_initialization FBA8                     __size_of_write_cal_data 0158  
      __end_of_TMR5_DefaultInterruptHandler 20D4       __size_of_TMR5_DefaultInterruptHandler 0038  
              _TMR5_DefaultInterruptHandler 209C             __size_of_PIN_MANAGER_Initialize 0092  
                               __end_of_abs 1DA4                       __end_of_INT1_CallBack 2680  
                 __size_of_set_display_info 001E                                 __end_of_pad FA9E  
                      __size_of_Default_ISR 0006                     __size_of_CRC_Initialize 0092  
                            ___year_to_secs 53A6                        __end_of_send_lcd_cmd 1EF0  
                            _switch_handler F162               __size_of_ADCC_StartConversion 0012  
                                ivt0x8_base 0008                               _uart1RxBuffer 02D6  
                     __end_of___fpclassifyf DECC                               _uart2RxBuffer 0600  
                  __end_of_DMA1_DMASCNT_ISR 29CA                               _uart2TxBuffer 0400  
                            _DMA1_DMAOR_ISR 29F8                         __end_of_hid_display D3F8  
                __end_of_send_port_data_dma 1B5C                            __CFG_LPBOREN$OFF 000000  
                     __size_of_init_display 00EA                 __size_of_eaDogM_WriteString 00A6  
           __end_of_CRC_CalculatedResultGet E666                                   _TimerDone 2406  
                             _ringBufS_init 23DE                      __end_of_load_hist_data 9902  
                               __pdataBANK1 0100                                 __pdataBANK2 0200  
                __size_of_UART2_Receive_ISR 0020                         __size_of_get_switch 002C  
                __end_of_EXT_INT_Initialize 2210                    __size_of_update_cal_data 0056  
                   __end_of_calc_model_data 9D5C                               _send_lcd_data 2638  
                       __end_of_help_button 209C             __end_of_eaDogM_WriteStringAtPos 0EF2  
                       __end_of_BVSOC_TABLE F87B                                   ___asfladd 13AE  
                      calc_model_data@bcror 0088                                 __pbssBIGRAM 0A3F  
                   __end_of_DMA1_Initialize 1502                        calc_model_data@bvror 008C  
                               __pbssCOMRAM 004A                                 _check_range 1238  
          __end_of_INT0_SetInterruptHandler 256E                      __end_of___year_to_secs 5D18  
                             __pcstackBANK0 00E5                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler F2A4  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                    __size_of_set_hist_flag 0006                           __size_of___xxtofl 0204  
                   __end_of_SPI1_Initialize 28BE                    _UART1_RxInterruptHandler 00A7  
                  _UART2_TxInterruptHandler 00AA                                   __end_of_T F967  
                          _convert_adc_data 073E                                   _calc_bsoc 4938  
                 __size_of_ringBufS_put_dma 00AA                                _init_display 01A2  
                    __end_of_DMA1_DMAOR_ISR 2A02                      __size_of_TMR5_CallBack 0024  
                         __size_of_do_tzset 0280                       _TMR6_InterruptHandler 009E  
                        calc_ror_data@bcror 0080                      __size_of_TMR6_CallBack 0024  
                   __end_of_DMA2_Initialize 1A62                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 0F84                       __end_of___localtime_r CB4C  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 2A42  
                       __size_of_scan_trans 003C                               __pmediumconst F7AA  
                                 __ptext100 E374                                   __ptext101 CFBC  
                                 __ptext110 1BF8                                   __ptext102 BA10  
                                 __ptext111 0504                                   __ptext103 1676  
                                 __ptext200 4938                                   __ptext120 0BFA  
                                 __ptext112 F872                                   __ptext104 11B4  
                                 __ptext201 1B0A                                   __ptext121 0D36  
                                 __ptext113 F014                                   __ptext105 22A2  
                                 __ptext210 2A5C                                   __ptext202 29D4  
                                 __ptext130 2810                                   __ptext122 F51C  
                                 __ptext114 8BA8                                   __ptext106 0362  
                                 __ptext211 2A5E                                   __ptext203 13AE  
                                 __ptext131 2862                                   __ptext123 282E  
                                 __ptext115 1D5E                                   __ptext107 A48A  
                                 __ptext220 26EC                                   __ptext212 156C  
                                 __ptext204 29AC                                   __ptext140 E1EE  
                                 __ptext132 298E                                   __ptext124 0A06  
                                 __ptext116 CB4C                                   __ptext108 DD36  
                                 __ptext221 1BAA                                   __ptext213 25C0  
                                 __ptext205 26C8                                   __ptext141 08AC  
                                 __ptext133 1E2E                                   __ptext125 C44E  
                                 __ptext117 C1CE                                   __ptext109 E666  
                                 __ptext222 29BC                                   __ptext214 2754  
                                 __ptext206 2A5A                                   __ptext150 2732  
                                 __ptext142 86EC                                   __ptext134 2064  
                                 __ptext126 1AB8                                   __ptext118 10A8  
                                 __ptext223 29E0                                   __ptext215 25E8  
                                 __ptext207 2A50                                   __ptext151 D9D8  
                                 __ptext143 1834                                   __ptext135 2406  
                                 __ptext127 22D2                                   __ptext119 F98A  
                                 __ptext224 29EC                                   __ptext216 2388  
                                 __ptext208 235C                                   __ptext160 247E  
                                 __ptext152 1DA4                                   __ptext144 2710  
                                 __ptext136 1EF0                                   __ptext128 27F2  
                                 __ptext225 29F8                                   __ptext217 2610  
                                 __ptext209 FF7E                                   __ptext161 23B4  
                                 __ptext153 6DE4                                   __ptext145 D60A  
                                 __ptext137 2A12                                   __ptext129 2952  
                                 __ptext226 0000                                   __ptext218 2796  
                                 __ptext170 28EA                                   __ptext162 24A6  
                                 __ptext154 65BA                                   __ptext146 7C5C  
                                 __ptext138 2A1A                                   __ptext219 2848  
                                 __ptext171 0F84                                   __ptext163 1C88  
                                 __ptext155 1B5C                                   __ptext147 E93E  
                                 __ptext139 1426                                   __ptext180 1016  
                                 __ptext172 28D4                                   __ptext164 24CE  
                                 __ptext156 1896                                   __ptext148 9902  
                                 __ptext181 29CA                                   __ptext173 16A4  
                                 __ptext165 1CD0                                   __ptext157 242E  
                                 __ptext149 2A48                                   __ptext190 1F30  
                                 __ptext182 1502                                   __ptext174 2A22  
                                 __ptext166 24F6                                   __ptext158 2456  
                                 __ptext191 2680                                   __ptext183 256E  
                                 __ptext175 21DC                                   __ptext167 287A  
                                 __ptext159 1C40                                   __ptext192 209C  
                                 __ptext184 2596                                   __ptext176 251E  
                                 __ptext168 28A8                                   __ptext193 A116  
                                 __ptext185 1FB0                                   __ptext177 2546  
                                 __ptext169 28BE                                   __ptext194 2962  
                                 __ptext186 265C                                   __ptext178 1A08  
                                 __ptext195 299C                                   __ptext187 2A56  
                                 __ptext179 1498                                   __ptext196 EAA0  
                                 __ptext188 F162                                   __ptext197 1F70  
                                 __ptext189 DB94                                   __ptext198 26A4  
                                 __ptext199 2A58                           __size_of_set_time 0036  
                                 _hid_input F3E4                          __end_of_StartTimer 1F30  
                        _set_load_relay_one 2932                          _set_load_relay_two 2922  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 235C  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check B738  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc C6C2                      __size_of_wait_lcd_done 000E  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter D9D8  
                                 _localtime 2892                                 _hid_display D1DC  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 16A4                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 29AC                                    _INT1_ISR 1FB0  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 21A8  
                                 _set_dac_b 2174                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 26A4  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 2A2A  
                                 _set_vterm 27F2                         __size_of_update_lcd 0160  
                               _help_button 2064                                    _TMR3_ISR EAA0  
                               _BVSOC_TABLE F7AB                                    _TMR5_ISR DB94  
                                  _TMR6_ISR 2848          __end_of___secs_to_tm@days_in_month F8B7  
                ___secs_to_tm@days_in_month F8AB                                   _port_data 06FF  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 398C  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 2680                                  _ADCON0bits 003EF8  
                                 _zi_read32 FCA0                          __end_of_check_help D60A  
                                 _start_lcd 2A42                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 26EC  
                            _write_cal_data EEBC                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 2A48  
                          _set_display_info 2810                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 1016  
                               _INTCON0bits 003FD2                                   copy_data0 FBBC  
                                 copy_data1 FBE2                                   copy_data2 FC04  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 2546  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 2456  
               _UART2_SetTxInterruptHandler 242E                               _days_in_month 170A  
                              _uart1RxCount 00D0                                _uart2RxCount 00CD  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 949C  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 2980  
                              _send_lcd_cmd 1EB0                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 2A5E  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 235C  
                      __end_of_rule_to_secs 7C5C                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data F014                       __end_of_DMA1_DMAA_ISR 29F6  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl D60A                      __end_of_CRC_Initialize 10A8  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 2980                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 F75A                                    __ptext11 07F6  
                                  __ptext20 1EB0                                    __ptext12 1334  
                                  __ptext21 19AE                                    __ptext13 D80E  
                                  __ptext30 2A02                                    __ptext22 27B6  
                                  __ptext14 2210                                    __ptext31 2922  
                                  __ptext23 23DE                                    __ptext15 949C  
                                  __ptext40 FCA0                                    __ptext32 2932  
                                  __ptext24 C6C2                                    __ptext16 2242  
                                  __ptext41 75A0                                    __ptext33 2972  
                                  __ptext25 0684                                    __ptext17 01A2  
                                  __ptext50 28BA                                    __ptext42 170A  
                                  __ptext34 B45E                                    __ptext26 D1DC  
                                  __ptext18 2638                                    __ptext51 ED62  
                                  __ptext43 53A6                                    __ptext35 18F6  
                                  __ptext27 F3E4                                    __ptext19 1E70  
                                  __ptext60 15D6                                    __ptext52 028C  
                                  __ptext44 00B6                                    __ptext36 2892  
                                  __ptext28 B738                                    __ptext61 2A30  
                                  __ptext53 E7D8                                    __ptext45 BCCE  
                                  __ptext37 C908                                    __ptext29 202A  
                                  __ptext70 2330                                    __ptext62 2942  
                                  __ptext54 DECC                                    __ptext46 BF4E  
                                  __ptext38 5D18                                    __ptext71 2A36  
                                  __ptext63 E4F4                                    __ptext55 81D6  
                                  __ptext47 CD8C                                    __ptext39 1FEE  
                                  __ptext80 210A                                    __ptext72 0DCE  
                                  __ptext64 0436                                    __ptext56 F640  
                                  __ptext48 FE8C                                    __ptext81 EC02  
                                  __ptext73 1238                                    __ptext65 28FE  
                                  __ptext57 0C9C                                    __ptext49 AE76  
                                  __ptext90 B172                                    __ptext82 0E60  
                                  __ptext74 073E                                    __ptext66 176E  
                                  __ptext58 9028                                    __ptext91 17D2  
                                  __ptext83 27D4                                    __ptext75 163E  
                                  __ptext67 2910                                    __ptext59 EEBC  
                                  __ptext92 095A                                    __ptext84 2980  
                                  __ptext76 D3F8                                    __ptext68 2A0A  
                                  __ptext93 398C                                    __ptext85 1D18  
                                  __ptext77 E060                                    __ptext69 FD96  
                                  __ptext94 9D5C                                    __ptext86 0AB0  
                                  __ptext78 FA9E                                    __ptext95 1130  
                                  __ptext87 2A3C                                    __ptext79 2302  
                                  __ptext96 2272                                    __ptext88 2A42  
                                  __ptext97 1DEA                                    __ptext89 0EF2  
                                  __ptext98 AB36                                    __ptext99 F2A4  
                          __size_of_isupper 0030                                    _do_tzset BCCE  
                     __end_of_read_cal_data D9D8                            __size_of_sprintf 010A  
                          __size_of_tolower 0084                                    us1158999 1946  
                                  us1523999 BA22                                    us1612999 7C46  
                                  us1454999 8BC2                                    us1535999 AB9C  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                                  us1544999 9DDC                            _ringBufS_put_dma 0A06  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 073E  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 1676                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 2942  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 2272                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 398C                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time 20D4                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 2922                          __end_of_scan_trans 202A  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 19AE                  __end_of_UART2_Transmit_ISR 23B4  
                                  _spinners FD96                                    _vfprintf 095A  
                  __end_of_convert_adc_data 07F6                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 1E70        __end_of_TMR3_DefaultInterruptHandler 2A5A  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 2A58  
      __end_of_INT1_DefaultInterruptHandler 2A58       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 2A56                          _send_port_data_dma 1B0A  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00D1                              _get_raw_result 2710  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00CF  
                               _uart2RxTail 00CE                                   spinners@s 01CD  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 2A3C                          _EXT_INT_Initialize 21DC  
      __end_of_TMR6_DefaultInterruptHandler 1BF8       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 1BAA                           _send_lcd_data_dma 1D18  
      __end_of_ADCC_DefaultInterruptHandler 2A5E       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 2A5C                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs 00B6  
                         _send_lcd_cmd_long 1E70              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 2962                       __end_of_calc_ror_data E374  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 0B56  
                     __end_of_mode_lamp_dim 287A                     __end_of_adc_int_handler 2A60  
                  __size_of_convert_dac_raw 0118                             _display_history B45E  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd ED62                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 19AE                          __end_of_start_bsoc 2754  
                            _FVR_Initialize 2A22                      __end_of_get_raw_result 2732  
                          _send_lcd_cmd_dma 27D4                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00C2            __end_of_INT1_SetInterruptHandler 2546  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 1D5E                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet E4F4                   __end_of_send_lcd_cmd_long 1EB0  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 2A56  
            __end_of_PIN_MANAGER_Initialize 1016                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump E1EE                     _eaDogM_WriteStringAtPos 0E60  
                             _get_vterm_ptr 2302                              _check_adc_scan 2A02  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
