

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 00:50:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=4,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=4,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=4,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   227                           	psect	text204,global,reloc=4,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=4,class=CODE,delta=1
   231                           	psect	text208,global,reloc=4,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	text212,global,reloc=4,class=CODE,delta=1
   236                           	psect	text213,global,reloc=4,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=4,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=4,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=4,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=4,class=CODE,delta=1
   246                           	psect	text223,global,reloc=4,class=CODE,delta=1
   247                           	psect	text224,global,reloc=4,class=CODE,delta=1
   248                           	psect	text225,global,reloc=4,class=CODE,delta=1
   249                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   250                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   251                           	psect	text226,global,reloc=4,class=CODE,delta=1
   252                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   253                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   254  0000                     
   255                           ; Version 2.10
   256                           ; Generated 31/07/2019 GMT
   257                           ; 
   258                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   259                           ; All rights reserved.
   260                           ; 
   261                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   262                           ; 
   263                           ; Redistribution and use in source and binary forms, with or without modification, are
   264                           ; permitted provided that the following conditions are met:
   265                           ; 
   266                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   267                           ;        conditions and the following disclaimer.
   268                           ; 
   269                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   270                           ;        of conditions and the following disclaimer in the documentation and/or other
   271                           ;        materials provided with the distribution.
   272                           ; 
   273                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   274                           ;        software without specific prior written permission.
   275                           ; 
   276                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   277                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   278                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   279                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   280                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   281                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   282                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   283                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   284                           ; 
   285                           ; 
   286                           ; Code-generator required, PIC18F57K42 Definitions
   287                           ; 
   288                           ; SFR Addresses
   289  0000                     
   290 ;;_main$4041	offset	0
   291 ;;_main$4037	offset	2
   292 ;;_i_esr	offset	4
   293 ;;_esr_temp	offset	6
   294 ;;_i_esr	offset	10
   295 ;;_shape	offset	12
   296 ;;_inp_index	offset	13
   297 ;;_k	offset	14
   298 ;;_j	offset	15
   299 ;;_i	offset	16
   300 ;;_mode	offset	17
   301 ;;_i_ror	offset	18
   302 ;;_mode	offset=-1 (param)
   303 ;;_hist	offset=-3 (param)
   304 ;;_s	offset=-2 (param)
   305 ;;_t	offset=-8 (param)
   306 ;;_voltage	offset=-4 (param)
   307 ;;_voltage	offset=-4 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_set	offset=-1 (param)
   310 ;;_x	offset	0
   311 ;;_r_cal_ptr	offset	2
   312 ;;_y	offset	4
   313 ;;_crcVal_save	offset	6
   314 ;;_bAdd	offset=-2 (param)
   315 ;;_esr_rescale	offset	0
   316 ;;_data	offset=-1 (param)
   317 ;;_cmd	offset=-1 (param)
   318 ;;_cmd	offset=-1 (param)
   319 ;;_delay	offset=-4 (param)
   320 ;;_data	offset=-1 (param)
   321 ;;__this	offset=-2 (param)
   322 ;;_soc	offset	0
   323 ;;_slot	offset	2
   324 ;;_cvoltage	offset=-4 (param)
   325 ;;_h	offset=-2 (param)
   326 ;;_h	offset=-2 (param)
   327 ;;_fsm	offset=-1 (param)
   328 ;;_mode	offset=-1 (param)
   329 ;;_mode	offset=-1 (param)
   330 ;;_cmd	offset=-1 (param)
   331 ;;_t	offset=-8 (param)
   332 ;;_t	offset=-1 (param)
   333 ;;_t	offset=-1 (param)
   334 ;;_tm	offset=-3 (param)
   335 ;;_y	offset	0
   336 ;;_t1	offset	8
   337 ;;_t0	offset	16
   338 ;;_t	offset=-8 (param)
   339 ;;_local	offset=-10 (param)
   340 ;;_isdst	offset=-12 (param)
   341 ;;_offset	offset=-14 (param)
   342 ;;_oppoff	offset=-16 (param)
   343 ;;_zonename	offset=-18 (param)
   344 ;;_t	offset=-8 (param)
   345 ;;_local	offset=-10 (param)
   346 ;;_alt	offset=-12 (param)
   347 ;;_z	offset=-2 (param)
   348 ;;_days	offset	0
   349 ;;_wday	offset	2
   350 ;;_t	offset	4
   351 ;;_is_leap	offset	12
   352 ;;_n	offset	14
   353 ;;_x	offset	16
   354 ;;_m	offset	18
   355 ;;_d	offset	20
   356 ;;_rule	offset=-6 (param)
   357 ;;_year	offset=-8 (param)
   358 ;;_m	offset=-2 (param)
   359 ;;_is_leap	offset=-4 (param)
   360 ;;_y	offset	0
   361 ;;_leaps	offset	2
   362 ;;_rem	offset	4
   363 ;;F5	offset	6
   364 ;;_centuries	offset	8
   365 ;;_leaps	offset	10
   366 ;;_cycles	offset	12
   367 ;;_year	offset=-8 (param)
   368 ;;_is_leap	offset=-10 (param)
   369 ;;_t	offset	0
   370 ;;_month	offset=-2 (param)
   371 ;;_is_leap	offset=-4 (param)
   372 ;;_s	offset	0
   373 ;;_r	offset	0
   374 ;;_p	offset=-2 (param)
   375 ;;_rule	offset=-4 (param)
   376 ;;_off	offset	0
   377 ;;_neg	offset	2
   378 ;;_p	offset=-2 (param)
   379 ;;_x	offset	0
   380 ;;_p	offset=-2 (param)
   381 ;;_i	offset	0
   382 ;;_d	offset=-2 (param)
   383 ;;_p	offset=-4 (param)
   384 ;;___secs_to_tm$7651	offset	0
   385 ;;_years	offset	1
   386 ;;_days	offset	9
   387 ;;_secs	offset	17
   388 ;;_remdays	offset	25
   389 ;;_q_cycles	offset	29
   390 ;;_c_cycles	offset	33
   391 ;;_remyears	offset	37
   392 ;;_remsecs	offset	41
   393 ;;_qc_cycles	offset	45
   394 ;;_months	offset	49
   395 ;;_leap	offset	51
   396 ;;_yday	offset	53
   397 ;;_wday	offset	55
   398 ;;_t	offset=-8 (param)
   399 ;;_tm	offset=-10 (param)
   400 ;;_product	offset	0
   401 ;;_multiplier	offset=-8 (param)
   402 ;;_multiplicand	offset=-16 (param)
   403 ;;_product	offset	0
   404 ;;_multiplier	offset=-4 (param)
   405 ;;_multiplicand	offset=-8 (param)
   406 ;;_sign	offset	0
   407 ;;_counter	offset	1
   408 ;;_dividend	offset=-4 (param)
   409 ;;_divisor	offset=-8 (param)
   410 ;;_quotient	offset	0
   411 ;;_sign	offset	4
   412 ;;_counter	offset	5
   413 ;;_dividend	offset=-4 (param)
   414 ;;_divisor	offset=-8 (param)
   415 ;;_cp	offset	0
   416 ;;_s	offset	2
   417 ;;_tim	offset=-2 (param)
   418 ;;_cp	offset=-2 (param)
   419 ;;_i	offset=-3 (param)
   420 ;;_cl	offset=-4 (param)
   421 ;;_ct	offset=-5 (param)
   422 ;;_rem	offset	0
   423 ;;_counter	offset	1
   424 ;;_dividend	offset=-1 (param)
   425 ;;_divisor	offset=-2 (param)
   426 ;;_cp	offset	0
   427 ;;_cb	offset	4
   428 ;;_x	offset	8
   429 ;;_x	offset	0
   430 ;;_r_cal_ptr	offset	2
   431 ;;_y	offset	4
   432 ;;_crcVal	offset	6
   433 ;;_GIEBitValue	offset	0
   434 ;;_bAdd	offset=-2 (param)
   435 ;;_bData	offset=-3 (param)
   436 ;;_result	offset	0
   437 ;;_mask	offset	2
   438 ;;_reverse	offset=-1 (param)
   439 ;;_xorValue	offset=-3 (param)
   440 ;;_mask	offset	0
   441 ;;_reverse	offset	2
   442 ;;_crc	offset=-2 (param)
   443 ;;_data	offset=-1 (param)
   444 ;;_channel	offset=-1 (param)
   445 ;;_c	offset	0
   446 ;;_shape	offset=-1 (param)
   447 ;;_reset	offset=-2 (param)
   448 ;;_i	offset=-1 (param)
   449 ;;_mode	offset=-1 (param)
   450 ;;_cb	offset=-3 (param)
   451 ;;_cp	offset=-5 (param)
   452 ;;_value	offset=-2 (param)
   453 ;;_window	offset=-4 (param)
   454 ;;_standard	offset=-6 (param)
   455 ;;_i	offset	0
   456 ;;_h	offset=-2 (param)
   457 ;;_flipper	offset=-1 (param)
   458 ;;_f	offset	0
   459 ;;_ap	offset	6
   460 ;;_s	offset=-3 (param)
   461 ;;_fmt	offset=-5 (param)
   462 ;;_line	offset=-1 (param)
   463 ;;_vterm	offset=-2 (param)
   464 ;;_numMilliseconds	offset=-2 (param)
   465 ;;_vterm	offset=-1 (param)
   466 ;;_row	offset	0
   467 ;;_r	offset=-1 (param)
   468 ;;_c	offset=-2 (param)
   469 ;;_strPtr	offset=-4 (param)
   470 ;;_strPtr	offset=-1 (param)
   471 ;;_strPtr	offset=-1 (param)
   472 ;;_strPtr	offset=-2 (param)
   473 ;;__this	offset=-2 (param)
   474 ;;_clearBuffer	offset=-3 (param)
   475 ;;_s	offset	0
   476 ;;_k	offset	2
   477 ;;_dest	offset=-2 (param)
   478 ;;_c	offset=-4 (param)
   479 ;;_n	offset=-6 (param)
   480 ;;_ap	offset	0
   481 ;;_fmt	offset=-3 (param)
   482 ;;_cfmt	offset	0
   483 ;;_fp	offset=-2 (param)
   484 ;;_fmt	offset=-4 (param)
   485 ;;_ap	offset=-6 (param)
   486 ;;_vfpfcnvrt$6692	offset	0
   487 ;;_vfpfcnvrt$6703	offset	2
   488 ;;_vfpfcnvrt$6691	offset	4
   489 ;;_llu	offset	6
   490 ;;_ll	offset	14
   491 ;;_f	offset	22
   492 ;;_ct	offset	26
   493 ;;_cp	offset	29
   494 ;;_c	offset	31
   495 ;;_fp	offset=-2 (param)
   496 ;;_fmt	offset=-4 (param)
   497 ;;_ap	offset=-6 (param)
   498 ;;_xtoa$6677	offset	0
   499 ;;_xtoa$6676	offset	2
   500 ;;_n	offset	4
   501 ;;_c	offset	12
   502 ;;_i	offset	14
   503 ;;_w	offset	16
   504 ;;_p	offset	18
   505 ;;_fp	offset=-2 (param)
   506 ;;_d	offset=-10 (param)
   507 ;;_x	offset=-11 (param)
   508 ;;_toupper$7618	offset	0
   509 ;;_c	offset=-2 (param)
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_n	offset	0
   513 ;;_i	offset	8
   514 ;;_w	offset	10
   515 ;;_p	offset	12
   516 ;;_fp	offset=-2 (param)
   517 ;;_d	offset=-10 (param)
   518 ;;_counter	offset	0
   519 ;;_dividend	offset=-8 (param)
   520 ;;_divisor	offset=-16 (param)
   521 ;;_quotient	offset	0
   522 ;;_counter	offset	8
   523 ;;_dividend	offset=-8 (param)
   524 ;;_divisor	offset=-16 (param)
   525 ;;_r	offset	0
   526 ;;_l	offset	2
   527 ;;__l	offset=-2 (param)
   528 ;;__r	offset=-4 (param)
   529 ;;_n	offset=-6 (param)
   530 ;;_nuls	offset	0
   531 ;;_l	offset	7
   532 ;;_p	offset	9
   533 ;;_cp	offset	11
   534 ;;_w	offset	13
   535 ;;_i	offset	15
   536 ;;_fp	offset=-2 (param)
   537 ;;_s	offset=-4 (param)
   538 ;;_efgtoa$6649	offset	0
   539 ;;_efgtoa$6648	offset	2
   540 ;;_efgtoa$6647	offset	4
   541 ;;_efgtoa$6643	offset	6
   542 ;;_efgtoa$6639	offset	8
   543 ;;_efgtoa$6638	offset	10
   544 ;;_u	offset	12
   545 ;;_g	offset	16
   546 ;;_l	offset	20
   547 ;;_h	offset	24
   548 ;;_ou	offset	28
   549 ;;_n	offset	32
   550 ;;_e	offset	34
   551 ;;_i	offset	36
   552 ;;_w	offset	38
   553 ;;_p	offset	40
   554 ;;_sign	offset	42
   555 ;;_d	offset	44
   556 ;;_ne	offset	46
   557 ;;_m	offset	48
   558 ;;_pp	offset	50
   559 ;;_t	offset	52
   560 ;;_mode	offset	54
   561 ;;_nmode	offset	55
   562 ;;_fp	offset=-2 (param)
   563 ;;_f	offset=-6 (param)
   564 ;;_c	offset=-7 (param)
   565 ;;_tolower$7603	offset	0
   566 ;;_c	offset=-2 (param)
   567 ;;_c	offset=-2 (param)
   568 ;;_d	offset	0
   569 ;;_s	offset	2
   570 ;;_dest	offset=-2 (param)
   571 ;;_src	offset=-4 (param)
   572 ;;_u	offset	0
   573 ;;_m	offset	4
   574 ;;_e	offset	8
   575 ;;_x	offset=-4 (param)
   576 ;;_u	offset	0
   577 ;;_e	offset	4
   578 ;;_x	offset=-4 (param)
   579 ;;_exp1	offset	0
   580 ;;_sign1	offset	1
   581 ;;_f1	offset=-4 (param)
   582 ;;_f1	offset=-4 (param)
   583 ;;_ff1	offset=-4 (param)
   584 ;;_ff2	offset=-8 (param)
   585 ;;_sign	offset	0
   586 ;;_counter	offset	1
   587 ;;_dividend	offset=-2 (param)
   588 ;;_divisor	offset=-4 (param)
   589 ;;_quotient	offset	0
   590 ;;_sign	offset	2
   591 ;;_counter	offset	3
   592 ;;_dividend	offset=-2 (param)
   593 ;;_divisor	offset=-4 (param)
   594 ;;_dtoa$6615	offset	0
   595 ;;_n	offset	2
   596 ;;_i	offset	10
   597 ;;_s	offset	12
   598 ;;_w	offset	14
   599 ;;_p	offset	16
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_a	offset=-2 (param)
   603 ;;_sign	offset	0
   604 ;;_counter	offset	1
   605 ;;_dividend	offset=-8 (param)
   606 ;;_divisor	offset=-16 (param)
   607 ;;_quotient	offset	0
   608 ;;_sign	offset	8
   609 ;;_counter	offset	9
   610 ;;_dividend	offset=-8 (param)
   611 ;;_divisor	offset=-16 (param)
   612 ;;_w	offset	0
   613 ;;_fp	offset=-2 (param)
   614 ;;_c	offset=-3 (param)
   615 ;;_w	offset	0
   616 ;;_i	offset	2
   617 ;;_fp	offset=-2 (param)
   618 ;;_buf	offset=-4 (param)
   619 ;;_p	offset=-6 (param)
   620 ;;_a	offset	0
   621 ;;_s	offset=-2 (param)
   622 ;;_i	offset	0
   623 ;;_c	offset	2
   624 ;;_s	offset=-2 (param)
   625 ;;_fp	offset=-4 (param)
   626 ;;_c	offset=-2 (param)
   627 ;;_fp	offset=-4 (param)
   628 ;;_c	offset=-1 (param)
   629 ;;__this	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_atoi$7235	offset	0
   632 ;;_atoi$7233	offset	2
   633 ;;_atoi$7234	offset	4
   634 ;;_n	offset	5
   635 ;;_neg	offset	7
   636 ;;_s	offset=-2 (param)
   637 ;;_isspace$7284	offset	0
   638 ;;_c	offset=-2 (param)
   639 ;;_c	offset=-2 (param)
   640 ;;_vterm	offset=-1 (param)
   641 ;;_new_response_info	offset=-1 (param)
   642 ;;_new_response_info	offset=-1 (param)
   643 ;;_level	offset=-2 (param)
   644 ;;_dutyValue	offset=-2 (param)
   645 ;;_timer	offset=-1 (param)
   646 ;;_timer	offset=-1 (param)
   647 ;;_count	offset=-3 (param)
   648 ;;_h	offset=-2 (param)
   649 ;;_u	offset	0
   650 ;;_x	offset=-4 (param)
   651 ;;_chan	offset=-1 (param)
   652 ;;_to_what	offset=-2 (param)
   653 ;;_u	offset	0
   654 ;;_s	offset=-2 (param)
   655 ;;_index	offset=-1 (param)
   656 ;;_arg	offset	0
   657 ;;_exp	offset	4
   658 ;;_sign	offset=-1 (param)
   659 ;;_val	offset=-5 (param)
   660 ;;_grs	offset	0
   661 ;;_rem	offset	4
   662 ;;_new_exp	offset	8
   663 ;;_aexp	offset	10
   664 ;;_bexp	offset	11
   665 ;;_sign	offset	12
   666 ;;_b	offset=-4 (param)
   667 ;;_a	offset=-8 (param)
   668 ;;_ff1	offset=-4 (param)
   669 ;;_ff2	offset=-8 (param)
   670 ;;_lp_speed	offset	0
   671 ;;_new	offset=-4 (param)
   672 ;;_bn	offset=-5 (param)
   673 ;;_slow	offset=-6 (param)
   674 ;;_b	offset=-4 (param)
   675 ;;_a	offset=-8 (param)
   676 ;;_grs	offset	0
   677 ;;_bexp	offset	1
   678 ;;_aexp	offset	2
   679 ;;_signs	offset	3
   680 ;;_b	offset=-4 (param)
   681 ;;_a	offset=-8 (param)
   682 ;;_prod	offset	0
   683 ;;_grs	offset	4
   684 ;;_temp	offset	8
   685 ;;_bexp	offset	10
   686 ;;_aexp	offset	11
   687 ;;_sign	offset	12
   688 ;;_b	offset=-4 (param)
   689 ;;_a	offset=-8 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_InterruptHandler	offset=-3 (param)
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_state	offset	0
   697 ;;_InterruptHandler	offset=-3 (param)
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_seed	offset	0
   700 ;;_poly	offset	2
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_i	offset	0
   704 ;;_sw_value	offset	1
   705 ;;_timerVal	offset=-2 (param)
   706 ;;_light	offset	0
   707 ;;_t	offset=-8 (param)
   708 ;;_mode	offset=-1 (param)
   709 ;;_chan	offset=-1 (param)
   710 ;;_to_what	offset=-2 (param)
   711 ;;_u	offset	0
   712 ;;_s	offset=-2 (param)
   713 ;;_index	offset=-1 (param)
   714 ;;_arg	offset	0
   715 ;;_exp	offset	4
   716 ;;_sign	offset=-1 (param)
   717 ;;_val	offset=-5 (param)
   718 ;;_b	offset=-4 (param)
   719 ;;_a	offset=-8 (param)
   720 ;;_grs	offset	0
   721 ;;_bexp	offset	1
   722 ;;_aexp	offset	2
   723 ;;_signs	offset	3
   724 ;;_b	offset=-4 (param)
   725 ;;_a	offset=-8 (param)
   726 ;;_prod	offset	0
   727 ;;_grs	offset	4
   728 ;;_temp	offset	8
   729 ;;_bexp	offset	10
   730 ;;_aexp	offset	11
   731 ;;_sign	offset	12
   732 ;;_b	offset=-4 (param)
   733 ;;_a	offset=-8 (param)
   734 ;;_grs	offset	0
   735 ;;_rem	offset	4
   736 ;;_new_exp	offset	8
   737 ;;_aexp	offset	10
   738 ;;_bexp	offset	11
   739 ;;_sign	offset	12
   740 ;;_b	offset=-4 (param)
   741 ;;_a	offset=-8 (param)
   742 ;;_ff1	offset=-4 (param)
   743 ;;_ff2	offset=-8 (param)
   744 ;;_timerVal	offset=-2 (param)
   745 ;;_adj	offset	0
   746 ;;_log_ptr	offset	4
   747 ;;_f	offset	0
   748 ;;_ap	offset	6
   749 ;;_s	offset=-3 (param)
   750 ;;_fmt	offset=-5 (param)
   751 ;;_cfmt	offset	0
   752 ;;_fp	offset=-2 (param)
   753 ;;_fmt	offset=-4 (param)
   754 ;;_ap	offset=-6 (param)
   755 ;;_vfpfcnvrt$6692	offset	0
   756 ;;_vfpfcnvrt$6703	offset	2
   757 ;;_vfpfcnvrt$6691	offset	4
   758 ;;_llu	offset	6
   759 ;;_ll	offset	14
   760 ;;_f	offset	22
   761 ;;_ct	offset	26
   762 ;;_cp	offset	29
   763 ;;_c	offset	31
   764 ;;_fp	offset=-2 (param)
   765 ;;_fmt	offset=-4 (param)
   766 ;;_ap	offset=-6 (param)
   767 ;;_xtoa$6677	offset	0
   768 ;;_xtoa$6676	offset	2
   769 ;;_n	offset	4
   770 ;;_c	offset	12
   771 ;;_i	offset	14
   772 ;;_w	offset	16
   773 ;;_p	offset	18
   774 ;;_fp	offset=-2 (param)
   775 ;;_d	offset=-10 (param)
   776 ;;_x	offset=-11 (param)
   777 ;;_toupper$7618	offset	0
   778 ;;_c	offset=-2 (param)
   779 ;;_c	offset=-2 (param)
   780 ;;_c	offset=-2 (param)
   781 ;;_n	offset	0
   782 ;;_i	offset	8
   783 ;;_w	offset	10
   784 ;;_p	offset	12
   785 ;;_fp	offset=-2 (param)
   786 ;;_d	offset=-10 (param)
   787 ;;_counter	offset	0
   788 ;;_dividend	offset=-8 (param)
   789 ;;_divisor	offset=-16 (param)
   790 ;;_quotient	offset	0
   791 ;;_counter	offset	8
   792 ;;_dividend	offset=-8 (param)
   793 ;;_divisor	offset=-16 (param)
   794 ;;_r	offset	0
   795 ;;_l	offset	2
   796 ;;__l	offset=-2 (param)
   797 ;;__r	offset=-4 (param)
   798 ;;_n	offset=-6 (param)
   799 ;;_nuls	offset	0
   800 ;;_l	offset	7
   801 ;;_p	offset	9
   802 ;;_cp	offset	11
   803 ;;_w	offset	13
   804 ;;_i	offset	15
   805 ;;_fp	offset=-2 (param)
   806 ;;_s	offset=-4 (param)
   807 ;;_efgtoa$6649	offset	0
   808 ;;_efgtoa$6648	offset	2
   809 ;;_efgtoa$6647	offset	4
   810 ;;_efgtoa$6643	offset	6
   811 ;;_efgtoa$6639	offset	8
   812 ;;_efgtoa$6638	offset	10
   813 ;;_u	offset	12
   814 ;;_g	offset	16
   815 ;;_l	offset	20
   816 ;;_h	offset	24
   817 ;;_ou	offset	28
   818 ;;_n	offset	32
   819 ;;_e	offset	34
   820 ;;_i	offset	36
   821 ;;_w	offset	38
   822 ;;_p	offset	40
   823 ;;_sign	offset	42
   824 ;;_d	offset	44
   825 ;;_ne	offset	46
   826 ;;_m	offset	48
   827 ;;_pp	offset	50
   828 ;;_t	offset	52
   829 ;;_mode	offset	54
   830 ;;_nmode	offset	55
   831 ;;_fp	offset=-2 (param)
   832 ;;_f	offset=-6 (param)
   833 ;;_c	offset=-7 (param)
   834 ;;_tolower$7603	offset	0
   835 ;;_c	offset=-2 (param)
   836 ;;_c	offset=-2 (param)
   837 ;;_d	offset	0
   838 ;;_s	offset	2
   839 ;;_dest	offset=-2 (param)
   840 ;;_src	offset=-4 (param)
   841 ;;_u	offset	0
   842 ;;_m	offset	4
   843 ;;_e	offset	8
   844 ;;_x	offset=-4 (param)
   845 ;;_u	offset	0
   846 ;;_e	offset	4
   847 ;;_x	offset=-4 (param)
   848 ;;_exp1	offset	0
   849 ;;_sign1	offset	1
   850 ;;_f1	offset=-4 (param)
   851 ;;_f1	offset=-4 (param)
   852 ;;_ff1	offset=-4 (param)
   853 ;;_ff2	offset=-8 (param)
   854 ;;_sign	offset	0
   855 ;;_counter	offset	1
   856 ;;_dividend	offset=-2 (param)
   857 ;;_divisor	offset=-4 (param)
   858 ;;_quotient	offset	0
   859 ;;_sign	offset	2
   860 ;;_counter	offset	3
   861 ;;_dividend	offset=-2 (param)
   862 ;;_divisor	offset=-4 (param)
   863 ;;_dtoa$6615	offset	0
   864 ;;_n	offset	2
   865 ;;_i	offset	10
   866 ;;_s	offset	12
   867 ;;_w	offset	14
   868 ;;_p	offset	16
   869 ;;_fp	offset=-2 (param)
   870 ;;_d	offset=-10 (param)
   871 ;;_a	offset=-2 (param)
   872 ;;_sign	offset	0
   873 ;;_counter	offset	1
   874 ;;_dividend	offset=-8 (param)
   875 ;;_divisor	offset=-16 (param)
   876 ;;_quotient	offset	0
   877 ;;_sign	offset	8
   878 ;;_counter	offset	9
   879 ;;_dividend	offset=-8 (param)
   880 ;;_divisor	offset=-16 (param)
   881 ;;_w	offset	0
   882 ;;_fp	offset=-2 (param)
   883 ;;_c	offset=-3 (param)
   884 ;;_w	offset	0
   885 ;;_i	offset	2
   886 ;;_fp	offset=-2 (param)
   887 ;;_buf	offset=-4 (param)
   888 ;;_p	offset=-6 (param)
   889 ;;_a	offset	0
   890 ;;_s	offset=-2 (param)
   891 ;;_i	offset	0
   892 ;;_c	offset	2
   893 ;;_s	offset=-2 (param)
   894 ;;_fp	offset=-4 (param)
   895 ;;_c	offset=-2 (param)
   896 ;;_fp	offset=-4 (param)
   897 ;;_c	offset=-1 (param)
   898 ;;__this	offset=-2 (param)
   899 ;;_c	offset=-3 (param)
   900 ;;_atoi$7235	offset	0
   901 ;;_atoi$7233	offset	2
   902 ;;_atoi$7234	offset	4
   903 ;;_n	offset	5
   904 ;;_neg	offset	7
   905 ;;_s	offset=-2 (param)
   906 ;;_isspace$7284	offset	0
   907 ;;_c	offset=-2 (param)
   908 ;;_c	offset=-2 (param)
   909 ;;_dsize	offset=-2 (param)
   910 ;;_u	offset	0
   911 ;;_x	offset=-4 (param)
   912 ;;_f1p	offset=-2 (param)
   913 ;;_f2	offset=-6 (param)
   914 ;;_timer	offset=-1 (param)
   915 ;;_count	offset=-3 (param)
   916 ;;_channel	offset=-1 (param)
   917 ;;_i	offset	0
   918                           
   919                           	psect	idataBIGRAM
   920  017D06                     __pidataBIGRAM:
   921                           	opt callstack 0
   922                           
   923                           ;initializer for _D
   924  017D06  20                 	db	32
   925  017D07  00                 	db	0
   926  017D08  00                 	db	0
   927  017D09  00                 	db	0
   928  017D0A  00                 	db	0
   929  017D0B  00                 	db	0
   930  017D0C  00                 	db	0
   931  017D0D  00                 	db	0
   932  017D0E  00                 	db	0
   933  017D0F  00                 	db	0
   934  017D10  00                 	db	0
   935  017D11  00                 	db	0
   936  017D12  00                 	db	0
   937  017D13  00                 	db	0
   938  017D14  00                 	db	0
   939  017D15  00                 	db	0
   940  017D16  00                 	db	0
   941  017D17  00                 	db	0
   942  017D18  00                 	db	0
   943  017D19  00                 	db	0
   944  017D1A  00                 	db	0
   945  017D1B  00                 	db	0
   946  017D1C  00                 	db	0
   947  017D1D  00                 	db	0
   948  017D1E  00                 	db	0
   949  017D1F  00                 	db	0
   950  017D20  00                 	db	0
   951  017D21  00                 	db	0
   952  017D22  00                 	db	0
   953  017D23  00                 	db	0
   954  017D24  00                 	db	0
   955  017D25  00                 	db	0
   956  017D26  00                 	db	0
   957  017D27  00                 	db	0
   958  017D28  00                 	db	0
   959  017D29  00                 	db	0
   960  017D2A  00                 	db	0
   961  017D2B  00                 	db	0
   962  017D2C  00                 	db	0
   963  017D2D  00                 	db	0
   964  017D2E  00                 	db	0
   965  017D2F  00                 	db	0
   966  017D30  00                 	db	0
   967  017D31  00                 	db	0
   968  017D32  00                 	db	0
   969  017D33  00                 	db	0
   970  017D34  00                 	db	0
   971  017D35  00                 	db	0
   972  017D36  00                 	db	0
   973  017D37  00                 	db	0
   974  017D38  00                 	db	0
   975  017D39  00                 	db	0
   976  017D3A  00                 	db	0
   977  017D3B  00                 	db	0
   978  017D3C  00                 	db	0
   979  017D3D  00                 	db	0
   980  017D3E  00                 	db	0
   981  017D3F  00                 	db	0
   982  017D40  00                 	db	0
   983  017D41  00                 	db	0
   984  017D42  00                 	db	0
   985  017D43  00                 	db	0
   986  017D44  00                 	db	0
   987  017D45  00                 	db	0
   988  017D46  00                 	db	0
   989  017D47  00                 	db	0
   990  017D48  00                 	db	0
   991  017D49  00                 	db	0
   992  017D4A  00                 	db	0
   993  017D4B  00                 	db	0
   994  017D4C  00                 	db	0
   995  017D4D  00                 	db	0
   996  017D4E  00                 	db	0
   997  017D4F  00                 	db	0
   998  017D50  00                 	db	0
   999  017D51  00                 	db	0
  1000  017D52  00                 	db	0
  1001  017D53  00                 	db	0
  1002  017D54  00                 	db	0
  1003  017D55  00                 	db	0
  1004  017D56  00                 	db	0
  1005  017D57  00                 	db	0
  1006  017D58  00                 	db	0
  1007  017D59  00                 	db	0
  1008  017D5A  00                 	db	0
  1009  017D5B  00                 	db	0
  1010  017D5C  00                 	db	0
  1011  017D5D  00                 	db	0
  1012  017D5E  00                 	db	0
  1013  017D5F  00                 	db	0
  1014  017D60  00                 	db	0
  1015  017D61  00                 	db	0
  1016  017D62  00                 	db	0
  1017  017D63  00                 	db	0
  1018  017D64  00                 	db	0
  1019  017D65  00                 	db	0
  1020  017D66  00                 	db	0
  1021  017D67  00                 	db	0
  1022  017D68  00                 	db	0
  1023  017D69  00                 	db	0
  1024  017D6A  00                 	db	0
  1025  017D6B  00                 	db	0
  1026  017D6C  00                 	db	0
  1027  017D6D  00                 	db	0
  1028  017D6E  00                 	db	0
  1029  017D6F  00                 	db	0
  1030  017D70  00                 	db	0
  1031  017D71  00                 	db	0
  1032  017D72  00                 	db	0
  1033  017D73  00                 	db	0
  1034  017D74  00                 	db	0
  1035  017D75  00                 	db	0
  1036  017D76  00                 	db	0
  1037  017D77  00                 	db	0
  1038  017D78  00                 	db	0
  1039  017D79  00                 	db	0
  1040  017D7A  00                 	db	0
  1041  017D7B  00                 	db	0
  1042  017D7C  00                 	db	0
  1043  017D7D  00                 	db	0
  1044  017D7E  00                 	db	0
  1045  017D7F  00                 	db	0
  1046  017D80  00                 	db	0
  1047  017D81  00                 	db	0
  1048  017D82  00                 	db	0
  1049  017D83  00                 	db	0
  1050  017D84  00                 	db	0
  1051  017D85  00                 	db	0
  1052  017D86  00                 	db	0
  1053  017D87  00                 	db	0
  1054  017D88  00                 	db	0
  1055  017D89  00                 	db	0
  1056  017D8A  00                 	db	0
  1057  017D8B  00                 	db	0
  1058  017D8C  00                 	db	0
  1059  017D8D  00                 	db	0
  1060  017D8E  00                 	db	0
  1061  017D8F  00                 	db	0
  1062  017D90  00                 	db	0
  1063  017D91  00                 	db	0
  1064  017D92  00                 	db	0
  1065  017D93  00                 	db	0
  1066  017D94  00                 	db	0
  1067  017D95  00                 	db	0
  1068  017D96  00                 	db	0
  1069  017D97  00                 	db	0
  1070  017D98  00                 	db	0
  1071  017D99  00                 	db	0
  1072  017D9A  00                 	db	0
  1073  017D9B  00                 	db	0
  1074  017D9C  00                 	db	0
  1075  017D9D  00                 	db	0
  1076  017D9E  00                 	db	0
  1077  017D9F  00                 	db	0
  1078  017DA0  00                 	db	0
  1079  017DA1  00                 	db	0
  1080  017DA2  00                 	db	0
  1081  017DA3  00                 	db	0
  1082  017DA4  00                 	db	0
  1083  017DA5  00                 	db	0
  1084  017DA6  00                 	db	0
  1085  017DA7  00                 	db	0
  1086  017DA8  00                 	db	0
  1087  017DA9  00                 	db	0
  1088  017DAA  00                 	db	0
  1089  017DAB  00                 	db	0
  1090  017DAC  00                 	db	0
  1091  017DAD  00                 	db	0
  1092  017DAE  00                 	db	0
  1093  017DAF  00                 	db	0
  1094  017DB0  00                 	db	0
  1095  017DB1  00                 	db	0
  1096  017DB2  00                 	db	0
  1097  017DB3  00                 	db	0
  1098  017DB4  00                 	db	0
  1099  017DB5  00                 	db	0
  1100  017DB6  00                 	db	0
  1101  017DB7  00                 	db	0
  1102  017DB8  00                 	db	0
  1103  017DB9  00                 	db	0
  1104  017DBA  00                 	db	0
  1105  017DBB  00                 	db	0
  1106  017DBC  00                 	db	0
  1107  017DBD  00                 	db	0
  1108  017DBE  00                 	db	0
  1109  017DBF  00                 	db	0
  1110  017DC0  00                 	db	0
  1111  017DC1  00                 	db	0
  1112  017DC2  00                 	db	0
  1113  017DC3  00                 	db	0
  1114  017DC4  00                 	db	0
  1115  017DC5  00                 	db	0
  1116  017DC6  00                 	db	0
  1117  017DC7  00                 	db	0
  1118  017DC8  00                 	db	0
  1119  017DC9  00                 	db	0
  1120  017DCA  00                 	db	0
  1121  017DCB  00                 	db	0
  1122  017DCC  00                 	db	0
  1123  017DCD  00                 	db	0
  1124  017DCE  00                 	db	0
  1125  017DCF  00                 	db	0
  1126  017DD0  00                 	db	0
  1127  017DD1  00                 	db	0
  1128  017DD2  00                 	db	0
  1129  017DD3  00                 	db	0
  1130  017DD4  00                 	db	0
  1131  017DD5  00                 	db	0
  1132  017DD6  00                 	db	0
  1133  017DD7  00                 	db	0
  1134  017DD8  00                 	db	0
  1135  017DD9  00                 	db	0
  1136  017DDA  00                 	db	0
  1137  017DDB  00                 	db	0
  1138  017DDC  00                 	db	0
  1139  017DDD  00                 	db	0
  1140  017DDE  00                 	db	0
  1141  017DDF  00                 	db	0
  1142  017DE0  00                 	db	0
  1143  017DE1  00                 	db	0
  1144  017DE2  00                 	db	0
  1145  017DE3  00                 	db	0
  1146  017DE4  00                 	db	0
  1147  017DE5  00                 	db	0
  1148  017DE6  00                 	db	0
  1149  017DE7  00                 	db	0
  1150  017DE8  00                 	db	0
  1151  017DE9  00                 	db	0
  1152  017DEA  00                 	db	0
  1153  017DEB  00                 	db	0
  1154  017DEC  00                 	db	0
  1155  017DED  00                 	db	0
  1156  017DEE  00                 	db	0
  1157  017DEF  00                 	db	0
  1158  017DF0  00                 	db	0
  1159  017DF1  00                 	db	0
  1160  017DF2  00                 	db	0
  1161  017DF3  00                 	db	0
  1162  017DF4  00                 	db	0
  1163  017DF5  00                 	db	0
  1164  017DF6  00                 	db	0
  1165  017DF7  00                 	db	0
  1166  017DF8  00                 	db	0
  1167  017DF9  00                 	db	0
  1168  017DFA  00                 	db	0
  1169  017DFB  00                 	db	0
  1170  017DFC  00                 	db	0
  1171  017DFD  00                 	db	0
  1172  017DFE  00                 	db	0
  1173  017DFF  00                 	db	0
  1174  017E00  00                 	db	0
  1175  017E01  00                 	db	0
  1176  017E02  00                 	db	0
  1177  017E03  00                 	db	0
  1178  017E04  00                 	db	0
  1179  017E05  00                 	db	0
  1180  017E06  00                 	db	0
  1181  017E07  00                 	db	0
  1182  017E08  00                 	db	0
  1183  017E09  00                 	db	0
  1184  017E0A  00                 	db	0
  1185  017E0B  00                 	db	0
  1186  017E0C  00                 	db	0
  1187  017E0D  00                 	db	0
  1188  017E0E  00                 	db	0
  1189  017E0F  00                 	db	0
  1190  017E10  00                 	db	0
  1191  017E11  00                 	db	0
  1192  017E12  00                 	db	0
  1193  017E13  00                 	db	0
  1194  017E14  00                 	db	0
  1195  017E15  00                 	db	0
  1196  017E16  00                 	db	0
  1197  017E17  00                 	db	0
  1198  017E18  00                 	db	0
  1199  017E19  00                 	db	0
  1200  017E1A  00                 	db	0
  1201  017E1B  00                 	db	0
  1202  017E1C  00                 	db	0
  1203  017E1D  00                 	db	0
  1204  017E1E  00                 	db	0
  1205  017E1F  00                 	db	0
  1206  017E20  00                 	db	0
  1207  017E21  00                 	db	0
  1208  017E22  00                 	db	0
  1209  017E23  00                 	db	0
  1210  017E24  00                 	db	0
  1211  017E25  00                 	db	0
  1212  017E26  00                 	db	0
  1213  017E27  00                 	db	0
  1214  017E28  00                 	db	0
  1215  017E29  00                 	db	0
  1216  017E2A  00                 	db	0
  1217  017E2B  00                 	db	0
  1218  017E2C  00                 	db	0
  1219  017E2D  00                 	db	0
  1220  017E2E  00                 	db	0
  1221  017E2F  00                 	db	0
  1222  017E30  00                 	db	0
  1223  017E31  00                 	db	0
  1224  017E32  00                 	db	0
  1225  017E33  00                 	db	0
  1226  017E34  00                 	db	0
  1227  017E35  00                 	db	0
  1228  017E36  00                 	db	0
  1229  017E37  00                 	db	0
  1230  017E38  00                 	db	0
  1231  017E39  00                 	db	0
  1232  017E3A  00                 	db	0
  1233  017E3B  00                 	db	0
  1234  017E3C  00                 	db	0
  1235  017E3D  00                 	db	0
  1236  017E3E  00                 	db	0
  1237  017E3F  00                 	db	0
  1238  017E40  00                 	db	0
  1239  017E41  00                 	db	0
  1240  017E42  00                 	db	0
  1241  017E43  00                 	db	0
  1242  017E44  00                 	db	0
  1243  017E45  00                 	db	0
  1244  017E46  00                 	db	0
  1245  017E47  00                 	db	0
  1246  017E48  00                 	db	0
  1247  017E49  00                 	db	0
  1248  017E4A  00                 	db	0
  1249  017E4B  00                 	db	0
  1250  017E4C  00                 	db	0
  1251  017E4D  00                 	db	0
  1252  017E4E  00                 	db	0
  1253  017E4F  00                 	db	0
  1254  017E50  00                 	db	0
  1255  017E51  00                 	db	0
  1256  017E52  00                 	db	0
  1257  017E53  00                 	db	0
  1258  017E54  00                 	db	0
  1259  017E55  00                 	db	0
  1260  017E56  00                 	db	0
  1261  017E57  00                 	db	0
  1262  017E58  00                 	db	0
  1263  017E59  00                 	db	0
  1264  017E5A  00                 	db	0
  1265  017E5B  00                 	db	0
  1266  017E5C  00                 	db	0
  1267  017E5D  00                 	db	0
  1268  017E5E  00                 	db	0
  1269  017E5F  00                 	db	0
  1270  017E60  00                 	db	0
  1271  017E61  00                 	db	0
  1272  017E62  00                 	db	0
  1273  017E63  00                 	db	0
  1274  017E64  00                 	db	0
  1275  017E65  00                 	db	0
  1276  017E66  00                 	db	0
  1277  017E67  00                 	db	0
  1278  017E68  00                 	db	0
  1279  017E69  00                 	db	0
  1280  017E6A  00                 	db	0
  1281  017E6B  00                 	db	0
  1282  017E6C  00                 	db	0
  1283  017E6D  00                 	db	0
  1284  017E6E  00                 	db	0
  1285  017E6F  00                 	db	0
  1286  017E70  00                 	db	0
  1287  017E71  00                 	db	0
  1288  017E72  00                 	db	0
  1289  017E73  00                 	db	0
  1290  017E74  00                 	db	0
  1291  017E75  00                 	db	0
  1292  017E76  00                 	db	0
  1293  017E77  00                 	db	0
  1294  017E78  00                 	db	0
  1295  017E79  00                 	db	0
  1296  017E7A  00                 	db	0
  1297  017E7B  00                 	db	0
  1298  017E7C  00                 	db	0
  1299  017E7D  00                 	db	0
  1300  017E7E  00                 	db	0
  1301  017E7F  00                 	db	0
  1302  017E80  00                 	db	0
  1303  017E81  00                 	db	0
  1304  017E82  00                 	db	0
  1305  017E83  00                 	db	0
  1306  017E84  00                 	db	0
  1307  017E85  00                 	db	0
  1308  017E86  00                 	db	0
  1309  017E87  00                 	db	0
  1310  017E88  00                 	db	0
  1311  017E89  00                 	db	0
  1312  017E8A  00                 	db	0
  1313  017E8B  00                 	db	0
  1314  017E8C  00                 	db	0
  1315  017E8D  00                 	db	0
  1316  017E8E  00                 	db	0
  1317  017E8F  00                 	db	0
  1318  017E90  00                 	db	0
  1319  017E91  00                 	db	0
  1320  017E92  00                 	db	0
  1321  017E93  00                 	db	0
  1322  017E94  00                 	db	0
  1323  017E95  00                 	db	0
  1324  017E96  00                 	db	0
  1325  017E97  00                 	db	0
  1326  017E98  00                 	db	0
  1327  017E99  00                 	db	0
  1328  017E9A  00                 	db	0
  1329  017E9B  00                 	db	0
  1330  017E9C  00                 	db	0
  1331  017E9D  00                 	db	0
  1332  017E9E  00                 	db	0
  1333  017E9F  00                 	db	0
  1334  017EA0  00                 	db	0
  1335  017EA1  00                 	db	0
  1336  017EA2  00                 	db	0
  1337  017EA3  00                 	db	0
  1338  017EA4  00                 	db	0
  1339  017EA5  00                 	db	0
  1340  017EA6  00                 	db	0
  1341  017EA7  00                 	db	0
  1342  017EA8  00                 	db	0
  1343  017EA9  00                 	db	0
  1344  017EAA  00                 	db	0
  1345  017EAB  00                 	db	0
  1346  017EAC  00                 	db	0
  1347  017EAD  00                 	db	0
  1348  017EAE  00                 	db	0
  1349  017EAF  00                 	db	0
  1350  017EB0  00                 	db	0
  1351  017EB1  00                 	db	0
  1352  017EB2  00                 	db	0
  1353  017EB3  00                 	db	0
  1354  017EB4  00                 	db	0
  1355  017EB5  00                 	db	0
  1356  017EB6  00                 	db	0
  1357  017EB7  00                 	db	0
  1358  017EB8  00                 	db	0
  1359  017EB9  00                 	db	0
  1360  017EBA  00                 	db	0
  1361  017EBB  00                 	db	0
  1362  017EBC  00                 	db	0
  1363  017EBD  00                 	db	0
  1364  017EBE  00                 	db	0
  1365  017EBF  00                 	db	0
  1366  017EC0  00                 	db	0
  1367  017EC1  00                 	db	0
  1368  017EC2  00                 	db	0
  1369  017EC3  00                 	db	0
  1370  017EC4  00                 	db	0
  1371  017EC5  00                 	db	0
  1372  017EC6  00                 	db	0
  1373  017EC7  00                 	db	0
  1374  017EC8  00                 	db	0
  1375  017EC9  00                 	db	0
  1376  017ECA  00                 	db	0
  1377  017ECB  00                 	db	0
  1378  017ECC  00                 	db	0
  1379  017ECD  00                 	db	0
  1380  017ECE  00                 	db	0
  1381  017ECF  00                 	db	0
  1382  017ED0  00                 	db	0
  1383  017ED1  00                 	db	0
  1384  017ED2  00                 	db	0
  1385  017ED3  00                 	db	0
  1386  017ED4  00                 	db	0
  1387  017ED5  00                 	db	0
  1388  017ED6  00                 	db	0
  1389  017ED7  00                 	db	0
  1390  017ED8  00                 	db	0
  1391  017ED9  00                 	db	0
  1392  017EDA  00                 	db	0
  1393  017EDB  00                 	db	0
  1394  017EDC  00                 	db	0
  1395  017EDD  00                 	db	0
  1396  017EDE  00                 	db	0
  1397  017EDF  00                 	db	0
  1398  017EE0  00                 	db	0
  1399  017EE1  00                 	db	0
  1400  017EE2  00                 	db	0
  1401  017EE3  00                 	db	0
  1402  017EE4  00                 	db	0
  1403  017EE5  00                 	db	0
  1404  017EE6  00                 	db	0
  1405  017EE7  00                 	db	0
  1406  017EE8  00                 	db	0
  1407  017EE9  00                 	db	0
  1408  017EEA  00                 	db	0
  1409  017EEB  00                 	db	0
  1410  017EEC  00                 	db	0
  1411  017EED  00                 	db	0
  1412  017EEE  00                 	db	0
  1413  017EEF  00                 	db	0
  1414  017EF0  00                 	db	0
  1415  017EF1  00                 	db	0
  1416  017EF2  00                 	db	0
  1417  017EF3  00                 	db	0
  1418  017EF4  00                 	db	0
  1419  017EF5  00                 	db	0
  1420  017EF6  00                 	db	0
  1421  017EF7  00                 	db	0
  1422  017EF8  00                 	db	0
  1423  017EF9  00                 	db	0
  1424  017EFA  00                 	db	0
  1425  017EFB  00                 	db	0
  1426  017EFC  00                 	db	0
  1427  017EFD  00                 	db	0
  1428  017EFE  00                 	db	0
  1429  017EFF  00                 	db	0
  1430  017F00  00                 	db	0
  1431  017F01  00                 	db	0
  1432  017F02  00                 	db	0
  1433  017F03  00                 	db	0
  1434  017F04  00                 	db	0
  1435  017F05  00                 	db	0
  1436  017F06  00                 	db	0
  1437  017F07  00                 	db	0
  1438  017F08  00                 	db	0
  1439  017F09  00                 	db	0
  1440  017F0A  00                 	db	0
  1441  017F0B  00                 	db	0
  1442  017F0C  00                 	db	0
  1443  017F0D  00                 	db	0
  1444  017F0E  00                 	db	0
  1445  017F0F  00                 	db	0
  1446  017F10  00                 	db	0
  1447  017F11  00                 	db	0
  1448  017F12  00                 	db	0
  1449  017F13  00                 	db	0
  1450  017F14  00                 	db	0
  1451  017F15  00                 	db	0
  1452  017F16  00                 	db	0
  1453  017F17  00                 	db	0
  1454  017F18  00                 	db	0
  1455  017F19  00                 	db	0
  1456  017F1A  00                 	db	0
  1457  017F1B  00                 	db	0
  1458  017F1C  00                 	db	0
  1459  017F1D  00                 	db	0
  1460  017F1E  00                 	db	0
  1461  017F1F  00                 	db	0
  1462  017F20  00                 	db	0
  1463  017F21  00                 	db	0
  1464  017F22  00                 	db	0
  1465  017F23  00                 	db	0
  1466  017F24  00                 	db	0
  1467  017F25  00                 	db	0
  1468  017F26  00                 	db	0
  1469  017F27  00                 	db	0
  1470  017F28  00                 	db	0
  1471  017F29  00                 	db	0
  1472  017F2A  00                 	db	0
  1473  017F2B  00                 	db	0
  1474  017F2C  00                 	db	0
  1475  017F2D  00                 	db	0
  1476  017F2E  00                 	db	0
  1477  017F2F  00                 	db	0
  1478  017F30  00                 	db	0
  1479  017F31  00                 	db	0
  1480  017F32  00                 	db	0
  1481  017F33  00                 	db	0
  1482  017F34  00                 	db	0
  1483  017F35  00                 	db	0
  1484  017F36  00                 	db	0
  1485  017F37  00                 	db	0
  1486  017F38  00                 	db	0
  1487  017F39  00                 	db	0
  1488  017F3A  00                 	db	0
  1489  017F3B  00                 	db	0
  1490  017F3C  00                 	db	0
  1491  017F3D  00                 	db	0
  1492  017F3E  00                 	db	0
  1493  017F3F  00                 	db	0
  1494  017F40  00                 	db	0
  1495  017F41  00                 	db	0
  1496  017F42  00                 	db	0
  1497  017F43  00                 	db	0
  1498  017F44  00                 	db	0
  1499  017F45  00                 	db	0
  1500  017F46  00                 	db	0
  1501  017F47  00                 	db	0
  1502  017F48  00                 	db	0
  1503  017F49  00                 	db	0
  1504  017F4A  00                 	db	0
  1505  017F4B  00                 	db	0
  1506  017F4C  00                 	db	0
  1507  017F4D  00                 	db	0
  1508  017F4E  00                 	db	0
  1509  017F4F  00                 	db	0
  1510  017F50  00                 	db	0
  1511  017F51  00                 	db	0
  1512  017F52  00                 	db	0
  1513  017F53  00                 	db	0
  1514  017F54  00                 	db	0
  1515  017F55  00                 	db	0
  1516  017F56  00                 	db	0
  1517  017F57  00                 	db	0
  1518  017F58  00                 	db	0
  1519  017F59  00                 	db	0
  1520  017F5A  00                 	db	0
  1521  017F5B  00                 	db	0
  1522  017F5C  00                 	db	0
  1523  017F5D  00                 	db	0
  1524  017F5E  00                 	db	0
  1525  017F5F  00                 	db	0
  1526  017F60  00                 	db	0
  1527  017F61  00                 	db	0
  1528  017F62  00                 	db	0
  1529  017F63  00                 	db	0
  1530  017F64  00                 	db	0
  1531  017F65  00                 	db	0
  1532  017F66  00                 	db	0
  1533  017F67  00                 	db	0
  1534  017F68  00                 	db	0
  1535  017F69  00                 	db	0
  1536  017F6A  00                 	db	0
  1537  017F6B  00                 	db	0
  1538  017F6C  00                 	db	0
  1539  017F6D  00                 	db	0
  1540  017F6E  00                 	db	0
  1541  017F6F  00                 	db	0
  1542  017F70  00                 	db	0
  1543  017F71  00                 	db	0
  1544  017F72  00                 	db	0
  1545  017F73  00                 	db	0
  1546  017F74  00                 	db	0
  1547  017F75  00                 	db	0
  1548  017F76  00                 	db	0
  1549  017F77  00                 	db	0
  1550  017F78  00                 	db	0
  1551  017F79  00                 	db	0
  1552  017F7A  00                 	db	0
  1553  017F7B  00                 	db	0
  1554  017F7C  00                 	db	0
  1555  017F7D  00                 	db	0
  1556  017F7E  00                 	db	0
  1557  017F7F  00                 	db	0
  1558  017F80  00                 	db	0
  1559  017F81  00                 	db	0
  1560  017F82  00                 	db	0
  1561  017F83  00                 	db	0
  1562  017F84  00                 	db	0
  1563  017F85  00                 	db	0
  1564  017F86  00                 	db	0
  1565  017F87  00                 	db	0
  1566                           
  1567                           ;initializer for _port_data
  1568  017F88  FF                 	db	255
  1569  017F89  00                 	db	0
  1570  017F8A  FF                 	db	255
  1571  017F8B  00                 	db	0
  1572  017F8C  FF                 	db	255
  1573  017F8D  00                 	db	0
  1574  017F8E  FF                 	db	255
  1575  017F8F  00                 	db	0
  1576  017F90  FF                 	db	255
  1577  017F91  00                 	db	0
  1578  017F92  FF                 	db	255
  1579  017F93  00                 	db	0
  1580  017F94  FF                 	db	255
  1581  017F95  00                 	db	0
  1582  017F96  FF                 	db	255
  1583  017F97  00                 	db	0
  1584  017F98  00                 	db	0
  1585  017F99  00                 	db	0
  1586  017F9A  00                 	db	0
  1587  017F9B  00                 	db	0
  1588  017F9C  00                 	db	0
  1589  017F9D  00                 	db	0
  1590  017F9E  00                 	db	0
  1591  017F9F  00                 	db	0
  1592  017FA0  00                 	db	0
  1593  017FA1  00                 	db	0
  1594  017FA2  00                 	db	0
  1595  017FA3  00                 	db	0
  1596  017FA4  00                 	db	0
  1597  017FA5  00                 	db	0
  1598  017FA6  00                 	db	0
  1599  017FA7  00                 	db	0
  1600  017FA8  00                 	db	0
  1601  017FA9  00                 	db	0
  1602  017FAA  00                 	db	0
  1603  017FAB  00                 	db	0
  1604  017FAC  00                 	db	0
  1605  017FAD  00                 	db	0
  1606  017FAE  00                 	db	0
  1607  017FAF  00                 	db	0
  1608  017FB0  00                 	db	0
  1609  017FB1  00                 	db	0
  1610  017FB2  00                 	db	0
  1611  017FB3  00                 	db	0
  1612  017FB4  00                 	db	0
  1613  017FB5  00                 	db	0
  1614  017FB6  00                 	db	0
  1615  017FB7  00                 	db	0
  1616  017FB8  00                 	db	0
  1617  017FB9  00                 	db	0
  1618  017FBA  00                 	db	0
  1619  017FBB  00                 	db	0
  1620  017FBC  00                 	db	0
  1621  017FBD  00                 	db	0
  1622  017FBE  00                 	db	0
  1623  017FBF  00                 	db	0
  1624  017FC0  00                 	db	0
  1625  017FC1  00                 	db	0
  1626  017FC2  00                 	db	0
  1627  017FC3  00                 	db	0
  1628  017FC4  00                 	db	0
  1629  017FC5  00                 	db	0
  1630  017FC6  00                 	db	0
  1631  017FC7  00                 	db	0
  1632  017FC8  00                 	db	0
  1633  017FC9  00                 	db	0
  1634  017FCA  00                 	db	0
  1635  017FCB  00                 	db	0
  1636  017FCC  00                 	db	0
  1637  017FCD  00                 	db	0
  1638  017FCE  00                 	db	0
  1639  017FCF  00                 	db	0
  1640  017FD0  00                 	db	0
  1641  017FD1  00                 	db	0
  1642  017FD2  00                 	db	0
  1643  017FD3  00                 	db	0
  1644  017FD4  00                 	db	0
  1645  017FD5  00                 	db	0
  1646  017FD6  00                 	db	0
  1647  017FD7  00                 	db	0
  1648  017FD8  00                 	db	0
  1649  017FD9  00                 	db	0
  1650  017FDA  00                 	db	0
  1651  017FDB  00                 	db	0
  1652  017FDC  00                 	db	0
  1653  017FDD  00                 	db	0
  1654  017FDE  00                 	db	0
  1655  017FDF  00                 	db	0
  1656  017FE0  00                 	db	0
  1657  017FE1  00                 	db	0
  1658  017FE2  00                 	db	0
  1659  017FE3  00                 	db	0
  1660  017FE4  00                 	db	0
  1661  017FE5  00                 	db	0
  1662  017FE6  00                 	db	0
  1663  017FE7  00                 	db	0
  1664  017FE8  00                 	db	0
  1665  017FE9  00                 	db	0
  1666  017FEA  00                 	db	0
  1667  017FEB  00                 	db	0
  1668  017FEC  00                 	db	0
  1669  017FED  00                 	db	0
  1670  017FEE  00                 	db	0
  1671  017FEF  00                 	db	0
  1672  017FF0  00                 	db	0
  1673  017FF1  00                 	db	0
  1674  017FF2  00                 	db	0
  1675  017FF3  00                 	db	0
  1676  017FF4  00                 	db	0
  1677  017FF5  00                 	db	0
  1678  017FF6  00                 	db	0
  1679  017FF7  00                 	db	0
  1680  017FF8  00                 	db	0
  1681  017FF9  00                 	db	0
  1682  017FFA  00                 	db	0
  1683  017FFB  00                 	db	0
  1684  017FFC  00                 	db	0
  1685  017FFD  00                 	db	0
  1686  017FFE  00                 	db	0
  1687  017FFF  00                 	db	0
  1688  018000  00                 	db	0
  1689  018001  00                 	db	0
  1690  018002  00                 	db	0
  1691  018003  00                 	db	0
  1692  018004  00                 	db	0
  1693  018005  00                 	db	0
  1694  018006  00                 	db	0
  1695  018007  00                 	db	0
  1696  018008  00                 	db	0
  1697  018009  00                 	db	0
  1698  01800A  00                 	db	0
  1699  01800B  00                 	db	0
  1700  01800C  00                 	db	0
  1701  01800D  00                 	db	0
  1702  01800E  00                 	db	0
  1703  01800F  00                 	db	0
  1704  018010  00                 	db	0
  1705  018011  00                 	db	0
  1706  018012  00                 	db	0
  1707  018013  00                 	db	0
  1708  018014  00                 	db	0
  1709  018015  00                 	db	0
  1710  018016  00                 	db	0
  1711  018017  00                 	db	0
  1712  018018  00                 	db	0
  1713  018019  00                 	db	0
  1714  01801A  00                 	db	0
  1715  01801B  00                 	db	0
  1716  01801C  00                 	db	0
  1717  01801D  00                 	db	0
  1718  01801E  00                 	db	0
  1719  01801F  00                 	db	0
  1720  018020  00                 	db	0
  1721  018021  00                 	db	0
  1722  018022  00                 	db	0
  1723  018023  00                 	db	0
  1724  018024  00                 	db	0
  1725  018025  00                 	db	0
  1726  018026  00                 	db	0
  1727  018027  00                 	db	0
  1728  018028  00                 	db	0
  1729  018029  00                 	db	0
  1730  01802A  00                 	db	0
  1731  01802B  00                 	db	0
  1732  01802C  00                 	db	0
  1733  01802D  00                 	db	0
  1734  01802E  00                 	db	0
  1735  01802F  00                 	db	0
  1736  018030  00                 	db	0
  1737  018031  00                 	db	0
  1738  018032  00                 	db	0
  1739  018033  00                 	db	0
  1740  018034  00                 	db	0
  1741  018035  00                 	db	0
  1742  018036  00                 	db	0
  1743  018037  00                 	db	0
  1744  018038  00                 	db	0
  1745  018039  00                 	db	0
  1746  01803A  00                 	db	0
  1747  01803B  00                 	db	0
  1748  01803C  00                 	db	0
  1749  01803D  00                 	db	0
  1750  01803E  00                 	db	0
  1751  01803F  00                 	db	0
  1752  018040  00                 	db	0
  1753  018041  00                 	db	0
  1754  018042  00                 	db	0
  1755  018043  00                 	db	0
  1756  018044  00                 	db	0
  1757  018045  00                 	db	0
  1758  018046  00                 	db	0
  1759  018047  00                 	db	0
  1760  018048  00                 	db	0
  1761  018049  00                 	db	0
  1762  01804A  00                 	db	0
  1763  01804B  00                 	db	0
  1764  01804C  00                 	db	0
  1765  01804D  00                 	db	0
  1766  01804E  00                 	db	0
  1767  01804F  00                 	db	0
  1768  018050  00                 	db	0
  1769  018051  00                 	db	0
  1770  018052  00                 	db	0
  1771  018053  00                 	db	0
  1772  018054  00                 	db	0
  1773  018055  00                 	db	0
  1774  018056  00                 	db	0
  1775  018057  00                 	db	0
  1776  018058  00                 	db	0
  1777  018059  00                 	db	0
  1778  01805A  00                 	db	0
  1779  01805B  00                 	db	0
  1780  01805C  00                 	db	0
  1781  01805D  00                 	db	0
  1782  01805E  00                 	db	0
  1783  01805F  00                 	db	0
  1784  018060  00                 	db	0
  1785  018061  00                 	db	0
  1786  018062  00                 	db	0
  1787  018063  00                 	db	0
  1788  018064  00                 	db	0
  1789  018065  00                 	db	0
  1790  018066  00                 	db	0
  1791  018067  00                 	db	0
  1792  018068  00                 	db	0
  1793  018069  00                 	db	0
  1794  01806A  00                 	db	0
  1795  01806B  00                 	db	0
  1796  01806C  00                 	db	0
  1797  01806D  00                 	db	0
  1798  01806E  00                 	db	0
  1799  01806F  00                 	db	0
  1800  018070  00                 	db	0
  1801  018071  00                 	db	0
  1802  018072  00                 	db	0
  1803  018073  00                 	db	0
  1804  018074  00                 	db	0
  1805  018075  00                 	db	0
  1806  018076  00                 	db	0
  1807  018077  00                 	db	0
  1808  018078  00                 	db	0
  1809  018079  00                 	db	0
  1810  01807A  00                 	db	0
  1811  01807B  00                 	db	0
  1812  01807C  00                 	db	0
  1813  01807D  00                 	db	0
  1814  01807E  00                 	db	0
  1815  01807F  00                 	db	0
  1816  018080  00                 	db	0
  1817  018081  00                 	db	0
  1818  018082  00                 	db	0
  1819  018083  00                 	db	0
  1820  018084  00                 	db	0
  1821  018085  00                 	db	0
  1822  018086  00                 	db	0
  1823  018087  00                 	db	0
  1824  018088  00                 	db	0
  1825  018089  00                 	db	0
  1826  01808A  00                 	db	0
  1827  01808B  00                 	db	0
  1828  01808C  00                 	db	0
  1829  01808D  00                 	db	0
  1830  01808E  00                 	db	0
  1831  01808F  00                 	db	0
  1832  018090  00                 	db	0
  1833  018091  00                 	db	0
  1834  018092  00                 	db	0
  1835  018093  00                 	db	0
  1836  018094  00                 	db	0
  1837  018095  00                 	db	0
  1838  018096  00                 	db	0
  1839  018097  00                 	db	0
  1840  018098  00                 	db	0
  1841  018099  00                 	db	0
  1842  01809A  00                 	db	0
  1843  01809B  00                 	db	0
  1844  01809C  00                 	db	0
  1845  01809D  00                 	db	0
  1846  01809E  00                 	db	0
  1847  01809F  00                 	db	0
  1848  0180A0  00                 	db	0
  1849  0180A1  00                 	db	0
  1850  0180A2  00                 	db	0
  1851  0180A3  00                 	db	0
  1852  0180A4  00                 	db	0
  1853  0180A5  00                 	db	0
  1854  0180A6  00                 	db	0
  1855  0180A7  00                 	db	0
  1856  0180A8  00                 	db	0
  1857  0180A9  00                 	db	0
  1858  0180AA  00                 	db	0
  1859  0180AB  00                 	db	0
  1860  0180AC  00                 	db	0
  1861  0180AD  00                 	db	0
  1862  0180AE  00                 	db	0
  1863  0180AF  00                 	db	0
  1864  0180B0  00                 	db	0
  1865  0180B1  00                 	db	0
  1866  0180B2  00                 	db	0
  1867  0180B3  00                 	db	0
  1868  0180B4  00                 	db	0
  1869  0180B5  00                 	db	0
  1870  0180B6  00                 	db	0
  1871  0180B7  00                 	db	0
  1872  0180B8  00                 	db	0
  1873  0180B9  00                 	db	0
  1874  0180BA  00                 	db	0
  1875  0180BB  00                 	db	0
  1876  0180BC  00                 	db	0
  1877  0180BD  00                 	db	0
  1878  0180BE  00                 	db	0
  1879  0180BF  00                 	db	0
  1880  0180C0  00                 	db	0
  1881  0180C1  00                 	db	0
  1882  0180C2  00                 	db	0
  1883  0180C3  00                 	db	0
  1884  0180C4  00                 	db	0
  1885  0180C5  00                 	db	0
  1886  0180C6  00                 	db	0
  1887  0180C7  00                 	db	0
  1888  0180C8  00                 	db	0
  1889  0180C9  00                 	db	0
  1890  0180CA  00                 	db	0
  1891  0180CB  00                 	db	0
  1892  0180CC  00                 	db	0
  1893  0180CD  00                 	db	0
  1894  0180CE  00                 	db	0
  1895  0180CF  00                 	db	0
  1896  0180D0  00                 	db	0
  1897  0180D1  00                 	db	0
  1898  0180D2  00                 	db	0
  1899  0180D3  00                 	db	0
  1900  0180D4  00                 	db	0
  1901  0180D5  00                 	db	0
  1902  0180D6  00                 	db	0
  1903  0180D7  00                 	db	0
  1904  0180D8  00                 	db	0
  1905  0180D9  00                 	db	0
  1906  0180DA  00                 	db	0
  1907  0180DB  00                 	db	0
  1908  0180DC  00                 	db	0
  1909  0180DD  00                 	db	0
  1910  0180DE  00                 	db	0
  1911  0180DF  00                 	db	0
  1912  0180E0  00                 	db	0
  1913  0180E1  00                 	db	0
  1914  0180E2  00                 	db	0
  1915  0180E3  00                 	db	0
  1916  0180E4  00                 	db	0
  1917  0180E5  00                 	db	0
  1918  0180E6  00                 	db	0
  1919  0180E7  00                 	db	0
  1920  0180E8  00                 	db	0
  1921  0180E9  00                 	db	0
  1922  0180EA  00                 	db	0
  1923  0180EB  00                 	db	0
  1924  0180EC  00                 	db	0
  1925  0180ED  00                 	db	0
  1926  0180EE  00                 	db	0
  1927  0180EF  00                 	db	0
  1928  0180F0  00                 	db	0
  1929  0180F1  00                 	db	0
  1930  0180F2  00                 	db	0
  1931  0180F3  00                 	db	0
  1932  0180F4  00                 	db	0
  1933  0180F5  00                 	db	0
  1934  0180F6  00                 	db	0
  1935  0180F7  00                 	db	0
  1936  0180F8  00                 	db	0
  1937  0180F9  00                 	db	0
  1938  0180FA  00                 	db	0
  1939  0180FB  00                 	db	0
  1940  0180FC  00                 	db	0
  1941  0180FD  00                 	db	0
  1942  0180FE  00                 	db	0
  1943  0180FF  00                 	db	0
  1944  018100  00                 	db	0
  1945  018101  00                 	db	0
  1946  018102  00                 	db	0
  1947  018103  00                 	db	0
  1948  018104  00                 	db	0
  1949  018105  00                 	db	0
  1950  018106  00                 	db	0
  1951  018107  00                 	db	0
  1952  018108  00                 	db	0
  1953  018109  00                 	db	0
  1954  01810A  00                 	db	0
  1955  01810B  00                 	db	0
  1956  01810C  00                 	db	0
  1957  01810D  00                 	db	0
  1958  01810E  00                 	db	0
  1959  01810F  00                 	db	0
  1960  018110  00                 	db	0
  1961  018111  00                 	db	0
  1962  018112  00                 	db	0
  1963  018113  00                 	db	0
  1964  018114  00                 	db	0
  1965  018115  00                 	db	0
  1966  018116  00                 	db	0
  1967  018117  00                 	db	0
  1968  018118  00                 	db	0
  1969  018119  00                 	db	0
  1970  01811A  00                 	db	0
  1971  01811B  00                 	db	0
  1972  01811C  00                 	db	0
  1973  01811D  00                 	db	0
  1974  01811E  00                 	db	0
  1975  01811F  00                 	db	0
  1976  018120  00                 	db	0
  1977  018121  00                 	db	0
  1978  018122  00                 	db	0
  1979  018123  00                 	db	0
  1980  018124  00                 	db	0
  1981  018125  00                 	db	0
  1982  018126  00                 	db	0
  1983  018127  00                 	db	0
  1984  018128  00                 	db	0
  1985  018129  00                 	db	0
  1986  01812A  00                 	db	0
  1987  01812B  00                 	db	0
  1988  01812C  00                 	db	0
  1989  01812D  00                 	db	0
  1990  01812E  00                 	db	0
  1991  01812F  00                 	db	0
  1992  018130  00                 	db	0
  1993  018131  00                 	db	0
  1994  018132  00                 	db	0
  1995  018133  00                 	db	0
  1996  018134  00                 	db	0
  1997  018135  00                 	db	0
  1998  018136  00                 	db	0
  1999  018137  00                 	db	0
  2000  018138  00                 	db	0
  2001  018139  00                 	db	0
  2002  01813A  00                 	db	0
  2003  01813B  00                 	db	0
  2004  01813C  00                 	db	0
  2005  01813D  00                 	db	0
  2006  01813E  00                 	db	0
  2007  01813F  00                 	db	0
  2008  018140  00                 	db	0
  2009  018141  00                 	db	0
  2010  018142  00                 	db	0
  2011  018143  00                 	db	0
  2012  018144  00                 	db	0
  2013  018145  00                 	db	0
  2014  018146  00                 	db	0
  2015  018147  00                 	db	0
  2016  018148  00                 	db	0
  2017  018149  00                 	db	0
  2018  01814A  00                 	db	0
  2019  01814B  00                 	db	0
  2020  01814C  00                 	db	0
  2021  01814D  00                 	db	0
  2022  01814E  00                 	db	0
  2023  01814F  00                 	db	0
  2024  018150  00                 	db	0
  2025  018151  00                 	db	0
  2026  018152  00                 	db	0
  2027  018153  00                 	db	0
  2028  018154  00                 	db	0
  2029  018155  00                 	db	0
  2030  018156  00                 	db	0
  2031  018157  00                 	db	0
  2032  018158  00                 	db	0
  2033  018159  00                 	db	0
  2034  01815A  00                 	db	0
  2035  01815B  00                 	db	0
  2036  01815C  00                 	db	0
  2037  01815D  00                 	db	0
  2038  01815E  00                 	db	0
  2039  01815F  00                 	db	0
  2040  018160  00                 	db	0
  2041  018161  00                 	db	0
  2042  018162  00                 	db	0
  2043  018163  00                 	db	0
  2044  018164  00                 	db	0
  2045  018165  00                 	db	0
  2046  018166  00                 	db	0
  2047  018167  00                 	db	0
  2048  018168  00                 	db	0
  2049  018169  00                 	db	0
  2050  01816A  00                 	db	0
  2051  01816B  00                 	db	0
  2052  01816C  00                 	db	0
  2053  01816D  00                 	db	0
  2054  01816E  00                 	db	0
  2055  01816F  00                 	db	0
  2056  018170  00                 	db	0
  2057  018171  00                 	db	0
  2058  018172  00                 	db	0
  2059  018173  00                 	db	0
  2060  018174  00                 	db	0
  2061  018175  00                 	db	0
  2062  018176  00                 	db	0
  2063  018177  00                 	db	0
  2064  018178  00                 	db	0
  2065  018179  00                 	db	0
  2066  01817A  00                 	db	0
  2067  01817B  00                 	db	0
  2068  01817C  00                 	db	0
  2069  01817D  00                 	db	0
  2070  01817E  00                 	db	0
  2071  01817F  00                 	db	0
  2072  018180  00                 	db	0
  2073  018181  00                 	db	0
  2074  018182  00                 	db	0
  2075  018183  00                 	db	0
  2076  018184  00                 	db	0
  2077  018185  00                 	db	0
  2078  018186  00                 	db	0
  2079  018187  00                 	db	0
  2080                           
  2081                           ;initializer for _C
  2082  018188  0000               	dw	0
  2083  01818A  0000               	dw	0
  2084  01818C  0000               	dw	0
  2085  01818E  0000               	dw	0
  2086  018190  0000               	dw	0
  2087  018192  0000               	dw	0
  2088  018194  0000               	dw	0
  2089  018196  0000               	dw	0
  2090  018198  0000               	dw	0
  2091  01819A  0000               	dw	0
  2092  01819C  0000               	dw	0
  2093  01819E  0000               	dw	0
  2094  0181A0  0000               	dw	0
  2095  0181A2  0000               	dw	0
  2096  0181A4  0000               	dw	0
  2097  0181A6  0000               	dw	0
  2098  0181A8  0000               	dw	0
  2099  0181AA  0000               	dw	0
  2100  0181AC  0000               	dw	0
  2101  0181AE  0000               	dw	0
  2102  0181B0  0000               	dw	0
  2103  0181B2  0000               	dw	0
  2104  0181B4  0000               	dw	0
  2105  0181B6  0000               	dw	0
  2106  0181B8  0000               	dw	0
  2107  0181BA  0000               	dw	0
  2108  0181BC  0000               	dw	0
  2109  0181BE  0000               	dw	0
  2110  0181C0  0000               	dw	0
  2111  0181C2  0000               	dw	0
  2112  0181C4  0000               	dw	0
  2113  0181C6  0000               	dw	0
  2114  0181C8  0000               	dw	0
  2115  0181CA  0000               	dw	0
  2116  0181CC  0000               	dw	0
  2117  0181CE  0000               	dw	0
  2118  0181D0  0000               	dw	0
  2119  0181D2  0000               	dw	0
  2120  0181D4  0000               	dw	0
  2121  0181D6  0000               	dw	0
  2122  0181D8  0000               	dw	0
  2123  0181DA  0000               	dw	0
  2124  0181DC  0000               	dw	0
  2125  0181DE  0000               	dw	0
  2126  0181E0  0000               	dw	0
  2127  0181E2  0000               	dw	0
  2128  0181E4  0000               	dw	0
  2129  0181E6  0000               	dw	0
  2130  0181E8  0000               	dw	0
  2131  0181EA  0000               	dw	0
  2132  0181EC  0000               	dw	0
  2133  0181EE  0000               	dw	0
  2134  0181F0  0000               	dw	0
  2135  0181F2  0000               	dw	0
  2136  0181F4  0000               	dw	0
  2137  0181F6  0000               	dw	0
  2138  0181F8  0000               	dw	0
  2139  0181FA  0000               	dw	0
  2140  0181FC  0000               	dw	0
  2141  0181FE  0000               	dw	0
  2142  018200  0000               	dw	0
  2143  018202  0000               	dw	0
  2144  018204  0000               	dw	0
  2145  018206  0000               	dw	0
  2146  018208  0000               	dw	0
  2147  01820A  0000               	dw	0
  2148  01820C  0000               	dw	0
  2149  01820E  0000               	dw	0
  2150  018210  0000               	dw	0
  2151  018212  0000               	dw	0
  2152  018214  0000               	dw	0
  2153  018216  42FA               	dw	17146
  2154  018218  0000               	dw	0
  2155  01821A  0000               	dw	0
  2156  01821C  0000               	dw	0
  2157  01821E  0000               	dw	0
  2158  018220  0000               	dw	0
  2159  018222  0000               	dw	0
  2160  018224  0000               	dw	0
  2161  018226  0000               	dw	0
  2162  018228  0000               	dw	0
  2163  01822A  0000               	dw	0
  2164  01822C  0000               	dw	0
  2165  01822E  0000               	dw	0
  2166  018230  0000               	dw	0
  2167  018232  0000               	dw	0
  2168  018234  0000               	dw	0
  2169  018236  0000               	dw	0
  2170  018238  0000               	dw	0
  2171  01823A  0000               	dw	0
  2172  01823C  0000               	dw	0
  2173  01823E  0000               	dw	0
  2174  018240  00                 	db	0
  2175  018241  0000               	dw	0
  2176  018243  0000               	dw	0
  2177  018245  0000               	dw	0
  2178  018247  0000               	dw	0
  2179  018249  0000               	dw	0
  2180  01824B  0000               	dw	0
  2181  01824D  0000               	dw	0
  2182  01824F  0000               	dw	0
  2183  018251  0000               	dw	0
  2184  018253  0000               	dw	0
  2185  018255  0000               	dw	0
  2186  018257  0000               	dw	0
  2187  018259  0000               	dw	0
  2188  01825B  3F80               	dw	16256
  2189  01825D  0000               	dw	0
  2190  01825F  3F80               	dw	16256
  2191  018261  0000               	dw	0
  2192  018263  0000               	dw	0
  2193  018265  0000               	dw	0
  2194  018267  0000               	dw	0
  2195  018269  0000               	dw	0
  2196  01826B  0000               	dw	0
  2197  01826D  0000               	dw	0
  2198  01826F  0000               	dw	0
  2199  018271  0000               	dw	0
  2200  018273  0000               	dw	0
  2201  018275  0000               	dw	0
  2202  018277  0000               	dw	0
  2203  018279  0000               	dw	0
  2204  01827B  0000               	dw	0
  2205  01827D  0000               	dw	0
  2206  01827F  3A98               	dw	15000
  2207  018281  0000               	dw	0
  2208  018283  00                 	db	0
  2209  018284  00                 	db	0
  2210  018285  00                 	db	0
  2211  018286  00                 	db	0
  2212  018287  0000               	dw	0
  2213  018289  0000               	dw	0
  2214  01828B  0000               	dw	0
  2215  01828D  0000               	dw	0
  2216  01828F  0000               	dw	0
  2217  018291  0000               	dw	0
  2218  018293  0000               	dw	0
  2219  018295  0000               	dw	0
  2220  018297  0000               	dw	0
  2221  018299  0000               	dw	0
  2222  01829B  0000               	dw	0
  2223  01829D  0000               	dw	0
  2224  01829F  0000               	dw	0
  2225  0182A1  01                 	db	1
  2226  0182A2  0000               	dw	0
  2227  0182A4  0000               	dw	0
  2228  0182A6  0000               	dw	0
  2229  0182A8  0000               	dw	0
  2230  0182AA  0000               	dw	0
  2231  0182AC  0000               	dw	0
  2232  0182AE  0000               	dw	0
  2233  0182B0  0000               	dw	0
  2234  0182B2  0000               	dw	0
  2235  0182B4  0000               	dw	0
  2236  0182B6  01                 	db	1
  2237  0182B7  00                 	db	0
  2238  0182B8  0000               	dw	0
  2239  0182BA  0000               	dw	0
  2240  0182BC  0000               	dw	0
  2241  0182BE  0000               	dw	0
  2242  0182C0  0000               	dw	0
  2243  0182C2  0000               	dw	0
  2244  0182C4  0000               	dw	0
  2245  0182C6  0000               	dw	0
  2246                           
  2247                           	psect	idataBANK1
  2248  000E22                     __pidataBANK1:
  2249                           	opt callstack 0
  2250                           
  2251                           ;initializer for _R
  2252  000E22  0000               	dw	0
  2253  000E24  0000               	dw	0
  2254  000E26  0000               	dw	0
  2255  000E28  0000               	dw	0
  2256  000E2A  0000               	dw	0
  2257  000E2C  0000               	dw	0
  2258  000E2E  0000               	dw	0
  2259  000E30  0000               	dw	0
  2260  000E32  0000               	dw	0
  2261  000E34  0000               	dw	0
  2262  000E36  0000               	dw	0
  2263  000E38  0000               	dw	0
  2264  000E3A  0000               	dw	0
  2265  000E3C  0000               	dw	0
  2266  000E3E  0000               	dw	0
  2267  000E40  0000               	dw	0
  2268  000E42  0000               	dw	0
  2269  000E44  0000               	dw	0
  2270  000E46  0000               	dw	0
  2271  000E48  0F62               	dw	3938
  2272  000E4A  0FA4               	dw	4004
  2273  000E4C  89A0               	dw	35232
  2274  000E4E  3DB0               	dw	15792
  2275  000E50  DEA4               	dw	56996
  2276  000E52  3D13               	dw	15635
  2277  000E54  00                 	db	0
  2278  000E55  0000               	dw	0
  2279  000E57  00                 	db	0
  2280  000E58  0000               	dw	0
  2281  000E5A  0000               	dw	0
  2282  000E5C  0000               	dw	0
  2283  000E5E  0000               	dw	0
  2284  000E60  0000               	dw	0
  2285  000E62  0000               	dw	0
  2286  000E64  0000               	dw	0
  2287  000E66  0000               	dw	0
  2288  000E68  0000               	dw	0
  2289  000E6A  0000               	dw	0
  2290  000E6C  0000               	dw	0
  2291  000E6E  0000               	dw	0
  2292  000E70  0000               	dw	0
  2293  000E72  0000               	dw	0
  2294  000E74  0000               	dw	0
  2295  000E76  0000               	dw	0
  2296  000E78  0000               	dw	0
  2297  000E7A  0000               	dw	0
  2298  000E7C  0000               	dw	0
  2299  000E7E  0000               	dw	0
  2300  000E80  0000               	dw	0
  2301  000E82  0000               	dw	0
  2302  000E84  0000               	dw	0
  2303  000E86  0000               	dw	0
  2304  000E88  0000               	dw	0
  2305  000E8A  0000               	dw	0
  2306  000E8C  0000               	dw	0
  2307  000E8E  0000               	dw	0
  2308  000E90  0000               	dw	0
  2309  000E92  0000               	dw	0
  2310  000E94  0000               	dw	0
  2311  000E96  0000               	dw	0
  2312  000E98  0000               	dw	0
  2313  000E9A  0000               	dw	0
  2314  000E9C  0000               	dw	0
  2315  000E9E  0000               	dw	0
  2316  000EA0  0000               	dw	0
  2317  000EA2  0000               	dw	0
  2318  000EA4  0000               	dw	0
  2319  000EA6  0000               	dw	0
  2320  000EA8  0000               	dw	0
  2321  000EAA  0000               	dw	0
  2322  000EAC  0000               	dw	0
  2323  000EAE  0000               	dw	0
  2324  000EB0  0000               	dw	0
  2325  000EB2  0000               	dw	0
  2326  000EB4  0000               	dw	0
  2327  000EB6  0000               	dw	0
  2328  000EB8  00                 	db	0
  2329  000EB9  00                 	db	0
  2330  000EBA  1957               	dw	6487
  2331  000EBC  42                 	db	66
  2332                           
  2333                           ;initializer for _H
  2334  000EBD  00                 	db	0
  2335  000EBE  00                 	db	0
  2336  000EBF  01                 	db	1
  2337  000EC0  00                 	db	0
  2338  000EC1  01                 	db	1
  2339  000EC2  00                 	db	0
  2340  000EC3  01                 	db	1
  2341  000EC4  00                 	db	0
  2342  000EC5  00                 	db	0
  2343                           
  2344                           	psect	idataBANK2
  2345  000894                     __pidataBANK2:
  2346                           	opt callstack 0
  2347                           
  2348                           ;initializer for stoa@F1166
  2349  000894  28                 	db	40
  2350  000895  6E                 	db	110
  2351  000896  75                 	db	117
  2352  000897  6C                 	db	108
  2353  000898  6C                 	db	108
  2354  000899  29                 	db	41
  2355  00089A  00                 	db	0
  2356                           
  2357                           ;initializer for _V
  2358  00089B  00                 	db	0
  2359  00089C  00                 	db	0
  2360  00089D  00                 	db	0
  2361  00089E  00                 	db	0
  2362  00089F  00                 	db	0
  2363  0008A0  00                 	db	0
  2364  0008A1  00                 	db	0
  2365  0008A2  00                 	db	0
  2366  0008A3  00                 	db	0
  2367  0008A4  00                 	db	0
  2368  0008A5  00                 	db	0
  2369  0008A6  00                 	db	0
  2370  0008A7  00                 	db	0
  2371  0008A8  00                 	db	0
  2372  0008A9  00                 	db	0
  2373  0008AA  00                 	db	0
  2374  0008AB  00                 	db	0
  2375  0008AC  00                 	db	0
  2376  0008AD  00                 	db	0
  2377  0008AE  00                 	db	0
  2378  0008AF  00                 	db	0
  2379  0008B0  00                 	db	0
  2380  0008B1  00                 	db	0
  2381  0008B2  00                 	db	0
  2382  0008B3  00                 	db	0
  2383  0008B4  00                 	db	0
  2384  0008B5  00                 	db	0
  2385  0008B6  00                 	db	0
  2386  0008B7  00                 	db	0
  2387  0008B8  00                 	db	0
  2388  0008B9  00                 	db	0
  2389  0008BA  00                 	db	0
  2390  0008BB  00                 	db	0
  2391  0008BC  00                 	db	0
  2392  0008BD  00                 	db	0
  2393  0008BE  00                 	db	0
  2394  0008BF  00                 	db	0
  2395  0008C0  00                 	db	0
  2396  0008C1  00                 	db	0
  2397  0008C2  00                 	db	0
  2398  0008C3  00                 	db	0
  2399  0008C4  00                 	db	0
  2400  0008C5  00                 	db	0
  2401  0008C6  00                 	db	0
  2402  0008C7  00                 	db	0
  2403  0008C8  00                 	db	0
  2404  0008C9  00                 	db	0
  2405  0008CA  00                 	db	0
  2406  0008CB  00                 	db	0
  2407  0008CC  00                 	db	0
  2408  0008CD  00                 	db	0
  2409  0008CE  00                 	db	0
  2410  0008CF  00                 	db	0
  2411  0008D0  00                 	db	0
  2412  0008D1  00                 	db	0
  2413  0008D2  00                 	db	0
  2414  0008D3  00                 	db	0
  2415  0008D4  00                 	db	0
  2416  0008D5  00                 	db	0
  2417  0008D6  00                 	db	0
  2418  0008D7  00                 	db	0
  2419  0008D8  00                 	db	0
  2420  0008D9  00                 	db	0
  2421  0008DA  00                 	db	0
  2422  0008DB  00                 	db	0
  2423  0008DC  00                 	db	0
  2424  0008DD  00                 	db	0
  2425  0008DE  00                 	db	0
  2426  0008DF  00                 	db	0
  2427  0008E0  00                 	db	0
  2428  0008E1  00                 	db	0
  2429  0008E2  00                 	db	0
  2430  0008E3  00                 	db	0
  2431  0008E4  00                 	db	0
  2432  0008E5  00                 	db	0
  2433  0008E6  00                 	db	0
  2434  0008E7  00                 	db	0
  2435  0008E8  00                 	db	0
  2436  0008E9  00                 	db	0
  2437  0008EA  00                 	db	0
  2438  0008EB  00                 	db	0
  2439  0008EC  00                 	db	0
  2440  0008ED  00                 	db	0
  2441  0008EE  00                 	db	0
  2442  0008EF  00                 	db	0
  2443  0008F0  00                 	db	0
  2444  0008F1  00                 	db	0
  2445  0008F2  00                 	db	0
  2446  0008F3  00                 	db	0
  2447  0008F4  00                 	db	0
  2448  0008F5  00                 	db	0
  2449  0008F6  00                 	db	0
  2450  0008F7  00                 	db	0
  2451  0008F8  00                 	db	0
  2452  0008F9  00                 	db	0
  2453  0008FA  00                 	db	0
  2454  0008FB  00                 	db	0
  2455  0008FC  00                 	db	0
  2456  0008FD  00                 	db	0
  2457  0008FE  00                 	db	0
  2458  0008FF  00                 	db	0
  2459  000900  00                 	db	0
  2460  000901  00                 	db	0
  2461  000902  00                 	db	0
  2462  000903  00                 	db	0
  2463  000904  00                 	db	0
  2464  000905  00                 	db	0
  2465  000906  00                 	db	0
  2466  000907  00                 	db	0
  2467  000908  00                 	db	0
  2468  000909  00                 	db	0
  2469  00090A  00                 	db	0
  2470  00090B  00                 	db	0
  2471  00090C  00                 	db	0
  2472  00090D  00                 	db	0
  2473  00090E  00                 	db	0
  2474  00090F  00                 	db	0
  2475  000910  00                 	db	0
  2476  000911  00                 	db	0
  2477  000912  00                 	db	0
  2478  000913  00                 	db	0
  2479  000914  00                 	db	0
  2480  000915  00                 	db	0
  2481  000916  00                 	db	0
  2482  000917  00                 	db	0
  2483  000918  00                 	db	0
  2484  000919  00                 	db	0
  2485  00091A  00                 	db	0
  2486  00091B  00                 	db	0
  2487  00091C  879E               	dw	34718
  2488  00091E  5E4C               	dw	24140
  2489  000920  00                 	db	0
  2490  000921  00                 	db	0
  2491  000922  00                 	db	0
  2492  000923  00                 	db	0
  2493  000924  00                 	db	0
  2494  000925  00                 	db	0
  2495  000926  00                 	db	0
  2496  000927  0000               	dw	0
  2497  000929  0000               	dw	0
  2498  00092B  0000               	dw	0
  2499  00092D  0000               	dw	0
  2500  00092F  0000               	dw	0
  2501  000931  0000               	dw	0
  2502  000933  00                 	db	0
  2503  000934  00                 	db	0
  2504  000935  00                 	db	0
  2505  000936  00                 	db	0
  2506  000937  00                 	db	0
  2507  000938  00                 	db	0
  2508  000939  00                 	db	0
  2509  00093A  00                 	db	0
  2510  00093B  00                 	db	0
  2511  00093C  00                 	db	0
  2512  00093D  00                 	db	0
  2513  00093E  0000               	dw	0
  2514  000940  0000               	dw	0
  2515  000942  2D                 	db	45
  2516  000943  00                 	db	0
  2517  000944  00                 	db	0
  2518  000945  00                 	db	0
  2519  000946  00                 	db	0
  2520  000947  00                 	db	0
  2521  000948  0000               	dw	0
  2522  00094A  0000               	dw	0
  2523  00094C  0000               	dw	0
  2524  00094E  0000               	dw	0
  2525                           
  2526                           	psect	mediumconst
  2527  00F7AA                     __pmediumconst:
  2528                           	opt callstack 0
  2529  00F7AA  00                 	db	0
  2530  00F7AB                     _BVSOC_TABLE:
  2531                           	opt callstack 0
  2532  00F7AB  59D8               	dw	23000
  2533  00F7AD  0000               	dw	0
  2534  00F7AF  0005               	dw	5
  2535  00F7B1  0000               	dw	0
  2536  00F7B3  5B68               	dw	23400
  2537  00F7B5  0000               	dw	0
  2538  00F7B7  000A               	dw	10
  2539  00F7B9  0000               	dw	0
  2540  00F7BB  5C30               	dw	23600
  2541  00F7BD  0000               	dw	0
  2542  00F7BF  0014               	dw	20
  2543  00F7C1  0000               	dw	0
  2544  00F7C3  5E38               	dw	24120
  2545  00F7C5  0000               	dw	0
  2546  00F7C7  0019               	dw	25
  2547  00F7C9  0000               	dw	0
  2548  00F7CB  5E88               	dw	24200
  2549  00F7CD  0000               	dw	0
  2550  00F7CF  001E               	dw	30
  2551  00F7D1  0000               	dw	0
  2552  00F7D3  5F78               	dw	24440
  2553  00F7D5  0000               	dw	0
  2554  00F7D7  0028               	dw	40
  2555  00F7D9  0000               	dw	0
  2556  00F7DB  5FDC               	dw	24540
  2557  00F7DD  0000               	dw	0
  2558  00F7DF  002D               	dw	45
  2559  00F7E1  0000               	dw	0
  2560  00F7E3  6018               	dw	24600
  2561  00F7E5  0000               	dw	0
  2562  00F7E7  0032               	dw	50
  2563  00F7E9  0000               	dw	0
  2564  00F7EB  6046               	dw	24646
  2565  00F7ED  0000               	dw	0
  2566  00F7EF  0035               	dw	53
  2567  00F7F1  0000               	dw	0
  2568  00F7F3  607C               	dw	24700
  2569  00F7F5  0000               	dw	0
  2570  00F7F7  0037               	dw	55
  2571  00F7F9  0000               	dw	0
  2572  00F7FB  60AE               	dw	24750
  2573  00F7FD  0000               	dw	0
  2574  00F7FF  0039               	dw	57
  2575  00F801  0000               	dw	0
  2576  00F803  60E0               	dw	24800
  2577  00F805  0000               	dw	0
  2578  00F807  003C               	dw	60
  2579  00F809  0000               	dw	0
  2580  00F80B  6112               	dw	24850
  2581  00F80D  0000               	dw	0
  2582  00F80F  003F               	dw	63
  2583  00F811  0000               	dw	0
  2584  00F813  615D               	dw	24925
  2585  00F815  0000               	dw	0
  2586  00F817  0043               	dw	67
  2587  00F819  0000               	dw	0
  2588  00F81B  61A8               	dw	25000
  2589  00F81D  0000               	dw	0
  2590  00F81F  0046               	dw	70
  2591  00F821  0000               	dw	0
  2592  00F823  61BC               	dw	25020
  2593  00F825  0000               	dw	0
  2594  00F827  0048               	dw	72
  2595  00F829  0000               	dw	0
  2596  00F82B  61D0               	dw	25040
  2597  00F82D  0000               	dw	0
  2598  00F82F  004B               	dw	75
  2599  00F831  0000               	dw	0
  2600  00F833  61DA               	dw	25050
  2601  00F835  0000               	dw	0
  2602  00F837  0050               	dw	80
  2603  00F839  0000               	dw	0
  2604  00F83B  61E4               	dw	25060
  2605  00F83D  0000               	dw	0
  2606  00F83F  0055               	dw	85
  2607  00F841  0000               	dw	0
  2608  00F843  61F8               	dw	25080
  2609  00F845  0000               	dw	0
  2610  00F847  005A               	dw	90
  2611  00F849  0000               	dw	0
  2612  00F84B  6208               	dw	25096
  2613  00F84D  0000               	dw	0
  2614  00F84F  005C               	dw	92
  2615  00F851  0000               	dw	0
  2616  00F853  6222               	dw	25122
  2617  00F855  0000               	dw	0
  2618  00F857  005D               	dw	93
  2619  00F859  0000               	dw	0
  2620  00F85B  6234               	dw	25140
  2621  00F85D  0000               	dw	0
  2622  00F85F  005F               	dw	95
  2623  00F861  0000               	dw	0
  2624  00F863  6248               	dw	25160
  2625  00F865  0000               	dw	0
  2626  00F867  0061               	dw	97
  2627  00F869  0000               	dw	0
  2628  00F86B  625C               	dw	25180
  2629  00F86D  0000               	dw	0
  2630  00F86F  0064               	dw	100
  2631  00F871  0000               	dw	0
  2632  00F873  6784               	dw	26500
  2633  00F875  0000               	dw	0
  2634  00F877  0062               	dw	98
  2635  00F879  0000               	dw	0
  2636  00F87B                     __end_of_BVSOC_TABLE:
  2637                           	opt callstack 0
  2638  00F87B                     ___month_to_secs@secs_through_month:
  2639                           	opt callstack 0
  2640  00F87B  0000               	dw	0
  2641  00F87D  0000               	dw	0
  2642  00F87F  DE80               	dw	56960
  2643  00F881  0028               	dw	40
  2644  00F883  C880               	dw	51328
  2645  00F885  004D               	dw	77
  2646  00F887  A700               	dw	42752
  2647  00F889  0076               	dw	118
  2648  00F88B  3400               	dw	13312
  2649  00F88D  009E               	dw	158
  2650  00F88F  1280               	dw	4736
  2651  00F891  00C7               	dw	199
  2652  00F893  9F80               	dw	40832
  2653  00F895  00EE               	dw	238
  2654  00F897  7E00               	dw	32256
  2655  00F899  0117               	dw	279
  2656  00F89B  5C80               	dw	23680
  2657  00F89D  0140               	dw	320
  2658  00F89F  E980               	dw	59776
  2659  00F8A1  0167               	dw	359
  2660  00F8A3  C800               	dw	51200
  2661  00F8A5  0190               	dw	400
  2662  00F8A7  5500               	dw	21760
  2663  00F8A9  01B8               	dw	440
  2664  00F8AB                     __end_of___month_to_secs@secs_through_month:
  2665                           	opt callstack 0
  2666  00F8AB                     ___secs_to_tm@days_in_month:
  2667                           	opt callstack 0
  2668  00F8AB  1F                 	db	31
  2669  00F8AC  1E                 	db	30
  2670  00F8AD  1F                 	db	31
  2671  00F8AE  1E                 	db	30
  2672  00F8AF  1F                 	db	31
  2673  00F8B0  1F                 	db	31
  2674  00F8B1  1E                 	db	30
  2675  00F8B2  1F                 	db	31
  2676  00F8B3  1E                 	db	30
  2677  00F8B4  1F                 	db	31
  2678  00F8B5  1F                 	db	31
  2679  00F8B6  1D                 	db	29
  2680  00F8B7                     __end_of___secs_to_tm@days_in_month:
  2681                           	opt callstack 0
  2682  00F8B7                     _T:
  2683                           	opt callstack 0
  2684  00F8B7  63                 	db	99
  2685  00F8B8  6F                 	db	111
  2686  00F8B9  6D                 	db	109
  2687  00F8BA  6D                 	db	109
  2688  00F8BB  61                 	db	97
  2689  00F8BC  6E                 	db	110
  2690  00F8BD  64                 	db	100
  2691  00F8BE  73                 	db	115
  2692  00F8BF  20                 	db	32
  2693  00F8C0  31                 	db	49
  2694  00F8C1  00                 	db	0
  2695  00F8C2  00                 	db	0
  2696  00F8C3  00                 	db	0
  2697  00F8C4  00                 	db	0
  2698  00F8C5  00                 	db	0
  2699  00F8C6  00                 	db	0
  2700  00F8C7  00                 	db	0
  2701  00F8C8  00                 	db	0
  2702  00F8C9  00                 	db	0
  2703  00F8CA  00                 	db	0
  2704  00F8CB  00                 	db	0
  2705  00F8CC  00                 	db	0
  2706  00F8CD  64                 	db	100
  2707  00F8CE  69                 	db	105
  2708  00F8CF  73                 	db	115
  2709  00F8D0  70                 	db	112
  2710  00F8D1  6C                 	db	108
  2711  00F8D2  61                 	db	97
  2712  00F8D3  79                 	db	121
  2713  00F8D4  73                 	db	115
  2714  00F8D5  20                 	db	32
  2715  00F8D6  31                 	db	49
  2716  00F8D7  00                 	db	0
  2717  00F8D8  00                 	db	0
  2718  00F8D9  00                 	db	0
  2719  00F8DA  00                 	db	0
  2720  00F8DB  00                 	db	0
  2721  00F8DC  00                 	db	0
  2722  00F8DD  00                 	db	0
  2723  00F8DE  00                 	db	0
  2724  00F8DF  00                 	db	0
  2725  00F8E0  00                 	db	0
  2726  00F8E1  00                 	db	0
  2727  00F8E2  00                 	db	0
  2728  00F8E3  63                 	db	99
  2729  00F8E4  6F                 	db	111
  2730  00F8E5  6D                 	db	109
  2731  00F8E6  6D                 	db	109
  2732  00F8E7  61                 	db	97
  2733  00F8E8  6E                 	db	110
  2734  00F8E9  64                 	db	100
  2735  00F8EA  73                 	db	115
  2736  00F8EB  20                 	db	32
  2737  00F8EC  32                 	db	50
  2738  00F8ED  00                 	db	0
  2739  00F8EE  00                 	db	0
  2740  00F8EF  00                 	db	0
  2741  00F8F0  00                 	db	0
  2742  00F8F1  00                 	db	0
  2743  00F8F2  00                 	db	0
  2744  00F8F3  00                 	db	0
  2745  00F8F4  00                 	db	0
  2746  00F8F5  00                 	db	0
  2747  00F8F6  00                 	db	0
  2748  00F8F7  00                 	db	0
  2749  00F8F8  00                 	db	0
  2750  00F8F9  64                 	db	100
  2751  00F8FA  69                 	db	105
  2752  00F8FB  73                 	db	115
  2753  00F8FC  70                 	db	112
  2754  00F8FD  6C                 	db	108
  2755  00F8FE  61                 	db	97
  2756  00F8FF  79                 	db	121
  2757  00F900  73                 	db	115
  2758  00F901  20                 	db	32
  2759  00F902  32                 	db	50
  2760  00F903  00                 	db	0
  2761  00F904  00                 	db	0
  2762  00F905  00                 	db	0
  2763  00F906  00                 	db	0
  2764  00F907  00                 	db	0
  2765  00F908  00                 	db	0
  2766  00F909  00                 	db	0
  2767  00F90A  00                 	db	0
  2768  00F90B  00                 	db	0
  2769  00F90C  00                 	db	0
  2770  00F90D  00                 	db	0
  2771  00F90E  00                 	db	0
  2772  00F90F  63                 	db	99
  2773  00F910  6F                 	db	111
  2774  00F911  6D                 	db	109
  2775  00F912  6D                 	db	109
  2776  00F913  61                 	db	97
  2777  00F914  6E                 	db	110
  2778  00F915  64                 	db	100
  2779  00F916  73                 	db	115
  2780  00F917  20                 	db	32
  2781  00F918  33                 	db	51
  2782  00F919  00                 	db	0
  2783  00F91A  00                 	db	0
  2784  00F91B  00                 	db	0
  2785  00F91C  00                 	db	0
  2786  00F91D  00                 	db	0
  2787  00F91E  00                 	db	0
  2788  00F91F  00                 	db	0
  2789  00F920  00                 	db	0
  2790  00F921  00                 	db	0
  2791  00F922  00                 	db	0
  2792  00F923  00                 	db	0
  2793  00F924  00                 	db	0
  2794  00F925  64                 	db	100
  2795  00F926  69                 	db	105
  2796  00F927  73                 	db	115
  2797  00F928  70                 	db	112
  2798  00F929  6C                 	db	108
  2799  00F92A  61                 	db	97
  2800  00F92B  79                 	db	121
  2801  00F92C  73                 	db	115
  2802  00F92D  20                 	db	32
  2803  00F92E  33                 	db	51
  2804  00F92F  00                 	db	0
  2805  00F930  00                 	db	0
  2806  00F931  00                 	db	0
  2807  00F932  00                 	db	0
  2808  00F933  00                 	db	0
  2809  00F934  00                 	db	0
  2810  00F935  00                 	db	0
  2811  00F936  00                 	db	0
  2812  00F937  00                 	db	0
  2813  00F938  00                 	db	0
  2814  00F939  00                 	db	0
  2815  00F93A  00                 	db	0
  2816  00F93B  63                 	db	99
  2817  00F93C  6F                 	db	111
  2818  00F93D  6D                 	db	109
  2819  00F93E  6D                 	db	109
  2820  00F93F  61                 	db	97
  2821  00F940  6E                 	db	110
  2822  00F941  64                 	db	100
  2823  00F942  73                 	db	115
  2824  00F943  20                 	db	32
  2825  00F944  34                 	db	52
  2826  00F945  00                 	db	0
  2827  00F946  00                 	db	0
  2828  00F947  00                 	db	0
  2829  00F948  00                 	db	0
  2830  00F949  00                 	db	0
  2831  00F94A  00                 	db	0
  2832  00F94B  00                 	db	0
  2833  00F94C  00                 	db	0
  2834  00F94D  00                 	db	0
  2835  00F94E  00                 	db	0
  2836  00F94F  00                 	db	0
  2837  00F950  00                 	db	0
  2838  00F951  64                 	db	100
  2839  00F952  69                 	db	105
  2840  00F953  73                 	db	115
  2841  00F954  70                 	db	112
  2842  00F955  6C                 	db	108
  2843  00F956  61                 	db	97
  2844  00F957  79                 	db	121
  2845  00F958  73                 	db	115
  2846  00F959  20                 	db	32
  2847  00F95A  34                 	db	52
  2848  00F95B  00                 	db	0
  2849  00F95C  00                 	db	0
  2850  00F95D  00                 	db	0
  2851  00F95E  00                 	db	0
  2852  00F95F  00                 	db	0
  2853  00F960  00                 	db	0
  2854  00F961  00                 	db	0
  2855  00F962  00                 	db	0
  2856  00F963  00                 	db	0
  2857  00F964  00                 	db	0
  2858  00F965  00                 	db	0
  2859  00F966  00                 	db	0
  2860  00F967                     __end_of_T:
  2861                           	opt callstack 0
  2862  00F967                     _spin:
  2863                           	opt callstack 0
  2864  00F967  7C                 	db	124
  2865  00F968  7C                 	db	124
  2866  00F969  2F                 	db	47
  2867  00F96A  2F                 	db	47
  2868  00F96B  2D                 	db	45
  2869  00F96C  2D                 	db	45
  2870  00F96D  00                 	db	0
  2871  00F96E  00                 	db	0
  2872  00F96F  00                 	db	0
  2873  00F970  00                 	db	0
  2874  00F971  00                 	db	0
  2875  00F972  00                 	db	0
  2876  00F973  00                 	db	0
  2877  00F974  00                 	db	0
  2878  00F975  00                 	db	0
  2879  00F976  00                 	db	0
  2880  00F977  00                 	db	0
  2881  00F978  00                 	db	0
  2882  00F979  00                 	db	0
  2883  00F97A  00                 	db	0
  2884  00F97B  7C                 	db	124
  2885  00F97C  7C                 	db	124
  2886  00F97D  2F                 	db	47
  2887  00F97E  2F                 	db	47
  2888  00F97F  2D                 	db	45
  2889  00F980  2D                 	db	45
  2890  00F981  5C                 	db	92
  2891  00F982  5C                 	db	92
  2892  00F983  00                 	db	0
  2893  00F984  00                 	db	0
  2894  00F985  00                 	db	0
  2895  00F986  00                 	db	0
  2896  00F987  00                 	db	0
  2897  00F988  00                 	db	0
  2898  00F989  00                 	db	0
  2899  00F98A  00                 	db	0
  2900  00F98B  00                 	db	0
  2901  00F98C  00                 	db	0
  2902  00F98D  00                 	db	0
  2903  00F98E  00                 	db	0
  2904  00F98F  4F                 	db	79
  2905  00F990  4F                 	db	79
  2906  00F991  4F                 	db	79
  2907  00F992  4F                 	db	79
  2908  00F993  4F                 	db	79
  2909  00F994  4F                 	db	79
  2910  00F995  2D                 	db	45
  2911  00F996  2D                 	db	45
  2912  00F997  5F                 	db	95
  2913  00F998  5F                 	db	95
  2914  00F999  2D                 	db	45
  2915  00F99A  00                 	db	0
  2916  00F99B  00                 	db	0
  2917  00F99C  00                 	db	0
  2918  00F99D  00                 	db	0
  2919  00F99E  00                 	db	0
  2920  00F99F  00                 	db	0
  2921  00F9A0  00                 	db	0
  2922  00F9A1  00                 	db	0
  2923  00F9A2  00                 	db	0
  2924  00F9A3  76                 	db	118
  2925  00F9A4  76                 	db	118
  2926  00F9A5  3C                 	db	60
  2927  00F9A6  3C                 	db	60
  2928  00F9A7  5E                 	db	94
  2929  00F9A8  5E                 	db	94
  2930  00F9A9  3E                 	db	62
  2931  00F9AA  3E                 	db	62
  2932  00F9AB  00                 	db	0
  2933  00F9AC  00                 	db	0
  2934  00F9AD  00                 	db	0
  2935  00F9AE  00                 	db	0
  2936  00F9AF  00                 	db	0
  2937  00F9B0  00                 	db	0
  2938  00F9B1  00                 	db	0
  2939  00F9B2  00                 	db	0
  2940  00F9B3  00                 	db	0
  2941  00F9B4  00                 	db	0
  2942  00F9B5  00                 	db	0
  2943  00F9B6  00                 	db	0
  2944  00F9B7  2E                 	db	46
  2945  00F9B8  2E                 	db	46
  2946  00F9B9  2A                 	db	42
  2947  00F9BA  2A                 	db	42
  2948  00F9BB  78                 	db	120
  2949  00F9BC  23                 	db	35
  2950  00F9BD  78                 	db	120
  2951  00F9BE  23                 	db	35
  2952  00F9BF  58                 	db	88
  2953  00F9C0  58                 	db	88
  2954  00F9C1  7C                 	db	124
  2955  00F9C2  7C                 	db	124
  2956  00F9C3  2D                 	db	45
  2957  00F9C4  2D                 	db	45
  2958  00F9C5  00                 	db	0
  2959  00F9C6  00                 	db	0
  2960  00F9C7  00                 	db	0
  2961  00F9C8  00                 	db	0
  2962  00F9C9  00                 	db	0
  2963  00F9CA  00                 	db	0
  2964  00F9CB  2E                 	db	46
  2965  00F9CC  2E                 	db	46
  2966  00F9CD  6F                 	db	111
  2967  00F9CE  6F                 	db	111
  2968  00F9CF  4F                 	db	79
  2969  00F9D0  4F                 	db	79
  2970  00F9D1  6F                 	db	111
  2971  00F9D2  6F                 	db	111
  2972  00F9D3  00                 	db	0
  2973  00F9D4  00                 	db	0
  2974  00F9D5  00                 	db	0
  2975  00F9D6  00                 	db	0
  2976  00F9D7  00                 	db	0
  2977  00F9D8  00                 	db	0
  2978  00F9D9  00                 	db	0
  2979  00F9DA  00                 	db	0
  2980  00F9DB  00                 	db	0
  2981  00F9DC  00                 	db	0
  2982  00F9DD  00                 	db	0
  2983  00F9DE  00                 	db	0
  2984  00F9DF                     __end_of_spin:
  2985                           	opt callstack 0
  2986  00F9DF  0000               	dw	0
  2987  00F9E1  3F80               	dw	16256
  2988  00F9E3  0000               	dw	0
  2989  00F9E5  3FC0               	dw	16320
  2990  00F9E7                     __end_of_bp:
  2991                           	opt callstack 0
  2992  00F9E7                     ___gmt:
  2993                           	opt callstack 0
  2994  00F9E7  47                 	db	71
  2995  00F9E8  4D                 	db	77
  2996  00F9E9  54                 	db	84
  2997  00F9EA  00                 	db	0
  2998  00F9EB                     __end_of___gmt:
  2999                           	opt callstack 0
  3000  00F9EB  AA00               	dw	43520
  3001  00F9ED  3FB8               	dw	16312
  3002  00F9EF                     __end_of_ivln2_h:
  3003                           	opt callstack 0
  3004  00F9EF  23C6               	dw	9158
  3005  00F9F1  B8F6               	dw	47350
  3006  00F9F3                     __end_of_cp_l:
  3007                           	opt callstack 0
  3008  00F9F3  4000               	dw	16384
  3009  00F9F5  3F76               	dw	16246
  3010  00F9F7                     __end_of_cp_h:
  3011                           	opt callstack 0
  3012  0000                     _IVTADL	set	14493
  3013  0000                     _IVTADH	set	14494
  3014  0000                     _IVTADU	set	14495
  3015  0000                     _CRCDATH	set	14689
  3016  0000                     _CRCDATL	set	14688
  3017  0000                     _CRCCON0bits	set	14696
  3018  0000                     _CRCCON1bits	set	14697
  3019  0000                     _CRCXORL	set	14694
  3020  0000                     _CRCXORH	set	14695
  3021  0000                     _SCANTRIG	set	14717
  3022  0000                     _SCANHADRL	set	14713
  3023  0000                     _SCANHADRH	set	14714
  3024  0000                     _SCANHADRU	set	14715
  3025  0000                     _SCANLADRL	set	14710
  3026  0000                     _SCANLADRH	set	14711
  3027  0000                     _SCANLADRU	set	14712
  3028  0000                     _SCANCON0	set	14716
  3029  0000                     _CRCACCH	set	14691
  3030  0000                     _CRCACCL	set	14690
  3031  0000                     _CRCCON1	set	14697
  3032  0000                     _CRCCON0	set	14696
  3033  0000                     _PIR6bits	set	14758
  3034  0000                     _PIR4bits	set	14756
  3035  0000                     _PIE8bits	set	14744
  3036  0000                     _PIR8bits	set	14760
  3037  0000                     _PIR0bits	set	14752
  3038  0000                     _NVMCON2	set	14822
  3039  0000                     _NVMDAT	set	14819
  3040  0000                     _NVMADRL	set	14816
  3041  0000                     _NVMADRH	set	14817
  3042  0000                     _NVMCON1bits	set	14821
  3043  0000                     _SCANPR	set	14839
  3044  0000                     _DMA2PR	set	14836
  3045  0000                     _DMA1PR	set	14835
  3046  0000                     _MAINPR	set	14834
  3047  0000                     _ISRPR	set	14833
  3048  0000                     _PIE2bits	set	14738
  3049  0000                     _PIR2bits	set	14754
  3050  0000                     _PIE9bits	set	14745
  3051  0000                     _PIR9bits	set	14761
  3052  0000                     _PIE6bits	set	14742
  3053  0000                     _PIE3bits	set	14739
  3054  0000                     _PMD7	set	14791
  3055  0000                     _PMD6	set	14790
  3056  0000                     _PMD5	set	14789
  3057  0000                     _PMD4	set	14788
  3058  0000                     _PMD3	set	14787
  3059  0000                     _PMD2	set	14786
  3060  0000                     _PMD1	set	14785
  3061  0000                     _PMD0	set	14784
  3062  0000                     _OSCTUNE	set	14814
  3063  0000                     _OSCFRQ	set	14815
  3064  0000                     _OSCEN	set	14813
  3065  0000                     _OSCCON3	set	14811
  3066  0000                     _OSCCON1	set	14809
  3067  0000                     _IPR8bits	set	14728
  3068  0000                     _IPR9bits	set	14729
  3069  0000                     _IPR5bits	set	14725
  3070  0000                     _IPR1bits	set	14721
  3071  0000                     _IPR3bits	set	14723
  3072  0000                     _IPR6bits	set	14726
  3073  0000                     _IPR2bits	set	14722
  3074  0000                     _PIE5bits	set	14741
  3075  0000                     _PIE1bits	set	14737
  3076  0000                     _PIR5bits	set	14757
  3077  0000                     _PIR1bits	set	14753
  3078  0000                     _PLLR	set	118496
  3079  0000                     _SPI1SDIPPS	set	15071
  3080  0000                     _U1RXPPS	set	15077
  3081  0000                     _RC6PPS	set	14870
  3082  0000                     _RC5PPS	set	14869
  3083  0000                     _INT1PPS	set	15041
  3084  0000                     _RD1PPS	set	14873
  3085  0000                     _INT0PPS	set	15040
  3086  0000                     _RC3PPS	set	14867
  3087  0000                     _RB6PPS	set	14862
  3088  0000                     _SPI1SCKPPS	set	15070
  3089  0000                     _U2RXPPS	set	15080
  3090  0000                     _SLRCONF	set	14995
  3091  0000                     _SLRCONE	set	14979
  3092  0000                     _SLRCOND	set	14963
  3093  0000                     _SLRCONC	set	14947
  3094  0000                     _SLRCONB	set	14931
  3095  0000                     _SLRCONA	set	14915
  3096  0000                     _ODCOND	set	14962
  3097  0000                     _ODCONC	set	14946
  3098  0000                     _ODCONB	set	14930
  3099  0000                     _ODCONA	set	14914
  3100  0000                     _ODCONF	set	14994
  3101  0000                     _ODCONE	set	14978
  3102  0000                     _WPUC	set	14945
  3103  0000                     _WPUA	set	14913
  3104  0000                     _WPUB	set	14929
  3105  0000                     _WPUE	set	14977
  3106  0000                     _WPUF	set	14993
  3107  0000                     _WPUD	set	14961
  3108  0000                     _ANSELA	set	14912
  3109  0000                     _ANSELF	set	14992
  3110  0000                     _ANSELE	set	14976
  3111  0000                     _ANSELB	set	14928
  3112  0000                     _ANSELC	set	14944
  3113  0000                     _ANSELD	set	14960
  3114  0000                     _DMA2SSA	set	15321
  3115  0000                     _DMA1SSA	set	15353
  3116  0000                     _DMA2DSZ	set	15310
  3117  0000                     _DMA2SSZ	set	15319
  3118  0000                     _DMA2DSA	set	15312
  3119  0000                     _DMA1DSZ	set	15342
  3120  0000                     _DMA1SSZ	set	15351
  3121  0000                     _DMA1DSA	set	15344
  3122  0000                     _DMA2CON0bits	set	15324
  3123  0000                     _DMA2CON1bits	set	15325
  3124  0000                     _DMA1CON0bits	set	15356
  3125  0000                     _DMA1CON1bits	set	15357
  3126  0000                     _DMA2CON0	set	15324
  3127  0000                     _DMA2AIRQ	set	15326
  3128  0000                     _DMA2SIRQ	set	15327
  3129  0000                     _DMA2CON1	set	15325
  3130  0000                     _DMA1CON0	set	15356
  3131  0000                     _DMA1AIRQ	set	15358
  3132  0000                     _DMA1SIRQ	set	15359
  3133  0000                     _DMA1CON1	set	15357
  3134  0000                     _CLKRCON	set	15589
  3135  0000                     _CLKRCLK	set	15590
  3136  0000                     _SPI1CON1bits	set	15637
  3137  0000                     _SPI1STATUSbits	set	15639
  3138  0000                     _SPI1INTFbits	set	15642
  3139  0000                     _SPI1CON0bits	set	15636
  3140  0000                     _SPI1RXB	set	15632
  3141  0000                     _SPI1TXB	set	15633
  3142  0000                     _SPI1TCNTL	set	15634
  3143  0000                     _SPI1CON0	set	15636
  3144  0000                     _SPI1CLK	set	15644
  3145  0000                     _SPI1BAUD	set	15641
  3146  0000                     _SPI1CON2	set	15638
  3147  0000                     _SPI1CON1	set	15637
  3148  0000                     _U2RXB	set	15824
  3149  0000                     _U2TXB	set	15826
  3150  0000                     _U2ERRIE	set	15842
  3151  0000                     _U2ERRIR	set	15841
  3152  0000                     _U2UIR	set	15840
  3153  0000                     _U2FIFO	set	15839
  3154  0000                     _U2BRGH	set	15838
  3155  0000                     _U2BRGL	set	15837
  3156  0000                     _U2CON2	set	15836
  3157  0000                     _U2CON1	set	15835
  3158  0000                     _U2CON0	set	15834
  3159  0000                     _U2P3L	set	15832
  3160  0000                     _U2P2L	set	15830
  3161  0000                     _U2P1L	set	15828
  3162  0000                     _U1RXB	set	15848
  3163  0000                     _U1ERRIE	set	15866
  3164  0000                     _U1ERRIR	set	15865
  3165  0000                     _U1UIR	set	15864
  3166  0000                     _U1FIFO	set	15863
  3167  0000                     _U1BRGH	set	15862
  3168  0000                     _U1BRGL	set	15861
  3169  0000                     _U1CON2	set	15860
  3170  0000                     _U1CON1	set	15859
  3171  0000                     _U1CON0	set	15858
  3172  0000                     _U1P3H	set	15857
  3173  0000                     _U1P3L	set	15856
  3174  0000                     _U1P2H	set	15855
  3175  0000                     _U1P2L	set	15854
  3176  0000                     _U1P1H	set	15853
  3177  0000                     _U1P1L	set	15852
  3178  0000                     _FVRCON	set	16065
  3179  0000                     _ADFLTRL	set	16102
  3180  0000                     _ADFLTRH	set	16103
  3181  0000                     _ADCON0bits	set	16120
  3182  0000                     _ADCON0	set	16120
  3183  0000                     _ADCLK	set	16127
  3184  0000                     _ADACT	set	16126
  3185  0000                     _ADREF	set	16125
  3186  0000                     _ADSTAT	set	16124
  3187  0000                     _ADCON3	set	16123
  3188  0000                     _ADCON2	set	16122
  3189  0000                     _ADCON1	set	16121
  3190  0000                     _ADPREH	set	16119
  3191  0000                     _ADPREL	set	16118
  3192  0000                     _ADCAP	set	16117
  3193  0000                     _ADACQH	set	16116
  3194  0000                     _ADACQL	set	16115
  3195  0000                     _ADPCH	set	16113
  3196  0000                     _ADRPT	set	16108
  3197  0000                     _ADACCU	set	16106
  3198  0000                     _ADSTPTH	set	16101
  3199  0000                     _ADSTPTL	set	16100
  3200  0000                     _ADUTHH	set	16097
  3201  0000                     _ADUTHL	set	16096
  3202  0000                     _ADLTHH	set	16095
  3203  0000                     _ADLTHL	set	16094
  3204  0000                     _CCPTMRS1bits	set	16223
  3205  0000                     _PORTDbits	set	16333
  3206  0000                     _PORTFbits	set	16335
  3207  0000                     _LATFbits	set	16319
  3208  0000                     _LATCbits	set	16316
  3209  0000                     _LATDbits	set	16317
  3210  0000                     _PORTBbits	set	16331
  3211  0000                     _T3CONbits	set	16294
  3212  0000                     _T3CON	set	16294
  3213  0000                     _TMR3L	set	16292
  3214  0000                     _TMR3H	set	16293
  3215  0000                     _T3CLK	set	16297
  3216  0000                     _T3GATE	set	16296
  3217  0000                     _T3GCON	set	16295
  3218  0000                     _T2CON	set	16300
  3219  0000                     _T2TMR	set	16298
  3220  0000                     _T2PR	set	16299
  3221  0000                     _T2RST	set	16303
  3222  0000                     _T2HLT	set	16301
  3223  0000                     _T2CLKCON	set	16302
  3224  0000                     _PWM8DCL	set	16224
  3225  0000                     _PWM8DCH	set	16225
  3226  0000                     _PWM8CON	set	16226
  3227  0000                     _LATEbits	set	16318
  3228  0000                     _T5CONbits	set	16282
  3229  0000                     _T5CON	set	16282
  3230  0000                     _TMR5L	set	16280
  3231  0000                     _TMR5H	set	16281
  3232  0000                     _T5CLK	set	16285
  3233  0000                     _T5GATE	set	16284
  3234  0000                     _T5GCON	set	16283
  3235  0000                     _T6CON	set	16276
  3236  0000                     _T6TMR	set	16274
  3237  0000                     _T6PR	set	16275
  3238  0000                     _T6RST	set	16279
  3239  0000                     _T6HLT	set	16277
  3240  0000                     _T6CLKCON	set	16278
  3241  0000                     _TRISD	set	16325
  3242  0000                     _TRISC	set	16324
  3243  0000                     _TRISB	set	16323
  3244  0000                     _TRISA	set	16322
  3245  0000                     _TRISF	set	16327
  3246  0000                     _TRISE	set	16326
  3247  0000                     _LATC	set	16316
  3248  0000                     _LATB	set	16315
  3249  0000                     _LATF	set	16319
  3250  0000                     _LATA	set	16314
  3251  0000                     _LATD	set	16317
  3252  0000                     _LATE	set	16318
  3253  0000                     _IVTLOCKbits	set	16340
  3254  0000                     _IVTLOCK	set	16340
  3255  0000                     _INTCON0bits	set	16338
  3256  0000                     _GIE	set	130711
  3257  00F9F7                     STR_95:
  3258                           
  3259                           ; BSR set to: 57
  3260  00F9F7  20                 	db	32
  3261  00F9F8  25                 	db	37
  3262  00F9F9  63                 	db	99	;'c'
  3263  00F9FA  20                 	db	32
  3264  00F9FB  2C                 	db	44
  3265  00F9FC  25                 	db	37
  3266  00F9FD  6C                 	db	108	;'l'
  3267  00F9FE  75                 	db	117	;'u'
  3268  00F9FF  2C                 	db	44
  3269  00FA00  25                 	db	37
  3270  00FA01  34                 	db	52	;'4'
  3271  00FA02  2E                 	db	46
  3272  00FA03  34                 	db	52	;'4'
  3273  00FA04  66                 	db	102	;'f'
  3274  00FA05  2C                 	db	44
  3275  00FA06  25                 	db	37
  3276  00FA07  34                 	db	52	;'4'
  3277  00FA08  2E                 	db	46
  3278  00FA09  34                 	db	52	;'4'
  3279  00FA0A  66                 	db	102	;'f'
  3280  00FA0B  2C                 	db	44
  3281  00FA0C  25                 	db	37
  3282  00FA0D  34                 	db	52	;'4'
  3283  00FA0E  2E                 	db	46
  3284  00FA0F  34                 	db	52	;'4'
  3285  00FA10  66                 	db	102	;'f'
  3286  00FA11  2C                 	db	44
  3287  00FA12  25                 	db	37
  3288  00FA13  34                 	db	52	;'4'
  3289  00FA14  2E                 	db	46
  3290  00FA15  34                 	db	52	;'4'
  3291  00FA16  66                 	db	102	;'f'
  3292  00FA17  2C                 	db	44
  3293  00FA18  25                 	db	37
  3294  00FA19  34                 	db	52	;'4'
  3295  00FA1A  2E                 	db	46
  3296  00FA1B  34                 	db	52	;'4'
  3297  00FA1C  66                 	db	102	;'f'
  3298  00FA1D  2C                 	db	44
  3299  00FA1E  25                 	db	37
  3300  00FA1F  34                 	db	52	;'4'
  3301  00FA20  2E                 	db	46
  3302  00FA21  33                 	db	51	;'3'
  3303  00FA22  66                 	db	102	;'f'
  3304  00FA23  2C                 	db	44
  3305  00FA24  25                 	db	37
  3306  00FA25  34                 	db	52	;'4'
  3307  00FA26  2E                 	db	46
  3308  00FA27  33                 	db	51	;'3'
  3309  00FA28  66                 	db	102	;'f'
  3310  00FA29  2C                 	db	44
  3311  00FA2A  25                 	db	37
  3312  00FA2B  34                 	db	52	;'4'
  3313  00FA2C  2E                 	db	46
  3314  00FA2D  33                 	db	51	;'3'
  3315  00FA2E  66                 	db	102	;'f'
  3316  00FA2F  2C                 	db	44
  3317  00FA30  25                 	db	37
  3318  00FA31  34                 	db	52	;'4'
  3319  00FA32  2E                 	db	46
  3320  00FA33  33                 	db	51	;'3'
  3321  00FA34  66                 	db	102	;'f'
  3322  00FA35  2C                 	db	44
  3323  00FA36  25                 	db	37
  3324  00FA37  34                 	db	52	;'4'
  3325  00FA38  2E                 	db	46
  3326  00FA39  33                 	db	51	;'3'
  3327  00FA3A  66                 	db	102	;'f'
  3328  00FA3B  2C                 	db	44
  3329  00FA3C  25                 	db	37
  3330  00FA3D  34                 	db	52	;'4'
  3331  00FA3E  2E                 	db	46
  3332  00FA3F  33                 	db	51	;'3'
  3333  00FA40  66                 	db	102	;'f'
  3334  00FA41  2C                 	db	44
  3335  00FA42  25                 	db	37
  3336  00FA43  64                 	db	100	;'d'
  3337  00FA44  2C                 	db	44
  3338  00FA45  25                 	db	37
  3339  00FA46  64                 	db	100	;'d'
  3340  00FA47  2C                 	db	44
  3341  00FA48  25                 	db	37
  3342  00FA49  32                 	db	50	;'2'
  3343  00FA4A  2E                 	db	46
  3344  00FA4B  36                 	db	54	;'6'
  3345  00FA4C  66                 	db	102	;'f'
  3346  00FA4D  2C                 	db	44
  3347  00FA4E  25                 	db	37
  3348  00FA4F  34                 	db	52	;'4'
  3349  00FA50  2E                 	db	46
  3350  00FA51  33                 	db	51	;'3'
  3351  00FA52  66                 	db	102	;'f'
  3352  00FA53  2C                 	db	44
  3353  00FA54  25                 	db	37
  3354  00FA55  64                 	db	100	;'d'
  3355  00FA56  2C                 	db	44
  3356  00FA57  25                 	db	37
  3357  00FA58  64                 	db	100	;'d'
  3358  00FA59  2C                 	db	44
  3359  00FA5A  25                 	db	37
  3360  00FA5B  6C                 	db	108	;'l'
  3361  00FA5C  75                 	db	117	;'u'
  3362  00FA5D  2C                 	db	44
  3363  00FA5E  25                 	db	37
  3364  00FA5F  6C                 	db	108	;'l'
  3365  00FA60  75                 	db	117	;'u'
  3366  00FA61  2C                 	db	44
  3367  00FA62  25                 	db	37
  3368  00FA63  34                 	db	52	;'4'
  3369  00FA64  2E                 	db	46
  3370  00FA65  33                 	db	51	;'3'
  3371  00FA66  66                 	db	102	;'f'
  3372  00FA67  2C                 	db	44
  3373  00FA68  25                 	db	37
  3374  00FA69  34                 	db	52	;'4'
  3375  00FA6A  2E                 	db	46
  3376  00FA6B  33                 	db	51	;'3'
  3377  00FA6C  66                 	db	102	;'f'
  3378  00FA6D  2C                 	db	44
  3379  00FA6E  25                 	db	37
  3380  00FA6F  34                 	db	52	;'4'
  3381  00FA70  2E                 	db	46
  3382  00FA71  33                 	db	51	;'3'
  3383  00FA72  66                 	db	102	;'f'
  3384  00FA73  0D                 	db	13
  3385  00FA74  0A                 	db	10
  3386  00FA75  00                 	db	0
  3387  00FA76                     STR_133:
  3388                           
  3389                           ; BSR set to: 57
  3390  00FA76  4A                 	db	74	;'J'
  3391  00FA77  61                 	db	97	;'a'
  3392  00FA78  6E                 	db	110	;'n'
  3393  00FA79  46                 	db	70	;'F'
  3394  00FA7A  65                 	db	101	;'e'
  3395  00FA7B  62                 	db	98	;'b'
  3396  00FA7C  4D                 	db	77	;'M'
  3397  00FA7D  61                 	db	97	;'a'
  3398  00FA7E  72                 	db	114	;'r'
  3399  00FA7F  41                 	db	65	;'A'
  3400  00FA80  70                 	db	112	;'p'
  3401  00FA81  72                 	db	114	;'r'
  3402  00FA82  4D                 	db	77	;'M'
  3403  00FA83  61                 	db	97	;'a'
  3404  00FA84  79                 	db	121	;'y'
  3405  00FA85  4A                 	db	74	;'J'
  3406  00FA86  75                 	db	117	;'u'
  3407  00FA87  6E                 	db	110	;'n'
  3408  00FA88  4A                 	db	74	;'J'
  3409  00FA89  75                 	db	117	;'u'
  3410  00FA8A  6C                 	db	108	;'l'
  3411  00FA8B  41                 	db	65	;'A'
  3412  00FA8C  75                 	db	117	;'u'
  3413  00FA8D  67                 	db	103	;'g'
  3414  00FA8E  53                 	db	83	;'S'
  3415  00FA8F  65                 	db	101	;'e'
  3416  00FA90  70                 	db	112	;'p'
  3417  00FA91  4F                 	db	79	;'O'
  3418  00FA92  63                 	db	99	;'c'
  3419  00FA93  74                 	db	116	;'t'
  3420  00FA94  4E                 	db	78	;'N'
  3421  00FA95  6F                 	db	111	;'o'
  3422  00FA96  76                 	db	118	;'v'
  3423  00FA97  44                 	db	68	;'D'
  3424  00FA98  65                 	db	101	;'e'
  3425  00FA99  63                 	db	99	;'c'
  3426  00FA9A  00                 	db	0
  3427  00FA9B                     STR_50:
  3428                           
  3429                           ; BSR set to: 57
  3430  00FA9B  53                 	db	83	;'S'
  3431  00FA9C  25                 	db	37
  3432  00FA9D  63                 	db	99	;'c'
  3433  00FA9E  43                 	db	67	;'C'
  3434  00FA9F  20                 	db	32
  3435  00FAA0  25                 	db	37
  3436  00FAA1  64                 	db	100	;'d'
  3437  00FAA2  20                 	db	32
  3438  00FAA3  52                 	db	82	;'R'
  3439  00FAA4  55                 	db	85	;'U'
  3440  00FAA5  4E                 	db	78	;'N'
  3441  00FAA6  20                 	db	32
  3442  00FAA7  25                 	db	37
  3443  00FAA8  64                 	db	100	;'d'
  3444  00FAA9  20                 	db	32
  3445  00FAAA  56                 	db	86	;'V'
  3446  00FAAB  25                 	db	37
  3447  00FAAC  32                 	db	50	;'2'
  3448  00FAAD  2E                 	db	46
  3449  00FAAE  32                 	db	50	;'2'
  3450  00FAAF  66                 	db	102	;'f'
  3451  00FAB0  20                 	db	32
  3452  00FAB1  20                 	db	32
  3453  00FAB2  20                 	db	32
  3454  00FAB3  20                 	db	32
  3455  00FAB4  20                 	db	32
  3456  00FAB5  20                 	db	32
  3457  00FAB6  20                 	db	32
  3458  00FAB7  20                 	db	32
  3459  00FAB8  00                 	db	0
  3460  00FAB9                     STR_70:
  3461                           
  3462                           ; BSR set to: 57
  3463  00FAB9  25                 	db	37
  3464  00FABA  64                 	db	100	;'d'
  3465  00FABB  20                 	db	32
  3466  00FABC  25                 	db	37
  3467  00FABD  64                 	db	100	;'d'
  3468  00FABE  20                 	db	32
  3469  00FABF  25                 	db	37
  3470  00FAC0  64                 	db	100	;'d'
  3471  00FAC1  20                 	db	32
  3472  00FAC2  25                 	db	37
  3473  00FAC3  64                 	db	100	;'d'
  3474  00FAC4  20                 	db	32
  3475  00FAC5  20                 	db	32
  3476  00FAC6  20                 	db	32
  3477  00FAC7  20                 	db	32
  3478  00FAC8  20                 	db	32
  3479  00FAC9  20                 	db	32
  3480  00FACA  20                 	db	32
  3481  00FACB  20                 	db	32
  3482  00FACC  20                 	db	32
  3483  00FACD  20                 	db	32
  3484  00FACE  20                 	db	32
  3485  00FACF  20                 	db	32
  3486  00FAD0  20                 	db	32
  3487  00FAD1  20                 	db	32
  3488  00FAD2  20                 	db	32
  3489  00FAD3  20                 	db	32
  3490  00FAD4  00                 	db	0
  3491  00FAD5                     STR_26:
  3492                           
  3493                           ; BSR set to: 57
  3494  00FAD5  52                 	db	82	;'R'
  3495  00FAD6  31                 	db	49	;'1'
  3496  00FAD7  20                 	db	32
  3497  00FAD8  25                 	db	37
  3498  00FAD9  32                 	db	50	;'2'
  3499  00FADA  2E                 	db	46
  3500  00FADB  33                 	db	51	;'3'
  3501  00FADC  66                 	db	102	;'f'
  3502  00FADD  20                 	db	32
  3503  00FADE  25                 	db	37
  3504  00FADF  33                 	db	51	;'3'
  3505  00FAE0  2E                 	db	46
  3506  00FAE1  34                 	db	52	;'4'
  3507  00FAE2  66                 	db	102	;'f'
  3508  00FAE3  20                 	db	32
  3509  00FAE4  20                 	db	32
  3510  00FAE5  20                 	db	32
  3511  00FAE6  20                 	db	32
  3512  00FAE7  20                 	db	32
  3513  00FAE8  20                 	db	32
  3514  00FAE9  20                 	db	32
  3515  00FAEA  20                 	db	32
  3516  00FAEB  20                 	db	32
  3517  00FAEC  20                 	db	32
  3518  00FAED  20                 	db	32
  3519  00FAEE  20                 	db	32
  3520  00FAEF  00                 	db	0
  3521  00FAF0                     STR_27:
  3522                           
  3523                           ; BSR set to: 57
  3524  00FAF0  52                 	db	82	;'R'
  3525  00FAF1  32                 	db	50	;'2'
  3526  00FAF2  20                 	db	32
  3527  00FAF3  25                 	db	37
  3528  00FAF4  32                 	db	50	;'2'
  3529  00FAF5  2E                 	db	46
  3530  00FAF6  33                 	db	51	;'3'
  3531  00FAF7  66                 	db	102	;'f'
  3532  00FAF8  20                 	db	32
  3533  00FAF9  25                 	db	37
  3534  00FAFA  33                 	db	51	;'3'
  3535  00FAFB  2E                 	db	46
  3536  00FAFC  34                 	db	52	;'4'
  3537  00FAFD  66                 	db	102	;'f'
  3538  00FAFE  20                 	db	32
  3539  00FAFF  20                 	db	32
  3540  00FB00  20                 	db	32
  3541  00FB01  20                 	db	32
  3542  00FB02  20                 	db	32
  3543  00FB03  20                 	db	32
  3544  00FB04  20                 	db	32
  3545  00FB05  20                 	db	32
  3546  00FB06  20                 	db	32
  3547  00FB07  20                 	db	32
  3548  00FB08  20                 	db	32
  3549  00FB09  20                 	db	32
  3550  00FB0A  00                 	db	0
  3551  00FB0B                     
  3552                           ; BSR set to: 57
  3553  00FB0B  20                 	db	32
  3554  00FB0C  4D                 	db	77	;'M'
  3555  00FB0D  65                 	db	101	;'e'
  3556  00FB0E  73                 	db	115	;'s'
  3557  00FB0F  67                 	db	103	;'g'
  3558  00FB10  20                 	db	32
  3559  00FB11  25                 	db	37
  3560  00FB12  64                 	db	100	;'d'
  3561  00FB13  20                 	db	32
  3562  00FB14  53                 	db	83	;'S'
  3563  00FB15  74                 	db	116	;'t'
  3564  00FB16  61                 	db	97	;'a'
  3565  00FB17  63                 	db	99	;'c'
  3566  00FB18  6B                 	db	107	;'k'
  3567  00FB19  20                 	db	32
  3568  00FB1A  25                 	db	37
  3569  00FB1B  64                 	db	100	;'d'
  3570  00FB1C  20                 	db	32
  3571  00FB1D  20                 	db	32
  3572  00FB1E  20                 	db	32
  3573  00FB1F  20                 	db	32
  3574  00FB20  20                 	db	32
  3575  00FB21  20                 	db	32
  3576  00FB22  20                 	db	32
  3577  00FB23  20                 	db	32
  3578  00FB24  00                 	db	0
  3579  00FB25                     STR_17:
  3580                           
  3581                           ; BSR set to: 57
  3582  00FB25  53                 	db	83	;'S'
  3583  00FB26  20                 	db	32
  3584  00FB27  53                 	db	83	;'S'
  3585  00FB28  25                 	db	37
  3586  00FB29  63                 	db	99	;'c'
  3587  00FB2A  43                 	db	67	;'C'
  3588  00FB2B  20                 	db	32
  3589  00FB2C  25                 	db	37
  3590  00FB2D  64                 	db	100	;'d'
  3591  00FB2E  20                 	db	32
  3592  00FB2F  25                 	db	37
  3593  00FB30  32                 	db	50	;'2'
  3594  00FB31  2E                 	db	46
  3595  00FB32  34                 	db	52	;'4'
  3596  00FB33  66                 	db	102	;'f'
  3597  00FB34  20                 	db	32
  3598  00FB35  20                 	db	32
  3599  00FB36  20                 	db	32
  3600  00FB37  20                 	db	32
  3601  00FB38  20                 	db	32
  3602  00FB39  20                 	db	32
  3603  00FB3A  20                 	db	32
  3604  00FB3B  20                 	db	32
  3605  00FB3C  20                 	db	32
  3606  00FB3D  20                 	db	32
  3607  00FB3E  00                 	db	0
  3608  00FB3F                     STR_51:
  3609                           
  3610                           ; BSR set to: 57
  3611  00FB3F  45                 	db	69	;'E'
  3612  00FB40  53                 	db	83	;'S'
  3613  00FB41  52                 	db	82	;'R'
  3614  00FB42  20                 	db	32
  3615  00FB43  20                 	db	32
  3616  00FB44  25                 	db	37
  3617  00FB45  32                 	db	50	;'2'
  3618  00FB46  2E                 	db	46
  3619  00FB47  36                 	db	54	;'6'
  3620  00FB48  66                 	db	102	;'f'
  3621  00FB49  20                 	db	32
  3622  00FB4A  20                 	db	32
  3623  00FB4B  20                 	db	32
  3624  00FB4C  20                 	db	32
  3625  00FB4D  20                 	db	32
  3626  00FB4E  20                 	db	32
  3627  00FB4F  20                 	db	32
  3628  00FB50  20                 	db	32
  3629  00FB51  20                 	db	32
  3630  00FB52  20                 	db	32
  3631  00FB53  20                 	db	32
  3632  00FB54  20                 	db	32
  3633  00FB55  20                 	db	32
  3634  00FB56  00                 	db	0
  3635  00FB57                     STR_48:
  3636                           
  3637                           ; BSR set to: 57
  3638  00FB57  42                 	db	66	;'B'
  3639  00FB58  41                 	db	65	;'A'
  3640  00FB59  54                 	db	84	;'T'
  3641  00FB5A  54                 	db	84	;'T'
  3642  00FB5B  20                 	db	32
  3643  00FB5C  50                 	db	80	;'P'
  3644  00FB5D  57                 	db	87	;'W'
  3645  00FB5E  52                 	db	82	;'R'
  3646  00FB5F  20                 	db	32
  3647  00FB60  25                 	db	37
  3648  00FB61  33                 	db	51	;'3'
  3649  00FB62  2E                 	db	46
  3650  00FB63  32                 	db	50	;'2'
  3651  00FB64  66                 	db	102	;'f'
  3652  00FB65  20                 	db	32
  3653  00FB66  20                 	db	32
  3654  00FB67  20                 	db	32
  3655  00FB68  20                 	db	32
  3656  00FB69  20                 	db	32
  3657  00FB6A  20                 	db	32
  3658  00FB6B  20                 	db	32
  3659  00FB6C  20                 	db	32
  3660  00FB6D  20                 	db	32
  3661  00FB6E  00                 	db	0
  3662  00FB6F                     STR_52:
  3663                           
  3664                           ; BSR set to: 57
  3665  00FB6F  52                 	db	82	;'R'
  3666  00FB70  31                 	db	49	;'1'
  3667  00FB71  20                 	db	32
  3668  00FB72  25                 	db	37
  3669  00FB73  32                 	db	50	;'2'
  3670  00FB74  2E                 	db	46
  3671  00FB75  33                 	db	51	;'3'
  3672  00FB76  66                 	db	102	;'f'
  3673  00FB77  20                 	db	32
  3674  00FB78  25                 	db	37
  3675  00FB79  33                 	db	51	;'3'
  3676  00FB7A  2E                 	db	46
  3677  00FB7B  34                 	db	52	;'4'
  3678  00FB7C  66                 	db	102	;'f'
  3679  00FB7D  20                 	db	32
  3680  00FB7E  20                 	db	32
  3681  00FB7F  20                 	db	32
  3682  00FB80  20                 	db	32
  3683  00FB81  20                 	db	32
  3684  00FB82  20                 	db	32
  3685  00FB83  20                 	db	32
  3686  00FB84  20                 	db	32
  3687  00FB85  20                 	db	32
  3688  00FB86  00                 	db	0
  3689  00FB87                     STR_53:
  3690                           
  3691                           ; BSR set to: 57
  3692  00FB87  52                 	db	82	;'R'
  3693  00FB88  32                 	db	50	;'2'
  3694  00FB89  20                 	db	32
  3695  00FB8A  25                 	db	37
  3696  00FB8B  32                 	db	50	;'2'
  3697  00FB8C  2E                 	db	46
  3698  00FB8D  33                 	db	51	;'3'
  3699  00FB8E  66                 	db	102	;'f'
  3700  00FB8F  20                 	db	32
  3701  00FB90  25                 	db	37
  3702  00FB91  33                 	db	51	;'3'
  3703  00FB92  2E                 	db	46
  3704  00FB93  34                 	db	52	;'4'
  3705  00FB94  66                 	db	102	;'f'
  3706  00FB95  20                 	db	32
  3707  00FB96  20                 	db	32
  3708  00FB97  20                 	db	32
  3709  00FB98  20                 	db	32
  3710  00FB99  20                 	db	32
  3711  00FB9A  20                 	db	32
  3712  00FB9B  20                 	db	32
  3713  00FB9C  20                 	db	32
  3714  00FB9D  20                 	db	32
  3715  00FB9E  00                 	db	0
  3716  00FB9F                     STR_49:
  3717                           
  3718                           ; BSR set to: 57
  3719  00FB9F  42                 	db	66	;'B'
  3720  00FBA0  41                 	db	65	;'A'
  3721  00FBA1  48                 	db	72	;'H'
  3722  00FBA2  20                 	db	32
  3723  00FBA3  25                 	db	37
  3724  00FBA4  33                 	db	51	;'3'
  3725  00FBA5  2E                 	db	46
  3726  00FBA6  32                 	db	50	;'2'
  3727  00FBA7  66                 	db	102	;'f'
  3728  00FBA8  20                 	db	32
  3729  00FBA9  50                 	db	80	;'P'
  3730  00FBAA  25                 	db	37
  3731  00FBAB  33                 	db	51	;'3'
  3732  00FBAC  2E                 	db	46
  3733  00FBAD  32                 	db	50	;'2'
  3734  00FBAE  66                 	db	102	;'f'
  3735  00FBAF  20                 	db	32
  3736  00FBB0  20                 	db	32
  3737  00FBB1  20                 	db	32
  3738  00FBB2  20                 	db	32
  3739  00FBB3  20                 	db	32
  3740  00FBB4  20                 	db	32
  3741  00FBB5  20                 	db	32
  3742  00FBB6  00                 	db	0
  3743  00FBB7                     STR_20:
  3744                           
  3745                           ; BSR set to: 57
  3746  00FBB7  20                 	db	32
  3747  00FBB8  20                 	db	32
  3748  00FBB9  20                 	db	32
  3749  00FBBA  20                 	db	32
  3750  00FBBB  20                 	db	32
  3751  00FBBC  20                 	db	32
  3752  00FBBD  20                 	db	32
  3753  00FBBE  20                 	db	32
  3754  00FBBF  20                 	db	32
  3755  00FBC0  20                 	db	32
  3756  00FBC1  20                 	db	32
  3757  00FBC2  20                 	db	32
  3758  00FBC3  20                 	db	32
  3759  00FBC4  20                 	db	32
  3760  00FBC5  20                 	db	32
  3761  00FBC6  20                 	db	32
  3762  00FBC7  20                 	db	32
  3763  00FBC8  20                 	db	32
  3764  00FBC9  20                 	db	32
  3765  00FBCA  20                 	db	32
  3766  00FBCB  20                 	db	32
  3767  00FBCC  20                 	db	32
  3768  00FBCD  00                 	db	0
  3769  00FBCE                     STR_25:
  3770                           
  3771                           ; BSR set to: 57
  3772  00FBCE  45                 	db	69	;'E'
  3773  00FBCF  53                 	db	83	;'S'
  3774  00FBD0  52                 	db	82	;'R'
  3775  00FBD1  20                 	db	32
  3776  00FBD2  20                 	db	32
  3777  00FBD3  25                 	db	37
  3778  00FBD4  32                 	db	50	;'2'
  3779  00FBD5  2E                 	db	46
  3780  00FBD6  36                 	db	54	;'6'
  3781  00FBD7  66                 	db	102	;'f'
  3782  00FBD8  20                 	db	32
  3783  00FBD9  20                 	db	32
  3784  00FBDA  20                 	db	32
  3785  00FBDB  20                 	db	32
  3786  00FBDC  20                 	db	32
  3787  00FBDD  20                 	db	32
  3788  00FBDE  20                 	db	32
  3789  00FBDF  20                 	db	32
  3790  00FBE0  20                 	db	32
  3791  00FBE1  20                 	db	32
  3792  00FBE2  20                 	db	32
  3793  00FBE3  20                 	db	32
  3794  00FBE4  00                 	db	0
  3795  00FBE5                     STR_18:
  3796                           
  3797                           ; BSR set to: 57
  3798  00FBE5  53                 	db	83	;'S'
  3799  00FBE6  74                 	db	116	;'t'
  3800  00FBE7  61                 	db	97	;'a'
  3801  00FBE8  74                 	db	116	;'t'
  3802  00FBE9  69                 	db	105	;'i'
  3803  00FBEA  63                 	db	99	;'c'
  3804  00FBEB  20                 	db	32
  3805  00FBEC  53                 	db	83	;'S'
  3806  00FBED  4F                 	db	79	;'O'
  3807  00FBEE  43                 	db	67	;'C'
  3808  00FBEF  20                 	db	32
  3809  00FBF0  25                 	db	37
  3810  00FBF1  64                 	db	100	;'d'
  3811  00FBF2  20                 	db	32
  3812  00FBF3  20                 	db	32
  3813  00FBF4  20                 	db	32
  3814  00FBF5  20                 	db	32
  3815  00FBF6  20                 	db	32
  3816  00FBF7  20                 	db	32
  3817  00FBF8  20                 	db	32
  3818  00FBF9  20                 	db	32
  3819  00FBFA  20                 	db	32
  3820  00FBFB  00                 	db	0
  3821  00FBFC                     STR_45:
  3822                           
  3823                           ; BSR set to: 57
  3824  00FBFC  42                 	db	66	;'B'
  3825  00FBFD  41                 	db	65	;'A'
  3826  00FBFE  54                 	db	84	;'T'
  3827  00FBFF  20                 	db	32
  3828  00FC00  49                 	db	73	;'I'
  3829  00FC01  57                 	db	87	;'W'
  3830  00FC02  48                 	db	72	;'H'
  3831  00FC03  20                 	db	32
  3832  00FC04  25                 	db	37
  3833  00FC05  34                 	db	52	;'4'
  3834  00FC06  2E                 	db	46
  3835  00FC07  31                 	db	49	;'1'
  3836  00FC08  66                 	db	102	;'f'
  3837  00FC09  20                 	db	32
  3838  00FC0A  20                 	db	32
  3839  00FC0B  20                 	db	32
  3840  00FC0C  20                 	db	32
  3841  00FC0D  20                 	db	32
  3842  00FC0E  20                 	db	32
  3843  00FC0F  20                 	db	32
  3844  00FC10  20                 	db	32
  3845  00FC11  20                 	db	32
  3846  00FC12  00                 	db	0
  3847  00FC13                     STR_46:
  3848                           
  3849                           ; BSR set to: 57
  3850  00FC13  42                 	db	66	;'B'
  3851  00FC14  41                 	db	65	;'A'
  3852  00FC15  54                 	db	84	;'T'
  3853  00FC16  20                 	db	32
  3854  00FC17  4F                 	db	79	;'O'
  3855  00FC18  57                 	db	87	;'W'
  3856  00FC19  48                 	db	72	;'H'
  3857  00FC1A  20                 	db	32
  3858  00FC1B  25                 	db	37
  3859  00FC1C  34                 	db	52	;'4'
  3860  00FC1D  2E                 	db	46
  3861  00FC1E  31                 	db	49	;'1'
  3862  00FC1F  66                 	db	102	;'f'
  3863  00FC20  20                 	db	32
  3864  00FC21  20                 	db	32
  3865  00FC22  20                 	db	32
  3866  00FC23  20                 	db	32
  3867  00FC24  20                 	db	32
  3868  00FC25  20                 	db	32
  3869  00FC26  20                 	db	32
  3870  00FC27  20                 	db	32
  3871  00FC28  20                 	db	32
  3872  00FC29  00                 	db	0
  3873  00FC2A                     STR_47:
  3874                           
  3875                           ; BSR set to: 57
  3876  00FC2A  42                 	db	66	;'B'
  3877  00FC2B  41                 	db	65	;'A'
  3878  00FC2C  54                 	db	84	;'T'
  3879  00FC2D  20                 	db	32
  3880  00FC2E  54                 	db	84	;'T'
  3881  00FC2F  57                 	db	87	;'W'
  3882  00FC30  48                 	db	72	;'H'
  3883  00FC31  20                 	db	32
  3884  00FC32  25                 	db	37
  3885  00FC33  34                 	db	52	;'4'
  3886  00FC34  2E                 	db	46
  3887  00FC35  31                 	db	49	;'1'
  3888  00FC36  66                 	db	102	;'f'
  3889  00FC37  20                 	db	32
  3890  00FC38  20                 	db	32
  3891  00FC39  20                 	db	32
  3892  00FC3A  20                 	db	32
  3893  00FC3B  20                 	db	32
  3894  00FC3C  20                 	db	32
  3895  00FC3D  20                 	db	32
  3896  00FC3E  20                 	db	32
  3897  00FC3F  20                 	db	32
  3898  00FC40  00                 	db	0
  3899  00FC41                     STR_41:
  3900                           
  3901                           ; BSR set to: 57
  3902  00FC41  49                 	db	73	;'I'
  3903  00FC42  4E                 	db	78	;'N'
  3904  00FC43  56                 	db	86	;'V'
  3905  00FC44  20                 	db	32
  3906  00FC45  20                 	db	32
  3907  00FC46  57                 	db	87	;'W'
  3908  00FC47  48                 	db	72	;'H'
  3909  00FC48  20                 	db	32
  3910  00FC49  25                 	db	37
  3911  00FC4A  33                 	db	51	;'3'
  3912  00FC4B  2E                 	db	46
  3913  00FC4C  32                 	db	50	;'2'
  3914  00FC4D  66                 	db	102	;'f'
  3915  00FC4E  20                 	db	32
  3916  00FC4F  20                 	db	32
  3917  00FC50  20                 	db	32
  3918  00FC51  20                 	db	32
  3919  00FC52  20                 	db	32
  3920  00FC53  20                 	db	32
  3921  00FC54  20                 	db	32
  3922  00FC55  20                 	db	32
  3923  00FC56  20                 	db	32
  3924  00FC57  00                 	db	0
  3925  00FC58                     STR_40:
  3926                           
  3927                           ; BSR set to: 57
  3928  00FC58  4C                 	db	76	;'L'
  3929  00FC59  4F                 	db	79	;'O'
  3930  00FC5A  41                 	db	65	;'A'
  3931  00FC5B  44                 	db	68	;'D'
  3932  00FC5C  20                 	db	32
  3933  00FC5D  57                 	db	87	;'W'
  3934  00FC5E  48                 	db	72	;'H'
  3935  00FC5F  20                 	db	32
  3936  00FC60  25                 	db	37
  3937  00FC61  33                 	db	51	;'3'
  3938  00FC62  2E                 	db	46
  3939  00FC63  32                 	db	50	;'2'
  3940  00FC64  66                 	db	102	;'f'
  3941  00FC65  20                 	db	32
  3942  00FC66  20                 	db	32
  3943  00FC67  20                 	db	32
  3944  00FC68  20                 	db	32
  3945  00FC69  20                 	db	32
  3946  00FC6A  20                 	db	32
  3947  00FC6B  20                 	db	32
  3948  00FC6C  20                 	db	32
  3949  00FC6D  20                 	db	32
  3950  00FC6E  00                 	db	0
  3951  00FC6F                     STR_39:
  3952                           
  3953                           ; BSR set to: 57
  3954  00FC6F  50                 	db	80	;'P'
  3955  00FC70  56                 	db	86	;'V'
  3956  00FC71  20                 	db	32
  3957  00FC72  25                 	db	37
  3958  00FC73  63                 	db	99	;'c'
  3959  00FC74  20                 	db	32
  3960  00FC75  57                 	db	87	;'W'
  3961  00FC76  48                 	db	72	;'H'
  3962  00FC77  20                 	db	32
  3963  00FC78  25                 	db	37
  3964  00FC79  33                 	db	51	;'3'
  3965  00FC7A  2E                 	db	46
  3966  00FC7B  32                 	db	50	;'2'
  3967  00FC7C  66                 	db	102	;'f'
  3968  00FC7D  20                 	db	32
  3969  00FC7E  20                 	db	32
  3970  00FC7F  20                 	db	32
  3971  00FC80  20                 	db	32
  3972  00FC81  20                 	db	32
  3973  00FC82  20                 	db	32
  3974  00FC83  20                 	db	32
  3975  00FC84  20                 	db	32
  3976  00FC85  00                 	db	0
  3977  00FC86                     STR_38:
  3978                           
  3979                           ; BSR set to: 57
  3980  00FC86  49                 	db	73	;'I'
  3981  00FC87  4E                 	db	78	;'N'
  3982  00FC88  56                 	db	86	;'V'
  3983  00FC89  20                 	db	32
  3984  00FC8A  20                 	db	32
  3985  00FC8B  50                 	db	80	;'P'
  3986  00FC8C  57                 	db	87	;'W'
  3987  00FC8D  52                 	db	82	;'R'
  3988  00FC8E  20                 	db	32
  3989  00FC8F  25                 	db	37
  3990  00FC90  33                 	db	51	;'3'
  3991  00FC91  2E                 	db	46
  3992  00FC92  32                 	db	50	;'2'
  3993  00FC93  66                 	db	102	;'f'
  3994  00FC94  20                 	db	32
  3995  00FC95  20                 	db	32
  3996  00FC96  20                 	db	32
  3997  00FC97  20                 	db	32
  3998  00FC98  20                 	db	32
  3999  00FC99  20                 	db	32
  4000  00FC9A  20                 	db	32
  4001  00FC9B  20                 	db	32
  4002  00FC9C  00                 	db	0
  4003  00FC9D                     STR_37:
  4004                           
  4005                           ; BSR set to: 57
  4006  00FC9D  4C                 	db	76	;'L'
  4007  00FC9E  4F                 	db	79	;'O'
  4008  00FC9F  41                 	db	65	;'A'
  4009  00FCA0  44                 	db	68	;'D'
  4010  00FCA1  20                 	db	32
  4011  00FCA2  50                 	db	80	;'P'
  4012  00FCA3  57                 	db	87	;'W'
  4013  00FCA4  52                 	db	82	;'R'
  4014  00FCA5  20                 	db	32
  4015  00FCA6  25                 	db	37
  4016  00FCA7  33                 	db	51	;'3'
  4017  00FCA8  2E                 	db	46
  4018  00FCA9  32                 	db	50	;'2'
  4019  00FCAA  66                 	db	102	;'f'
  4020  00FCAB  20                 	db	32
  4021  00FCAC  20                 	db	32
  4022  00FCAD  20                 	db	32
  4023  00FCAE  20                 	db	32
  4024  00FCAF  20                 	db	32
  4025  00FCB0  20                 	db	32
  4026  00FCB1  20                 	db	32
  4027  00FCB2  20                 	db	32
  4028  00FCB3  00                 	db	0
  4029  00FCB4                     STR_36:
  4030                           
  4031                           ; BSR set to: 57
  4032  00FCB4  50                 	db	80	;'P'
  4033  00FCB5  56                 	db	86	;'V'
  4034  00FCB6  20                 	db	32
  4035  00FCB7  25                 	db	37
  4036  00FCB8  63                 	db	99	;'c'
  4037  00FCB9  20                 	db	32
  4038  00FCBA  50                 	db	80	;'P'
  4039  00FCBB  57                 	db	87	;'W'
  4040  00FCBC  52                 	db	82	;'R'
  4041  00FCBD  20                 	db	32
  4042  00FCBE  25                 	db	37
  4043  00FCBF  33                 	db	51	;'3'
  4044  00FCC0  2E                 	db	46
  4045  00FCC1  32                 	db	50	;'2'
  4046  00FCC2  66                 	db	102	;'f'
  4047  00FCC3  20                 	db	32
  4048  00FCC4  20                 	db	32
  4049  00FCC5  20                 	db	32
  4050  00FCC6  20                 	db	32
  4051  00FCC7  20                 	db	32
  4052  00FCC8  20                 	db	32
  4053  00FCC9  20                 	db	32
  4054  00FCCA  00                 	db	0
  4055  00FCCB                     STR_19:
  4056                           
  4057                           ; BSR set to: 57
  4058  00FCCB  42                 	db	66	;'B'
  4059  00FCCC  61                 	db	97	;'a'
  4060  00FCCD  74                 	db	116	;'t'
  4061  00FCCE  74                 	db	116	;'t'
  4062  00FCCF  65                 	db	101	;'e'
  4063  00FCD0  72                 	db	114	;'r'
  4064  00FCD1  79                 	db	121	;'y'
  4065  00FCD2  20                 	db	32
  4066  00FCD3  41                 	db	65	;'A'
  4067  00FCD4  68                 	db	104	;'h'
  4068  00FCD5  20                 	db	32
  4069  00FCD6  25                 	db	37
  4070  00FCD7  33                 	db	51	;'3'
  4071  00FCD8  2E                 	db	46
  4072  00FCD9  32                 	db	50	;'2'
  4073  00FCDA  66                 	db	102	;'f'
  4074  00FCDB  20                 	db	32
  4075  00FCDC  20                 	db	32
  4076  00FCDD  20                 	db	32
  4077  00FCDE  20                 	db	32
  4078  00FCDF  20                 	db	32
  4079  00FCE0  20                 	db	32
  4080  00FCE1  00                 	db	0
  4081  00FCE2                     STR_43:
  4082                           
  4083                           ; BSR set to: 57
  4084  00FCE2  42                 	db	66	;'B'
  4085  00FCE3  56                 	db	86	;'V'
  4086  00FCE4  20                 	db	32
  4087  00FCE5  25                 	db	37
  4088  00FCE6  32                 	db	50	;'2'
  4089  00FCE7  2E                 	db	46
  4090  00FCE8  32                 	db	50	;'2'
  4091  00FCE9  66                 	db	102	;'f'
  4092  00FCEA  20                 	db	32
  4093  00FCEB  42                 	db	66	;'B'
  4094  00FCEC  41                 	db	65	;'A'
  4095  00FCED  20                 	db	32
  4096  00FCEE  25                 	db	37
  4097  00FCEF  32                 	db	50	;'2'
  4098  00FCF0  2E                 	db	46
  4099  00FCF1  32                 	db	50	;'2'
  4100  00FCF2  66                 	db	102	;'f'
  4101  00FCF3  20                 	db	32
  4102  00FCF4  20                 	db	32
  4103  00FCF5  20                 	db	32
  4104  00FCF6  20                 	db	32
  4105  00FCF7  20                 	db	32
  4106  00FCF8  00                 	db	0
  4107  00FCF9                     STR_44:
  4108                           
  4109                           ; BSR set to: 57
  4110  00FCF9  43                 	db	67	;'C'
  4111  00FCFA  56                 	db	86	;'V'
  4112  00FCFB  20                 	db	32
  4113  00FCFC  25                 	db	37
  4114  00FCFD  32                 	db	50	;'2'
  4115  00FCFE  2E                 	db	46
  4116  00FCFF  32                 	db	50	;'2'
  4117  00FD00  66                 	db	102	;'f'
  4118  00FD01  20                 	db	32
  4119  00FD02  4C                 	db	76	;'L'
  4120  00FD03  41                 	db	65	;'A'
  4121  00FD04  20                 	db	32
  4122  00FD05  25                 	db	37
  4123  00FD06  32                 	db	50	;'2'
  4124  00FD07  2E                 	db	46
  4125  00FD08  32                 	db	50	;'2'
  4126  00FD09  66                 	db	102	;'f'
  4127  00FD0A  20                 	db	32
  4128  00FD0B  20                 	db	32
  4129  00FD0C  20                 	db	32
  4130  00FD0D  20                 	db	32
  4131  00FD0E  20                 	db	32
  4132  00FD0F  00                 	db	0
  4133  00FD10                     STR_42:
  4134                           
  4135                           ; BSR set to: 57
  4136  00FD10  50                 	db	80	;'P'
  4137  00FD11  56                 	db	86	;'V'
  4138  00FD12  20                 	db	32
  4139  00FD13  25                 	db	37
  4140  00FD14  32                 	db	50	;'2'
  4141  00FD15  2E                 	db	46
  4142  00FD16  32                 	db	50	;'2'
  4143  00FD17  66                 	db	102	;'f'
  4144  00FD18  20                 	db	32
  4145  00FD19  50                 	db	80	;'P'
  4146  00FD1A  41                 	db	65	;'A'
  4147  00FD1B  20                 	db	32
  4148  00FD1C  25                 	db	37
  4149  00FD1D  32                 	db	50	;'2'
  4150  00FD1E  2E                 	db	46
  4151  00FD1F  32                 	db	50	;'2'
  4152  00FD20  66                 	db	102	;'f'
  4153  00FD21  20                 	db	32
  4154  00FD22  20                 	db	32
  4155  00FD23  20                 	db	32
  4156  00FD24  20                 	db	32
  4157  00FD25  20                 	db	32
  4158  00FD26  00                 	db	0
  4159  00FD27                     STR_132:
  4160                           
  4161                           ; BSR set to: 57
  4162  00FD27  53                 	db	83	;'S'
  4163  00FD28  75                 	db	117	;'u'
  4164  00FD29  6E                 	db	110	;'n'
  4165  00FD2A  4D                 	db	77	;'M'
  4166  00FD2B  6F                 	db	111	;'o'
  4167  00FD2C  6E                 	db	110	;'n'
  4168  00FD2D  54                 	db	84	;'T'
  4169  00FD2E  75                 	db	117	;'u'
  4170  00FD2F  65                 	db	101	;'e'
  4171  00FD30  57                 	db	87	;'W'
  4172  00FD31  65                 	db	101	;'e'
  4173  00FD32  64                 	db	100	;'d'
  4174  00FD33  54                 	db	84	;'T'
  4175  00FD34  68                 	db	104	;'h'
  4176  00FD35  75                 	db	117	;'u'
  4177  00FD36  46                 	db	70	;'F'
  4178  00FD37  72                 	db	114	;'r'
  4179  00FD38  69                 	db	105	;'i'
  4180  00FD39  53                 	db	83	;'S'
  4181  00FD3A  61                 	db	97	;'a'
  4182  00FD3B  74                 	db	116	;'t'
  4183  00FD3C  00                 	db	0
  4184  00FD3D                     STR_62:
  4185                           
  4186                           ; BSR set to: 57
  4187  00FD3D  20                 	db	32
  4188  00FD3E  25                 	db	37
  4189  00FD3F  64                 	db	100	;'d'
  4190  00FD40  20                 	db	32
  4191  00FD41  25                 	db	37
  4192  00FD42  64                 	db	100	;'d'
  4193  00FD43  20                 	db	32
  4194  00FD44  20                 	db	32
  4195  00FD45  20                 	db	32
  4196  00FD46  20                 	db	32
  4197  00FD47  20                 	db	32
  4198  00FD48  20                 	db	32
  4199  00FD49  20                 	db	32
  4200  00FD4A  20                 	db	32
  4201  00FD4B  20                 	db	32
  4202  00FD4C  20                 	db	32
  4203  00FD4D  20                 	db	32
  4204  00FD4E  20                 	db	32
  4205  00FD4F  20                 	db	32
  4206  00FD50  20                 	db	32
  4207  00FD51  20                 	db	32
  4208  00FD52  00                 	db	0
  4209  00FD53                     STR_65:
  4210                           
  4211                           ; BSR set to: 57
  4212  00FD53  20                 	db	32
  4213  00FD54  25                 	db	37
  4214  00FD55  6C                 	db	108	;'l'
  4215  00FD56  64                 	db	100	;'d'
  4216  00FD57  20                 	db	32
  4217  00FD58  25                 	db	37
  4218  00FD59  6C                 	db	108	;'l'
  4219  00FD5A  64                 	db	100	;'d'
  4220  00FD5B  20                 	db	32
  4221  00FD5C  20                 	db	32
  4222  00FD5D  20                 	db	32
  4223  00FD5E  20                 	db	32
  4224  00FD5F  20                 	db	32
  4225  00FD60  20                 	db	32
  4226  00FD61  20                 	db	32
  4227  00FD62  20                 	db	32
  4228  00FD63  20                 	db	32
  4229  00FD64  20                 	db	32
  4230  00FD65  20                 	db	32
  4231  00FD66  20                 	db	32
  4232  00FD67  20                 	db	32
  4233  00FD68  00                 	db	0
  4234  00FD69                     STR_16:
  4235                           
  4236                           ; BSR set to: 57
  4237  00FD69  42                 	db	66	;'B'
  4238  00FD6A  56                 	db	86	;'V'
  4239  00FD6B  20                 	db	32
  4240  00FD6C  25                 	db	37
  4241  00FD6D  32                 	db	50	;'2'
  4242  00FD6E  2E                 	db	46
  4243  00FD6F  34                 	db	52	;'4'
  4244  00FD70  66                 	db	102	;'f'
  4245  00FD71  20                 	db	32
  4246  00FD72  20                 	db	32
  4247  00FD73  20                 	db	32
  4248  00FD74  20                 	db	32
  4249  00FD75  20                 	db	32
  4250  00FD76  20                 	db	32
  4251  00FD77  20                 	db	32
  4252  00FD78  20                 	db	32
  4253  00FD79  20                 	db	32
  4254  00FD7A  20                 	db	32
  4255  00FD7B  20                 	db	32
  4256  00FD7C  20                 	db	32
  4257  00FD7D  20                 	db	32
  4258  00FD7E  00                 	db	0
  4259  00FD7F                     STR_31:
  4260                           
  4261                           ; BSR set to: 57
  4262  00FD7F  54                 	db	84	;'T'
  4263  00FD80  6F                 	db	111	;'o'
  4264  00FD81  20                 	db	32
  4265  00FD82  45                 	db	69	;'E'
  4266  00FD83  45                 	db	69	;'E'
  4267  00FD84  50                 	db	80	;'P'
  4268  00FD85  52                 	db	82	;'R'
  4269  00FD86  4F                 	db	79	;'O'
  4270  00FD87  4D                 	db	77	;'M'
  4271  00FD88  20                 	db	32
  4272  00FD89  20                 	db	32
  4273  00FD8A  20                 	db	32
  4274  00FD8B  20                 	db	32
  4275  00FD8C  20                 	db	32
  4276  00FD8D  20                 	db	32
  4277  00FD8E  20                 	db	32
  4278  00FD8F  20                 	db	32
  4279  00FD90  20                 	db	32
  4280  00FD91  20                 	db	32
  4281  00FD92  20                 	db	32
  4282  00FD93  20                 	db	32
  4283  00FD94  00                 	db	0
  4284  00FD95                     STR_21:
  4285                           
  4286                           ; BSR set to: 57
  4287  00FD95  42                 	db	66	;'B'
  4288  00FD96  61                 	db	97	;'a'
  4289  00FD97  74                 	db	116	;'t'
  4290  00FD98  74                 	db	116	;'t'
  4291  00FD99  65                 	db	101	;'e'
  4292  00FD9A  72                 	db	114	;'r'
  4293  00FD9B  79                 	db	121	;'y'
  4294  00FD9C  20                 	db	32
  4295  00FD9D  45                 	db	69	;'E'
  4296  00FD9E  53                 	db	83	;'S'
  4297  00FD9F  52                 	db	82	;'R'
  4298  00FDA0  20                 	db	32
  4299  00FDA1  20                 	db	32
  4300  00FDA2  20                 	db	32
  4301  00FDA3  20                 	db	32
  4302  00FDA4  20                 	db	32
  4303  00FDA5  20                 	db	32
  4304  00FDA6  20                 	db	32
  4305  00FDA7  20                 	db	32
  4306  00FDA8  20                 	db	32
  4307  00FDA9  20                 	db	32
  4308  00FDAA  00                 	db	0
  4309  00FDAB                     STR_22:
  4310                           
  4311                           ; BSR set to: 57
  4312  00FDAB  43                 	db	67	;'C'
  4313  00FDAC  61                 	db	97	;'a'
  4314  00FDAD  6C                 	db	108	;'l'
  4315  00FDAE  63                 	db	99	;'c'
  4316  00FDAF  75                 	db	117	;'u'
  4317  00FDB0  6C                 	db	108	;'l'
  4318  00FDB1  61                 	db	97	;'a'
  4319  00FDB2  74                 	db	116	;'t'
  4320  00FDB3  69                 	db	105	;'i'
  4321  00FDB4  6F                 	db	111	;'o'
  4322  00FDB5  6E                 	db	110	;'n'
  4323  00FDB6  20                 	db	32
  4324  00FDB7  20                 	db	32
  4325  00FDB8  20                 	db	32
  4326  00FDB9  20                 	db	32
  4327  00FDBA  20                 	db	32
  4328  00FDBB  20                 	db	32
  4329  00FDBC  20                 	db	32
  4330  00FDBD  20                 	db	32
  4331  00FDBE  20                 	db	32
  4332  00FDBF  20                 	db	32
  4333  00FDC0  00                 	db	0
  4334  00FDC1                     STR_59:
  4335                           
  4336                           ; BSR set to: 57
  4337  00FDC1  43                 	db	67	;'C'
  4338  00FDC2  61                 	db	97	;'a'
  4339  00FDC3  6C                 	db	108	;'l'
  4340  00FDC4  69                 	db	105	;'i'
  4341  00FDC5  62                 	db	98	;'b'
  4342  00FDC6  72                 	db	114	;'r'
  4343  00FDC7  61                 	db	97	;'a'
  4344  00FDC8  74                 	db	116	;'t'
  4345  00FDC9  69                 	db	105	;'i'
  4346  00FDCA  6F                 	db	111	;'o'
  4347  00FDCB  6E                 	db	110	;'n'
  4348  00FDCC  20                 	db	32
  4349  00FDCD  20                 	db	32
  4350  00FDCE  20                 	db	32
  4351  00FDCF  20                 	db	32
  4352  00FDD0  20                 	db	32
  4353  00FDD1  20                 	db	32
  4354  00FDD2  20                 	db	32
  4355  00FDD3  20                 	db	32
  4356  00FDD4  20                 	db	32
  4357  00FDD5  20                 	db	32
  4358  00FDD6  00                 	db	0
  4359  00FDD7                     STR_58:
  4360                           
  4361                           ; BSR set to: 57
  4362  00FDD7  53                 	db	83	;'S'
  4363  00FDD8  65                 	db	101	;'e'
  4364  00FDD9  6E                 	db	110	;'n'
  4365  00FDDA  73                 	db	115	;'s'
  4366  00FDDB  6F                 	db	111	;'o'
  4367  00FDDC  72                 	db	114	;'r'
  4368  00FDDD  20                 	db	32
  4369  00FDDE  5A                 	db	90	;'Z'
  4370  00FDDF  65                 	db	101	;'e'
  4371  00FDE0  72                 	db	114	;'r'
  4372  00FDE1  6F                 	db	111	;'o'
  4373  00FDE2  20                 	db	32
  4374  00FDE3  20                 	db	32
  4375  00FDE4  20                 	db	32
  4376  00FDE5  20                 	db	32
  4377  00FDE6  20                 	db	32
  4378  00FDE7  20                 	db	32
  4379  00FDE8  20                 	db	32
  4380  00FDE9  20                 	db	32
  4381  00FDEA  20                 	db	32
  4382  00FDEB  20                 	db	32
  4383  00FDEC  00                 	db	0
  4384  00FDED                     STR_66:
  4385                           
  4386                           ; BSR set to: 57
  4387  00FDED  5A                 	db	90	;'Z'
  4388  00FDEE  65                 	db	101	;'e'
  4389  00FDEF  72                 	db	114	;'r'
  4390  00FDF0  6F                 	db	111	;'o'
  4391  00FDF1  20                 	db	32
  4392  00FDF2  43                 	db	67	;'C'
  4393  00FDF3  61                 	db	97	;'a'
  4394  00FDF4  6C                 	db	108	;'l'
  4395  00FDF5  20                 	db	32
  4396  00FDF6  53                 	db	83	;'S'
  4397  00FDF7  65                 	db	101	;'e'
  4398  00FDF8  74                 	db	116	;'t'
  4399  00FDF9  20                 	db	32
  4400  00FDFA  20                 	db	32
  4401  00FDFB  20                 	db	32
  4402  00FDFC  20                 	db	32
  4403  00FDFD  20                 	db	32
  4404  00FDFE  20                 	db	32
  4405  00FDFF  20                 	db	32
  4406  00FE00  20                 	db	32
  4407  00FE01  20                 	db	32
  4408  00FE02  00                 	db	0
  4409  00FE03                     STR_57:
  4410                           
  4411                           ; BSR set to: 57
  4412  00FE03  42                 	db	66	;'B'
  4413  00FE04  61                 	db	97	;'a'
  4414  00FE05  74                 	db	116	;'t'
  4415  00FE06  74                 	db	116	;'t'
  4416  00FE07  65                 	db	101	;'e'
  4417  00FE08  72                 	db	114	;'r'
  4418  00FE09  79                 	db	121	;'y'
  4419  00FE0A  20                 	db	32
  4420  00FE0B  61                 	db	97	;'a'
  4421  00FE0C  6E                 	db	110	;'n'
  4422  00FE0D  64                 	db	100	;'d'
  4423  00FE0E  20                 	db	32
  4424  00FE0F  50                 	db	80	;'P'
  4425  00FE10  56                 	db	86	;'V'
  4426  00FE11  20                 	db	32
  4427  00FE12  20                 	db	32
  4428  00FE13  20                 	db	32
  4429  00FE14  20                 	db	32
  4430  00FE15  20                 	db	32
  4431  00FE16  20                 	db	32
  4432  00FE17  20                 	db	32
  4433  00FE18  00                 	db	0
  4434  00FE19                     STR_24:
  4435                           
  4436                           ; BSR set to: 57
  4437  00FE19  43                 	db	67	;'C'
  4438  00FE1A  68                 	db	104	;'h'
  4439  00FE1B  65                 	db	101	;'e'
  4440  00FE1C  63                 	db	99	;'c'
  4441  00FE1D  6B                 	db	107	;'k'
  4442  00FE1E  69                 	db	105	;'i'
  4443  00FE1F  6E                 	db	110	;'n'
  4444  00FE20  67                 	db	103	;'g'
  4445  00FE21  20                 	db	32
  4446  00FE22  25                 	db	37
  4447  00FE23  63                 	db	99	;'c'
  4448  00FE24  20                 	db	32
  4449  00FE25  25                 	db	37
  4450  00FE26  63                 	db	99	;'c'
  4451  00FE27  20                 	db	32
  4452  00FE28  20                 	db	32
  4453  00FE29  20                 	db	32
  4454  00FE2A  20                 	db	32
  4455  00FE2B  20                 	db	32
  4456  00FE2C  20                 	db	32
  4457  00FE2D  20                 	db	32
  4458  00FE2E  00                 	db	0
  4459  00FE2F                     STR_32:
  4460                           
  4461                           ; BSR set to: 57
  4462  00FE2F  20                 	db	32
  4463  00FE30  54                 	db	84	;'T'
  4464  00FE31  69                 	db	105	;'i'
  4465  00FE32  6D                 	db	109	;'m'
  4466  00FE33  65                 	db	101	;'e'
  4467  00FE34  20                 	db	32
  4468  00FE35  25                 	db	37
  4469  00FE36  6C                 	db	108	;'l'
  4470  00FE37  75                 	db	117	;'u'
  4471  00FE38  2C                 	db	44
  4472  00FE39  20                 	db	32
  4473  00FE3A  25                 	db	37
  4474  00FE3B  6C                 	db	108	;'l'
  4475  00FE3C  75                 	db	117	;'u'
  4476  00FE3D  20                 	db	32
  4477  00FE3E  20                 	db	32
  4478  00FE3F  20                 	db	32
  4479  00FE40  20                 	db	32
  4480  00FE41  20                 	db	32
  4481  00FE42  20                 	db	32
  4482  00FE43  20                 	db	32
  4483  00FE44  00                 	db	0
  4484  00FE45                     STR_61:
  4485                           
  4486                           ; BSR set to: 57
  4487  00FE45  53                 	db	83	;'S'
  4488  00FE46  65                 	db	101	;'e'
  4489  00FE47  6E                 	db	110	;'n'
  4490  00FE48  73                 	db	115	;'s'
  4491  00FE49  6F                 	db	111	;'o'
  4492  00FE4A  72                 	db	114	;'r'
  4493  00FE4B  20                 	db	32
  4494  00FE4C  52                 	db	82	;'R'
  4495  00FE4D  65                 	db	101	;'e'
  4496  00FE4E  61                 	db	97	;'a'
  4497  00FE4F  64                 	db	100	;'d'
  4498  00FE50  69                 	db	105	;'i'
  4499  00FE51  6E                 	db	110	;'n'
  4500  00FE52  67                 	db	103	;'g'
  4501  00FE53  73                 	db	115	;'s'
  4502  00FE54  20                 	db	32
  4503  00FE55  20                 	db	32
  4504  00FE56  20                 	db	32
  4505  00FE57  20                 	db	32
  4506  00FE58  20                 	db	32
  4507  00FE59  20                 	db	32
  4508  00FE5A  00                 	db	0
  4509  00FE5B                     STR_23:
  4510                           
  4511                           ; BSR set to: 57
  4512  00FE5B  43                 	db	67	;'C'
  4513  00FE5C  68                 	db	104	;'h'
  4514  00FE5D  65                 	db	101	;'e'
  4515  00FE5E  63                 	db	99	;'c'
  4516  00FE5F  6B                 	db	107	;'k'
  4517  00FE60  20                 	db	32
  4518  00FE61  33                 	db	51	;'3'
  4519  00FE62  30                 	db	48	;'0'
  4520  00FE63  20                 	db	32
  4521  00FE64  73                 	db	115	;'s'
  4522  00FE65  65                 	db	101	;'e'
  4523  00FE66  63                 	db	99	;'c'
  4524  00FE67  6F                 	db	111	;'o'
  4525  00FE68  6E                 	db	110	;'n'
  4526  00FE69  64                 	db	100	;'d'
  4527  00FE6A  73                 	db	115	;'s'
  4528  00FE6B  20                 	db	32
  4529  00FE6C  20                 	db	32
  4530  00FE6D  20                 	db	32
  4531  00FE6E  20                 	db	32
  4532  00FE6F  20                 	db	32
  4533  00FE70  00                 	db	0
  4534  00FE71                     STR_69:
  4535                           
  4536                           ; BSR set to: 57
  4537  00FE71  5A                 	db	90	;'Z'
  4538  00FE72  65                 	db	101	;'e'
  4539  00FE73  72                 	db	114	;'r'
  4540  00FE74  6F                 	db	111	;'o'
  4541  00FE75  20                 	db	32
  4542  00FE76  4F                 	db	79	;'O'
  4543  00FE77  75                 	db	117	;'u'
  4544  00FE78  74                 	db	116	;'t'
  4545  00FE79  20                 	db	32
  4546  00FE7A  4F                 	db	79	;'O'
  4547  00FE7B  66                 	db	102	;'f'
  4548  00FE7C  20                 	db	32
  4549  00FE7D  52                 	db	82	;'R'
  4550  00FE7E  61                 	db	97	;'a'
  4551  00FE7F  6E                 	db	110	;'n'
  4552  00FE80  67                 	db	103	;'g'
  4553  00FE81  65                 	db	101	;'e'
  4554  00FE82  20                 	db	32
  4555  00FE83  20                 	db	32
  4556  00FE84  20                 	db	32
  4557  00FE85  20                 	db	32
  4558  00FE86  00                 	db	0
  4559  00FE87                     STR_54:
  4560                           
  4561                           ; BSR set to: 57
  4562  00FE87  25                 	db	37
  4563  00FE88  64                 	db	100	;'d'
  4564  00FE89  20                 	db	32
  4565  00FE8A  25                 	db	37
  4566  00FE8B  32                 	db	50	;'2'
  4567  00FE8C  2E                 	db	46
  4568  00FE8D  34                 	db	52	;'4'
  4569  00FE8E  66                 	db	102	;'f'
  4570  00FE8F  2C                 	db	44
  4571  00FE90  20                 	db	32
  4572  00FE91  25                 	db	37
  4573  00FE92  64                 	db	100	;'d'
  4574  00FE93  20                 	db	32
  4575  00FE94  20                 	db	32
  4576  00FE95  54                 	db	84	;'T'
  4577  00FE96  52                 	db	82	;'R'
  4578  00FE97  49                 	db	73	;'I'
  4579  00FE98  4D                 	db	77	;'M'
  4580  00FE99  20                 	db	32
  4581  00FE9A  20                 	db	32
  4582  00FE9B  20                 	db	32
  4583  00FE9C  00                 	db	0
  4584  00FE9D                     STR_63:
  4585                           
  4586                           ; BSR set to: 57
  4587  00FE9D  53                 	db	83	;'S'
  4588  00FE9E  74                 	db	116	;'t'
  4589  00FE9F  61                 	db	97	;'a'
  4590  00FEA0  62                 	db	98	;'b'
  4591  00FEA1  69                 	db	105	;'i'
  4592  00FEA2  6C                 	db	108	;'l'
  4593  00FEA3  69                 	db	105	;'i'
  4594  00FEA4  74                 	db	116	;'t'
  4595  00FEA5  79                 	db	121	;'y'
  4596  00FEA6  20                 	db	32
  4597  00FEA7  63                 	db	99	;'c'
  4598  00FEA8  6C                 	db	108	;'l'
  4599  00FEA9  6F                 	db	111	;'o'
  4600  00FEAA  63                 	db	99	;'c'
  4601  00FEAB  6B                 	db	107	;'k'
  4602  00FEAC  20                 	db	32
  4603  00FEAD  25                 	db	37
  4604  00FEAE  64                 	db	100	;'d'
  4605  00FEAF  20                 	db	32
  4606  00FEB0  20                 	db	32
  4607  00FEB1  20                 	db	32
  4608  00FEB2  00                 	db	0
  4609  00FEB3                     STR_30:
  4610                           
  4611                           ; BSR set to: 57
  4612  00FEB3  48                 	db	72	;'H'
  4613  00FEB4  69                 	db	105	;'i'
  4614  00FEB5  73                 	db	115	;'s'
  4615  00FEB6  74                 	db	116	;'t'
  4616  00FEB7  6F                 	db	111	;'o'
  4617  00FEB8  72                 	db	114	;'r'
  4618  00FEB9  79                 	db	121	;'y'
  4619  00FEBA  20                 	db	32
  4620  00FEBB  44                 	db	68	;'D'
  4621  00FEBC  61                 	db	97	;'a'
  4622  00FEBD  74                 	db	116	;'t'
  4623  00FEBE  61                 	db	97	;'a'
  4624  00FEBF  20                 	db	32
  4625  00FEC0  20                 	db	32
  4626  00FEC1  53                 	db	83	;'S'
  4627  00FEC2  61                 	db	97	;'a'
  4628  00FEC3  76                 	db	118	;'v'
  4629  00FEC4  65                 	db	101	;'e'
  4630  00FEC5  64                 	db	100	;'d'
  4631  00FEC6  20                 	db	32
  4632  00FEC7  20                 	db	32
  4633  00FEC8  00                 	db	0
  4634  00FEC9                     
  4635                           ; BSR set to: 57
  4636  00FEC9  48                 	db	72	;'H'
  4637  00FECA  45                 	db	69	;'E'
  4638  00FECB  4C                 	db	76	;'L'
  4639  00FECC  50                 	db	80	;'P'
  4640  00FECD  20                 	db	32
  4641  00FECE  25                 	db	37
  4642  00FECF  73                 	db	115	;'s'
  4643  00FED0  20                 	db	32
  4644  00FED1  20                 	db	32
  4645  00FED2  20                 	db	32
  4646  00FED3  20                 	db	32
  4647  00FED4  20                 	db	32
  4648  00FED5  20                 	db	32
  4649  00FED6  20                 	db	32
  4650  00FED7  20                 	db	32
  4651  00FED8  20                 	db	32
  4652  00FED9  20                 	db	32
  4653  00FEDA  20                 	db	32
  4654  00FEDB  20                 	db	32
  4655  00FEDC  20                 	db	32
  4656  00FEDD  00                 	db	0
  4657  00FEDE                     
  4658                           ; BSR set to: 57
  4659  00FEDE  44                 	db	68	;'D'
  4660  00FEDF  49                 	db	73	;'I'
  4661  00FEE0  53                 	db	83	;'S'
  4662  00FEE1  50                 	db	80	;'P'
  4663  00FEE2  4C                 	db	76	;'L'
  4664  00FEE3  41                 	db	65	;'A'
  4665  00FEE4  59                 	db	89	;'Y'
  4666  00FEE5  20                 	db	32
  4667  00FEE6  25                 	db	37
  4668  00FEE7  73                 	db	115	;'s'
  4669  00FEE8  20                 	db	32
  4670  00FEE9  20                 	db	32
  4671  00FEEA  20                 	db	32
  4672  00FEEB  20                 	db	32
  4673  00FEEC  20                 	db	32
  4674  00FEED  20                 	db	32
  4675  00FEEE  20                 	db	32
  4676  00FEEF  20                 	db	32
  4677  00FEF0  20                 	db	32
  4678  00FEF1  20                 	db	32
  4679  00FEF2  00                 	db	0
  4680  00FEF3                     STR_4:
  4681                           
  4682                           ; BSR set to: 57
  4683  00FEF3  20                 	db	32
  4684  00FEF4  4E                 	db	78	;'N'
  4685  00FEF5  53                 	db	83	;'S'
  4686  00FEF6  41                 	db	65	;'A'
  4687  00FEF7  53                 	db	83	;'S'
  4688  00FEF8  50                 	db	80	;'P'
  4689  00FEF9  4F                 	db	79	;'O'
  4690  00FEFA  4F                 	db	79	;'O'
  4691  00FEFB  4B                 	db	75	;'K'
  4692  00FEFC  20                 	db	32
  4693  00FEFD  20                 	db	32
  4694  00FEFE  20                 	db	32
  4695  00FEFF  20                 	db	32
  4696  00FF00  20                 	db	32
  4697  00FF01  20                 	db	32
  4698  00FF02  20                 	db	32
  4699  00FF03  20                 	db	32
  4700  00FF04  20                 	db	32
  4701  00FF05  20                 	db	32
  4702  00FF06  20                 	db	32
  4703  00FF07  00                 	db	0
  4704  00FF08                     STR_2:
  4705                           
  4706                           ; BSR set to: 57
  4707  00FF08  20                 	db	32
  4708  00FF09  56                 	db	86	;'V'
  4709  00FF0A  65                 	db	101	;'e'
  4710  00FF0B  72                 	db	114	;'r'
  4711  00FF0C  73                 	db	115	;'s'
  4712  00FF0D  69                 	db	105	;'i'
  4713  00FF0E  6F                 	db	111	;'o'
  4714  00FF0F  6E                 	db	110	;'n'
  4715  00FF10  20                 	db	32
  4716  00FF11  25                 	db	37
  4717  00FF12  73                 	db	115	;'s'
  4718  00FF13  20                 	db	32
  4719  00FF14  20                 	db	32
  4720  00FF15  20                 	db	32
  4721  00FF16  20                 	db	32
  4722  00FF17  20                 	db	32
  4723  00FF18  20                 	db	32
  4724  00FF19  20                 	db	32
  4725  00FF1A  20                 	db	32
  4726  00FF1B  20                 	db	32
  4727  00FF1C  00                 	db	0
  4728  00FF1D                     STR_1:
  4729                           
  4730                           ; BSR set to: 57
  4731  00FF1D  20                 	db	32
  4732  00FF1E  4D                 	db	77	;'M'
  4733  00FF1F  42                 	db	66	;'B'
  4734  00FF20  4D                 	db	77	;'M'
  4735  00FF21  43                 	db	67	;'C'
  4736  00FF22  20                 	db	32
  4737  00FF23  53                 	db	83	;'S'
  4738  00FF24  4F                 	db	79	;'O'
  4739  00FF25  4C                 	db	76	;'L'
  4740  00FF26  41                 	db	65	;'A'
  4741  00FF27  52                 	db	82	;'R'
  4742  00FF28  4D                 	db	77	;'M'
  4743  00FF29  4F                 	db	79	;'O'
  4744  00FF2A  4E                 	db	78	;'N'
  4745  00FF2B  20                 	db	32
  4746  00FF2C  20                 	db	32
  4747  00FF2D  20                 	db	32
  4748  00FF2E  20                 	db	32
  4749  00FF2F  20                 	db	32
  4750  00FF30  20                 	db	32
  4751  00FF31  00                 	db	0
  4752  00FF32                     STR_14:
  4753                           
  4754                           ; BSR set to: 57
  4755  00FF32  52                 	db	82	;'R'
  4756  00FF33  65                 	db	101	;'e'
  4757  00FF34  61                 	db	97	;'a'
  4758  00FF35  64                 	db	100	;'d'
  4759  00FF36  20                 	db	32
  4760  00FF37  45                 	db	69	;'E'
  4761  00FF38  45                 	db	69	;'E'
  4762  00FF39  50                 	db	80	;'P'
  4763  00FF3A  52                 	db	82	;'R'
  4764  00FF3B  4F                 	db	79	;'O'
  4765  00FF3C  4D                 	db	77	;'M'
  4766  00FF3D  20                 	db	32
  4767  00FF3E  44                 	db	68	;'D'
  4768  00FF3F  41                 	db	65	;'A'
  4769  00FF40  54                 	db	84	;'T'
  4770  00FF41  41                 	db	65	;'A'
  4771  00FF42  20                 	db	32
  4772  00FF43  20                 	db	32
  4773  00FF44  20                 	db	32
  4774  00FF45  20                 	db	32
  4775  00FF46  00                 	db	0
  4776  00FF47                     STR_60:
  4777                           
  4778                           ; BSR set to: 57
  4779  00FF47  52                 	db	82	;'R'
  4780  00FF48  65                 	db	101	;'e'
  4781  00FF49  6C                 	db	108	;'l'
  4782  00FF4A  65                 	db	101	;'e'
  4783  00FF4B  61                 	db	97	;'a'
  4784  00FF4C  73                 	db	115	;'s'
  4785  00FF4D  65                 	db	101	;'e'
  4786  00FF4E  20                 	db	32
  4787  00FF4F  62                 	db	98	;'b'
  4788  00FF50  75                 	db	117	;'u'
  4789  00FF51  74                 	db	116	;'t'
  4790  00FF52  74                 	db	116	;'t'
  4791  00FF53  6F                 	db	111	;'o'
  4792  00FF54  6E                 	db	110	;'n'
  4793  00FF55  20                 	db	32
  4794  00FF56  25                 	db	37
  4795  00FF57  63                 	db	99	;'c'
  4796  00FF58  20                 	db	32
  4797  00FF59  20                 	db	32
  4798  00FF5A  20                 	db	32
  4799  00FF5B  00                 	db	0
  4800  00FF5C                     STR_15:
  4801                           
  4802                           ; BSR set to: 57
  4803  00FF5C  49                 	db	73	;'I'
  4804  00FF5D  6E                 	db	110	;'n'
  4805  00FF5E  76                 	db	118	;'v'
  4806  00FF5F  61                 	db	97	;'a'
  4807  00FF60  6C                 	db	108	;'l'
  4808  00FF61  69                 	db	105	;'i'
  4809  00FF62  64                 	db	100	;'d'
  4810  00FF63  20                 	db	32
  4811  00FF64  45                 	db	69	;'E'
  4812  00FF65  45                 	db	69	;'E'
  4813  00FF66  50                 	db	80	;'P'
  4814  00FF67  52                 	db	82	;'R'
  4815  00FF68  4F                 	db	79	;'O'
  4816  00FF69  4D                 	db	77	;'M'
  4817  00FF6A  20                 	db	32
  4818  00FF6B  44                 	db	68	;'D'
  4819  00FF6C  41                 	db	65	;'A'
  4820  00FF6D  54                 	db	84	;'T'
  4821  00FF6E  41                 	db	65	;'A'
  4822  00FF6F  20                 	db	32
  4823  00FF70  00                 	db	0
  4824  00FF71                     STR_77:
  4825                           
  4826                           ; BSR set to: 57
  4827  00FF71  48                 	db	72	;'H'
  4828  00FF72  45                 	db	69	;'E'
  4829  00FF73  4C                 	db	76	;'L'
  4830  00FF74  50                 	db	80	;'P'
  4831  00FF75  20                 	db	32
  4832  00FF76  25                 	db	37
  4833  00FF77  73                 	db	115	;'s'
  4834  00FF78  20                 	db	32
  4835  00FF79  20                 	db	32
  4836  00FF7A  20                 	db	32
  4837  00FF7B  20                 	db	32
  4838  00FF7C  20                 	db	32
  4839  00FF7D  20                 	db	32
  4840  00FF7E  20                 	db	32
  4841  00FF7F  20                 	db	32
  4842  00FF80  20                 	db	32
  4843  00FF81  20                 	db	32
  4844  00FF82  20                 	db	32
  4845  00FF83  00                 	db	0
  4846  00FF84                     
  4847                           ; BSR set to: 57
  4848  00FF84  25                 	db	37
  4849  00FF85  64                 	db	100	;'d'
  4850  00FF86  20                 	db	32
  4851  00FF87  25                 	db	37
  4852  00FF88  32                 	db	50	;'2'
  4853  00FF89  2E                 	db	46
  4854  00FF8A  34                 	db	52	;'4'
  4855  00FF8B  66                 	db	102	;'f'
  4856  00FF8C  2C                 	db	44
  4857  00FF8D  20                 	db	32
  4858  00FF8E  25                 	db	37
  4859  00FF8F  64                 	db	100	;'d'
  4860  00FF90  20                 	db	32
  4861  00FF91  20                 	db	32
  4862  00FF92  20                 	db	32
  4863  00FF93  23                 	db	35
  4864  00FF94  20                 	db	32
  4865  00FF95  00                 	db	0
  4866  00FF96                     STR_33:
  4867                           
  4868                           ; BSR set to: 57
  4869  00FF96  25                 	db	37
  4870  00FF97  64                 	db	100	;'d'
  4871  00FF98  20                 	db	32
  4872  00FF99  25                 	db	37
  4873  00FF9A  32                 	db	50	;'2'
  4874  00FF9B  2E                 	db	46
  4875  00FF9C  34                 	db	52	;'4'
  4876  00FF9D  66                 	db	102	;'f'
  4877  00FF9E  20                 	db	32
  4878  00FF9F  20                 	db	32
  4879  00FFA0  20                 	db	32
  4880  00FFA1  25                 	db	37
  4881  00FFA2  64                 	db	100	;'d'
  4882  00FFA3  20                 	db	32
  4883  00FFA4  20                 	db	32
  4884  00FFA5  20                 	db	32
  4885  00FFA6  00                 	db	0
  4886  00FFA7                     STR_81:
  4887                           
  4888                           ; BSR set to: 57
  4889  00FFA7  76                 	db	118	;'v'
  4890  00FFA8  74                 	db	116	;'t'
  4891  00FFA9  65                 	db	101	;'e'
  4892  00FFAA  72                 	db	114	;'r'
  4893  00FFAB  6D                 	db	109	;'m'
  4894  00FFAC  20                 	db	32
  4895  00FFAD  25                 	db	37
  4896  00FFAE  78                 	db	120	;'x'
  4897  00FFAF  3A                 	db	58	;':'
  4898  00FFB0  25                 	db	37
  4899  00FFB1  78                 	db	120	;'x'
  4900  00FFB2  20                 	db	32
  4901  00FFB3  20                 	db	32
  4902  00FFB4  20                 	db	32
  4903  00FFB5  00                 	db	0
  4904  00FFB6                     STR_75:
  4905                           
  4906                           ; BSR set to: 57
  4907  00FFB6  46                 	db	70	;'F'
  4908  00FFB7  65                 	db	101	;'e'
  4909  00FFB8  62                 	db	98	;'b'
  4910  00FFB9  20                 	db	32
  4911  00FFBA  32                 	db	50	;'2'
  4912  00FFBB  30                 	db	48	;'0'
  4913  00FFBC  20                 	db	32
  4914  00FFBD  32                 	db	50	;'2'
  4915  00FFBE  30                 	db	48	;'0'
  4916  00FFBF  32                 	db	50	;'2'
  4917  00FFC0  30                 	db	48	;'0'
  4918  00FFC1  00                 	db	0
  4919  00FFC2                     STR_79:
  4920                           
  4921                           ; BSR set to: 57
  4922  00FFC2  25                 	db	37
  4923  00FFC3  73                 	db	115	;'s'
  4924  00FFC4  20                 	db	32
  4925  00FFC5  20                 	db	32
  4926  00FFC6  20                 	db	32
  4927  00FFC7  20                 	db	32
  4928  00FFC8  20                 	db	32
  4929  00FFC9  20                 	db	32
  4930  00FFCA  20                 	db	32
  4931  00FFCB  00                 	db	0
  4932  00FFCC                     STR_76:
  4933                           
  4934                           ; BSR set to: 57
  4935  00FFCC  31                 	db	49	;'1'
  4936  00FFCD  30                 	db	48	;'0'
  4937  00FFCE  3A                 	db	58	;':'
  4938  00FFCF  34                 	db	52	;'4'
  4939  00FFD0  36                 	db	54	;'6'
  4940  00FFD1  3A                 	db	58	;':'
  4941  00FFD2  33                 	db	51	;'3'
  4942  00FFD3  34                 	db	52	;'4'
  4943  00FFD4  00                 	db	0
  4944  00FFD5                     STR_3:
  4945                           
  4946                           ; BSR set to: 57
  4947  00FFD5  31                 	db	49	;'1'
  4948  00FFD6  2E                 	db	46
  4949  00FFD7  32                 	db	50	;'2'
  4950  00FFD8  37                 	db	55	;'7'
  4951  00FFD9  00                 	db	0
  4952  00FFDA                     STR_96:
  4953                           
  4954                           ; BSR set to: 57
  4955  00FFDA  49                 	db	73	;'I'
  4956  00FFDB  4E                 	db	78	;'N'
  4957  00FFDC  46                 	db	70	;'F'
  4958  00FFDD  00                 	db	0
  4959  00FFDE                     STR_100:
  4960                           
  4961                           ; BSR set to: 57
  4962  00FFDE  4E                 	db	78	;'N'
  4963  00FFDF  41                 	db	65	;'A'
  4964  00FFE0  4E                 	db	78	;'N'
  4965  00FFE1  00                 	db	0
  4966  00FFE2                     STR_97:
  4967                           
  4968                           ; BSR set to: 57
  4969  00FFE2  69                 	db	105	;'i'
  4970  00FFE3  6E                 	db	110	;'n'
  4971  00FFE4  66                 	db	102	;'f'
  4972  00FFE5  00                 	db	0
  4973  00FFE6                     STR_101:
  4974                           
  4975                           ; BSR set to: 57
  4976  00FFE6  6E                 	db	110	;'n'
  4977  00FFE7  61                 	db	97	;'a'
  4978  00FFE8  6E                 	db	110	;'n'
  4979  00FFE9  00                 	db	0
  4980  00FFEA                     STR_127:
  4981                           
  4982                           ; BSR set to: 57
  4983  00FFEA  6C                 	db	108	;'l'
  4984  00FFEB  58                 	db	88	;'X'
  4985  00FFEC  00                 	db	0
  4986  00FFED                     STR_104:
  4987                           
  4988                           ; BSR set to: 57
  4989  00FFED  6C                 	db	108	;'l'
  4990  00FFEE  64                 	db	100	;'d'
  4991  00FFEF  00                 	db	0
  4992  00FFF0                     STR_113:
  4993                           
  4994                           ; BSR set to: 57
  4995  00FFF0  6C                 	db	108	;'l'
  4996  00FFF1  66                 	db	102	;'f'
  4997  00FFF2  00                 	db	0
  4998  00FFF3                     STR_108:
  4999                           
  5000                           ; BSR set to: 57
  5001  00FFF3  6C                 	db	108	;'l'
  5002  00FFF4  69                 	db	105	;'i'
  5003  00FFF5  00                 	db	0
  5004  00FFF6                     STR_118:
  5005                           
  5006                           ; BSR set to: 57
  5007  00FFF6  6C                 	db	108	;'l'
  5008  00FFF7  75                 	db	117	;'u'
  5009  00FFF8  00                 	db	0
  5010  00FFF9                     STR_123:
  5011                           
  5012                           ; BSR set to: 57
  5013  00FFF9  6C                 	db	108	;'l'
  5014  00FFFA  78                 	db	120	;'x'
  5015  00FFFB  00                 	db	0
  5016  00FFFC                     STR_74:
  5017                           
  5018                           ; BSR set to: 57
  5019  00FFFC  25                 	db	37
  5020  00FFFD  73                 	db	115	;'s'
  5021  00FFFE  00                 	db	0
  5022  0000                     
  5023                           ; #config settings
  5024  00FFFF  00                 	db	0	; dummy byte at the end
  5025  0000                     
  5026                           	psect	cinit
  5027  000474                     __pcinit:
  5028                           	opt callstack 0
  5029  000474                     start_initialization:
  5030                           	opt callstack 0
  5031  000474                     __initialization:
  5032                           	opt callstack 0
  5033                           
  5034                           ; Initialize objects allocated to BIGRAM (1474 bytes)
  5035                           ; load TBLPTR registers with __pidataBIGRAM
  5036  000474  0E06               	movlw	low __pidataBIGRAM
  5037  000476  6EF6               	movwf	tblptrl,c
  5038  000478  0E7D               	movlw	high __pidataBIGRAM
  5039  00047A  6EF7               	movwf	tblptrh,c
  5040  00047C  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  5041  00047E  6EF8               	movwf	tblptru,c
  5042  000480  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  5043  000484  EE21 F1C2          	lfsr	2,1474
  5044  000488                     copy_data0:
  5045  000488  0009               	tblrd		*+
  5046  00048A  006F FFD7 FFEE     	movff	tablat,postinc0
  5047  000490  50DD               	movf	postdec2,w,c
  5048  000492  50D9               	movf	fsr2l,w,c
  5049  000494  E1F9               	bnz	copy_data0
  5050  000496  50DA               	movf	fsr2h,w,c
  5051  000498  E1F7               	bnz	copy_data0
  5052                           
  5053                           ; Initialize objects allocated to BANK2 (188 bytes)
  5054                           ; load TBLPTR registers with __pidataBANK2
  5055  00049A  0E94               	movlw	low __pidataBANK2
  5056  00049C  6EF6               	movwf	tblptrl,c
  5057  00049E  0E08               	movlw	high __pidataBANK2
  5058  0004A0  6EF7               	movwf	tblptrh,c
  5059  0004A2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  5060  0004A4  6EF8               	movwf	tblptru,c
  5061  0004A6  EE00  F200         	lfsr	0,__pdataBANK2
  5062  0004AA  EE20 F0BC          	lfsr	2,188
  5063  0004AE                     copy_data1:
  5064  0004AE  0009               	tblrd		*+
  5065  0004B0  006F FFD7 FFEE     	movff	tablat,postinc0
  5066  0004B6  50DD               	movf	postdec2,w,c
  5067  0004B8  50D9               	movf	fsr2l,w,c
  5068  0004BA  E1F9               	bnz	copy_data1
  5069                           
  5070                           ; Initialize objects allocated to BANK1 (164 bytes)
  5071                           ; load TBLPTR registers with __pidataBANK1
  5072  0004BC  0E22               	movlw	low __pidataBANK1
  5073  0004BE  6EF6               	movwf	tblptrl,c
  5074  0004C0  0E0E               	movlw	high __pidataBANK1
  5075  0004C2  6EF7               	movwf	tblptrh,c
  5076  0004C4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  5077  0004C6  6EF8               	movwf	tblptru,c
  5078  0004C8  EE00  F100         	lfsr	0,__pdataBANK1
  5079  0004CC  EE20 F0A4          	lfsr	2,164
  5080  0004D0                     copy_data2:
  5081  0004D0  0009               	tblrd		*+
  5082  0004D2  006F FFD7 FFEE     	movff	tablat,postinc0
  5083  0004D8  50DD               	movf	postdec2,w,c
  5084  0004DA  50D9               	movf	fsr2l,w,c
  5085  0004DC  E1F9               	bnz	copy_data2
  5086                           
  5087                           ; Clear objects allocated to BANK6 (255 bytes)
  5088  0004DE  EE01  F200         	lfsr	0,__pbssBANK6
  5089  0004E2  EE20 F0FF          	lfsr	2,255
  5090  0004E6                     clear_0:
  5091  0004E6  6AEE               	clrf	postinc0,c
  5092  0004E8  50DD               	movf	postdec2,w,c
  5093  0004EA  50D9               	movf	fsr2l,w,c
  5094  0004EC  E1FC               	bnz	clear_0
  5095  0004EE  50DA               	movf	fsr2h,w,c
  5096  0004F0  E1FA               	bnz	clear_0
  5097                           
  5098                           ; Clear objects allocated to BANK5 (134 bytes)
  5099  0004F2  EE01  F100         	lfsr	0,__pbssBANK5
  5100  0004F6  0E86               	movlw	134
  5101  0004F8                     clear_1:
  5102  0004F8  6AEE               	clrf	postinc0,c
  5103  0004FA  06E8               	decf	wreg,f,c
  5104  0004FC  E1FD               	bnz	clear_1
  5105                           
  5106                           ; Clear objects allocated to BANK4 (219 bytes)
  5107  0004FE  EE01  F000         	lfsr	0,__pbssBANK4
  5108  000502  0EDB               	movlw	219
  5109  000504                     clear_2:
  5110  000504  6AEE               	clrf	postinc0,c
  5111  000506  06E8               	decf	wreg,f,c
  5112  000508  E1FD               	bnz	clear_2
  5113                           
  5114                           ; Clear objects allocated to BANK3 (223 bytes)
  5115  00050A  EE00  F300         	lfsr	0,__pbssBANK3
  5116  00050E  0EDF               	movlw	223
  5117  000510                     clear_3:
  5118  000510  6AEE               	clrf	postinc0,c
  5119  000512  06E8               	decf	wreg,f,c
  5120  000514  E1FD               	bnz	clear_3
  5121                           
  5122                           ; Clear objects allocated to BANK2 (66 bytes)
  5123  000516  EE00  F2BC         	lfsr	0,__pbssBANK2
  5124  00051A  0E42               	movlw	66
  5125  00051C                     clear_4:
  5126  00051C  6AEE               	clrf	postinc0,c
  5127  00051E  06E8               	decf	wreg,f,c
  5128  000520  E1FD               	bnz	clear_4
  5129                           
  5130                           ; Clear objects allocated to BANK1 (89 bytes)
  5131  000522  EE00  F1A4         	lfsr	0,__pbssBANK1
  5132  000526  0E59               	movlw	89
  5133  000528                     clear_5:
  5134  000528  6AEE               	clrf	postinc0,c
  5135  00052A  06E8               	decf	wreg,f,c
  5136  00052C  E1FD               	bnz	clear_5
  5137                           
  5138                           ; Clear objects allocated to BANK0 (135 bytes)
  5139  00052E  EE00  F060         	lfsr	0,__pbssBANK0
  5140  000532  0E87               	movlw	135
  5141  000534                     clear_6:
  5142  000534  6AEE               	clrf	postinc0,c
  5143  000536  06E8               	decf	wreg,f,c
  5144  000538  E1FD               	bnz	clear_6
  5145                           
  5146                           ; Clear objects allocated to COMRAM (14 bytes)
  5147  00053A  EE00  F04A         	lfsr	0,__pbssCOMRAM
  5148  00053E  0E0E               	movlw	14
  5149  000540                     clear_7:
  5150  000540  6AEE               	clrf	postinc0,c
  5151  000542  06E8               	decf	wreg,f,c
  5152  000544  E1FD               	bnz	clear_7
  5153                           
  5154                           ;
  5155                           ; Setup IVTBASE
  5156                           ;
  5157  000546  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  5158  000548  6ED5               	movwf	213,c
  5159  00054A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  5160  00054C  6ED6               	movwf	214,c
  5161  00054E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  5162  000550  6ED7               	movwf	215,c
  5163  000552                     end_of_initialization:
  5164                           	opt callstack 0
  5165  000552                     __end_of__initialization:
  5166                           	opt callstack 0
  5167  000552  0100               	movlb	0
  5168  000554  EF00  F080         	goto	_main	;jump to C main() function
  5169                           
  5170                           	psect	bssCOMRAM
  5171  00004A                     __pbssCOMRAM:
  5172                           	opt callstack 0
  5173  00004A                     _width:
  5174                           	opt callstack 0
  5175  00004A                     	ds	2
  5176  00004C                     _prec:
  5177                           	opt callstack 0
  5178  00004C                     	ds	2
  5179  00004E                     _flags:
  5180                           	opt callstack 0
  5181  00004E                     	ds	2
  5182  000050                     calc_bsoc@log_update_wait:
  5183                           	opt callstack 0
  5184  000050                     	ds	1
  5185  000051                     check_day_time@day_delay:
  5186                           	opt callstack 0
  5187  000051                     	ds	1
  5188  000052                     dac_spi_control@init:
  5189                           	opt callstack 0
  5190  000052                     	ds	1
  5191  000053                     display_history@bwait:
  5192                           	opt callstack 0
  5193  000053                     	ds	1
  5194  000054                     _uart2RxHead:
  5195                           	opt callstack 0
  5196  000054                     	ds	1
  5197  000055                     _uart2TxBufferRemaining:
  5198                           	opt callstack 0
  5199  000055                     	ds	1
  5200  000056                     _uart2TxTail:
  5201                           	opt callstack 0
  5202  000056                     	ds	1
  5203  000057                     _uart1RxHead:
  5204                           	opt callstack 0
  5205  000057                     	ds	1
  5206                           
  5207                           	psect	bssBANK0
  5208  000060                     __pbssBANK0:
  5209                           	opt callstack 0
  5210  000060                     _spi_link:
  5211                           	opt callstack 0
  5212  000060                     	ds	12
  5213  00006C                     ___tzname:
  5214                           	opt callstack 0
  5215  00006C                     	ds	4
  5216  000070                     ___timezone:
  5217                           	opt callstack 0
  5218  000070                     	ds	4
  5219  000074                     floorf@F524:
  5220                           	opt callstack 0
  5221  000074                     	ds	4
  5222  000078                     fabsf@F463:
  5223                           	opt callstack 0
  5224  000078                     	ds	4
  5225  00007C                     ___fpclassifyf@F463:
  5226                           	opt callstack 0
  5227  00007C                     	ds	4
  5228  000080                     calc_ror_data@bcror:
  5229                           	opt callstack 0
  5230  000080                     	ds	4
  5231  000084                     calc_ror_data@bvror:
  5232                           	opt callstack 0
  5233  000084                     	ds	4
  5234  000088                     calc_model_data@bcror:
  5235                           	opt callstack 0
  5236  000088                     	ds	4
  5237  00008C                     calc_model_data@bvror:
  5238                           	opt callstack 0
  5239  00008C                     	ds	4
  5240  000090                     wdtdelay@dcount:
  5241                           	opt callstack 0
  5242  000090                     	ds	4
  5243  000094                     _P:
  5244                           	opt callstack 0
  5245  000094                     	ds	4
  5246  000098                     _TMR3_InterruptHandler:
  5247                           	opt callstack 0
  5248  000098                     	ds	3
  5249  00009B                     _TMR5_InterruptHandler:
  5250                           	opt callstack 0
  5251  00009B                     	ds	3
  5252  00009E                     _TMR6_InterruptHandler:
  5253                           	opt callstack 0
  5254  00009E                     	ds	3
  5255  0000A1                     _ADCC_ADTI_InterruptHandler:
  5256                           	opt callstack 0
  5257  0000A1                     	ds	3
  5258  0000A4                     _ADCC_ADI_InterruptHandler:
  5259                           	opt callstack 0
  5260  0000A4                     	ds	3
  5261  0000A7                     _UART1_RxInterruptHandler:
  5262                           	opt callstack 0
  5263  0000A7                     	ds	3
  5264  0000AA                     _UART2_TxInterruptHandler:
  5265                           	opt callstack 0
  5266  0000AA                     	ds	3
  5267  0000AD                     _UART2_RxInterruptHandler:
  5268                           	opt callstack 0
  5269  0000AD                     	ds	3
  5270  0000B0                     _INT1_InterruptHandler:
  5271                           	opt callstack 0
  5272  0000B0                     	ds	3
  5273  0000B3                     _INT0_InterruptHandler:
  5274                           	opt callstack 0
  5275  0000B3                     	ds	3
  5276  0000B6                     _dst_off:
  5277                           	opt callstack 0
  5278  0000B6                     	ds	2
  5279  0000B8                     ___daylight:
  5280                           	opt callstack 0
  5281  0000B8                     	ds	2
  5282  0000BA                     _nout:
  5283                           	opt callstack 0
  5284  0000BA                     	ds	2
  5285  0000BC                     get_raw_result@raw_result:
  5286                           	opt callstack 0
  5287  0000BC                     	ds	2
  5288  0000BE                     _t_mbmc:
  5289                           	opt callstack 0
  5290  0000BE                     	ds	2
  5291  0000C0                     TMR3_ISR@CountCallBack:
  5292                           	opt callstack 0
  5293  0000C0                     	ds	2
  5294  0000C2                     _timer3ReloadVal:
  5295                           	opt callstack 0
  5296  0000C2                     	ds	2
  5297  0000C4                     TMR5_ISR@CountCallBack:
  5298                           	opt callstack 0
  5299  0000C4                     	ds	2
  5300  0000C6                     _timer5ReloadVal:
  5301                           	opt callstack 0
  5302  0000C6                     	ds	2
  5303  0000C8                     esr_check@esr_state:
  5304                           	opt callstack 0
  5305  0000C8                     	ds	1
  5306  0000C9                     dac_spi_control@SB:
  5307                           	opt callstack 0
  5308  0000C9                     	ds	1
  5309  0000CA                     dac_spi_control@SC:
  5310                           	opt callstack 0
  5311  0000CA                     	ds	1
  5312  0000CB                     dac_spi_control@S2:
  5313                           	opt callstack 0
  5314  0000CB                     	ds	1
  5315  0000CC                     dac_spi_control@S1:
  5316                           	opt callstack 0
  5317  0000CC                     	ds	1
  5318  0000CD                     dac_spi_control@S0:
  5319                           	opt callstack 0
  5320  0000CD                     	ds	1
  5321  0000CE                     _mode_sw:
  5322                           	opt callstack 0
  5323  0000CE                     	ds	1
  5324  0000CF                     _uart2RxCount:
  5325                           	opt callstack 0
  5326  0000CF                     	ds	1
  5327  0000D0                     _uart2RxTail:
  5328                           	opt callstack 0
  5329  0000D0                     	ds	1
  5330  0000D1                     _uart2TxHead:
  5331                           	opt callstack 0
  5332  0000D1                     	ds	1
  5333  0000D2                     _uart1RxCount:
  5334                           	opt callstack 0
  5335  0000D2                     	ds	1
  5336  0000D3                     _uart1RxTail:
  5337                           	opt callstack 0
  5338  0000D3                     	ds	1
  5339  0000D4                     time@current_time:
  5340                           	opt callstack 0
  5341  0000D4                     	ds	8
  5342  0000DC                     _pclock:
  5343                           	opt callstack 0
  5344  0000DC                     	ds	8
  5345  0000E4                     _crcObj:
  5346                           	opt callstack 0
  5347  0000E4                     	ds	3
  5348                           
  5349                           	psect	bssBANK1
  5350  0001A4                     __pbssBANK1:
  5351                           	opt callstack 0
  5352  0001A4                     _S:
  5353                           	opt callstack 0
  5354  0001A4                     	ds	41
  5355  0001CD                     spinners@s:
  5356                           	opt callstack 0
  5357  0001CD                     	ds	6
  5358  0001D3                     _lock:
  5359                           	opt callstack 0
  5360  0001D3                     	ds	4
  5361  0001D7                     _utctime:
  5362                           	opt callstack 0
  5363  0001D7                     	ds	4
  5364  0001DB                     _r1:
  5365                           	opt callstack 0
  5366  0001DB                     	ds	10
  5367  0001E5                     _r0:
  5368                           	opt callstack 0
  5369  0001E5                     	ds	10
  5370  0001EF                     _dst_name:
  5371                           	opt callstack 0
  5372  0001EF                     	ds	7
  5373  0001F6                     _std_name:
  5374                           	opt callstack 0
  5375  0001F6                     	ds	7
  5376                           
  5377                           	psect	dataBANK1
  5378  000100                     __pdataBANK1:
  5379                           	opt callstack 0
  5380  000100                     _R:
  5381                           	opt callstack 0
  5382  000100                     	ds	155
  5383  00019B                     _H:
  5384                           	opt callstack 0
  5385  00019B                     	ds	9
  5386                           
  5387                           	psect	bssBANK2
  5388  0002BC                     __pbssBANK2:
  5389                           	opt callstack 0
  5390  0002BC                     _tickCount:
  5391                           	opt callstack 0
  5392  0002BC                     	ds	26
  5393  0002D6                     _uart1RxBuffer:
  5394                           	opt callstack 0
  5395  0002D6                     	ds	8
  5396  0002DE                     localtime@tm:
  5397                           	opt callstack 0
  5398  0002DE                     	ds	24
  5399  0002F6                     _seed:
  5400                           	opt callstack 0
  5401  0002F6                     	ds	8
  5402                           
  5403                           	psect	dataBANK2
  5404  000200                     __pdataBANK2:
  5405                           	opt callstack 0
  5406  000200                     stoa@F1166:
  5407                           	opt callstack 0
  5408  000200                     	ds	7
  5409  000207                     _V:
  5410                           	opt callstack 0
  5411  000207                     	ds	181
  5412                           
  5413                           	psect	bssBANK3
  5414  000300                     __pbssBANK3:
  5415                           	opt callstack 0
  5416  000300                     lp_filter@smooth:
  5417                           	opt callstack 0
  5418  000300                     	ds	84
  5419  000354                     _dbuf:
  5420                           	opt callstack 0
  5421  000354                     	ds	80
  5422  0003A4                     	ds	32
  5423  0003C4                     asctime@buf:
  5424                           	opt callstack 0
  5425  0003C4                     	ds	27
  5426                           
  5427                           	psect	bssBANK4
  5428  000400                     __pbssBANK4:
  5429                           	opt callstack 0
  5430  000400                     _uart2TxBuffer:
  5431                           	opt callstack 0
  5432  000400                     	ds	64
  5433  000440                     _r_cal:
  5434                           	opt callstack 0
  5435  000440                     	ds	155
  5436                           
  5437                           	psect	bssBANK5
  5438  000500                     __pbssBANK5:
  5439                           	opt callstack 0
  5440  000500                     _ring_buf2:
  5441                           	opt callstack 0
  5442  000500                     	ds	67
  5443  000543                     _ring_buf1:
  5444                           	opt callstack 0
  5445  000543                     	ds	67
  5446                           
  5447                           	psect	bssBANK6
  5448  000600                     __pbssBANK6:
  5449                           	opt callstack 0
  5450  000600                     _uart2RxBuffer:
  5451                           	opt callstack 0
  5452  000600                     	ds	255
  5453                           
  5454                           	psect	dataBIGRAM
  5455  0006FF                     __pdataBIGRAM:
  5456                           	opt callstack 0
  5457  0006FF                     _D:
  5458                           	opt callstack 0
  5459  0006FF                     	ds	642
  5460  000981                     _port_data:
  5461                           	opt callstack 0
  5462  000981                     	ds	512
  5463  000B81                     _C:
  5464                           	opt callstack 0
  5465  000B81                     	ds	320
  5466                           
  5467                           	psect	cstackBANK0
  5468  0000E7                     __pcstackBANK0:
  5469                           	opt callstack 0
  5470  0000E7                     ??_TMR3_ISR:
  5471                           
  5472                           ; 1 bytes @ 0x0
  5473  0000E7                     	ds	25
  5474                           
  5475                           	psect	cstackCOMRAM
  5476  000001                     __pcstackCOMRAM:
  5477                           	opt callstack 0
  5478  000001                     ??_ADCC_ThresholdISR:
  5479  000001                     
  5480                           ; 1 bytes @ 0x0
  5481  000001                     	ds	5
  5482  000006                     ??_TMR6_ISR:
  5483                           
  5484                           ; 1 bytes @ 0x5
  5485  000006                     	ds	1
  5486  000007                     ??_INT1_ISR:
  5487  000007                     
  5488                           ; 1 bytes @ 0x6
  5489  000007                     	ds	4
  5490  00000B                     ??_TMR5_ISR:
  5491                           
  5492                           ; 1 bytes @ 0xA
  5493  00000B                     	ds	31
  5494                           
  5495 ;;
  5496 ;;Main: autosize = 19, tempsize = 0, incstack = 0, save=0
  5497 ;;
  5498 ;; *************** function _main *****************
  5499 ;; Defined at:
  5500 ;;		line 200 in file "main.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  i_esr           2  [STACK] unsigned short 
  5505 ;;  esr_temp        4  [STACK] float 
  5506 ;;  i_esr           2  [STACK] unsigned short 
  5507 ;;  shape           1  [STACK] unsigned char 
  5508 ;;  inp_index       1  [STACK] unsigned char 
  5509 ;;  k               1  [STACK] unsigned char 
  5510 ;;  j               1  [STACK] unsigned char 
  5511 ;;  i               1  [STACK] unsigned char 
  5512 ;;  mode            1  [STACK] enum E17179
  5513 ;;  i_ror           1  [STACK] unsigned char 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1  [STACK] void 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5527 ;;Total ram usage:        0 bytes
  5528 ;; Hardware stack levels required when called:   28
  5529 ;; This function calls:
  5530 ;;		_SYSTEM_Initialize
  5531 ;;		_StartTimer
  5532 ;;		_TimerDone
  5533 ;;		_WaitMs
  5534 ;;		___fladd
  5535 ;;		___flge
  5536 ;;		___fltol
  5537 ;;		_asctime
  5538 ;;		_calc_model_data
  5539 ;;		_calc_ror_data
  5540 ;;		_check_adc_scan
  5541 ;;		_check_enter_button
  5542 ;;		_check_help
  5543 ;;		_clear_adc_scan
  5544 ;;		_clear_hid_pflags
  5545 ;;		_conv_raw_result
  5546 ;;		_convert_adc_data
  5547 ;;		_current_sensor_cal
  5548 ;;		_display_history
  5549 ;;		_eaDogM_WriteCommand
  5550 ;;		_esr_check
  5551 ;;		_fabsf
  5552 ;;		_get_raw_result
  5553 ;;		_get_switch
  5554 ;;		_get_vterm_ptr
  5555 ;;		_hid_display
  5556 ;;		_init_bsoc
  5557 ;;		_init_display
  5558 ;;		_init_port_dma
  5559 ;;		_load_hist_data
  5560 ;;		_localtime
  5561 ;;		_lp_filter
  5562 ;;		_mode_lamp_dim
  5563 ;;		_read_cal_data
  5564 ;;		_set_dac
  5565 ;;		_set_dac_a
  5566 ;;		_set_dac_b
  5567 ;;		_set_display_info
  5568 ;;		_set_hist_flag
  5569 ;;		_set_load_relay_one
  5570 ;;		_set_load_relay_two
  5571 ;;		_set_time
  5572 ;;		_set_vterm
  5573 ;;		_spinners
  5574 ;;		_sprintf
  5575 ;;		_srand
  5576 ;;		_start_adc_scan
  5577 ;;		_start_switch_handler
  5578 ;;		_static_soc
  5579 ;;		_time
  5580 ;;		_update_cal_data
  5581 ;;		_update_hist_data
  5582 ;;		_update_lcd
  5583 ;;		_wait_lcd_done
  5584 ;;		_write_cal_data
  5585 ;; This function is called by:
  5586 ;;		Startup code after reset
  5587 ;; This function uses a reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text0
  5591  010000                     __ptext0:
  5592                           	opt callstack 0
  5593  010000                     _main:
  5594                           	opt callstack 0
  5595                           
  5596                           ; autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5597  010000  0E13               	movlw	19
  5598  010002  26E1               	addwf	fsr1l,f,c
  5599  010004  0E00               	movlw	0
  5600  010006  22E2               	addwfc	fsr1h,f,c
  5601                           
  5602                           ;main.c: 202:  UI_STATES mode;;main.c: 203:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  5603                           ;stkvar	_inp_index @ sp[(-19)+13]
  5604                           
  5605                           ;incstack = 0
  5606  010008  0EFA               	movlw	-6
  5607  01000A  6AE3               	clrf	plusw1,c
  5608                           
  5609                           ;stkvar	_i @ sp[(-19)+16]
  5610  01000C  0EFD               	movlw	-3
  5611  01000E  6AE3               	clrf	plusw1,c
  5612                           
  5613                           ;stkvar	_j @ sp[(-19)+15]
  5614  010010  0EFC               	movlw	-4
  5615  010012  6AE3               	clrf	plusw1,c
  5616  010014  2AE3               	incf	plusw1,f,c
  5617                           
  5618                           ;stkvar	_k @ sp[(-19)+14]
  5619  010016  0EFB               	movlw	-5
  5620  010018  6AE3               	clrf	plusw1,c
  5621  01001A  82E3               	bsf	plusw1,1,c
  5622                           
  5623                           ;main.c: 206:  SYSTEM_Initialize();
  5624  01001C  EC56  F00F         	call	_SYSTEM_Initialize	;wreg free
  5625                           
  5626                           ; BSR set to: 60
  5627                           ;main.c: 209:  (INTCON0bits.GIEH = 1);
  5628  010020  8ED2               	bsf	210,7,c	;volatile
  5629                           
  5630                           ; BSR set to: 60
  5631                           ;main.c: 212:  (INTCON0bits.GIEL = 1);
  5632  010022  8CD2               	bsf	210,6,c	;volatile
  5633                           
  5634                           ; BSR set to: 60
  5635                           ;main.c: 214:  V.ui_state = UI_STATE_INIT;
  5636  010024  0102               	movlb	2	; () banked
  5637  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5638                           
  5639                           ; BSR set to: 2
  5640                           ;main.c: 219:  WaitMs(300);
  5641  010028  0E2C               	movlw	44
  5642  01002A  6EE6               	movwf	postinc1,c
  5643  01002C  0E01               	movlw	1
  5644  01002E  6EE6               	movwf	postinc1,c
  5645  010030  EC2E  F012         	call	_WaitMs	;wreg free
  5646                           
  5647                           ;main.c: 220:  if (PORTBbits.RB0) {
  5648  010034  A0CB               	btfss	203,0,c	;volatile
  5649  010036  D004               	goto	l17234
  5650                           
  5651                           ;main.c: 221:   mode = UI_STATE_HOST;
  5652                           ;stkvar	_mode @ sp[(-19)+17]
  5653  010038  0EFE               	movlw	-2
  5654  01003A  6AE3               	clrf	plusw1,c
  5655  01003C  2AE3               	incf	plusw1,f,c
  5656                           
  5657                           ;main.c: 222:  } else {
  5658  01003E  D004               	goto	l17236
  5659  010040                     l17234:
  5660                           
  5661                           ;main.c: 223:   mode = UI_STATE_LOG;
  5662                           ;stkvar	_mode @ sp[(-19)+17]
  5663  010040  0EFE               	movlw	-2
  5664  010042  6AE3               	clrf	plusw1,c
  5665  010044  80E3               	bsf	plusw1,0,c
  5666  010046  82E3               	bsf	plusw1,1,c	;indir
  5667  010048                     l17236:
  5668                           
  5669                           ;main.c: 226:  if (mode == UI_STATE_HOST) {
  5670                           ;stkvar	_mode @ sp[(-19)+17]
  5671  010048  0EFE               	movlw	-2
  5672  01004A  04E3               	decf	plusw1,w,c
  5673  01004C  A4D8               	btfss	status,2,c
  5674  01004E  D007               	goto	l1455
  5675                           
  5676                           ;main.c: 227:   do { LATDbits.LATD0 = 1; } while(0);
  5677  010050  80BD               	bsf	189,0,c	;volatile
  5678                           
  5679                           ;main.c: 228:   V.mode_pwm = 70;
  5680  010052  0E00               	movlw	0
  5681  010054  0102               	movlb	2	; () banked
  5682  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5683  010058  0E46               	movlw	70
  5684  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5685                           
  5686                           ;main.c: 229:  } else {
  5687  01005C  D004               	goto	l17240
  5688  01005E                     l1455:
  5689  01005E  90BD               	bcf	189,0,c	;volatile
  5690                           
  5691                           ;main.c: 231:   V.mode_pwm = 0;
  5692  010060  0102               	movlb	2	; () banked
  5693  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5694  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5695  010066                     l17240:
  5696                           
  5697                           ; BSR set to: 2
  5698                           ;main.c: 233:  mode_lamp_dim(V.mode_pwm);
  5699  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5700  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5701  010072  ECCB  F015         	call	_mode_lamp_dim	;wreg free
  5702  010076  EFB6  F084         	goto	l17406
  5703  01007A                     l17242:
  5704                           
  5705                           ; BSR set to: 2
  5706                           ;main.c: 241:    init_port_dma();
  5707  01007A  ECCA  F012         	call	_init_port_dma	;wreg free
  5708                           
  5709                           ; BSR set to: 59
  5710                           ;main.c: 243:    init_display();
  5711  01007E  ECC5  F001         	call	_init_display	;wreg free
  5712                           
  5713                           ; BSR set to: 61
  5714                           ;main.c: 244:    eaDogM_WriteCommand(0b00001100);
  5715  010082  0E0C               	movlw	12
  5716  010084  6EE6               	movwf	postinc1,c
  5717  010086  EC53  F016         	call	_eaDogM_WriteCommand	;wreg free
  5718                           
  5719                           ; BSR set to: 61
  5720                           ;main.c: 245:    set_dac();
  5721  01008A  EC61  F005         	call	_set_dac	;wreg free
  5722                           
  5723                           ;main.c: 249:    set_load_relay_one(1);
  5724  01008E  0E01               	movlw	1
  5725  010090  6EE6               	movwf	postinc1,c
  5726  010092  EC33  F016         	call	_set_load_relay_one	;wreg free
  5727                           
  5728                           ;main.c: 250:    set_load_relay_two(1);
  5729  010096  0E01               	movlw	1
  5730  010098  6EE6               	movwf	postinc1,c
  5731  01009A  EC2B  F016         	call	_set_load_relay_two	;wreg free
  5732                           
  5733                           ;main.c: 252:    V.ui_state = mode;
  5734                           ;stkvar	_mode @ sp[(-19)+17]
  5735  01009E  0EFE               	movlw	-2
  5736  0100A0  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5737                           
  5738                           ;main.c: 253:    srand(1957);
  5739  0100A6  0EA5               	movlw	165
  5740  0100A8  6EE6               	movwf	postinc1,c
  5741  0100AA  0E07               	movlw	7
  5742  0100AC  6EE6               	movwf	postinc1,c
  5743  0100AE  EC49  F012         	call	_srand	;wreg free
  5744                           
  5745                           ; BSR set to: 2
  5746                           ;main.c: 254:    set_vterm(0);
  5747  0100B2  0E00               	movlw	0
  5748  0100B4  6EE6               	movwf	postinc1,c
  5749  0100B6  EC92  F015         	call	_set_vterm	;wreg free
  5750                           
  5751                           ;main.c: 255:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5752  0100BA  0E1D               	movlw	low STR_1
  5753  0100BC  6EE6               	movwf	postinc1,c
  5754  0100BE  0EFF               	movlw	high STR_1
  5755  0100C0  6EE6               	movwf	postinc1,c
  5756  0100C2  0E00               	movlw	0
  5757  0100C4  6EE6               	movwf	postinc1,c
  5758  0100C6  0E00               	movlw	0
  5759  0100C8  6EE6               	movwf	postinc1,c
  5760  0100CA  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5761  0100CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5762  0100D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5763  0100DA  0E04               	movlw	4
  5764  0100DC  6EE6               	movwf	postinc1,c
  5765  0100DE  ECE5  F0FE         	call	_sprintf	;wreg free
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;main.c: 256:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.27");
  5769  0100E2  0ED5               	movlw	low STR_3
  5770  0100E4  6EE6               	movwf	postinc1,c
  5771  0100E6  0EFF               	movlw	high STR_3
  5772  0100E8  6EE6               	movwf	postinc1,c
  5773  0100EA  0E08               	movlw	low STR_2
  5774  0100EC  6EE6               	movwf	postinc1,c
  5775  0100EE  0EFF               	movlw	high STR_2
  5776  0100F0  6EE6               	movwf	postinc1,c
  5777  0100F2  0E00               	movlw	0
  5778  0100F4  6EE6               	movwf	postinc1,c
  5779  0100F6  0E01               	movlw	1
  5780  0100F8  6EE6               	movwf	postinc1,c
  5781  0100FA  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5782  0100FE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5783  010104  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5784  01010A  0E06               	movlw	6
  5785  01010C  6EE6               	movwf	postinc1,c
  5786  01010E  ECE5  F0FE         	call	_sprintf	;wreg free
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;main.c: 257:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5790  010112  0EF3               	movlw	low STR_4
  5791  010114  6EE6               	movwf	postinc1,c
  5792  010116  0EFE               	movlw	high STR_4
  5793  010118  6EE6               	movwf	postinc1,c
  5794  01011A  0E00               	movlw	0
  5795  01011C  6EE6               	movwf	postinc1,c
  5796  01011E  0E02               	movlw	2
  5797  010120  6EE6               	movwf	postinc1,c
  5798  010122  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5799  010126  0060  F0AB  FFE6   	movff	btemp,postinc1
  5800  01012C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5801  010132  0E04               	movlw	4
  5802  010134  6EE6               	movwf	postinc1,c
  5803  010136  ECE5  F0FE         	call	_sprintf	;wreg free
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;main.c: 258:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5807  01013A  0EB9               	movlw	low (STR_20+2)
  5808  01013C  6EE6               	movwf	postinc1,c
  5809  01013E  0EFB               	movlw	high (STR_20+2)
  5810  010140  6EE6               	movwf	postinc1,c
  5811  010142  0E00               	movlw	0
  5812  010144  6EE6               	movwf	postinc1,c
  5813  010146  0E03               	movlw	3
  5814  010148  6EE6               	movwf	postinc1,c
  5815  01014A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5816  01014E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5817  010154  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5818  01015A  0E04               	movlw	4
  5819  01015C  6EE6               	movwf	postinc1,c
  5820  01015E  ECE5  F0FE         	call	_sprintf	;wreg free
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 1), "                    ");
  5824  010162  0EB9               	movlw	low (STR_20+2)
  5825  010164  6EE6               	movwf	postinc1,c
  5826  010166  0EFB               	movlw	high (STR_20+2)
  5827  010168  6EE6               	movwf	postinc1,c
  5828  01016A  0E01               	movlw	1
  5829  01016C  6EE6               	movwf	postinc1,c
  5830  01016E  0E00               	movlw	0
  5831  010170  6EE6               	movwf	postinc1,c
  5832  010172  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5833  010176  0060  F0AB  FFE6   	movff	btemp,postinc1
  5834  01017C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5835  010182  0E04               	movlw	4
  5836  010184  6EE6               	movwf	postinc1,c
  5837  010186  ECE5  F0FE         	call	_sprintf	;wreg free
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 1), "                    ");
  5841  01018A  0EB9               	movlw	low (STR_20+2)
  5842  01018C  6EE6               	movwf	postinc1,c
  5843  01018E  0EFB               	movlw	high (STR_20+2)
  5844  010190  6EE6               	movwf	postinc1,c
  5845  010192  0E01               	movlw	1
  5846  010194  6EE6               	movwf	postinc1,c
  5847  010196  0E01               	movlw	1
  5848  010198  6EE6               	movwf	postinc1,c
  5849  01019A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5850  01019E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5851  0101A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5852  0101AA  0E04               	movlw	4
  5853  0101AC  6EE6               	movwf	postinc1,c
  5854  0101AE  ECE5  F0FE         	call	_sprintf	;wreg free
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;main.c: 261:    sprintf(get_vterm_ptr(2, 1), "                    ");
  5858  0101B2  0EB9               	movlw	low (STR_20+2)
  5859  0101B4  6EE6               	movwf	postinc1,c
  5860  0101B6  0EFB               	movlw	high (STR_20+2)
  5861  0101B8  6EE6               	movwf	postinc1,c
  5862  0101BA  0E01               	movlw	1
  5863  0101BC  6EE6               	movwf	postinc1,c
  5864  0101BE  0E02               	movlw	2
  5865  0101C0  6EE6               	movwf	postinc1,c
  5866  0101C2  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5867  0101C6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5868  0101CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5869  0101D2  0E04               	movlw	4
  5870  0101D4  6EE6               	movwf	postinc1,c
  5871  0101D6  ECE5  F0FE         	call	_sprintf	;wreg free
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;main.c: 262:    sprintf(get_vterm_ptr(3, 1), "                    ");
  5875  0101DA  0EB9               	movlw	low (STR_20+2)
  5876  0101DC  6EE6               	movwf	postinc1,c
  5877  0101DE  0EFB               	movlw	high (STR_20+2)
  5878  0101E0  6EE6               	movwf	postinc1,c
  5879  0101E2  0E01               	movlw	1
  5880  0101E4  6EE6               	movwf	postinc1,c
  5881  0101E6  0E03               	movlw	3
  5882  0101E8  6EE6               	movwf	postinc1,c
  5883  0101EA  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5884  0101EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5885  0101F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5886  0101FA  0E04               	movlw	4
  5887  0101FC  6EE6               	movwf	postinc1,c
  5888  0101FE  ECE5  F0FE         	call	_sprintf	;wreg free
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;main.c: 263:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5892  010202  0EB9               	movlw	low (STR_20+2)
  5893  010204  6EE6               	movwf	postinc1,c
  5894  010206  0EFB               	movlw	high (STR_20+2)
  5895  010208  6EE6               	movwf	postinc1,c
  5896  01020A  0E02               	movlw	2
  5897  01020C  6EE6               	movwf	postinc1,c
  5898  01020E  0E00               	movlw	0
  5899  010210  6EE6               	movwf	postinc1,c
  5900  010212  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5901  010216  0060  F0AB  FFE6   	movff	btemp,postinc1
  5902  01021C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5903  010222  0E04               	movlw	4
  5904  010224  6EE6               	movwf	postinc1,c
  5905  010226  ECE5  F0FE         	call	_sprintf	;wreg free
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;main.c: 264:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5909  01022A  0EB9               	movlw	low (STR_20+2)
  5910  01022C  6EE6               	movwf	postinc1,c
  5911  01022E  0EFB               	movlw	high (STR_20+2)
  5912  010230  6EE6               	movwf	postinc1,c
  5913  010232  0E02               	movlw	2
  5914  010234  6EE6               	movwf	postinc1,c
  5915  010236  0E01               	movlw	1
  5916  010238  6EE6               	movwf	postinc1,c
  5917  01023A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5918  01023E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5919  010244  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5920  01024A  0E04               	movlw	4
  5921  01024C  6EE6               	movwf	postinc1,c
  5922  01024E  ECE5  F0FE         	call	_sprintf	;wreg free
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;main.c: 265:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5926  010252  0EB9               	movlw	low (STR_20+2)
  5927  010254  6EE6               	movwf	postinc1,c
  5928  010256  0EFB               	movlw	high (STR_20+2)
  5929  010258  6EE6               	movwf	postinc1,c
  5930  01025A  0E02               	movlw	2
  5931  01025C  6EE6               	movwf	postinc1,c
  5932  01025E  0E02               	movlw	2
  5933  010260  6EE6               	movwf	postinc1,c
  5934  010262  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5935  010266  0060  F0AB  FFE6   	movff	btemp,postinc1
  5936  01026C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5937  010272  0E04               	movlw	4
  5938  010274  6EE6               	movwf	postinc1,c
  5939  010276  ECE5  F0FE         	call	_sprintf	;wreg free
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;main.c: 266:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5943  01027A  0EB9               	movlw	low (STR_20+2)
  5944  01027C  6EE6               	movwf	postinc1,c
  5945  01027E  0EFB               	movlw	high (STR_20+2)
  5946  010280  6EE6               	movwf	postinc1,c
  5947  010282  0E02               	movlw	2
  5948  010284  6EE6               	movwf	postinc1,c
  5949  010286  0E03               	movlw	3
  5950  010288  6EE6               	movwf	postinc1,c
  5951  01028A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  5952  01028E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5953  010294  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5954  01029A  0E04               	movlw	4
  5955  01029C  6EE6               	movwf	postinc1,c
  5956  01029E  ECE5  F0FE         	call	_sprintf	;wreg free
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;main.c: 267:    update_lcd(0);
  5960  0102A2  0E00               	movlw	0
  5961  0102A4  6EE6               	movwf	postinc1,c
  5962  0102A6  EC97  F0F7         	call	_update_lcd	;wreg free
  5963                           
  5964                           ;main.c: 268:    WaitMs(1000);
  5965  0102AA  0EE8               	movlw	232
  5966  0102AC  6EE6               	movwf	postinc1,c
  5967  0102AE  0E03               	movlw	3
  5968  0102B0  6EE6               	movwf	postinc1,c
  5969  0102B2  EC2E  F012         	call	_WaitMs	;wreg free
  5970                           
  5971                           ;main.c: 269:    StartTimer(TMR_DISPLAY, 250);
  5972  0102B6  0EFA               	movlw	250
  5973  0102B8  6EE6               	movwf	postinc1,c
  5974  0102BA  0E00               	movlw	0
  5975  0102BC  6EE6               	movwf	postinc1,c
  5976  0102BE  0E0A               	movlw	10
  5977  0102C0  6EE6               	movwf	postinc1,c
  5978  0102C2  EC20  F011         	call	_StartTimer	;wreg free
  5979                           
  5980                           ;main.c: 270:    StartTimer(TMR_ADC, 200);
  5981  0102C6  0EC8               	movlw	200
  5982  0102C8  6EE6               	movwf	postinc1,c
  5983  0102CA  0E00               	movlw	0
  5984  0102CC  6EE6               	movwf	postinc1,c
  5985  0102CE  0E01               	movlw	1
  5986  0102D0  6EE6               	movwf	postinc1,c
  5987  0102D2  EC20  F011         	call	_StartTimer	;wreg free
  5988                           
  5989                           ;main.c: 271:    StartTimer(TMR_INFO, 3000);
  5990  0102D6  0EB8               	movlw	184
  5991  0102D8  6EE6               	movwf	postinc1,c
  5992  0102DA  0E0B               	movlw	11
  5993  0102DC  6EE6               	movwf	postinc1,c
  5994  0102DE  0E07               	movlw	7
  5995  0102E0  6EE6               	movwf	postinc1,c
  5996  0102E2  EC20  F011         	call	_StartTimer	;wreg free
  5997                           
  5998                           ;main.c: 272:    StartTimer(TMR_FLIPPER, 1500);
  5999  0102E6  0EDC               	movlw	220
  6000  0102E8  6EE6               	movwf	postinc1,c
  6001  0102EA  0E05               	movlw	5
  6002  0102EC  6EE6               	movwf	postinc1,c
  6003  0102EE  0E0B               	movlw	11
  6004  0102F0  6EE6               	movwf	postinc1,c
  6005  0102F2  EC20  F011         	call	_StartTimer	;wreg free
  6006                           
  6007                           ;main.c: 273:    StartTimer(TMR_HELPDIS, 3000);
  6008  0102F6  0EB8               	movlw	184
  6009  0102F8  6EE6               	movwf	postinc1,c
  6010  0102FA  0E0B               	movlw	11
  6011  0102FC  6EE6               	movwf	postinc1,c
  6012  0102FE  0E09               	movlw	9
  6013  010300  6EE6               	movwf	postinc1,c
  6014  010302  EC20  F011         	call	_StartTimer	;wreg free
  6015                           
  6016                           ;main.c: 275:    start_adc_scan();
  6017  010306  EC5F  F00D         	call	_start_adc_scan	;wreg free
  6018                           
  6019                           ;main.c: 276:    start_switch_handler();
  6020  01030A  EC54  F015         	call	_start_switch_handler	;wreg free
  6021                           
  6022                           ; BSR set to: 57
  6023                           ;main.c: 277:    WaitMs(1000);
  6024  01030E  0EE8               	movlw	232
  6025  010310  6EE6               	movwf	postinc1,c
  6026  010312  0E03               	movlw	3
  6027  010314  6EE6               	movwf	postinc1,c
  6028  010316  EC2E  F012         	call	_WaitMs	;wreg free
  6029                           
  6030                           ;main.c: 282:    if (read_cal_data()) {
  6031  01031A  EC9D  F0ED         	call	_read_cal_data	;wreg free
  6032  01031E  502A               	movf	btemp^0,w,c
  6033  010320  B4D8               	btfsc	status,2,c
  6034  010322  D07C               	goto	l17316
  6035                           
  6036                           ;main.c: 283:     update_cal_data();
  6037  010324  ECD9  F00E         	call	_update_cal_data	;wreg free
  6038                           
  6039                           ; BSR set to: 1
  6040                           ;main.c: 284:     if (update_hist_data(1, &C.hist[0]) && (C.hist[0].pclock > time(((void
      +                          *)0))))
  6041  010328  0E3A               	movlw	low (_C+185)
  6042  01032A  6EE6               	movwf	postinc1,c
  6043  01032C  0E0C               	movlw	high (_C+185)
  6044  01032E  6EE6               	movwf	postinc1,c
  6045  010330  0E01               	movlw	1
  6046  010332  6EE6               	movwf	postinc1,c
  6047  010334  EC03  F00B         	call	_update_hist_data	;wreg free
  6048  010338  502A               	movf	btemp^0,w,c
  6049  01033A  B4D8               	btfsc	status,2,c
  6050  01033C  D05A               	goto	l17314
  6051  01033E  0E00               	movlw	0
  6052  010340  6EE6               	movwf	postinc1,c
  6053  010342  0E00               	movlw	0
  6054  010344  6EE6               	movwf	postinc1,c
  6055  010346  EC23  F00E         	call	_time	;wreg free
  6056  01034A  52E5               	movf	postdec1,f,c
  6057  01034C  006F FF9C  F041    	movff	indf1,btemp+23
  6058  010352  52E5               	movf	postdec1,f,c
  6059  010354  006F FF9C  F040    	movff	indf1,btemp+22
  6060  01035A  52E5               	movf	postdec1,f,c
  6061  01035C  006F FF9C  F03F    	movff	indf1,btemp+21
  6062  010362  52E5               	movf	postdec1,f,c
  6063  010364  006F FF9C  F03E    	movff	indf1,btemp+20
  6064  01036A  52E5               	movf	postdec1,f,c
  6065  01036C  006F FF9C  F03D    	movff	indf1,btemp+19
  6066  010372  52E5               	movf	postdec1,f,c
  6067  010374  006F FF9C  F03C    	movff	indf1,btemp+18
  6068  01037A  52E5               	movf	postdec1,f,c
  6069  01037C  006F FF9C  F03B    	movff	indf1,btemp+17
  6070  010382  52E5               	movf	postdec1,f,c
  6071  010384  006F FF9C  F03A    	movff	indf1,btemp+16
  6072  01038A  EE23  F04A         	lfsr	2,_C+201	;volatile
  6073  01038E  50DE               	movf	postinc2,w,c
  6074  010390  5C3A               	subwf	(btemp+16)^0,w,c
  6075  010392  50DE               	movf	postinc2,w,c
  6076  010394  583B               	subwfb	(btemp+17)^0,w,c
  6077  010396  50DE               	movf	postinc2,w,c
  6078  010398  583C               	subwfb	(btemp+18)^0,w,c
  6079  01039A  50DE               	movf	postinc2,w,c
  6080  01039C  583D               	subwfb	(btemp+19)^0,w,c
  6081  01039E  50DE               	movf	postinc2,w,c
  6082  0103A0  583E               	subwfb	(btemp+20)^0,w,c
  6083  0103A2  50DE               	movf	postinc2,w,c
  6084  0103A4  583F               	subwfb	(btemp+21)^0,w,c
  6085  0103A6  50DE               	movf	postinc2,w,c
  6086  0103A8  5840               	subwfb	(btemp+22)^0,w,c
  6087  0103AA  5041               	movf	(btemp+23)^0,w,c
  6088  0103AC  0A80               	xorlw	128
  6089  0103AE  6E2A               	movwf	btemp^0,c
  6090  0103B0  50DE               	movf	postinc2,w,c
  6091  0103B2  0A80               	xorlw	128
  6092  0103B4  582A               	subwfb	btemp^0,w,c
  6093  0103B6  B0D8               	btfsc	status,0,c
  6094  0103B8  D01C               	goto	l17314
  6095                           
  6096                           ; BSR set to: 57
  6097                           ;main.c: 285:      set_time(C.hist[0].pclock);
  6098  0103BA  EE23  F04A         	lfsr	2,_C+201	;volatile
  6099  0103BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6100  0103C4  006F FF7B FFE6     	movff	postinc2,postinc1
  6101  0103CA  006F FF7B FFE6     	movff	postinc2,postinc1
  6102  0103D0  006F FF7B FFE6     	movff	postinc2,postinc1
  6103  0103D6  006F FF7B FFE6     	movff	postinc2,postinc1
  6104  0103DC  006F FF7B FFE6     	movff	postinc2,postinc1
  6105  0103E2  006F FF7B FFE6     	movff	postinc2,postinc1
  6106  0103E8  006F FF7B FFE6     	movff	postinc2,postinc1
  6107  0103EE  ECE5  F0FF         	call	_set_time	;wreg free
  6108  0103F2                     l17314:
  6109                           
  6110                           ;main.c: 287:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  6111  0103F2  0E32               	movlw	low STR_14
  6112  0103F4  6EE6               	movwf	postinc1,c
  6113  0103F6  0EFF               	movlw	high STR_14
  6114  0103F8  6EE6               	movwf	postinc1,c
  6115  0103FA  0E00               	movlw	0
  6116  0103FC  6EE6               	movwf	postinc1,c
  6117  0103FE  0E02               	movlw	2
  6118  010400  6EE6               	movwf	postinc1,c
  6119  010402  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6120  010406  0060  F0AB  FFE6   	movff	btemp,postinc1
  6121  01040C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6122  010412  0E04               	movlw	4
  6123  010414  6EE6               	movwf	postinc1,c
  6124  010416  ECE5  F0FE         	call	_sprintf	;wreg free
  6125                           
  6126                           ;main.c: 288:    } else {
  6127  01041A  D014               	goto	l1462
  6128  01041C                     l17316:
  6129                           
  6130                           ;main.c: 289:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  6131  01041C  0E5C               	movlw	low STR_15
  6132  01041E  6EE6               	movwf	postinc1,c
  6133  010420  0EFF               	movlw	high STR_15
  6134  010422  6EE6               	movwf	postinc1,c
  6135  010424  0E00               	movlw	0
  6136  010426  6EE6               	movwf	postinc1,c
  6137  010428  0E02               	movlw	2
  6138  01042A  6EE6               	movwf	postinc1,c
  6139  01042C  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6140  010430  0060  F0AB  FFE6   	movff	btemp,postinc1
  6141  010436  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6142  01043C  0E04               	movlw	4
  6143  01043E  6EE6               	movwf	postinc1,c
  6144  010440  ECE5  F0FE         	call	_sprintf	;wreg free
  6145  010444                     l1462:
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;main.c: 291:    update_lcd(0);
  6149  010444  0E00               	movlw	0
  6150  010446  6EE6               	movwf	postinc1,c
  6151  010448  EC97  F0F7         	call	_update_lcd	;wreg free
  6152                           
  6153                           ;main.c: 292:    WaitMs(2000);
  6154  01044C  0ED0               	movlw	208
  6155  01044E  6EE6               	movwf	postinc1,c
  6156  010450  0E07               	movlw	7
  6157  010452  6EE6               	movwf	postinc1,c
  6158  010454  EC2E  F012         	call	_WaitMs	;wreg free
  6159                           
  6160                           ;main.c: 294:    i_ror = 1;
  6161                           ;stkvar	_i_ror @ sp[(-19)+18]
  6162  010458  0EFF               	movlw	-1
  6163  01045A  6AE3               	clrf	plusw1,c
  6164  01045C  2AE3               	incf	plusw1,f,c
  6165  01045E                     l17322:
  6166                           
  6167                           ;main.c: 296:     calc_ror_data();
  6168  01045E  EC8D  F0F2         	call	_calc_ror_data	;wreg free
  6169                           
  6170                           ;main.c: 297:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  6171  010462  0E00               	movlw	0
  6172  010464  6EE6               	movwf	postinc1,c
  6173  010466  0E04               	movlw	4
  6174  010468  6EE6               	movwf	postinc1,c
  6175  01046A  ECAC  F0C6         	call	_conv_raw_result	;wreg free
  6176  01046E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6177  010474  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6178  01047A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6179  010480  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6180  010486  0E69               	movlw	low STR_16
  6181  010488  6EE6               	movwf	postinc1,c
  6182  01048A  0EFD               	movlw	high STR_16
  6183  01048C  6EE6               	movwf	postinc1,c
  6184  01048E  0E00               	movlw	0
  6185  010490  6EE6               	movwf	postinc1,c
  6186  010492  0E01               	movlw	1
  6187  010494  6EE6               	movwf	postinc1,c
  6188  010496  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6189  01049A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6190  0104A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6191  0104A6  0E08               	movlw	8
  6192  0104A8  6EE6               	movwf	postinc1,c
  6193  0104AA  ECE5  F0FE         	call	_sprintf	;wreg free
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;main.c: 298:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  6197  0104AE  EE22  F3ED         	lfsr	2,_C+108	;volatile
  6198  0104B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6199  0104B8  006F FF7B FFE6     	movff	postinc2,postinc1
  6200  0104BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6201  0104C4  006F FF7B FFE6     	movff	postinc2,postinc1
  6202                           
  6203                           ;stkvar	_i_ror @ sp[(-23)+18]
  6204  0104CA  0EFB               	movlw	-5
  6205  0104CC  50E3               	movf	plusw1,w,c
  6206  0104CE  6EE6               	movwf	postinc1,c
  6207  0104D0  0E00               	movlw	0
  6208  0104D2  6EE6               	movwf	postinc1,c
  6209  0104D4  0E00               	movlw	0
  6210  0104D6  6EE6               	movwf	postinc1,c
  6211  0104D8  0E05               	movlw	5
  6212  0104DA  6EE6               	movwf	postinc1,c
  6213  0104DC  EC5B  F000         	call	_spinners	;wreg free
  6214  0104E0  502A               	movf	btemp^0,w,c
  6215  0104E2  6EE6               	movwf	postinc1,c
  6216  0104E4  0E00               	movlw	0
  6217  0104E6  6EE6               	movwf	postinc1,c
  6218  0104E8  0E25               	movlw	low STR_17
  6219  0104EA  6EE6               	movwf	postinc1,c
  6220  0104EC  0EFB               	movlw	high STR_17
  6221  0104EE  6EE6               	movwf	postinc1,c
  6222  0104F0  0E00               	movlw	0
  6223  0104F2  6EE6               	movwf	postinc1,c
  6224  0104F4  0E02               	movlw	2
  6225  0104F6  6EE6               	movwf	postinc1,c
  6226  0104F8  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6227  0104FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6228  010502  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6229  010508  0E0C               	movlw	12
  6230  01050A  6EE6               	movwf	postinc1,c
  6231  01050C  ECE5  F0FE         	call	_sprintf	;wreg free
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;main.c: 299:     update_lcd(0);
  6235  010510  0E00               	movlw	0
  6236  010512  6EE6               	movwf	postinc1,c
  6237  010514  EC97  F0F7         	call	_update_lcd	;wreg free
  6238                           
  6239                           ;main.c: 300:     clear_adc_scan();
  6240  010518  ECB5  F016         	call	_clear_adc_scan	;wreg free
  6241                           
  6242                           ; BSR set to: 1
  6243                           ;main.c: 301:     start_adc_scan();
  6244  01051C  EC5F  F00D         	call	_start_adc_scan	;wreg free
  6245                           
  6246                           ;main.c: 302:     WaitMs(2000);
  6247  010520  0ED0               	movlw	208
  6248  010522  6EE6               	movwf	postinc1,c
  6249  010524  0E07               	movlw	7
  6250  010526  6EE6               	movwf	postinc1,c
  6251  010528  EC2E  F012         	call	_WaitMs	;wreg free
  6252                           
  6253                           ;main.c: 305:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  6254                           ;stkvar	_i_ror @ sp[(-19)+18]
  6255  01052C  0EFF               	movlw	-1
  6256  01052E  006F FF8C  F035    	movff	plusw1,btemp+11
  6257  010534  2A35               	incf	(btemp+11)^0,f,c
  6258  010536  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6259  01053C  0635               	decf	(btemp+11)^0,f,c
  6260  01053E  0E1E               	movlw	30
  6261  010540  6035               	cpfslt	(btemp+11)^0,c
  6262  010542  D01A               	goto	u16890
  6263  010544  EE22  F3ED         	lfsr	2,_C+108	;volatile
  6264  010548  006F FF7B FFE6     	movff	postinc2,postinc1
  6265  01054E  006F FF7B FFE6     	movff	postinc2,postinc1
  6266  010554  006F FF7B FFE6     	movff	postinc2,postinc1
  6267  01055A  006F FF7B FFE6     	movff	postinc2,postinc1
  6268  010560  0E42               	movlw	66
  6269  010562  6EE6               	movwf	postinc1,c
  6270  010564  0E60               	movlw	96
  6271  010566  6EE6               	movwf	postinc1,c
  6272  010568  0E65               	movlw	101
  6273  01056A  6EE6               	movwf	postinc1,c
  6274  01056C  0E3C               	movlw	60
  6275  01056E  6EE6               	movwf	postinc1,c
  6276  010570  EC35  F0F6         	call	___flge	;wreg free
  6277  010574  A02A               	btfss	btemp& (0+255),0,c
  6278  010576  D773               	goto	l17322
  6279  010578                     u16890:
  6280                           
  6281                           ;main.c: 307:    static_soc();
  6282  010578  EC52  F00E         	call	_static_soc	;wreg free
  6283                           
  6284                           ;main.c: 308:    init_bsoc();
  6285  01057C  ECF7  F0E4         	call	_init_bsoc	;wreg free
  6286                           
  6287                           ;main.c: 309:    set_load_relay_one(0);
  6288  010580  0E00               	movlw	0
  6289  010582  6EE6               	movwf	postinc1,c
  6290  010584  EC33  F016         	call	_set_load_relay_one	;wreg free
  6291                           
  6292                           ;main.c: 310:    set_load_relay_two(0);
  6293  010588  0E00               	movlw	0
  6294  01058A  6EE6               	movwf	postinc1,c
  6295  01058C  EC2B  F016         	call	_set_load_relay_two	;wreg free
  6296                           
  6297                           ;main.c: 311:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  6298  010590  EE23  F037         	lfsr	2,_C+182	;volatile
  6299  010594  006F FF78  F034    	movff	postinc2,btemp+10
  6300  01059A  006F FF74  F035    	movff	postdec2,btemp+11
  6301  0105A0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6302  0105A6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6303  0105AC  0EE5               	movlw	low STR_18
  6304  0105AE  6EE6               	movwf	postinc1,c
  6305  0105B0  0EFB               	movlw	high STR_18
  6306  0105B2  6EE6               	movwf	postinc1,c
  6307  0105B4  0E00               	movlw	0
  6308  0105B6  6EE6               	movwf	postinc1,c
  6309  0105B8  0E00               	movlw	0
  6310  0105BA  6EE6               	movwf	postinc1,c
  6311  0105BC  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6312  0105C0  0060  F0AB  FFE6   	movff	btemp,postinc1
  6313  0105C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6314  0105CC  0E06               	movlw	6
  6315  0105CE  6EE6               	movwf	postinc1,c
  6316  0105D0  ECE5  F0FE         	call	_sprintf	;wreg free
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;main.c: 312:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  6320  0105D4  EE23  F011         	lfsr	2,_C+144	;volatile
  6321  0105D8  006F FF7B FFE6     	movff	postinc2,postinc1
  6322  0105DE  006F FF7B FFE6     	movff	postinc2,postinc1
  6323  0105E4  006F FF7B FFE6     	movff	postinc2,postinc1
  6324  0105EA  006F FF7B FFE6     	movff	postinc2,postinc1
  6325  0105F0  0ECB               	movlw	low STR_19
  6326  0105F2  6EE6               	movwf	postinc1,c
  6327  0105F4  0EFC               	movlw	high STR_19
  6328  0105F6  6EE6               	movwf	postinc1,c
  6329  0105F8  0E00               	movlw	0
  6330  0105FA  6EE6               	movwf	postinc1,c
  6331  0105FC  0E01               	movlw	1
  6332  0105FE  6EE6               	movwf	postinc1,c
  6333  010600  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6334  010604  0060  F0AB  FFE6   	movff	btemp,postinc1
  6335  01060A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6336  010610  0E08               	movlw	8
  6337  010612  6EE6               	movwf	postinc1,c
  6338  010614  ECE5  F0FE         	call	_sprintf	;wreg free
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;main.c: 313:    sprintf(get_vterm_ptr(2, 0), "                      ");
  6342  010618  0EB7               	movlw	low STR_20
  6343  01061A  6EE6               	movwf	postinc1,c
  6344  01061C  0EFB               	movlw	high STR_20
  6345  01061E  6EE6               	movwf	postinc1,c
  6346  010620  0E00               	movlw	0
  6347  010622  6EE6               	movwf	postinc1,c
  6348  010624  0E02               	movlw	2
  6349  010626  6EE6               	movwf	postinc1,c
  6350  010628  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6351  01062C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6352  010632  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6353  010638  0E04               	movlw	4
  6354  01063A  6EE6               	movwf	postinc1,c
  6355  01063C  ECE5  F0FE         	call	_sprintf	;wreg free
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;main.c: 314:    update_lcd(0);
  6359  010640  0E00               	movlw	0
  6360  010642  6EE6               	movwf	postinc1,c
  6361  010644  EC97  F0F7         	call	_update_lcd	;wreg free
  6362                           
  6363                           ;main.c: 315:    WaitMs(2000);
  6364  010648  0ED0               	movlw	208
  6365  01064A  6EE6               	movwf	postinc1,c
  6366  01064C  0E07               	movlw	7
  6367  01064E  6EE6               	movwf	postinc1,c
  6368  010650  EC2E  F012         	call	_WaitMs	;wreg free
  6369                           
  6370                           ;main.c: 316:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  6371  010654  0E95               	movlw	low STR_21
  6372  010656  6EE6               	movwf	postinc1,c
  6373  010658  0EFD               	movlw	high STR_21
  6374  01065A  6EE6               	movwf	postinc1,c
  6375  01065C  0E00               	movlw	0
  6376  01065E  6EE6               	movwf	postinc1,c
  6377  010660  0E00               	movlw	0
  6378  010662  6EE6               	movwf	postinc1,c
  6379  010664  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6380  010668  0060  F0AB  FFE6   	movff	btemp,postinc1
  6381  01066E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6382  010674  0E04               	movlw	4
  6383  010676  6EE6               	movwf	postinc1,c
  6384  010678  ECE5  F0FE         	call	_sprintf	;wreg free
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;main.c: 317:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  6388  01067C  0EAB               	movlw	low STR_22
  6389  01067E  6EE6               	movwf	postinc1,c
  6390  010680  0EFD               	movlw	high STR_22
  6391  010682  6EE6               	movwf	postinc1,c
  6392  010684  0E00               	movlw	0
  6393  010686  6EE6               	movwf	postinc1,c
  6394  010688  0E01               	movlw	1
  6395  01068A  6EE6               	movwf	postinc1,c
  6396  01068C  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6397  010690  0060  F0AB  FFE6   	movff	btemp,postinc1
  6398  010696  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6399  01069C  0E04               	movlw	4
  6400  01069E  6EE6               	movwf	postinc1,c
  6401  0106A0  ECE5  F0FE         	call	_sprintf	;wreg free
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;main.c: 318:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  6405  0106A4  0E5B               	movlw	low STR_23
  6406  0106A6  6EE6               	movwf	postinc1,c
  6407  0106A8  0EFE               	movlw	high STR_23
  6408  0106AA  6EE6               	movwf	postinc1,c
  6409  0106AC  0E00               	movlw	0
  6410  0106AE  6EE6               	movwf	postinc1,c
  6411  0106B0  0E02               	movlw	2
  6412  0106B2  6EE6               	movwf	postinc1,c
  6413  0106B4  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6414  0106B8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6415  0106BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6416  0106C4  0E04               	movlw	4
  6417  0106C6  6EE6               	movwf	postinc1,c
  6418  0106C8  ECE5  F0FE         	call	_sprintf	;wreg free
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;main.c: 319:    update_lcd(0);
  6422  0106CC  0E00               	movlw	0
  6423  0106CE  6EE6               	movwf	postinc1,c
  6424  0106D0  EC97  F0F7         	call	_update_lcd	;wreg free
  6425                           
  6426                           ;main.c: 320:    uint16_t i_esr = 1;
  6427  0106D4  0E01               	movlw	1
  6428  0106D6  6E34               	movwf	(btemp+10)^0,c
  6429  0106D8  0E00               	movlw	0
  6430  0106DA  6E35               	movwf	(btemp+11)^0,c
  6431                           
  6432                           ;stkvar	_i_esr @ sp[(-19)+10]
  6433  0106DC  0EF7               	movlw	-9
  6434  0106DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6435  0106E4  0EF8               	movlw	-8
  6436  0106E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6437                           
  6438                           ;main.c: 322:    float esr_temp;;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  6439  0106EC  D06D               	goto	l17382
  6440  0106EE                     l17370:
  6441                           
  6442                           ;main.c: 324:     WaitMs(110);
  6443  0106EE  0E6E               	movlw	110
  6444  0106F0  6EE6               	movwf	postinc1,c
  6445  0106F2  0E00               	movlw	0
  6446  0106F4  6EE6               	movwf	postinc1,c
  6447  0106F6  EC2E  F012         	call	_WaitMs	;wreg free
  6448                           
  6449                           ;main.c: 325:     shape = (uint8_t) fabsf(esr_temp);
  6450                           ;stkvar	_esr_temp @ sp[(-19)+6]
  6451  0106FA  0EF3               	movlw	-13
  6452  0106FC  006F FF8F FFE6     	movff	plusw1,postinc1
  6453  010702  006F FF8F FFE6     	movff	plusw1,postinc1
  6454  010708  006F FF8F FFE6     	movff	plusw1,postinc1
  6455  01070E  006F FF8F FFE6     	movff	plusw1,postinc1
  6456  010714  ECBC  F005         	call	_fabsf	;wreg free
  6457  010718  0060  F0AB  FFE6   	movff	btemp,postinc1
  6458  01071E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6459  010724  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6460  01072A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6461  010730  ECC9  F0F4         	call	___fltol	;wreg free
  6462  010734  0060  F0A8  F035   	movff	btemp,btemp+11
  6463                           
  6464                           ;stkvar	_shape @ sp[(-19)+12]
  6465  01073A  0EF9               	movlw	-7
  6466  01073C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6467                           
  6468                           ;main.c: 326:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  6469  010742  0E00               	movlw	0
  6470  010744  6EE6               	movwf	postinc1,c
  6471                           
  6472                           ;stkvar	_shape @ sp[(-20)+12]
  6473  010746  0EF8               	movlw	-8
  6474  010748  50E3               	movf	plusw1,w,c
  6475  01074A  6EE6               	movwf	postinc1,c
  6476  01074C  EC5B  F000         	call	_spinners	;wreg free
  6477  010750  502A               	movf	btemp^0,w,c
  6478  010752  6EE6               	movwf	postinc1,c
  6479  010754  0E00               	movlw	0
  6480  010756  6EE6               	movwf	postinc1,c
  6481  010758  0E00               	movlw	0
  6482  01075A  6EE6               	movwf	postinc1,c
  6483  01075C  0E00               	movlw	0
  6484  01075E  6EE6               	movwf	postinc1,c
  6485  010760  EC5B  F000         	call	_spinners	;wreg free
  6486  010764  502A               	movf	btemp^0,w,c
  6487  010766  6EE6               	movwf	postinc1,c
  6488  010768  0E00               	movlw	0
  6489  01076A  6EE6               	movwf	postinc1,c
  6490  01076C  0E19               	movlw	low STR_24
  6491  01076E  6EE6               	movwf	postinc1,c
  6492  010770  0EFE               	movlw	high STR_24
  6493  010772  6EE6               	movwf	postinc1,c
  6494  010774  0E00               	movlw	0
  6495  010776  6EE6               	movwf	postinc1,c
  6496  010778  0E02               	movlw	2
  6497  01077A  6EE6               	movwf	postinc1,c
  6498  01077C  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6499  010780  0060  F0AB  FFE6   	movff	btemp,postinc1
  6500  010786  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6501  01078C  0E08               	movlw	8
  6502  01078E  6EE6               	movwf	postinc1,c
  6503  010790  ECE5  F0FE         	call	_sprintf	;wreg free
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;main.c: 327:     update_lcd(0);
  6507  010794  0E00               	movlw	0
  6508  010796  6EE6               	movwf	postinc1,c
  6509  010798  EC97  F0F7         	call	_update_lcd	;wreg free
  6510                           
  6511                           ;main.c: 329:     if (i_esr++ > 512)
  6512                           ;stkvar	_i_esr @ sp[(-19)+10]
  6513  01079C  50E1               	movf	fsr1l,w,c
  6514  01079E  0FF7               	addlw	-9
  6515  0107A0  6ED9               	movwf	fsr2l,c
  6516  0107A2  50E2               	movf	fsr1h,w,c
  6517  0107A4  6EDA               	movwf	fsr2h,c
  6518  0107A6  0EFF               	movlw	255
  6519  0107A8  22DA               	addwfc	fsr2h,f,c
  6520  0107AA  006F FF7C  F034    	movff	indf2,btemp+10
  6521  0107B0  0E01               	movlw	1
  6522  0107B2  26DE               	addwf	postinc2,f,c
  6523  0107B4  006F FF7C  F035    	movff	indf2,btemp+11
  6524  0107BA  0E00               	movlw	0
  6525  0107BC  22DD               	addwfc	postdec2,f,c
  6526  0107BE  0434               	decf	(btemp+10)^0,w,c
  6527  0107C0  0E02               	movlw	2
  6528  0107C2  5835               	subwfb	(btemp+11)^0,w,c
  6529  0107C4  B0D8               	btfsc	status,0,c
  6530  0107C6  D017               	goto	u16910
  6531  0107C8                     l17382:
  6532                           
  6533                           ;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0) {
  6534  0107C8  0E00               	movlw	0
  6535  0107CA  6EE6               	movwf	postinc1,c
  6536  0107CC  EC32  F0DD         	call	_esr_check	;wreg free
  6537                           
  6538                           ;stkvar	_esr_temp @ sp[(-19)+6]
  6539  0107D0  0EF3               	movlw	-13
  6540  0107D2  0060  F0AB  FFE3   	movff	btemp,plusw1
  6541  0107D8  0EF4               	movlw	-12
  6542  0107DA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  6543  0107E0  0EF5               	movlw	-11
  6544  0107E2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  6545  0107E8  0EF6               	movlw	-10
  6546  0107EA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  6547  0107F0  0EF6               	movlw	-10
  6548  0107F2  BEE3               	btfsc	plusw1,7,c
  6549  0107F4  D77C               	goto	l17370
  6550  0107F6                     u16910:
  6551                           
  6552                           ;main.c: 332:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  6553  0107F6  EE23  F009         	lfsr	2,_C+136	;volatile
  6554  0107FA  006F FF7B FFE6     	movff	postinc2,postinc1
  6555  010800  006F FF7B FFE6     	movff	postinc2,postinc1
  6556  010806  006F FF7B FFE6     	movff	postinc2,postinc1
  6557  01080C  006F FF7B FFE6     	movff	postinc2,postinc1
  6558  010812  0ECE               	movlw	low STR_25
  6559  010814  6EE6               	movwf	postinc1,c
  6560  010816  0EFB               	movlw	high STR_25
  6561  010818  6EE6               	movwf	postinc1,c
  6562  01081A  0E00               	movlw	0
  6563  01081C  6EE6               	movwf	postinc1,c
  6564  01081E  0E00               	movlw	0
  6565  010820  6EE6               	movwf	postinc1,c
  6566  010822  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6567  010826  0060  F0AB  FFE6   	movff	btemp,postinc1
  6568  01082C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6569  010832  0E08               	movlw	8
  6570  010834  6EE6               	movwf	postinc1,c
  6571  010836  ECE5  F0FE         	call	_sprintf	;wreg free
  6572                           
  6573                           ;main.c: 333:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  6574  01083A  EE23  F09B         	lfsr	2,_C+282	;volatile
  6575  01083E  006F FF7B FFE6     	movff	postinc2,postinc1
  6576  010844  006F FF7B FFE6     	movff	postinc2,postinc1
  6577  01084A  006F FF7B FFE6     	movff	postinc2,postinc1
  6578  010850  006F FF7B FFE6     	movff	postinc2,postinc1
  6579  010856  EE23  F0A7         	lfsr	2,_C+294	;volatile
  6580  01085A  006F FF7B FFE6     	movff	postinc2,postinc1
  6581  010860  006F FF7B FFE6     	movff	postinc2,postinc1
  6582  010866  006F FF7B FFE6     	movff	postinc2,postinc1
  6583  01086C  006F FF7B FFE6     	movff	postinc2,postinc1
  6584  010872  0ED5               	movlw	low STR_26
  6585  010874  6EE6               	movwf	postinc1,c
  6586  010876  0EFA               	movlw	high STR_26
  6587  010878  6EE6               	movwf	postinc1,c
  6588  01087A  0E00               	movlw	0
  6589  01087C  6EE6               	movwf	postinc1,c
  6590  01087E  0E01               	movlw	1
  6591  010880  6EE6               	movwf	postinc1,c
  6592  010882  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6593  010886  0060  F0AB  FFE6   	movff	btemp,postinc1
  6594  01088C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6595  010892  0E0C               	movlw	12
  6596  010894  6EE6               	movwf	postinc1,c
  6597  010896  ECE5  F0FE         	call	_sprintf	;wreg free
  6598                           
  6599                           ;main.c: 334:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  6600  01089A  EE23  F09F         	lfsr	2,_C+286	;volatile
  6601  01089E  006F FF7B FFE6     	movff	postinc2,postinc1
  6602  0108A4  006F FF7B FFE6     	movff	postinc2,postinc1
  6603  0108AA  006F FF7B FFE6     	movff	postinc2,postinc1
  6604  0108B0  006F FF7B FFE6     	movff	postinc2,postinc1
  6605  0108B6  EE23  F0AB         	lfsr	2,_C+298	;volatile
  6606  0108BA  006F FF7B FFE6     	movff	postinc2,postinc1
  6607  0108C0  006F FF7B FFE6     	movff	postinc2,postinc1
  6608  0108C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6609  0108CC  006F FF7B FFE6     	movff	postinc2,postinc1
  6610  0108D2  0EF0               	movlw	low STR_27
  6611  0108D4  6EE6               	movwf	postinc1,c
  6612  0108D6  0EFA               	movlw	high STR_27
  6613  0108D8  6EE6               	movwf	postinc1,c
  6614  0108DA  0E00               	movlw	0
  6615  0108DC  6EE6               	movwf	postinc1,c
  6616  0108DE  0E02               	movlw	2
  6617  0108E0  6EE6               	movwf	postinc1,c
  6618  0108E2  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6619  0108E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6620  0108EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6621  0108F2  0E0C               	movlw	12
  6622  0108F4  6EE6               	movwf	postinc1,c
  6623  0108F6  ECE5  F0FE         	call	_sprintf	;wreg free
  6624                           
  6625                           ;main.c: 335:    update_lcd(0);
  6626  0108FA  0E00               	movlw	0
  6627  0108FC  6EE6               	movwf	postinc1,c
  6628  0108FE  EC97  F0F7         	call	_update_lcd	;wreg free
  6629                           
  6630                           ;main.c: 336:    WaitMs(4000);
  6631  010902  0EA0               	movlw	160
  6632  010904  6EE6               	movwf	postinc1,c
  6633  010906  0E0F               	movlw	15
  6634  010908  6EE6               	movwf	postinc1,c
  6635  01090A  EC2E  F012         	call	_WaitMs	;wreg free
  6636                           
  6637                           ;main.c: 337:    V.sensor_set = get_switch(SCALIB);
  6638  01090E  0E04               	movlw	4
  6639  010910  6EE6               	movwf	postinc1,c
  6640  010912  EC41  F013         	call	_get_switch	;wreg free
  6641  010916  502A               	movf	btemp^0,w,c
  6642  010918  B4D8               	btfsc	status,2,c
  6643  01091A  D002               	goto	u16920
  6644  01091C  0E01               	movlw	1
  6645  01091E  D001               	goto	u16930
  6646  010920                     u16920:
  6647  010920  0E00               	movlw	0
  6648  010922                     u16930:
  6649  010922  0102               	movlb	2	; () banked
  6650  010924  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  6651                           
  6652                           ; BSR set to: 2
  6653                           ;main.c: 338:    WaitMs(1000);
  6654  010926  0EE8               	movlw	232
  6655  010928  6EE6               	movwf	postinc1,c
  6656  01092A  0E03               	movlw	3
  6657  01092C  6EE6               	movwf	postinc1,c
  6658  01092E  EC2E  F012         	call	_WaitMs	;wreg free
  6659                           
  6660                           ;main.c: 339:    if (V.sensor_set && get_switch(SCALIB)) {
  6661  010932  0102               	movlb	2	; () banked
  6662  010934  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6663  010936  B4D8               	btfsc	status,2,c
  6664  010938  D00F               	goto	l17400
  6665                           
  6666                           ; BSR set to: 2
  6667  01093A  0E04               	movlw	4
  6668  01093C  6EE6               	movwf	postinc1,c
  6669  01093E  EC41  F013         	call	_get_switch	;wreg free
  6670  010942  502A               	movf	btemp^0,w,c
  6671  010944  B4D8               	btfsc	status,2,c
  6672  010946  D008               	goto	l17400
  6673                           
  6674                           ;main.c: 340:     current_sensor_cal();
  6675  010948  EC4A  F0CB         	call	_current_sensor_cal	;wreg free
  6676                           
  6677                           ;main.c: 341:     WaitMs(4000);
  6678  01094C  0EA0               	movlw	160
  6679  01094E  6EE6               	movwf	postinc1,c
  6680  010950  0E0F               	movlw	15
  6681  010952  6EE6               	movwf	postinc1,c
  6682  010954  EC2E  F012         	call	_WaitMs	;wreg free
  6683  010958                     l17400:
  6684                           
  6685                           ;main.c: 343:    V.sensor_set = 0;
  6686  010958  0102               	movlb	2	; () banked
  6687  01095A  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6688                           
  6689                           ; BSR set to: 2
  6690                           ;main.c: 344:    V.system_stable = 1;
  6691  01095C  0E01               	movlw	1
  6692  01095E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6693                           
  6694                           ;main.c: 345:    break;
  6695  010960  D01D               	goto	l17408
  6696  010962                     l1475:
  6697                           
  6698                           ; BSR set to: 2
  6699                           ;main.c: 351:    P.SYSTEM_STABLE = 1;
  6700  010962  0100               	movlb	0	; () banked
  6701  010964  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6702                           
  6703                           ;main.c: 352:    break;
  6704  010966  D01A               	goto	l17408
  6705  010968                     l1477:
  6706                           
  6707                           ; BSR set to: 2
  6708                           ;main.c: 355:    V.ui_state = UI_STATE_INIT;
  6709  010968  6B07               	clrf	_V& (0+255),b	;volatile
  6710                           
  6711                           ;main.c: 356:    break;
  6712  01096A  D018               	goto	l17408
  6713  01096C                     l17406:
  6714  01096C  0102               	movlb	2	; () banked
  6715  01096E  5107               	movf	_V& (0+255),w,b	;volatile
  6716  010970  6E34               	movwf	(btemp+10)^0,c
  6717  010972  6A35               	clrf	(btemp+11)^0,c
  6718                           
  6719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6720                           ; Switch size 1, requested type "simple"
  6721                           ; Number of cases is 1, Range of values is 0 to 0
  6722                           ; switch strategies available:
  6723                           ; Name         Instructions Cycles
  6724                           ; simple_byte            4     3 (average)
  6725                           ;	Chosen strategy is simple_byte
  6726  010974  5035               	movf	(btemp+11)^0,w,c
  6727  010976  0A00               	xorlw	0	; case 0
  6728  010978  A4D8               	btfss	status,2,c
  6729  01097A  D7F6               	goto	l1477
  6730                           
  6731                           ; BSR set to: 2
  6732                           ; Switch size 1, requested type "simple"
  6733                           ; Number of cases is 5, Range of values is 0 to 5
  6734                           ; switch strategies available:
  6735                           ; Name         Instructions Cycles
  6736                           ; simple_byte           16     9 (average)
  6737                           ;	Chosen strategy is simple_byte
  6738  01097C  5034               	movf	(btemp+10)^0,w,c
  6739  01097E  0A00               	xorlw	0	; case 0
  6740  010980  B4D8               	btfsc	status,2,c
  6741  010982  EF3D  F080         	goto	l17242
  6742  010986  0A01               	xorlw	1	; case 1
  6743  010988  B4D8               	btfsc	status,2,c
  6744  01098A  D008               	goto	l17408
  6745  01098C  0A02               	xorlw	2	; case 3
  6746  01098E  B4D8               	btfsc	status,2,c
  6747  010990  D005               	goto	l17408
  6748  010992  0A07               	xorlw	7	; case 4
  6749  010994  B4D8               	btfsc	status,2,c
  6750  010996  D7E5               	goto	l1475
  6751  010998  0A01               	xorlw	1	; case 5
  6752  01099A  D7E6               	goto	l1477
  6753  01099C                     l17408:
  6754                           
  6755                           ;main.c: 359:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6756  01099C  0E01               	movlw	1
  6757  01099E  6EE6               	movwf	postinc1,c
  6758  0109A0  ECAD  F013         	call	_TimerDone	;wreg free
  6759  0109A4  502A               	movf	btemp^0,w,c
  6760  0109A6  B4D8               	btfsc	status,2,c
  6761  0109A8  D013               	goto	l17420
  6762  0109AA  EC9B  F016         	call	_check_adc_scan	;wreg free
  6763  0109AE  502A               	movf	btemp^0,w,c
  6764  0109B0  B4D8               	btfsc	status,2,c
  6765  0109B2  D00E               	goto	l17420
  6766                           
  6767                           ;main.c: 363:    convert_adc_data();
  6768  0109B4  EC05  F005         	call	_convert_adc_data	;wreg free
  6769                           
  6770                           ;main.c: 367:    clear_adc_scan();
  6771  0109B8  ECB5  F016         	call	_clear_adc_scan	;wreg free
  6772                           
  6773                           ; BSR set to: 1
  6774                           ;main.c: 368:    start_adc_scan();
  6775  0109BC  EC5F  F00D         	call	_start_adc_scan	;wreg free
  6776                           
  6777                           ;main.c: 369:    StartTimer(TMR_ADC, 200);
  6778  0109C0  0EC8               	movlw	200
  6779  0109C2  6EE6               	movwf	postinc1,c
  6780  0109C4  0E00               	movlw	0
  6781  0109C6  6EE6               	movwf	postinc1,c
  6782  0109C8  0E01               	movlw	1
  6783  0109CA  6EE6               	movwf	postinc1,c
  6784  0109CC  EC20  F011         	call	_StartTimer	;wreg free
  6785  0109D0                     l17420:
  6786                           
  6787                           ;main.c: 372:   if (TimerDone(TMR_DISPLAY)) {
  6788  0109D0  0E0A               	movlw	10
  6789  0109D2  6EE6               	movwf	postinc1,c
  6790  0109D4  ECAD  F013         	call	_TimerDone	;wreg free
  6791  0109D8  502A               	movf	btemp^0,w,c
  6792  0109DA  B4D8               	btfsc	status,2,c
  6793  0109DC  EF05  F08B         	goto	l17544
  6794                           
  6795                           ;main.c: 373:    if (TimerDone(TMR_HELPDIS)) {
  6796  0109E0  0E09               	movlw	9
  6797  0109E2  6EE6               	movwf	postinc1,c
  6798  0109E4  ECAD  F013         	call	_TimerDone	;wreg free
  6799  0109E8  502A               	movf	btemp^0,w,c
  6800  0109EA  B4D8               	btfsc	status,2,c
  6801  0109EC  D004               	goto	l17426
  6802                           
  6803                           ;main.c: 374:     set_display_info(DIS_STR);
  6804  0109EE  0E00               	movlw	0
  6805  0109F0  6EE6               	movwf	postinc1,c
  6806  0109F2  ECA1  F015         	call	_set_display_info	;wreg free
  6807  0109F6                     l17426:
  6808                           
  6809                           ;main.c: 376:    pclock = time(((void*)0));
  6810  0109F6  0E00               	movlw	0
  6811  0109F8  6EE6               	movwf	postinc1,c
  6812  0109FA  0E00               	movlw	0
  6813  0109FC  6EE6               	movwf	postinc1,c
  6814  0109FE  EC23  F00E         	call	_time	;wreg free
  6815  010A02  52E5               	movf	postdec1,f,c
  6816  010A04  006F FF9C  F041    	movff	indf1,btemp+23
  6817  010A0A  52E5               	movf	postdec1,f,c
  6818  010A0C  006F FF9C  F040    	movff	indf1,btemp+22
  6819  010A12  52E5               	movf	postdec1,f,c
  6820  010A14  006F FF9C  F03F    	movff	indf1,btemp+21
  6821  010A1A  52E5               	movf	postdec1,f,c
  6822  010A1C  006F FF9C  F03E    	movff	indf1,btemp+20
  6823  010A22  52E5               	movf	postdec1,f,c
  6824  010A24  006F FF9C  F03D    	movff	indf1,btemp+19
  6825  010A2A  52E5               	movf	postdec1,f,c
  6826  010A2C  006F FF9C  F03C    	movff	indf1,btemp+18
  6827  010A32  52E5               	movf	postdec1,f,c
  6828  010A34  006F FF9C  F03B    	movff	indf1,btemp+17
  6829  010A3A  52E5               	movf	postdec1,f,c
  6830  010A3C  006F FF9C  F03A    	movff	indf1,btemp+16
  6831  010A42  0060  F0E8  F0DC   	movff	btemp+16,_pclock
  6832  010A48  0060  F0EC  F0DD   	movff	btemp+17,_pclock+1
  6833  010A4E  0060  F0F0  F0DE   	movff	btemp+18,_pclock+2
  6834  010A54  0060  F0F4  F0DF   	movff	btemp+19,_pclock+3
  6835  010A5A  0060  F0F8  F0E0   	movff	btemp+20,_pclock+4
  6836  010A60  0060  F0FC  F0E1   	movff	btemp+21,_pclock+5
  6837  010A66  0060  F100  F0E2   	movff	btemp+22,_pclock+6
  6838  010A6C  0060  F104  F0E3   	movff	btemp+23,_pclock+7
  6839                           
  6840                           ; BSR set to: 57
  6841                           ;main.c: 377:    t_mbmc = localtime(&pclock);
  6842  010A72  0EDC               	movlw	_pclock& (0+255)
  6843  010A74  6EE6               	movwf	postinc1,c
  6844  010A76  ECE3  F015         	call	_localtime	;wreg free
  6845  010A7A  0060  F0A8  F0BE   	movff	btemp,_t_mbmc
  6846  010A80  0060  F0AC  F0BF   	movff	btemp+1,_t_mbmc+1
  6847                           
  6848                           ;main.c: 378:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6849  010A86  0060  F2FB  FFE6   	movff	_t_mbmc,postinc1
  6850  010A8C  0060  F2FF  FFE6   	movff	_t_mbmc+1,postinc1
  6851  010A92  EC21  F0C4         	call	_asctime	;wreg free
  6852  010A96  0060  F0AB  FFE6   	movff	btemp,postinc1
  6853  010A9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6854  010AA2  0E76               	movlw	low (STR_77+5)
  6855  010AA4  6EE6               	movwf	postinc1,c
  6856  010AA6  0EFF               	movlw	high (STR_77+5)
  6857  010AA8  6EE6               	movwf	postinc1,c
  6858  010AAA  0E00               	movlw	0
  6859  010AAC  6EE6               	movwf	postinc1,c
  6860  010AAE  0E03               	movlw	3
  6861  010AB0  6EE6               	movwf	postinc1,c
  6862  010AB2  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6863  010AB6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6864  010ABC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6865  010AC2  0E06               	movlw	6
  6866  010AC4  6EE6               	movwf	postinc1,c
  6867  010AC6  ECE5  F0FE         	call	_sprintf	;wreg free
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;main.c: 379:    sprintf(get_vterm_ptr(3, 1), "%s           ", asctime(t_mbmc));
  6871  010ACA  0060  F2FB  FFE6   	movff	_t_mbmc,postinc1
  6872  010AD0  0060  F2FF  FFE6   	movff	_t_mbmc+1,postinc1
  6873  010AD6  EC21  F0C4         	call	_asctime	;wreg free
  6874  010ADA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6875  010AE0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6876  010AE6  0E76               	movlw	low (STR_77+5)
  6877  010AE8  6EE6               	movwf	postinc1,c
  6878  010AEA  0EFF               	movlw	high (STR_77+5)
  6879  010AEC  6EE6               	movwf	postinc1,c
  6880  010AEE  0E01               	movlw	1
  6881  010AF0  6EE6               	movwf	postinc1,c
  6882  010AF2  0E03               	movlw	3
  6883  010AF4  6EE6               	movwf	postinc1,c
  6884  010AF6  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6885  010AFA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6886  010B00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6887  010B06  0E06               	movlw	6
  6888  010B08  6EE6               	movwf	postinc1,c
  6889  010B0A  ECE5  F0FE         	call	_sprintf	;wreg free
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;main.c: 380:    calc_model_data();
  6893  010B0E  ECB7  F0CF         	call	_calc_model_data	;wreg free
  6894                           
  6895                           ; BSR set to: 57
  6896                           ;main.c: 381:    if (C.dupdate) {
  6897  010B12  EE23  F0B0         	lfsr	2,_C+303	;volatile
  6898  010B16  50DF               	movf	indf2,w,c
  6899  010B18  B4D8               	btfsc	status,2,c
  6900  010B1A  D0D7               	goto	l17470
  6901                           
  6902                           ; BSR set to: 57
  6903                           ;main.c: 382:     C.dupdate = 0;
  6904  010B1C  0E00               	movlw	0
  6905  010B1E  006F FFA0  FCB0    	movff	wreg,_C+303	;volatile
  6906                           
  6907                           ;main.c: 383:     set_hist_flag();
  6908  010B24  ECAF  F016         	call	_set_hist_flag	;wreg free
  6909                           
  6910                           ; BSR set to: 1
  6911                           ;main.c: 385:     uint16_t i_esr = 1;
  6912  010B28  0E01               	movlw	1
  6913  010B2A  6E34               	movwf	(btemp+10)^0,c
  6914  010B2C  0E00               	movlw	0
  6915  010B2E  6E35               	movwf	(btemp+11)^0,c
  6916                           
  6917                           ;stkvar	_i_esr @ sp[(-19)+4]
  6918  010B30  0EF1               	movlw	-15
  6919  010B32  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6920  010B38  0EF2               	movlw	-14
  6921  010B3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6922                           
  6923                           ; BSR set to: 1
  6924                           ;main.c: 386:     esr_check(1);
  6925  010B40  0E01               	movlw	1
  6926  010B42  6EE6               	movwf	postinc1,c
  6927  010B44  EC32  F0DD         	call	_esr_check	;wreg free
  6928                           
  6929                           ;main.c: 387:     while (esr_check(0) < 0.0) {
  6930  010B48  D01C               	goto	l17450
  6931  010B4A                     l17444:
  6932                           
  6933                           ;main.c: 388:      WaitMs(110);
  6934  010B4A  0E6E               	movlw	110
  6935  010B4C  6EE6               	movwf	postinc1,c
  6936  010B4E  0E00               	movlw	0
  6937  010B50  6EE6               	movwf	postinc1,c
  6938  010B52  EC2E  F012         	call	_WaitMs	;wreg free
  6939                           
  6940                           ;main.c: 389:      if (i_esr++ > 512)
  6941                           ;stkvar	_i_esr @ sp[(-19)+4]
  6942  010B56  50E1               	movf	fsr1l,w,c
  6943  010B58  0FF1               	addlw	-15
  6944  010B5A  6ED9               	movwf	fsr2l,c
  6945  010B5C  50E2               	movf	fsr1h,w,c
  6946  010B5E  6EDA               	movwf	fsr2h,c
  6947  010B60  0EFF               	movlw	255
  6948  010B62  22DA               	addwfc	fsr2h,f,c
  6949  010B64  006F FF7C  F034    	movff	indf2,btemp+10
  6950  010B6A  0E01               	movlw	1
  6951  010B6C  26DE               	addwf	postinc2,f,c
  6952  010B6E  006F FF7C  F035    	movff	indf2,btemp+11
  6953  010B74  0E00               	movlw	0
  6954  010B76  22DD               	addwfc	postdec2,f,c
  6955  010B78  0434               	decf	(btemp+10)^0,w,c
  6956  010B7A  0E02               	movlw	2
  6957  010B7C  5835               	subwfb	(btemp+11)^0,w,c
  6958  010B7E  B0D8               	btfsc	status,0,c
  6959  010B80  D006               	goto	u17020
  6960  010B82                     l17450:
  6961                           
  6962                           ;main.c: 387:     while (esr_check(0) < 0.0) {
  6963  010B82  0E00               	movlw	0
  6964  010B84  6EE6               	movwf	postinc1,c
  6965  010B86  EC32  F0DD         	call	_esr_check	;wreg free
  6966  010B8A  BE2D               	btfsc	(btemp+3)^0,7,c
  6967  010B8C  D7DE               	goto	l17444
  6968  010B8E                     u17020:
  6969                           
  6970                           ;main.c: 392:     load_hist_data();
  6971  010B8E  EC84  F0CD         	call	_load_hist_data	;wreg free
  6972                           
  6973                           ; BSR set to: 57
  6974                           ;main.c: 393:     update_hist_data(0, &C.hist[0]);
  6975  010B92  0E3A               	movlw	low (_C+185)
  6976  010B94  6EE6               	movwf	postinc1,c
  6977  010B96  0E0C               	movlw	high (_C+185)
  6978  010B98  6EE6               	movwf	postinc1,c
  6979  010B9A  0E00               	movlw	0
  6980  010B9C  6EE6               	movwf	postinc1,c
  6981  010B9E  EC03  F00B         	call	_update_hist_data	;wreg free
  6982                           
  6983                           ;main.c: 394:     write_cal_data();
  6984  010BA2  ECF4  F0F8         	call	_write_cal_data	;wreg free
  6985                           
  6986                           ;main.c: 395:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6987  010BA6  0EB3               	movlw	low STR_30
  6988  010BA8  6EE6               	movwf	postinc1,c
  6989  010BAA  0EFE               	movlw	high STR_30
  6990  010BAC  6EE6               	movwf	postinc1,c
  6991  010BAE  0E00               	movlw	0
  6992  010BB0  6EE6               	movwf	postinc1,c
  6993  010BB2  0E00               	movlw	0
  6994  010BB4  6EE6               	movwf	postinc1,c
  6995  010BB6  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  6996  010BBA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6997  010BC0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6998  010BC6  0E04               	movlw	4
  6999  010BC8  6EE6               	movwf	postinc1,c
  7000  010BCA  ECE5  F0FE         	call	_sprintf	;wreg free
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;main.c: 396:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  7004  010BCE  0E7F               	movlw	low STR_31
  7005  010BD0  6EE6               	movwf	postinc1,c
  7006  010BD2  0EFD               	movlw	high STR_31
  7007  010BD4  6EE6               	movwf	postinc1,c
  7008  010BD6  0E00               	movlw	0
  7009  010BD8  6EE6               	movwf	postinc1,c
  7010  010BDA  0E01               	movlw	1
  7011  010BDC  6EE6               	movwf	postinc1,c
  7012  010BDE  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7013  010BE2  0060  F0AB  FFE6   	movff	btemp,postinc1
  7014  010BE8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7015  010BEE  0E04               	movlw	4
  7016  010BF0  6EE6               	movwf	postinc1,c
  7017  010BF2  ECE5  F0FE         	call	_sprintf	;wreg free
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;main.c: 397:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  7021  010BF6  EE23  F046         	lfsr	2,_C+197	;volatile
  7022  010BFA  006F FF7B FFE6     	movff	postinc2,postinc1
  7023  010C00  006F FF7B FFE6     	movff	postinc2,postinc1
  7024  010C06  006F FF7B FFE6     	movff	postinc2,postinc1
  7025  010C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  7026  010C12  0E00               	movlw	0
  7027  010C14  6EE6               	movwf	postinc1,c
  7028  010C16  0E00               	movlw	0
  7029  010C18  6EE6               	movwf	postinc1,c
  7030  010C1A  EC23  F00E         	call	_time	;wreg free
  7031  010C1E  52E5               	movf	postdec1,f,c
  7032  010C20  006F FF9C  F041    	movff	indf1,btemp+23
  7033  010C26  52E5               	movf	postdec1,f,c
  7034  010C28  006F FF9C  F040    	movff	indf1,btemp+22
  7035  010C2E  52E5               	movf	postdec1,f,c
  7036  010C30  006F FF9C  F03F    	movff	indf1,btemp+21
  7037  010C36  52E5               	movf	postdec1,f,c
  7038  010C38  006F FF9C  F03E    	movff	indf1,btemp+20
  7039  010C3E  52E5               	movf	postdec1,f,c
  7040  010C40  006F FF9C  F03D    	movff	indf1,btemp+19
  7041  010C46  52E5               	movf	postdec1,f,c
  7042  010C48  006F FF9C  F03C    	movff	indf1,btemp+18
  7043  010C4E  52E5               	movf	postdec1,f,c
  7044  010C50  006F FF9C  F03B    	movff	indf1,btemp+17
  7045  010C56  52E5               	movf	postdec1,f,c
  7046  010C58  006F FF9C  F03A    	movff	indf1,btemp+16
  7047  010C5E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  7048  010C64  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  7049  010C6A  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  7050  010C70  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  7051  010C76  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  7052  010C7C  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  7053  010C82  0060  F103  FFE6   	movff	btemp+22,postinc1
  7054  010C88  0060  F107  FFE6   	movff	btemp+23,postinc1
  7055  010C8E  0E2F               	movlw	low STR_32
  7056  010C90  6EE6               	movwf	postinc1,c
  7057  010C92  0EFE               	movlw	high STR_32
  7058  010C94  6EE6               	movwf	postinc1,c
  7059  010C96  0E00               	movlw	0
  7060  010C98  6EE6               	movwf	postinc1,c
  7061  010C9A  0E02               	movlw	2
  7062  010C9C  6EE6               	movwf	postinc1,c
  7063  010C9E  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7064  010CA2  0060  F0AB  FFE6   	movff	btemp,postinc1
  7065  010CA8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7066  010CAE  0E10               	movlw	16
  7067  010CB0  6EE6               	movwf	postinc1,c
  7068  010CB2  ECE5  F0FE         	call	_sprintf	;wreg free
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;main.c: 398:     update_lcd(0);
  7072  010CB6  0E00               	movlw	0
  7073  010CB8  6EE6               	movwf	postinc1,c
  7074  010CBA  EC97  F0F7         	call	_update_lcd	;wreg free
  7075                           
  7076                           ;main.c: 399:     WaitMs(2000);
  7077  010CBE  0ED0               	movlw	208
  7078  010CC0  6EE6               	movwf	postinc1,c
  7079  010CC2  0E07               	movlw	7
  7080  010CC4  6EE6               	movwf	postinc1,c
  7081  010CC6  EC2E  F012         	call	_WaitMs	;wreg free
  7082  010CCA                     l17470:
  7083                           
  7084                           ;main.c: 407:     hid_display(&H);
  7085  010CCA  0E9B               	movlw	low _H
  7086  010CCC  6EE6               	movwf	postinc1,c
  7087  010CCE  0E01               	movlw	high _H
  7088  010CD0  6EE6               	movwf	postinc1,c
  7089  010CD2  EC84  F0EA         	call	_hid_display	;wreg free
  7090                           
  7091                           ;main.c: 408:     switch (H.hid_display) {
  7092  010CD6  EF96  F08A         	goto	l17514
  7093  010CDA                     l1489:
  7094                           
  7095                           ; BSR set to: 1
  7096                           ;main.c: 410:      V.calib = 0;
  7097  010CDA  0102               	movlb	2	; () banked
  7098  010CDC  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7099                           
  7100                           ; BSR set to: 2
  7101                           ;main.c: 411:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  7102  010CDE  EE23  F0AF         	lfsr	2,_C+302	;volatile
  7103  010CE2  50DF               	movf	indf2,w,c
  7104  010CE4  A4D8               	btfss	status,2,c
  7105  010CE6  D002               	goto	l17476
  7106                           
  7107                           ; BSR set to: 2
  7108  010CE8  0E20               	movlw	32
  7109  010CEA  D001               	goto	L1
  7110  010CEC                     l17476:
  7111                           
  7112                           ; BSR set to: 2
  7113  010CEC  0E44               	movlw	68
  7114  010CEE                     L1:
  7115  010CEE  6E34               	movwf	(btemp+10)^0,c
  7116  010CF0  0E00               	movlw	0
  7117  010CF2  6E35               	movwf	(btemp+11)^0,c
  7118                           
  7119                           ;stkvar	_main$4037 @ sp[(-19)+2]
  7120  010CF4  0EEF               	movlw	-17
  7121  010CF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  7122  010CFC  0EF0               	movlw	-16
  7123  010CFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7124                           
  7125                           ; BSR set to: 2
  7126  010D04  EE22  F3FD         	lfsr	2,_C+124	;volatile
  7127  010D08  006F FF7B FFE6     	movff	postinc2,postinc1
  7128  010D0E  006F FF7B FFE6     	movff	postinc2,postinc1
  7129  010D14  006F FF7B FFE6     	movff	postinc2,postinc1
  7130  010D1A  006F FF7B FFE6     	movff	postinc2,postinc1
  7131                           
  7132                           ;stkvar	_main$4037 @ sp[(-23)+2]
  7133  010D20  0EEB               	movlw	-21
  7134  010D22  006F FF8F FFE6     	movff	plusw1,postinc1
  7135  010D28  006F FF8F FFE6     	movff	plusw1,postinc1
  7136  010D2E  0EB4               	movlw	low STR_36
  7137  010D30  6EE6               	movwf	postinc1,c
  7138  010D32  0EFC               	movlw	high STR_36
  7139  010D34  6EE6               	movwf	postinc1,c
  7140  010D36  0E00               	movlw	0
  7141  010D38  6EE6               	movwf	postinc1,c
  7142  010D3A  0E00               	movlw	0
  7143  010D3C  6EE6               	movwf	postinc1,c
  7144  010D3E  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7145  010D42  0060  F0AB  FFE6   	movff	btemp,postinc1
  7146  010D48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7147  010D4E  0E0A               	movlw	10
  7148  010D50  6EE6               	movwf	postinc1,c
  7149  010D52  ECE5  F0FE         	call	_sprintf	;wreg free
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;main.c: 412:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  7153  010D56  EE22  F3F5         	lfsr	2,_C+116	;volatile
  7154  010D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  7155  010D60  006F FF7B FFE6     	movff	postinc2,postinc1
  7156  010D66  006F FF7B FFE6     	movff	postinc2,postinc1
  7157  010D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  7158  010D72  0E9D               	movlw	low STR_37
  7159  010D74  6EE6               	movwf	postinc1,c
  7160  010D76  0EFC               	movlw	high STR_37
  7161  010D78  6EE6               	movwf	postinc1,c
  7162  010D7A  0E00               	movlw	0
  7163  010D7C  6EE6               	movwf	postinc1,c
  7164  010D7E  0E01               	movlw	1
  7165  010D80  6EE6               	movwf	postinc1,c
  7166  010D82  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7167  010D86  0060  F0AB  FFE6   	movff	btemp,postinc1
  7168  010D8C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7169  010D92  0E08               	movlw	8
  7170  010D94  6EE6               	movwf	postinc1,c
  7171  010D96  ECE5  F0FE         	call	_sprintf	;wreg free
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;main.c: 413:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  7175  010D9A  EE22  F3F9         	lfsr	2,_C+120	;volatile
  7176  010D9E  006F FF7B FFE6     	movff	postinc2,postinc1
  7177  010DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  7178  010DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  7179  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  7180  010DB6  0E86               	movlw	low STR_38
  7181  010DB8  6EE6               	movwf	postinc1,c
  7182  010DBA  0EFC               	movlw	high STR_38
  7183  010DBC  6EE6               	movwf	postinc1,c
  7184  010DBE  0E00               	movlw	0
  7185  010DC0  6EE6               	movwf	postinc1,c
  7186  010DC2  0E02               	movlw	2
  7187  010DC4  6EE6               	movwf	postinc1,c
  7188  010DC6  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7189  010DCA  0060  F0AB  FFE6   	movff	btemp,postinc1
  7190  010DD0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7191  010DD6  0E08               	movlw	8
  7192  010DD8  6EE6               	movwf	postinc1,c
  7193  010DDA  ECE5  F0FE         	call	_sprintf	;wreg free
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;main.c: 415:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  7197  010DDE  EE23  F0AF         	lfsr	2,_C+302	;volatile
  7198  010DE2  50DF               	movf	indf2,w,c
  7199  010DE4  A4D8               	btfss	status,2,c
  7200  010DE6  D002               	goto	l17488
  7201                           
  7202                           ; BSR set to: 0
  7203  010DE8  0E20               	movlw	32
  7204  010DEA  D001               	goto	L2
  7205  010DEC                     l17488:
  7206                           
  7207                           ; BSR set to: 0
  7208  010DEC  0E44               	movlw	68
  7209  010DEE                     L2:
  7210  010DEE  6E34               	movwf	(btemp+10)^0,c
  7211  010DF0  0E00               	movlw	0
  7212  010DF2  6E35               	movwf	(btemp+11)^0,c
  7213                           
  7214                           ;stkvar	_main$4041 @ sp[(-19)+0]
  7215  010DF4  0EED               	movlw	-19
  7216  010DF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  7217  010DFC  0EEE               	movlw	-18
  7218  010DFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7219                           
  7220                           ; BSR set to: 0
  7221  010E04  EE23  F029         	lfsr	2,_C+168	;volatile
  7222  010E08  006F FF7B FFE6     	movff	postinc2,postinc1
  7223  010E0E  006F FF7B FFE6     	movff	postinc2,postinc1
  7224  010E14  006F FF7B FFE6     	movff	postinc2,postinc1
  7225  010E1A  006F FF7B FFE6     	movff	postinc2,postinc1
  7226                           
  7227                           ;stkvar	_main$4041 @ sp[(-23)+0]
  7228  010E20  0EE9               	movlw	-23
  7229  010E22  006F FF8F FFE6     	movff	plusw1,postinc1
  7230  010E28  006F FF8F FFE6     	movff	plusw1,postinc1
  7231  010E2E  0E6F               	movlw	low STR_39
  7232  010E30  6EE6               	movwf	postinc1,c
  7233  010E32  0EFC               	movlw	high STR_39
  7234  010E34  6EE6               	movwf	postinc1,c
  7235  010E36  0E01               	movlw	1
  7236  010E38  6EE6               	movwf	postinc1,c
  7237  010E3A  0E00               	movlw	0
  7238  010E3C  6EE6               	movwf	postinc1,c
  7239  010E3E  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7240  010E42  0060  F0AB  FFE6   	movff	btemp,postinc1
  7241  010E48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7242  010E4E  0E0A               	movlw	10
  7243  010E50  6EE6               	movwf	postinc1,c
  7244  010E52  ECE5  F0FE         	call	_sprintf	;wreg free
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;main.c: 416:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  7248  010E56  EE23  F031         	lfsr	2,_C+176	;volatile
  7249  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  7250  010E60  006F FF7B FFE6     	movff	postinc2,postinc1
  7251  010E66  006F FF7B FFE6     	movff	postinc2,postinc1
  7252  010E6C  006F FF7B FFE6     	movff	postinc2,postinc1
  7253  010E72  0E58               	movlw	low STR_40
  7254  010E74  6EE6               	movwf	postinc1,c
  7255  010E76  0EFC               	movlw	high STR_40
  7256  010E78  6EE6               	movwf	postinc1,c
  7257  010E7A  0E01               	movlw	1
  7258  010E7C  6EE6               	movwf	postinc1,c
  7259  010E7E  0E01               	movlw	1
  7260  010E80  6EE6               	movwf	postinc1,c
  7261  010E82  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7262  010E86  0060  F0AB  FFE6   	movff	btemp,postinc1
  7263  010E8C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7264  010E92  0E08               	movlw	8
  7265  010E94  6EE6               	movwf	postinc1,c
  7266  010E96  ECE5  F0FE         	call	_sprintf	;wreg free
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;main.c: 417:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  7270  010E9A  EE23  F02D         	lfsr	2,_C+172	;volatile
  7271  010E9E  006F FF7B FFE6     	movff	postinc2,postinc1
  7272  010EA4  006F FF7B FFE6     	movff	postinc2,postinc1
  7273  010EAA  006F FF7B FFE6     	movff	postinc2,postinc1
  7274  010EB0  006F FF7B FFE6     	movff	postinc2,postinc1
  7275  010EB6  0E41               	movlw	low STR_41
  7276  010EB8  6EE6               	movwf	postinc1,c
  7277  010EBA  0EFC               	movlw	high STR_41
  7278  010EBC  6EE6               	movwf	postinc1,c
  7279  010EBE  0E01               	movlw	1
  7280  010EC0  6EE6               	movwf	postinc1,c
  7281  010EC2  0E02               	movlw	2
  7282  010EC4  6EE6               	movwf	postinc1,c
  7283  010EC6  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7284  010ECA  0060  F0AB  FFE6   	movff	btemp,postinc1
  7285  010ED0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7286  010ED6  0E08               	movlw	8
  7287  010ED8  6EE6               	movwf	postinc1,c
  7288  010EDA  ECE5  F0FE         	call	_sprintf	;wreg free
  7289                           
  7290                           ;main.c: 418:      break;
  7291  010EDE  D33C               	goto	l17516
  7292  010EE0                     l1499:
  7293                           
  7294                           ; BSR set to: 1
  7295                           ;main.c: 420:      V.calib = 0;
  7296  010EE0  0102               	movlb	2	; () banked
  7297  010EE2  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7298                           
  7299                           ; BSR set to: 2
  7300                           ;main.c: 421:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  7301  010EE4  EE22  F385         	lfsr	2,_C+4	;volatile
  7302  010EE8  006F FF7B FFE6     	movff	postinc2,postinc1
  7303  010EEE  006F FF7B FFE6     	movff	postinc2,postinc1
  7304  010EF4  006F FF7B FFE6     	movff	postinc2,postinc1
  7305  010EFA  006F FF7B FFE6     	movff	postinc2,postinc1
  7306  010F00  EE22  F395         	lfsr	2,_C+20	;volatile
  7307  010F04  006F FF7B FFE6     	movff	postinc2,postinc1
  7308  010F0A  006F FF7B FFE6     	movff	postinc2,postinc1
  7309  010F10  006F FF7B FFE6     	movff	postinc2,postinc1
  7310  010F16  006F FF7B FFE6     	movff	postinc2,postinc1
  7311  010F1C  0E10               	movlw	low STR_42
  7312  010F1E  6EE6               	movwf	postinc1,c
  7313  010F20  0EFD               	movlw	high STR_42
  7314  010F22  6EE6               	movwf	postinc1,c
  7315  010F24  0E00               	movlw	0
  7316  010F26  6EE6               	movwf	postinc1,c
  7317  010F28  0E00               	movlw	0
  7318  010F2A  6EE6               	movwf	postinc1,c
  7319  010F2C  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7320  010F30  0060  F0AB  FFE6   	movff	btemp,postinc1
  7321  010F36  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7322  010F3C  0E0C               	movlw	12
  7323  010F3E  6EE6               	movwf	postinc1,c
  7324  010F40  ECE5  F0FE         	call	_sprintf	;wreg free
  7325                           
  7326                           ;main.c: 422:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  7327  010F44  EE22  F381         	lfsr	2,_C
  7328  010F48  006F FF7B FFE6     	movff	postinc2,postinc1
  7329  010F4E  006F FF7B FFE6     	movff	postinc2,postinc1
  7330  010F54  006F FF7B FFE6     	movff	postinc2,postinc1
  7331  010F5A  006F FF7B FFE6     	movff	postinc2,postinc1
  7332  010F60  EE22  F391         	lfsr	2,_C+16	;volatile
  7333  010F64  006F FF7B FFE6     	movff	postinc2,postinc1
  7334  010F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  7335  010F70  006F FF7B FFE6     	movff	postinc2,postinc1
  7336  010F76  006F FF7B FFE6     	movff	postinc2,postinc1
  7337  010F7C  0EE2               	movlw	low STR_43
  7338  010F7E  6EE6               	movwf	postinc1,c
  7339  010F80  0EFC               	movlw	high STR_43
  7340  010F82  6EE6               	movwf	postinc1,c
  7341  010F84  0E00               	movlw	0
  7342  010F86  6EE6               	movwf	postinc1,c
  7343  010F88  0E01               	movlw	1
  7344  010F8A  6EE6               	movwf	postinc1,c
  7345  010F8C  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7346  010F90  0060  F0AB  FFE6   	movff	btemp,postinc1
  7347  010F96  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7348  010F9C  0E0C               	movlw	12
  7349  010F9E  6EE6               	movwf	postinc1,c
  7350  010FA0  ECE5  F0FE         	call	_sprintf	;wreg free
  7351                           
  7352                           ;main.c: 423:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  7353  010FA4  EE22  F3C1         	lfsr	2,_C+64	;volatile
  7354  010FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  7355  010FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  7356  010FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  7357  010FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  7358  010FC0  EE22  F389         	lfsr	2,_C+8	;volatile
  7359  010FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  7360  010FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  7361  010FD0  006F FF7B FFE6     	movff	postinc2,postinc1
  7362  010FD6  006F FF7B FFE6     	movff	postinc2,postinc1
  7363  010FDC  0EF9               	movlw	low STR_44
  7364  010FDE  6EE6               	movwf	postinc1,c
  7365  010FE0  0EFC               	movlw	high STR_44
  7366  010FE2  6EE6               	movwf	postinc1,c
  7367  010FE4  0E00               	movlw	0
  7368  010FE6  6EE6               	movwf	postinc1,c
  7369  010FE8  0E02               	movlw	2
  7370  010FEA  6EE6               	movwf	postinc1,c
  7371  010FEC  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7372  010FF0  0060  F0AB  FFE6   	movff	btemp,postinc1
  7373  010FF6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7374  010FFC  0E0C               	movlw	12
  7375  010FFE  6EE6               	movwf	postinc1,c
  7376  011000  ECE5  F0FE         	call	_sprintf	;wreg free
  7377                           
  7378                           ;main.c: 425:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  7379  011004  EE23  F021         	lfsr	2,_C+160	;volatile
  7380  011008  006F FF7B FFE6     	movff	postinc2,postinc1
  7381  01100E  006F FF7B FFE6     	movff	postinc2,postinc1
  7382  011014  006F FF7B FFE6     	movff	postinc2,postinc1
  7383  01101A  006F FF7B FFE6     	movff	postinc2,postinc1
  7384  011020  0EFC               	movlw	low STR_45
  7385  011022  6EE6               	movwf	postinc1,c
  7386  011024  0EFB               	movlw	high STR_45
  7387  011026  6EE6               	movwf	postinc1,c
  7388  011028  0E01               	movlw	1
  7389  01102A  6EE6               	movwf	postinc1,c
  7390  01102C  0E00               	movlw	0
  7391  01102E  6EE6               	movwf	postinc1,c
  7392  011030  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7393  011034  0060  F0AB  FFE6   	movff	btemp,postinc1
  7394  01103A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7395  011040  0E08               	movlw	8
  7396  011042  6EE6               	movwf	postinc1,c
  7397  011044  ECE5  F0FE         	call	_sprintf	;wreg free
  7398                           
  7399                           ;main.c: 426:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  7400  011048  EE23  F025         	lfsr	2,_C+164	;volatile
  7401  01104C  006F FF7B FFE6     	movff	postinc2,postinc1
  7402  011052  006F FF7B FFE6     	movff	postinc2,postinc1
  7403  011058  006F FF7B FFE6     	movff	postinc2,postinc1
  7404  01105E  006F FF7B FFE6     	movff	postinc2,postinc1
  7405  011064  0E13               	movlw	low STR_46
  7406  011066  6EE6               	movwf	postinc1,c
  7407  011068  0EFC               	movlw	high STR_46
  7408  01106A  6EE6               	movwf	postinc1,c
  7409  01106C  0E01               	movlw	1
  7410  01106E  6EE6               	movwf	postinc1,c
  7411  011070  0E01               	movlw	1
  7412  011072  6EE6               	movwf	postinc1,c
  7413  011074  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7414  011078  0060  F0AB  FFE6   	movff	btemp,postinc1
  7415  01107E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7416  011084  0E08               	movlw	8
  7417  011086  6EE6               	movwf	postinc1,c
  7418  011088  ECE5  F0FE         	call	_sprintf	;wreg free
  7419                           
  7420                           ;main.c: 427:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  7421  01108C  EE23  F025         	lfsr	2,_C+164	;volatile
  7422  011090  006F FF7B FFE6     	movff	postinc2,postinc1
  7423  011096  006F FF7B FFE6     	movff	postinc2,postinc1
  7424  01109C  006F FF7B FFE6     	movff	postinc2,postinc1
  7425  0110A2  006F FF7B FFE6     	movff	postinc2,postinc1
  7426  0110A8  EE23  F021         	lfsr	2,_C+160	;volatile
  7427  0110AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7428  0110B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7429  0110B8  006F FF7B FFE6     	movff	postinc2,postinc1
  7430  0110BE  006F FF7B FFE6     	movff	postinc2,postinc1
  7431  0110C4  EC47  F0B7         	call	___fladd	;wreg free
  7432  0110C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7433  0110CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7434  0110D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  7435  0110DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  7436  0110E0  0E2A               	movlw	low STR_47
  7437  0110E2  6EE6               	movwf	postinc1,c
  7438  0110E4  0EFC               	movlw	high STR_47
  7439  0110E6  6EE6               	movwf	postinc1,c
  7440  0110E8  0E01               	movlw	1
  7441  0110EA  6EE6               	movwf	postinc1,c
  7442  0110EC  0E02               	movlw	2
  7443  0110EE  6EE6               	movwf	postinc1,c
  7444  0110F0  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7445  0110F4  0060  F0AB  FFE6   	movff	btemp,postinc1
  7446  0110FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7447  011100  0E08               	movlw	8
  7448  011102  6EE6               	movwf	postinc1,c
  7449  011104  ECE5  F0FE         	call	_sprintf	;wreg free
  7450                           
  7451                           ;main.c: 428:      break;
  7452  011108  D227               	goto	l17516
  7453  01110A                     l1500:
  7454                           
  7455                           ; BSR set to: 1
  7456                           ;main.c: 430:      V.calib = 0;
  7457  01110A  0102               	movlb	2	; () banked
  7458  01110C  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7459                           
  7460                           ; BSR set to: 2
  7461                           ;main.c: 431:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  7462  01110E  EE23  F001         	lfsr	2,_C+128	;volatile
  7463  011112  006F FF7B FFE6     	movff	postinc2,postinc1
  7464  011118  006F FF7B FFE6     	movff	postinc2,postinc1
  7465  01111E  006F FF7B FFE6     	movff	postinc2,postinc1
  7466  011124  006F FF7B FFE6     	movff	postinc2,postinc1
  7467  01112A  0E57               	movlw	low STR_48
  7468  01112C  6EE6               	movwf	postinc1,c
  7469  01112E  0EFB               	movlw	high STR_48
  7470  011130  6EE6               	movwf	postinc1,c
  7471  011132  0E00               	movlw	0
  7472  011134  6EE6               	movwf	postinc1,c
  7473  011136  0E00               	movlw	0
  7474  011138  6EE6               	movwf	postinc1,c
  7475  01113A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7476  01113E  0060  F0AB  FFE6   	movff	btemp,postinc1
  7477  011144  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7478  01114A  0E08               	movlw	8
  7479  01114C  6EE6               	movwf	postinc1,c
  7480  01114E  ECE5  F0FE         	call	_sprintf	;wreg free
  7481                           
  7482                           ;main.c: 432:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  7483  011152  EE23  F015         	lfsr	2,_C+148	;volatile
  7484  011156  006F FF7B FFE6     	movff	postinc2,postinc1
  7485  01115C  006F FF7B FFE6     	movff	postinc2,postinc1
  7486  011162  006F FF7B FFE6     	movff	postinc2,postinc1
  7487  011168  006F FF7B FFE6     	movff	postinc2,postinc1
  7488  01116E  EE23  F011         	lfsr	2,_C+144	;volatile
  7489  011172  006F FF7B FFE6     	movff	postinc2,postinc1
  7490  011178  006F FF7B FFE6     	movff	postinc2,postinc1
  7491  01117E  006F FF7B FFE6     	movff	postinc2,postinc1
  7492  011184  006F FF7B FFE6     	movff	postinc2,postinc1
  7493  01118A  0E9F               	movlw	low STR_49
  7494  01118C  6EE6               	movwf	postinc1,c
  7495  01118E  0EFB               	movlw	high STR_49
  7496  011190  6EE6               	movwf	postinc1,c
  7497  011192  0E00               	movlw	0
  7498  011194  6EE6               	movwf	postinc1,c
  7499  011196  0E01               	movlw	1
  7500  011198  6EE6               	movwf	postinc1,c
  7501  01119A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7502  01119E  0060  F0AB  FFE6   	movff	btemp,postinc1
  7503  0111A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7504  0111AA  0E0C               	movlw	12
  7505  0111AC  6EE6               	movwf	postinc1,c
  7506  0111AE  ECE5  F0FE         	call	_sprintf	;wreg free
  7507                           
  7508                           ;main.c: 433:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  7509  0111B2  EE22  F391         	lfsr	2,_C+16	;volatile
  7510  0111B6  006F FF7B FFE6     	movff	postinc2,postinc1
  7511  0111BC  006F FF7B FFE6     	movff	postinc2,postinc1
  7512  0111C2  006F FF7B FFE6     	movff	postinc2,postinc1
  7513  0111C8  006F FF7B FFE6     	movff	postinc2,postinc1
  7514  0111CE  EE23  F035         	lfsr	2,_C+180	;volatile
  7515  0111D2  006F FF78  F034    	movff	postinc2,btemp+10
  7516  0111D8  006F FF74  F035    	movff	postdec2,btemp+11
  7517  0111DE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7518  0111E4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7519  0111EA  EE23  F037         	lfsr	2,_C+182	;volatile
  7520  0111EE  006F FF78  F034    	movff	postinc2,btemp+10
  7521  0111F4  006F FF74  F035    	movff	postdec2,btemp+11
  7522  0111FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7523  011200  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7524  011206  0E00               	movlw	0
  7525  011208  6EE6               	movwf	postinc1,c
  7526  01120A  0E05               	movlw	5
  7527  01120C  6EE6               	movwf	postinc1,c
  7528  01120E  EC5B  F000         	call	_spinners	;wreg free
  7529  011212  502A               	movf	btemp^0,w,c
  7530  011214  6EE6               	movwf	postinc1,c
  7531  011216  0E00               	movlw	0
  7532  011218  6EE6               	movwf	postinc1,c
  7533  01121A  0E9B               	movlw	low STR_50
  7534  01121C  6EE6               	movwf	postinc1,c
  7535  01121E  0EFA               	movlw	high STR_50
  7536  011220  6EE6               	movwf	postinc1,c
  7537  011222  0E00               	movlw	0
  7538  011224  6EE6               	movwf	postinc1,c
  7539  011226  0E02               	movlw	2
  7540  011228  6EE6               	movwf	postinc1,c
  7541  01122A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7542  01122E  0060  F0AB  FFE6   	movff	btemp,postinc1
  7543  011234  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7544  01123A  0E0E               	movlw	14
  7545  01123C  6EE6               	movwf	postinc1,c
  7546  01123E  ECE5  F0FE         	call	_sprintf	;wreg free
  7547                           
  7548                           ;main.c: 435:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  7549  011242  EE23  F009         	lfsr	2,_C+136	;volatile
  7550  011246  006F FF7B FFE6     	movff	postinc2,postinc1
  7551  01124C  006F FF7B FFE6     	movff	postinc2,postinc1
  7552  011252  006F FF7B FFE6     	movff	postinc2,postinc1
  7553  011258  006F FF7B FFE6     	movff	postinc2,postinc1
  7554  01125E  0E3F               	movlw	low STR_51
  7555  011260  6EE6               	movwf	postinc1,c
  7556  011262  0EFB               	movlw	high STR_51
  7557  011264  6EE6               	movwf	postinc1,c
  7558  011266  0E01               	movlw	1
  7559  011268  6EE6               	movwf	postinc1,c
  7560  01126A  0E00               	movlw	0
  7561  01126C  6EE6               	movwf	postinc1,c
  7562  01126E  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7563  011272  0060  F0AB  FFE6   	movff	btemp,postinc1
  7564  011278  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7565  01127E  0E08               	movlw	8
  7566  011280  6EE6               	movwf	postinc1,c
  7567  011282  ECE5  F0FE         	call	_sprintf	;wreg free
  7568                           
  7569                           ;main.c: 436:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  7570  011286  EE23  F09B         	lfsr	2,_C+282	;volatile
  7571  01128A  006F FF7B FFE6     	movff	postinc2,postinc1
  7572  011290  006F FF7B FFE6     	movff	postinc2,postinc1
  7573  011296  006F FF7B FFE6     	movff	postinc2,postinc1
  7574  01129C  006F FF7B FFE6     	movff	postinc2,postinc1
  7575  0112A2  EE23  F0A7         	lfsr	2,_C+294	;volatile
  7576  0112A6  006F FF7B FFE6     	movff	postinc2,postinc1
  7577  0112AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7578  0112B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7579  0112B8  006F FF7B FFE6     	movff	postinc2,postinc1
  7580  0112BE  0E6F               	movlw	low STR_52
  7581  0112C0  6EE6               	movwf	postinc1,c
  7582  0112C2  0EFB               	movlw	high STR_52
  7583  0112C4  6EE6               	movwf	postinc1,c
  7584  0112C6  0E01               	movlw	1
  7585  0112C8  6EE6               	movwf	postinc1,c
  7586  0112CA  0E01               	movlw	1
  7587  0112CC  6EE6               	movwf	postinc1,c
  7588  0112CE  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7589  0112D2  0060  F0AB  FFE6   	movff	btemp,postinc1
  7590  0112D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7591  0112DE  0E0C               	movlw	12
  7592  0112E0  6EE6               	movwf	postinc1,c
  7593  0112E2  ECE5  F0FE         	call	_sprintf	;wreg free
  7594                           
  7595                           ;main.c: 437:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  7596  0112E6  EE23  F09F         	lfsr	2,_C+286	;volatile
  7597  0112EA  006F FF7B FFE6     	movff	postinc2,postinc1
  7598  0112F0  006F FF7B FFE6     	movff	postinc2,postinc1
  7599  0112F6  006F FF7B FFE6     	movff	postinc2,postinc1
  7600  0112FC  006F FF7B FFE6     	movff	postinc2,postinc1
  7601  011302  EE23  F0AB         	lfsr	2,_C+298	;volatile
  7602  011306  006F FF7B FFE6     	movff	postinc2,postinc1
  7603  01130C  006F FF7B FFE6     	movff	postinc2,postinc1
  7604  011312  006F FF7B FFE6     	movff	postinc2,postinc1
  7605  011318  006F FF7B FFE6     	movff	postinc2,postinc1
  7606  01131E  0E87               	movlw	low STR_53
  7607  011320  6EE6               	movwf	postinc1,c
  7608  011322  0EFB               	movlw	high STR_53
  7609  011324  6EE6               	movwf	postinc1,c
  7610  011326  0E01               	movlw	1
  7611  011328  6EE6               	movwf	postinc1,c
  7612  01132A  0E02               	movlw	2
  7613  01132C  6EE6               	movwf	postinc1,c
  7614  01132E  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7615  011332  0060  F0AB  FFE6   	movff	btemp,postinc1
  7616  011338  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7617  01133E  0E0C               	movlw	12
  7618  011340  6EE6               	movwf	postinc1,c
  7619  011342  ECE5  F0FE         	call	_sprintf	;wreg free
  7620                           
  7621                           ;main.c: 438:      break;
  7622  011346  D108               	goto	l17516
  7623  011348                     l17500:
  7624                           
  7625                           ; BSR set to: 1
  7626                           ;main.c: 440:      if (!V.calib) {
  7627  011348  0102               	movlb	2	; () banked
  7628  01134A  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  7629  01134C  A4D8               	btfss	status,2,c
  7630  01134E  D02D               	goto	l17504
  7631                           
  7632                           ; BSR set to: 2
  7633                           ;main.c: 441:       lp_filter(0.0, i, -1);
  7634  011350  0EFF               	movlw	255
  7635  011352  6EE6               	movwf	postinc1,c
  7636                           
  7637                           ;stkvar	_i @ sp[(-20)+16]
  7638  011354  0EFC               	movlw	-4
  7639  011356  50E3               	movf	plusw1,w,c
  7640  011358  6EE6               	movwf	postinc1,c
  7641  01135A  0E00               	movlw	0
  7642  01135C  6EE6               	movwf	postinc1,c
  7643  01135E  0E00               	movlw	0
  7644  011360  6EE6               	movwf	postinc1,c
  7645  011362  0E00               	movlw	0
  7646  011364  6EE6               	movwf	postinc1,c
  7647  011366  0E00               	movlw	0
  7648  011368  6EE6               	movwf	postinc1,c
  7649  01136A  EC82  F0EE         	call	_lp_filter	;wreg free
  7650                           
  7651                           ;main.c: 442:       lp_filter(0.0, j, -1);
  7652  01136E  0EFF               	movlw	255
  7653  011370  6EE6               	movwf	postinc1,c
  7654                           
  7655                           ;stkvar	_j @ sp[(-20)+15]
  7656  011372  0EFB               	movlw	-5
  7657  011374  50E3               	movf	plusw1,w,c
  7658  011376  6EE6               	movwf	postinc1,c
  7659  011378  0E00               	movlw	0
  7660  01137A  6EE6               	movwf	postinc1,c
  7661  01137C  0E00               	movlw	0
  7662  01137E  6EE6               	movwf	postinc1,c
  7663  011380  0E00               	movlw	0
  7664  011382  6EE6               	movwf	postinc1,c
  7665  011384  0E00               	movlw	0
  7666  011386  6EE6               	movwf	postinc1,c
  7667  011388  EC82  F0EE         	call	_lp_filter	;wreg free
  7668                           
  7669                           ;main.c: 443:       lp_filter(0.0, k, -1);
  7670  01138C  0EFF               	movlw	255
  7671  01138E  6EE6               	movwf	postinc1,c
  7672                           
  7673                           ;stkvar	_k @ sp[(-20)+14]
  7674  011390  0EFA               	movlw	-6
  7675  011392  50E3               	movf	plusw1,w,c
  7676  011394  6EE6               	movwf	postinc1,c
  7677  011396  0E00               	movlw	0
  7678  011398  6EE6               	movwf	postinc1,c
  7679  01139A  0E00               	movlw	0
  7680  01139C  6EE6               	movwf	postinc1,c
  7681  01139E  0E00               	movlw	0
  7682  0113A0  6EE6               	movwf	postinc1,c
  7683  0113A2  0E00               	movlw	0
  7684  0113A4  6EE6               	movwf	postinc1,c
  7685  0113A6  EC82  F0EE         	call	_lp_filter	;wreg free
  7686  0113AA                     l17504:
  7687                           
  7688                           ;main.c: 445:      V.calib = 1;
  7689  0113AA  0E01               	movlw	1
  7690  0113AC  0102               	movlb	2	; () banked
  7691  0113AE  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  7692                           
  7693                           ; BSR set to: 2
  7694                           ;main.c: 446:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  7695                           ;stkvar	_inp_index @ sp[(-19)+13]
  7696  0113B0  0EFA               	movlw	-6
  7697  0113B2  50E3               	movf	plusw1,w,c
  7698  0113B4  6EE6               	movwf	postinc1,c
  7699  0113B6  0E00               	movlw	0
  7700  0113B8  6EE6               	movwf	postinc1,c
  7701                           
  7702                           ;stkvar	_i @ sp[(-21)+16]
  7703  0113BA  0EFB               	movlw	-5
  7704  0113BC  50E3               	movf	plusw1,w,c
  7705  0113BE  0D04               	mullw	4
  7706  0113C0  0E81               	movlw	low _C
  7707  0113C2  24F3               	addwf	243,w,c
  7708  0113C4  6ED9               	movwf	fsr2l,c
  7709  0113C6  0E0B               	movlw	high _C
  7710  0113C8  20F4               	addwfc	prodh,w,c
  7711  0113CA  6EDA               	movwf	fsr2h,c
  7712  0113CC  006F FF7B FFE6     	movff	postinc2,postinc1
  7713  0113D2  006F FF7B FFE6     	movff	postinc2,postinc1
  7714  0113D8  006F FF7B FFE6     	movff	postinc2,postinc1
  7715  0113DE  006F FF7B FFE6     	movff	postinc2,postinc1
  7716                           
  7717                           ;stkvar	_i @ sp[(-25)+16]
  7718  0113E4  0EF7               	movlw	-9
  7719  0113E6  50E3               	movf	plusw1,w,c
  7720  0113E8  6EE6               	movwf	postinc1,c
  7721  0113EA  ECF6  F011         	call	_get_raw_result	;wreg free
  7722  0113EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  7723  0113F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7724  0113FA  0E87               	movlw	low STR_54
  7725  0113FC  6EE6               	movwf	postinc1,c
  7726  0113FE  0EFE               	movlw	high STR_54
  7727  011400  6EE6               	movwf	postinc1,c
  7728  011402  0E00               	movlw	0
  7729  011404  6EE6               	movwf	postinc1,c
  7730  011406  0E00               	movlw	0
  7731  011408  6EE6               	movwf	postinc1,c
  7732  01140A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7733  01140E  0060  F0AB  FFE6   	movff	btemp,postinc1
  7734  011414  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7735  01141A  0E0C               	movlw	12
  7736  01141C  6EE6               	movwf	postinc1,c
  7737  01141E  ECE5  F0FE         	call	_sprintf	;wreg free
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;main.c: 447:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  7741                           ;stkvar	_inp_index @ sp[(-19)+13]
  7742  011422  0EFA               	movlw	-6
  7743  011424  50E3               	movf	plusw1,w,c
  7744  011426  6E34               	movwf	(btemp+10)^0,c
  7745  011428  6A35               	clrf	(btemp+11)^0,c
  7746  01142A  0E01               	movlw	1
  7747  01142C  2634               	addwf	(btemp+10)^0,f,c
  7748  01142E  0E00               	movlw	0
  7749  011430  2235               	addwfc	(btemp+11)^0,f,c
  7750  011432  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7751  011438  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7752                           
  7753                           ;stkvar	_j @ sp[(-21)+15]
  7754  01143E  0EFA               	movlw	-6
  7755  011440  50E3               	movf	plusw1,w,c
  7756  011442  0D04               	mullw	4
  7757  011444  0E81               	movlw	low _C
  7758  011446  24F3               	addwf	243,w,c
  7759  011448  6ED9               	movwf	fsr2l,c
  7760  01144A  0E0B               	movlw	high _C
  7761  01144C  20F4               	addwfc	prodh,w,c
  7762  01144E  6EDA               	movwf	fsr2h,c
  7763  011450  006F FF7B FFE6     	movff	postinc2,postinc1
  7764  011456  006F FF7B FFE6     	movff	postinc2,postinc1
  7765  01145C  006F FF7B FFE6     	movff	postinc2,postinc1
  7766  011462  006F FF7B FFE6     	movff	postinc2,postinc1
  7767                           
  7768                           ;stkvar	_j @ sp[(-25)+15]
  7769  011468  0EF6               	movlw	-10
  7770  01146A  50E3               	movf	plusw1,w,c
  7771  01146C  6EE6               	movwf	postinc1,c
  7772  01146E  ECF6  F011         	call	_get_raw_result	;wreg free
  7773  011472  0060  F0AB  FFE6   	movff	btemp,postinc1
  7774  011478  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7775  01147E  0E87               	movlw	low STR_54
  7776  011480  6EE6               	movwf	postinc1,c
  7777  011482  0EFE               	movlw	high STR_54
  7778  011484  6EE6               	movwf	postinc1,c
  7779  011486  0E00               	movlw	0
  7780  011488  6EE6               	movwf	postinc1,c
  7781  01148A  0E01               	movlw	1
  7782  01148C  6EE6               	movwf	postinc1,c
  7783  01148E  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7784  011492  0060  F0AB  FFE6   	movff	btemp,postinc1
  7785  011498  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7786  01149E  0E0C               	movlw	12
  7787  0114A0  6EE6               	movwf	postinc1,c
  7788  0114A2  ECE5  F0FE         	call	_sprintf	;wreg free
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;main.c: 448:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7792                           ;stkvar	_inp_index @ sp[(-19)+13]
  7793  0114A6  0EFA               	movlw	-6
  7794  0114A8  50E3               	movf	plusw1,w,c
  7795  0114AA  6E34               	movwf	(btemp+10)^0,c
  7796  0114AC  6A35               	clrf	(btemp+11)^0,c
  7797  0114AE  0E02               	movlw	2
  7798  0114B0  2634               	addwf	(btemp+10)^0,f,c
  7799  0114B2  0E00               	movlw	0
  7800  0114B4  2235               	addwfc	(btemp+11)^0,f,c
  7801  0114B6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7802  0114BC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7803                           
  7804                           ;stkvar	_k @ sp[(-21)+14]
  7805  0114C2  0EF9               	movlw	-7
  7806  0114C4  50E3               	movf	plusw1,w,c
  7807  0114C6  0D04               	mullw	4
  7808  0114C8  0E81               	movlw	low _C
  7809  0114CA  24F3               	addwf	243,w,c
  7810  0114CC  6ED9               	movwf	fsr2l,c
  7811  0114CE  0E0B               	movlw	high _C
  7812  0114D0  20F4               	addwfc	prodh,w,c
  7813  0114D2  6EDA               	movwf	fsr2h,c
  7814  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  7815  0114DA  006F FF7B FFE6     	movff	postinc2,postinc1
  7816  0114E0  006F FF7B FFE6     	movff	postinc2,postinc1
  7817  0114E6  006F FF7B FFE6     	movff	postinc2,postinc1
  7818                           
  7819                           ;stkvar	_k @ sp[(-25)+14]
  7820  0114EC  0EF5               	movlw	-11
  7821  0114EE  50E3               	movf	plusw1,w,c
  7822  0114F0  6EE6               	movwf	postinc1,c
  7823  0114F2  ECF6  F011         	call	_get_raw_result	;wreg free
  7824  0114F6  0060  F0AB  FFE6   	movff	btemp,postinc1
  7825  0114FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7826  011502  0E87               	movlw	low STR_54
  7827  011504  6EE6               	movwf	postinc1,c
  7828  011506  0EFE               	movlw	high STR_54
  7829  011508  6EE6               	movwf	postinc1,c
  7830  01150A  0E00               	movlw	0
  7831  01150C  6EE6               	movwf	postinc1,c
  7832  01150E  0E02               	movlw	2
  7833  011510  6EE6               	movwf	postinc1,c
  7834  011512  EC2A  F013         	call	_get_vterm_ptr	;wreg free
  7835  011516  0060  F0AB  FFE6   	movff	btemp,postinc1
  7836  01151C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7837  011522  0E0C               	movlw	12
  7838  011524  6EE6               	movwf	postinc1,c
  7839  011526  ECE5  F0FE         	call	_sprintf	;wreg free
  7840                           
  7841                           ;main.c: 449:      break;
  7842  01152A  D016               	goto	l17516
  7843  01152C                     l17514:
  7844  01152C  0101               	movlb	1	; () banked
  7845  01152E  519B               	movf	_H& (0+255),w,b
  7846  011530  6E34               	movwf	(btemp+10)^0,c
  7847  011532  6A35               	clrf	(btemp+11)^0,c
  7848                           
  7849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7850                           ; Switch size 1, requested type "simple"
  7851                           ; Number of cases is 1, Range of values is 0 to 0
  7852                           ; switch strategies available:
  7853                           ; Name         Instructions Cycles
  7854                           ; simple_byte            4     3 (average)
  7855                           ;	Chosen strategy is simple_byte
  7856  011534  5035               	movf	(btemp+11)^0,w,c
  7857  011536  0A00               	xorlw	0	; case 0
  7858  011538  A4D8               	btfss	status,2,c
  7859  01153A  D00E               	goto	l17516
  7860                           
  7861                           ; BSR set to: 1
  7862                           ; Switch size 1, requested type "simple"
  7863                           ; Number of cases is 4, Range of values is 0 to 3
  7864                           ; switch strategies available:
  7865                           ; Name         Instructions Cycles
  7866                           ; simple_byte           13     7 (average)
  7867                           ;	Chosen strategy is simple_byte
  7868  01153C  5034               	movf	(btemp+10)^0,w,c
  7869  01153E  0A00               	xorlw	0	; case 0
  7870  011540  B4D8               	btfsc	status,2,c
  7871  011542  D4CE               	goto	l1499
  7872  011544  0A01               	xorlw	1	; case 1
  7873  011546  B4D8               	btfsc	status,2,c
  7874  011548  EF6D  F086         	goto	l1489
  7875  01154C  0A03               	xorlw	3	; case 2
  7876  01154E  B4D8               	btfsc	status,2,c
  7877  011550  D5DC               	goto	l1500
  7878  011552  0A01               	xorlw	1	; case 3
  7879  011554  B4D8               	btfsc	status,2,c
  7880  011556  D6F8               	goto	l17500
  7881  011558                     l17516:
  7882                           
  7883                           ;main.c: 453:     clear_hid_pflags(&H);
  7884  011558  0E9B               	movlw	low _H
  7885  01155A  6EE6               	movwf	postinc1,c
  7886  01155C  0E01               	movlw	high _H
  7887  01155E  6EE6               	movwf	postinc1,c
  7888  011560  ECC7  F00C         	call	_clear_hid_pflags	;wreg free
  7889                           
  7890                           ;main.c: 455:    StartTimer(TMR_DISPLAY, 250);
  7891  011564  0EFA               	movlw	250
  7892  011566  6EE6               	movwf	postinc1,c
  7893  011568  0E00               	movlw	0
  7894  01156A  6EE6               	movwf	postinc1,c
  7895  01156C  0E0A               	movlw	10
  7896  01156E  6EE6               	movwf	postinc1,c
  7897  011570  EC20  F011         	call	_StartTimer	;wreg free
  7898                           
  7899                           ;main.c: 456:    V.enter = check_enter_button(&H);
  7900  011574  0E9B               	movlw	low _H
  7901  011576  6EE6               	movwf	postinc1,c
  7902  011578  0E01               	movlw	high _H
  7903  01157A  6EE6               	movwf	postinc1,c
  7904  01157C  ECBA  F00B         	call	_check_enter_button	;wreg free
  7905  011580  502A               	movf	btemp^0,w,c
  7906  011582  0102               	movlb	2	; () banked
  7907  011584  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7908                           
  7909                           ; BSR set to: 2
  7910                           ;main.c: 457:    if (V.enter && (H.hid_display != HID_AUX)) {
  7911  011586  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7912  011588  B4D8               	btfsc	status,2,c
  7913  01158A  D013               	goto	l17530
  7914                           
  7915                           ; BSR set to: 2
  7916  01158C  0E03               	movlw	3
  7917  01158E  0101               	movlb	1	; () banked
  7918  011590  199B               	xorwf	_H& (0+255),w,b
  7919  011592  B4D8               	btfsc	status,2,c
  7920  011594  D00E               	goto	l17530
  7921                           
  7922                           ; BSR set to: 1
  7923                           ;main.c: 458:     V.enter = 0;
  7924  011596  0102               	movlb	2	; () banked
  7925  011598  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7926                           
  7927                           ; BSR set to: 2
  7928                           ;main.c: 459:     V.screen = ~V.screen;
  7929  01159A  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7930  01159C  D002               	goto	u17080
  7931  01159E  0E01               	movlw	1
  7932  0115A0  D001               	goto	u17086
  7933  0115A2                     u17080:
  7934  0115A2  0E00               	movlw	0
  7935  0115A4                     u17086:
  7936  0115A4  0AFF               	xorlw	255
  7937  0115A6  6E35               	movwf	(btemp+11)^0,c
  7938  0115A8  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7939  0115AA  1835               	xorwf	(btemp+11)^0,w,c
  7940  0115AC  0BFE               	andlw	-2
  7941  0115AE  1835               	xorwf	(btemp+11)^0,w,c
  7942  0115B0  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7943  0115B2                     l17530:
  7944                           
  7945                           ;main.c: 461:    set_vterm(V.screen);
  7946  0115B2  0102               	movlb	2	; () banked
  7947  0115B4  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7948  0115B6  D002               	goto	u17090
  7949  0115B8  0E01               	movlw	1
  7950  0115BA  D001               	goto	u17096
  7951  0115BC                     u17090:
  7952  0115BC  0E00               	movlw	0
  7953  0115BE                     u17096:
  7954  0115BE  6EE6               	movwf	postinc1,c
  7955  0115C0  EC92  F015         	call	_set_vterm	;wreg free
  7956                           
  7957                           ;main.c: 462:    update_lcd(V.screen);
  7958  0115C4  0102               	movlb	2	; () banked
  7959  0115C6  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7960  0115C8  D002               	goto	u17100
  7961  0115CA  0E01               	movlw	1
  7962  0115CC  D001               	goto	u17106
  7963  0115CE                     u17100:
  7964  0115CE  0E00               	movlw	0
  7965  0115D0                     u17106:
  7966  0115D0  6EE6               	movwf	postinc1,c
  7967  0115D2  EC97  F0F7         	call	_update_lcd	;wreg free
  7968                           
  7969                           ;main.c: 463:    display_history();
  7970  0115D6  ECC5  F0DB         	call	_display_history	;wreg free
  7971                           
  7972                           ;main.c: 465:    wait_lcd_done();
  7973  0115DA  EC5A  F016         	call	_wait_lcd_done	;wreg free
  7974                           
  7975                           ; BSR set to: 61
  7976                           ;main.c: 466:    set_dac_a(3.333);
  7977  0115DE  0EDF               	movlw	223
  7978  0115E0  6EE6               	movwf	postinc1,c
  7979  0115E2  0E4F               	movlw	79
  7980  0115E4  6EE6               	movwf	postinc1,c
  7981  0115E6  0E55               	movlw	85
  7982  0115E8  6EE6               	movwf	postinc1,c
  7983  0115EA  0E40               	movlw	64
  7984  0115EC  6EE6               	movwf	postinc1,c
  7985  0115EE  EC7D  F012         	call	_set_dac_a	;wreg free
  7986                           
  7987                           ;main.c: 467:    set_dac_b(6.666);
  7988  0115F2  0EDF               	movlw	223
  7989  0115F4  6EE6               	movwf	postinc1,c
  7990  0115F6  0E4F               	movlw	79
  7991  0115F8  6EE6               	movwf	postinc1,c
  7992  0115FA  0ED5               	movlw	213
  7993  0115FC  6EE6               	movwf	postinc1,c
  7994  0115FE  0E40               	movlw	64
  7995  011600  6EE6               	movwf	postinc1,c
  7996  011602  EC63  F012         	call	_set_dac_b	;wreg free
  7997                           
  7998                           ;main.c: 468:    set_dac();
  7999  011606  EC61  F005         	call	_set_dac	;wreg free
  8000  01160A                     l17544:
  8001                           
  8002                           ;main.c: 474:   check_help(V.flipper);
  8003  01160A  0102               	movlb	2	; () banked
  8004  01160C  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  8005  01160E  6EE6               	movwf	postinc1,c
  8006  011610  EC92  F0EB         	call	_check_help	;wreg free
  8007                           
  8008                           ;main.c: 476:   if (V.enter) {
  8009  011614  0102               	movlb	2	; () banked
  8010  011616  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  8011  011618  B4D8               	btfsc	status,2,c
  8012  01161A  D062               	goto	l1505
  8013                           
  8014                           ; BSR set to: 2
  8015                           ;main.c: 477:    V.enter = 0;
  8016  01161C  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  8017                           
  8018                           ;main.c: 478:    V.calib = 0;
  8019  01161E  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  8020                           
  8021                           ; BSR set to: 2
  8022                           ;main.c: 479:    inp_index += 3;
  8023                           ;stkvar	_inp_index @ sp[(-19)+13]
  8024  011620  0EFA               	movlw	-6
  8025  011622  006F FF8C  F02A    	movff	plusw1,btemp
  8026  011628  0E03               	movlw	3
  8027  01162A  262A               	addwf	btemp^0,f,c
  8028  01162C  0EFA               	movlw	-6
  8029  01162E  0060  F0AB  FFE3   	movff	btemp,plusw1
  8030                           
  8031                           ;main.c: 480:    if (inp_index > 9)
  8032                           ;stkvar	_inp_index @ sp[(-19)+13]
  8033  011634  0EFA               	movlw	-6
  8034  011636  006F FF8C  F02A    	movff	plusw1,btemp
  8035  01163C  0E09               	movlw	9
  8036  01163E  642A               	cpfsgt	btemp^0,c
  8037  011640  D03A               	goto	l17572
  8038                           
  8039                           ; BSR set to: 2
  8040                           ;main.c: 481:     inp_index = 0;
  8041                           ;stkvar	_inp_index @ sp[(-19)+13]
  8042  011642  0EFA               	movlw	-6
  8043  011644  6AE3               	clrf	plusw1,c
  8044  011646  D037               	goto	l17572
  8045  011648                     l17554:
  8046                           
  8047                           ; BSR set to: 2
  8048                           ;main.c: 484:     i = C_BATT;
  8049                           ;stkvar	_i @ sp[(-19)+16]
  8050  011648  0EFD               	movlw	-3
  8051  01164A  6AE3               	clrf	plusw1,c
  8052                           
  8053                           ; BSR set to: 2
  8054                           ;main.c: 485:     j = C_PV;
  8055                           ;stkvar	_j @ sp[(-19)+15]
  8056  01164C  0EFC               	movlw	-4
  8057  01164E  6AE3               	clrf	plusw1,c
  8058  011650  2AE3               	incf	plusw1,f,c
  8059                           
  8060                           ; BSR set to: 2
  8061                           ;main.c: 486:     k = V_CC;
  8062                           ;stkvar	_k @ sp[(-19)+14]
  8063  011652  0EFB               	movlw	-5
  8064  011654  6AE3               	clrf	plusw1,c
  8065  011656  82E3               	bsf	plusw1,1,c
  8066                           
  8067                           ;main.c: 487:     break;
  8068  011658  D043               	goto	l1505
  8069  01165A                     l17560:
  8070                           
  8071                           ; BSR set to: 2
  8072                           ;main.c: 489:     i = V_BAT;
  8073                           ;stkvar	_i @ sp[(-19)+16]
  8074  01165A  0EFD               	movlw	-3
  8075  01165C  6AE3               	clrf	plusw1,c
  8076  01165E  84E3               	bsf	plusw1,2,c
  8077                           
  8078                           ;main.c: 490:     j = V_PV;
  8079                           ;stkvar	_j @ sp[(-19)+15]
  8080  011660  0EFC               	movlw	-4
  8081  011662  6AE3               	clrf	plusw1,c
  8082  011664  80E3               	bsf	plusw1,0,c
  8083  011666  84E3               	bsf	plusw1,2,c	;indir
  8084                           
  8085                           ;main.c: 491:     k = V_CBUS;
  8086                           ;stkvar	_k @ sp[(-19)+14]
  8087  011668  0EFB               	movlw	-5
  8088  01166A  6AE3               	clrf	plusw1,c
  8089  01166C  82E3               	bsf	plusw1,1,c
  8090  01166E  84E3               	bsf	plusw1,2,c	;indir
  8091                           
  8092                           ;main.c: 492:     break;
  8093  011670  D037               	goto	l1505
  8094  011672                     l17562:
  8095                           
  8096                           ; BSR set to: 2
  8097                           ;main.c: 494:     i = V_BBAT;
  8098                           ;stkvar	_i @ sp[(-19)+16]
  8099  011672  0EFD               	movlw	-3
  8100  011674  6AE3               	clrf	plusw1,c
  8101  011676  82E3               	bsf	plusw1,1,c
  8102  011678  86E3               	bsf	plusw1,3,c	;indir
  8103                           
  8104                           ; BSR set to: 2
  8105                           ;main.c: 495:     j = V_TEMP;
  8106  01167A  0E0B               	movlw	11
  8107  01167C  6E35               	movwf	(btemp+11)^0,c
  8108                           
  8109                           ;stkvar	_j @ sp[(-19)+15]
  8110  01167E  0EFC               	movlw	-4
  8111  011680  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8112                           
  8113                           ; BSR set to: 2
  8114                           ;main.c: 496:     k = V_INVERTER;
  8115                           ;stkvar	_k @ sp[(-19)+14]
  8116  011686  0EFB               	movlw	-5
  8117  011688  6AE3               	clrf	plusw1,c
  8118  01168A  84E3               	bsf	plusw1,2,c
  8119  01168C  86E3               	bsf	plusw1,3,c	;indir
  8120                           
  8121                           ;main.c: 497:     break;
  8122  01168E  D028               	goto	l1505
  8123  011690                     l17568:
  8124                           
  8125                           ; BSR set to: 2
  8126                           ;main.c: 499:     i = V_LIGHT_SENSOR;
  8127  011690  0E0D               	movlw	13
  8128  011692  6E35               	movwf	(btemp+11)^0,c
  8129                           
  8130                           ;stkvar	_i @ sp[(-19)+16]
  8131  011694  0EFD               	movlw	-3
  8132  011696  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8133                           
  8134                           ;main.c: 500:     j = V_LIGHT_SENSOR;
  8135  01169C  0E0D               	movlw	13
  8136  01169E  6E35               	movwf	(btemp+11)^0,c
  8137                           
  8138                           ;stkvar	_j @ sp[(-19)+15]
  8139  0116A0  0EFC               	movlw	-4
  8140  0116A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8141                           
  8142                           ;main.c: 501:     k = V_LIGHT_SENSOR;
  8143  0116A8  0E0D               	movlw	13
  8144  0116AA  6E35               	movwf	(btemp+11)^0,c
  8145                           
  8146                           ;stkvar	_k @ sp[(-19)+14]
  8147  0116AC  0EFB               	movlw	-5
  8148  0116AE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8149                           
  8150                           ;main.c: 502:     break;
  8151  0116B4  D015               	goto	l1505
  8152  0116B6                     l17572:
  8153                           
  8154                           ; BSR set to: 2
  8155                           ;stkvar	_inp_index @ sp[(-19)+13]
  8156  0116B6  0EFA               	movlw	-6
  8157  0116B8  50E3               	movf	plusw1,w,c
  8158  0116BA  6E34               	movwf	(btemp+10)^0,c
  8159  0116BC  6A35               	clrf	(btemp+11)^0,c
  8160                           
  8161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8162                           ; Switch size 1, requested type "simple"
  8163                           ; Number of cases is 1, Range of values is 0 to 0
  8164                           ; switch strategies available:
  8165                           ; Name         Instructions Cycles
  8166                           ; simple_byte            4     3 (average)
  8167                           ;	Chosen strategy is simple_byte
  8168  0116BE  5035               	movf	(btemp+11)^0,w,c
  8169  0116C0  0A00               	xorlw	0	; case 0
  8170  0116C2  A4D8               	btfss	status,2,c
  8171  0116C4  D00D               	goto	l1505
  8172                           
  8173                           ; BSR set to: 2
  8174                           ; Switch size 1, requested type "simple"
  8175                           ; Number of cases is 4, Range of values is 0 to 9
  8176                           ; switch strategies available:
  8177                           ; Name         Instructions Cycles
  8178                           ; simple_byte           13     7 (average)
  8179                           ;	Chosen strategy is simple_byte
  8180  0116C6  5034               	movf	(btemp+10)^0,w,c
  8181  0116C8  0A00               	xorlw	0	; case 0
  8182  0116CA  B4D8               	btfsc	status,2,c
  8183  0116CC  D7BD               	goto	l17554
  8184  0116CE  0A03               	xorlw	3	; case 3
  8185  0116D0  B4D8               	btfsc	status,2,c
  8186  0116D2  D7C3               	goto	l17560
  8187  0116D4  0A05               	xorlw	5	; case 6
  8188  0116D6  B4D8               	btfsc	status,2,c
  8189  0116D8  D7CC               	goto	l17562
  8190  0116DA  0A0F               	xorlw	15	; case 9
  8191  0116DC  B4D8               	btfsc	status,2,c
  8192  0116DE  D7D8               	goto	l17568
  8193  0116E0                     l1505:
  8194                           
  8195                           ; BSR set to: 2
  8196                           ;main.c: 511:   if (V.set_sequ) {
  8197  0116E0  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  8198  0116E2  EFB6  F084         	goto	l17406
  8199                           
  8200                           ; BSR set to: 2
  8201                           ;main.c: 512:    if (TimerDone(TMR_INFO)) {
  8202  0116E6  0E07               	movlw	7
  8203  0116E8  6EE6               	movwf	postinc1,c
  8204  0116EA  ECAD  F013         	call	_TimerDone	;wreg free
  8205  0116EE  502A               	movf	btemp^0,w,c
  8206  0116F0  B4D8               	btfsc	status,2,c
  8207  0116F2  D00C               	goto	l17582
  8208                           
  8209                           ;main.c: 513:     V.set_sequ = 0;
  8210  0116F4  0102               	movlb	2	; () banked
  8211  0116F6  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  8212                           
  8213                           ; BSR set to: 2
  8214                           ;main.c: 514:     set_vterm(0);
  8215  0116F8  0E00               	movlw	0
  8216  0116FA  6EE6               	movwf	postinc1,c
  8217  0116FC  EC92  F015         	call	_set_vterm	;wreg free
  8218                           
  8219                           ;main.c: 515:     update_lcd(0);
  8220  011700  0E00               	movlw	0
  8221  011702  6EE6               	movwf	postinc1,c
  8222  011704  EC97  F0F7         	call	_update_lcd	;wreg free
  8223                           
  8224                           ;main.c: 516:    } else {
  8225  011708  EFB6  F084         	goto	l17406
  8226  01170C                     l17582:
  8227                           
  8228                           ;main.c: 518:     set_vterm(2);
  8229  01170C  0E02               	movlw	2
  8230  01170E  6EE6               	movwf	postinc1,c
  8231  011710  EC92  F015         	call	_set_vterm	;wreg free
  8232                           
  8233                           ;main.c: 519:     update_lcd(2);
  8234  011714  0E02               	movlw	2
  8235  011716  6EE6               	movwf	postinc1,c
  8236  011718  EC97  F0F7         	call	_update_lcd	;wreg free
  8237  01171C  EFB6  F084         	goto	l17406
  8238  011720                     __end_of_main:
  8239                           	opt callstack 0
  8240                           
  8241 ;; *************** function _update_hist_data *****************
  8242 ;; Defined at:
  8243 ;;		line 466 in file "daq.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;  mode            1  [STACK] const _Bool 
  8246 ;;  hist            2  [STACK] PTR volatile struct hist
  8247 ;;		 -> C.hist(97), C(320), 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;		None
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  1  [STACK] _Bool 
  8252 ;; Registers used:
  8253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  8254 ;; Tracked objects:
  8255 ;;		On entry : 7/1
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8263 ;;Total ram usage:        0 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:   15
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_main
  8270 ;; This function uses a reentrant model
  8271 ;;
  8272                           
  8273                           	psect	text1
  8274  001606                     __ptext1:
  8275                           	opt callstack 0
  8276  001606                     _update_hist_data:
  8277                           	opt callstack 15
  8278                           
  8279                           ;daq.c: 466: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          67: {;daq.c: 468:  if (hist == ((void*)0))
  8280                           ;stkvar	_hist @ sp[(0)+-3]
  8281                           
  8282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8283                           ;incstack = 0
  8284  001606  0EFD               	movlw	-3
  8285  001608  006F FF8C  F02A    	movff	plusw1,btemp
  8286  00160E  0EFE               	movlw	-2
  8287  001610  50E3               	movf	plusw1,w,c
  8288  001612  102A               	iorwf	btemp^0,w,c
  8289  001614  A4D8               	btfss	status,2,c
  8290  001616  D002               	goto	l14202
  8291  001618                     u13380:
  8292                           
  8293                           ;daq.c: 469:   return 0;
  8294  001618  0E00               	movlw	0
  8295  00161A  D01A               	goto	L3
  8296  00161C                     l14202:
  8297                           
  8298                           ;daq.c: 471:  if (mode) {
  8299                           ;stkvar	_mode @ sp[(0)+-1]
  8300  00161C  0EFF               	movlw	-1
  8301  00161E  50E3               	movf	plusw1,w,c
  8302  001620  B4D8               	btfsc	status,2,c
  8303  001622  D018               	goto	l14214
  8304                           
  8305                           ;daq.c: 472:   if (R.hist_save) {
  8306  001624  0101               	movlb	1	; () banked
  8307  001626  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  8308  001628  D7F7               	goto	u13380
  8309                           
  8310                           ; BSR set to: 1
  8311                           ;daq.c: 473:    *hist = R.H;
  8312  00162A  EE20  F136         	lfsr	2,_R+54	;volatile
  8313                           
  8314                           ;stkvar	_hist @ sp[(0)+-3]
  8315  00162E  0EFD               	movlw	-3
  8316  001630  006F FF8F FFE9     	movff	plusw1,fsr0l
  8317  001636  0EFE               	movlw	-2
  8318  001638  006F FF8F FFEA     	movff	plusw1,fsr0h
  8319  00163E  0E60               	movlw	96
  8320  001640                     u13411:
  8321  001640  006F FF6F FFEB     	movff	plusw2,plusw0
  8322  001646  06E8               	decf	wreg,f,c
  8323  001648  E2FB               	bc	u13411
  8324                           
  8325                           ; BSR set to: 1
  8326                           ;daq.c: 474:    if (R.hist_update) {
  8327  00164A  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  8328  00164C  D7E5               	goto	u13380
  8329                           
  8330                           ; BSR set to: 1
  8331                           ;daq.c: 475:     return 1;
  8332  00164E  0E01               	movlw	1
  8333  001650                     L3:
  8334  001650  6E2A               	movwf	btemp^0,c
  8335  001652  D013               	goto	l2104
  8336  001654                     l14214:
  8337                           
  8338                           ;daq.c: 479:   R.H = *hist;
  8339                           ;stkvar	_hist @ sp[(0)+-3]
  8340  001654  0EFD               	movlw	-3
  8341  001656  006F FF8F FFD9     	movff	plusw1,fsr2l
  8342  00165C  0EFE               	movlw	-2
  8343  00165E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8344  001664  EE00  F136         	lfsr	0,_R+54	;volatile
  8345  001668  0E60               	movlw	96
  8346  00166A                     u13431:
  8347  00166A  006F FF6F FFEB     	movff	plusw2,plusw0
  8348  001670  06E8               	decf	wreg,f,c
  8349  001672  E2FB               	bc	u13431
  8350                           
  8351                           ;daq.c: 480:   R.hist_save = 1;
  8352  001674  0101               	movlb	1	; () banked
  8353  001676  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  8354  001678  D7CF               	goto	u13380
  8355  00167A                     l2104:
  8356                           
  8357                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  8358  00167A  52E5               	movf	postdec1,f,c
  8359  00167C  52E5               	movf	postdec1,f,c
  8360  00167E  52E5               	movf	postdec1,f,c
  8361  001680  0012               	return		;funcret
  8362  001682                     __end_of_update_hist_data:
  8363                           	opt callstack 0
  8364                           
  8365 ;; *************** function _update_cal_data *****************
  8366 ;; Defined at:
  8367 ;;		line 447 in file "daq.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;		None
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;		None
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1  [STACK] void 
  8374 ;; Registers used:
  8375 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/39
  8378 ;;		On exit  : 3F/1
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8385 ;;Total ram usage:        0 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; Hardware stack levels required when called:   15
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		_main
  8392 ;; This function uses a reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text2
  8396  001DB2                     __ptext2:
  8397                           	opt callstack 0
  8398  001DB2                     _update_cal_data:
  8399                           	opt callstack 15
  8400                           
  8401                           ;daq.c: 449:  R = r_cal;
  8402                           
  8403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8404                           ;incstack = 0
  8405  001DB2  EE21  F040         	lfsr	2,_r_cal
  8406  001DB6  EE00  F100         	lfsr	0,_R	;volatile
  8407  001DBA  0E9A               	movlw	154
  8408  001DBC                     u13351:
  8409  001DBC  006F FF7B FFEE     	movff	postinc2,postinc0
  8410  001DC2  06E8               	decf	wreg,f,c
  8411  001DC4  E2FB               	bc	u13351
  8412  001DC6  0E9B               	movlw	155
  8413  001DC8  5ED9               	subwf	fsr2l,f,c
  8414  001DCA  5EE9               	subwf	fsr0l,f,c
  8415                           
  8416                           ;daq.c: 450:  if (!R.c_zero_cal) {
  8417  001DCC  0101               	movlb	1	; () banked
  8418  001DCE  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  8419  001DD0  D008               	goto	l14192
  8420                           
  8421                           ; BSR set to: 1
  8422                           ;daq.c: 451:   R.n_offset[0] = 3938;
  8423  001DD2  0E0F               	movlw	15
  8424  001DD4  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  8425  001DD6  0E62               	movlw	98
  8426  001DD8  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  8427                           
  8428                           ;daq.c: 452:   R.n_offset[1] = 4004;
  8429  001DDA  0E0F               	movlw	15
  8430  001DDC  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  8431  001DDE  0EA4               	movlw	164
  8432  001DE0  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  8433  001DE2                     l14192:
  8434                           
  8435                           ; BSR set to: 1
  8436                           ;daq.c: 456:  if (!R.c_scale_cal) {
  8437  001DE2  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  8438  001DE4  0012               	return	
  8439                           
  8440                           ; BSR set to: 1
  8441                           ;daq.c: 457:   R.n_scalar[0] = 0.0862000;
  8442  001DE6  0EA0               	movlw	160
  8443  001DE8  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  8444  001DEA  0E89               	movlw	137
  8445  001DEC  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  8446  001DEE  0EB0               	movlw	176
  8447  001DF0  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  8448  001DF2  0E3D               	movlw	61
  8449  001DF4  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8450                           
  8451                           ;daq.c: 458:   R.n_scalar[1] = 0.0361010;
  8452  001DF6  0EA4               	movlw	164
  8453  001DF8  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8454  001DFA  0EDE               	movlw	222
  8455  001DFC  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  8456  001DFE  0E13               	movlw	19
  8457  001E00  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  8458  001E02  0E3D               	movlw	61
  8459  001E04  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  8460                           
  8461                           ; BSR set to: 1
  8462                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  8463  001E06  0012               	return		;funcret
  8464  001E08                     __end_of_update_cal_data:
  8465                           	opt callstack 0
  8466                           
  8467 ;; *************** function _static_soc *****************
  8468 ;; Defined at:
  8469 ;;		line 118 in file "mbmc.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;		None
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;		None
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1  [STACK] void 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr2l, fsr2h
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/1
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8487 ;;Total ram usage:        0 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:   15
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_main
  8494 ;; This function uses a reentrant model
  8495 ;;
  8496                           
  8497                           	psect	text3
  8498  001CA4                     __ptext3:
  8499                           	opt callstack 0
  8500  001CA4                     _static_soc:
  8501                           	opt callstack 15
  8502                           
  8503                           ;mbmc.c: 120:  C.runtime = 120;
  8504                           
  8505                           ; BSR set to: 1
  8506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8507                           ;incstack = 0
  8508  001CA4  0E78               	movlw	120
  8509  001CA6  006F FFA0  FC35    	movff	wreg,_C+180	;volatile
  8510  001CAC  0E00               	movlw	0
  8511  001CAE  006F FFA0  FC36    	movff	wreg,_C+181	;volatile
  8512                           
  8513                           ;mbmc.c: 121:  C.soc = 100;
  8514  001CB4  0E64               	movlw	100
  8515  001CB6  006F FFA0  FC37    	movff	wreg,_C+182	;volatile
  8516  001CBC  0E00               	movlw	0
  8517  001CBE  006F FFA0  FC38    	movff	wreg,_C+183	;volatile
  8518                           
  8519                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  8520  001CC4  EE23  F00D         	lfsr	2,_C+140	;volatile
  8521  001CC8  006F FF78  FC11    	movff	postinc2,_C+144	;volatile
  8522  001CCE  006F FF78  FC12    	movff	postinc2,_C+145	;volatile
  8523  001CD4  006F FF78  FC13    	movff	postinc2,_C+146	;volatile
  8524  001CDA  006F FF74  FC14    	movff	postdec2,_C+147	;volatile
  8525                           
  8526                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  8527  001CE0  EE23  F011         	lfsr	2,_C+144	;volatile
  8528  001CE4  006F FF78  FC1D    	movff	postinc2,_C+156	;volatile
  8529  001CEA  006F FF78  FC1E    	movff	postinc2,_C+157	;volatile
  8530  001CF0  006F FF78  FC1F    	movff	postinc2,_C+158	;volatile
  8531  001CF6  006F FF74  FC20    	movff	postdec2,_C+159	;volatile
  8532                           
  8533                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8534  001CFC  0012               	return		;funcret
  8535  001CFE                     __end_of_static_soc:
  8536                           	opt callstack 0
  8537                           
  8538 ;; *************** function _start_switch_handler *****************
  8539 ;; Defined at:
  8540 ;;		line 125 in file "dio.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;		None
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;		None
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  1  [STACK] void 
  8547 ;; Registers used:
  8548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 3F/39
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8558 ;;Total ram usage:        0 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:   16
  8561 ;; This function calls:
  8562 ;;		_INT1_SetInterruptHandler
  8563 ;; This function is called by:
  8564 ;;		_main
  8565 ;; This function uses a reentrant model
  8566 ;;
  8567                           
  8568                           	psect	text4
  8569  002AA8                     __ptext4:
  8570                           	opt callstack 0
  8571  002AA8                     _start_switch_handler:
  8572                           	opt callstack 14
  8573                           
  8574                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  8575                           
  8576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8577                           ;incstack = 0
  8578  002AA8  0139               	movlb	57	; () banked
  8579  002AAA  9195               	bcf	149,0,b	;volatile
  8580                           
  8581                           ; BSR set to: 57
  8582                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  8583  002AAC  0E8E               	movlw	low _switch_handler
  8584  002AAE  6EE6               	movwf	postinc1,c
  8585  002AB0  0EF4               	movlw	high _switch_handler
  8586  002AB2  6EE6               	movwf	postinc1,c
  8587  002AB4  0E01               	movlw	low (_switch_handler shr (0+16))
  8588  002AB6  6EE6               	movwf	postinc1,c
  8589  002AB8  EC39  F014         	call	_INT1_SetInterruptHandler	;wreg free
  8590                           
  8591                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  8592  002ABC  0E02               	movlw	2
  8593  002ABE  0101               	movlb	1	; () banked
  8594  002AC0  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  8595                           
  8596                           ; BSR set to: 1
  8597                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  8598  002AC2  0139               	movlb	57	; () banked
  8599  002AC4  8195               	bsf	149,0,b	;volatile
  8600                           
  8601                           ; BSR set to: 57
  8602                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  8603  002AC6  0012               	return		;funcret
  8604  002AC8                     __end_of_start_switch_handler:
  8605                           	opt callstack 0
  8606                           
  8607 ;; *************** function _srand *****************
  8608 ;; Defined at:
  8609 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  s               2  [STACK] unsigned int 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;		None
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1  [STACK] void 
  8616 ;; Registers used:
  8617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/3D
  8620 ;;		On exit  : 3F/2
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8627 ;;Total ram usage:        0 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:   15
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_main
  8634 ;; This function uses a reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text5
  8638  002492                     __ptext5:
  8639                           	opt callstack 0
  8640  002492                     _srand:
  8641                           	opt callstack 15
  8642                           
  8643                           ;stkvar	_s @ sp[(0)+-2]
  8644                           
  8645                           ; BSR set to: 57
  8646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8647                           ;incstack = 0
  8648  002492  0EFE               	movlw	-2
  8649  002494  50E3               	movf	plusw1,w,c
  8650  002496  0FFF               	addlw	255
  8651  002498  6E34               	movwf	(btemp+10)^0,c
  8652  00249A  0EFF               	movlw	-1
  8653  00249C  006F FF8C  F035    	movff	plusw1,btemp+11
  8654  0024A2  0EFF               	movlw	255
  8655  0024A4  2235               	addwfc	(btemp+11)^0,f,c
  8656  0024A6  0060  F0D0  F2F6   	movff	btemp+10,_seed
  8657  0024AC  0060  F0D4  F2F7   	movff	btemp+11,_seed+1
  8658  0024B2  0102               	movlb	2	; () banked
  8659  0024B4  6BF8               	clrf	(_seed+2)& (0+255),b
  8660  0024B6  6BF9               	clrf	(_seed+3)& (0+255),b
  8661  0024B8  6BFA               	clrf	(_seed+4)& (0+255),b
  8662  0024BA  6BFB               	clrf	(_seed+5)& (0+255),b
  8663  0024BC  6BFC               	clrf	(_seed+6)& (0+255),b
  8664  0024BE  6BFD               	clrf	(_seed+7)& (0+255),b
  8665                           
  8666                           ; BSR set to: 2
  8667                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  8668  0024C0  52E5               	movf	postdec1,f,c
  8669  0024C2  52E5               	movf	postdec1,f,c
  8670  0024C4  0012               	return		;funcret
  8671  0024C6                     __end_of_srand:
  8672                           	opt callstack 0
  8673                           
  8674 ;; *************** function _set_time *****************
  8675 ;; Defined at:
  8676 ;;		line 263 in file "mbmc.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  t               8  [STACK] long long 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1  [STACK] void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  8685 ;; Tracked objects:
  8686 ;;		On entry : 3F/39
  8687 ;;		On exit  : 3F/39
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8694 ;;Total ram usage:        0 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:   15
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_main
  8701 ;; This function uses a reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text6
  8705  01FFCA                     __ptext6:
  8706                           	opt callstack 0
  8707  01FFCA                     _set_time:
  8708                           	opt callstack 15
  8709                           
  8710                           ;mbmc.c: 263: void set_time(time_t t);mbmc.c: 264: {;mbmc.c: 265:  PIE8bits.TMR5IE = 0;
  8711                           
  8712                           ; BSR set to: 2
  8713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8714                           ;incstack = 0
  8715  01FFCA  0139               	movlb	57	; () banked
  8716  01FFCC  9D98               	bcf	152,6,b	;volatile
  8717                           
  8718                           ; BSR set to: 57
  8719                           ;mbmc.c: 266:  V.ticks = t;
  8720                           ;stkvar	_t @ sp[(0)+-8]
  8721  01FFCE  50E1               	movf	fsr1l,w,c
  8722  01FFD0  0FF8               	addlw	-8
  8723  01FFD2  6ED9               	movwf	fsr2l,c
  8724  01FFD4  50E2               	movf	fsr1h,w,c
  8725  01FFD6  6EDA               	movwf	fsr2h,c
  8726  01FFD8  0EFF               	movlw	255
  8727  01FFDA  22DA               	addwfc	fsr2h,f,c
  8728  01FFDC  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  8729  01FFE2  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  8730  01FFE8  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  8731  01FFEE  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  8732                           
  8733                           ; BSR set to: 57
  8734                           ;mbmc.c: 267:  PIE8bits.TMR5IE = 1;
  8735  01FFF4  8D98               	bsf	152,6,b	;volatile
  8736                           
  8737                           ; BSR set to: 57
  8738                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  8739  01FFF6  0EF8               	movlw	248
  8740  01FFF8  26E1               	addwf	fsr1l,f,c
  8741  01FFFA  0EFF               	movlw	255
  8742  01FFFC  22E2               	addwfc	fsr1h,f,c
  8743  01FFFE  0012               	return		;funcret
  8744  020000                     __end_of_set_time:
  8745                           	opt callstack 0
  8746                           
  8747 ;; *************** function _set_hist_flag *****************
  8748 ;; Defined at:
  8749 ;;		line 485 in file "daq.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;		None
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;		None
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  1  [STACK] void 
  8756 ;; Registers used:
  8757 ;;		None
  8758 ;; Tracked objects:
  8759 ;;		On entry : 3F/39
  8760 ;;		On exit  : 3F/1
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8767 ;;Total ram usage:        0 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:   15
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_main
  8774 ;; This function uses a reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text7
  8778  002D5E                     __ptext7:
  8779                           	opt callstack 0
  8780  002D5E                     _set_hist_flag:
  8781                           	opt callstack 15
  8782                           
  8783                           ;daq.c: 487:  R.hist_update = 1;
  8784                           
  8785                           ; BSR set to: 57
  8786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8787                           ;incstack = 0
  8788  002D5E  0101               	movlb	1	; () banked
  8789  002D60  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  8790                           
  8791                           ; BSR set to: 1
  8792                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8793  002D62  0012               	return		;funcret
  8794  002D64                     __end_of_set_hist_flag:
  8795                           	opt callstack 0
  8796                           
  8797 ;; *************** function _set_dac_b *****************
  8798 ;; Defined at:
  8799 ;;		line 318 in file "daq.c"
  8800 ;; Parameters:    Size  Location     Type
  8801 ;;  voltage         4  [STACK] const float 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;		None
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  2  [STACK] unsigned short 
  8806 ;; Registers used:
  8807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/3D
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8817 ;;Total ram usage:        0 bytes
  8818 ;; Hardware stack levels used:    1
  8819 ;; Hardware stack levels required when called:   17
  8820 ;; This function calls:
  8821 ;;		_convert_dac_raw
  8822 ;; This function is called by:
  8823 ;;		_main
  8824 ;; This function uses a reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text8
  8828  0024C6                     __ptext8:
  8829                           	opt callstack 0
  8830  0024C6                     _set_dac_b:
  8831                           	opt callstack 13
  8832                           
  8833                           ;daq.c: 318: uint16_t set_dac_b(const float voltage);daq.c: 319: {;daq.c: 320:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8834                           ;stkvar	_voltage @ sp[(0)+-4]
  8835                           
  8836                           ; BSR set to: 1
  8837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8838                           ;incstack = 0
  8839  0024C6  0EFC               	movlw	-4
  8840  0024C8  006F FF8F FFE6     	movff	plusw1,postinc1
  8841  0024CE  006F FF8F FFE6     	movff	plusw1,postinc1
  8842  0024D4  006F FF8F FFE6     	movff	plusw1,postinc1
  8843  0024DA  006F FF8F FFE6     	movff	plusw1,postinc1
  8844  0024E0  EC43  F0FD         	call	_convert_dac_raw	;wreg free
  8845  0024E4  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8846  0024EA  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8847                           
  8848                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8849                           
  8850                           ;daq.c: 321:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8851  0024F0  52E5               	movf	postdec1,f,c
  8852  0024F2  52E5               	movf	postdec1,f,c
  8853  0024F4  52E5               	movf	postdec1,f,c
  8854  0024F6  52E5               	movf	postdec1,f,c
  8855  0024F8  0012               	return		;funcret
  8856  0024FA                     __end_of_set_dac_b:
  8857                           	opt callstack 0
  8858                           
  8859 ;; *************** function _set_dac_a *****************
  8860 ;; Defined at:
  8861 ;;		line 309 in file "daq.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  voltage         4  [STACK] const float 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  2  [STACK] unsigned short 
  8868 ;; Registers used:
  8869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8870 ;; Tracked objects:
  8871 ;;		On entry : 3F/3D
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8879 ;;Total ram usage:        0 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:   17
  8882 ;; This function calls:
  8883 ;;		_convert_dac_raw
  8884 ;; This function is called by:
  8885 ;;		_main
  8886 ;; This function uses a reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text9
  8890  0024FA                     __ptext9:
  8891                           	opt callstack 0
  8892  0024FA                     _set_dac_a:
  8893                           	opt callstack 13
  8894                           
  8895                           ;daq.c: 309: uint16_t set_dac_a(const float voltage);daq.c: 310: {;daq.c: 311:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8896                           ;stkvar	_voltage @ sp[(0)+-4]
  8897                           
  8898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8899                           ;incstack = 0
  8900  0024FA  0EFC               	movlw	-4
  8901  0024FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8902  002502  006F FF8F FFE6     	movff	plusw1,postinc1
  8903  002508  006F FF8F FFE6     	movff	plusw1,postinc1
  8904  00250E  006F FF8F FFE6     	movff	plusw1,postinc1
  8905  002514  EC43  F0FD         	call	_convert_dac_raw	;wreg free
  8906  002518  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8907  00251E  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8908                           
  8909                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8910                           
  8911                           ;daq.c: 312:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8912  002524  52E5               	movf	postdec1,f,c
  8913  002526  52E5               	movf	postdec1,f,c
  8914  002528  52E5               	movf	postdec1,f,c
  8915  00252A  52E5               	movf	postdec1,f,c
  8916  00252C  0012               	return		;funcret
  8917  00252E                     __end_of_set_dac_a:
  8918                           	opt callstack 0
  8919                           
  8920 ;; *************** function _convert_dac_raw *****************
  8921 ;; Defined at:
  8922 ;;		line 291 in file "daq.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  voltage         4  [STACK] float 
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;		None
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  2  [STACK] unsigned short 
  8929 ;; Registers used:
  8930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/3D
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8940 ;;Total ram usage:        0 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:   16
  8943 ;; This function calls:
  8944 ;;		___fldiv
  8945 ;;		___flge
  8946 ;;		___fltol
  8947 ;; This function is called by:
  8948 ;;		_set_dac_a
  8949 ;;		_set_dac_b
  8950 ;; This function uses a reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text10
  8954  01FA86                     __ptext10:
  8955                           	opt callstack 0
  8956  01FA86                     _convert_dac_raw:
  8957                           	opt callstack 13
  8958                           
  8959                           ;daq.c: 291: static uint16_t convert_dac_raw(float voltage);daq.c: 292: {;daq.c: 296:  i
      +                          f (voltage < 0.001)
  8960                           
  8961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8962                           ;incstack = 0
  8963  01FA86  0E6F               	movlw	111
  8964  01FA88  6EE6               	movwf	postinc1,c
  8965  01FA8A  0E12               	movlw	18
  8966  01FA8C  6EE6               	movwf	postinc1,c
  8967  01FA8E  0E83               	movlw	131
  8968  01FA90  6EE6               	movwf	postinc1,c
  8969  01FA92  0E3A               	movlw	58
  8970  01FA94  6EE6               	movwf	postinc1,c
  8971                           
  8972                           ;stkvar	_voltage @ sp[(-4)+-4]
  8973  01FA96  0EF8               	movlw	-8
  8974  01FA98  006F FF8F FFE6     	movff	plusw1,postinc1
  8975  01FA9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8976  01FAA4  006F FF8F FFE6     	movff	plusw1,postinc1
  8977  01FAAA  006F FF8F FFE6     	movff	plusw1,postinc1
  8978  01FAB0  EC35  F0F6         	call	___flge	;wreg free
  8979  01FAB4  B02A               	btfsc	btemp& (0+255),0,c
  8980  01FAB6  D018               	goto	l13726
  8981                           
  8982                           ;daq.c: 297:   voltage = 0.001;
  8983  01FAB8  0E6F               	movlw	111
  8984  01FABA  6E32               	movwf	(btemp+8)^0,c
  8985  01FABC  0E12               	movlw	18
  8986  01FABE  6E33               	movwf	(btemp+9)^0,c
  8987  01FAC0  0E83               	movlw	131
  8988  01FAC2  6E34               	movwf	(btemp+10)^0,c
  8989  01FAC4  0E3A               	movlw	58
  8990  01FAC6  6E35               	movwf	(btemp+11)^0,c
  8991                           
  8992                           ;stkvar	_voltage @ sp[(0)+-4]
  8993  01FAC8  0EFC               	movlw	-4
  8994  01FACA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8995  01FAD0  0EFD               	movlw	-3
  8996  01FAD2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8997  01FAD8  0EFE               	movlw	-2
  8998  01FADA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8999  01FAE0  0EFF               	movlw	-1
  9000  01FAE2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9001  01FAE8                     l13726:
  9002                           
  9003                           ;daq.c: 298:  if (voltage > 10.0)
  9004                           ;stkvar	_voltage @ sp[(0)+-4]
  9005  01FAE8  0EFC               	movlw	-4
  9006  01FAEA  006F FF8F FFE6     	movff	plusw1,postinc1
  9007  01FAF0  006F FF8F FFE6     	movff	plusw1,postinc1
  9008  01FAF6  006F FF8F FFE6     	movff	plusw1,postinc1
  9009  01FAFC  006F FF8F FFE6     	movff	plusw1,postinc1
  9010  01FB02  0E00               	movlw	0
  9011  01FB04  6EE6               	movwf	postinc1,c
  9012  01FB06  0E00               	movlw	0
  9013  01FB08  6EE6               	movwf	postinc1,c
  9014  01FB0A  0E20               	movlw	32
  9015  01FB0C  6EE6               	movwf	postinc1,c
  9016  01FB0E  0E41               	movlw	65
  9017  01FB10  6EE6               	movwf	postinc1,c
  9018  01FB12  EC35  F0F6         	call	___flge	;wreg free
  9019  01FB16  B02A               	btfsc	btemp& (0+255),0,c
  9020  01FB18  D018               	goto	l13730
  9021                           
  9022                           ;daq.c: 299:   voltage = 10.0;
  9023  01FB1A  0E00               	movlw	0
  9024  01FB1C  6E32               	movwf	(btemp+8)^0,c
  9025  01FB1E  0E00               	movlw	0
  9026  01FB20  6E33               	movwf	(btemp+9)^0,c
  9027  01FB22  0E20               	movlw	32
  9028  01FB24  6E34               	movwf	(btemp+10)^0,c
  9029  01FB26  0E41               	movlw	65
  9030  01FB28  6E35               	movwf	(btemp+11)^0,c
  9031                           
  9032                           ;stkvar	_voltage @ sp[(0)+-4]
  9033  01FB2A  0EFC               	movlw	-4
  9034  01FB2C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  9035  01FB32  0EFD               	movlw	-3
  9036  01FB34  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  9037  01FB3A  0EFE               	movlw	-2
  9038  01FB3C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9039  01FB42  0EFF               	movlw	-1
  9040  01FB44  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9041  01FB4A                     l13730:
  9042                           
  9043                           ;daq.c: 303:  return(uint16_t) (voltage / 0.002442);
  9044  01FB4A  0EF6               	movlw	246
  9045  01FB4C  6EE6               	movwf	postinc1,c
  9046  01FB4E  0E09               	movlw	9
  9047  01FB50  6EE6               	movwf	postinc1,c
  9048  01FB52  0E20               	movlw	32
  9049  01FB54  6EE6               	movwf	postinc1,c
  9050  01FB56  0E3B               	movlw	59
  9051  01FB58  6EE6               	movwf	postinc1,c
  9052                           
  9053                           ;stkvar	_voltage @ sp[(-4)+-4]
  9054  01FB5A  0EF8               	movlw	-8
  9055  01FB5C  006F FF8F FFE6     	movff	plusw1,postinc1
  9056  01FB62  006F FF8F FFE6     	movff	plusw1,postinc1
  9057  01FB68  006F FF8F FFE6     	movff	plusw1,postinc1
  9058  01FB6E  006F FF8F FFE6     	movff	plusw1,postinc1
  9059  01FB74  EC64  F0C1         	call	___fldiv	;wreg free
  9060  01FB78  0060  F0AB  FFE6   	movff	btemp,postinc1
  9061  01FB7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9062  01FB84  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9063  01FB8A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9064  01FB90  ECC9  F0F4         	call	___fltol	;wreg free
  9065                           
  9066                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  9067  01FB94  52E5               	movf	postdec1,f,c
  9068  01FB96  52E5               	movf	postdec1,f,c
  9069  01FB98  52E5               	movf	postdec1,f,c
  9070  01FB9A  52E5               	movf	postdec1,f,c
  9071  01FB9C  0012               	return		;funcret
  9072  01FB9E                     __end_of_convert_dac_raw:
  9073                           	opt callstack 0
  9074                           
  9075 ;; *************** function _set_dac *****************
  9076 ;; Defined at:
  9077 ;;		line 267 in file "daq.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;		None
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;		None
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1  [STACK] void 
  9084 ;; Registers used:
  9085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/3D
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9095 ;;Total ram usage:        0 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; Hardware stack levels required when called:   16
  9098 ;; This function calls:
  9099 ;;		_SPI1_Exchange8bit
  9100 ;;		_dac_spi_control
  9101 ;; This function is called by:
  9102 ;;		_main
  9103 ;; This function uses a reentrant model
  9104 ;;
  9105                           
  9106                           	psect	text11
  9107  000AC2                     __ptext11:
  9108                           	opt callstack 0
  9109  000AC2                     _set_dac:
  9110                           	opt callstack 14
  9111                           
  9112                           ;daq.c: 269:  while (!SPI1STATUSbits.TXBE);
  9113                           
  9114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9115                           ;incstack = 0
  9116  000AC2  013D               	movlb	61	; () banked
  9117  000AC4  AB17               	btfss	23,5,b	;volatile
  9118  000AC6  D7FD               	goto	_set_dac
  9119                           
  9120                           ; BSR set to: 61
  9121                           
  9122                           ;daq.c: 270:  do { LATCbits.LATC2 = 1; } while(0);
  9123  000AC8  84BC               	bsf	188,2,c	;volatile
  9124                           
  9125                           ; BSR set to: 61
  9126                           
  9127                           ;daq.c: 271:  do { LATCbits.LATC0 = 1; } while(0);
  9128  000ACA  80BC               	bsf	188,0,c	;volatile
  9129                           
  9130                           ; BSR set to: 61
  9131                           ;daq.c: 272:  dac_spi_control(1);
  9132  000ACC  0E01               	movlw	1
  9133  000ACE  6EE6               	movwf	postinc1,c
  9134  000AD0  EC41  F00B         	call	_dac_spi_control	;wreg free
  9135                           
  9136                           ;daq.c: 273:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  9137  000AD4  C120  F124         	movff	_R+32,_R+36	;volatile
  9138                           
  9139                           ;daq.c: 274:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  9140  000AD8  EE20  F120         	lfsr	2,_R+32	;volatile
  9141  000ADC  006F FF78  F034    	movff	postinc2,btemp+10
  9142  000AE2  006F FF74  F035    	movff	postdec2,btemp+11
  9143  000AE8  0060  F0D4  F034   	movff	btemp+11,btemp+10
  9144  000AEE  6A35               	clrf	(btemp+11)^0,c
  9145  000AF0  0E0F               	movlw	15
  9146  000AF2  1634               	andwf	(btemp+10)^0,f,c
  9147  000AF4  0101               	movlb	1	; () banked
  9148  000AF6  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9149  000AF8  1834               	xorwf	(btemp+10)^0,w,c
  9150  000AFA  0BF0               	andlw	-16
  9151  000AFC  1834               	xorwf	(btemp+10)^0,w,c
  9152  000AFE  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  9153                           
  9154                           ; BSR set to: 1
  9155                           ;daq.c: 275:  R.max5322_cmd.map.cont = 0b0100;
  9156  000B00  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9157  000B02  0B0F               	andlw	-241
  9158  000B04  0940               	iorlw	64
  9159  000B06  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  9160                           
  9161                           ; BSR set to: 1
  9162  000B08  90BF               	bcf	191,0,c	;volatile
  9163                           
  9164                           ; BSR set to: 1
  9165                           ;daq.c: 277:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  9166  000B0A  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9167  000B0C  6EE6               	movwf	postinc1,c
  9168  000B0E  EC74  F015         	call	_SPI1_Exchange8bit	;wreg free
  9169                           
  9170                           ; BSR set to: 57
  9171                           ;daq.c: 278:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  9172  000B12  0101               	movlb	1	; () banked
  9173  000B14  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  9174  000B16  6EE6               	movwf	postinc1,c
  9175  000B18  EC74  F015         	call	_SPI1_Exchange8bit	;wreg free
  9176                           
  9177                           ; BSR set to: 57
  9178  000B1C  80BF               	bsf	191,0,c	;volatile
  9179                           
  9180                           ; BSR set to: 57
  9181                           ;daq.c: 280:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  9182  000B1E  C122  F124         	movff	_R+34,_R+36	;volatile
  9183                           
  9184                           ; BSR set to: 57
  9185                           ;daq.c: 281:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  9186  000B22  EE20  F122         	lfsr	2,_R+34	;volatile
  9187  000B26  006F FF78  F034    	movff	postinc2,btemp+10
  9188  000B2C  006F FF74  F035    	movff	postdec2,btemp+11
  9189  000B32  0060  F0D4  F034   	movff	btemp+11,btemp+10
  9190  000B38  6A35               	clrf	(btemp+11)^0,c
  9191  000B3A  0E0F               	movlw	15
  9192  000B3C  1634               	andwf	(btemp+10)^0,f,c
  9193  000B3E  0101               	movlb	1	; () banked
  9194  000B40  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9195  000B42  1834               	xorwf	(btemp+10)^0,w,c
  9196  000B44  0BF0               	andlw	-16
  9197  000B46  1834               	xorwf	(btemp+10)^0,w,c
  9198  000B48  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  9199                           
  9200                           ; BSR set to: 1
  9201                           ;daq.c: 282:  R.max5322_cmd.map.cont = 0b0101;
  9202  000B4A  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9203  000B4C  0B0F               	andlw	-241
  9204  000B4E  0950               	iorlw	80
  9205  000B50  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  9206                           
  9207                           ; BSR set to: 1
  9208  000B52  90BF               	bcf	191,0,c	;volatile
  9209                           
  9210                           ; BSR set to: 1
  9211                           ;daq.c: 284:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  9212  000B54  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9213  000B56  6EE6               	movwf	postinc1,c
  9214  000B58  EC74  F015         	call	_SPI1_Exchange8bit	;wreg free
  9215                           
  9216                           ; BSR set to: 57
  9217                           ;daq.c: 285:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  9218  000B5C  0101               	movlb	1	; () banked
  9219  000B5E  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  9220  000B60  6EE6               	movwf	postinc1,c
  9221  000B62  EC74  F015         	call	_SPI1_Exchange8bit	;wreg free
  9222  000B66                     l2041:
  9223  000B66  013D               	movlb	61	; () banked
  9224  000B68  AB17               	btfss	23,5,b	;volatile
  9225  000B6A  D7FD               	goto	l2041
  9226                           
  9227                           ; BSR set to: 61
  9228                           
  9229                           ;daq.c: 287:  do { LATFbits.LATF0 = 1; } while(0);
  9230  000B6C  80BF               	bsf	191,0,c	;volatile
  9231                           
  9232                           ; BSR set to: 61
  9233                           ;daq.c: 288:  dac_spi_control(0);
  9234  000B6E  0E00               	movlw	0
  9235  000B70  6EE6               	movwf	postinc1,c
  9236  000B72  EC41  F00B         	call	_dac_spi_control	;wreg free
  9237                           
  9238                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  9239  000B76  0012               	return		;funcret
  9240  000B78                     __end_of_set_dac:
  9241                           	opt callstack 0
  9242                           
  9243 ;; *************** function _dac_spi_control *****************
  9244 ;; Defined at:
  9245 ;;		line 219 in file "daq.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  set             1  [STACK] _Bool 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;		None
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  1  [STACK] void 
  9252 ;; Registers used:
  9253 ;;		wreg, fsr1l, fsr1h, status,2
  9254 ;; Tracked objects:
  9255 ;;		On entry : 3F/3D
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9263 ;;Total ram usage:        0 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:   15
  9266 ;; This function calls:
  9267 ;;		Nothing
  9268 ;; This function is called by:
  9269 ;;		_set_dac
  9270 ;; This function uses a reentrant model
  9271 ;;
  9272                           
  9273                           	psect	text12
  9274  001682                     __ptext12:
  9275                           	opt callstack 0
  9276  001682                     _dac_spi_control:
  9277                           	opt callstack 14
  9278                           
  9279                           ;daq.c: 219: void dac_spi_control(_Bool set);daq.c: 220: {;daq.c: 221:  static _Bool ini
      +                          t = 0;;daq.c: 222:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 224:  if (set) {
  9280                           ;stkvar	_set @ sp[(0)+-1]
  9281                           
  9282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9283                           ;incstack = 0
  9284  001682  0EFF               	movlw	-1
  9285  001684  50E3               	movf	plusw1,w,c
  9286  001686  B4D8               	btfsc	status,2,c
  9287  001688  D022               	goto	l13718
  9288                           
  9289                           ;daq.c: 225:   SPI1CON0bits.EN = 0;
  9290  00168A  013D               	movlb	61	; () banked
  9291  00168C  9F14               	bcf	20,7,b	;volatile
  9292                           
  9293                           ; BSR set to: 61
  9294                           ;daq.c: 226:   if (!init) {
  9295  00168E  5052               	movf	dac_spi_control@init^0,w,c
  9296  001690  A4D8               	btfss	status,2,c
  9297  001692  D011               	goto	l13706
  9298                           
  9299                           ; BSR set to: 61
  9300                           ;daq.c: 227:    init = 1;
  9301  001694  0E01               	movlw	1
  9302  001696  6E52               	movwf	dac_spi_control@init^0,c
  9303                           
  9304                           ; BSR set to: 61
  9305                           ;daq.c: 228:    S0 = SPI1CON0;
  9306  001698  006F F450  F0CD    	movff	15636,dac_spi_control@S0	;volatile
  9307                           
  9308                           ; BSR set to: 61
  9309                           ;daq.c: 229:    S1 = SPI1CON1;
  9310  00169E  006F F454  F0CC    	movff	15637,dac_spi_control@S1	;volatile
  9311                           
  9312                           ; BSR set to: 61
  9313                           ;daq.c: 230:    S2 = SPI1CON2;
  9314  0016A4  006F F458  F0CB    	movff	15638,dac_spi_control@S2	;volatile
  9315                           
  9316                           ; BSR set to: 61
  9317                           ;daq.c: 231:    SC = SPI1CLK;
  9318  0016AA  006F F470  F0CA    	movff	15644,dac_spi_control@SC	;volatile
  9319                           
  9320                           ; BSR set to: 61
  9321                           ;daq.c: 232:    SB = SPI1BAUD;
  9322  0016B0  006F F464  F0C9    	movff	15641,dac_spi_control@SB	;volatile
  9323  0016B6                     l13706:
  9324                           
  9325                           ; BSR set to: 61
  9326                           ;daq.c: 238:   SPI1CON1 = 0x00;
  9327  0016B6  6B15               	clrf	21,b	;volatile
  9328                           
  9329                           ; BSR set to: 61
  9330                           ;daq.c: 239:   SPI1CON1bits.CKE = 1;
  9331  0016B8  8D15               	bsf	21,6,b	;volatile
  9332                           
  9333                           ; BSR set to: 61
  9334                           ;daq.c: 240:   SPI1CON1bits.CKP = 0;
  9335  0016BA  9B15               	bcf	21,5,b	;volatile
  9336                           
  9337                           ; BSR set to: 61
  9338                           ;daq.c: 241:   SPI1CON1bits.SMP = 0;
  9339  0016BC  9F15               	bcf	21,7,b	;volatile
  9340                           
  9341                           ;daq.c: 243:   SPI1CON2 = 0x03;
  9342  0016BE  0E03               	movlw	3
  9343  0016C0  6F16               	movwf	22,b	;volatile
  9344                           
  9345                           ;daq.c: 245:   SPI1BAUD = 0x0f;
  9346  0016C2  0E0F               	movlw	15
  9347  0016C4  6F19               	movwf	25,b	;volatile
  9348                           
  9349                           ; BSR set to: 61
  9350                           ;daq.c: 247:   SPI1CLK = 0x00;
  9351  0016C6  6B1C               	clrf	28,b	;volatile
  9352                           
  9353                           ;daq.c: 249:   SPI1CON0 = 0x83;
  9354  0016C8  0E83               	movlw	131
  9355  0016CA  6F14               	movwf	20,b	;volatile
  9356  0016CC  D014               	goto	L4
  9357  0016CE                     l13718:
  9358                           
  9359                           ;daq.c: 252:   if (init) {
  9360  0016CE  5052               	movf	dac_spi_control@init^0,w,c
  9361  0016D0  B4D8               	btfsc	status,2,c
  9362  0016D2  D012               	goto	l2025
  9363                           
  9364                           ;daq.c: 256:    SPI1CON0bits.EN = 0;
  9365  0016D4  013D               	movlb	61	; () banked
  9366  0016D6  9F14               	bcf	20,7,b	;volatile
  9367                           
  9368                           ;daq.c: 257:    SPI1CON1 = S1;
  9369  0016D8  0060  F333  FD15   	movff	dac_spi_control@S1,15637	;volatile
  9370                           
  9371                           ;daq.c: 258:    SPI1CON2 = S2;
  9372  0016DE  0060  F32F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  9373                           
  9374                           ;daq.c: 259:    SPI1CLK = SC;
  9375  0016E4  0060  F32B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  9376                           
  9377                           ;daq.c: 260:    SPI1BAUD = SB;
  9378  0016EA  0060  F327  FD19   	movff	dac_spi_control@SB,15641	;volatile
  9379                           
  9380                           ;daq.c: 261:    SPI1CON0 = S0;
  9381  0016F0  0060  F337  FD14   	movff	dac_spi_control@S0,15636	;volatile
  9382  0016F6                     L4:
  9383                           
  9384                           ;daq.c: 262:    SPI1CON0bits.EN = 1;
  9385  0016F6  8F14               	bsf	20,7,b	;volatile
  9386  0016F8                     l2025:
  9387                           
  9388                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  9389  0016F8  52E5               	movf	postdec1,f,c
  9390  0016FA  0012               	return		;funcret
  9391  0016FC                     __end_of_dac_spi_control:
  9392                           	opt callstack 0
  9393                           
  9394 ;; *************** function _read_cal_data *****************
  9395 ;; Defined at:
  9396 ;;		line 380 in file "daq.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;  x               2  [STACK] unsigned short 
  9401 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  9402 ;;		 -> r_cal(155), 
  9403 ;;  y               2  [STACK] unsigned short 
  9404 ;;  crcVal_save     1  [STACK] unsigned char 
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1  [STACK] _Bool 
  9407 ;; Registers used:
  9408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/39
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9418 ;;Total ram usage:        0 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; Hardware stack levels required when called:   17
  9421 ;; This function calls:
  9422 ;;		_CRC_8BitDataWrite
  9423 ;;		_CRC_CalculatedResultGet
  9424 ;;		_CRC_Initialize
  9425 ;;		_CRC_IsBusy
  9426 ;;		_CRC_Start
  9427 ;;		_DATAEE_ReadByte
  9428 ;; This function is called by:
  9429 ;;		_main
  9430 ;; This function uses a reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text13
  9434  01DB3A                     __ptext13:
  9435                           	opt callstack 0
  9436  01DB3A                     _read_cal_data:
  9437                           	opt callstack 0
  9438                           
  9439                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9440  01DB3A  0E07               	movlw	7
  9441  01DB3C  26E1               	addwf	fsr1l,f,c
  9442  01DB3E  0E00               	movlw	0
  9443  01DB40  22E2               	addwfc	fsr1h,f,c
  9444                           
  9445                           ;daq.c: 382:  uint16_t x = 0, y;
  9446                           ;stkvar	_x @ sp[(-7)+0]
  9447                           
  9448                           ;incstack = 0
  9449  01DB42  0EF9               	movlw	-7
  9450  01DB44  6AE3               	clrf	plusw1,c
  9451  01DB46  0EFA               	movlw	-6
  9452  01DB48  6AE3               	clrf	plusw1,c
  9453                           
  9454                           ;daq.c: 383:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 385:  y = sizeof(r_cal);
  9455  01DB4A  0E9B               	movlw	155
  9456  01DB4C  6E34               	movwf	(btemp+10)^0,c
  9457  01DB4E  0E00               	movlw	0
  9458  01DB50  6E35               	movwf	(btemp+11)^0,c
  9459                           
  9460                           ;stkvar	_y @ sp[(-7)+4]
  9461  01DB52  0EFD               	movlw	-3
  9462  01DB54  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9463  01DB5A  0EFE               	movlw	-2
  9464  01DB5C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9465                           
  9466                           ;daq.c: 386:  r_cal_ptr = (uint8_t*) & r_cal;
  9467                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  9468  01DB62  0E04               	movlw	high _r_cal
  9469  01DB64  6E2A               	movwf	btemp^0,c
  9470  01DB66  0EFC               	movlw	-4
  9471  01DB68  0060  F0AB  FFE3   	movff	btemp,plusw1
  9472  01DB6E  0E40               	movlw	low _r_cal
  9473  01DB70  6E2A               	movwf	btemp^0,c
  9474  01DB72  0EFB               	movlw	-5
  9475  01DB74  0060  F0AB  FFE3   	movff	btemp,plusw1
  9476                           
  9477                           ;daq.c: 388:  CRC_Initialize();
  9478  01DB7A  EC71  F009         	call	_CRC_Initialize	;wreg free
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;daq.c: 391:  CRC_Start();
  9482  01DB7E  ECB2  F016         	call	_CRC_Start	;wreg free
  9483  01DB82                     l14152:
  9484                           
  9485                           ;daq.c: 394:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  9486                           ;stkvar	_x @ sp[(-7)+0]
  9487  01DB82  0EF9               	movlw	-7
  9488  01DB84  006F FF8F FFE6     	movff	plusw1,postinc1
  9489  01DB8A  006F FF8F FFE6     	movff	plusw1,postinc1
  9490  01DB90  ECB1  F012         	call	_DATAEE_ReadByte	;wreg free
  9491                           
  9492                           ;stkvar	_x @ sp[(-7)+0]
  9493  01DB94  0EF9               	movlw	-7
  9494  01DB96  006F FF8C  F034    	movff	plusw1,btemp+10
  9495  01DB9C  0EFA               	movlw	-6
  9496  01DB9E  006F FF8C  F035    	movff	plusw1,btemp+11
  9497                           
  9498                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  9499  01DBA4  0EFB               	movlw	-5
  9500  01DBA6  006F FF8C  F032    	movff	plusw1,btemp+8
  9501  01DBAC  0EFC               	movlw	-4
  9502  01DBAE  006F FF8C  F033    	movff	plusw1,btemp+9
  9503  01DBB4  5034               	movf	(btemp+10)^0,w,c
  9504  01DBB6  2432               	addwf	(btemp+8)^0,w,c
  9505  01DBB8  6ED9               	movwf	fsr2l,c
  9506  01DBBA  5035               	movf	(btemp+11)^0,w,c
  9507  01DBBC  2033               	addwfc	(btemp+9)^0,w,c
  9508  01DBBE  6EDA               	movwf	fsr2h,c
  9509  01DBC0  0060  F0AB  FFDF   	movff	btemp,indf2
  9510                           
  9511                           ;daq.c: 395:  } while (++x < y);
  9512                           ;stkvar	_y @ sp[(-7)+4]
  9513  01DBC6  0EFD               	movlw	-3
  9514  01DBC8  006F FF8C  F034    	movff	plusw1,btemp+10
  9515  01DBCE  0EFE               	movlw	-2
  9516  01DBD0  006F FF8C  F035    	movff	plusw1,btemp+11
  9517                           
  9518                           ;stkvar	_x @ sp[(-7)+0]
  9519  01DBD6  0EF9               	movlw	-7
  9520  01DBD8  50E3               	movf	plusw1,w,c
  9521  01DBDA  0F01               	addlw	1
  9522  01DBDC  6E2A               	movwf	btemp^0,c
  9523  01DBDE  0EF9               	movlw	-7
  9524  01DBE0  0060  F0AB  FFE3   	movff	btemp,plusw1
  9525  01DBE6  6A2A               	clrf	btemp^0,c
  9526  01DBE8  0EFA               	movlw	-6
  9527  01DBEA  50E3               	movf	plusw1,w,c
  9528  01DBEC  202A               	addwfc	btemp^0,w,c
  9529  01DBEE  6E2A               	movwf	btemp^0,c
  9530  01DBF0  0EFA               	movlw	-6
  9531  01DBF2  0060  F0AB  FFE3   	movff	btemp,plusw1
  9532  01DBF8  0EF9               	movlw	-7
  9533  01DBFA  006F FF8C  F032    	movff	plusw1,btemp+8
  9534  01DC00  0EFA               	movlw	-6
  9535  01DC02  006F FF8C  F033    	movff	plusw1,btemp+9
  9536  01DC08  5034               	movf	(btemp+10)^0,w,c
  9537  01DC0A  5C32               	subwf	(btemp+8)^0,w,c
  9538  01DC0C  5035               	movf	(btemp+11)^0,w,c
  9539  01DC0E  5833               	subwfb	(btemp+9)^0,w,c
  9540  01DC10  A0D8               	btfss	status,0,c
  9541  01DC12  D7B7               	goto	l14152
  9542                           
  9543                           ;daq.c: 396:  crcVal_save = r_cal.crc;
  9544                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9545  01DC14  0EFF               	movlw	-1
  9546  01DC16  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  9547                           
  9548                           ;daq.c: 398:  if (r_cal.checkmark == 0x1957) {
  9549  01DC1C  0E57               	movlw	87
  9550  01DC1E  0104               	movlb	4	; () banked
  9551  01DC20  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  9552  01DC22  E163               	bnz	l14172
  9553  01DC24  0E19               	movlw	25
  9554  01DC26  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  9555  01DC28  A4D8               	btfss	status,2,c
  9556  01DC2A  D05F               	goto	u13340
  9557                           
  9558                           ; BSR set to: 4
  9559                           ;daq.c: 399:   r_cal.crc = 0x42;
  9560  01DC2C  0E42               	movlw	66
  9561  01DC2E  6FDA               	movwf	(_r_cal+154)& (0+255),b
  9562                           
  9563                           ; BSR set to: 4
  9564                           ;daq.c: 400:   x = 0;
  9565                           ;stkvar	_x @ sp[(-7)+0]
  9566  01DC30  0EF9               	movlw	-7
  9567  01DC32  6AE3               	clrf	plusw1,c
  9568  01DC34  0EFA               	movlw	-6
  9569  01DC36  6AE3               	clrf	plusw1,c
  9570  01DC38                     l14164:
  9571                           
  9572                           ;daq.c: 403:    CRC_8BitDataWrite(r_cal_ptr[x]);
  9573                           ;stkvar	_x @ sp[(-7)+0]
  9574  01DC38  0EF9               	movlw	-7
  9575  01DC3A  006F FF8C  F034    	movff	plusw1,btemp+10
  9576  01DC40  0EFA               	movlw	-6
  9577  01DC42  006F FF8C  F035    	movff	plusw1,btemp+11
  9578                           
  9579                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  9580  01DC48  0EFB               	movlw	-5
  9581  01DC4A  006F FF8C  F032    	movff	plusw1,btemp+8
  9582  01DC50  0EFC               	movlw	-4
  9583  01DC52  006F FF8C  F033    	movff	plusw1,btemp+9
  9584  01DC58  5034               	movf	(btemp+10)^0,w,c
  9585  01DC5A  2432               	addwf	(btemp+8)^0,w,c
  9586  01DC5C  6ED9               	movwf	fsr2l,c
  9587  01DC5E  5035               	movf	(btemp+11)^0,w,c
  9588  01DC60  2033               	addwfc	(btemp+9)^0,w,c
  9589  01DC62  6EDA               	movwf	fsr2h,c
  9590  01DC64  50DF               	movf	indf2,w,c
  9591  01DC66  6EE6               	movwf	postinc1,c
  9592  01DC68  EC19  F016         	call	_CRC_8BitDataWrite	;wreg free
  9593  01DC6C                     l14166:
  9594  01DC6C  EC3B  F016         	call	_CRC_IsBusy	;wreg free
  9595  01DC70  502A               	movf	btemp^0,w,c
  9596  01DC72  A4D8               	btfss	status,2,c
  9597  01DC74  D7FB               	goto	l14166
  9598                           
  9599                           ;daq.c: 405:   } while (++x < y);
  9600                           ;stkvar	_y @ sp[(-7)+4]
  9601  01DC76  0EFD               	movlw	-3
  9602  01DC78  006F FF8C  F034    	movff	plusw1,btemp+10
  9603  01DC7E  0EFE               	movlw	-2
  9604  01DC80  006F FF8C  F035    	movff	plusw1,btemp+11
  9605                           
  9606                           ;stkvar	_x @ sp[(-7)+0]
  9607  01DC86  0EF9               	movlw	-7
  9608  01DC88  50E3               	movf	plusw1,w,c
  9609  01DC8A  0F01               	addlw	1
  9610  01DC8C  6E2A               	movwf	btemp^0,c
  9611  01DC8E  0EF9               	movlw	-7
  9612  01DC90  0060  F0AB  FFE3   	movff	btemp,plusw1
  9613  01DC96  6A2A               	clrf	btemp^0,c
  9614  01DC98  0EFA               	movlw	-6
  9615  01DC9A  50E3               	movf	plusw1,w,c
  9616  01DC9C  202A               	addwfc	btemp^0,w,c
  9617  01DC9E  6E2A               	movwf	btemp^0,c
  9618  01DCA0  0EFA               	movlw	-6
  9619  01DCA2  0060  F0AB  FFE3   	movff	btemp,plusw1
  9620  01DCA8  0EF9               	movlw	-7
  9621  01DCAA  006F FF8C  F032    	movff	plusw1,btemp+8
  9622  01DCB0  0EFA               	movlw	-6
  9623  01DCB2  006F FF8C  F033    	movff	plusw1,btemp+9
  9624  01DCB8  5034               	movf	(btemp+10)^0,w,c
  9625  01DCBA  5C32               	subwf	(btemp+8)^0,w,c
  9626  01DCBC  5035               	movf	(btemp+11)^0,w,c
  9627  01DCBE  5833               	subwfb	(btemp+9)^0,w,c
  9628  01DCC0  A0D8               	btfss	status,0,c
  9629  01DCC2  D7BA               	goto	l14164
  9630                           
  9631                           ;daq.c: 406:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  9632  01DCC4  0E00               	movlw	0
  9633  01DCC6  6EE6               	movwf	postinc1,c
  9634  01DCC8  0E00               	movlw	0
  9635  01DCCA  6EE6               	movwf	postinc1,c
  9636  01DCCC  0E00               	movlw	0
  9637  01DCCE  6EE6               	movwf	postinc1,c
  9638  01DCD0  EC10  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
  9639                           
  9640                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9641  01DCD4  0EFF               	movlw	-1
  9642  01DCD6  50E3               	movf	plusw1,w,c
  9643  01DCD8  6E34               	movwf	(btemp+10)^0,c
  9644  01DCDA  6A35               	clrf	(btemp+11)^0,c
  9645  01DCDC  5034               	movf	(btemp+10)^0,w,c
  9646  01DCDE  182A               	xorwf	btemp^0,w,c
  9647  01DCE0  E104               	bnz	u13340
  9648  01DCE2  5035               	movf	(btemp+11)^0,w,c
  9649  01DCE4  182B               	xorwf	(btemp+1)^0,w,c
  9650  01DCE6  B4D8               	btfsc	status,2,c
  9651  01DCE8  D002               	goto	l14180
  9652  01DCEA                     u13340:
  9653  01DCEA                     l14172:
  9654                           
  9655                           ;daq.c: 407:    return 0;
  9656  01DCEA  0E00               	movlw	0
  9657  01DCEC  D005               	goto	L5
  9658  01DCEE                     l14180:
  9659                           
  9660                           ;daq.c: 411:  r_cal.crc = crcVal_save;
  9661                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9662  01DCEE  0EFF               	movlw	-1
  9663  01DCF0  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  9664                           
  9665                           ;daq.c: 412:  return 1;
  9666  01DCF6  0E01               	movlw	1
  9667  01DCF8                     L5:
  9668  01DCF8  6E2A               	movwf	btemp^0,c
  9669                           
  9670                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9671  01DCFA  0EF9               	movlw	249
  9672  01DCFC  26E1               	addwf	fsr1l,f,c
  9673  01DCFE  0EFF               	movlw	255
  9674  01DD00  22E2               	addwfc	fsr1h,f,c
  9675  01DD02  0012               	return		;funcret
  9676  01DD04                     __end_of_read_cal_data:
  9677                           	opt callstack 0
  9678                           
  9679 ;; *************** function _DATAEE_ReadByte *****************
  9680 ;; Defined at:
  9681 ;;		line 194 in file "mcc_generated_files/memory.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;  bAdd            2  [STACK] unsigned short 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1  [STACK] unsigned char 
  9688 ;; Registers used:
  9689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/39
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9699 ;;Total ram usage:        0 bytes
  9700 ;; Hardware stack levels used:    1
  9701 ;; Hardware stack levels required when called:   15
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_read_cal_data
  9706 ;; This function uses a reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text14
  9710  002562                     __ptext14:
  9711                           	opt callstack 0
  9712  002562                     _DATAEE_ReadByte:
  9713                           	opt callstack 14
  9714                           
  9715                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  9716                           ;stkvar	_bAdd @ sp[(0)+-2]
  9717                           
  9718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9719                           ;incstack = 0
  9720  002562  0EFF               	movlw	255
  9721  002564  24E1               	addwf	fsr1l,w,c
  9722  002566  6ED9               	movwf	fsr2l,c
  9723  002568  0EFF               	movlw	255
  9724  00256A  20E2               	addwfc	fsr1h,w,c
  9725  00256C  6EDA               	movwf	fsr2h,c
  9726  00256E  50DF               	movf	indf2,w,c
  9727  002570  0B03               	andlw	3
  9728  002572  0139               	movlb	57	; () banked
  9729  002574  6FE1               	movwf	225,b	;volatile
  9730                           
  9731                           ; BSR set to: 57
  9732                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9733                           ;stkvar	_bAdd @ sp[(0)+-2]
  9734  002576  0EFE               	movlw	-2
  9735  002578  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  9736                           
  9737                           ; BSR set to: 57
  9738                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  9739  00257E  0E3F               	movlw	-193
  9740  002580  17E5               	andwf	229,f,b	;volsfr
  9741                           
  9742                           ; BSR set to: 57
  9743                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  9744  002582  81E5               	bsf	229,0,b	;volsfr
  9745                           
  9746                           ; BSR set to: 57
  9747                           ;mcc_generated_files/memory.c: 200:     __nop();
  9748  002584  F000               	nop	
  9749                           
  9750                           ;mcc_generated_files/memory.c: 201:     __nop();
  9751  002586  F000               	nop	
  9752                           
  9753                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  9754  002588  006E F78C  F02A    	movff	14819,btemp	;volatile
  9755                           
  9756                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  9757  00258E  52E5               	movf	postdec1,f,c
  9758  002590  52E5               	movf	postdec1,f,c
  9759  002592  0012               	return		;funcret
  9760  002594                     __end_of_DATAEE_ReadByte:
  9761                           	opt callstack 0
  9762                           
  9763 ;; *************** function _load_hist_data *****************
  9764 ;; Defined at:
  9765 ;;		line 224 in file "mbmc.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;		None
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;  esr_rescale     2  [STACK] short 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1  [STACK] void 
  9772 ;; Registers used:
  9773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/1
  9776 ;;		On exit  : 3F/39
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9783 ;;Total ram usage:        0 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:   16
  9786 ;; This function calls:
  9787 ;;		___fladd
  9788 ;;		___flmul
  9789 ;;		___fltol
  9790 ;;		___xxtofl
  9791 ;;		_start_bsoc
  9792 ;;		_stop_bsoc
  9793 ;;		_time
  9794 ;; This function is called by:
  9795 ;;		_main
  9796 ;; This function uses a reentrant model
  9797 ;;
  9798                           
  9799                           	psect	text15
  9800  019B08                     __ptext15:
  9801                           	opt callstack 0
  9802  019B08                     _load_hist_data:
  9803                           	opt callstack 0
  9804                           
  9805                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9806  019B08  52E6               	movf	postinc1,f,c
  9807  019B0A  52E6               	movf	postinc1,f,c
  9808                           
  9809                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9810                           
  9811                           ;incstack = 0
  9812  019B0C  ECBE  F016         	call	_stop_bsoc	;wreg free
  9813                           
  9814                           ; BSR set to: 57
  9815                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9816  019B10  0E00               	movlw	0
  9817  019B12  6EE6               	movwf	postinc1,c
  9818  019B14  0E00               	movlw	0
  9819  019B16  6EE6               	movwf	postinc1,c
  9820  019B18  0E7A               	movlw	122
  9821  019B1A  6EE6               	movwf	postinc1,c
  9822  019B1C  0E44               	movlw	68
  9823  019B1E  6EE6               	movwf	postinc1,c
  9824  019B20  EE23  F009         	lfsr	2,_C+136	;volatile
  9825  019B24  006F FF7B FFE6     	movff	postinc2,postinc1
  9826  019B2A  006F FF7B FFE6     	movff	postinc2,postinc1
  9827  019B30  006F FF7B FFE6     	movff	postinc2,postinc1
  9828  019B36  006F FF7B FFE6     	movff	postinc2,postinc1
  9829  019B3C  EC32  F0B3         	call	___flmul	;wreg free
  9830  019B40  0060  F0AB  FFE6   	movff	btemp,postinc1
  9831  019B46  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9832  019B4C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9833  019B52  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9834  019B58  ECC9  F0F4         	call	___fltol	;wreg free
  9835  019B5C  0060  F0A8  F034   	movff	btemp,btemp+10
  9836  019B62  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9837                           
  9838                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9839  019B68  0EFE               	movlw	-2
  9840  019B6A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9841  019B70  0EFF               	movlw	-1
  9842  019B72  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9843                           
  9844                           ;mbmc.c: 230:  C.hist[0].updates++;
  9845  019B78  EE23  F046         	lfsr	2,_C+197	;volatile
  9846  019B7C  2ADE               	incf	postinc2,f,c
  9847  019B7E  0E00               	movlw	0
  9848  019B80  22DE               	addwfc	postinc2,f,c
  9849  019B82  22DE               	addwfc	postinc2,f,c
  9850  019B84  22DE               	addwfc	postinc2,f,c
  9851                           
  9852                           ;mbmc.c: 231:  C.hist[0].h[12] += C.pvkw;
  9853  019B86  EE23  F029         	lfsr	2,_C+168	;volatile
  9854  019B8A  006F FF7B FFE6     	movff	postinc2,postinc1
  9855  019B90  006F FF7B FFE6     	movff	postinc2,postinc1
  9856  019B96  006F FF7B FFE6     	movff	postinc2,postinc1
  9857  019B9C  006F FF7B FFE6     	movff	postinc2,postinc1
  9858  019BA2  0063  F1F8  F032   	movff	_C+253,btemp+8	;volatile
  9859  019BA8  0063  F1FC  F033   	movff	_C+254,btemp+9	;volatile
  9860  019BAE  0E00               	movlw	0
  9861  019BB0  BE33               	btfsc	(btemp+9)^0,7,c
  9862  019BB2  0EFF               	movlw	255
  9863  019BB4  6E34               	movwf	(btemp+10)^0,c
  9864  019BB6  6E35               	movwf	(btemp+11)^0,c
  9865  019BB8  0060  F0CB  FFE6   	movff	btemp+8,postinc1
  9866  019BBE  0060  F0CF  FFE6   	movff	btemp+9,postinc1
  9867  019BC4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  9868  019BCA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  9869  019BD0  0E01               	movlw	1
  9870  019BD2  6EE6               	movwf	postinc1,c
  9871  019BD4  EC9B  F0EC         	call	___xxtofl	;wreg free
  9872  019BD8  0060  F0AB  FFE6   	movff	btemp,postinc1
  9873  019BDE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9874  019BE4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9875  019BEA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9876  019BF0  EC47  F0B7         	call	___fladd	;wreg free
  9877  019BF4  0060  F0AB  FFE6   	movff	btemp,postinc1
  9878  019BFA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9879  019C00  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9880  019C06  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9881  019C0C  ECC9  F0F4         	call	___fltol	;wreg free
  9882  019C10  0060  F0A8  F034   	movff	btemp,btemp+10
  9883  019C16  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9884  019C1C  0060  F0D0  FC7E   	movff	btemp+10,_C+253	;volatile
  9885  019C22  0060  F0D4  FC7F   	movff	btemp+11,_C+254	;volatile
  9886                           
  9887                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9888  019C28  EE23  F07C         	lfsr	2,_C+251	;volatile
  9889  019C2C  2ADE               	incf	postinc2,f,c
  9890  019C2E  0E00               	movlw	0
  9891  019C30  22DD               	addwfc	postdec2,f,c
  9892                           
  9893                           ;mbmc.c: 233:  if (esr_rescale > C.hist[0].h[10])
  9894                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9895  019C32  EE23  F07A         	lfsr	2,_C+249	;volatile
  9896  019C36  0EFE               	movlw	-2
  9897  019C38  50E3               	movf	plusw1,w,c
  9898  019C3A  5CDE               	subwf	postinc2,w,c
  9899  019C3C  50DE               	movf	postinc2,w,c
  9900  019C3E  0A80               	xorlw	128
  9901  019C40  6E2A               	movwf	btemp^0,c
  9902  019C42  0EFF               	movlw	-1
  9903  019C44  50E3               	movf	plusw1,w,c
  9904  019C46  0A80               	xorlw	128
  9905  019C48  582A               	subwfb	btemp^0,w,c
  9906  019C4A  B0D8               	btfsc	status,0,c
  9907  019C4C  D00D               	goto	l14476
  9908                           
  9909                           ;mbmc.c: 234:   C.hist[0].h[10] = esr_rescale;
  9910                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9911  019C4E  50E1               	movf	fsr1l,w,c
  9912  019C50  0FFE               	addlw	-2
  9913  019C52  6ED9               	movwf	fsr2l,c
  9914  019C54  50E2               	movf	fsr1h,w,c
  9915  019C56  6EDA               	movwf	fsr2h,c
  9916  019C58  0EFF               	movlw	255
  9917  019C5A  22DA               	addwfc	fsr2h,f,c
  9918  019C5C  006F FF78  FC7A    	movff	postinc2,_C+249	;volatile
  9919  019C62  006F FF74  FC7B    	movff	postdec2,_C+250	;volatile
  9920  019C68                     l14476:
  9921                           
  9922                           ;mbmc.c: 235:  if (esr_rescale < C.hist[0].h[9])
  9923  019C68  EE23  F078         	lfsr	2,_C+247	;volatile
  9924                           
  9925                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9926  019C6C  0EFE               	movlw	-2
  9927  019C6E  006F FF8C  F02A    	movff	plusw1,btemp
  9928  019C74  50DE               	movf	postinc2,w,c
  9929  019C76  5C2A               	subwf	btemp^0,w,c
  9930  019C78  0EFF               	movlw	-1
  9931  019C7A  50E3               	movf	plusw1,w,c
  9932  019C7C  0A80               	xorlw	128
  9933  019C7E  6E2A               	movwf	btemp^0,c
  9934  019C80  50DE               	movf	postinc2,w,c
  9935  019C82  0A80               	xorlw	128
  9936  019C84  582A               	subwfb	btemp^0,w,c
  9937  019C86  B0D8               	btfsc	status,0,c
  9938  019C88  D00D               	goto	l14480
  9939                           
  9940                           ;mbmc.c: 236:   C.hist[0].h[9] = esr_rescale;
  9941                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9942  019C8A  50E1               	movf	fsr1l,w,c
  9943  019C8C  0FFE               	addlw	-2
  9944  019C8E  6ED9               	movwf	fsr2l,c
  9945  019C90  50E2               	movf	fsr1h,w,c
  9946  019C92  6EDA               	movwf	fsr2h,c
  9947  019C94  0EFF               	movlw	255
  9948  019C96  22DA               	addwfc	fsr2h,f,c
  9949  019C98  006F FF78  FC78    	movff	postinc2,_C+247	;volatile
  9950  019C9E  006F FF74  FC79    	movff	postdec2,_C+248	;volatile
  9951  019CA4                     l14480:
  9952                           
  9953                           ;mbmc.c: 237:  C.hist[0].h[8] = C.bv_one_load * 100.0;
  9954  019CA4  0E00               	movlw	0
  9955  019CA6  6EE6               	movwf	postinc1,c
  9956  019CA8  0E00               	movlw	0
  9957  019CAA  6EE6               	movwf	postinc1,c
  9958  019CAC  0EC8               	movlw	200
  9959  019CAE  6EE6               	movwf	postinc1,c
  9960  019CB0  0E42               	movlw	66
  9961  019CB2  6EE6               	movwf	postinc1,c
  9962  019CB4  EE23  F0A7         	lfsr	2,_C+294	;volatile
  9963  019CB8  006F FF7B FFE6     	movff	postinc2,postinc1
  9964  019CBE  006F FF7B FFE6     	movff	postinc2,postinc1
  9965  019CC4  006F FF7B FFE6     	movff	postinc2,postinc1
  9966  019CCA  006F FF7B FFE6     	movff	postinc2,postinc1
  9967  019CD0  EC32  F0B3         	call	___flmul	;wreg free
  9968  019CD4  0060  F0AB  FFE6   	movff	btemp,postinc1
  9969  019CDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9970  019CE0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9971  019CE6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9972  019CEC  ECC9  F0F4         	call	___fltol	;wreg free
  9973  019CF0  0060  F0A8  F034   	movff	btemp,btemp+10
  9974  019CF6  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9975  019CFC  0060  F0D0  FC76   	movff	btemp+10,_C+245	;volatile
  9976  019D02  0060  F0D4  FC77   	movff	btemp+11,_C+246	;volatile
  9977                           
  9978                           ;mbmc.c: 238:  C.hist[0].h[7] = C.bv_full_load * 100.0;
  9979  019D08  0E00               	movlw	0
  9980  019D0A  6EE6               	movwf	postinc1,c
  9981  019D0C  0E00               	movlw	0
  9982  019D0E  6EE6               	movwf	postinc1,c
  9983  019D10  0EC8               	movlw	200
  9984  019D12  6EE6               	movwf	postinc1,c
  9985  019D14  0E42               	movlw	66
  9986  019D16  6EE6               	movwf	postinc1,c
  9987  019D18  EE23  F0AB         	lfsr	2,_C+298	;volatile
  9988  019D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  9989  019D22  006F FF7B FFE6     	movff	postinc2,postinc1
  9990  019D28  006F FF7B FFE6     	movff	postinc2,postinc1
  9991  019D2E  006F FF7B FFE6     	movff	postinc2,postinc1
  9992  019D34  EC32  F0B3         	call	___flmul	;wreg free
  9993  019D38  0060  F0AB  FFE6   	movff	btemp,postinc1
  9994  019D3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9995  019D44  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9996  019D4A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9997  019D50  ECC9  F0F4         	call	___fltol	;wreg free
  9998  019D54  0060  F0A8  F034   	movff	btemp,btemp+10
  9999  019D5A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10000  019D60  0060  F0D0  FC74   	movff	btemp+10,_C+243	;volatile
 10001  019D66  0060  F0D4  FC75   	movff	btemp+11,_C+244	;volatile
 10002                           
 10003                           ;mbmc.c: 239:  C.hist[0].h[6] = C.dynamic_ah;
 10004  019D6C  EE23  F011         	lfsr	2,_C+144	;volatile
 10005  019D70  006F FF7B FFE6     	movff	postinc2,postinc1
 10006  019D76  006F FF7B FFE6     	movff	postinc2,postinc1
 10007  019D7C  006F FF7B FFE6     	movff	postinc2,postinc1
 10008  019D82  006F FF7B FFE6     	movff	postinc2,postinc1
 10009  019D88  ECC9  F0F4         	call	___fltol	;wreg free
 10010  019D8C  0060  F0A8  F034   	movff	btemp,btemp+10
 10011  019D92  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10012  019D98  0060  F0D0  FC72   	movff	btemp+10,_C+241	;volatile
 10013  019D9E  0060  F0D4  FC73   	movff	btemp+11,_C+242	;volatile
 10014                           
 10015                           ;mbmc.c: 240:  C.hist[0].h[5] = C.bkwi;
 10016  019DA4  EE23  F021         	lfsr	2,_C+160	;volatile
 10017  019DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 10018  019DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 10019  019DB4  006F FF7B FFE6     	movff	postinc2,postinc1
 10020  019DBA  006F FF7B FFE6     	movff	postinc2,postinc1
 10021  019DC0  ECC9  F0F4         	call	___fltol	;wreg free
 10022  019DC4  0060  F0A8  F034   	movff	btemp,btemp+10
 10023  019DCA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10024  019DD0  0060  F0D0  FC70   	movff	btemp+10,_C+239	;volatile
 10025  019DD6  0060  F0D4  FC71   	movff	btemp+11,_C+240	;volatile
 10026                           
 10027                           ;mbmc.c: 241:  C.hist[0].h[4] = C.bkwo;
 10028  019DDC  EE23  F025         	lfsr	2,_C+164	;volatile
 10029  019DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 10030  019DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 10031  019DEC  006F FF7B FFE6     	movff	postinc2,postinc1
 10032  019DF2  006F FF7B FFE6     	movff	postinc2,postinc1
 10033  019DF8  ECC9  F0F4         	call	___fltol	;wreg free
 10034  019DFC  0060  F0A8  F034   	movff	btemp,btemp+10
 10035  019E02  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10036  019E08  0060  F0D0  FC6E   	movff	btemp+10,_C+237	;volatile
 10037  019E0E  0060  F0D4  FC6F   	movff	btemp+11,_C+238	;volatile
 10038                           
 10039                           ;mbmc.c: 242:  C.hist[0].h[3] = C.pv_ah;
 10040  019E14  EE23  F015         	lfsr	2,_C+148	;volatile
 10041  019E18  006F FF7B FFE6     	movff	postinc2,postinc1
 10042  019E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 10043  019E24  006F FF7B FFE6     	movff	postinc2,postinc1
 10044  019E2A  006F FF7B FFE6     	movff	postinc2,postinc1
 10045  019E30  ECC9  F0F4         	call	___fltol	;wreg free
 10046  019E34  0060  F0A8  F034   	movff	btemp,btemp+10
 10047  019E3A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10048  019E40  0060  F0D0  FC6C   	movff	btemp+10,_C+235	;volatile
 10049  019E46  0060  F0D4  FC6D   	movff	btemp+11,_C+236	;volatile
 10050                           
 10051                           ;mbmc.c: 243:  C.hist[0].h[0] = C.dynamic_ah_adj;
 10052  019E4C  EE23  F01D         	lfsr	2,_C+156	;volatile
 10053  019E50  006F FF7B FFE6     	movff	postinc2,postinc1
 10054  019E56  006F FF7B FFE6     	movff	postinc2,postinc1
 10055  019E5C  006F FF7B FFE6     	movff	postinc2,postinc1
 10056  019E62  006F FF7B FFE6     	movff	postinc2,postinc1
 10057  019E68  ECC9  F0F4         	call	___fltol	;wreg free
 10058  019E6C  0060  F0A8  F034   	movff	btemp,btemp+10
 10059  019E72  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10060  019E78  0060  F0D0  FC66   	movff	btemp+10,_C+229	;volatile
 10061  019E7E  0060  F0D4  FC67   	movff	btemp+11,_C+230	;volatile
 10062                           
 10063                           ;mbmc.c: 244:  C.hist[0].pclock = time(((void*)0));
 10064  019E84  0E00               	movlw	0
 10065  019E86  6EE6               	movwf	postinc1,c
 10066  019E88  0E00               	movlw	0
 10067  019E8A  6EE6               	movwf	postinc1,c
 10068  019E8C  EC23  F00E         	call	_time	;wreg free
 10069  019E90  52E5               	movf	postdec1,f,c
 10070  019E92  006F FF9C  F041    	movff	indf1,btemp+23
 10071  019E98  52E5               	movf	postdec1,f,c
 10072  019E9A  006F FF9C  F040    	movff	indf1,btemp+22
 10073  019EA0  52E5               	movf	postdec1,f,c
 10074  019EA2  006F FF9C  F03F    	movff	indf1,btemp+21
 10075  019EA8  52E5               	movf	postdec1,f,c
 10076  019EAA  006F FF9C  F03E    	movff	indf1,btemp+20
 10077  019EB0  52E5               	movf	postdec1,f,c
 10078  019EB2  006F FF9C  F03D    	movff	indf1,btemp+19
 10079  019EB8  52E5               	movf	postdec1,f,c
 10080  019EBA  006F FF9C  F03C    	movff	indf1,btemp+18
 10081  019EC0  52E5               	movf	postdec1,f,c
 10082  019EC2  006F FF9C  F03B    	movff	indf1,btemp+17
 10083  019EC8  52E5               	movf	postdec1,f,c
 10084  019ECA  006F FF9C  F03A    	movff	indf1,btemp+16
 10085  019ED0  EE23  F04A         	lfsr	2,_C+201	;volatile
 10086  019ED4  0060  F0EB  FFDE   	movff	btemp+16,postinc2
 10087  019EDA  0060  F0EF  FFDE   	movff	btemp+17,postinc2
 10088  019EE0  0060  F0F3  FFDE   	movff	btemp+18,postinc2
 10089  019EE6  0060  F0F7  FFDE   	movff	btemp+19,postinc2
 10090  019EEC  0060  F0FB  FFDE   	movff	btemp+20,postinc2
 10091  019EF2  0060  F0FF  FFDE   	movff	btemp+21,postinc2
 10092  019EF8  0060  F103  FFDE   	movff	btemp+22,postinc2
 10093  019EFE  0060  F107  FFDE   	movff	btemp+23,postinc2
 10094                           
 10095                           ; BSR set to: 57
 10096                           ;mbmc.c: 245:  C.dynamic_ah = 0.0;
 10097  019F04  0E00               	movlw	0
 10098  019F06  006F FFA0  FC11    	movff	wreg,_C+144	;volatile
 10099  019F0C  0E00               	movlw	0
 10100  019F0E  006F FFA0  FC12    	movff	wreg,_C+145	;volatile
 10101  019F14  0E00               	movlw	0
 10102  019F16  006F FFA0  FC13    	movff	wreg,_C+146	;volatile
 10103  019F1C  0E00               	movlw	0
 10104  019F1E  006F FFA0  FC14    	movff	wreg,_C+147	;volatile
 10105                           
 10106                           ; BSR set to: 57
 10107                           ;mbmc.c: 246:  C.dynamic_ah_adj = 0.0;
 10108  019F24  0E00               	movlw	0
 10109  019F26  006F FFA0  FC1D    	movff	wreg,_C+156	;volatile
 10110  019F2C  0E00               	movlw	0
 10111  019F2E  006F FFA0  FC1E    	movff	wreg,_C+157	;volatile
 10112  019F34  0E00               	movlw	0
 10113  019F36  006F FFA0  FC1F    	movff	wreg,_C+158	;volatile
 10114  019F3C  0E00               	movlw	0
 10115  019F3E  006F FFA0  FC20    	movff	wreg,_C+159	;volatile
 10116                           
 10117                           ; BSR set to: 57
 10118                           ;mbmc.c: 247:  C.pvkw = 0.0;
 10119  019F44  0E00               	movlw	0
 10120  019F46  006F FFA0  FC29    	movff	wreg,_C+168	;volatile
 10121  019F4C  0E00               	movlw	0
 10122  019F4E  006F FFA0  FC2A    	movff	wreg,_C+169	;volatile
 10123  019F54  0E00               	movlw	0
 10124  019F56  006F FFA0  FC2B    	movff	wreg,_C+170	;volatile
 10125  019F5C  0E00               	movlw	0
 10126  019F5E  006F FFA0  FC2C    	movff	wreg,_C+171	;volatile
 10127                           
 10128                           ; BSR set to: 57
 10129                           ;mbmc.c: 248:  start_bsoc();
 10130  019F64  EC32  F015         	call	_start_bsoc	;wreg free
 10131                           
 10132                           ; BSR set to: 57
 10133                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10134  019F68  52E5               	movf	postdec1,f,c
 10135  019F6A  52E5               	movf	postdec1,f,c
 10136  019F6C  0012               	return		;funcret
 10137  019F6E                     __end_of_load_hist_data:
 10138                           	opt callstack 0
 10139                           
 10140 ;; *************** function _init_port_dma *****************
 10141 ;; Defined at:
 10142 ;;		line 104 in file "eadog.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;		None
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;		None
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  1  [STACK] void 
 10149 ;; Registers used:
 10150 ;;		wreg, status,2
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/2
 10153 ;;		On exit  : 3F/3B
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10160 ;;Total ram usage:        0 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; Hardware stack levels required when called:   15
 10163 ;; This function calls:
 10164 ;;		Nothing
 10165 ;; This function is called by:
 10166 ;;		_main
 10167 ;; This function uses a reentrant model
 10168 ;;
 10169                           
 10170                           	psect	text16
 10171  002594                     __ptext16:
 10172                           	opt callstack 0
 10173  002594                     _init_port_dma:
 10174                           	opt callstack 15
 10175                           
 10176                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
 10177                           
 10178                           ; BSR set to: 57
 10179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10180                           ;incstack = 0
 10181  002594  0E3F               	movlw	-193
 10182  002596  013B               	movlb	59	; () banked
 10183  002598  17DD               	andwf	221,f,b	;volatile
 10184                           
 10185                           ; BSR set to: 59
 10186                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
 10187  00259A  9BDD               	bcf	221,5,b	;volatile
 10188                           
 10189                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
 10190  00259C  51DD               	movf	221,w,b	;volatile
 10191  00259E  0BF9               	andlw	-7
 10192  0025A0  0902               	iorlw	2
 10193  0025A2  6FDD               	movwf	221,b	;volatile
 10194                           
 10195                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
 10196  0025A4  0EE7               	movlw	-25
 10197  0025A6  17DD               	andwf	221,f,b	;volatile
 10198                           
 10199                           ; BSR set to: 59
 10200                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
 10201  0025A8  81DD               	bsf	221,0,b	;volatile
 10202                           
 10203                           ; BSR set to: 59
 10204                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
 10205  0025AA  9DDC               	bcf	220,6,b	;volatile
 10206                           
 10207                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
 10208  0025AC  0E3D               	movlw	61
 10209  0025AE  6FD1               	movwf	209,b	;volatile
 10210  0025B0  0EEA               	movlw	234
 10211  0025B2  6FD0               	movwf	208,b	;volatile
 10212                           
 10213                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
 10214  0025B4  0E81               	movlw	low _port_data
 10215  0025B6  6FD9               	movwf	217,b	;volatile
 10216  0025B8  0E09               	movlw	high _port_data
 10217  0025BA  6FDA               	movwf	218,b	;volatile
 10218  0025BC  0E00               	movlw	low (_port_data shr (0+16))
 10219  0025BE  6FDB               	movwf	219,b	;volatile
 10220                           
 10221                           ; BSR set to: 59
 10222                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
 10223  0025C0  9BDC               	bcf	220,5,b	;volatile
 10224                           
 10225                           ; BSR set to: 59
 10226                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10227  0025C2  0012               	return		;funcret
 10228  0025C4                     __end_of_init_port_dma:
 10229                           	opt callstack 0
 10230                           
 10231 ;; *************** function _init_display *****************
 10232 ;; Defined at:
 10233 ;;		line 38 in file "eadog.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;		None
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;		None
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  1  [STACK] void 
 10240 ;; Registers used:
 10241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10242 ;; Tracked objects:
 10243 ;;		On entry : 3F/3B
 10244 ;;		On exit  : 3F/3D
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10251 ;;Total ram usage:        0 bytes
 10252 ;; Hardware stack levels used:    1
 10253 ;; Hardware stack levels required when called:   17
 10254 ;; This function calls:
 10255 ;;		_ringBufS_init
 10256 ;;		_send_lcd_cmd
 10257 ;;		_send_lcd_cmd_long
 10258 ;;		_send_lcd_data
 10259 ;;		_wdtdelay
 10260 ;; This function is called by:
 10261 ;;		_main
 10262 ;; This function uses a reentrant model
 10263 ;;
 10264                           
 10265                           	psect	text17
 10266  00038A                     __ptext17:
 10267                           	opt callstack 0
 10268  00038A                     _init_display:
 10269                           	opt callstack 13
 10270                           
 10271                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
 10272                           
 10273                           ; BSR set to: 59
 10274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10275                           ;incstack = 0
 10276  00038A  0E43               	movlw	low _ring_buf1
 10277  00038C  0100               	movlb	0	; () banked
 10278  00038E  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
 10279  000390  0E05               	movlw	high _ring_buf1
 10280  000392  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
 10281                           
 10282                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
 10283  000394  0E00               	movlw	low _ring_buf2
 10284  000396  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
 10285  000398  0E05               	movlw	high _ring_buf2
 10286  00039A  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
 10290  00039C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10291  0003A2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10292  0003A8  EC99  F013         	call	_ringBufS_init	;wreg free
 10293                           
 10294                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
 10295  0003AC  0060  F193  FFE6   	movff	_spi_link+4,postinc1
 10296  0003B2  0060  F197  FFE6   	movff	_spi_link+5,postinc1
 10297  0003B8  EC99  F013         	call	_ringBufS_init	;wreg free
 10298                           
 10299                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
 10300  0003BC  84BE               	bsf	190,2,c	;volatile
 10301                           
 10302                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
 10303  0003BE  013D               	movlb	61	; () banked
 10304  0003C0  9F14               	bcf	20,7,b	;volatile
 10305                           
 10306                           ; BSR set to: 61
 10307                           ;eadog.c: 49:  SPI1CON1 = 0x20;
 10308  0003C2  0E20               	movlw	32
 10309  0003C4  6F15               	movwf	21,b	;volatile
 10310                           
 10311                           ; BSR set to: 61
 10312                           ;eadog.c: 51:  SPI1CON2 = 0x03;
 10313  0003C6  0E03               	movlw	3
 10314  0003C8  6F16               	movwf	22,b	;volatile
 10315                           
 10316                           ; BSR set to: 61
 10317                           ;eadog.c: 53:  SPI1BAUD = 0x04;
 10318  0003CA  0E04               	movlw	4
 10319  0003CC  6F19               	movwf	25,b	;volatile
 10320                           
 10321                           ; BSR set to: 61
 10322                           ;eadog.c: 55:  SPI1CLK = 0x02;
 10323  0003CE  0E02               	movlw	2
 10324  0003D0  6F1C               	movwf	28,b	;volatile
 10325                           
 10326                           ; BSR set to: 61
 10327                           ;eadog.c: 57:  SPI1CON0 = 0x83;
 10328  0003D2  0E83               	movlw	131
 10329  0003D4  6F14               	movwf	20,b	;volatile
 10330                           
 10331                           ; BSR set to: 61
 10332                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
 10333  0003D6  8F14               	bsf	20,7,b	;volatile
 10334                           
 10335                           ; BSR set to: 61
 10336                           ;eadog.c: 60:  wdtdelay(350000);
 10337  0003D8  0E30               	movlw	48
 10338  0003DA  6EE6               	movwf	postinc1,c
 10339  0003DC  0E57               	movlw	87
 10340  0003DE  6EE6               	movwf	postinc1,c
 10341  0003E0  0E05               	movlw	5
 10342  0003E2  6EE6               	movwf	postinc1,c
 10343  0003E4  0E00               	movlw	0
 10344  0003E6  6EE6               	movwf	postinc1,c
 10345  0003E8  EC7F  F00E         	call	_wdtdelay	;wreg free
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
 10349  0003EC  0E46               	movlw	70
 10350  0003EE  6EE6               	movwf	postinc1,c
 10351  0003F0  ECE0  F010         	call	_send_lcd_cmd_long	;wreg free
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;eadog.c: 62:  send_lcd_cmd(0x41);
 10355  0003F4  0E41               	movlw	65
 10356  0003F6  6EE6               	movwf	postinc1,c
 10357  0003F8  EC00  F011         	call	_send_lcd_cmd	;wreg free
 10358                           
 10359                           ; BSR set to: 0
 10360                           ;eadog.c: 63:  wdtdelay(80);
 10361  0003FC  0E50               	movlw	80
 10362  0003FE  6EE6               	movwf	postinc1,c
 10363  000400  0E00               	movlw	0
 10364  000402  6EE6               	movwf	postinc1,c
 10365  000404  0E00               	movlw	0
 10366  000406  6EE6               	movwf	postinc1,c
 10367  000408  0E00               	movlw	0
 10368  00040A  6EE6               	movwf	postinc1,c
 10369  00040C  EC7F  F00E         	call	_wdtdelay	;wreg free
 10370                           
 10371                           ; BSR set to: 0
 10372                           ;eadog.c: 64:  send_lcd_cmd(0x53);
 10373  000410  0E53               	movlw	83
 10374  000412  6EE6               	movwf	postinc1,c
 10375  000414  EC00  F011         	call	_send_lcd_cmd	;wreg free
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;eadog.c: 65:  send_lcd_data(2);
 10379  000418  0E02               	movlw	2
 10380  00041A  6EE6               	movwf	postinc1,c
 10381  00041C  ECC6  F014         	call	_send_lcd_data	;wreg free
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;eadog.c: 66:  wdtdelay(80);
 10385  000420  0E50               	movlw	80
 10386  000422  6EE6               	movwf	postinc1,c
 10387  000424  0E00               	movlw	0
 10388  000426  6EE6               	movwf	postinc1,c
 10389  000428  0E00               	movlw	0
 10390  00042A  6EE6               	movwf	postinc1,c
 10391  00042C  0E00               	movlw	0
 10392  00042E  6EE6               	movwf	postinc1,c
 10393  000430  EC7F  F00E         	call	_wdtdelay	;wreg free
 10394                           
 10395                           ; BSR set to: 0
 10396                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
 10397  000434  0E51               	movlw	81
 10398  000436  6EE6               	movwf	postinc1,c
 10399  000438  ECE0  F010         	call	_send_lcd_cmd_long	;wreg free
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
 10403  00043C  013D               	movlb	61	; () banked
 10404  00043E  9F14               	bcf	20,7,b	;volatile
 10405                           
 10406                           ; BSR set to: 61
 10407                           ;eadog.c: 69:  SPI1CON2 = 0x02;
 10408  000440  0E02               	movlw	2
 10409  000442  6F16               	movwf	22,b	;volatile
 10410                           
 10411                           ; BSR set to: 61
 10412                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
 10413  000444  8F14               	bsf	20,7,b	;volatile
 10414                           
 10415                           ; BSR set to: 61
 10416                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
 10417  000446  931A               	bcf	26,1,b	;volatile
 10418                           
 10419                           ; BSR set to: 61
 10420                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
 10421  000448  0E3F               	movlw	-193
 10422  00044A  013B               	movlb	59	; () banked
 10423  00044C  17FD               	andwf	253,f,b	;volatile
 10424                           
 10425                           ; BSR set to: 59
 10426                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
 10427  00044E  9BFD               	bcf	253,5,b	;volatile
 10428                           
 10429                           ; BSR set to: 59
 10430                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
 10431  000450  51FD               	movf	253,w,b	;volatile
 10432  000452  0BF9               	andlw	-7
 10433  000454  0902               	iorlw	2
 10434  000456  6FFD               	movwf	253,b	;volatile
 10435                           
 10436                           ; BSR set to: 59
 10437                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
 10438  000458  0EE7               	movlw	-25
 10439  00045A  17FD               	andwf	253,f,b	;volatile
 10440                           
 10441                           ; BSR set to: 59
 10442                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
 10443  00045C  81FD               	bsf	253,0,b	;volatile
 10444                           
 10445                           ; BSR set to: 59
 10446                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
 10447  00045E  0E43               	movlw	low _ring_buf1
 10448  000460  6FF9               	movwf	249,b	;volatile
 10449  000462  0E05               	movlw	high _ring_buf1
 10450  000464  6FFA               	movwf	250,b	;volatile
 10451  000466  0E00               	movlw	low (_ring_buf1 shr (0+16))
 10452  000468  6FFB               	movwf	251,b	;volatile
 10453                           
 10454                           ; BSR set to: 59
 10455                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
 10456  00046A  9BFC               	bcf	252,5,b	;volatile
 10457                           
 10458                           ; BSR set to: 59
 10459                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
 10460  00046C  013D               	movlb	61	; () banked
 10461  00046E  831A               	bsf	26,1,b	;volatile
 10462                           
 10463                           ; BSR set to: 61
 10464                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
 10465  000470  94BE               	bcf	190,2,c	;volatile
 10466                           
 10467                           ; BSR set to: 61
 10468                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10469  000472  0012               	return		;funcret
 10470  000474                     __end_of_init_display:
 10471                           	opt callstack 0
 10472                           
 10473 ;; *************** function _send_lcd_data *****************
 10474 ;; Defined at:
 10475 ;;		line 123 in file "eadog.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;  data            1  [STACK] const unsigned char 
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;		None
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1  [STACK] void 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10484 ;; Tracked objects:
 10485 ;;		On entry : 3F/0
 10486 ;;		On exit  : 3F/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10493 ;;Total ram usage:        0 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:   16
 10496 ;; This function calls:
 10497 ;;		_SPI1_Exchange8bit
 10498 ;;		_wdtdelay
 10499 ;; This function is called by:
 10500 ;;		_init_display
 10501 ;; This function uses a reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text18
 10505  00298C                     __ptext18:
 10506                           	opt callstack 0
 10507  00298C                     _send_lcd_data:
 10508                           	opt callstack 13
 10509                           
 10510                           ; BSR set to: 61
 10511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10512                           ;incstack = 0
 10513                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
 10514  00298C  94BC               	bcf	188,2,c	;volatile
 10515                           
 10516                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
 10517                           ;stkvar	_data @ sp[(0)+-1]
 10518  00298E  0EFF               	movlw	-1
 10519  002990  50E3               	movf	plusw1,w,c
 10520  002992  6EE6               	movwf	postinc1,c
 10521  002994  EC74  F015         	call	_SPI1_Exchange8bit	;wreg free
 10522                           
 10523                           ; BSR set to: 57
 10524                           ;eadog.c: 127:  wdtdelay(8);
 10525  002998  0E08               	movlw	8
 10526  00299A  6EE6               	movwf	postinc1,c
 10527  00299C  0E00               	movlw	0
 10528  00299E  6EE6               	movwf	postinc1,c
 10529  0029A0  0E00               	movlw	0
 10530  0029A2  6EE6               	movwf	postinc1,c
 10531  0029A4  0E00               	movlw	0
 10532  0029A6  6EE6               	movwf	postinc1,c
 10533  0029A8  EC7F  F00E         	call	_wdtdelay	;wreg free
 10534                           
 10535                           ; BSR set to: 0
 10536                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
 10537  0029AC  52E5               	movf	postdec1,f,c
 10538  0029AE  0012               	return		;funcret
 10539  0029B0                     __end_of_send_lcd_data:
 10540                           	opt callstack 0
 10541                           
 10542 ;; *************** function _send_lcd_cmd_long *****************
 10543 ;; Defined at:
 10544 ;;		line 139 in file "eadog.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  cmd             1  [STACK] const unsigned char 
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;		None
 10549 ;; Return value:  Size  Location     Type
 10550 ;;                  1  [STACK] void 
 10551 ;; Registers used:
 10552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10553 ;; Tracked objects:
 10554 ;;		On entry : 3F/0
 10555 ;;		On exit  : 3F/0
 10556 ;;		Unchanged: 0/0
 10557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10562 ;;Total ram usage:        0 bytes
 10563 ;; Hardware stack levels used:    1
 10564 ;; Hardware stack levels required when called:   16
 10565 ;; This function calls:
 10566 ;;		_SPI1_Exchange8bit
 10567 ;;		_wdtdelay
 10568 ;; This function is called by:
 10569 ;;		_init_display
 10570 ;; This function uses a reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text19
 10574  0021C0                     __ptext19:
 10575                           	opt callstack 0
 10576  0021C0                     _send_lcd_cmd_long:
 10577                           	opt callstack 13
 10578                           
 10579                           ; BSR set to: 0
 10580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10581                           ;incstack = 0
 10582                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
 10583  0021C0  94BC               	bcf	188,2,c	;volatile
 10584                           
 10585                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
 10586  0021C2  0EFE               	movlw	254
 10587  0021C4  6EE6               	movwf	postinc1,c
 10588  0021C6  EC74  F015         	call	_SPI1_Exchange8bit	;wreg free
 10589                           
 10590                           ; BSR set to: 57
 10591                           ;eadog.c: 143:  wdtdelay(8);
 10592  0021CA  0E08               	movlw	8
 10593  0021CC  6EE6               	movwf	postinc1,c
 10594  0021CE  0E00               	movlw	0
 10595  0021D0  6EE6               	movwf	postinc1,c
 10596  0021D2  0E00               	movlw	0
 10597  0021D4  6EE6               	movwf	postinc1,c
 10598  0021D6  0E00               	movlw	0
 10599  0021D8  6EE6               	movwf	postinc1,c
 10600  0021DA  EC7F  F00E         	call	_wdtdelay	;wreg free
 10601                           
 10602                           ; BSR set to: 0
 10603                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
 10604                           ;stkvar	_cmd @ sp[(0)+-1]
 10605  0021DE  0EFF               	movlw	-1
 10606  0021E0  50E3               	movf	plusw1,w,c
 10607  0021E2  6EE6               	movwf	postinc1,c
 10608  0021E4  EC74  F015         	call	_SPI1_Exchange8bit	;wreg free
 10609                           
 10610                           ;eadog.c: 145:  wdtdelay(800);
 10611  0021E8  0E20               	movlw	32
 10612  0021EA  6EE6               	movwf	postinc1,c
 10613  0021EC  0E03               	movlw	3
 10614  0021EE  6EE6               	movwf	postinc1,c
 10615  0021F0  0E00               	movlw	0
 10616  0021F2  6EE6               	movwf	postinc1,c
 10617  0021F4  0E00               	movlw	0
 10618  0021F6  6EE6               	movwf	postinc1,c
 10619  0021F8  EC7F  F00E         	call	_wdtdelay	;wreg free
 10620                           
 10621                           ; BSR set to: 0
 10622                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10623  0021FC  52E5               	movf	postdec1,f,c
 10624  0021FE  0012               	return		;funcret
 10625  002200                     __end_of_send_lcd_cmd_long:
 10626                           	opt callstack 0
 10627                           
 10628 ;; *************** function _send_lcd_cmd *****************
 10629 ;; Defined at:
 10630 ;;		line 130 in file "eadog.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;  cmd             1  [STACK] const unsigned char 
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;		None
 10635 ;; Return value:  Size  Location     Type
 10636 ;;                  1  [STACK] void 
 10637 ;; Registers used:
 10638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10639 ;; Tracked objects:
 10640 ;;		On entry : 3F/0
 10641 ;;		On exit  : 3F/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10648 ;;Total ram usage:        0 bytes
 10649 ;; Hardware stack levels used:    1
 10650 ;; Hardware stack levels required when called:   16
 10651 ;; This function calls:
 10652 ;;		_SPI1_Exchange8bit
 10653 ;;		_wdtdelay
 10654 ;; This function is called by:
 10655 ;;		_init_display
 10656 ;; This function uses a reentrant model
 10657 ;;
 10658                           
 10659                           	psect	text20
 10660  002200                     __ptext20:
 10661                           	opt callstack 0
 10662  002200                     _send_lcd_cmd:
 10663                           	opt callstack 13
 10664                           
 10665                           ; BSR set to: 0
 10666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10667                           ;incstack = 0
 10668                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
 10669  002200  94BC               	bcf	188,2,c	;volatile
 10670                           
 10671                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
 10672  002202  0EFE               	movlw	254
 10673  002204  6EE6               	movwf	postinc1,c
 10674  002206  EC74  F015         	call	_SPI1_Exchange8bit	;wreg free
 10675                           
 10676                           ; BSR set to: 57
 10677                           ;eadog.c: 134:  wdtdelay(8);
 10678  00220A  0E08               	movlw	8
 10679  00220C  6EE6               	movwf	postinc1,c
 10680  00220E  0E00               	movlw	0
 10681  002210  6EE6               	movwf	postinc1,c
 10682  002212  0E00               	movlw	0
 10683  002214  6EE6               	movwf	postinc1,c
 10684  002216  0E00               	movlw	0
 10685  002218  6EE6               	movwf	postinc1,c
 10686  00221A  EC7F  F00E         	call	_wdtdelay	;wreg free
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
 10690                           ;stkvar	_cmd @ sp[(0)+-1]
 10691  00221E  0EFF               	movlw	-1
 10692  002220  50E3               	movf	plusw1,w,c
 10693  002222  6EE6               	movwf	postinc1,c
 10694  002224  EC74  F015         	call	_SPI1_Exchange8bit	;wreg free
 10695                           
 10696                           ;eadog.c: 136:  wdtdelay(8);
 10697  002228  0E08               	movlw	8
 10698  00222A  6EE6               	movwf	postinc1,c
 10699  00222C  0E00               	movlw	0
 10700  00222E  6EE6               	movwf	postinc1,c
 10701  002230  0E00               	movlw	0
 10702  002232  6EE6               	movwf	postinc1,c
 10703  002234  0E00               	movlw	0
 10704  002236  6EE6               	movwf	postinc1,c
 10705  002238  EC7F  F00E         	call	_wdtdelay	;wreg free
 10706                           
 10707                           ; BSR set to: 0
 10708                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 10709  00223C  52E5               	movf	postdec1,f,c
 10710  00223E  0012               	return		;funcret
 10711  002240                     __end_of_send_lcd_cmd:
 10712                           	opt callstack 0
 10713                           
 10714 ;; *************** function _wdtdelay *****************
 10715 ;; Defined at:
 10716 ;;		line 23 in file "eadog.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  delay           4  [STACK] const unsigned long 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1  [STACK] void 
 10723 ;; Registers used:
 10724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10725 ;; Tracked objects:
 10726 ;;		On entry : 2/3D
 10727 ;;		On exit  : 3F/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10734 ;;Total ram usage:        0 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; Hardware stack levels required when called:   15
 10737 ;; This function calls:
 10738 ;;		Nothing
 10739 ;; This function is called by:
 10740 ;;		_init_display
 10741 ;;		_send_lcd_data
 10742 ;;		_send_lcd_cmd
 10743 ;;		_send_lcd_cmd_long
 10744 ;; This function uses a reentrant model
 10745 ;;
 10746                           
 10747                           	psect	text21
 10748  001CFE                     __ptext21:
 10749                           	opt callstack 0
 10750  001CFE                     _wdtdelay:
 10751                           	opt callstack 14
 10752                           
 10753                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10754                           
 10755                           ; BSR set to: 0
 10756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10757                           ;incstack = 0
 10758  001CFE  0100               	movlb	0	; () banked
 10759  001D00  6B90               	clrf	wdtdelay@dcount& (0+255),b
 10760  001D02  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10761  001D04  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10762  001D06  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10763  001D08                     l1618:
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;eadog.c: 28:   __nop();
 10767  001D08  F000               	nop	
 10768  001D0A  0004               	clrwdt		;# 
 10769                           
 10770                           ;eadog.c: 30:  };
 10771  001D0C  0E01               	movlw	1
 10772  001D0E  0100               	movlb	0	; () banked
 10773  001D10  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 10774  001D12  0E00               	movlw	0
 10775  001D14  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10776  001D16  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10777  001D18  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;stkvar	_delay @ sp[(0)+-4]
 10781  001D1A  0EFC               	movlw	-4
 10782  001D1C  006F FF8C  F02A    	movff	plusw1,btemp
 10783  001D22  5190               	movf	wdtdelay@dcount& (0+255),w,b
 10784  001D24  5C2A               	subwf	btemp^0,w,c
 10785  001D26  0EFD               	movlw	-3
 10786  001D28  006F FF8C  F02A    	movff	plusw1,btemp
 10787  001D2E  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10788  001D30  582A               	subwfb	btemp^0,w,c
 10789  001D32  0EFE               	movlw	-2
 10790  001D34  006F FF8C  F02A    	movff	plusw1,btemp
 10791  001D3A  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10792  001D3C  582A               	subwfb	btemp^0,w,c
 10793  001D3E  0EFF               	movlw	-1
 10794  001D40  006F FF8C  F02A    	movff	plusw1,btemp
 10795  001D46  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10796  001D48  582A               	subwfb	btemp^0,w,c
 10797  001D4A  B0D8               	btfsc	status,0,c
 10798  001D4C  D7DD               	goto	l1618
 10799                           
 10800                           ; BSR set to: 0
 10801                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10802  001D4E  52E5               	movf	postdec1,f,c
 10803  001D50  52E5               	movf	postdec1,f,c
 10804  001D52  52E5               	movf	postdec1,f,c
 10805  001D54  52E5               	movf	postdec1,f,c
 10806  001D56  0012               	return		;funcret
 10807  001D58                     __end_of_wdtdelay:
 10808                           	opt callstack 0
 10809                           
 10810 ;; *************** function _SPI1_Exchange8bit *****************
 10811 ;; Defined at:
 10812 ;;		line 79 in file "mcc_generated_files/spi1.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;  data            1  [STACK] unsigned char 
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;		None
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  1  [STACK] unsigned char 
 10819 ;; Registers used:
 10820 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/1
 10823 ;;		On exit  : 3F/39
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10830 ;;Total ram usage:        0 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:   15
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_send_lcd_data
 10837 ;;		_send_lcd_cmd
 10838 ;;		_send_lcd_cmd_long
 10839 ;;		_set_dac
 10840 ;; This function uses a reentrant model
 10841 ;;
 10842                           
 10843                           	psect	text22
 10844  002AE8                     __ptext22:
 10845                           	opt callstack 0
 10846  002AE8                     _SPI1_Exchange8bit:
 10847                           	opt callstack 14
 10848                           
 10849                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 10850                           
 10851                           ; BSR set to: 0
 10852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10853                           ;incstack = 0
 10854  002AE8  0E01               	movlw	1
 10855  002AEA  013D               	movlb	61	; () banked
 10856  002AEC  6F12               	movwf	18,b	;volatile
 10857                           
 10858                           ; BSR set to: 61
 10859                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 10860                           ;stkvar	_data @ sp[(0)+-1]
 10861  002AEE  0EFF               	movlw	-1
 10862  002AF0  006F FF8F FD11     	movff	plusw1,15633	;volatile
 10863  002AF6                     l809:
 10864                           
 10865                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 10866  002AF6  0139               	movlb	57	; () banked
 10867  002AF8  A9A2               	btfss	162,4,b	;volatile
 10868  002AFA  D7FD               	goto	l809
 10869                           
 10870                           ; BSR set to: 57
 10871                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 10872  002AFC  006F F440  F02A    	movff	15632,btemp	;volatile
 10873                           
 10874                           ; BSR set to: 57
 10875                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10876  002B02  52E5               	movf	postdec1,f,c
 10877  002B04  0012               	return		;funcret
 10878  002B06                     __end_of_SPI1_Exchange8bit:
 10879                           	opt callstack 0
 10880                           
 10881 ;; *************** function _ringBufS_init *****************
 10882 ;; Defined at:
 10883 ;;		line 22 in file "ringbufs.c"
 10884 ;; Parameters:    Size  Location     Type
 10885 ;;  _this           2  [STACK] PTR volatile struct ring
 10886 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;		None
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1  [STACK] void 
 10891 ;; Registers used:
 10892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10902 ;;Total ram usage:        0 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:   16
 10905 ;; This function calls:
 10906 ;;		_memset
 10907 ;; This function is called by:
 10908 ;;		_init_display
 10909 ;; This function uses a reentrant model
 10910 ;;
 10911                           
 10912                           	psect	text23
 10913  002732                     __ptext23:
 10914                           	opt callstack 0
 10915  002732                     _ringBufS_init:
 10916                           	opt callstack 13
 10917                           
 10918                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 10919                           
 10920                           ; BSR set to: 57
 10921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10922                           ;incstack = 0
 10923  002732  0E43               	movlw	67
 10924  002734  6EE6               	movwf	postinc1,c
 10925  002736  0E00               	movlw	0
 10926  002738  6EE6               	movwf	postinc1,c
 10927  00273A  0E00               	movlw	0
 10928  00273C  6EE6               	movwf	postinc1,c
 10929  00273E  0E00               	movlw	0
 10930  002740  6EE6               	movwf	postinc1,c
 10931                           
 10932                           ;stkvar	__this @ sp[(-4)+-2]
 10933  002742  0EFA               	movlw	-6
 10934  002744  006F FF8F FFE6     	movff	plusw1,postinc1
 10935  00274A  006F FF8F FFE6     	movff	plusw1,postinc1
 10936  002750  EC4F  F0DA         	call	_memset	;wreg free
 10937                           
 10938                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10939  002754  52E5               	movf	postdec1,f,c
 10940  002756  52E5               	movf	postdec1,f,c
 10941  002758  0012               	return		;funcret
 10942  00275A                     __end_of_ringBufS_init:
 10943                           	opt callstack 0
 10944                           
 10945 ;; *************** function _init_bsoc *****************
 10946 ;; Defined at:
 10947 ;;		line 110 in file "bsoc.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;		None
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;		None
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  1  [STACK] void 
 10954 ;; Registers used:
 10955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/1
 10958 ;;		On exit  : 0/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10965 ;;Total ram usage:        0 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:   18
 10968 ;; This function calls:
 10969 ;;		_TMR3_SetInterruptHandler
 10970 ;;		_Volts_to_SOC
 10971 ;;		___fldiv
 10972 ;;		___flmul
 10973 ;;		___fltol
 10974 ;;		___xxtofl
 10975 ;;		_conv_raw_result
 10976 ;; This function is called by:
 10977 ;;		_main
 10978 ;; This function uses a reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text24
 10982  01C9EE                     __ptext24:
 10983                           	opt callstack 0
 10984  01C9EE                     _init_bsoc:
 10985                           	opt callstack 12
 10986                           
 10987                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
 10988                           
 10989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10990                           ;incstack = 0
 10991  01C9EE  0E00               	movlw	0
 10992  01C9F0  6EE6               	movwf	postinc1,c
 10993  01C9F2  0E00               	movlw	0
 10994  01C9F4  6EE6               	movwf	postinc1,c
 10995  01C9F6  0E7A               	movlw	122
 10996  01C9F8  6EE6               	movwf	postinc1,c
 10997  01C9FA  0E44               	movlw	68
 10998  01C9FC  6EE6               	movwf	postinc1,c
 10999  01C9FE  0E00               	movlw	0
 11000  01CA00  6EE6               	movwf	postinc1,c
 11001  01CA02  0E04               	movlw	4
 11002  01CA04  6EE6               	movwf	postinc1,c
 11003  01CA06  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 11004  01CA0A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11005  01CA10  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11006  01CA16  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11007  01CA1C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11008  01CA22  ECC9  F0F4         	call	___fltol	;wreg free
 11009  01CA26  0060  F0AB  FFE6   	movff	btemp,postinc1
 11010  01CA2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11011  01CA32  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11012  01CA38  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11013  01CA3E  0E00               	movlw	0
 11014  01CA40  6EE6               	movwf	postinc1,c
 11015  01CA42  EC9B  F0EC         	call	___xxtofl	;wreg free
 11016  01CA46  0060  F0AB  FFE6   	movff	btemp,postinc1
 11017  01CA4C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11018  01CA52  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11019  01CA58  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11020  01CA5E  EC32  F0B3         	call	___flmul	;wreg free
 11021  01CA62  0060  F0AB  FFE6   	movff	btemp,postinc1
 11022  01CA68  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11023  01CA6E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11024  01CA74  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11025  01CA7A  ECC9  F0F4         	call	___fltol	;wreg free
 11026  01CA7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 11027  01CA84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11028  01CA8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11029  01CA90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11030  01CA96  ECA8  F004         	call	_Volts_to_SOC	;wreg free
 11031  01CA9A  0060  F0A8  FC37   	movff	btemp,_C+182	;volatile
 11032  01CAA0  0060  F0AC  FC38   	movff	btemp+1,_C+183	;volatile
 11033                           
 11034                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
 11035  01CAA6  EE23  F00D         	lfsr	2,_C+140	;volatile
 11036  01CAAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11037  01CAB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11038  01CAB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11039  01CABC  006F FF7B FFE6     	movff	postinc2,postinc1
 11040  01CAC2  0E00               	movlw	0
 11041  01CAC4  6EE6               	movwf	postinc1,c
 11042  01CAC6  0E00               	movlw	0
 11043  01CAC8  6EE6               	movwf	postinc1,c
 11044  01CACA  0EC8               	movlw	200
 11045  01CACC  6EE6               	movwf	postinc1,c
 11046  01CACE  0E42               	movlw	66
 11047  01CAD0  6EE6               	movwf	postinc1,c
 11048  01CAD2  0E00               	movlw	0
 11049  01CAD4  6EE6               	movwf	postinc1,c
 11050  01CAD6  0E00               	movlw	0
 11051  01CAD8  6EE6               	movwf	postinc1,c
 11052  01CADA  0E7A               	movlw	122
 11053  01CADC  6EE6               	movwf	postinc1,c
 11054  01CADE  0E44               	movlw	68
 11055  01CAE0  6EE6               	movwf	postinc1,c
 11056  01CAE2  0E00               	movlw	0
 11057  01CAE4  6EE6               	movwf	postinc1,c
 11058  01CAE6  0E04               	movlw	4
 11059  01CAE8  6EE6               	movwf	postinc1,c
 11060  01CAEA  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 11061  01CAEE  0060  F0AB  FFE6   	movff	btemp,postinc1
 11062  01CAF4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11063  01CAFA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11064  01CB00  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11065  01CB06  ECC9  F0F4         	call	___fltol	;wreg free
 11066  01CB0A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11067  01CB10  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11068  01CB16  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11069  01CB1C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11070  01CB22  0E00               	movlw	0
 11071  01CB24  6EE6               	movwf	postinc1,c
 11072  01CB26  EC9B  F0EC         	call	___xxtofl	;wreg free
 11073  01CB2A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11074  01CB30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11075  01CB36  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11076  01CB3C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11077  01CB42  EC32  F0B3         	call	___flmul	;wreg free
 11078  01CB46  0060  F0AB  FFE6   	movff	btemp,postinc1
 11079  01CB4C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11080  01CB52  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11081  01CB58  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11082  01CB5E  ECC9  F0F4         	call	___fltol	;wreg free
 11083  01CB62  0060  F0AB  FFE6   	movff	btemp,postinc1
 11084  01CB68  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11085  01CB6E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11086  01CB74  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11087  01CB7A  ECA8  F004         	call	_Volts_to_SOC	;wreg free
 11088  01CB7E  0060  F0A8  F034   	movff	btemp,btemp+10
 11089  01CB84  0060  F0AC  F035   	movff	btemp+1,btemp+11
 11090  01CB8A  5034               	movf	(btemp+10)^0,w,c
 11091  01CB8C  6E2E               	movwf	(btemp+4)^0,c
 11092  01CB8E  5035               	movf	(btemp+11)^0,w,c
 11093  01CB90  6E2F               	movwf	(btemp+5)^0,c
 11094  01CB92  6A30               	clrf	(btemp+6)^0,c
 11095  01CB94  6A31               	clrf	(btemp+7)^0,c
 11096  01CB96  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 11097  01CB9C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 11098  01CBA2  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 11099  01CBA8  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 11100  01CBAE  0E00               	movlw	0
 11101  01CBB0  6EE6               	movwf	postinc1,c
 11102  01CBB2  EC9B  F0EC         	call	___xxtofl	;wreg free
 11103  01CBB6  0060  F0AB  FFE6   	movff	btemp,postinc1
 11104  01CBBC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11105  01CBC2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11106  01CBC8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11107  01CBCE  EC64  F0C1         	call	___fldiv	;wreg free
 11108  01CBD2  0060  F0AB  FFE6   	movff	btemp,postinc1
 11109  01CBD8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11110  01CBDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11111  01CBE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11112  01CBEA  EC32  F0B3         	call	___flmul	;wreg free
 11113  01CBEE  0060  F0A8  FC11   	movff	btemp,_C+144	;volatile
 11114  01CBF4  0060  F0AC  FC12   	movff	btemp+1,_C+145	;volatile
 11115  01CBFA  0060  F0B0  FC13   	movff	btemp+2,_C+146	;volatile
 11116  01CC00  0060  F0B4  FC14   	movff	btemp+3,_C+147	;volatile
 11117                           
 11118                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 11119  01CC06  EE23  F011         	lfsr	2,_C+144	;volatile
 11120  01CC0A  006F FF78  FC1D    	movff	postinc2,_C+156	;volatile
 11121  01CC10  006F FF78  FC1E    	movff	postinc2,_C+157	;volatile
 11122  01CC16  006F FF78  FC1F    	movff	postinc2,_C+158	;volatile
 11123  01CC1C  006F FF74  FC20    	movff	postdec2,_C+159	;volatile
 11124                           
 11125                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 11126  01CC22  0EE2               	movlw	low _calc_bsoc
 11127  01CC24  6EE6               	movwf	postinc1,c
 11128  01CC26  0E49               	movlw	high _calc_bsoc
 11129  01CC28  6EE6               	movwf	postinc1,c
 11130  01CC2A  0E01               	movlw	low (_calc_bsoc shr (0+16))
 11131  01CC2C  6EE6               	movwf	postinc1,c
 11132  01CC2E  EC25  F014         	call	_TMR3_SetInterruptHandler	;wreg free
 11133                           
 11134                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11135  01CC32  0012               	return		;funcret
 11136  01CC34                     __end_of_init_bsoc:
 11137                           	opt callstack 0
 11138                           
 11139 ;; *************** function _Volts_to_SOC *****************
 11140 ;; Defined at:
 11141 ;;		line 175 in file "bsoc.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;  cvoltage        4  [STACK] const unsigned long 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;  soc             2  [STACK] unsigned short 
 11146 ;;  slot            1  [STACK] unsigned char 
 11147 ;; Return value:  Size  Location     Type
 11148 ;;                  2  [STACK] unsigned short 
 11149 ;; Registers used:
 11150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11151 ;; Tracked objects:
 11152 ;;		On entry : 0/1
 11153 ;;		On exit  : 0/0
 11154 ;;		Unchanged: 0/0
 11155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11160 ;;Total ram usage:        0 bytes
 11161 ;; Hardware stack levels used:    1
 11162 ;; Hardware stack levels required when called:   15
 11163 ;; This function calls:
 11164 ;;		Nothing
 11165 ;; This function is called by:
 11166 ;;		_init_bsoc
 11167 ;; This function uses a reentrant model
 11168 ;;
 11169                           
 11170                           	psect	text25
 11171  000950                     __ptext25:
 11172                           	opt callstack 0
 11173  000950                     _Volts_to_SOC:
 11174                           	opt callstack 0
 11175                           
 11176                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11177  000950  52E6               	movf	postinc1,f,c
 11178  000952  52E6               	movf	postinc1,f,c
 11179  000954  52E6               	movf	postinc1,f,c
 11180                           
 11181                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 11182                           ;stkvar	_soc @ sp[(-3)+0]
 11183                           
 11184                           ;incstack = 0
 11185  000956  0EFD               	movlw	-3
 11186  000958  6AE3               	clrf	plusw1,c
 11187  00095A  0EFE               	movlw	-2
 11188  00095C  6AE3               	clrf	plusw1,c
 11189                           
 11190                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 11191                           ;stkvar	_slot @ sp[(-3)+2]
 11192  00095E  0EFF               	movlw	-1
 11193  000960  6AE3               	clrf	plusw1,c
 11194  000962                     l13894:
 11195                           
 11196                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 11197                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 11198                           ;stkvar	_slot @ sp[(-3)+2]
 11199  000962  0EFF               	movlw	-1
 11200  000964  50E3               	movf	plusw1,w,c
 11201  000966  0D08               	mullw	8
 11202  000968  0EAB               	movlw	low _BVSOC_TABLE
 11203  00096A  24F3               	addwf	243,w,c
 11204  00096C  6EF6               	movwf	tblptrl,c
 11205  00096E  0EF7               	movlw	high _BVSOC_TABLE
 11206  000970  20F4               	addwfc	244,w,c
 11207  000972  6EF7               	movwf	tblptrh,c
 11208  000974                     	if	1	;There are 3 active tblptr bytes
 11209  000974  6AF8               	clrf	tblptru,c
 11210  000976  0E00               	movlw	low (__mediumconst shr (0+16))
 11211  000978  22F8               	addwfc	tblptru,f,c
 11212  00097A                     	endif
 11213  00097A  0EF9               	movlw	-7
 11214  00097C  50E3               	movf	plusw1,w,c
 11215  00097E  0009               	tblrd		*+
 11216  000980  5CF5               	subwf	tablat,w,c
 11217  000982  0EFA               	movlw	-6
 11218  000984  50E3               	movf	plusw1,w,c
 11219  000986  0009               	tblrd		*+
 11220  000988  58F5               	subwfb	tablat,w,c
 11221  00098A  0EFB               	movlw	-5
 11222  00098C  50E3               	movf	plusw1,w,c
 11223  00098E  0009               	tblrd		*+
 11224  000990  58F5               	subwfb	tablat,w,c
 11225  000992  0EFC               	movlw	-4
 11226  000994  50E3               	movf	plusw1,w,c
 11227  000996  0009               	tblrd		*+
 11228  000998  58F5               	subwfb	tablat,w,c
 11229  00099A  B0D8               	btfsc	status,0,c
 11230  00099C  D020               	goto	l13898
 11231                           
 11232                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 11233                           ;stkvar	_slot @ sp[(-3)+2]
 11234  00099E  0EFF               	movlw	-1
 11235  0009A0  50E3               	movf	plusw1,w,c
 11236  0009A2  0D08               	mullw	8
 11237  0009A4  0E04               	movlw	4
 11238  0009A6  26F3               	addwf	243,f,c
 11239  0009A8  0E00               	movlw	0
 11240  0009AA  22F4               	addwfc	244,f,c
 11241  0009AC  0EAB               	movlw	low _BVSOC_TABLE
 11242  0009AE  24F3               	addwf	243,w,c
 11243  0009B0  6EF6               	movwf	tblptrl,c
 11244  0009B2  0EF7               	movlw	high _BVSOC_TABLE
 11245  0009B4  20F4               	addwfc	244,w,c
 11246  0009B6  6EF7               	movwf	tblptrh,c
 11247  0009B8                     	if	1	;There are 3 active tblptr bytes
 11248  0009B8  6AF8               	clrf	tblptru,c
 11249  0009BA  0E00               	movlw	low (__mediumconst shr (0+16))
 11250  0009BC  22F8               	addwfc	tblptru,f,c
 11251  0009BE                     	endif
 11252  0009BE  0009               	tblrd		*+
 11253  0009C0  006F FFD4  F034    	movff	tablat,btemp+10
 11254  0009C6  0009               	tblrd		*+
 11255  0009C8  006F FFD4  F035    	movff	tablat,btemp+11
 11256                           
 11257                           ;stkvar	_soc @ sp[(-3)+0]
 11258  0009CE  0EFD               	movlw	-3
 11259  0009D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 11260  0009D6  0EFE               	movlw	-2
 11261  0009D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 11262  0009DE                     l13898:
 11263                           
 11264                           ;bsoc.c: 187:  }
 11265                           ;stkvar	_slot @ sp[(-3)+2]
 11266  0009DE  0EFF               	movlw	-1
 11267  0009E0  2AE3               	incf	plusw1,f,c
 11268                           
 11269                           ;stkvar	_slot @ sp[(-3)+2]
 11270  0009E2  0EFF               	movlw	-1
 11271  0009E4  006F FF8C  F02A    	movff	plusw1,btemp
 11272  0009EA  0E19               	movlw	25
 11273  0009EC  642A               	cpfsgt	btemp^0,c
 11274  0009EE  D7B9               	goto	l13894
 11275                           
 11276                           ;bsoc.c: 188:  return soc;
 11277                           ;stkvar	_soc @ sp[(-3)+0]
 11278  0009F0  0EFD               	movlw	-3
 11279  0009F2  006F FF8C  F02A    	movff	plusw1,btemp
 11280  0009F8  0EFE               	movlw	-2
 11281  0009FA  006F FF8C  F02B    	movff	plusw1,btemp+1
 11282                           
 11283                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 11284  000A00  0EF9               	movlw	249
 11285  000A02  26E1               	addwf	fsr1l,f,c
 11286  000A04  0EFF               	movlw	255
 11287  000A06  22E2               	addwfc	fsr1h,f,c
 11288  000A08  0012               	return		;funcret
 11289  000A0A                     __end_of_Volts_to_SOC:
 11290                           	opt callstack 0
 11291                           
 11292 ;; *************** function _hid_display *****************
 11293 ;; Defined at:
 11294 ;;		line 22 in file "hid.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;  h               2  [STACK] PTR struct H_data
 11297 ;;		 -> H(9), 
 11298 ;; Auto vars:     Size  Location     Type
 11299 ;;		None
 11300 ;; Return value:  Size  Location     Type
 11301 ;;                  2  [STACK] PTR struct H_data
 11302 ;; Registers used:
 11303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 11304 ;; Tracked objects:
 11305 ;;		On entry : 0/39
 11306 ;;		On exit  : 0/0
 11307 ;;		Unchanged: 0/0
 11308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11313 ;;Total ram usage:        0 bytes
 11314 ;; Hardware stack levels used:    1
 11315 ;; Hardware stack levels required when called:   17
 11316 ;; This function calls:
 11317 ;;		_hid_input
 11318 ;; This function is called by:
 11319 ;;		_main
 11320 ;; This function uses a reentrant model
 11321 ;;
 11322                           
 11323                           	psect	text26
 11324  01D508                     __ptext26:
 11325                           	opt callstack 0
 11326  01D508                     _hid_display:
 11327                           	opt callstack 13
 11328                           
 11329                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 11330                           ;stkvar	_h @ sp[(0)+-2]
 11331                           
 11332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11333                           ;incstack = 0
 11334  01D508  0EFE               	movlw	-2
 11335  01D50A  006F FF8F FFE6     	movff	plusw1,postinc1
 11336  01D510  006F FF8F FFE6     	movff	plusw1,postinc1
 11337  01D516  EC88  F0FB         	call	_hid_input	;wreg free
 11338                           
 11339                           ;hid.c: 26:  switch (h->h_state) {
 11340  01D51A  D0E6               	goto	l17098
 11341  01D51C                     l17072:
 11342                           
 11343                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 11344                           ;stkvar	_h @ sp[(0)+-2]
 11345  01D51C  0EFE               	movlw	-2
 11346  01D51E  006F FF8C  F034    	movff	plusw1,btemp+10
 11347  01D524  0EFF               	movlw	-1
 11348  01D526  006F FF8C  F035    	movff	plusw1,btemp+11
 11349  01D52C  0E01               	movlw	1
 11350  01D52E  2434               	addwf	(btemp+10)^0,w,c
 11351  01D530  6ED9               	movwf	fsr2l,c
 11352  01D532  0E00               	movlw	0
 11353  01D534  2035               	addwfc	(btemp+11)^0,w,c
 11354  01D536  6EDA               	movwf	fsr2h,c
 11355  01D538  0E01               	movlw	1
 11356  01D53A  6EDF               	movwf	indf2,c
 11357                           
 11358                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 11359                           ;stkvar	_h @ sp[(0)+-2]
 11360  01D53C  0EFE               	movlw	-2
 11361  01D53E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11362  01D544  0EFF               	movlw	-1
 11363  01D546  006F FF8F FFDA     	movff	plusw1,fsr2h
 11364  01D54C  0E00               	movlw	0
 11365  01D54E  6EDF               	movwf	indf2,c
 11366                           
 11367                           ;hid.c: 30:   h->wait_enter = 1;
 11368                           ;stkvar	_h @ sp[(0)+-2]
 11369  01D550  0EFE               	movlw	-2
 11370  01D552  006F FF8C  F034    	movff	plusw1,btemp+10
 11371  01D558  0EFF               	movlw	-1
 11372  01D55A  006F FF8C  F035    	movff	plusw1,btemp+11
 11373  01D560  0E04               	movlw	4
 11374  01D562  2434               	addwf	(btemp+10)^0,w,c
 11375  01D564  6ED9               	movwf	fsr2l,c
 11376  01D566  0E00               	movlw	0
 11377  01D568  2035               	addwfc	(btemp+11)^0,w,c
 11378  01D56A  6EDA               	movwf	fsr2h,c
 11379  01D56C  0E01               	movlw	1
 11380  01D56E  6EDF               	movwf	indf2,c
 11381                           
 11382                           ;hid.c: 31:   h->wait_select = 1;
 11383                           ;stkvar	_h @ sp[(0)+-2]
 11384  01D570  0EFE               	movlw	-2
 11385  01D572  006F FF8C  F034    	movff	plusw1,btemp+10
 11386  01D578  0EFF               	movlw	-1
 11387  01D57A  006F FF8C  F035    	movff	plusw1,btemp+11
 11388  01D580  0E02               	movlw	2
 11389  01D582  2434               	addwf	(btemp+10)^0,w,c
 11390  01D584  6ED9               	movwf	fsr2l,c
 11391  01D586  0E00               	movlw	0
 11392  01D588  2035               	addwfc	(btemp+11)^0,w,c
 11393  01D58A  6EDA               	movwf	fsr2h,c
 11394  01D58C  0E01               	movlw	1
 11395  01D58E  6EDF               	movwf	indf2,c
 11396                           
 11397                           ;hid.c: 32:   h->wait_calib = 1;
 11398                           ;stkvar	_h @ sp[(0)+-2]
 11399  01D590  0EFE               	movlw	-2
 11400  01D592  006F FF8C  F034    	movff	plusw1,btemp+10
 11401  01D598  0EFF               	movlw	-1
 11402  01D59A  006F FF8C  F035    	movff	plusw1,btemp+11
 11403  01D5A0  0E06               	movlw	6
 11404  01D5A2  2434               	addwf	(btemp+10)^0,w,c
 11405  01D5A4  6ED9               	movwf	fsr2l,c
 11406  01D5A6  0E00               	movlw	0
 11407  01D5A8  2035               	addwfc	(btemp+11)^0,w,c
 11408  01D5AA  6EDA               	movwf	fsr2h,c
 11409  01D5AC  0E01               	movlw	1
 11410  01D5AE  6EDF               	movwf	indf2,c
 11411                           
 11412                           ;hid.c: 33:   h->select_p = SW_OFF;
 11413                           ;stkvar	_h @ sp[(0)+-2]
 11414  01D5B0  0EFE               	movlw	-2
 11415  01D5B2  006F FF8C  F034    	movff	plusw1,btemp+10
 11416  01D5B8  0EFF               	movlw	-1
 11417  01D5BA  006F FF8C  F035    	movff	plusw1,btemp+11
 11418  01D5C0  0E03               	movlw	3
 11419  01D5C2  2434               	addwf	(btemp+10)^0,w,c
 11420  01D5C4  6ED9               	movwf	fsr2l,c
 11421  01D5C6  0E00               	movlw	0
 11422  01D5C8  2035               	addwfc	(btemp+11)^0,w,c
 11423  01D5CA  6EDA               	movwf	fsr2h,c
 11424  01D5CC  0E00               	movlw	0
 11425  01D5CE  6EDF               	movwf	indf2,c
 11426                           
 11427                           ;hid.c: 34:   h->enter_p = SW_OFF;
 11428                           ;stkvar	_h @ sp[(0)+-2]
 11429  01D5D0  0EFE               	movlw	-2
 11430  01D5D2  006F FF8C  F034    	movff	plusw1,btemp+10
 11431  01D5D8  0EFF               	movlw	-1
 11432  01D5DA  006F FF8C  F035    	movff	plusw1,btemp+11
 11433  01D5E0  0E05               	movlw	5
 11434  01D5E2  2434               	addwf	(btemp+10)^0,w,c
 11435  01D5E4  6ED9               	movwf	fsr2l,c
 11436  01D5E6  0E00               	movlw	0
 11437  01D5E8  2035               	addwfc	(btemp+11)^0,w,c
 11438  01D5EA  6EDA               	movwf	fsr2h,c
 11439  01D5EC  0E00               	movlw	0
 11440  01D5EE  6EDF               	movwf	indf2,c
 11441                           
 11442                           ;hid.c: 35:   h->calib_p = SW_OFF;
 11443                           ;stkvar	_h @ sp[(0)+-2]
 11444  01D5F0  0EFE               	movlw	-2
 11445  01D5F2  006F FF8C  F034    	movff	plusw1,btemp+10
 11446  01D5F8  0EFF               	movlw	-1
 11447  01D5FA  006F FF8C  F035    	movff	plusw1,btemp+11
 11448  01D600  0E07               	movlw	7
 11449  01D602  2434               	addwf	(btemp+10)^0,w,c
 11450  01D604  6ED9               	movwf	fsr2l,c
 11451  01D606  0E00               	movlw	0
 11452  01D608  2035               	addwfc	(btemp+11)^0,w,c
 11453  01D60A  6EDA               	movwf	fsr2h,c
 11454  01D60C  0E00               	movlw	0
 11455  01D60E  D06A               	goto	L6
 11456  01D610                     l17088:
 11457                           
 11458                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 11459                           ;stkvar	_h @ sp[(0)+-2]
 11460  01D610  0EFE               	movlw	-2
 11461  01D612  006F FF8C  F034    	movff	plusw1,btemp+10
 11462  01D618  0EFF               	movlw	-1
 11463  01D61A  006F FF8C  F035    	movff	plusw1,btemp+11
 11464  01D620  0E02               	movlw	2
 11465  01D622  2434               	addwf	(btemp+10)^0,w,c
 11466  01D624  6ED9               	movwf	fsr2l,c
 11467  01D626  0E00               	movlw	0
 11468  01D628  2035               	addwfc	(btemp+11)^0,w,c
 11469  01D62A  6EDA               	movwf	fsr2h,c
 11470  01D62C  50DF               	movf	indf2,w,c
 11471  01D62E  A4D8               	btfss	status,2,c
 11472  01D630  D076               	goto	l2300
 11473                           
 11474                           ;stkvar	_h @ sp[(0)+-2]
 11475  01D632  0EFE               	movlw	-2
 11476  01D634  006F FF8C  F034    	movff	plusw1,btemp+10
 11477  01D63A  0EFF               	movlw	-1
 11478  01D63C  006F FF8C  F035    	movff	plusw1,btemp+11
 11479  01D642  0E03               	movlw	3
 11480  01D644  2434               	addwf	(btemp+10)^0,w,c
 11481  01D646  6ED9               	movwf	fsr2l,c
 11482  01D648  0E00               	movlw	0
 11483  01D64A  2035               	addwfc	(btemp+11)^0,w,c
 11484  01D64C  6EDA               	movwf	fsr2h,c
 11485  01D64E  50DF               	movf	indf2,w,c
 11486  01D650  A4D8               	btfss	status,2,c
 11487  01D652  D065               	goto	l2300
 11488                           
 11489                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 11490                           ;stkvar	_h @ sp[(0)+-2]
 11491  01D654  0EFE               	movlw	-2
 11492  01D656  006F FF8C  F034    	movff	plusw1,btemp+10
 11493  01D65C  0EFF               	movlw	-1
 11494  01D65E  006F FF8C  F035    	movff	plusw1,btemp+11
 11495  01D664  0E08               	movlw	8
 11496  01D666  2434               	addwf	(btemp+10)^0,w,c
 11497  01D668  6ED9               	movwf	fsr2l,c
 11498  01D66A  0E00               	movlw	0
 11499  01D66C  2035               	addwfc	(btemp+11)^0,w,c
 11500  01D66E  6EDA               	movwf	fsr2h,c
 11501                           
 11502                           ;stkvar	_h @ sp[(0)+-2]
 11503  01D670  0EFE               	movlw	-2
 11504  01D672  006F FF8C  F034    	movff	plusw1,btemp+10
 11505  01D678  0EFF               	movlw	-1
 11506  01D67A  006F FF8C  F035    	movff	plusw1,btemp+11
 11507  01D680  0E08               	movlw	8
 11508  01D682  2434               	addwf	(btemp+10)^0,w,c
 11509  01D684  6EE9               	movwf	fsr0l,c
 11510  01D686  0E00               	movlw	0
 11511  01D688  2035               	addwfc	(btemp+11)^0,w,c
 11512  01D68A  6EEA               	movwf	fsr0h,c
 11513  01D68C  2AEF               	incf	indf0,f,c
 11514  01D68E  50EF               	movf	indf0,w,c
 11515  01D690  0B03               	andlw	3
 11516  01D692  6EDF               	movwf	indf2,c
 11517                           
 11518                           ;hid.c: 41:    h->hid_display = h->sequence;
 11519                           ;stkvar	_h @ sp[(0)+-2]
 11520  01D694  0EFE               	movlw	-2
 11521  01D696  006F FF8C  F034    	movff	plusw1,btemp+10
 11522  01D69C  0EFF               	movlw	-1
 11523  01D69E  006F FF8C  F035    	movff	plusw1,btemp+11
 11524  01D6A4  0E08               	movlw	8
 11525  01D6A6  2434               	addwf	(btemp+10)^0,w,c
 11526  01D6A8  6ED9               	movwf	fsr2l,c
 11527  01D6AA  0E00               	movlw	0
 11528  01D6AC  2035               	addwfc	(btemp+11)^0,w,c
 11529  01D6AE  6EDA               	movwf	fsr2h,c
 11530                           
 11531                           ;stkvar	_h @ sp[(0)+-2]
 11532  01D6B0  0EFE               	movlw	-2
 11533  01D6B2  006F FF8F FFE9     	movff	plusw1,fsr0l
 11534  01D6B8  0EFF               	movlw	-1
 11535  01D6BA  006F FF8F FFEA     	movff	plusw1,fsr0h
 11536  01D6C0  006F FF7F FFEF     	movff	indf2,indf0
 11537                           
 11538                           ;hid.c: 42:    h->wait_select = 1;
 11539                           ;stkvar	_h @ sp[(0)+-2]
 11540  01D6C6  0EFE               	movlw	-2
 11541  01D6C8  006F FF8C  F034    	movff	plusw1,btemp+10
 11542  01D6CE  0EFF               	movlw	-1
 11543  01D6D0  006F FF8C  F035    	movff	plusw1,btemp+11
 11544  01D6D6  0E02               	movlw	2
 11545  01D6D8  2434               	addwf	(btemp+10)^0,w,c
 11546  01D6DA  6ED9               	movwf	fsr2l,c
 11547  01D6DC  0E00               	movlw	0
 11548  01D6DE  2035               	addwfc	(btemp+11)^0,w,c
 11549  01D6E0  6EDA               	movwf	fsr2h,c
 11550  01D6E2  0E01               	movlw	1
 11551  01D6E4                     L6:
 11552  01D6E4  6EDF               	movwf	indf2,c
 11553  01D6E6  D01B               	goto	l2300
 11554  01D6E8                     l17098:
 11555                           
 11556                           ;stkvar	_h @ sp[(0)+-2]
 11557  01D6E8  0EFE               	movlw	-2
 11558  01D6EA  006F FF8C  F034    	movff	plusw1,btemp+10
 11559  01D6F0  0EFF               	movlw	-1
 11560  01D6F2  006F FF8C  F035    	movff	plusw1,btemp+11
 11561  01D6F8  0E01               	movlw	1
 11562  01D6FA  2434               	addwf	(btemp+10)^0,w,c
 11563  01D6FC  6ED9               	movwf	fsr2l,c
 11564  01D6FE  0E00               	movlw	0
 11565  01D700  2035               	addwfc	(btemp+11)^0,w,c
 11566  01D702  6EDA               	movwf	fsr2h,c
 11567  01D704  50DF               	movf	indf2,w,c
 11568  01D706  6E34               	movwf	(btemp+10)^0,c
 11569  01D708  6A35               	clrf	(btemp+11)^0,c
 11570                           
 11571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11572                           ; Switch size 1, requested type "simple"
 11573                           ; Number of cases is 1, Range of values is 0 to 0
 11574                           ; switch strategies available:
 11575                           ; Name         Instructions Cycles
 11576                           ; simple_byte            4     3 (average)
 11577                           ;	Chosen strategy is simple_byte
 11578  01D70A  5035               	movf	(btemp+11)^0,w,c
 11579  01D70C  0A00               	xorlw	0	; case 0
 11580  01D70E  A4D8               	btfss	status,2,c
 11581  01D710  D77F               	goto	l17088
 11582                           
 11583                           ; Switch size 1, requested type "simple"
 11584                           ; Number of cases is 2, Range of values is 0 to 1
 11585                           ; switch strategies available:
 11586                           ; Name         Instructions Cycles
 11587                           ; simple_byte            7     4 (average)
 11588                           ;	Chosen strategy is simple_byte
 11589  01D712  5034               	movf	(btemp+10)^0,w,c
 11590  01D714  0A00               	xorlw	0	; case 0
 11591  01D716  B4D8               	btfsc	status,2,c
 11592  01D718  D701               	goto	l17072
 11593  01D71A  0A01               	xorlw	1	; case 1
 11594  01D71C  D779               	goto	l17088
 11595  01D71E                     l2300:
 11596                           
 11597                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 11598  01D71E  52E5               	movf	postdec1,f,c
 11599  01D720  52E5               	movf	postdec1,f,c
 11600  01D722  0012               	return		;funcret
 11601  01D724                     __end_of_hid_display:
 11602                           	opt callstack 0
 11603                           
 11604 ;; *************** function _hid_input *****************
 11605 ;; Defined at:
 11606 ;;		line 3 in file "hid.c"
 11607 ;; Parameters:    Size  Location     Type
 11608 ;;  h               2  [STACK] PTR struct H_data
 11609 ;;		 -> H(9), 
 11610 ;; Auto vars:     Size  Location     Type
 11611 ;;		None
 11612 ;; Return value:  Size  Location     Type
 11613 ;;                  2  [STACK] PTR struct H_data
 11614 ;; Registers used:
 11615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11616 ;; Tracked objects:
 11617 ;;		On entry : 0/39
 11618 ;;		On exit  : 0/0
 11619 ;;		Unchanged: 0/0
 11620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11625 ;;Total ram usage:        0 bytes
 11626 ;; Hardware stack levels used:    1
 11627 ;; Hardware stack levels required when called:   16
 11628 ;; This function calls:
 11629 ;;		_get_switch
 11630 ;; This function is called by:
 11631 ;;		_hid_display
 11632 ;; This function uses a reentrant model
 11633 ;;
 11634                           
 11635                           	psect	text27
 11636  01F710                     __ptext27:
 11637                           	opt callstack 0
 11638  01F710                     _hid_input:
 11639                           	opt callstack 13
 11640                           
 11641                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 11642                           
 11643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11644                           ;incstack = 0
 11645  01F710  0E02               	movlw	2
 11646  01F712  6EE6               	movwf	postinc1,c
 11647  01F714  EC41  F013         	call	_get_switch	;wreg free
 11648  01F718  502A               	movf	btemp^0,w,c
 11649  01F71A  B4D8               	btfsc	status,2,c
 11650  01F71C  D02C               	goto	l16834
 11651                           
 11652                           ;hid.c: 6:   h->wait_select = 0;
 11653                           ;stkvar	_h @ sp[(0)+-2]
 11654  01F71E  0EFE               	movlw	-2
 11655  01F720  006F FF8C  F034    	movff	plusw1,btemp+10
 11656  01F726  0EFF               	movlw	-1
 11657  01F728  006F FF8C  F035    	movff	plusw1,btemp+11
 11658  01F72E  0E02               	movlw	2
 11659  01F730  2434               	addwf	(btemp+10)^0,w,c
 11660  01F732  6ED9               	movwf	fsr2l,c
 11661  01F734  0E00               	movlw	0
 11662  01F736  2035               	addwfc	(btemp+11)^0,w,c
 11663  01F738  6EDA               	movwf	fsr2h,c
 11664  01F73A  0E00               	movlw	0
 11665  01F73C  6EDF               	movwf	indf2,c
 11666                           
 11667                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 11668  01F73E  0E02               	movlw	2
 11669  01F740  6EE6               	movwf	postinc1,c
 11670  01F742  EC41  F013         	call	_get_switch	;wreg free
 11671  01F746  502A               	movf	btemp^0,w,c
 11672  01F748  B4D8               	btfsc	status,2,c
 11673  01F74A  D003               	goto	u16370
 11674  01F74C  6A35               	clrf	(btemp+11)^0,c
 11675  01F74E  2A35               	incf	(btemp+11)^0,f,c
 11676  01F750  D001               	goto	u16388
 11677  01F752                     u16370:
 11678  01F752  6A35               	clrf	(btemp+11)^0,c
 11679  01F754                     u16388:
 11680                           
 11681                           ;stkvar	_h @ sp[(0)+-2]
 11682  01F754  0EFE               	movlw	-2
 11683  01F756  006F FF8C  F032    	movff	plusw1,btemp+8
 11684  01F75C  0EFF               	movlw	-1
 11685  01F75E  006F FF8C  F033    	movff	plusw1,btemp+9
 11686  01F764  0E03               	movlw	3
 11687  01F766  2432               	addwf	(btemp+8)^0,w,c
 11688  01F768  6ED9               	movwf	fsr2l,c
 11689  01F76A  0E00               	movlw	0
 11690  01F76C  2033               	addwfc	(btemp+9)^0,w,c
 11691  01F76E  6EDA               	movwf	fsr2h,c
 11692  01F770  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11693  01F776                     l16834:
 11694                           
 11695                           ;hid.c: 10:  if (get_switch(SENTER)) {
 11696  01F776  0E03               	movlw	3
 11697  01F778  6EE6               	movwf	postinc1,c
 11698  01F77A  EC41  F013         	call	_get_switch	;wreg free
 11699  01F77E  502A               	movf	btemp^0,w,c
 11700  01F780  B4D8               	btfsc	status,2,c
 11701  01F782  D02C               	goto	l16840
 11702                           
 11703                           ;hid.c: 11:   h->wait_enter = 0;
 11704                           ;stkvar	_h @ sp[(0)+-2]
 11705  01F784  0EFE               	movlw	-2
 11706  01F786  006F FF8C  F034    	movff	plusw1,btemp+10
 11707  01F78C  0EFF               	movlw	-1
 11708  01F78E  006F FF8C  F035    	movff	plusw1,btemp+11
 11709  01F794  0E04               	movlw	4
 11710  01F796  2434               	addwf	(btemp+10)^0,w,c
 11711  01F798  6ED9               	movwf	fsr2l,c
 11712  01F79A  0E00               	movlw	0
 11713  01F79C  2035               	addwfc	(btemp+11)^0,w,c
 11714  01F79E  6EDA               	movwf	fsr2h,c
 11715  01F7A0  0E00               	movlw	0
 11716  01F7A2  6EDF               	movwf	indf2,c
 11717                           
 11718                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 11719  01F7A4  0E03               	movlw	3
 11720  01F7A6  6EE6               	movwf	postinc1,c
 11721  01F7A8  EC41  F013         	call	_get_switch	;wreg free
 11722  01F7AC  502A               	movf	btemp^0,w,c
 11723  01F7AE  B4D8               	btfsc	status,2,c
 11724  01F7B0  D003               	goto	u16400
 11725  01F7B2  6A35               	clrf	(btemp+11)^0,c
 11726  01F7B4  2A35               	incf	(btemp+11)^0,f,c
 11727  01F7B6  D001               	goto	u16418
 11728  01F7B8                     u16400:
 11729  01F7B8  6A35               	clrf	(btemp+11)^0,c
 11730  01F7BA                     u16418:
 11731                           
 11732                           ;stkvar	_h @ sp[(0)+-2]
 11733  01F7BA  0EFE               	movlw	-2
 11734  01F7BC  006F FF8C  F032    	movff	plusw1,btemp+8
 11735  01F7C2  0EFF               	movlw	-1
 11736  01F7C4  006F FF8C  F033    	movff	plusw1,btemp+9
 11737  01F7CA  0E05               	movlw	5
 11738  01F7CC  2432               	addwf	(btemp+8)^0,w,c
 11739  01F7CE  6ED9               	movwf	fsr2l,c
 11740  01F7D0  0E00               	movlw	0
 11741  01F7D2  2033               	addwfc	(btemp+9)^0,w,c
 11742  01F7D4  6EDA               	movwf	fsr2h,c
 11743  01F7D6  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11744  01F7DC                     l16840:
 11745                           
 11746                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 11747  01F7DC  0E04               	movlw	4
 11748  01F7DE  6EE6               	movwf	postinc1,c
 11749  01F7E0  EC41  F013         	call	_get_switch	;wreg free
 11750  01F7E4  502A               	movf	btemp^0,w,c
 11751  01F7E6  B4D8               	btfsc	status,2,c
 11752  01F7E8  D02C               	goto	l2291
 11753                           
 11754                           ;hid.c: 16:   h->wait_calib = 0;
 11755                           ;stkvar	_h @ sp[(0)+-2]
 11756  01F7EA  0EFE               	movlw	-2
 11757  01F7EC  006F FF8C  F034    	movff	plusw1,btemp+10
 11758  01F7F2  0EFF               	movlw	-1
 11759  01F7F4  006F FF8C  F035    	movff	plusw1,btemp+11
 11760  01F7FA  0E06               	movlw	6
 11761  01F7FC  2434               	addwf	(btemp+10)^0,w,c
 11762  01F7FE  6ED9               	movwf	fsr2l,c
 11763  01F800  0E00               	movlw	0
 11764  01F802  2035               	addwfc	(btemp+11)^0,w,c
 11765  01F804  6EDA               	movwf	fsr2h,c
 11766  01F806  0E00               	movlw	0
 11767  01F808  6EDF               	movwf	indf2,c
 11768                           
 11769                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 11770  01F80A  0E04               	movlw	4
 11771  01F80C  6EE6               	movwf	postinc1,c
 11772  01F80E  EC41  F013         	call	_get_switch	;wreg free
 11773  01F812  502A               	movf	btemp^0,w,c
 11774  01F814  B4D8               	btfsc	status,2,c
 11775  01F816  D003               	goto	u16430
 11776  01F818  6A35               	clrf	(btemp+11)^0,c
 11777  01F81A  2A35               	incf	(btemp+11)^0,f,c
 11778  01F81C  D001               	goto	u16448
 11779  01F81E                     u16430:
 11780  01F81E  6A35               	clrf	(btemp+11)^0,c
 11781  01F820                     u16448:
 11782                           
 11783                           ;stkvar	_h @ sp[(0)+-2]
 11784  01F820  0EFE               	movlw	-2
 11785  01F822  006F FF8C  F032    	movff	plusw1,btemp+8
 11786  01F828  0EFF               	movlw	-1
 11787  01F82A  006F FF8C  F033    	movff	plusw1,btemp+9
 11788  01F830  0E07               	movlw	7
 11789  01F832  2432               	addwf	(btemp+8)^0,w,c
 11790  01F834  6ED9               	movwf	fsr2l,c
 11791  01F836  0E00               	movlw	0
 11792  01F838  2033               	addwfc	(btemp+9)^0,w,c
 11793  01F83A  6EDA               	movwf	fsr2h,c
 11794  01F83C  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11795  01F842                     l2291:
 11796                           
 11797                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 11798  01F842  52E5               	movf	postdec1,f,c
 11799  01F844  52E5               	movf	postdec1,f,c
 11800  01F846  0012               	return		;funcret
 11801  01F848                     __end_of_hid_input:
 11802                           	opt callstack 0
 11803                           
 11804 ;; *************** function _esr_check *****************
 11805 ;; Defined at:
 11806 ;;		line 197 in file "bsoc.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;  fsm             1  [STACK] const unsigned char 
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;		None
 11811 ;; Return value:  Size  Location     Type
 11812 ;;                  4  [STACK] float 
 11813 ;; Registers used:
 11814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11824 ;;Total ram usage:        0 bytes
 11825 ;; Hardware stack levels used:    1
 11826 ;; Hardware stack levels required when called:   18
 11827 ;; This function calls:
 11828 ;;		_StartTimer
 11829 ;;		_TimerDone
 11830 ;;		___fldiv
 11831 ;;		___flsub
 11832 ;;		_conv_raw_result
 11833 ;;		_fabsf
 11834 ;;		_set_load_relay_one
 11835 ;;		_set_load_relay_two
 11836 ;;		_update_adc_result
 11837 ;; This function is called by:
 11838 ;;		_main
 11839 ;; This function uses a reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text28
 11843  01BA64                     __ptext28:
 11844                           	opt callstack 0
 11845  01BA64                     _esr_check:
 11846                           	opt callstack 12
 11847                           
 11848                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 11849                           ;stkvar	_fsm @ sp[(0)+-1]
 11850                           
 11851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11852                           ;incstack = 0
 11853  01BA64  0EFF               	movlw	-1
 11854  01BA66  50E3               	movf	plusw1,w,c
 11855  01BA68  B4D8               	btfsc	status,2,c
 11856  01BA6A  D149               	goto	l14322
 11857                           
 11858                           ;bsoc.c: 202:   esr_state = 0;
 11859  01BA6C  0100               	movlb	0	; () banked
 11860  01BA6E  6BC8               	clrf	esr_check@esr_state& (0+255),b
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;bsoc.c: 203:   return -10.0;
 11864  01BA70  0E00               	movlw	0
 11865  01BA72  6E2A               	movwf	btemp^0,c
 11866  01BA74  0E00               	movlw	0
 11867  01BA76  6E2B               	movwf	(btemp+1)^0,c
 11868  01BA78  0E20               	movlw	32
 11869  01BA7A  6E2C               	movwf	(btemp+2)^0,c
 11870  01BA7C  0EC1               	movlw	193
 11871  01BA7E  D15B               	goto	L7
 11872  01BA80                     l14254:
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 11876  01BA80  0E10               	movlw	16
 11877  01BA82  6EE6               	movwf	postinc1,c
 11878  01BA84  0E27               	movlw	39
 11879  01BA86  6EE6               	movwf	postinc1,c
 11880  01BA88  0E0C               	movlw	12
 11881  01BA8A  6EE6               	movwf	postinc1,c
 11882  01BA8C  EC20  F011         	call	_StartTimer	;wreg free
 11883  01BA90                     l14256:
 11884                           
 11885                           ;bsoc.c: 209:   esr_state++;
 11886  01BA90  0100               	movlb	0	; () banked
 11887  01BA92  2BC8               	incf	esr_check@esr_state& (0+255),f,b
 11888                           
 11889                           ;bsoc.c: 210:   break;
 11890  01BA94  D149               	goto	l14324
 11891  01BA96                     l14258:
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;bsoc.c: 215:   set_load_relay_one(0);
 11895  01BA96  0E00               	movlw	0
 11896  01BA98  6EE6               	movwf	postinc1,c
 11897  01BA9A  EC33  F016         	call	_set_load_relay_one	;wreg free
 11898                           
 11899                           ;bsoc.c: 216:   set_load_relay_two(0);
 11900  01BA9E  0E00               	movlw	0
 11901  01BAA0  6EE6               	movwf	postinc1,c
 11902  01BAA2  EC2B  F016         	call	_set_load_relay_two	;wreg free
 11903                           
 11904                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 11905  01BAA6  0E0C               	movlw	12
 11906  01BAA8  6EE6               	movwf	postinc1,c
 11907  01BAAA  ECAD  F013         	call	_TimerDone	;wreg free
 11908  01BAAE  502A               	movf	btemp^0,w,c
 11909  01BAB0  B4D8               	btfsc	status,2,c
 11910  01BAB2  D009               	goto	l14264
 11911                           
 11912                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 11913  01BAB4  0E10               	movlw	16
 11914  01BAB6  6EE6               	movwf	postinc1,c
 11915  01BAB8  0E27               	movlw	39
 11916  01BABA  6EE6               	movwf	postinc1,c
 11917  01BABC  0E0C               	movlw	12
 11918  01BABE  6EE6               	movwf	postinc1,c
 11919  01BAC0  EC20  F011         	call	_StartTimer	;wreg free
 11920                           
 11921                           ;bsoc.c: 219:   } else {
 11922  01BAC4  D006               	goto	l14268
 11923  01BAC6                     l14264:
 11924                           
 11925                           ;bsoc.c: 220:    return -2.0;
 11926  01BAC6  0E00               	movlw	0
 11927  01BAC8  6E2A               	movwf	btemp^0,c
 11928  01BACA  0E00               	movlw	0
 11929  01BACC  6E2B               	movwf	(btemp+1)^0,c
 11930  01BACE  0E00               	movlw	0
 11931  01BAD0  D066               	goto	L9
 11932  01BAD2                     l14268:
 11933                           
 11934                           ;bsoc.c: 225:   update_adc_result();
 11935  01BAD2  ECBD  F011         	call	_update_adc_result	;wreg free
 11936                           
 11937                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 11938  01BAD6  0E00               	movlw	0
 11939  01BAD8  6EE6               	movwf	postinc1,c
 11940  01BADA  0E04               	movlw	4
 11941  01BADC  6EE6               	movwf	postinc1,c
 11942  01BADE  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 11943  01BAE2  0060  F0A8  FCA3   	movff	btemp,_C+290	;volatile
 11944  01BAE8  0060  F0AC  FCA4   	movff	btemp+1,_C+291	;volatile
 11945  01BAEE  0060  F0B0  FCA5   	movff	btemp+2,_C+292	;volatile
 11946  01BAF4  0060  F0B4  FCA6   	movff	btemp+3,_C+293	;volatile
 11947  01BAFA  D7CA               	goto	l14256
 11948  01BAFC                     l14274:
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;bsoc.c: 230:   set_load_relay_one(1);
 11952  01BAFC  0E01               	movlw	1
 11953  01BAFE  6EE6               	movwf	postinc1,c
 11954  01BB00  EC33  F016         	call	_set_load_relay_one	;wreg free
 11955                           
 11956                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 11957  01BB04  0E0C               	movlw	12
 11958  01BB06  6EE6               	movwf	postinc1,c
 11959  01BB08  ECAD  F013         	call	_TimerDone	;wreg free
 11960  01BB0C  502A               	movf	btemp^0,w,c
 11961  01BB0E  B4D8               	btfsc	status,2,c
 11962  01BB10  D009               	goto	l14280
 11963                           
 11964                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 11965  01BB12  0E10               	movlw	16
 11966  01BB14  6EE6               	movwf	postinc1,c
 11967  01BB16  0E27               	movlw	39
 11968  01BB18  6EE6               	movwf	postinc1,c
 11969  01BB1A  0E0C               	movlw	12
 11970  01BB1C  6EE6               	movwf	postinc1,c
 11971  01BB1E  EC20  F011         	call	_StartTimer	;wreg free
 11972                           
 11973                           ;bsoc.c: 233:   } else {
 11974  01BB22  D006               	goto	l14284
 11975  01BB24                     l14280:
 11976                           
 11977                           ;bsoc.c: 234:    return -3.0;
 11978  01BB24  0E00               	movlw	0
 11979  01BB26  6E2A               	movwf	btemp^0,c
 11980  01BB28  0E00               	movlw	0
 11981  01BB2A  6E2B               	movwf	(btemp+1)^0,c
 11982  01BB2C  0E40               	movlw	64
 11983  01BB2E  D037               	goto	L9
 11984  01BB30                     l14284:
 11985                           
 11986                           ;bsoc.c: 237:   update_adc_result();
 11987  01BB30  ECBD  F011         	call	_update_adc_result	;wreg free
 11988                           
 11989                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 11990  01BB34  0E00               	movlw	0
 11991  01BB36  6EE6               	movwf	postinc1,c
 11992  01BB38  0E04               	movlw	4
 11993  01BB3A  6EE6               	movwf	postinc1,c
 11994  01BB3C  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 11995  01BB40  0060  F0A8  FCA7   	movff	btemp,_C+294	;volatile
 11996  01BB46  0060  F0AC  FCA8   	movff	btemp+1,_C+295	;volatile
 11997  01BB4C  0060  F0B0  FCA9   	movff	btemp+2,_C+296	;volatile
 11998  01BB52  0060  F0B4  FCAA   	movff	btemp+3,_C+297	;volatile
 11999                           
 12000                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 12001  01BB58  0E00               	movlw	0
 12002  01BB5A  6EE6               	movwf	postinc1,c
 12003  01BB5C  0E00               	movlw	0
 12004  01BB5E  6EE6               	movwf	postinc1,c
 12005  01BB60  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 12006  01BB64  0060  F0A8  FC9B   	movff	btemp,_C+282	;volatile
 12007  01BB6A  0060  F0AC  FC9C   	movff	btemp+1,_C+283	;volatile
 12008  01BB70  0060  F0B0  FC9D   	movff	btemp+2,_C+284	;volatile
 12009  01BB76  0060  F0B4  FC9E   	movff	btemp+3,_C+285	;volatile
 12010  01BB7C  D789               	goto	l14256
 12011  01BB7E                     l14292:
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;bsoc.c: 243:   set_load_relay_two(1);
 12015  01BB7E  0E01               	movlw	1
 12016  01BB80  6EE6               	movwf	postinc1,c
 12017  01BB82  EC2B  F016         	call	_set_load_relay_two	;wreg free
 12018                           
 12019                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 12020  01BB86  0E0C               	movlw	12
 12021  01BB88  6EE6               	movwf	postinc1,c
 12022  01BB8A  ECAD  F013         	call	_TimerDone	;wreg free
 12023  01BB8E  502A               	movf	btemp^0,w,c
 12024  01BB90  A4D8               	btfss	status,2,c
 12025  01BB92  D008               	goto	l14300
 12026                           
 12027                           ;bsoc.c: 245:    return -4.0;
 12028  01BB94  0E00               	movlw	0
 12029  01BB96  6E2A               	movwf	btemp^0,c
 12030  01BB98  0E00               	movlw	0
 12031  01BB9A  6E2B               	movwf	(btemp+1)^0,c
 12032  01BB9C  0E80               	movlw	128
 12033  01BB9E                     L9:
 12034  01BB9E  6E2C               	movwf	(btemp+2)^0,c
 12035  01BBA0  0EC0               	movlw	192
 12036  01BBA2  D0C9               	goto	L7
 12037  01BBA4                     l14300:
 12038                           
 12039                           ;bsoc.c: 247:   update_adc_result();
 12040  01BBA4  ECBD  F011         	call	_update_adc_result	;wreg free
 12041                           
 12042                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 12043  01BBA8  0E00               	movlw	0
 12044  01BBAA  6EE6               	movwf	postinc1,c
 12045  01BBAC  0E04               	movlw	4
 12046  01BBAE  6EE6               	movwf	postinc1,c
 12047  01BBB0  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 12048  01BBB4  0060  F0A8  FCAB   	movff	btemp,_C+298	;volatile
 12049  01BBBA  0060  F0AC  FCAC   	movff	btemp+1,_C+299	;volatile
 12050  01BBC0  0060  F0B0  FCAD   	movff	btemp+2,_C+300	;volatile
 12051  01BBC6  0060  F0B4  FCAE   	movff	btemp+3,_C+301	;volatile
 12052                           
 12053                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 12054  01BBCC  0E00               	movlw	0
 12055  01BBCE  6EE6               	movwf	postinc1,c
 12056  01BBD0  0E00               	movlw	0
 12057  01BBD2  6EE6               	movwf	postinc1,c
 12058  01BBD4  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 12059  01BBD8  0060  F0A8  FC9F   	movff	btemp,_C+286	;volatile
 12060  01BBDE  0060  F0AC  FCA0   	movff	btemp+1,_C+287	;volatile
 12061  01BBE4  0060  F0B0  FCA1   	movff	btemp+2,_C+288	;volatile
 12062  01BBEA  0060  F0B4  FCA2   	movff	btemp+3,_C+289	;volatile
 12063                           
 12064                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 12065  01BBF0  EE23  F09F         	lfsr	2,_C+286	;volatile
 12066  01BBF4  006F FF7B FFE6     	movff	postinc2,postinc1
 12067  01BBFA  006F FF7B FFE6     	movff	postinc2,postinc1
 12068  01BC00  006F FF7B FFE6     	movff	postinc2,postinc1
 12069  01BC06  006F FF7B FFE6     	movff	postinc2,postinc1
 12070  01BC0C  EE23  F09B         	lfsr	2,_C+282	;volatile
 12071  01BC10  006F FF7B FFE6     	movff	postinc2,postinc1
 12072  01BC16  006F FF7B FFE6     	movff	postinc2,postinc1
 12073  01BC1C  006F FF7B FFE6     	movff	postinc2,postinc1
 12074  01BC22  006F FF7B FFE6     	movff	postinc2,postinc1
 12075  01BC28  EC7A  F010         	call	___flsub	;wreg free
 12076  01BC2C  0060  F0AB  FFE6   	movff	btemp,postinc1
 12077  01BC32  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12078  01BC38  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 12079  01BC3E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 12080  01BC44  EE23  F0AB         	lfsr	2,_C+298	;volatile
 12081  01BC48  006F FF7B FFE6     	movff	postinc2,postinc1
 12082  01BC4E  006F FF7B FFE6     	movff	postinc2,postinc1
 12083  01BC54  006F FF7B FFE6     	movff	postinc2,postinc1
 12084  01BC5A  006F FF7B FFE6     	movff	postinc2,postinc1
 12085  01BC60  EE23  F0A7         	lfsr	2,_C+294	;volatile
 12086  01BC64  006F FF7B FFE6     	movff	postinc2,postinc1
 12087  01BC6A  006F FF7B FFE6     	movff	postinc2,postinc1
 12088  01BC70  006F FF7B FFE6     	movff	postinc2,postinc1
 12089  01BC76  006F FF7B FFE6     	movff	postinc2,postinc1
 12090  01BC7C  EC7A  F010         	call	___flsub	;wreg free
 12091  01BC80  0060  F0AB  FFE6   	movff	btemp,postinc1
 12092  01BC86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12093  01BC8C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 12094  01BC92  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 12095  01BC98  EC64  F0C1         	call	___fldiv	;wreg free
 12096  01BC9C  0060  F0AB  FFE6   	movff	btemp,postinc1
 12097  01BCA2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12098  01BCA8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 12099  01BCAE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 12100  01BCB4  ECBC  F005         	call	_fabsf	;wreg free
 12101  01BCB8  0060  F0A8  FC09   	movff	btemp,_C+136	;volatile
 12102  01BCBE  0060  F0AC  FC0A   	movff	btemp+1,_C+137	;volatile
 12103  01BCC4  0060  F0B0  FC0B   	movff	btemp+2,_C+138	;volatile
 12104  01BCCA  0060  F0B4  FC0C   	movff	btemp+3,_C+139	;volatile
 12105                           
 12106                           ;bsoc.c: 252:   set_load_relay_one(0);
 12107  01BCD0  0E00               	movlw	0
 12108  01BCD2  6EE6               	movwf	postinc1,c
 12109  01BCD4  EC33  F016         	call	_set_load_relay_one	;wreg free
 12110                           
 12111                           ;bsoc.c: 253:   set_load_relay_two(0);
 12112  01BCD8  0E00               	movlw	0
 12113  01BCDA  6EE6               	movwf	postinc1,c
 12114  01BCDC  EC2B  F016         	call	_set_load_relay_two	;wreg free
 12115                           
 12116                           ;bsoc.c: 254:   esr_state = 0;
 12117  01BCE0  0100               	movlb	0	; () banked
 12118  01BCE2  6BC8               	clrf	esr_check@esr_state& (0+255),b
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;bsoc.c: 255:   return C.esr;
 12122  01BCE4  0063  F024  F02A   	movff	_C+136,btemp	;volatile
 12123  01BCEA  0063  F028  F02B   	movff	_C+137,btemp+1	;volatile
 12124  01BCF0  0063  F02C  F02C   	movff	_C+138,btemp+2	;volatile
 12125  01BCF6  0063  F030  F02D   	movff	_C+139,btemp+3	;volatile
 12126  01BCFC  D01D               	goto	l2416
 12127  01BCFE                     l14322:
 12128  01BCFE  0100               	movlb	0	; () banked
 12129  01BD00  51C8               	movf	esr_check@esr_state& (0+255),w,b
 12130  01BD02  6E34               	movwf	(btemp+10)^0,c
 12131  01BD04  6A35               	clrf	(btemp+11)^0,c
 12132                           
 12133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12134                           ; Switch size 1, requested type "simple"
 12135                           ; Number of cases is 1, Range of values is 0 to 0
 12136                           ; switch strategies available:
 12137                           ; Name         Instructions Cycles
 12138                           ; simple_byte            4     3 (average)
 12139                           ;	Chosen strategy is simple_byte
 12140  01BD06  5035               	movf	(btemp+11)^0,w,c
 12141  01BD08  0A00               	xorlw	0	; case 0
 12142  01BD0A  A4D8               	btfss	status,2,c
 12143  01BD0C  D00D               	goto	l14324
 12144                           
 12145                           ; BSR set to: 0
 12146                           ; Switch size 1, requested type "simple"
 12147                           ; Number of cases is 4, Range of values is 0 to 3
 12148                           ; switch strategies available:
 12149                           ; Name         Instructions Cycles
 12150                           ; simple_byte           13     7 (average)
 12151                           ;	Chosen strategy is simple_byte
 12152  01BD0E  5034               	movf	(btemp+10)^0,w,c
 12153  01BD10  0A00               	xorlw	0	; case 0
 12154  01BD12  B4D8               	btfsc	status,2,c
 12155  01BD14  D6B5               	goto	l14254
 12156  01BD16  0A01               	xorlw	1	; case 1
 12157  01BD18  B4D8               	btfsc	status,2,c
 12158  01BD1A  D6BD               	goto	l14258
 12159  01BD1C  0A03               	xorlw	3	; case 2
 12160  01BD1E  B4D8               	btfsc	status,2,c
 12161  01BD20  D6ED               	goto	l14274
 12162  01BD22  0A01               	xorlw	1	; case 3
 12163  01BD24  B4D8               	btfsc	status,2,c
 12164  01BD26  D72B               	goto	l14292
 12165  01BD28                     l14324:
 12166                           
 12167                           ; BSR set to: 0
 12168                           ;bsoc.c: 260:  return -1.0;
 12169  01BD28  0E00               	movlw	0
 12170  01BD2A  6E2A               	movwf	btemp^0,c
 12171  01BD2C  0E00               	movlw	0
 12172  01BD2E  6E2B               	movwf	(btemp+1)^0,c
 12173  01BD30  0E80               	movlw	128
 12174  01BD32  6E2C               	movwf	(btemp+2)^0,c
 12175  01BD34  0EBF               	movlw	191
 12176  01BD36                     L7:
 12177  01BD36  6E2D               	movwf	(btemp+3)^0,c
 12178  01BD38                     l2416:
 12179                           
 12180                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12181  01BD38  52E5               	movf	postdec1,f,c
 12182  01BD3A  0012               	return		;funcret
 12183  01BD3C                     __end_of_esr_check:
 12184                           	opt callstack 0
 12185                           
 12186 ;; *************** function _update_adc_result *****************
 12187 ;; Defined at:
 12188 ;;		line 113 in file "daq.c"
 12189 ;; Parameters:    Size  Location     Type
 12190 ;;		None
 12191 ;; Auto vars:     Size  Location     Type
 12192 ;;		None
 12193 ;; Return value:  Size  Location     Type
 12194 ;;                  1  [STACK] _Bool 
 12195 ;; Registers used:
 12196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 12197 ;; Tracked objects:
 12198 ;;		On entry : 0/0
 12199 ;;		On exit  : 0/0
 12200 ;;		Unchanged: 0/0
 12201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12206 ;;Total ram usage:        0 bytes
 12207 ;; Hardware stack levels used:    1
 12208 ;; Hardware stack levels required when called:   17
 12209 ;; This function calls:
 12210 ;;		_StartTimer
 12211 ;;		_TimerDone
 12212 ;;		_check_adc_scan
 12213 ;;		_clear_adc_scan
 12214 ;;		_start_adc_scan
 12215 ;; This function is called by:
 12216 ;;		_esr_check
 12217 ;; This function uses a reentrant model
 12218 ;;
 12219                           
 12220                           	psect	text29
 12221  00237A                     __ptext29:
 12222                           	opt callstack 0
 12223  00237A                     _update_adc_result:
 12224                           	opt callstack 12
 12225                           
 12226                           ;daq.c: 115:  if (R.done) {
 12227                           
 12228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12229                           ;incstack = 0
 12230  00237A  0101               	movlb	1	; () banked
 12231  00237C  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 12232  00237E  B4D8               	btfsc	status,2,c
 12233  002380  0012               	return	
 12234                           
 12235                           ; BSR set to: 1
 12236                           ;daq.c: 116:   clear_adc_scan();
 12237  002382  ECB5  F016         	call	_clear_adc_scan	;wreg free
 12238                           
 12239                           ; BSR set to: 1
 12240                           ;daq.c: 117:   start_adc_scan();
 12241  002386  EC5F  F00D         	call	_start_adc_scan	;wreg free
 12242                           
 12243                           ;daq.c: 118:   StartTimer(TMR_ADC, 200);
 12244  00238A  0EC8               	movlw	200
 12245  00238C  6EE6               	movwf	postinc1,c
 12246  00238E  0E00               	movlw	0
 12247  002390  6EE6               	movwf	postinc1,c
 12248  002392  0E01               	movlw	1
 12249  002394  6EE6               	movwf	postinc1,c
 12250  002396  EC20  F011         	call	_StartTimer	;wreg free
 12251  00239A                     l13682:
 12252  00239A  0E01               	movlw	1
 12253  00239C  6EE6               	movwf	postinc1,c
 12254  00239E  ECAD  F013         	call	_TimerDone	;wreg free
 12255  0023A2  502A               	movf	btemp^0,w,c
 12256  0023A4  A4D8               	btfss	status,2,c
 12257  0023A6  0012               	return	
 12258  0023A8  EC9B  F016         	call	_check_adc_scan	;wreg free
 12259  0023AC  502A               	movf	btemp^0,w,c
 12260  0023AE  A4D8               	btfss	status,2,c
 12261  0023B0  0012               	return	
 12262  0023B2  D7F3               	goto	l13682
 12263  0023B4                     __end_of_update_adc_result:
 12264                           	opt callstack 0
 12265                           
 12266 ;; *************** function _check_adc_scan *****************
 12267 ;; Defined at:
 12268 ;;		line 97 in file "daq.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;		None
 12271 ;; Auto vars:     Size  Location     Type
 12272 ;;		None
 12273 ;; Return value:  Size  Location     Type
 12274 ;;                  1  [STACK] _Bool 
 12275 ;; Registers used:
 12276 ;;		btemp
 12277 ;; Tracked objects:
 12278 ;;		On entry : 0/2
 12279 ;;		On exit  : 0/0
 12280 ;;		Unchanged: 0/0
 12281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12286 ;;Total ram usage:        0 bytes
 12287 ;; Hardware stack levels used:    1
 12288 ;; Hardware stack levels required when called:   15
 12289 ;; This function calls:
 12290 ;;		Nothing
 12291 ;; This function is called by:
 12292 ;;		_main
 12293 ;;		_update_adc_result
 12294 ;; This function uses a reentrant model
 12295 ;;
 12296                           
 12297                           	psect	text30
 12298  002D36                     __ptext30:
 12299                           	opt callstack 0
 12300  002D36                     _check_adc_scan:
 12301                           	opt callstack 13
 12302                           
 12303                           ;daq.c: 99:  return R.done;
 12304                           
 12305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12306                           ;incstack = 0
 12307  002D36  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 12308                           
 12309                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12310  002D3C  0012               	return		;funcret
 12311  002D3E                     __end_of_check_adc_scan:
 12312                           	opt callstack 0
 12313                           
 12314 ;; *************** function _set_load_relay_two *****************
 12315 ;; Defined at:
 12316 ;;		line 131 in file "mbmc.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;  mode            1  [STACK] const _Bool 
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;		None
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1  [STACK] void 
 12323 ;; Registers used:
 12324 ;;		wreg, fsr1l, fsr1h
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/3D
 12327 ;;		On exit  : 0/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12334 ;;Total ram usage:        0 bytes
 12335 ;; Hardware stack levels used:    1
 12336 ;; Hardware stack levels required when called:   15
 12337 ;; This function calls:
 12338 ;;		Nothing
 12339 ;; This function is called by:
 12340 ;;		_main
 12341 ;;		_esr_check
 12342 ;; This function uses a reentrant model
 12343 ;;
 12344                           
 12345                           	psect	text31
 12346  002C56                     __ptext31:
 12347                           	opt callstack 0
 12348  002C56                     _set_load_relay_two:
 12349                           	opt callstack 15
 12350                           
 12351                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 12352                           ;stkvar	_mode @ sp[(0)+-1]
 12353                           
 12354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12355                           ;incstack = 0
 12356  002C56  0EFF               	movlw	-1
 12357  002C58  B0E3               	btfsc	plusw1,0,c
 12358  002C5A  D002               	bra	u12525
 12359  002C5C  9ABD               	bcf	189,5,c	;volatile
 12360  002C5E  D001               	bra	u12526
 12361  002C60                     u12525:
 12362  002C60  8ABD               	bsf	189,5,c	;volatile
 12363  002C62                     u12526:
 12364                           
 12365                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 12366  002C62  52E5               	movf	postdec1,f,c
 12367  002C64  0012               	return		;funcret
 12368  002C66                     __end_of_set_load_relay_two:
 12369                           	opt callstack 0
 12370                           
 12371 ;; *************** function _set_load_relay_one *****************
 12372 ;; Defined at:
 12373 ;;		line 126 in file "mbmc.c"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;  mode            1  [STACK] const _Bool 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;		None
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  1  [STACK] void 
 12380 ;; Registers used:
 12381 ;;		wreg, fsr1l, fsr1h
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/3D
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12391 ;;Total ram usage:        0 bytes
 12392 ;; Hardware stack levels used:    1
 12393 ;; Hardware stack levels required when called:   15
 12394 ;; This function calls:
 12395 ;;		Nothing
 12396 ;; This function is called by:
 12397 ;;		_main
 12398 ;;		_esr_check
 12399 ;; This function uses a reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text32
 12403  002C66                     __ptext32:
 12404                           	opt callstack 0
 12405  002C66                     _set_load_relay_one:
 12406                           	opt callstack 15
 12407                           
 12408                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 12409                           ;stkvar	_mode @ sp[(0)+-1]
 12410                           
 12411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12412                           ;incstack = 0
 12413  002C66  0EFF               	movlw	-1
 12414  002C68  B0E3               	btfsc	plusw1,0,c
 12415  002C6A  D002               	bra	u12515
 12416  002C6C  98BD               	bcf	189,4,c	;volatile
 12417  002C6E  D001               	bra	u12516
 12418  002C70                     u12515:
 12419  002C70  88BD               	bsf	189,4,c	;volatile
 12420  002C72                     u12516:
 12421                           
 12422                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 12423  002C72  52E5               	movf	postdec1,f,c
 12424  002C74  0012               	return		;funcret
 12425  002C76                     __end_of_set_load_relay_one:
 12426                           	opt callstack 0
 12427                           
 12428 ;; *************** function _eaDogM_WriteCommand *****************
 12429 ;; Defined at:
 12430 ;;		line 384 in file "eadog.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;  cmd             1  [STACK] const unsigned char 
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;		None
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  1  [STACK] void 
 12437 ;; Registers used:
 12438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 12439 ;; Tracked objects:
 12440 ;;		On entry : 3F/3D
 12441 ;;		On exit  : 3F/3D
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12448 ;;Total ram usage:        0 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:   19
 12451 ;; This function calls:
 12452 ;;		_send_lcd_cmd_dma
 12453 ;; This function is called by:
 12454 ;;		_main
 12455 ;; This function uses a reentrant model
 12456 ;;
 12457                           
 12458                           	psect	text33
 12459  002CA6                     __ptext33:
 12460                           	opt callstack 0
 12461  002CA6                     _eaDogM_WriteCommand:
 12462                           	opt callstack 11
 12463                           
 12464                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 12465                           ;stkvar	_cmd @ sp[(0)+-1]
 12466                           
 12467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12468                           ;incstack = 0
 12469  002CA6  0EFF               	movlw	-1
 12470  002CA8  50E3               	movf	plusw1,w,c
 12471  002CAA  6EE6               	movwf	postinc1,c
 12472  002CAC  EC83  F015         	call	_send_lcd_cmd_dma	;wreg free
 12473                           
 12474                           ; BSR set to: 61
 12475                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 12476  002CB0  52E5               	movf	postdec1,f,c
 12477  002CB2  0012               	return		;funcret
 12478  002CB4                     __end_of_eaDogM_WriteCommand:
 12479                           	opt callstack 0
 12480                           
 12481 ;; *************** function _display_history *****************
 12482 ;; Defined at:
 12483 ;;		line 634 in file "main.c"
 12484 ;; Parameters:    Size  Location     Type
 12485 ;;		None
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;		None
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  1  [STACK] _Bool 
 12490 ;; Registers used:
 12491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/2
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12501 ;;Total ram usage:        0 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; Hardware stack levels required when called:   27
 12504 ;; This function calls:
 12505 ;;		_WaitMs
 12506 ;;		_asctime
 12507 ;;		_get_switch
 12508 ;;		_get_vterm_ptr
 12509 ;;		_localtime
 12510 ;;		_sprintf
 12511 ;;		_time
 12512 ;;		_update_lcd
 12513 ;; This function is called by:
 12514 ;;		_main
 12515 ;; This function uses a reentrant model
 12516 ;;
 12517                           
 12518                           	psect	text34
 12519  01B78A                     __ptext34:
 12520                           	opt callstack 0
 12521  01B78A                     _display_history:
 12522                           	opt callstack 3
 12523                           
 12524                           ;main.c: 636:  static uint8_t bwait = 0;;main.c: 638:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 12525                           
 12526                           ; BSR set to: 61
 12527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12528                           ;incstack = 0
 12529  01B78A  0E04               	movlw	4
 12530  01B78C  6EE6               	movwf	postinc1,c
 12531  01B78E  EC41  F013         	call	_get_switch	;wreg free
 12532  01B792  502A               	movf	btemp^0,w,c
 12533  01B794  B4D8               	btfsc	status,2,c
 12534  01B796  D15E               	goto	l17146
 12535  01B798  2A53               	incf	display_history@bwait^0,f,c
 12536  01B79A  0E05               	movlw	5
 12537  01B79C  6453               	cpfsgt	display_history@bwait^0,c
 12538  01B79E  D15A               	goto	l17146
 12539                           
 12540                           ;main.c: 639:   pclock = time(((void*)0));
 12541  01B7A0  0E00               	movlw	0
 12542  01B7A2  6EE6               	movwf	postinc1,c
 12543  01B7A4  0E00               	movlw	0
 12544  01B7A6  6EE6               	movwf	postinc1,c
 12545  01B7A8  EC23  F00E         	call	_time	;wreg free
 12546  01B7AC  52E5               	movf	postdec1,f,c
 12547  01B7AE  006F FF9C  F041    	movff	indf1,btemp+23
 12548  01B7B4  52E5               	movf	postdec1,f,c
 12549  01B7B6  006F FF9C  F040    	movff	indf1,btemp+22
 12550  01B7BC  52E5               	movf	postdec1,f,c
 12551  01B7BE  006F FF9C  F03F    	movff	indf1,btemp+21
 12552  01B7C4  52E5               	movf	postdec1,f,c
 12553  01B7C6  006F FF9C  F03E    	movff	indf1,btemp+20
 12554  01B7CC  52E5               	movf	postdec1,f,c
 12555  01B7CE  006F FF9C  F03D    	movff	indf1,btemp+19
 12556  01B7D4  52E5               	movf	postdec1,f,c
 12557  01B7D6  006F FF9C  F03C    	movff	indf1,btemp+18
 12558  01B7DC  52E5               	movf	postdec1,f,c
 12559  01B7DE  006F FF9C  F03B    	movff	indf1,btemp+17
 12560  01B7E4  52E5               	movf	postdec1,f,c
 12561  01B7E6  006F FF9C  F03A    	movff	indf1,btemp+16
 12562  01B7EC  0060  F0E8  F0DC   	movff	btemp+16,_pclock
 12563  01B7F2  0060  F0EC  F0DD   	movff	btemp+17,_pclock+1
 12564  01B7F8  0060  F0F0  F0DE   	movff	btemp+18,_pclock+2
 12565  01B7FE  0060  F0F4  F0DF   	movff	btemp+19,_pclock+3
 12566  01B804  0060  F0F8  F0E0   	movff	btemp+20,_pclock+4
 12567  01B80A  0060  F0FC  F0E1   	movff	btemp+21,_pclock+5
 12568  01B810  0060  F100  F0E2   	movff	btemp+22,_pclock+6
 12569  01B816  0060  F104  F0E3   	movff	btemp+23,_pclock+7
 12570                           
 12571                           ; BSR set to: 57
 12572                           ;main.c: 640:   t_mbmc = localtime(&pclock);
 12573  01B81C  0EDC               	movlw	_pclock& (0+255)
 12574  01B81E  6EE6               	movwf	postinc1,c
 12575  01B820  ECE3  F015         	call	_localtime	;wreg free
 12576  01B824  0060  F0A8  F0BE   	movff	btemp,_t_mbmc
 12577  01B82A  0060  F0AC  F0BF   	movff	btemp+1,_t_mbmc+1
 12578                           
 12579                           ;main.c: 641:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 12580  01B830  EE23  F06C         	lfsr	2,_C+235	;volatile
 12581  01B834  006F FF78  F034    	movff	postinc2,btemp+10
 12582  01B83A  006F FF74  F035    	movff	postdec2,btemp+11
 12583  01B840  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12584  01B846  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12585  01B84C  EE23  F06A         	lfsr	2,_C+233	;volatile
 12586  01B850  006F FF78  F034    	movff	postinc2,btemp+10
 12587  01B856  006F FF74  F035    	movff	postdec2,btemp+11
 12588  01B85C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12589  01B862  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12590  01B868  EE23  F068         	lfsr	2,_C+231	;volatile
 12591  01B86C  006F FF78  F034    	movff	postinc2,btemp+10
 12592  01B872  006F FF74  F035    	movff	postdec2,btemp+11
 12593  01B878  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12594  01B87E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12595  01B884  EE23  F066         	lfsr	2,_C+229	;volatile
 12596  01B888  006F FF78  F034    	movff	postinc2,btemp+10
 12597  01B88E  006F FF74  F035    	movff	postdec2,btemp+11
 12598  01B894  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12599  01B89A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12600  01B8A0  0EB9               	movlw	low STR_70
 12601  01B8A2  6EE6               	movwf	postinc1,c
 12602  01B8A4  0EFA               	movlw	high STR_70
 12603  01B8A6  6EE6               	movwf	postinc1,c
 12604  01B8A8  0E00               	movlw	0
 12605  01B8AA  6EE6               	movwf	postinc1,c
 12606  01B8AC  0E00               	movlw	0
 12607  01B8AE  6EE6               	movwf	postinc1,c
 12608  01B8B0  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 12609  01B8B4  0060  F0AB  FFE6   	movff	btemp,postinc1
 12610  01B8BA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12611  01B8C0  0E0C               	movlw	12
 12612  01B8C2  6EE6               	movwf	postinc1,c
 12613  01B8C4  ECE5  F0FE         	call	_sprintf	;wreg free
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;main.c: 642:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 12617  01B8C8  EE23  F074         	lfsr	2,_C+243	;volatile
 12618  01B8CC  006F FF78  F034    	movff	postinc2,btemp+10
 12619  01B8D2  006F FF74  F035    	movff	postdec2,btemp+11
 12620  01B8D8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12621  01B8DE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12622  01B8E4  EE23  F072         	lfsr	2,_C+241	;volatile
 12623  01B8E8  006F FF78  F034    	movff	postinc2,btemp+10
 12624  01B8EE  006F FF74  F035    	movff	postdec2,btemp+11
 12625  01B8F4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12626  01B8FA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12627  01B900  EE23  F070         	lfsr	2,_C+239	;volatile
 12628  01B904  006F FF78  F034    	movff	postinc2,btemp+10
 12629  01B90A  006F FF74  F035    	movff	postdec2,btemp+11
 12630  01B910  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12631  01B916  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12632  01B91C  EE23  F06E         	lfsr	2,_C+237	;volatile
 12633  01B920  006F FF78  F034    	movff	postinc2,btemp+10
 12634  01B926  006F FF74  F035    	movff	postdec2,btemp+11
 12635  01B92C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12636  01B932  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12637  01B938  0EB9               	movlw	low STR_70
 12638  01B93A  6EE6               	movwf	postinc1,c
 12639  01B93C  0EFA               	movlw	high STR_70
 12640  01B93E  6EE6               	movwf	postinc1,c
 12641  01B940  0E00               	movlw	0
 12642  01B942  6EE6               	movwf	postinc1,c
 12643  01B944  0E01               	movlw	1
 12644  01B946  6EE6               	movwf	postinc1,c
 12645  01B948  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 12646  01B94C  0060  F0AB  FFE6   	movff	btemp,postinc1
 12647  01B952  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12648  01B958  0E0C               	movlw	12
 12649  01B95A  6EE6               	movwf	postinc1,c
 12650  01B95C  ECE5  F0FE         	call	_sprintf	;wreg free
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;main.c: 643:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 12654  01B960  EE23  F07E         	lfsr	2,_C+253	;volatile
 12655  01B964  006F FF78  F034    	movff	postinc2,btemp+10
 12656  01B96A  006F FF74  F035    	movff	postdec2,btemp+11
 12657  01B970  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12658  01B976  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12659  01B97C  EE23  F07A         	lfsr	2,_C+249	;volatile
 12660  01B980  006F FF78  F034    	movff	postinc2,btemp+10
 12661  01B986  006F FF74  F035    	movff	postdec2,btemp+11
 12662  01B98C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12663  01B992  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12664  01B998  EE23  F078         	lfsr	2,_C+247	;volatile
 12665  01B99C  006F FF78  F034    	movff	postinc2,btemp+10
 12666  01B9A2  006F FF74  F035    	movff	postdec2,btemp+11
 12667  01B9A8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12668  01B9AE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12669  01B9B4  EE23  F076         	lfsr	2,_C+245	;volatile
 12670  01B9B8  006F FF78  F034    	movff	postinc2,btemp+10
 12671  01B9BE  006F FF74  F035    	movff	postdec2,btemp+11
 12672  01B9C4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12673  01B9CA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12674  01B9D0  0EB9               	movlw	low STR_70
 12675  01B9D2  6EE6               	movwf	postinc1,c
 12676  01B9D4  0EFA               	movlw	high STR_70
 12677  01B9D6  6EE6               	movwf	postinc1,c
 12678  01B9D8  0E00               	movlw	0
 12679  01B9DA  6EE6               	movwf	postinc1,c
 12680  01B9DC  0E02               	movlw	2
 12681  01B9DE  6EE6               	movwf	postinc1,c
 12682  01B9E0  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 12683  01B9E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 12684  01B9EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12685  01B9F0  0E0C               	movlw	12
 12686  01B9F2  6EE6               	movwf	postinc1,c
 12687  01B9F4  ECE5  F0FE         	call	_sprintf	;wreg free
 12688                           
 12689                           ; BSR set to: 0
 12690                           ;main.c: 644:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 12691  01B9F8  0060  F2FB  FFE6   	movff	_t_mbmc,postinc1
 12692  01B9FE  0060  F2FF  FFE6   	movff	_t_mbmc+1,postinc1
 12693  01BA04  EC21  F0C4         	call	_asctime	;wreg free
 12694  01BA08  0060  F0AB  FFE6   	movff	btemp,postinc1
 12695  01BA0E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12696  01BA14  0E76               	movlw	low (STR_77+5)
 12697  01BA16  6EE6               	movwf	postinc1,c
 12698  01BA18  0EFF               	movlw	high (STR_77+5)
 12699  01BA1A  6EE6               	movwf	postinc1,c
 12700  01BA1C  0E00               	movlw	0
 12701  01BA1E  6EE6               	movwf	postinc1,c
 12702  01BA20  0E03               	movlw	3
 12703  01BA22  6EE6               	movwf	postinc1,c
 12704  01BA24  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 12705  01BA28  0060  F0AB  FFE6   	movff	btemp,postinc1
 12706  01BA2E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12707  01BA34  0E06               	movlw	6
 12708  01BA36  6EE6               	movwf	postinc1,c
 12709  01BA38  ECE5  F0FE         	call	_sprintf	;wreg free
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;main.c: 645:   update_lcd(0);
 12713  01BA3C  0E00               	movlw	0
 12714  01BA3E  6EE6               	movwf	postinc1,c
 12715  01BA40  EC97  F0F7         	call	_update_lcd	;wreg free
 12716                           
 12717                           ;main.c: 646:   WaitMs(2000);
 12718  01BA44  0ED0               	movlw	208
 12719  01BA46  6EE6               	movwf	postinc1,c
 12720  01BA48  0E07               	movlw	7
 12721  01BA4A  6EE6               	movwf	postinc1,c
 12722  01BA4C  EC2E  F012         	call	_WaitMs	;wreg free
 12723  01BA50                     l17140:
 12724                           
 12725                           ;main.c: 647:   bwait = 0;
 12726  01BA50  6A53               	clrf	display_history@bwait^0,c
 12727  01BA52  0012               	return	
 12728  01BA54                     l17146:
 12729                           
 12730                           ;main.c: 650:   if (!get_switch(SCALIB))
 12731  01BA54  0E04               	movlw	4
 12732  01BA56  6EE6               	movwf	postinc1,c
 12733  01BA58  EC41  F013         	call	_get_switch	;wreg free
 12734  01BA5C  502A               	movf	btemp^0,w,c
 12735  01BA5E  A4D8               	btfss	status,2,c
 12736  01BA60  0012               	return	
 12737  01BA62  D7F6               	goto	l17140
 12738  01BA64                     __end_of_display_history:
 12739                           	opt callstack 0
 12740                           
 12741 ;; *************** function _time *****************
 12742 ;; Defined at:
 12743 ;;		line 251 in file "mbmc.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;  t               2  [STACK] PTR long long 
 12746 ;;		 -> time@current_time(8), NULL(0), 
 12747 ;; Auto vars:     Size  Location     Type
 12748 ;;		None
 12749 ;; Return value:  Size  Location     Type
 12750 ;;                  8  [STACK] long long 
 12751 ;; Registers used:
 12752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 12753 ;; Tracked objects:
 12754 ;;		On entry : 0/1
 12755 ;;		On exit  : 3F/39
 12756 ;;		Unchanged: 0/0
 12757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12762 ;;Total ram usage:        0 bytes
 12763 ;; Hardware stack levels used:    1
 12764 ;; Hardware stack levels required when called:   15
 12765 ;; This function calls:
 12766 ;;		Nothing
 12767 ;; This function is called by:
 12768 ;;		_main
 12769 ;;		_display_history
 12770 ;;		_check_day_time
 12771 ;;		_load_hist_data
 12772 ;; This function uses a reentrant model
 12773 ;;
 12774                           
 12775                           	psect	text35
 12776  001C46                     __ptext35:
 12777                           	opt callstack 0
 12778  001C46                     _time:
 12779                           	opt callstack 0
 12780                           
 12781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 12782  001C46  0E06               	movlw	6
 12783  001C48  26E1               	addwf	fsr1l,f,c
 12784  001C4A  0E00               	movlw	0
 12785  001C4C  22E2               	addwfc	fsr1h,f,c
 12786                           
 12787                           ;mbmc.c: 251: time_t time(time_t * t);mbmc.c: 252: {;mbmc.c: 253:  static time_t current
      +                          _time;;mbmc.c: 254:  PIE8bits.TMR5IE = 0;
 12788                           
 12789                           ;incstack = 0
 12790 ;; hardware stack exceeded
 12791  001C4E  0139               	movlb	57	; () banked
 12792  001C50  9D98               	bcf	152,6,b	;volatile
 12793                           
 12794                           ; BSR set to: 57
 12795                           ;mbmc.c: 255:  current_time = V.ticks;
 12796  001C52  0102               	movlb	2	; () banked
 12797  001C54  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 12798  001C56  0100               	movlb	0	; () banked
 12799  001C58  6FD4               	movwf	time@current_time& (0+255),b
 12800  001C5A  0102               	movlb	2	; () banked
 12801  001C5C  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 12802  001C5E  0100               	movlb	0	; () banked
 12803  001C60  6FD5               	movwf	(time@current_time+1)& (0+255),b
 12804  001C62  0102               	movlb	2	; () banked
 12805  001C64  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 12806  001C66  0100               	movlb	0	; () banked
 12807  001C68  6FD6               	movwf	(time@current_time+2)& (0+255),b
 12808  001C6A  0102               	movlb	2	; () banked
 12809  001C6C  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 12810  001C6E  0100               	movlb	0	; () banked
 12811  001C70  6FD7               	movwf	(time@current_time+3)& (0+255),b
 12812  001C72  6BD8               	clrf	(time@current_time+4)& (0+255),b
 12813  001C74  6BD9               	clrf	(time@current_time+5)& (0+255),b
 12814  001C76  6BDA               	clrf	(time@current_time+6)& (0+255),b
 12815  001C78  6BDB               	clrf	(time@current_time+7)& (0+255),b
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;mbmc.c: 256:  PIE8bits.TMR5IE = 1;
 12819  001C7A  0139               	movlb	57	; () banked
 12820  001C7C  8D98               	bsf	152,6,b	;volatile
 12821                           
 12822                           ; BSR set to: 57
 12823                           ;mbmc.c: 257:  if (t) {
 12824                           ;stkvar	_t @ sp[(0)+-8]
 12825  001C7E  0EF8               	movlw	-8
 12826  001C80  006F FF8C  F02A    	movff	plusw1,btemp
 12827  001C86  0EF9               	movlw	-7
 12828  001C88  50E3               	movf	plusw1,w,c
 12829  001C8A  102A               	iorwf	btemp^0,w,c
 12830                           
 12831                           ; BSR set to: 57
 12832                           ;mbmc.c: 260:  return current_time;
 12833                           
 12834                           ; BSR set to: 57
 12835  001C8C  EE20  F0D4         	lfsr	2,time@current_time
 12836                           
 12837                           ;stkvar	?_time @ sp[(0)+-8]
 12838  001C90  0E08               	movlw	8
 12839  001C92  6E2A               	movwf	btemp^0,c
 12840  001C94  0EF8               	movlw	-8
 12841  001C96                     us1160999:
 12842  001C96  006F FF7B FFE3     	movff	postinc2,plusw1
 12843  001C9C  28E8               	incf	wreg,w,c
 12844  001C9E  2E2A               	decfsz	btemp^0,f,c
 12845  001CA0  D7FA               	bra	us1160999
 12846                           
 12847                           ; BSR set to: 57
 12848                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 12849  001CA2  0012               	return		;funcret
 12850  001CA4                     __end_of_time:
 12851                           	opt callstack 0
 12852                           
 12853 ;; *************** function _localtime *****************
 12854 ;; Defined at:
 12855 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 12856 ;; Parameters:    Size  Location     Type
 12857 ;;  t               1  [STACK] PTR const long long 
 12858 ;;		 -> pclock(8), 
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  2  [STACK] PTR struct tm
 12863 ;; Registers used:
 12864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12865 ;; Tracked objects:
 12866 ;;		On entry : 3F/39
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12874 ;;Total ram usage:        0 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:   21
 12877 ;; This function calls:
 12878 ;;		___localtime_r
 12879 ;; This function is called by:
 12880 ;;		_main
 12881 ;;		_display_history
 12882 ;; This function uses a reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text36
 12886  002BC6                     __ptext36:
 12887                           	opt callstack 0
 12888  002BC6                     _localtime:
 12889                           	opt callstack 9
 12890                           
 12891                           ; BSR set to: 57
 12892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12893                           ;incstack = 0
 12894  002BC6  0EDE               	movlw	low localtime@tm
 12895  002BC8  6EE6               	movwf	postinc1,c
 12896  002BCA  0E02               	movlw	high localtime@tm
 12897  002BCC  6EE6               	movwf	postinc1,c
 12898                           
 12899                           ;stkvar	_t @ sp[(-2)+-1]
 12900  002BCE  0EFD               	movlw	-3
 12901  002BD0  50E3               	movf	plusw1,w,c
 12902  002BD2  6EE6               	movwf	postinc1,c
 12903  002BD4  EC1A  F0E6         	call	___localtime_r	;wreg free
 12904                           
 12905                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12906  002BD8  52E5               	movf	postdec1,f,c
 12907  002BDA  0012               	return		;funcret
 12908  002BDC                     __end_of_localtime:
 12909                           	opt callstack 0
 12910                           
 12911 ;; *************** function ___localtime_r *****************
 12912 ;; Defined at:
 12913 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;  t               1  [STACK] PTR const long long 
 12916 ;;		 -> pclock(8), 
 12917 ;;  tm              2  [STACK] PTR struct tm
 12918 ;;		 -> localtime@tm(24), 
 12919 ;; Auto vars:     Size  Location     Type
 12920 ;;		None
 12921 ;; Return value:  Size  Location     Type
 12922 ;;                  2  [STACK] PTR struct tm
 12923 ;; Registers used:
 12924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12925 ;; Tracked objects:
 12926 ;;		On entry : 0/39
 12927 ;;		On exit  : 0/0
 12928 ;;		Unchanged: 0/0
 12929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12934 ;;Total ram usage:        0 bytes
 12935 ;; Hardware stack levels used:    1
 12936 ;; Hardware stack levels required when called:   20
 12937 ;; This function calls:
 12938 ;;		___secs_to_tm
 12939 ;;		___secs_to_zone
 12940 ;; This function is called by:
 12941 ;;		_localtime
 12942 ;; This function uses a reentrant model
 12943 ;;
 12944                           
 12945                           	psect	text37
 12946  01CC34                     __ptext37:
 12947                           	opt callstack 0
 12948  01CC34                     ___localtime_r:
 12949                           	opt callstack 9
 12950                           
 12951                           ;stkvar	_t @ sp[(0)+-1]
 12952                           
 12953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12954                           ;incstack = 0
 12955  01CC34  0EFF               	movlw	-1
 12956  01CC36  50E3               	movf	plusw1,w,c
 12957  01CC38  6ED9               	movwf	fsr2l,c
 12958  01CC3A  6ADA               	clrf	fsr2h,c
 12959  01CC3C  0E07               	movlw	7
 12960  01CC3E  AEDB               	btfss	plusw2,7,c
 12961  01CC40  D010               	goto	u16310
 12962  01CC42  52DE               	movf	postinc2,f,c
 12963  01CC44  52DE               	movf	postinc2,f,c
 12964  01CC46  0E80               	movlw	128
 12965  01CC48  5CDE               	subwf	postinc2,w,c
 12966  01CC4A  0EBD               	movlw	189
 12967  01CC4C  58DE               	subwfb	postinc2,w,c
 12968  01CC4E  0E0E               	movlw	14
 12969  01CC50  58DE               	subwfb	postinc2,w,c
 12970  01CC52  0EFF               	movlw	255
 12971  01CC54  58DE               	subwfb	postinc2,w,c
 12972  01CC56  0EFF               	movlw	255
 12973  01CC58  58DE               	subwfb	postinc2,w,c
 12974  01CC5A  0EFF               	movlw	255
 12975  01CC5C  58DE               	subwfb	postinc2,w,c
 12976  01CC5E  A0D8               	btfss	status,0,c
 12977  01CC60  D01B               	goto	u16320
 12978  01CC62                     u16310:
 12979                           
 12980                           ;stkvar	_t @ sp[(0)+-1]
 12981  01CC62  0EFF               	movlw	-1
 12982  01CC64  50E3               	movf	plusw1,w,c
 12983  01CC66  6ED9               	movwf	fsr2l,c
 12984  01CC68  6ADA               	clrf	fsr2h,c
 12985  01CC6A  0E07               	movlw	7
 12986  01CC6C  BEDB               	btfsc	plusw2,7,c
 12987  01CC6E  D019               	goto	l16712
 12988  01CC70  0E07               	movlw	7
 12989  01CC72  50DB               	movf	plusw2,w,c
 12990  01CC74  E111               	bnz	u16320
 12991  01CC76  0E06               	movlw	6
 12992  01CC78  50DB               	movf	plusw2,w,c
 12993  01CC7A  E10E               	bnz	u16320
 12994  01CC7C  0E05               	movlw	5
 12995  01CC7E  50DB               	movf	plusw2,w,c
 12996  01CC80  E10B               	bnz	u16320
 12997  01CC82  04DE               	decf	postinc2,w,c
 12998  01CC84  0E7B               	movlw	123
 12999  01CC86  58DE               	subwfb	postinc2,w,c
 13000  01CC88  0E9D               	movlw	157
 13001  01CC8A  58DE               	subwfb	postinc2,w,c
 13002  01CC8C  0E40               	movlw	64
 13003  01CC8E  58DE               	subwfb	postinc2,w,c
 13004  01CC90  0EF1               	movlw	241
 13005  01CC92  58DE               	subwfb	postinc2,w,c
 13006  01CC94  A0D8               	btfss	status,0,c
 13007  01CC96  D005               	goto	l16712
 13008  01CC98                     u16320:
 13009  01CC98  0E00               	movlw	0
 13010  01CC9A  6E2A               	movwf	btemp^0,c
 13011  01CC9C  0E00               	movlw	0
 13012  01CC9E  6E2B               	movwf	(btemp+1)^0,c
 13013  01CCA0  D0E7               	goto	l3525
 13014  01CCA2                     l16712:
 13015                           
 13016                           ;stkvar	_tm @ sp[(0)+-3]
 13017  01CCA2  0EFD               	movlw	-3
 13018  01CCA4  50E3               	movf	plusw1,w,c
 13019  01CCA6  0F16               	addlw	22
 13020  01CCA8  6E34               	movwf	(btemp+10)^0,c
 13021  01CCAA  0EFE               	movlw	-2
 13022  01CCAC  006F FF8C  F035    	movff	plusw1,btemp+11
 13023  01CCB2  0E00               	movlw	0
 13024  01CCB4  2235               	addwfc	(btemp+11)^0,f,c
 13025  01CCB6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13026  01CCBC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13027  01CCC2  0E00               	movlw	0
 13028  01CCC4  6EE6               	movwf	postinc1,c
 13029  01CCC6  0E00               	movlw	0
 13030  01CCC8  6EE6               	movwf	postinc1,c
 13031                           
 13032                           ;stkvar	_tm @ sp[(-4)+-3]
 13033  01CCCA  0EF9               	movlw	-7
 13034  01CCCC  50E3               	movf	plusw1,w,c
 13035  01CCCE  0F12               	addlw	18
 13036  01CCD0  6E34               	movwf	(btemp+10)^0,c
 13037  01CCD2  0EFA               	movlw	-6
 13038  01CCD4  006F FF8C  F035    	movff	plusw1,btemp+11
 13039  01CCDA  0E00               	movlw	0
 13040  01CCDC  2235               	addwfc	(btemp+11)^0,f,c
 13041  01CCDE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13042  01CCE4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13043                           
 13044                           ;stkvar	_tm @ sp[(-6)+-3]
 13045  01CCEA  0EF7               	movlw	-9
 13046  01CCEC  50E3               	movf	plusw1,w,c
 13047  01CCEE  0F10               	addlw	16
 13048  01CCF0  6E34               	movwf	(btemp+10)^0,c
 13049  01CCF2  0EF8               	movlw	-8
 13050  01CCF4  006F FF8C  F035    	movff	plusw1,btemp+11
 13051  01CCFA  0E00               	movlw	0
 13052  01CCFC  2235               	addwfc	(btemp+11)^0,f,c
 13053  01CCFE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13054  01CD04  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13055  01CD0A  0E00               	movlw	0
 13056  01CD0C  6EE6               	movwf	postinc1,c
 13057  01CD0E  0E00               	movlw	0
 13058  01CD10  6EE6               	movwf	postinc1,c
 13059                           
 13060                           ;stkvar	_t @ sp[(-10)+-1]
 13061  01CD12  0EF5               	movlw	-11
 13062  01CD14  50E3               	movf	plusw1,w,c
 13063  01CD16  6ED9               	movwf	fsr2l,c
 13064  01CD18  6ADA               	clrf	fsr2h,c
 13065  01CD1A  006F FF7B FFE6     	movff	postinc2,postinc1
 13066  01CD20  006F FF7B FFE6     	movff	postinc2,postinc1
 13067  01CD26  006F FF7B FFE6     	movff	postinc2,postinc1
 13068  01CD2C  006F FF7B FFE6     	movff	postinc2,postinc1
 13069  01CD32  006F FF7B FFE6     	movff	postinc2,postinc1
 13070  01CD38  006F FF7B FFE6     	movff	postinc2,postinc1
 13071  01CD3E  006F FF7B FFE6     	movff	postinc2,postinc1
 13072  01CD44  006F FF7B FFE6     	movff	postinc2,postinc1
 13073  01CD4A  ECE1  F0AE         	call	___secs_to_zone	;wreg free
 13074                           
 13075                           ;stkvar	_tm @ sp[(0)+-3]
 13076  01CD4E  0EFD               	movlw	-3
 13077  01CD50  006F FF8F FFE6     	movff	plusw1,postinc1
 13078  01CD56  006F FF8F FFE6     	movff	plusw1,postinc1
 13079                           
 13080                           ;stkvar	_t @ sp[(-2)+-1]
 13081  01CD5C  0EFD               	movlw	-3
 13082  01CD5E  50E3               	movf	plusw1,w,c
 13083  01CD60  6ED9               	movwf	fsr2l,c
 13084  01CD62  6ADA               	clrf	fsr2h,c
 13085  01CD64  006F FF78  F03A    	movff	postinc2,btemp+16
 13086  01CD6A  006F FF78  F03B    	movff	postinc2,btemp+17
 13087  01CD70  006F FF78  F03C    	movff	postinc2,btemp+18
 13088  01CD76  006F FF78  F03D    	movff	postinc2,btemp+19
 13089  01CD7C  006F FF78  F03E    	movff	postinc2,btemp+20
 13090  01CD82  006F FF78  F03F    	movff	postinc2,btemp+21
 13091  01CD88  006F FF78  F040    	movff	postinc2,btemp+22
 13092  01CD8E  006F FF78  F041    	movff	postinc2,btemp+23
 13093                           
 13094                           ;stkvar	_tm @ sp[(-2)+-3]
 13095  01CD94  0EFB               	movlw	-5
 13096  01CD96  006F FF8C  F034    	movff	plusw1,btemp+10
 13097  01CD9C  0EFC               	movlw	-4
 13098  01CD9E  006F FF8C  F035    	movff	plusw1,btemp+11
 13099  01CDA4  0E12               	movlw	18
 13100  01CDA6  2434               	addwf	(btemp+10)^0,w,c
 13101  01CDA8  6ED9               	movwf	fsr2l,c
 13102  01CDAA  0E00               	movlw	0
 13103  01CDAC  2035               	addwfc	(btemp+11)^0,w,c
 13104  01CDAE  6EDA               	movwf	fsr2h,c
 13105  01CDB0  006F FF78  F032    	movff	postinc2,btemp+8
 13106  01CDB6  006F FF78  F033    	movff	postinc2,btemp+9
 13107  01CDBC  006F FF78  F034    	movff	postinc2,btemp+10
 13108  01CDC2  006F FF78  F035    	movff	postinc2,btemp+11
 13109  01CDC8  0060  F0C8  F042   	movff	btemp+8,btemp+24
 13110  01CDCE  0060  F0CC  F043   	movff	btemp+9,btemp+25
 13111  01CDD4  0060  F0D0  F044   	movff	btemp+10,btemp+26
 13112  01CDDA  0060  F0D4  F045   	movff	btemp+11,btemp+27
 13113  01CDE0  6A46               	clrf	(btemp+28)^0,c
 13114  01CDE2  BE45               	btfsc	(btemp+27)^0,7,c
 13115  01CDE4  6846               	setf	(btemp+28)^0,c
 13116  01CDE6  0060  F118  F047   	movff	btemp+28,btemp+29
 13117  01CDEC  0060  F118  F048   	movff	btemp+28,btemp+30
 13118  01CDF2  0060  F118  F049   	movff	btemp+28,btemp+31
 13119  01CDF8  503A               	movf	(btemp+16)^0,w,c
 13120  01CDFA  2442               	addwf	(btemp+24)^0,w,c
 13121  01CDFC  6E32               	movwf	(btemp+8)^0,c
 13122  01CDFE  503B               	movf	(btemp+17)^0,w,c
 13123  01CE00  2043               	addwfc	(btemp+25)^0,w,c
 13124  01CE02  6E33               	movwf	(btemp+9)^0,c
 13125  01CE04  503C               	movf	(btemp+18)^0,w,c
 13126  01CE06  2044               	addwfc	(btemp+26)^0,w,c
 13127  01CE08  6E34               	movwf	(btemp+10)^0,c
 13128  01CE0A  503D               	movf	(btemp+19)^0,w,c
 13129  01CE0C  2045               	addwfc	(btemp+27)^0,w,c
 13130  01CE0E  6E35               	movwf	(btemp+11)^0,c
 13131  01CE10  503E               	movf	(btemp+20)^0,w,c
 13132  01CE12  2046               	addwfc	(btemp+28)^0,w,c
 13133  01CE14  6E36               	movwf	(btemp+12)^0,c
 13134  01CE16  503F               	movf	(btemp+21)^0,w,c
 13135  01CE18  2047               	addwfc	(btemp+29)^0,w,c
 13136  01CE1A  6E37               	movwf	(btemp+13)^0,c
 13137  01CE1C  5040               	movf	(btemp+22)^0,w,c
 13138  01CE1E  2048               	addwfc	(btemp+30)^0,w,c
 13139  01CE20  6E38               	movwf	(btemp+14)^0,c
 13140  01CE22  5041               	movf	(btemp+23)^0,w,c
 13141  01CE24  2049               	addwfc	(btemp+31)^0,w,c
 13142  01CE26  6E39               	movwf	(btemp+15)^0,c
 13143  01CE28  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 13144  01CE2E  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 13145  01CE34  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13146  01CE3A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13147  01CE40  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 13148  01CE46  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 13149  01CE4C  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 13150  01CE52  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 13151  01CE58  ECB2  F094         	call	___secs_to_tm	;wreg free
 13152  01CE5C  BE2D               	btfsc	(btemp+3)^0,7,c
 13153  01CE5E  D71C               	goto	u16320
 13154                           
 13155                           ;stkvar	_tm @ sp[(0)+-3]
 13156  01CE60  0EFD               	movlw	-3
 13157  01CE62  006F FF8C  F02A    	movff	plusw1,btemp
 13158  01CE68  0EFE               	movlw	-2
 13159  01CE6A  006F FF8C  F02B    	movff	plusw1,btemp+1
 13160  01CE70                     l3525:
 13161                           
 13162                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 13163  01CE70  52E5               	movf	postdec1,f,c
 13164  01CE72  52E5               	movf	postdec1,f,c
 13165  01CE74  52E5               	movf	postdec1,f,c
 13166  01CE76  0012               	return		;funcret
 13167  01CE78                     __end_of___localtime_r:
 13168                           	opt callstack 0
 13169                           
 13170 ;; *************** function ___secs_to_zone *****************
 13171 ;; Defined at:
 13172 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;  t               8  [STACK] long long 
 13175 ;;  local           2  [STACK] int 
 13176 ;;  isdst           2  [STACK] PTR int 
 13177 ;;		 -> localtime@tm(24), 
 13178 ;;  offset          2  [STACK] PTR long 
 13179 ;;		 -> localtime@tm(24), 
 13180 ;;  oppoff          2  [STACK] PTR long 
 13181 ;;		 -> NULL(0), 
 13182 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 13183 ;;		 -> localtime@tm(24), 
 13184 ;; Auto vars:     Size  Location     Type
 13185 ;;  alt             2  [STACK] unsigned int 
 13186 ;;  i               2    0        unsigned int 
 13187 ;;  y               8  [STACK] long long 
 13188 ;;  t1              8  [STACK] long long 
 13189 ;;  t0              8  [STACK] long long 
 13190 ;; Return value:  Size  Location     Type
 13191 ;;                  1  [STACK] void 
 13192 ;; Registers used:
 13193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13194 ;; Tracked objects:
 13195 ;;		On entry : 0/39
 13196 ;;		On exit  : 0/0
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13203 ;;Total ram usage:        0 bytes
 13204 ;; Hardware stack levels used:    1
 13205 ;; Hardware stack levels required when called:   19
 13206 ;; This function calls:
 13207 ;;		___aodiv
 13208 ;;		___year_to_secs
 13209 ;;		_do_tzset
 13210 ;;		_rule_to_secs
 13211 ;;		_scan_trans
 13212 ;;		_zi_read32
 13213 ;; This function is called by:
 13214 ;;		___localtime_r
 13215 ;; This function uses a reentrant model
 13216 ;;
 13217                           
 13218                           	psect	text38
 13219  015DC2                     __ptext38:
 13220                           	opt callstack 0
 13221  015DC2                     ___secs_to_zone:
 13222                           	opt callstack 0
 13223                           
 13224                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13225  015DC2  0E18               	movlw	24
 13226  015DC4  26E1               	addwf	fsr1l,f,c
 13227  015DC6  0E00               	movlw	0
 13228  015DC8  22E2               	addwfc	fsr1h,f,c
 13229                           
 13230                           ;incstack = 0
 13231  015DCA  ECFD  F0DF         	call	_do_tzset	;wreg free
 13232  015DCE  0100               	movlb	0	; () banked
 13233  015DD0  51B8               	movf	___daylight& (0+255),w,b
 13234  015DD2  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 13235  015DD4  B4D8               	btfsc	status,2,c
 13236  015DD6  D356               	goto	u16100
 13237                           
 13238                           ; BSR set to: 0
 13239  015DD8  0E58               	movlw	88
 13240  015DDA  6EE6               	movwf	postinc1,c
 13241  015DDC  0E85               	movlw	133
 13242  015DDE  6EE6               	movwf	postinc1,c
 13243  015DE0  0EE1               	movlw	225
 13244  015DE2  6EE6               	movwf	postinc1,c
 13245  015DE4  0E01               	movlw	1
 13246  015DE6  6EE6               	movwf	postinc1,c
 13247  015DE8  0E00               	movlw	0
 13248  015DEA  6EE6               	movwf	postinc1,c
 13249  015DEC  0E00               	movlw	0
 13250  015DEE  6EE6               	movwf	postinc1,c
 13251  015DF0  0E00               	movlw	0
 13252  015DF2  6EE6               	movwf	postinc1,c
 13253  015DF4  0E00               	movlw	0
 13254  015DF6  6EE6               	movwf	postinc1,c
 13255                           
 13256                           ;stkvar	_t @ sp[(-32)+-8]
 13257  015DF8  50E1               	movf	fsr1l,w,c
 13258  015DFA  0FD8               	addlw	-40
 13259  015DFC  6ED9               	movwf	fsr2l,c
 13260  015DFE  50E2               	movf	fsr1h,w,c
 13261  015E00  6EDA               	movwf	fsr2h,c
 13262  015E02  0EFF               	movlw	255
 13263  015E04  22DA               	addwfc	fsr2h,f,c
 13264  015E06  006F FF7B FFE6     	movff	postinc2,postinc1
 13265  015E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 13266  015E12  006F FF7B FFE6     	movff	postinc2,postinc1
 13267  015E18  006F FF7B FFE6     	movff	postinc2,postinc1
 13268  015E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 13269  015E24  006F FF7B FFE6     	movff	postinc2,postinc1
 13270  015E2A  006F FF7B FFE6     	movff	postinc2,postinc1
 13271  015E30  006F FF7B FFE6     	movff	postinc2,postinc1
 13272  015E36  EC7D  F0E2         	call	___aodiv	;wreg free
 13273  015E3A  52E5               	movf	postdec1,f,c
 13274  015E3C  006F FF9C  F041    	movff	indf1,btemp+23
 13275  015E42  52E5               	movf	postdec1,f,c
 13276  015E44  006F FF9C  F040    	movff	indf1,btemp+22
 13277  015E4A  52E5               	movf	postdec1,f,c
 13278  015E4C  006F FF9C  F03F    	movff	indf1,btemp+21
 13279  015E52  52E5               	movf	postdec1,f,c
 13280  015E54  006F FF9C  F03E    	movff	indf1,btemp+20
 13281  015E5A  52E5               	movf	postdec1,f,c
 13282  015E5C  006F FF9C  F03D    	movff	indf1,btemp+19
 13283  015E62  52E5               	movf	postdec1,f,c
 13284  015E64  006F FF9C  F03C    	movff	indf1,btemp+18
 13285  015E6A  52E5               	movf	postdec1,f,c
 13286  015E6C  006F FF9C  F03B    	movff	indf1,btemp+17
 13287  015E72  52E5               	movf	postdec1,f,c
 13288  015E74  006F FF9C  F03A    	movff	indf1,btemp+16
 13289  015E7A  0EF8               	movlw	248
 13290  015E7C  26E1               	addwf	fsr1l,f,c
 13291  015E7E  0EFF               	movlw	255
 13292  015E80  22E2               	addwfc	fsr1h,f,c
 13293  015E82  0E46               	movlw	70
 13294  015E84  243A               	addwf	(btemp+16)^0,w,c
 13295  015E86  6E42               	movwf	(btemp+24)^0,c
 13296  015E88  0E00               	movlw	0
 13297  015E8A  203B               	addwfc	(btemp+17)^0,w,c
 13298  015E8C  6E43               	movwf	(btemp+25)^0,c
 13299  015E8E  0E00               	movlw	0
 13300  015E90  203C               	addwfc	(btemp+18)^0,w,c
 13301  015E92  6E44               	movwf	(btemp+26)^0,c
 13302  015E94  0E00               	movlw	0
 13303  015E96  203D               	addwfc	(btemp+19)^0,w,c
 13304  015E98  6E45               	movwf	(btemp+27)^0,c
 13305  015E9A  0E00               	movlw	0
 13306  015E9C  203E               	addwfc	(btemp+20)^0,w,c
 13307  015E9E  6E46               	movwf	(btemp+28)^0,c
 13308  015EA0  0E00               	movlw	0
 13309  015EA2  203F               	addwfc	(btemp+21)^0,w,c
 13310  015EA4  6E47               	movwf	(btemp+29)^0,c
 13311  015EA6  0E00               	movlw	0
 13312  015EA8  2040               	addwfc	(btemp+22)^0,w,c
 13313  015EAA  6E48               	movwf	(btemp+30)^0,c
 13314  015EAC  0E00               	movlw	0
 13315  015EAE  2041               	addwfc	(btemp+23)^0,w,c
 13316  015EB0  6E49               	movwf	(btemp+31)^0,c
 13317                           
 13318                           ;stkvar	_y @ sp[(-24)+0]
 13319  015EB2  0EE8               	movlw	-24
 13320  015EB4  0060  F10B  FFE3   	movff	btemp+24,plusw1
 13321  015EBA  0EE9               	movlw	-23
 13322  015EBC  0060  F10F  FFE3   	movff	btemp+25,plusw1
 13323  015EC2  0EEA               	movlw	-22
 13324  015EC4  0060  F113  FFE3   	movff	btemp+26,plusw1
 13325  015ECA  0EEB               	movlw	-21
 13326  015ECC  0060  F117  FFE3   	movff	btemp+27,plusw1
 13327  015ED2  0EEC               	movlw	-20
 13328  015ED4  0060  F11B  FFE3   	movff	btemp+28,plusw1
 13329  015EDA  0EED               	movlw	-19
 13330  015EDC  0060  F11F  FFE3   	movff	btemp+29,plusw1
 13331  015EE2  0EEE               	movlw	-18
 13332  015EE4  0060  F123  FFE3   	movff	btemp+30,plusw1
 13333  015EEA  0EEF               	movlw	-17
 13334  015EEC  0060  F127  FFE3   	movff	btemp+31,plusw1
 13335  015EF2  D010               	goto	l16482
 13336  015EF4                     l16480:
 13337                           
 13338                           ;stkvar	_y @ sp[(-24)+0]
 13339  015EF4  50E1               	movf	fsr1l,w,c
 13340  015EF6  0FE8               	addlw	-24
 13341  015EF8  6ED9               	movwf	fsr2l,c
 13342  015EFA  50E2               	movf	fsr1h,w,c
 13343  015EFC  6EDA               	movwf	fsr2h,c
 13344  015EFE  0EFF               	movlw	255
 13345  015F00  22DA               	addwfc	fsr2h,f,c
 13346  015F02  06DE               	decf	postinc2,f,c
 13347  015F04  0E00               	movlw	0
 13348  015F06  5ADE               	subwfb	postinc2,f,c
 13349  015F08  5ADE               	subwfb	postinc2,f,c
 13350  015F0A  5ADE               	subwfb	postinc2,f,c
 13351  015F0C  5ADE               	subwfb	postinc2,f,c
 13352  015F0E  5ADE               	subwfb	postinc2,f,c
 13353  015F10  5ADE               	subwfb	postinc2,f,c
 13354  015F12  5ADE               	subwfb	postinc2,f,c
 13355  015F14                     l16482:
 13356  015F14  0E00               	movlw	0
 13357  015F16  6EE6               	movwf	postinc1,c
 13358  015F18  0E00               	movlw	0
 13359  015F1A  6EE6               	movwf	postinc1,c
 13360                           
 13361                           ;stkvar	_y @ sp[(-26)+0]
 13362  015F1C  50E1               	movf	fsr1l,w,c
 13363  015F1E  0FE6               	addlw	-26
 13364  015F20  6ED9               	movwf	fsr2l,c
 13365  015F22  50E2               	movf	fsr1h,w,c
 13366  015F24  6EDA               	movwf	fsr2h,c
 13367  015F26  0EFF               	movlw	255
 13368  015F28  22DA               	addwfc	fsr2h,f,c
 13369  015F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 13370  015F30  006F FF7B FFE6     	movff	postinc2,postinc1
 13371  015F36  006F FF7B FFE6     	movff	postinc2,postinc1
 13372  015F3C  006F FF7B FFE6     	movff	postinc2,postinc1
 13373  015F42  006F FF7B FFE6     	movff	postinc2,postinc1
 13374  015F48  006F FF7B FFE6     	movff	postinc2,postinc1
 13375  015F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 13376  015F54  006F FF7B FFE6     	movff	postinc2,postinc1
 13377  015F5A  EC28  F0AA         	call	___year_to_secs	;wreg free
 13378  015F5E  52E5               	movf	postdec1,f,c
 13379  015F60  006F FF9C  F041    	movff	indf1,btemp+23
 13380  015F66  52E5               	movf	postdec1,f,c
 13381  015F68  006F FF9C  F040    	movff	indf1,btemp+22
 13382  015F6E  52E5               	movf	postdec1,f,c
 13383  015F70  006F FF9C  F03F    	movff	indf1,btemp+21
 13384  015F76  52E5               	movf	postdec1,f,c
 13385  015F78  006F FF9C  F03E    	movff	indf1,btemp+20
 13386  015F7E  52E5               	movf	postdec1,f,c
 13387  015F80  006F FF9C  F03D    	movff	indf1,btemp+19
 13388  015F86  52E5               	movf	postdec1,f,c
 13389  015F88  006F FF9C  F03C    	movff	indf1,btemp+18
 13390  015F8E  52E5               	movf	postdec1,f,c
 13391  015F90  006F FF9C  F03B    	movff	indf1,btemp+17
 13392  015F96  52E5               	movf	postdec1,f,c
 13393  015F98  006F FF9C  F03A    	movff	indf1,btemp+16
 13394  015F9E  52E5               	movf	postdec1,f,c
 13395  015FA0  52E5               	movf	postdec1,f,c
 13396                           
 13397                           ;stkvar	_t @ sp[(-24)+-8]
 13398  015FA2  0EE0               	movlw	-32
 13399  015FA4  006F FF8C  F02A    	movff	plusw1,btemp
 13400  015FAA  503A               	movf	(btemp+16)^0,w,c
 13401  015FAC  5C2A               	subwf	btemp^0,w,c
 13402  015FAE  0EE1               	movlw	-31
 13403  015FB0  006F FF8C  F02A    	movff	plusw1,btemp
 13404  015FB6  503B               	movf	(btemp+17)^0,w,c
 13405  015FB8  582A               	subwfb	btemp^0,w,c
 13406  015FBA  0EE2               	movlw	-30
 13407  015FBC  006F FF8C  F02A    	movff	plusw1,btemp
 13408  015FC2  503C               	movf	(btemp+18)^0,w,c
 13409  015FC4  582A               	subwfb	btemp^0,w,c
 13410  015FC6  0EE3               	movlw	-29
 13411  015FC8  006F FF8C  F02A    	movff	plusw1,btemp
 13412  015FCE  503D               	movf	(btemp+19)^0,w,c
 13413  015FD0  582A               	subwfb	btemp^0,w,c
 13414  015FD2  0EE4               	movlw	-28
 13415  015FD4  006F FF8C  F02A    	movff	plusw1,btemp
 13416  015FDA  503E               	movf	(btemp+20)^0,w,c
 13417  015FDC  582A               	subwfb	btemp^0,w,c
 13418  015FDE  0EE5               	movlw	-27
 13419  015FE0  006F FF8C  F02A    	movff	plusw1,btemp
 13420  015FE6  503F               	movf	(btemp+21)^0,w,c
 13421  015FE8  582A               	subwfb	btemp^0,w,c
 13422  015FEA  0EE6               	movlw	-26
 13423  015FEC  006F FF8C  F02A    	movff	plusw1,btemp
 13424  015FF2  5040               	movf	(btemp+22)^0,w,c
 13425  015FF4  582A               	subwfb	btemp^0,w,c
 13426  015FF6  0EE7               	movlw	-25
 13427  015FF8  50E3               	movf	plusw1,w,c
 13428  015FFA  0A80               	xorlw	128
 13429  015FFC  6E2A               	movwf	btemp^0,c
 13430  015FFE  5041               	movf	(btemp+23)^0,w,c
 13431  016000  0A80               	xorlw	128
 13432  016002  582A               	subwfb	btemp^0,w,c
 13433  016004  B0D8               	btfsc	status,0,c
 13434  016006  D011               	goto	l16486
 13435  016008  D775               	goto	l16480
 13436  01600A                     l16484:
 13437                           
 13438                           ;stkvar	_y @ sp[(-24)+0]
 13439  01600A  50E1               	movf	fsr1l,w,c
 13440  01600C  0FE8               	addlw	-24
 13441  01600E  6ED9               	movwf	fsr2l,c
 13442  016010  50E2               	movf	fsr1h,w,c
 13443  016012  6EDA               	movwf	fsr2h,c
 13444  016014  0EFF               	movlw	255
 13445  016016  22DA               	addwfc	fsr2h,f,c
 13446  016018  2ADE               	incf	postinc2,f,c
 13447  01601A  0E00               	movlw	0
 13448  01601C  22DE               	addwfc	postinc2,f,c
 13449  01601E  22DE               	addwfc	postinc2,f,c
 13450  016020  22DE               	addwfc	postinc2,f,c
 13451  016022  22DE               	addwfc	postinc2,f,c
 13452  016024  22DE               	addwfc	postinc2,f,c
 13453  016026  22DE               	addwfc	postinc2,f,c
 13454  016028  22DE               	addwfc	postinc2,f,c
 13455  01602A                     l16486:
 13456                           
 13457                           ;stkvar	_t @ sp[(-24)+-8]
 13458  01602A  0E00               	movlw	0
 13459  01602C  6EE6               	movwf	postinc1,c
 13460  01602E  0E00               	movlw	0
 13461  016030  6EE6               	movwf	postinc1,c
 13462                           
 13463                           ;stkvar	_y @ sp[(-26)+0]
 13464  016032  0EE6               	movlw	-26
 13465  016034  50E3               	movf	plusw1,w,c
 13466  016036  0F01               	addlw	1
 13467  016038  6E3A               	movwf	(btemp+16)^0,c
 13468  01603A  0EE7               	movlw	-25
 13469  01603C  006F FF8C  F03B    	movff	plusw1,btemp+17
 13470  016042  0E00               	movlw	0
 13471  016044  223B               	addwfc	(btemp+17)^0,f,c
 13472  016046  0EE8               	movlw	-24
 13473  016048  006F FF8C  F03C    	movff	plusw1,btemp+18
 13474  01604E  0E00               	movlw	0
 13475  016050  223C               	addwfc	(btemp+18)^0,f,c
 13476  016052  0EE9               	movlw	-23
 13477  016054  006F FF8C  F03D    	movff	plusw1,btemp+19
 13478  01605A  0E00               	movlw	0
 13479  01605C  223D               	addwfc	(btemp+19)^0,f,c
 13480  01605E  0EEA               	movlw	-22
 13481  016060  006F FF8C  F03E    	movff	plusw1,btemp+20
 13482  016066  0E00               	movlw	0
 13483  016068  223E               	addwfc	(btemp+20)^0,f,c
 13484  01606A  0EEB               	movlw	-21
 13485  01606C  006F FF8C  F03F    	movff	plusw1,btemp+21
 13486  016072  0E00               	movlw	0
 13487  016074  223F               	addwfc	(btemp+21)^0,f,c
 13488  016076  0EEC               	movlw	-20
 13489  016078  006F FF8C  F040    	movff	plusw1,btemp+22
 13490  01607E  0E00               	movlw	0
 13491  016080  2240               	addwfc	(btemp+22)^0,f,c
 13492  016082  0EED               	movlw	-19
 13493  016084  006F FF8C  F041    	movff	plusw1,btemp+23
 13494  01608A  0E00               	movlw	0
 13495  01608C  2241               	addwfc	(btemp+23)^0,f,c
 13496  01608E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13497  016094  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13498  01609A  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13499  0160A0  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13500  0160A6  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13501  0160AC  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13502  0160B2  0060  F103  FFE6   	movff	btemp+22,postinc1
 13503  0160B8  0060  F107  FFE6   	movff	btemp+23,postinc1
 13504  0160BE  EC28  F0AA         	call	___year_to_secs	;wreg free
 13505  0160C2  52E5               	movf	postdec1,f,c
 13506  0160C4  006F FF9C  F041    	movff	indf1,btemp+23
 13507  0160CA  52E5               	movf	postdec1,f,c
 13508  0160CC  006F FF9C  F040    	movff	indf1,btemp+22
 13509  0160D2  52E5               	movf	postdec1,f,c
 13510  0160D4  006F FF9C  F03F    	movff	indf1,btemp+21
 13511  0160DA  52E5               	movf	postdec1,f,c
 13512  0160DC  006F FF9C  F03E    	movff	indf1,btemp+20
 13513  0160E2  52E5               	movf	postdec1,f,c
 13514  0160E4  006F FF9C  F03D    	movff	indf1,btemp+19
 13515  0160EA  52E5               	movf	postdec1,f,c
 13516  0160EC  006F FF9C  F03C    	movff	indf1,btemp+18
 13517  0160F2  52E5               	movf	postdec1,f,c
 13518  0160F4  006F FF9C  F03B    	movff	indf1,btemp+17
 13519  0160FA  52E5               	movf	postdec1,f,c
 13520  0160FC  006F FF9C  F03A    	movff	indf1,btemp+16
 13521  016102  52E5               	movf	postdec1,f,c
 13522  016104  52E5               	movf	postdec1,f,c
 13523  016106  0EE0               	movlw	-32
 13524  016108  50E3               	movf	plusw1,w,c
 13525  01610A  5C3A               	subwf	(btemp+16)^0,w,c
 13526  01610C  0EE1               	movlw	-31
 13527  01610E  50E3               	movf	plusw1,w,c
 13528  016110  583B               	subwfb	(btemp+17)^0,w,c
 13529  016112  0EE2               	movlw	-30
 13530  016114  50E3               	movf	plusw1,w,c
 13531  016116  583C               	subwfb	(btemp+18)^0,w,c
 13532  016118  0EE3               	movlw	-29
 13533  01611A  50E3               	movf	plusw1,w,c
 13534  01611C  583D               	subwfb	(btemp+19)^0,w,c
 13535  01611E  0EE4               	movlw	-28
 13536  016120  50E3               	movf	plusw1,w,c
 13537  016122  583E               	subwfb	(btemp+20)^0,w,c
 13538  016124  0EE5               	movlw	-27
 13539  016126  50E3               	movf	plusw1,w,c
 13540  016128  583F               	subwfb	(btemp+21)^0,w,c
 13541  01612A  0EE6               	movlw	-26
 13542  01612C  50E3               	movf	plusw1,w,c
 13543  01612E  5840               	subwfb	(btemp+22)^0,w,c
 13544  016130  5041               	movf	(btemp+23)^0,w,c
 13545  016132  0A80               	xorlw	128
 13546  016134  6E2A               	movwf	btemp^0,c
 13547  016136  0EE7               	movlw	-25
 13548  016138  50E3               	movf	plusw1,w,c
 13549  01613A  0A80               	xorlw	128
 13550  01613C  582A               	subwfb	btemp^0,w,c
 13551  01613E  A0D8               	btfss	status,0,c
 13552  016140  D764               	goto	l16484
 13553                           
 13554                           ;stkvar	_y @ sp[(-24)+0]
 13555  016142  0EE8               	movlw	-24
 13556  016144  006F FF8F FFE6     	movff	plusw1,postinc1
 13557  01614A  006F FF8F FFE6     	movff	plusw1,postinc1
 13558  016150  0EE5               	movlw	low _r0
 13559  016152  6EE6               	movwf	postinc1,c
 13560  016154  0E01               	movlw	high _r0
 13561  016156  6EE6               	movwf	postinc1,c
 13562  016158  EC25  F0BB         	call	_rule_to_secs	;wreg free
 13563  01615C  52E5               	movf	postdec1,f,c
 13564  01615E  006F FF9C  F041    	movff	indf1,btemp+23
 13565  016164  52E5               	movf	postdec1,f,c
 13566  016166  006F FF9C  F040    	movff	indf1,btemp+22
 13567  01616C  52E5               	movf	postdec1,f,c
 13568  01616E  006F FF9C  F03F    	movff	indf1,btemp+21
 13569  016174  52E5               	movf	postdec1,f,c
 13570  016176  006F FF9C  F03E    	movff	indf1,btemp+20
 13571  01617C  52E5               	movf	postdec1,f,c
 13572  01617E  006F FF9C  F03D    	movff	indf1,btemp+19
 13573  016184  52E5               	movf	postdec1,f,c
 13574  016186  006F FF9C  F03C    	movff	indf1,btemp+18
 13575  01618C  52E5               	movf	postdec1,f,c
 13576  01618E  006F FF9C  F03B    	movff	indf1,btemp+17
 13577  016194  52E5               	movf	postdec1,f,c
 13578  016196  006F FF9C  F03A    	movff	indf1,btemp+16
 13579                           
 13580                           ;stkvar	_t0 @ sp[(-24)+16]
 13581  01619C  0EF8               	movlw	-8
 13582  01619E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13583  0161A4  0EF9               	movlw	-7
 13584  0161A6  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13585  0161AC  0EFA               	movlw	-6
 13586  0161AE  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13587  0161B4  0EFB               	movlw	-5
 13588  0161B6  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13589  0161BC  0EFC               	movlw	-4
 13590  0161BE  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13591  0161C4  0EFD               	movlw	-3
 13592  0161C6  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13593  0161CC  0EFE               	movlw	-2
 13594  0161CE  0060  F103  FFE3   	movff	btemp+22,plusw1
 13595  0161D4  0EFF               	movlw	-1
 13596  0161D6  0060  F107  FFE3   	movff	btemp+23,plusw1
 13597                           
 13598                           ;stkvar	_y @ sp[(-24)+0]
 13599  0161DC  0EE8               	movlw	-24
 13600  0161DE  006F FF8F FFE6     	movff	plusw1,postinc1
 13601  0161E4  006F FF8F FFE6     	movff	plusw1,postinc1
 13602  0161EA  0EDB               	movlw	low _r1
 13603  0161EC  6EE6               	movwf	postinc1,c
 13604  0161EE  0E01               	movlw	high _r1
 13605  0161F0  6EE6               	movwf	postinc1,c
 13606  0161F2  EC25  F0BB         	call	_rule_to_secs	;wreg free
 13607  0161F6  52E5               	movf	postdec1,f,c
 13608  0161F8  006F FF9C  F041    	movff	indf1,btemp+23
 13609  0161FE  52E5               	movf	postdec1,f,c
 13610  016200  006F FF9C  F040    	movff	indf1,btemp+22
 13611  016206  52E5               	movf	postdec1,f,c
 13612  016208  006F FF9C  F03F    	movff	indf1,btemp+21
 13613  01620E  52E5               	movf	postdec1,f,c
 13614  016210  006F FF9C  F03E    	movff	indf1,btemp+20
 13615  016216  52E5               	movf	postdec1,f,c
 13616  016218  006F FF9C  F03D    	movff	indf1,btemp+19
 13617  01621E  52E5               	movf	postdec1,f,c
 13618  016220  006F FF9C  F03C    	movff	indf1,btemp+18
 13619  016226  52E5               	movf	postdec1,f,c
 13620  016228  006F FF9C  F03B    	movff	indf1,btemp+17
 13621  01622E  52E5               	movf	postdec1,f,c
 13622  016230  006F FF9C  F03A    	movff	indf1,btemp+16
 13623                           
 13624                           ;stkvar	_t1 @ sp[(-24)+8]
 13625  016236  0EF0               	movlw	-16
 13626  016238  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13627  01623E  0EF1               	movlw	-15
 13628  016240  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13629  016246  0EF2               	movlw	-14
 13630  016248  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13631  01624E  0EF3               	movlw	-13
 13632  016250  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13633  016256  0EF4               	movlw	-12
 13634  016258  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13635  01625E  0EF5               	movlw	-11
 13636  016260  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13637  016266  0EF6               	movlw	-10
 13638  016268  0060  F103  FFE3   	movff	btemp+22,plusw1
 13639  01626E  0EF7               	movlw	-9
 13640  016270  0060  F107  FFE3   	movff	btemp+23,plusw1
 13641                           
 13642                           ;stkvar	_local @ sp[(-24)+-10]
 13643  016276  0EDE               	movlw	-34
 13644  016278  006F FF8C  F02A    	movff	plusw1,btemp
 13645  01627E  0EDF               	movlw	-33
 13646  016280  50E3               	movf	plusw1,w,c
 13647  016282  102A               	iorwf	btemp^0,w,c
 13648  016284  A4D8               	btfss	status,2,c
 13649  016286  D044               	goto	l16496
 13650  016288  0060  F1C0  F03A   	movff	___timezone,btemp+16
 13651  01628E  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 13652  016294  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 13653  01629A  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 13654  0162A0  6A3E               	clrf	(btemp+20)^0,c
 13655  0162A2  BE3D               	btfsc	(btemp+19)^0,7,c
 13656  0162A4  683E               	setf	(btemp+20)^0,c
 13657  0162A6  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13658  0162AC  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13659  0162B2  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13660                           
 13661                           ;stkvar	_t0 @ sp[(-24)+16]
 13662  0162B8  50E1               	movf	fsr1l,w,c
 13663  0162BA  0FF8               	addlw	-8
 13664  0162BC  6ED9               	movwf	fsr2l,c
 13665  0162BE  50E2               	movf	fsr1h,w,c
 13666  0162C0  6EDA               	movwf	fsr2h,c
 13667  0162C2  0EFF               	movlw	255
 13668  0162C4  22DA               	addwfc	fsr2h,f,c
 13669  0162C6  503A               	movf	(btemp+16)^0,w,c
 13670  0162C8  26DE               	addwf	postinc2,f,c
 13671  0162CA  503B               	movf	(btemp+17)^0,w,c
 13672  0162CC  22DE               	addwfc	postinc2,f,c
 13673  0162CE  503C               	movf	(btemp+18)^0,w,c
 13674  0162D0  22DE               	addwfc	postinc2,f,c
 13675  0162D2  503D               	movf	(btemp+19)^0,w,c
 13676  0162D4  22DE               	addwfc	postinc2,f,c
 13677  0162D6  503E               	movf	(btemp+20)^0,w,c
 13678  0162D8  22DE               	addwfc	postinc2,f,c
 13679  0162DA  503F               	movf	(btemp+21)^0,w,c
 13680  0162DC  22DE               	addwfc	postinc2,f,c
 13681  0162DE  5040               	movf	(btemp+22)^0,w,c
 13682  0162E0  22DE               	addwfc	postinc2,f,c
 13683  0162E2  5041               	movf	(btemp+23)^0,w,c
 13684  0162E4  22DE               	addwfc	postinc2,f,c
 13685                           
 13686                           ;stkvar	_t1 @ sp[(-24)+8]
 13687  0162E6  50E1               	movf	fsr1l,w,c
 13688  0162E8  0FF0               	addlw	-16
 13689  0162EA  6ED9               	movwf	fsr2l,c
 13690  0162EC  50E2               	movf	fsr1h,w,c
 13691  0162EE  6EDA               	movwf	fsr2h,c
 13692  0162F0  0EFF               	movlw	255
 13693  0162F2  22DA               	addwfc	fsr2h,f,c
 13694  0162F4  0100               	movlb	0	; () banked
 13695  0162F6  51B6               	movf	_dst_off& (0+255),w,b
 13696  0162F8  26DE               	addwf	postinc2,f,c
 13697  0162FA  51B7               	movf	(_dst_off+1)& (0+255),w,b
 13698  0162FC  22DE               	addwfc	postinc2,f,c
 13699  0162FE  0E00               	movlw	0
 13700  016300  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 13701  016302  0EFF               	movlw	255
 13702  016304  22DE               	addwfc	postinc2,f,c
 13703  016306  22DE               	addwfc	postinc2,f,c
 13704  016308  22DE               	addwfc	postinc2,f,c
 13705  01630A  22DE               	addwfc	postinc2,f,c
 13706  01630C  22DE               	addwfc	postinc2,f,c
 13707  01630E  22DE               	addwfc	postinc2,f,c
 13708  016310                     l16496:
 13709                           
 13710                           ;stkvar	_t1 @ sp[(-24)+8]
 13711                           ;stkvar	_t0 @ sp[(-24)+16]
 13712  016310  50E1               	movf	fsr1l,w,c
 13713  016312  0FF8               	addlw	-8
 13714  016314  6ED9               	movwf	fsr2l,c
 13715  016316  50E2               	movf	fsr1h,w,c
 13716  016318  6EDA               	movwf	fsr2h,c
 13717  01631A  0EFF               	movlw	255
 13718  01631C  22DA               	addwfc	fsr2h,f,c
 13719  01631E  0EF0               	movlw	-16
 13720  016320  50E3               	movf	plusw1,w,c
 13721  016322  5CDE               	subwf	postinc2,w,c
 13722  016324  0EF1               	movlw	-15
 13723  016326  50E3               	movf	plusw1,w,c
 13724  016328  58DE               	subwfb	postinc2,w,c
 13725  01632A  0EF2               	movlw	-14
 13726  01632C  50E3               	movf	plusw1,w,c
 13727  01632E  58DE               	subwfb	postinc2,w,c
 13728  016330  0EF3               	movlw	-13
 13729  016332  50E3               	movf	plusw1,w,c
 13730  016334  58DE               	subwfb	postinc2,w,c
 13731  016336  0EF4               	movlw	-12
 13732  016338  50E3               	movf	plusw1,w,c
 13733  01633A  58DE               	subwfb	postinc2,w,c
 13734  01633C  0EF5               	movlw	-11
 13735  01633E  50E3               	movf	plusw1,w,c
 13736  016340  58DE               	subwfb	postinc2,w,c
 13737  016342  0EF6               	movlw	-10
 13738  016344  50E3               	movf	plusw1,w,c
 13739  016346  58DE               	subwfb	postinc2,w,c
 13740  016348  50DE               	movf	postinc2,w,c
 13741  01634A  0A80               	xorlw	128
 13742  01634C  6E2A               	movwf	btemp^0,c
 13743  01634E  0EF7               	movlw	-9
 13744  016350  50E3               	movf	plusw1,w,c
 13745  016352  0A80               	xorlw	128
 13746  016354  582A               	subwfb	btemp^0,w,c
 13747  016356  B0D8               	btfsc	status,0,c
 13748  016358  D04B               	goto	l16506
 13749                           
 13750                           ;stkvar	_t0 @ sp[(-24)+16]
 13751                           ;stkvar	_t @ sp[(-24)+-8]
 13752  01635A  50E1               	movf	fsr1l,w,c
 13753  01635C  0FE0               	addlw	-32
 13754  01635E  6ED9               	movwf	fsr2l,c
 13755  016360  50E2               	movf	fsr1h,w,c
 13756  016362  6EDA               	movwf	fsr2h,c
 13757  016364  0EFF               	movlw	255
 13758  016366  22DA               	addwfc	fsr2h,f,c
 13759  016368  0EF8               	movlw	-8
 13760  01636A  50E3               	movf	plusw1,w,c
 13761  01636C  5CDE               	subwf	postinc2,w,c
 13762  01636E  0EF9               	movlw	-7
 13763  016370  50E3               	movf	plusw1,w,c
 13764  016372  58DE               	subwfb	postinc2,w,c
 13765  016374  0EFA               	movlw	-6
 13766  016376  50E3               	movf	plusw1,w,c
 13767  016378  58DE               	subwfb	postinc2,w,c
 13768  01637A  0EFB               	movlw	-5
 13769  01637C  50E3               	movf	plusw1,w,c
 13770  01637E  58DE               	subwfb	postinc2,w,c
 13771  016380  0EFC               	movlw	-4
 13772  016382  50E3               	movf	plusw1,w,c
 13773  016384  58DE               	subwfb	postinc2,w,c
 13774  016386  0EFD               	movlw	-3
 13775  016388  50E3               	movf	plusw1,w,c
 13776  01638A  58DE               	subwfb	postinc2,w,c
 13777  01638C  0EFE               	movlw	-2
 13778  01638E  50E3               	movf	plusw1,w,c
 13779  016390  58DE               	subwfb	postinc2,w,c
 13780  016392  50DE               	movf	postinc2,w,c
 13781  016394  0A80               	xorlw	128
 13782  016396  6E2A               	movwf	btemp^0,c
 13783  016398  0EFF               	movlw	-1
 13784  01639A  50E3               	movf	plusw1,w,c
 13785  01639C  0A80               	xorlw	128
 13786  01639E  582A               	subwfb	btemp^0,w,c
 13787  0163A0  A0D8               	btfss	status,0,c
 13788  0163A2  D070               	goto	u16100
 13789                           
 13790                           ;stkvar	_t1 @ sp[(-24)+8]
 13791                           ;stkvar	_t @ sp[(-24)+-8]
 13792  0163A4  50E1               	movf	fsr1l,w,c
 13793  0163A6  0FE0               	addlw	-32
 13794  0163A8  6ED9               	movwf	fsr2l,c
 13795  0163AA  50E2               	movf	fsr1h,w,c
 13796  0163AC  6EDA               	movwf	fsr2h,c
 13797  0163AE  0EFF               	movlw	255
 13798  0163B0  22DA               	addwfc	fsr2h,f,c
 13799  0163B2  0EF0               	movlw	-16
 13800  0163B4  50E3               	movf	plusw1,w,c
 13801  0163B6  5CDE               	subwf	postinc2,w,c
 13802  0163B8  0EF1               	movlw	-15
 13803  0163BA  50E3               	movf	plusw1,w,c
 13804  0163BC  58DE               	subwfb	postinc2,w,c
 13805  0163BE  0EF2               	movlw	-14
 13806  0163C0  50E3               	movf	plusw1,w,c
 13807  0163C2  58DE               	subwfb	postinc2,w,c
 13808  0163C4  0EF3               	movlw	-13
 13809  0163C6  50E3               	movf	plusw1,w,c
 13810  0163C8  58DE               	subwfb	postinc2,w,c
 13811  0163CA  0EF4               	movlw	-12
 13812  0163CC  50E3               	movf	plusw1,w,c
 13813  0163CE  58DE               	subwfb	postinc2,w,c
 13814  0163D0  0EF5               	movlw	-11
 13815  0163D2  50E3               	movf	plusw1,w,c
 13816  0163D4  58DE               	subwfb	postinc2,w,c
 13817  0163D6  0EF6               	movlw	-10
 13818  0163D8  50E3               	movf	plusw1,w,c
 13819  0163DA  58DE               	subwfb	postinc2,w,c
 13820  0163DC  50DE               	movf	postinc2,w,c
 13821  0163DE  0A80               	xorlw	128
 13822  0163E0  6E2A               	movwf	btemp^0,c
 13823  0163E2  0EF7               	movlw	-9
 13824  0163E4  50E3               	movf	plusw1,w,c
 13825  0163E6  0A80               	xorlw	128
 13826  0163E8  582A               	subwfb	btemp^0,w,c
 13827  0163EA  A0D8               	btfss	status,0,c
 13828  0163EC  D0C1               	goto	l16524
 13829  0163EE  D04A               	goto	u16100
 13830  0163F0                     l16506:
 13831                           
 13832                           ;stkvar	_t1 @ sp[(-24)+8]
 13833                           ;stkvar	_t @ sp[(-24)+-8]
 13834  0163F0  50E1               	movf	fsr1l,w,c
 13835  0163F2  0FE0               	addlw	-32
 13836  0163F4  6ED9               	movwf	fsr2l,c
 13837  0163F6  50E2               	movf	fsr1h,w,c
 13838  0163F8  6EDA               	movwf	fsr2h,c
 13839  0163FA  0EFF               	movlw	255
 13840  0163FC  22DA               	addwfc	fsr2h,f,c
 13841  0163FE  0EF0               	movlw	-16
 13842  016400  50E3               	movf	plusw1,w,c
 13843  016402  5CDE               	subwf	postinc2,w,c
 13844  016404  0EF1               	movlw	-15
 13845  016406  50E3               	movf	plusw1,w,c
 13846  016408  58DE               	subwfb	postinc2,w,c
 13847  01640A  0EF2               	movlw	-14
 13848  01640C  50E3               	movf	plusw1,w,c
 13849  01640E  58DE               	subwfb	postinc2,w,c
 13850  016410  0EF3               	movlw	-13
 13851  016412  50E3               	movf	plusw1,w,c
 13852  016414  58DE               	subwfb	postinc2,w,c
 13853  016416  0EF4               	movlw	-12
 13854  016418  50E3               	movf	plusw1,w,c
 13855  01641A  58DE               	subwfb	postinc2,w,c
 13856  01641C  0EF5               	movlw	-11
 13857  01641E  50E3               	movf	plusw1,w,c
 13858  016420  58DE               	subwfb	postinc2,w,c
 13859  016422  0EF6               	movlw	-10
 13860  016424  50E3               	movf	plusw1,w,c
 13861  016426  58DE               	subwfb	postinc2,w,c
 13862  016428  50DE               	movf	postinc2,w,c
 13863  01642A  0A80               	xorlw	128
 13864  01642C  6E2A               	movwf	btemp^0,c
 13865  01642E  0EF7               	movlw	-9
 13866  016430  50E3               	movf	plusw1,w,c
 13867  016432  0A80               	xorlw	128
 13868  016434  582A               	subwfb	btemp^0,w,c
 13869  016436  A0D8               	btfss	status,0,c
 13870  016438  D09B               	goto	l16524
 13871                           
 13872                           ;stkvar	_t0 @ sp[(-24)+16]
 13873                           ;stkvar	_t @ sp[(-24)+-8]
 13874  01643A  50E1               	movf	fsr1l,w,c
 13875  01643C  0FE0               	addlw	-32
 13876  01643E  6ED9               	movwf	fsr2l,c
 13877  016440  50E2               	movf	fsr1h,w,c
 13878  016442  6EDA               	movwf	fsr2h,c
 13879  016444  0EFF               	movlw	255
 13880  016446  22DA               	addwfc	fsr2h,f,c
 13881  016448  0EF8               	movlw	-8
 13882  01644A  50E3               	movf	plusw1,w,c
 13883  01644C  5CDE               	subwf	postinc2,w,c
 13884  01644E  0EF9               	movlw	-7
 13885  016450  50E3               	movf	plusw1,w,c
 13886  016452  58DE               	subwfb	postinc2,w,c
 13887  016454  0EFA               	movlw	-6
 13888  016456  50E3               	movf	plusw1,w,c
 13889  016458  58DE               	subwfb	postinc2,w,c
 13890  01645A  0EFB               	movlw	-5
 13891  01645C  50E3               	movf	plusw1,w,c
 13892  01645E  58DE               	subwfb	postinc2,w,c
 13893  016460  0EFC               	movlw	-4
 13894  016462  50E3               	movf	plusw1,w,c
 13895  016464  58DE               	subwfb	postinc2,w,c
 13896  016466  0EFD               	movlw	-3
 13897  016468  50E3               	movf	plusw1,w,c
 13898  01646A  58DE               	subwfb	postinc2,w,c
 13899  01646C  0EFE               	movlw	-2
 13900  01646E  50E3               	movf	plusw1,w,c
 13901  016470  58DE               	subwfb	postinc2,w,c
 13902  016472  50DE               	movf	postinc2,w,c
 13903  016474  0A80               	xorlw	128
 13904  016476  6E2A               	movwf	btemp^0,c
 13905  016478  0EFF               	movlw	-1
 13906  01647A  50E3               	movf	plusw1,w,c
 13907  01647C  0A80               	xorlw	128
 13908  01647E  582A               	subwfb	btemp^0,w,c
 13909  016480  B0D8               	btfsc	status,0,c
 13910  016482  D076               	goto	l16524
 13911  016484                     u16100:
 13912                           
 13913                           ;stkvar	_isdst @ sp[(-24)+-12]
 13914  016484  0EDC               	movlw	-36
 13915  016486  006F FF8F FFD9     	movff	plusw1,fsr2l
 13916  01648C  0EDD               	movlw	-35
 13917  01648E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13918  016494  0E00               	movlw	0
 13919  016496  6EDE               	movwf	postinc2,c
 13920  016498  0E00               	movlw	0
 13921  01649A  6EDD               	movwf	postdec2,c
 13922  01649C  0060  F1C0  F032   	movff	___timezone,btemp+8
 13923  0164A2  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13924  0164A8  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13925  0164AE  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13926  0164B4  1E32               	comf	(btemp+8)^0,f,c
 13927  0164B6  1E33               	comf	(btemp+9)^0,f,c
 13928  0164B8  1E34               	comf	(btemp+10)^0,f,c
 13929  0164BA  1E35               	comf	(btemp+11)^0,f,c
 13930  0164BC  2A32               	incf	(btemp+8)^0,f,c
 13931  0164BE  0E00               	movlw	0
 13932  0164C0  2233               	addwfc	(btemp+9)^0,f,c
 13933  0164C2  2234               	addwfc	(btemp+10)^0,f,c
 13934  0164C4  2235               	addwfc	(btemp+11)^0,f,c
 13935                           
 13936                           ;stkvar	_offset @ sp[(-24)+-14]
 13937  0164C6  0EDA               	movlw	-38
 13938  0164C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13939  0164CE  0EDB               	movlw	-37
 13940  0164D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13941  0164D6  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13942  0164DC  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13943  0164E2  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13944  0164E8  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13945                           
 13946                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13947  0164EE  0ED8               	movlw	-40
 13948  0164F0  006F FF8C  F02A    	movff	plusw1,btemp
 13949  0164F6  0ED9               	movlw	-39
 13950  0164F8  50E3               	movf	plusw1,w,c
 13951  0164FA  102A               	iorwf	btemp^0,w,c
 13952  0164FC  B4D8               	btfsc	status,2,c
 13953  0164FE  D029               	goto	l16520
 13954  016500  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13955  016506  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13956  01650C  1E34               	comf	(btemp+10)^0,f,c
 13957  01650E  1E35               	comf	(btemp+11)^0,f,c
 13958  016510  4A34               	infsnz	(btemp+10)^0,f,c
 13959  016512  2A35               	incf	(btemp+11)^0,f,c
 13960  016514  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13961  01651A  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13962  016520  0E00               	movlw	0
 13963  016522  BE2F               	btfsc	(btemp+5)^0,7,c
 13964  016524  0EFF               	movlw	255
 13965  016526  6E30               	movwf	(btemp+6)^0,c
 13966  016528  6E31               	movwf	(btemp+7)^0,c
 13967                           
 13968                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13969  01652A  0ED8               	movlw	-40
 13970  01652C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13971  016532  0ED9               	movlw	-39
 13972  016534  006F FF8F FFDA     	movff	plusw1,fsr2h
 13973  01653A  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13974  016540  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13975  016546  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13976  01654C  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13977  016552                     l16520:
 13978                           
 13979                           ;stkvar	_zonename @ sp[(-24)+-18]
 13980  016552  0ED6               	movlw	-42
 13981  016554  006F FF8F FFD9     	movff	plusw1,fsr2l
 13982  01655A  0ED7               	movlw	-41
 13983  01655C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13984  016562  0060  F1B3  FFDE   	movff	___tzname,postinc2
 13985  016568  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 13986  01656E  D075               	goto	l4037
 13987  016570                     l16524:
 13988                           
 13989                           ;stkvar	_isdst @ sp[(-24)+-12]
 13990  016570  0EDC               	movlw	-36
 13991  016572  006F FF8F FFD9     	movff	plusw1,fsr2l
 13992  016578  0EDD               	movlw	-35
 13993  01657A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13994  016580  0E01               	movlw	1
 13995  016582  6EDE               	movwf	postinc2,c
 13996  016584  0E00               	movlw	0
 13997  016586  6EDD               	movwf	postdec2,c
 13998  016588  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13999  01658E  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 14000  016594  1E34               	comf	(btemp+10)^0,f,c
 14001  016596  1E35               	comf	(btemp+11)^0,f,c
 14002  016598  4A34               	infsnz	(btemp+10)^0,f,c
 14003  01659A  2A35               	incf	(btemp+11)^0,f,c
 14004  01659C  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14005  0165A2  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14006  0165A8  0E00               	movlw	0
 14007  0165AA  BE2F               	btfsc	(btemp+5)^0,7,c
 14008  0165AC  0EFF               	movlw	255
 14009  0165AE  6E30               	movwf	(btemp+6)^0,c
 14010  0165B0  6E31               	movwf	(btemp+7)^0,c
 14011                           
 14012                           ;stkvar	_offset @ sp[(-24)+-14]
 14013  0165B2  0EDA               	movlw	-38
 14014  0165B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14015  0165BA  0EDB               	movlw	-37
 14016  0165BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14017  0165C2  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 14018  0165C8  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 14019  0165CE  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 14020  0165D4  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 14021                           
 14022                           ;stkvar	_oppoff @ sp[(-24)+-16]
 14023  0165DA  0ED8               	movlw	-40
 14024  0165DC  006F FF8C  F02A    	movff	plusw1,btemp
 14025  0165E2  0ED9               	movlw	-39
 14026  0165E4  50E3               	movf	plusw1,w,c
 14027  0165E6  102A               	iorwf	btemp^0,w,c
 14028  0165E8  B4D8               	btfsc	status,2,c
 14029  0165EA  D029               	goto	l16532
 14030  0165EC  0060  F1C0  F032   	movff	___timezone,btemp+8
 14031  0165F2  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 14032  0165F8  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 14033  0165FE  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 14034  016604  1E32               	comf	(btemp+8)^0,f,c
 14035  016606  1E33               	comf	(btemp+9)^0,f,c
 14036  016608  1E34               	comf	(btemp+10)^0,f,c
 14037  01660A  1E35               	comf	(btemp+11)^0,f,c
 14038  01660C  2A32               	incf	(btemp+8)^0,f,c
 14039  01660E  0E00               	movlw	0
 14040  016610  2233               	addwfc	(btemp+9)^0,f,c
 14041  016612  2234               	addwfc	(btemp+10)^0,f,c
 14042  016614  2235               	addwfc	(btemp+11)^0,f,c
 14043                           
 14044                           ;stkvar	_oppoff @ sp[(-24)+-16]
 14045  016616  0ED8               	movlw	-40
 14046  016618  006F FF8F FFD9     	movff	plusw1,fsr2l
 14047  01661E  0ED9               	movlw	-39
 14048  016620  006F FF8F FFDA     	movff	plusw1,fsr2h
 14049  016626  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 14050  01662C  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 14051  016632  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 14052  016638  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 14053  01663E                     l16532:
 14054                           
 14055                           ;stkvar	_zonename @ sp[(-24)+-18]
 14056  01663E  0ED6               	movlw	-42
 14057  016640  006F FF8F FFD9     	movff	plusw1,fsr2l
 14058  016646  0ED7               	movlw	-41
 14059  016648  006F FF8F FFDA     	movff	plusw1,fsr2h
 14060  01664E  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 14061  016654  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 14062  01665A                     l4037:
 14063                           
 14064                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 14065  01665A  0ED6               	movlw	214
 14066  01665C  26E1               	addwf	fsr1l,f,c
 14067  01665E  0EFF               	movlw	255
 14068  016660  22E2               	addwfc	fsr1h,f,c
 14069  016662  0012               	return		;funcret
 14070  016664                     __end_of___secs_to_zone:
 14071                           	opt callstack 0
 14072                           
 14073 ;; *************** function _scan_trans *****************
 14074 ;; Defined at:
 14075 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14076 ;; Parameters:    Size  Location     Type
 14077 ;;  t               8  [STACK] long long 
 14078 ;;  local           2  [STACK] int 
 14079 ;;  alt             2  [STACK] PTR unsigned int 
 14080 ;;		 -> alt(2), 
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;  x               8    0        unsigned long long 
 14083 ;;  a               2    0        unsigned int 
 14084 ;;  scale           2    0        int 
 14085 ;;  n               2    0        unsigned int 
 14086 ;;  m               2    0        unsigned int 
 14087 ;;  off             2    0        int 
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  2  [STACK] unsigned int 
 14090 ;; Registers used:
 14091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14101 ;;Total ram usage:        0 bytes
 14102 ;; Hardware stack levels used:    1
 14103 ;; Hardware stack levels required when called:   16
 14104 ;; This function calls:
 14105 ;;		_zi_read32
 14106 ;; This function is called by:
 14107 ;;		___secs_to_zone
 14108 ;; This function uses a reentrant model
 14109 ;;
 14110                           
 14111                           	psect	text39
 14112  00233E                     __ptext39:
 14113                           	opt callstack 0
 14114  00233E                     _scan_trans:
 14115                           	opt callstack 11
 14116                           
 14117                           ;stkvar	_alt @ sp[(0)+-12]
 14118                           
 14119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 14120                           ;incstack = 0
 14121  00233E  0EF4               	movlw	-12
 14122  002340  006F FF8C  F02A    	movff	plusw1,btemp
 14123  002346  0EF5               	movlw	-11
 14124  002348  50E3               	movf	plusw1,w,c
 14125  00234A  102A               	iorwf	btemp^0,w,c
 14126  00234C  B4D8               	btfsc	status,2,c
 14127  00234E  D00C               	goto	l12148
 14128                           
 14129                           ;stkvar	_alt @ sp[(0)+-12]
 14130  002350  0EF4               	movlw	-12
 14131  002352  006F FF8F FFD9     	movff	plusw1,fsr2l
 14132  002358  0EF5               	movlw	-11
 14133  00235A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14134  002360  0E00               	movlw	0
 14135  002362  6EDE               	movwf	postinc2,c
 14136  002364  0E00               	movlw	0
 14137  002366  6EDD               	movwf	postdec2,c
 14138  002368                     l12148:
 14139  002368  0E00               	movlw	0
 14140  00236A  6E2A               	movwf	btemp^0,c
 14141  00236C  0E00               	movlw	0
 14142  00236E  6E2B               	movwf	(btemp+1)^0,c
 14143                           
 14144                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 14145  002370  0EF4               	movlw	244
 14146  002372  26E1               	addwf	fsr1l,f,c
 14147  002374  0EFF               	movlw	255
 14148  002376  22E2               	addwfc	fsr1h,f,c
 14149  002378  0012               	return		;funcret
 14150  00237A                     __end_of_scan_trans:
 14151                           	opt callstack 0
 14152                           
 14153 ;; *************** function _zi_read32 *****************
 14154 ;; Defined at:
 14155 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14156 ;; Parameters:    Size  Location     Type
 14157 ;;  z               2  [STACK] PTR const unsigned char 
 14158 ;;		 -> NULL(0), 
 14159 ;; Auto vars:     Size  Location     Type
 14160 ;;		None
 14161 ;; Return value:  Size  Location     Type
 14162 ;;                  4  [STACK] unsigned long 
 14163 ;; Registers used:
 14164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14165 ;; Tracked objects:
 14166 ;;		On entry : 0/0
 14167 ;;		On exit  : 0/0
 14168 ;;		Unchanged: 0/0
 14169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14174 ;;Total ram usage:        0 bytes
 14175 ;; Hardware stack levels used:    1
 14176 ;; Hardware stack levels required when called:   15
 14177 ;; This function calls:
 14178 ;;		Nothing
 14179 ;; This function is called by:
 14180 ;;		_scan_trans
 14181 ;;		___secs_to_zone
 14182 ;; This function uses a reentrant model
 14183 ;;
 14184                           
 14185                           	psect	text40
 14186  01FED4                     __ptext40:
 14187                           	opt callstack 0
 14188  01FED4                     _zi_read32:
 14189                           	opt callstack 12
 14190                           
 14191                           ;stkvar	_z @ sp[(0)+-2]
 14192                           
 14193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14194                           ;incstack = 0
 14195  01FED4  0EFE               	movlw	-2
 14196  01FED6  006F FF8C  F034    	movff	plusw1,btemp+10
 14197  01FEDC  0EFF               	movlw	-1
 14198  01FEDE  006F FF8C  F035    	movff	plusw1,btemp+11
 14199  01FEE4  0E02               	movlw	2
 14200  01FEE6  2434               	addwf	(btemp+10)^0,w,c
 14201  01FEE8  6ED9               	movwf	fsr2l,c
 14202  01FEEA  0E00               	movlw	0
 14203  01FEEC  2035               	addwfc	(btemp+11)^0,w,c
 14204  01FEEE  6EDA               	movwf	fsr2h,c
 14205  01FEF0  50DF               	movf	indf2,w,c
 14206  01FEF2  6E35               	movwf	(btemp+11)^0,c
 14207  01FEF4  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 14208  01FEFA  6A2F               	clrf	(btemp+5)^0,c
 14209  01FEFC  6A30               	clrf	(btemp+6)^0,c
 14210  01FEFE  6A31               	clrf	(btemp+7)^0,c
 14211  01FF00  0060  F0C0  F031   	movff	btemp+6,btemp+7
 14212  01FF06  0060  F0BC  F030   	movff	btemp+5,btemp+6
 14213  01FF0C  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 14214  01FF12  6A2E               	clrf	(btemp+4)^0,c
 14215                           
 14216                           ;stkvar	_z @ sp[(0)+-2]
 14217  01FF14  0EFE               	movlw	-2
 14218  01FF16  006F FF8C  F034    	movff	plusw1,btemp+10
 14219  01FF1C  0EFF               	movlw	-1
 14220  01FF1E  006F FF8C  F035    	movff	plusw1,btemp+11
 14221  01FF24  0E01               	movlw	1
 14222  01FF26  2434               	addwf	(btemp+10)^0,w,c
 14223  01FF28  6ED9               	movwf	fsr2l,c
 14224  01FF2A  0E00               	movlw	0
 14225  01FF2C  2035               	addwfc	(btemp+11)^0,w,c
 14226  01FF2E  6EDA               	movwf	fsr2h,c
 14227  01FF30  50DF               	movf	indf2,w,c
 14228  01FF32  6E35               	movwf	(btemp+11)^0,c
 14229  01FF34  0060  F0D4  F02A   	movff	btemp+11,btemp
 14230  01FF3A  6A2B               	clrf	(btemp+1)^0,c
 14231  01FF3C  6A2C               	clrf	(btemp+2)^0,c
 14232  01FF3E  6A2D               	clrf	(btemp+3)^0,c
 14233  01FF40  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 14234  01FF46  0060  F0A8  F02C   	movff	btemp,btemp+2
 14235  01FF4C  6A2B               	clrf	(btemp+1)^0,c
 14236  01FF4E  6A2A               	clrf	btemp^0,c
 14237                           
 14238                           ;stkvar	_z @ sp[(0)+-2]
 14239  01FF50  0EFE               	movlw	-2
 14240  01FF52  006F FF8F FFD9     	movff	plusw1,fsr2l
 14241  01FF58  0EFF               	movlw	-1
 14242  01FF5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14243  01FF60  50DF               	movf	indf2,w,c
 14244  01FF62  6E32               	movwf	(btemp+8)^0,c
 14245  01FF64  6A33               	clrf	(btemp+9)^0,c
 14246  01FF66  6A34               	clrf	(btemp+10)^0,c
 14247  01FF68  6A35               	clrf	(btemp+11)^0,c
 14248  01FF6A  0060  F0C8  F035   	movff	btemp+8,btemp+11
 14249  01FF70  6A34               	clrf	(btemp+10)^0,c
 14250  01FF72  6A33               	clrf	(btemp+9)^0,c
 14251  01FF74  6A32               	clrf	(btemp+8)^0,c
 14252  01FF76  502A               	movf	btemp^0,w,c
 14253  01FF78  1232               	iorwf	(btemp+8)^0,f,c
 14254  01FF7A  502B               	movf	(btemp+1)^0,w,c
 14255  01FF7C  1233               	iorwf	(btemp+9)^0,f,c
 14256  01FF7E  502C               	movf	(btemp+2)^0,w,c
 14257  01FF80  1234               	iorwf	(btemp+10)^0,f,c
 14258  01FF82  502D               	movf	(btemp+3)^0,w,c
 14259  01FF84  1235               	iorwf	(btemp+11)^0,f,c
 14260  01FF86  502E               	movf	(btemp+4)^0,w,c
 14261  01FF88  1232               	iorwf	(btemp+8)^0,f,c
 14262  01FF8A  502F               	movf	(btemp+5)^0,w,c
 14263  01FF8C  1233               	iorwf	(btemp+9)^0,f,c
 14264  01FF8E  5030               	movf	(btemp+6)^0,w,c
 14265  01FF90  1234               	iorwf	(btemp+10)^0,f,c
 14266  01FF92  5031               	movf	(btemp+7)^0,w,c
 14267  01FF94  1235               	iorwf	(btemp+11)^0,f,c
 14268                           
 14269                           ;stkvar	_z @ sp[(0)+-2]
 14270  01FF96  0EFE               	movlw	-2
 14271  01FF98  006F FF8C  F030    	movff	plusw1,btemp+6
 14272  01FF9E  0EFF               	movlw	-1
 14273  01FFA0  006F FF8C  F031    	movff	plusw1,btemp+7
 14274  01FFA6  0E03               	movlw	3
 14275  01FFA8  2430               	addwf	(btemp+6)^0,w,c
 14276  01FFAA  6ED9               	movwf	fsr2l,c
 14277  01FFAC  0E00               	movlw	0
 14278  01FFAE  2031               	addwfc	(btemp+7)^0,w,c
 14279  01FFB0  6EDA               	movwf	fsr2h,c
 14280  01FFB2  50DF               	movf	indf2,w,c
 14281  01FFB4  1032               	iorwf	(btemp+8)^0,w,c
 14282  01FFB6  6E2A               	movwf	btemp^0,c
 14283  01FFB8  5033               	movf	(btemp+9)^0,w,c
 14284  01FFBA  6E2B               	movwf	(btemp+1)^0,c
 14285  01FFBC  5034               	movf	(btemp+10)^0,w,c
 14286  01FFBE  6E2C               	movwf	(btemp+2)^0,c
 14287  01FFC0  5035               	movf	(btemp+11)^0,w,c
 14288  01FFC2  6E2D               	movwf	(btemp+3)^0,c
 14289                           
 14290                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 14291  01FFC4  52E5               	movf	postdec1,f,c
 14292  01FFC6  52E5               	movf	postdec1,f,c
 14293  01FFC8  0012               	return		;funcret
 14294  01FFCA                     __end_of_zi_read32:
 14295                           	opt callstack 0
 14296                           
 14297 ;; *************** function _rule_to_secs *****************
 14298 ;; Defined at:
 14299 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14300 ;; Parameters:    Size  Location     Type
 14301 ;;  rule            2  [STACK] PTR const int 
 14302 ;;		 -> r1(10), r0(10), 
 14303 ;;  year            2  [STACK] int 
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;  days            2  [STACK] int 
 14306 ;;  wday            2  [STACK] int 
 14307 ;;  t               8  [STACK] long long 
 14308 ;;  is_leap         2  [STACK] int 
 14309 ;;  n               2  [STACK] int 
 14310 ;;  x               2  [STACK] int 
 14311 ;;  m               2  [STACK] int 
 14312 ;;  d               2  [STACK] int 
 14313 ;; Return value:  Size  Location     Type
 14314 ;;                  8  [STACK] long long 
 14315 ;; Registers used:
 14316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 14317 ;; Tracked objects:
 14318 ;;		On entry : 0/0
 14319 ;;		On exit  : 0/0
 14320 ;;		Unchanged: 0/0
 14321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14326 ;;Total ram usage:        0 bytes
 14327 ;; Hardware stack levels used:    1
 14328 ;; Hardware stack levels required when called:   17
 14329 ;; This function calls:
 14330 ;;		___aldiv
 14331 ;;		___aomod
 14332 ;;		___lmul
 14333 ;;		___month_to_secs
 14334 ;;		___year_to_secs
 14335 ;;		_days_in_month
 14336 ;; This function is called by:
 14337 ;;		___secs_to_zone
 14338 ;; This function uses a reentrant model
 14339 ;;
 14340                           
 14341                           	psect	text41
 14342  01764A                     __ptext41:
 14343                           	opt callstack 0
 14344  01764A                     _rule_to_secs:
 14345                           	opt callstack 0
 14346                           
 14347                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 14348  01764A  0E1A               	movlw	26
 14349  01764C  26E1               	addwf	fsr1l,f,c
 14350  01764E  0E00               	movlw	0
 14351  017650  22E2               	addwfc	fsr1h,f,c
 14352                           
 14353                           ;stkvar	_is_leap @ sp[(-22)+12]
 14354                           
 14355                           ;incstack = 0
 14356  017652  0EF6               	movlw	246
 14357  017654  24E1               	addwf	fsr1l,w,c
 14358  017656  6E2A               	movwf	btemp^0,c
 14359  017658  0EFF               	movlw	255
 14360  01765A  20E2               	addwfc	fsr1h,w,c
 14361  01765C  6E2B               	movwf	(btemp+1)^0,c
 14362  01765E  0060  F0AB  FFE6   	movff	btemp,postinc1
 14363  017664  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14364                           
 14365                           ;stkvar	_year @ sp[(-24)+-8]
 14366  01766A  0EE0               	movlw	-32
 14367  01766C  006F FF8C  F03A    	movff	plusw1,btemp+16
 14368  017672  0EE1               	movlw	-31
 14369  017674  006F FF8C  F03B    	movff	plusw1,btemp+17
 14370  01767A  6A3C               	clrf	(btemp+18)^0,c
 14371  01767C  BE3B               	btfsc	(btemp+17)^0,7,c
 14372  01767E  683C               	setf	(btemp+18)^0,c
 14373  017680  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 14374  017686  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 14375  01768C  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 14376  017692  0060  F0F0  F040   	movff	btemp+18,btemp+22
 14377  017698  0060  F0F0  F041   	movff	btemp+18,btemp+23
 14378  01769E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14379  0176A4  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14380  0176AA  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14381  0176B0  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14382  0176B6  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14383  0176BC  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14384  0176C2  0060  F103  FFE6   	movff	btemp+22,postinc1
 14385  0176C8  0060  F107  FFE6   	movff	btemp+23,postinc1
 14386  0176CE  EC28  F0AA         	call	___year_to_secs	;wreg free
 14387  0176D2  52E5               	movf	postdec1,f,c
 14388  0176D4  006F FF9C  F041    	movff	indf1,btemp+23
 14389  0176DA  52E5               	movf	postdec1,f,c
 14390  0176DC  006F FF9C  F040    	movff	indf1,btemp+22
 14391  0176E2  52E5               	movf	postdec1,f,c
 14392  0176E4  006F FF9C  F03F    	movff	indf1,btemp+21
 14393  0176EA  52E5               	movf	postdec1,f,c
 14394  0176EC  006F FF9C  F03E    	movff	indf1,btemp+20
 14395  0176F2  52E5               	movf	postdec1,f,c
 14396  0176F4  006F FF9C  F03D    	movff	indf1,btemp+19
 14397  0176FA  52E5               	movf	postdec1,f,c
 14398  0176FC  006F FF9C  F03C    	movff	indf1,btemp+18
 14399  017702  52E5               	movf	postdec1,f,c
 14400  017704  006F FF9C  F03B    	movff	indf1,btemp+17
 14401  01770A  52E5               	movf	postdec1,f,c
 14402  01770C  006F FF9C  F03A    	movff	indf1,btemp+16
 14403  017712  52E5               	movf	postdec1,f,c
 14404  017714  52E5               	movf	postdec1,f,c
 14405                           
 14406                           ;stkvar	_t @ sp[(-22)+4]
 14407  017716  0EEE               	movlw	-18
 14408  017718  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 14409  01771E  0EEF               	movlw	-17
 14410  017720  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 14411  017726  0EF0               	movlw	-16
 14412  017728  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 14413  01772E  0EF1               	movlw	-15
 14414  017730  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 14415  017736  0EF2               	movlw	-14
 14416  017738  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 14417  01773E  0EF3               	movlw	-13
 14418  017740  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 14419  017746  0EF4               	movlw	-12
 14420  017748  0060  F103  FFE3   	movff	btemp+22,plusw1
 14421  01774E  0EF5               	movlw	-11
 14422  017750  0060  F107  FFE3   	movff	btemp+23,plusw1
 14423                           
 14424                           ;stkvar	_rule @ sp[(-22)+-6]
 14425  017756  0EE4               	movlw	-28
 14426  017758  006F FF8F FFD9     	movff	plusw1,fsr2l
 14427  01775E  0EE5               	movlw	-27
 14428  017760  006F FF8F FFDA     	movff	plusw1,fsr2h
 14429  017766  0E4D               	movlw	77
 14430  017768  18DE               	xorwf	postinc2,w,c
 14431  01776A  10DE               	iorwf	postinc2,w,c
 14432  01776C  B4D8               	btfsc	status,2,c
 14433  01776E  D074               	goto	l16394
 14434                           
 14435                           ;stkvar	_rule @ sp[(-22)+-6]
 14436  017770  0EE4               	movlw	-28
 14437  017772  006F FF8C  F034    	movff	plusw1,btemp+10
 14438  017778  0EE5               	movlw	-27
 14439  01777A  006F FF8C  F035    	movff	plusw1,btemp+11
 14440  017780  0E02               	movlw	2
 14441  017782  2434               	addwf	(btemp+10)^0,w,c
 14442  017784  6ED9               	movwf	fsr2l,c
 14443  017786  0E00               	movlw	0
 14444  017788  2035               	addwfc	(btemp+11)^0,w,c
 14445  01778A  6EDA               	movwf	fsr2h,c
 14446  01778C  006F FF78  F034    	movff	postinc2,btemp+10
 14447  017792  006F FF74  F035    	movff	postdec2,btemp+11
 14448                           
 14449                           ;stkvar	_x @ sp[(-22)+16]
 14450  017798  0EFA               	movlw	-6
 14451  01779A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14452  0177A0  0EFB               	movlw	-5
 14453  0177A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14454                           
 14455                           ;stkvar	_rule @ sp[(-22)+-6]
 14456  0177A8  0EE4               	movlw	-28
 14457  0177AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14458  0177B0  0EE5               	movlw	-27
 14459  0177B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14460  0177B8  0E4A               	movlw	74
 14461  0177BA  18DE               	xorwf	postinc2,w,c
 14462  0177BC  10DE               	iorwf	postinc2,w,c
 14463  0177BE  A4D8               	btfss	status,2,c
 14464  0177C0  D021               	goto	l16392
 14465                           
 14466                           ;stkvar	_x @ sp[(-22)+16]
 14467  0177C2  0EFB               	movlw	-5
 14468  0177C4  BEE3               	btfsc	plusw1,7,c
 14469  0177C6  D014               	goto	u15950
 14470  0177C8  0EFB               	movlw	-5
 14471  0177CA  50E3               	movf	plusw1,w,c
 14472  0177CC  E108               	bnz	u15940
 14473  0177CE  0EFA               	movlw	-6
 14474  0177D0  006F FF8C  F02A    	movff	plusw1,btemp
 14475  0177D6  0E3C               	movlw	60
 14476  0177D8  5E2A               	subwf	btemp^0,f,c
 14477  0177DA  A0D8               	btfss	status,0,c
 14478  0177DC  D009               	goto	u15950
 14479  0177DE                     u15940:
 14480                           
 14481                           ;stkvar	_is_leap @ sp[(-22)+12]
 14482  0177DE  0EF6               	movlw	-10
 14483  0177E0  006F FF8C  F02A    	movff	plusw1,btemp
 14484  0177E6  0EF7               	movlw	-9
 14485  0177E8  50E3               	movf	plusw1,w,c
 14486  0177EA  102A               	iorwf	btemp^0,w,c
 14487  0177EC  A4D8               	btfss	status,2,c
 14488  0177EE  D00A               	goto	l16392
 14489  0177F0                     u15950:
 14490                           
 14491                           ;stkvar	_x @ sp[(-22)+16]
 14492  0177F0  50E1               	movf	fsr1l,w,c
 14493  0177F2  0FFA               	addlw	-6
 14494  0177F4  6ED9               	movwf	fsr2l,c
 14495  0177F6  50E2               	movf	fsr1h,w,c
 14496  0177F8  6EDA               	movwf	fsr2h,c
 14497  0177FA  0EFF               	movlw	255
 14498  0177FC  22DA               	addwfc	fsr2h,f,c
 14499  0177FE  06DE               	decf	postinc2,f,c
 14500  017800  0E00               	movlw	0
 14501  017802  5ADD               	subwfb	postdec2,f,c
 14502  017804                     l16392:
 14503  017804  0E80               	movlw	128
 14504  017806  6EE6               	movwf	postinc1,c
 14505  017808  0E51               	movlw	81
 14506  01780A  6EE6               	movwf	postinc1,c
 14507  01780C  0E01               	movlw	1
 14508  01780E  6EE6               	movwf	postinc1,c
 14509  017810  0E00               	movlw	0
 14510  017812  6EE6               	movwf	postinc1,c
 14511                           
 14512                           ;stkvar	_x @ sp[(-26)+16]
 14513  017814  0EF6               	movlw	-10
 14514  017816  006F FF8C  F034    	movff	plusw1,btemp+10
 14515  01781C  0EF7               	movlw	-9
 14516  01781E  006F FF8C  F035    	movff	plusw1,btemp+11
 14517  017824  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14518  01782A  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14519  017830  0E00               	movlw	0
 14520  017832  BE2F               	btfsc	(btemp+5)^0,7,c
 14521  017834  0EFF               	movlw	255
 14522  017836  6E30               	movwf	(btemp+6)^0,c
 14523  017838  6E31               	movwf	(btemp+7)^0,c
 14524  01783A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14525  017840  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14526  017846  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14527  01784C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14528  017852  ECAC  F002         	call	___lmul	;wreg free
 14529  017856  D1EC               	goto	L10
 14530  017858                     l16394:
 14531                           
 14532                           ;stkvar	_rule @ sp[(-22)+-6]
 14533  017858  0EE4               	movlw	-28
 14534  01785A  006F FF8C  F034    	movff	plusw1,btemp+10
 14535  017860  0EE5               	movlw	-27
 14536  017862  006F FF8C  F035    	movff	plusw1,btemp+11
 14537  017868  0E02               	movlw	2
 14538  01786A  2434               	addwf	(btemp+10)^0,w,c
 14539  01786C  6ED9               	movwf	fsr2l,c
 14540  01786E  0E00               	movlw	0
 14541  017870  2035               	addwfc	(btemp+11)^0,w,c
 14542  017872  6EDA               	movwf	fsr2h,c
 14543  017874  006F FF78  F034    	movff	postinc2,btemp+10
 14544  01787A  006F FF74  F035    	movff	postdec2,btemp+11
 14545                           
 14546                           ;stkvar	_m @ sp[(-22)+18]
 14547  017880  0EFC               	movlw	-4
 14548  017882  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14549  017888  0EFD               	movlw	-3
 14550  01788A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14551                           
 14552                           ;stkvar	_rule @ sp[(-22)+-6]
 14553  017890  0EE4               	movlw	-28
 14554  017892  006F FF8C  F034    	movff	plusw1,btemp+10
 14555  017898  0EE5               	movlw	-27
 14556  01789A  006F FF8C  F035    	movff	plusw1,btemp+11
 14557  0178A0  0E04               	movlw	4
 14558  0178A2  2434               	addwf	(btemp+10)^0,w,c
 14559  0178A4  6ED9               	movwf	fsr2l,c
 14560  0178A6  0E00               	movlw	0
 14561  0178A8  2035               	addwfc	(btemp+11)^0,w,c
 14562  0178AA  6EDA               	movwf	fsr2h,c
 14563  0178AC  006F FF78  F034    	movff	postinc2,btemp+10
 14564  0178B2  006F FF74  F035    	movff	postdec2,btemp+11
 14565                           
 14566                           ;stkvar	_n @ sp[(-22)+14]
 14567  0178B8  0EF8               	movlw	-8
 14568  0178BA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14569  0178C0  0EF9               	movlw	-7
 14570  0178C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14571                           
 14572                           ;stkvar	_rule @ sp[(-22)+-6]
 14573  0178C8  0EE4               	movlw	-28
 14574  0178CA  006F FF8C  F034    	movff	plusw1,btemp+10
 14575  0178D0  0EE5               	movlw	-27
 14576  0178D2  006F FF8C  F035    	movff	plusw1,btemp+11
 14577  0178D8  0E06               	movlw	6
 14578  0178DA  2434               	addwf	(btemp+10)^0,w,c
 14579  0178DC  6ED9               	movwf	fsr2l,c
 14580  0178DE  0E00               	movlw	0
 14581  0178E0  2035               	addwfc	(btemp+11)^0,w,c
 14582  0178E2  6EDA               	movwf	fsr2h,c
 14583  0178E4  006F FF78  F034    	movff	postinc2,btemp+10
 14584  0178EA  006F FF74  F035    	movff	postdec2,btemp+11
 14585                           
 14586                           ;stkvar	_d @ sp[(-22)+20]
 14587  0178F0  0EFE               	movlw	-2
 14588  0178F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14589  0178F8  0EFF               	movlw	-1
 14590  0178FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14591                           
 14592                           ;stkvar	_is_leap @ sp[(-22)+12]
 14593  017900  0EF6               	movlw	-10
 14594  017902  006F FF8F FFE6     	movff	plusw1,postinc1
 14595  017908  006F FF8F FFE6     	movff	plusw1,postinc1
 14596                           
 14597                           ;stkvar	_m @ sp[(-24)+18]
 14598  01790E  0EFA               	movlw	-6
 14599  017910  50E3               	movf	plusw1,w,c
 14600  017912  0FFF               	addlw	255
 14601  017914  6E34               	movwf	(btemp+10)^0,c
 14602  017916  0EFB               	movlw	-5
 14603  017918  006F FF8C  F035    	movff	plusw1,btemp+11
 14604  01791E  0EFF               	movlw	255
 14605  017920  2235               	addwfc	(btemp+11)^0,f,c
 14606  017922  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 14607  017928  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 14608  01792E  EC4F  F001         	call	___month_to_secs	;wreg free
 14609  017932  0060  F0A8  F03A   	movff	btemp,btemp+16
 14610  017938  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14611  01793E  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14612  017944  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14613  01794A  6A3E               	clrf	(btemp+20)^0,c
 14614  01794C  BE3D               	btfsc	(btemp+19)^0,7,c
 14615  01794E  683E               	setf	(btemp+20)^0,c
 14616  017950  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14617  017956  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14618  01795C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14619                           
 14620                           ;stkvar	_t @ sp[(-22)+4]
 14621  017962  50E1               	movf	fsr1l,w,c
 14622  017964  0FEE               	addlw	-18
 14623  017966  6ED9               	movwf	fsr2l,c
 14624  017968  50E2               	movf	fsr1h,w,c
 14625  01796A  6EDA               	movwf	fsr2h,c
 14626  01796C  0EFF               	movlw	255
 14627  01796E  22DA               	addwfc	fsr2h,f,c
 14628  017970  503A               	movf	(btemp+16)^0,w,c
 14629  017972  26DE               	addwf	postinc2,f,c
 14630  017974  503B               	movf	(btemp+17)^0,w,c
 14631  017976  22DE               	addwfc	postinc2,f,c
 14632  017978  503C               	movf	(btemp+18)^0,w,c
 14633  01797A  22DE               	addwfc	postinc2,f,c
 14634  01797C  503D               	movf	(btemp+19)^0,w,c
 14635  01797E  22DE               	addwfc	postinc2,f,c
 14636  017980  503E               	movf	(btemp+20)^0,w,c
 14637  017982  22DE               	addwfc	postinc2,f,c
 14638  017984  503F               	movf	(btemp+21)^0,w,c
 14639  017986  22DE               	addwfc	postinc2,f,c
 14640  017988  5040               	movf	(btemp+22)^0,w,c
 14641  01798A  22DE               	addwfc	postinc2,f,c
 14642  01798C  5041               	movf	(btemp+23)^0,w,c
 14643  01798E  22DE               	addwfc	postinc2,f,c
 14644  017990  0E80               	movlw	128
 14645  017992  6EE6               	movwf	postinc1,c
 14646  017994  0E51               	movlw	81
 14647  017996  6EE6               	movwf	postinc1,c
 14648  017998  0E01               	movlw	1
 14649  01799A  6EE6               	movwf	postinc1,c
 14650  01799C  0E00               	movlw	0
 14651  01799E  6EE6               	movwf	postinc1,c
 14652  0179A0  0E80               	movlw	128
 14653  0179A2  6EE6               	movwf	postinc1,c
 14654  0179A4  0E3A               	movlw	58
 14655  0179A6  6EE6               	movwf	postinc1,c
 14656  0179A8  0E09               	movlw	9
 14657  0179AA  6EE6               	movwf	postinc1,c
 14658  0179AC  0E00               	movlw	0
 14659  0179AE  6EE6               	movwf	postinc1,c
 14660  0179B0  0E00               	movlw	0
 14661  0179B2  6EE6               	movwf	postinc1,c
 14662  0179B4  0E00               	movlw	0
 14663  0179B6  6EE6               	movwf	postinc1,c
 14664  0179B8  0E00               	movlw	0
 14665  0179BA  6EE6               	movwf	postinc1,c
 14666  0179BC  0E00               	movlw	0
 14667  0179BE  6EE6               	movwf	postinc1,c
 14668                           
 14669                           ;stkvar	_t @ sp[(-34)+4]
 14670  0179C0  0EE2               	movlw	-30
 14671  0179C2  50E3               	movf	plusw1,w,c
 14672  0179C4  0F00               	addlw	0
 14673  0179C6  6E3A               	movwf	(btemp+16)^0,c
 14674  0179C8  0EE3               	movlw	-29
 14675  0179CA  006F FF8C  F03B    	movff	plusw1,btemp+17
 14676  0179D0  0E46               	movlw	70
 14677  0179D2  223B               	addwfc	(btemp+17)^0,f,c
 14678  0179D4  0EE4               	movlw	-28
 14679  0179D6  006F FF8C  F03C    	movff	plusw1,btemp+18
 14680  0179DC  0E05               	movlw	5
 14681  0179DE  223C               	addwfc	(btemp+18)^0,f,c
 14682  0179E0  0EE5               	movlw	-27
 14683  0179E2  006F FF8C  F03D    	movff	plusw1,btemp+19
 14684  0179E8  0E00               	movlw	0
 14685  0179EA  223D               	addwfc	(btemp+19)^0,f,c
 14686  0179EC  0EE6               	movlw	-26
 14687  0179EE  006F FF8C  F03E    	movff	plusw1,btemp+20
 14688  0179F4  0E00               	movlw	0
 14689  0179F6  223E               	addwfc	(btemp+20)^0,f,c
 14690  0179F8  0EE7               	movlw	-25
 14691  0179FA  006F FF8C  F03F    	movff	plusw1,btemp+21
 14692  017A00  0E00               	movlw	0
 14693  017A02  223F               	addwfc	(btemp+21)^0,f,c
 14694  017A04  0EE8               	movlw	-24
 14695  017A06  006F FF8C  F040    	movff	plusw1,btemp+22
 14696  017A0C  0E00               	movlw	0
 14697  017A0E  2240               	addwfc	(btemp+22)^0,f,c
 14698  017A10  0EE9               	movlw	-23
 14699  017A12  006F FF8C  F041    	movff	plusw1,btemp+23
 14700  017A18  0E00               	movlw	0
 14701  017A1A  2241               	addwfc	(btemp+23)^0,f,c
 14702  017A1C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14703  017A22  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14704  017A28  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14705  017A2E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14706  017A34  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14707  017A3A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14708  017A40  0060  F103  FFE6   	movff	btemp+22,postinc1
 14709  017A46  0060  F107  FFE6   	movff	btemp+23,postinc1
 14710  017A4C  EC3C  F0E7         	call	___aomod	;wreg free
 14711  017A50  52E5               	movf	postdec1,f,c
 14712  017A52  006F FF9C  F041    	movff	indf1,btemp+23
 14713  017A58  52E5               	movf	postdec1,f,c
 14714  017A5A  006F FF9C  F040    	movff	indf1,btemp+22
 14715  017A60  52E5               	movf	postdec1,f,c
 14716  017A62  006F FF9C  F03F    	movff	indf1,btemp+21
 14717  017A68  52E5               	movf	postdec1,f,c
 14718  017A6A  006F FF9C  F03E    	movff	indf1,btemp+20
 14719  017A70  52E5               	movf	postdec1,f,c
 14720  017A72  006F FF9C  F03D    	movff	indf1,btemp+19
 14721  017A78  52E5               	movf	postdec1,f,c
 14722  017A7A  006F FF9C  F03C    	movff	indf1,btemp+18
 14723  017A80  52E5               	movf	postdec1,f,c
 14724  017A82  006F FF9C  F03B    	movff	indf1,btemp+17
 14725  017A88  52E5               	movf	postdec1,f,c
 14726  017A8A  006F FF9C  F03A    	movff	indf1,btemp+16
 14727  017A90  0EF8               	movlw	248
 14728  017A92  26E1               	addwf	fsr1l,f,c
 14729  017A94  0EFF               	movlw	255
 14730  017A96  22E2               	addwfc	fsr1h,f,c
 14731  017A98  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14732  017A9E  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14733  017AA4  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14734  017AAA  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14735  017AB0  0E00               	movlw	0
 14736  017AB2  BE2F               	btfsc	(btemp+5)^0,7,c
 14737  017AB4  0EFF               	movlw	255
 14738  017AB6  6E30               	movwf	(btemp+6)^0,c
 14739  017AB8  6E31               	movwf	(btemp+7)^0,c
 14740  017ABA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14741  017AC0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14742  017AC6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14743  017ACC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14744  017AD2  ECFC  F0F0         	call	___aldiv	;wreg free
 14745  017AD6  0060  F0A8  F034   	movff	btemp,btemp+10
 14746  017ADC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 14747                           
 14748                           ;stkvar	_wday @ sp[(-22)+2]
 14749  017AE2  0EEC               	movlw	-20
 14750  017AE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14751  017AEA  0EED               	movlw	-19
 14752  017AEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14753                           
 14754                           ;stkvar	_wday @ sp[(-22)+2]
 14755                           ;stkvar	_d @ sp[(-22)+20]
 14756  017AF2  0EFE               	movlw	-2
 14757  017AF4  006F FF8C  F034    	movff	plusw1,btemp+10
 14758  017AFA  0EFF               	movlw	-1
 14759  017AFC  006F FF8C  F035    	movff	plusw1,btemp+11
 14760  017B02  0EEC               	movlw	-20
 14761  017B04  50E3               	movf	plusw1,w,c
 14762  017B06  5E34               	subwf	(btemp+10)^0,f,c
 14763  017B08  0EED               	movlw	-19
 14764  017B0A  50E3               	movf	plusw1,w,c
 14765  017B0C  5A35               	subwfb	(btemp+11)^0,f,c
 14766                           
 14767                           ;stkvar	_days @ sp[(-22)+0]
 14768  017B0E  0EEA               	movlw	-22
 14769  017B10  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14770  017B16  0EEB               	movlw	-21
 14771  017B18  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14772                           
 14773                           ;stkvar	_days @ sp[(-22)+0]
 14774  017B1E  0EEB               	movlw	-21
 14775  017B20  AEE3               	btfss	plusw1,7,c
 14776  017B22  D011               	goto	l4029
 14777                           
 14778                           ;stkvar	_days @ sp[(-22)+0]
 14779  017B24  0EEA               	movlw	-22
 14780  017B26  50E3               	movf	plusw1,w,c
 14781  017B28  0F07               	addlw	7
 14782  017B2A  6E2A               	movwf	btemp^0,c
 14783  017B2C  0EEA               	movlw	-22
 14784  017B2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 14785  017B34  6A2A               	clrf	btemp^0,c
 14786  017B36  0EEB               	movlw	-21
 14787  017B38  50E3               	movf	plusw1,w,c
 14788  017B3A  202A               	addwfc	btemp^0,w,c
 14789  017B3C  6E2A               	movwf	btemp^0,c
 14790  017B3E  0EEB               	movlw	-21
 14791  017B40  0060  F0AB  FFE3   	movff	btemp,plusw1
 14792  017B46                     l4029:
 14793                           
 14794                           ;stkvar	_n @ sp[(-22)+14]
 14795  017B46  0EF8               	movlw	-8
 14796  017B48  006F FF8C  F02A    	movff	plusw1,btemp
 14797  017B4E  0E05               	movlw	5
 14798  017B50  182A               	xorwf	btemp^0,w,c
 14799  017B52  E134               	bnz	l16410
 14800  017B54  0EF9               	movlw	-7
 14801  017B56  50E3               	movf	plusw1,w,c
 14802  017B58  A4D8               	btfss	status,2,c
 14803  017B5A  D030               	goto	l16410
 14804                           
 14805                           ;stkvar	_is_leap @ sp[(-22)+12]
 14806  017B5C  0EF6               	movlw	-10
 14807  017B5E  006F FF8F FFE6     	movff	plusw1,postinc1
 14808  017B64  006F FF8F FFE6     	movff	plusw1,postinc1
 14809                           
 14810                           ;stkvar	_m @ sp[(-24)+18]
 14811  017B6A  0EFA               	movlw	-6
 14812  017B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 14813  017B72  006F FF8F FFE6     	movff	plusw1,postinc1
 14814  017B78  EC2D  F00D         	call	_days_in_month	;wreg free
 14815                           
 14816                           ;stkvar	_days @ sp[(-22)+0]
 14817  017B7C  0EEA               	movlw	-22
 14818  017B7E  50E3               	movf	plusw1,w,c
 14819  017B80  0F1C               	addlw	28
 14820  017B82  6E34               	movwf	(btemp+10)^0,c
 14821  017B84  0EEB               	movlw	-21
 14822  017B86  006F FF8C  F035    	movff	plusw1,btemp+11
 14823  017B8C  0E00               	movlw	0
 14824  017B8E  2235               	addwfc	(btemp+11)^0,f,c
 14825  017B90  502A               	movf	btemp^0,w,c
 14826  017B92  5C34               	subwf	(btemp+10)^0,w,c
 14827  017B94  5035               	movf	(btemp+11)^0,w,c
 14828  017B96  0A80               	xorlw	128
 14829  017B98  6E2C               	movwf	(btemp+2)^0,c
 14830  017B9A  502B               	movf	(btemp+1)^0,w,c
 14831  017B9C  0A80               	xorlw	128
 14832  017B9E  582C               	subwfb	(btemp+2)^0,w,c
 14833  017BA0  A0D8               	btfss	status,0,c
 14834  017BA2  D00C               	goto	l16410
 14835  017BA4  0E04               	movlw	4
 14836  017BA6  6E34               	movwf	(btemp+10)^0,c
 14837  017BA8  0E00               	movlw	0
 14838  017BAA  6E35               	movwf	(btemp+11)^0,c
 14839                           
 14840                           ;stkvar	_n @ sp[(-22)+14]
 14841  017BAC  0EF8               	movlw	-8
 14842  017BAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14843  017BB4  0EF9               	movlw	-7
 14844  017BB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14845  017BBC                     l16410:
 14846  017BBC  0E80               	movlw	128
 14847  017BBE  6EE6               	movwf	postinc1,c
 14848  017BC0  0E51               	movlw	81
 14849  017BC2  6EE6               	movwf	postinc1,c
 14850  017BC4  0E01               	movlw	1
 14851  017BC6  6EE6               	movwf	postinc1,c
 14852  017BC8  0E00               	movlw	0
 14853  017BCA  6EE6               	movwf	postinc1,c
 14854                           
 14855                           ;stkvar	_days @ sp[(-26)+0]
 14856                           ;stkvar	_n @ sp[(-26)+14]
 14857  017BCC  0EF4               	movlw	-12
 14858  017BCE  006F FF8C  F034    	movff	plusw1,btemp+10
 14859  017BD4  0EF5               	movlw	-11
 14860  017BD6  006F FF8C  F035    	movff	plusw1,btemp+11
 14861  017BDC  0E07               	movlw	7
 14862  017BDE  0234               	mulwf	(btemp+10)^0,c
 14863  017BE0  006F FFCC  F032    	movff	prodl,btemp+8
 14864  017BE6  006F FFD0  F033    	movff	prodh,btemp+9
 14865  017BEC  0235               	mulwf	(btemp+11)^0,c
 14866  017BEE  50F3               	movf	prodl,w,c
 14867  017BF0  2633               	addwf	(btemp+9)^0,f,c
 14868  017BF2  0EE6               	movlw	-26
 14869  017BF4  50E3               	movf	plusw1,w,c
 14870  017BF6  2632               	addwf	(btemp+8)^0,f,c
 14871  017BF8  0EE7               	movlw	-25
 14872  017BFA  50E3               	movf	plusw1,w,c
 14873  017BFC  2233               	addwfc	(btemp+9)^0,f,c
 14874  017BFE  0EF9               	movlw	249
 14875  017C00  2432               	addwf	(btemp+8)^0,w,c
 14876  017C02  6E2E               	movwf	(btemp+4)^0,c
 14877  017C04  0EFF               	movlw	255
 14878  017C06  2033               	addwfc	(btemp+9)^0,w,c
 14879  017C08  6E2F               	movwf	(btemp+5)^0,c
 14880  017C0A  6A30               	clrf	(btemp+6)^0,c
 14881  017C0C  BE2F               	btfsc	(btemp+5)^0,7,c
 14882  017C0E  0630               	decf	(btemp+6)^0,f,c
 14883  017C10  5030               	movf	(btemp+6)^0,w,c
 14884  017C12  6E31               	movwf	(btemp+7)^0,c
 14885  017C14  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14886  017C1A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14887  017C20  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14888  017C26  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14889  017C2C  ECAC  F002         	call	___lmul	;wreg free
 14890  017C30                     L10:
 14891  017C30  0060  F0A8  F03A   	movff	btemp,btemp+16
 14892  017C36  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14893  017C3C  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14894  017C42  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14895  017C48  6A3E               	clrf	(btemp+20)^0,c
 14896  017C4A  BE3D               	btfsc	(btemp+19)^0,7,c
 14897  017C4C  683E               	setf	(btemp+20)^0,c
 14898  017C4E  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14899  017C54  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14900  017C5A  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14901                           
 14902                           ;stkvar	_t @ sp[(-22)+4]
 14903  017C60  50E1               	movf	fsr1l,w,c
 14904  017C62  0FEE               	addlw	-18
 14905  017C64  6ED9               	movwf	fsr2l,c
 14906  017C66  50E2               	movf	fsr1h,w,c
 14907  017C68  6EDA               	movwf	fsr2h,c
 14908  017C6A  0EFF               	movlw	255
 14909  017C6C  22DA               	addwfc	fsr2h,f,c
 14910  017C6E  503A               	movf	(btemp+16)^0,w,c
 14911  017C70  26DE               	addwf	postinc2,f,c
 14912  017C72  503B               	movf	(btemp+17)^0,w,c
 14913  017C74  22DE               	addwfc	postinc2,f,c
 14914  017C76  503C               	movf	(btemp+18)^0,w,c
 14915  017C78  22DE               	addwfc	postinc2,f,c
 14916  017C7A  503D               	movf	(btemp+19)^0,w,c
 14917  017C7C  22DE               	addwfc	postinc2,f,c
 14918  017C7E  503E               	movf	(btemp+20)^0,w,c
 14919  017C80  22DE               	addwfc	postinc2,f,c
 14920  017C82  503F               	movf	(btemp+21)^0,w,c
 14921  017C84  22DE               	addwfc	postinc2,f,c
 14922  017C86  5040               	movf	(btemp+22)^0,w,c
 14923  017C88  22DE               	addwfc	postinc2,f,c
 14924  017C8A  5041               	movf	(btemp+23)^0,w,c
 14925  017C8C  22DE               	addwfc	postinc2,f,c
 14926                           
 14927                           ;stkvar	_rule @ sp[(-22)+-6]
 14928  017C8E  0EE4               	movlw	-28
 14929  017C90  006F FF8C  F034    	movff	plusw1,btemp+10
 14930  017C96  0EE5               	movlw	-27
 14931  017C98  006F FF8C  F035    	movff	plusw1,btemp+11
 14932  017C9E  0E08               	movlw	8
 14933  017CA0  2434               	addwf	(btemp+10)^0,w,c
 14934  017CA2  6ED9               	movwf	fsr2l,c
 14935  017CA4  0E00               	movlw	0
 14936  017CA6  2035               	addwfc	(btemp+11)^0,w,c
 14937  017CA8  6EDA               	movwf	fsr2h,c
 14938  017CAA  006F FF78  F034    	movff	postinc2,btemp+10
 14939  017CB0  006F FF74  F035    	movff	postdec2,btemp+11
 14940                           
 14941                           ;stkvar	_t @ sp[(-22)+4]
 14942  017CB6  50E1               	movf	fsr1l,w,c
 14943  017CB8  0FEE               	addlw	-18
 14944  017CBA  6ED9               	movwf	fsr2l,c
 14945  017CBC  50E2               	movf	fsr1h,w,c
 14946  017CBE  6EDA               	movwf	fsr2h,c
 14947  017CC0  0EFF               	movlw	255
 14948  017CC2  22DA               	addwfc	fsr2h,f,c
 14949  017CC4  5034               	movf	(btemp+10)^0,w,c
 14950  017CC6  26DE               	addwf	postinc2,f,c
 14951  017CC8  5035               	movf	(btemp+11)^0,w,c
 14952  017CCA  22DE               	addwfc	postinc2,f,c
 14953  017CCC  0E00               	movlw	0
 14954  017CCE  BE35               	btfsc	(btemp+11)^0,7,c
 14955  017CD0  0EFF               	movlw	255
 14956  017CD2  22DE               	addwfc	postinc2,f,c
 14957  017CD4  22DE               	addwfc	postinc2,f,c
 14958  017CD6  22DE               	addwfc	postinc2,f,c
 14959  017CD8  22DE               	addwfc	postinc2,f,c
 14960  017CDA  22DE               	addwfc	postinc2,f,c
 14961  017CDC  22DE               	addwfc	postinc2,f,c
 14962                           
 14963                           ;stkvar	_t @ sp[(-22)+4]
 14964  017CDE  0EEE               	movlw	238
 14965  017CE0  24E1               	addwf	fsr1l,w,c
 14966  017CE2  6ED9               	movwf	fsr2l,c
 14967  017CE4  0EFF               	movlw	255
 14968  017CE6  20E2               	addwfc	fsr1h,w,c
 14969  017CE8  6EDA               	movwf	fsr2h,c
 14970                           
 14971                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 14972  017CEA  0E08               	movlw	8
 14973  017CEC  6E2A               	movwf	btemp^0,c
 14974  017CEE  0EE2               	movlw	-30
 14975  017CF0                     us1599999:
 14976  017CF0  006F FF7B FFE3     	movff	postinc2,plusw1
 14977  017CF6  28E8               	incf	wreg,w,c
 14978  017CF8  2E2A               	decfsz	btemp^0,f,c
 14979  017CFA  D7FA               	bra	us1599999
 14980                           
 14981                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 14982  017CFC  0EEA               	movlw	234
 14983  017CFE  26E1               	addwf	fsr1l,f,c
 14984  017D00  0EFF               	movlw	255
 14985  017D02  22E2               	addwfc	fsr1h,f,c
 14986  017D04  0012               	return		;funcret
 14987  017D06                     __end_of_rule_to_secs:
 14988                           	opt callstack 0
 14989                           
 14990 ;; *************** function _days_in_month *****************
 14991 ;; Defined at:
 14992 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;  m               2  [STACK] int 
 14995 ;;  is_leap         2  [STACK] int 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;		None
 14998 ;; Return value:  Size  Location     Type
 14999 ;;                  2  [STACK] int 
 15000 ;; Registers used:
 15001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 15002 ;; Tracked objects:
 15003 ;;		On entry : 0/0
 15004 ;;		On exit  : 0/0
 15005 ;;		Unchanged: 0/0
 15006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15011 ;;Total ram usage:        0 bytes
 15012 ;; Hardware stack levels used:    1
 15013 ;; Hardware stack levels required when called:   15
 15014 ;; This function calls:
 15015 ;;		Nothing
 15016 ;; This function is called by:
 15017 ;;		_rule_to_secs
 15018 ;; This function uses a reentrant model
 15019 ;;
 15020                           
 15021                           	psect	text42
 15022  001A5A                     __ptext42:
 15023                           	opt callstack 0
 15024  001A5A                     _days_in_month:
 15025                           	opt callstack 11
 15026                           
 15027                           ;stkvar	_m @ sp[(0)+-2]
 15028                           
 15029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15030                           ;incstack = 0
 15031  001A5A  0EFE               	movlw	-2
 15032  001A5C  006F FF8C  F02A    	movff	plusw1,btemp
 15033  001A62  0E02               	movlw	2
 15034  001A64  182A               	xorwf	btemp^0,w,c
 15035  001A66  E10D               	bnz	l11658
 15036  001A68  0EFF               	movlw	-1
 15037  001A6A  50E3               	movf	plusw1,w,c
 15038  001A6C  A4D8               	btfss	status,2,c
 15039  001A6E  D009               	goto	l11658
 15040                           
 15041                           ;stkvar	_is_leap @ sp[(0)+-4]
 15042  001A70  0EFC               	movlw	-4
 15043  001A72  50E3               	movf	plusw1,w,c
 15044  001A74  0F1C               	addlw	28
 15045  001A76  6E2A               	movwf	btemp^0,c
 15046  001A78  0EFD               	movlw	-3
 15047  001A7A  006F FF8C  F02B    	movff	plusw1,btemp+1
 15048  001A80  D017               	goto	L11
 15049  001A82                     l11658:
 15050  001A82  0EFF               	movlw	255
 15051  001A84  6E35               	movwf	(btemp+11)^0,c
 15052                           
 15053                           ;stkvar	_m @ sp[(0)+-2]
 15054  001A86  0EFE               	movlw	-2
 15055  001A88  50E3               	movf	plusw1,w,c
 15056  001A8A  2435               	addwf	(btemp+11)^0,w,c
 15057  001A8C  6E34               	movwf	(btemp+10)^0,c
 15058  001A8E  0ED5               	movlw	213
 15059  001A90  6E2A               	movwf	btemp^0,c
 15060  001A92  0E0A               	movlw	10
 15061  001A94  6E2B               	movwf	(btemp+1)^0,c
 15062  001A96  2A34               	incf	(btemp+10)^0,f,c
 15063  001A98  D003               	goto	u10724
 15064  001A9A                     u10725:
 15065  001A9A  342B               	rlcf	(btemp+1)^0,w,c
 15066  001A9C  322B               	rrcf	(btemp+1)^0,f,c
 15067  001A9E  322A               	rrcf	btemp^0,f,c
 15068  001AA0                     u10724:
 15069  001AA0  2E34               	decfsz	(btemp+10)^0,f,c
 15070  001AA2  D7FB               	goto	u10725
 15071  001AA4  0E01               	movlw	1
 15072  001AA6  162A               	andwf	btemp^0,f,c
 15073  001AA8  0E00               	movlw	0
 15074  001AAA  162B               	andwf	(btemp+1)^0,f,c
 15075  001AAC  0E1E               	movlw	30
 15076  001AAE  262A               	addwf	btemp^0,f,c
 15077  001AB0                     L11:
 15078  001AB0  0E00               	movlw	0
 15079  001AB2  222B               	addwfc	(btemp+1)^0,f,c
 15080                           
 15081                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 15082  001AB4  52E5               	movf	postdec1,f,c
 15083  001AB6  52E5               	movf	postdec1,f,c
 15084  001AB8  52E5               	movf	postdec1,f,c
 15085  001ABA  52E5               	movf	postdec1,f,c
 15086  001ABC  0012               	return		;funcret
 15087  001ABE                     __end_of_days_in_month:
 15088                           	opt callstack 0
 15089                           
 15090 ;; *************** function ___year_to_secs *****************
 15091 ;; Defined at:
 15092 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 15093 ;; Parameters:    Size  Location     Type
 15094 ;;  year            8  [STACK] long long 
 15095 ;;  is_leap         2  [STACK] PTR int 
 15096 ;;		 -> F5(2), is_leap(2), NULL(0), 
 15097 ;; Auto vars:     Size  Location     Type
 15098 ;;  y               2  [STACK] int 
 15099 ;;  leaps           2  [STACK] int 
 15100 ;;  rem             2  [STACK] int 
 15101 ;;  5               2  [STACK] int 
 15102 ;;  centuries       2  [STACK] int 
 15103 ;;  leaps           2  [STACK] int 
 15104 ;;  cycles          2  [STACK] int 
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  8  [STACK] long long 
 15107 ;; Registers used:
 15108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15118 ;;Total ram usage:        0 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:   16
 15121 ;; This function calls:
 15122 ;;		___aodiv
 15123 ;;		___aomod
 15124 ;;		___lmul
 15125 ;;		___omul
 15126 ;; This function is called by:
 15127 ;;		_rule_to_secs
 15128 ;;		___secs_to_zone
 15129 ;; This function uses a reentrant model
 15130 ;;
 15131                           
 15132                           	psect	text43
 15133  015450                     __ptext43:
 15134                           	opt callstack 0
 15135  015450                     ___year_to_secs:
 15136                           	opt callstack 0
 15137                           
 15138                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 15139  015450  0E0E               	movlw	14
 15140  015452  26E1               	addwf	fsr1l,f,c
 15141  015454  0E00               	movlw	0
 15142  015456  22E2               	addwfc	fsr1h,f,c
 15143                           
 15144                           ;stkvar	_year @ sp[(-14)+-8]
 15145                           
 15146                           ;incstack = 0
 15147  015458  0EEA               	movlw	-22
 15148  01545A  50E3               	movf	plusw1,w,c
 15149  01545C  0FFE               	addlw	254
 15150  01545E  6E3A               	movwf	(btemp+16)^0,c
 15151  015460  0EEB               	movlw	-21
 15152  015462  006F FF8C  F03B    	movff	plusw1,btemp+17
 15153  015468  0EFF               	movlw	255
 15154  01546A  223B               	addwfc	(btemp+17)^0,f,c
 15155  01546C  0EEC               	movlw	-20
 15156  01546E  006F FF8C  F03C    	movff	plusw1,btemp+18
 15157  015474  0EFF               	movlw	255
 15158  015476  223C               	addwfc	(btemp+18)^0,f,c
 15159  015478  0EED               	movlw	-19
 15160  01547A  006F FF8C  F03D    	movff	plusw1,btemp+19
 15161  015480  0EFF               	movlw	255
 15162  015482  223D               	addwfc	(btemp+19)^0,f,c
 15163  015484  0EEE               	movlw	-18
 15164  015486  006F FF8C  F03E    	movff	plusw1,btemp+20
 15165  01548C  0EFF               	movlw	255
 15166  01548E  223E               	addwfc	(btemp+20)^0,f,c
 15167  015490  0EEF               	movlw	-17
 15168  015492  006F FF8C  F03F    	movff	plusw1,btemp+21
 15169  015498  0EFF               	movlw	255
 15170  01549A  223F               	addwfc	(btemp+21)^0,f,c
 15171  01549C  0EF0               	movlw	-16
 15172  01549E  006F FF8C  F040    	movff	plusw1,btemp+22
 15173  0154A4  0EFF               	movlw	255
 15174  0154A6  2240               	addwfc	(btemp+22)^0,f,c
 15175  0154A8  0EF1               	movlw	-15
 15176  0154AA  006F FF8C  F041    	movff	plusw1,btemp+23
 15177  0154B0  0EFF               	movlw	255
 15178  0154B2  2241               	addwfc	(btemp+23)^0,f,c
 15179  0154B4  5041               	movf	(btemp+23)^0,w,c
 15180  0154B6  1040               	iorwf	(btemp+22)^0,w,c
 15181  0154B8  103F               	iorwf	(btemp+21)^0,w,c
 15182  0154BA  103E               	iorwf	(btemp+20)^0,w,c
 15183  0154BC  103D               	iorwf	(btemp+19)^0,w,c
 15184  0154BE  103C               	iorwf	(btemp+18)^0,w,c
 15185  0154C0  103B               	iorwf	(btemp+17)^0,w,c
 15186  0154C2  E103               	bnz	u10731
 15187  0154C4  0E89               	movlw	137
 15188  0154C6  5C3A               	subwf	(btemp+16)^0,w,c
 15189  0154C8  B0D8               	btfsc	status,0,c
 15190  0154CA                     u10731:
 15191  0154CA  D0E7               	goto	l11684
 15192                           
 15193                           ;stkvar	_year @ sp[(-14)+-8]
 15194                           ;stkvar	_y @ sp[(-14)+0]
 15195  0154CC  0EEA               	movlw	-22
 15196  0154CE  006F FF8C  F02A    	movff	plusw1,btemp
 15197  0154D4  0EF2               	movlw	-14
 15198  0154D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 15199  0154DC  0EEB               	movlw	-21
 15200  0154DE  006F FF8C  F02A    	movff	plusw1,btemp
 15201  0154E4  0EF3               	movlw	-13
 15202  0154E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 15203                           
 15204                           ;stkvar	_y @ sp[(-14)+0]
 15205  0154EC  0EF2               	movlw	-14
 15206  0154EE  50E3               	movf	plusw1,w,c
 15207  0154F0  0FBC               	addlw	188
 15208  0154F2  6E34               	movwf	(btemp+10)^0,c
 15209  0154F4  0EF3               	movlw	-13
 15210  0154F6  006F FF8C  F035    	movff	plusw1,btemp+11
 15211  0154FC  0EFF               	movlw	255
 15212  0154FE  2235               	addwfc	(btemp+11)^0,f,c
 15213  015500  3435               	rlcf	(btemp+11)^0,w,c
 15214  015502  3235               	rrcf	(btemp+11)^0,f,c
 15215  015504  3234               	rrcf	(btemp+10)^0,f,c
 15216  015506  3435               	rlcf	(btemp+11)^0,w,c
 15217  015508  3235               	rrcf	(btemp+11)^0,f,c
 15218  01550A  3234               	rrcf	(btemp+10)^0,f,c
 15219                           
 15220                           ;stkvar	_leaps @ sp[(-14)+2]
 15221  01550C  0EF4               	movlw	-12
 15222  01550E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15223  015514  0EF5               	movlw	-11
 15224  015516  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15225  01551C  0EBC               	movlw	188
 15226  01551E  6E35               	movwf	(btemp+11)^0,c
 15227                           
 15228                           ;stkvar	_y @ sp[(-14)+0]
 15229  015520  0EF2               	movlw	-14
 15230  015522  50E3               	movf	plusw1,w,c
 15231  015524  2435               	addwf	(btemp+11)^0,w,c
 15232  015526  6E34               	movwf	(btemp+10)^0,c
 15233  015528  0E03               	movlw	3
 15234  01552A  1634               	andwf	(btemp+10)^0,f,c
 15235  01552C  A4D8               	btfss	status,2,c
 15236  01552E  D01D               	goto	l11676
 15237                           
 15238                           ;stkvar	_leaps @ sp[(-14)+2]
 15239  015530  50E1               	movf	fsr1l,w,c
 15240  015532  0FF4               	addlw	-12
 15241  015534  6ED9               	movwf	fsr2l,c
 15242  015536  50E2               	movf	fsr1h,w,c
 15243  015538  6EDA               	movwf	fsr2h,c
 15244  01553A  0EFF               	movlw	255
 15245  01553C  22DA               	addwfc	fsr2h,f,c
 15246  01553E  06DE               	decf	postinc2,f,c
 15247  015540  0E00               	movlw	0
 15248  015542  5ADD               	subwfb	postdec2,f,c
 15249                           
 15250                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15251  015544  0EE8               	movlw	-24
 15252  015546  006F FF8C  F02A    	movff	plusw1,btemp
 15253  01554C  0EE9               	movlw	-23
 15254  01554E  50E3               	movf	plusw1,w,c
 15255  015550  102A               	iorwf	btemp^0,w,c
 15256  015552  B4D8               	btfsc	status,2,c
 15257  015554  D01F               	goto	l11680
 15258                           
 15259                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15260  015556  0EE8               	movlw	-24
 15261  015558  006F FF8F FFD9     	movff	plusw1,fsr2l
 15262  01555E  0EE9               	movlw	-23
 15263  015560  006F FF8F FFDA     	movff	plusw1,fsr2h
 15264  015566  0E01               	movlw	1
 15265  015568  D012               	goto	L12
 15266  01556A                     l11676:
 15267                           
 15268                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15269  01556A  0EE8               	movlw	-24
 15270  01556C  006F FF8C  F02A    	movff	plusw1,btemp
 15271  015572  0EE9               	movlw	-23
 15272  015574  50E3               	movf	plusw1,w,c
 15273  015576  102A               	iorwf	btemp^0,w,c
 15274  015578  B4D8               	btfsc	status,2,c
 15275  01557A  D00C               	goto	l11680
 15276                           
 15277                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15278  01557C  0EE8               	movlw	-24
 15279  01557E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15280  015584  0EE9               	movlw	-23
 15281  015586  006F FF8F FFDA     	movff	plusw1,fsr2h
 15282  01558C  0E00               	movlw	0
 15283  01558E                     L12:
 15284  01558E  6EDE               	movwf	postinc2,c
 15285  015590  0E00               	movlw	0
 15286  015592  6EDD               	movwf	postdec2,c
 15287  015594                     l11680:
 15288  015594  0E80               	movlw	128
 15289  015596  6EE6               	movwf	postinc1,c
 15290  015598  0E33               	movlw	51
 15291  01559A  6EE6               	movwf	postinc1,c
 15292  01559C  0EE1               	movlw	225
 15293  01559E  6EE6               	movwf	postinc1,c
 15294  0155A0  0E01               	movlw	1
 15295  0155A2  6EE6               	movwf	postinc1,c
 15296                           
 15297                           ;stkvar	_y @ sp[(-18)+0]
 15298  0155A4  0EEE               	movlw	-18
 15299  0155A6  006F FF8C  F034    	movff	plusw1,btemp+10
 15300  0155AC  0EEF               	movlw	-17
 15301  0155AE  006F FF8C  F035    	movff	plusw1,btemp+11
 15302  0155B4  0EBA               	movlw	186
 15303  0155B6  2434               	addwf	(btemp+10)^0,w,c
 15304  0155B8  6E2E               	movwf	(btemp+4)^0,c
 15305  0155BA  0EFF               	movlw	255
 15306  0155BC  2035               	addwfc	(btemp+11)^0,w,c
 15307  0155BE  6E2F               	movwf	(btemp+5)^0,c
 15308  0155C0  6A30               	clrf	(btemp+6)^0,c
 15309  0155C2  BE2F               	btfsc	(btemp+5)^0,7,c
 15310  0155C4  0630               	decf	(btemp+6)^0,f,c
 15311  0155C6  5030               	movf	(btemp+6)^0,w,c
 15312  0155C8  6E31               	movwf	(btemp+7)^0,c
 15313  0155CA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 15314  0155D0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 15315  0155D6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 15316  0155DC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 15317  0155E2  ECAC  F002         	call	___lmul	;wreg free
 15318  0155E6  0060  F0A8  F032   	movff	btemp,btemp+8
 15319  0155EC  0060  F0AC  F033   	movff	btemp+1,btemp+9
 15320  0155F2  0060  F0B0  F034   	movff	btemp+2,btemp+10
 15321  0155F8  0060  F0B4  F035   	movff	btemp+3,btemp+11
 15322  0155FE  0E80               	movlw	128
 15323  015600  6EE6               	movwf	postinc1,c
 15324  015602  0E51               	movlw	81
 15325  015604  6EE6               	movwf	postinc1,c
 15326  015606  0E01               	movlw	1
 15327  015608  6EE6               	movwf	postinc1,c
 15328  01560A  0E00               	movlw	0
 15329  01560C  6EE6               	movwf	postinc1,c
 15330                           
 15331                           ;stkvar	_leaps @ sp[(-18)+2]
 15332  01560E  0EF0               	movlw	-16
 15333  015610  006F FF8C  F030    	movff	plusw1,btemp+6
 15334  015616  0EF1               	movlw	-15
 15335  015618  006F FF8C  F031    	movff	plusw1,btemp+7
 15336  01561E  0060  F0C0  F02A   	movff	btemp+6,btemp
 15337  015624  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 15338  01562A  0E00               	movlw	0
 15339  01562C  BE2B               	btfsc	(btemp+1)^0,7,c
 15340  01562E  0EFF               	movlw	255
 15341  015630  6E2C               	movwf	(btemp+2)^0,c
 15342  015632  6E2D               	movwf	(btemp+3)^0,c
 15343  015634  0060  F0AB  FFE6   	movff	btemp,postinc1
 15344  01563A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15345  015640  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 15346  015646  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 15347  01564C  ECAC  F002         	call	___lmul	;wreg free
 15348  015650  502A               	movf	btemp^0,w,c
 15349  015652  2432               	addwf	(btemp+8)^0,w,c
 15350  015654  6E2E               	movwf	(btemp+4)^0,c
 15351  015656  502B               	movf	(btemp+1)^0,w,c
 15352  015658  2033               	addwfc	(btemp+9)^0,w,c
 15353  01565A  6E2F               	movwf	(btemp+5)^0,c
 15354  01565C  502C               	movf	(btemp+2)^0,w,c
 15355  01565E  2034               	addwfc	(btemp+10)^0,w,c
 15356  015660  6E30               	movwf	(btemp+6)^0,c
 15357  015662  502D               	movf	(btemp+3)^0,w,c
 15358  015664  2035               	addwfc	(btemp+11)^0,w,c
 15359  015666  6E31               	movwf	(btemp+7)^0,c
 15360  015668  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 15361  01566E  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 15362  015674  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 15363  01567A  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 15364  015680  6A3E               	clrf	(btemp+20)^0,c
 15365  015682  BE3D               	btfsc	(btemp+19)^0,7,c
 15366  015684  683E               	setf	(btemp+20)^0,c
 15367  015686  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 15368  01568C  0060  F0F8  F040   	movff	btemp+20,btemp+22
 15369  015692  0060  F0F8  F041   	movff	btemp+20,btemp+23
 15370  015698  D36F               	goto	L13
 15371  01569A                     l11684:
 15372                           
 15373                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15374  01569A  0EE8               	movlw	-24
 15375  01569C  006F FF8C  F02A    	movff	plusw1,btemp
 15376  0156A2  0EE9               	movlw	-23
 15377  0156A4  50E3               	movf	plusw1,w,c
 15378  0156A6  102A               	iorwf	btemp^0,w,c
 15379  0156A8  A4D8               	btfss	status,2,c
 15380  0156AA  D012               	goto	l11690
 15381                           
 15382                           ;stkvar	F5 @ sp[(-14)+6]
 15383  0156AC  0EF8               	movlw	-8
 15384  0156AE  6AE3               	clrf	plusw1,c
 15385  0156B0  0EF9               	movlw	-7
 15386  0156B2  6AE3               	clrf	plusw1,c
 15387                           
 15388                           ;stkvar	F5 @ sp[(-14)+6]
 15389  0156B4  0EF8               	movlw	248
 15390  0156B6  24E1               	addwf	fsr1l,w,c
 15391  0156B8  6E34               	movwf	(btemp+10)^0,c
 15392  0156BA  0EFF               	movlw	255
 15393  0156BC  20E2               	addwfc	fsr1h,w,c
 15394  0156BE  6E35               	movwf	(btemp+11)^0,c
 15395                           
 15396                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15397  0156C0  0EE9               	movlw	-23
 15398  0156C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15399  0156C8  0EE8               	movlw	-24
 15400  0156CA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15401  0156D0                     l11690:
 15402  0156D0  0E90               	movlw	144
 15403  0156D2  6EE6               	movwf	postinc1,c
 15404  0156D4  0E01               	movlw	1
 15405  0156D6  6EE6               	movwf	postinc1,c
 15406  0156D8  0E00               	movlw	0
 15407  0156DA  6EE6               	movwf	postinc1,c
 15408  0156DC  0E00               	movlw	0
 15409  0156DE  6EE6               	movwf	postinc1,c
 15410  0156E0  0E00               	movlw	0
 15411  0156E2  6EE6               	movwf	postinc1,c
 15412  0156E4  0E00               	movlw	0
 15413  0156E6  6EE6               	movwf	postinc1,c
 15414  0156E8  0E00               	movlw	0
 15415  0156EA  6EE6               	movwf	postinc1,c
 15416  0156EC  0E00               	movlw	0
 15417  0156EE  6EE6               	movwf	postinc1,c
 15418                           
 15419                           ;stkvar	_year @ sp[(-22)+-8]
 15420  0156F0  0EE2               	movlw	-30
 15421  0156F2  50E3               	movf	plusw1,w,c
 15422  0156F4  0F9C               	addlw	156
 15423  0156F6  6E3A               	movwf	(btemp+16)^0,c
 15424  0156F8  0EE3               	movlw	-29
 15425  0156FA  006F FF8C  F03B    	movff	plusw1,btemp+17
 15426  015700  0EFF               	movlw	255
 15427  015702  223B               	addwfc	(btemp+17)^0,f,c
 15428  015704  0EE4               	movlw	-28
 15429  015706  006F FF8C  F03C    	movff	plusw1,btemp+18
 15430  01570C  0EFF               	movlw	255
 15431  01570E  223C               	addwfc	(btemp+18)^0,f,c
 15432  015710  0EE5               	movlw	-27
 15433  015712  006F FF8C  F03D    	movff	plusw1,btemp+19
 15434  015718  0EFF               	movlw	255
 15435  01571A  223D               	addwfc	(btemp+19)^0,f,c
 15436  01571C  0EE6               	movlw	-26
 15437  01571E  006F FF8C  F03E    	movff	plusw1,btemp+20
 15438  015724  0EFF               	movlw	255
 15439  015726  223E               	addwfc	(btemp+20)^0,f,c
 15440  015728  0EE7               	movlw	-25
 15441  01572A  006F FF8C  F03F    	movff	plusw1,btemp+21
 15442  015730  0EFF               	movlw	255
 15443  015732  223F               	addwfc	(btemp+21)^0,f,c
 15444  015734  0EE8               	movlw	-24
 15445  015736  006F FF8C  F040    	movff	plusw1,btemp+22
 15446  01573C  0EFF               	movlw	255
 15447  01573E  2240               	addwfc	(btemp+22)^0,f,c
 15448  015740  0EE9               	movlw	-23
 15449  015742  006F FF8C  F041    	movff	plusw1,btemp+23
 15450  015748  0EFF               	movlw	255
 15451  01574A  2241               	addwfc	(btemp+23)^0,f,c
 15452  01574C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15453  015752  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15454  015758  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15455  01575E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15456  015764  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15457  01576A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15458  015770  0060  F103  FFE6   	movff	btemp+22,postinc1
 15459  015776  0060  F107  FFE6   	movff	btemp+23,postinc1
 15460  01577C  EC7D  F0E2         	call	___aodiv	;wreg free
 15461  015780  52E5               	movf	postdec1,f,c
 15462  015782  006F FF9C  F041    	movff	indf1,btemp+23
 15463  015788  52E5               	movf	postdec1,f,c
 15464  01578A  006F FF9C  F040    	movff	indf1,btemp+22
 15465  015790  52E5               	movf	postdec1,f,c
 15466  015792  006F FF9C  F03F    	movff	indf1,btemp+21
 15467  015798  52E5               	movf	postdec1,f,c
 15468  01579A  006F FF9C  F03E    	movff	indf1,btemp+20
 15469  0157A0  52E5               	movf	postdec1,f,c
 15470  0157A2  006F FF9C  F03D    	movff	indf1,btemp+19
 15471  0157A8  52E5               	movf	postdec1,f,c
 15472  0157AA  006F FF9C  F03C    	movff	indf1,btemp+18
 15473  0157B0  52E5               	movf	postdec1,f,c
 15474  0157B2  006F FF9C  F03B    	movff	indf1,btemp+17
 15475  0157B8  52E5               	movf	postdec1,f,c
 15476  0157BA  006F FF9C  F03A    	movff	indf1,btemp+16
 15477  0157C0  0EF8               	movlw	248
 15478  0157C2  26E1               	addwf	fsr1l,f,c
 15479  0157C4  0EFF               	movlw	255
 15480  0157C6  22E2               	addwfc	fsr1h,f,c
 15481  0157C8  0060  F0E8  F034   	movff	btemp+16,btemp+10
 15482  0157CE  0060  F0EC  F035   	movff	btemp+17,btemp+11
 15483                           
 15484                           ;stkvar	_cycles @ sp[(-14)+12]
 15485  0157D4  0EFE               	movlw	-2
 15486  0157D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15487  0157DC  0EFF               	movlw	-1
 15488  0157DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15489  0157E4  0E90               	movlw	144
 15490  0157E6  6EE6               	movwf	postinc1,c
 15491  0157E8  0E01               	movlw	1
 15492  0157EA  6EE6               	movwf	postinc1,c
 15493  0157EC  0E00               	movlw	0
 15494  0157EE  6EE6               	movwf	postinc1,c
 15495  0157F0  0E00               	movlw	0
 15496  0157F2  6EE6               	movwf	postinc1,c
 15497  0157F4  0E00               	movlw	0
 15498  0157F6  6EE6               	movwf	postinc1,c
 15499  0157F8  0E00               	movlw	0
 15500  0157FA  6EE6               	movwf	postinc1,c
 15501  0157FC  0E00               	movlw	0
 15502  0157FE  6EE6               	movwf	postinc1,c
 15503  015800  0E00               	movlw	0
 15504  015802  6EE6               	movwf	postinc1,c
 15505                           
 15506                           ;stkvar	_year @ sp[(-22)+-8]
 15507  015804  0EE2               	movlw	-30
 15508  015806  50E3               	movf	plusw1,w,c
 15509  015808  0F9C               	addlw	156
 15510  01580A  6E3A               	movwf	(btemp+16)^0,c
 15511  01580C  0EE3               	movlw	-29
 15512  01580E  006F FF8C  F03B    	movff	plusw1,btemp+17
 15513  015814  0EFF               	movlw	255
 15514  015816  223B               	addwfc	(btemp+17)^0,f,c
 15515  015818  0EE4               	movlw	-28
 15516  01581A  006F FF8C  F03C    	movff	plusw1,btemp+18
 15517  015820  0EFF               	movlw	255
 15518  015822  223C               	addwfc	(btemp+18)^0,f,c
 15519  015824  0EE5               	movlw	-27
 15520  015826  006F FF8C  F03D    	movff	plusw1,btemp+19
 15521  01582C  0EFF               	movlw	255
 15522  01582E  223D               	addwfc	(btemp+19)^0,f,c
 15523  015830  0EE6               	movlw	-26
 15524  015832  006F FF8C  F03E    	movff	plusw1,btemp+20
 15525  015838  0EFF               	movlw	255
 15526  01583A  223E               	addwfc	(btemp+20)^0,f,c
 15527  01583C  0EE7               	movlw	-25
 15528  01583E  006F FF8C  F03F    	movff	plusw1,btemp+21
 15529  015844  0EFF               	movlw	255
 15530  015846  223F               	addwfc	(btemp+21)^0,f,c
 15531  015848  0EE8               	movlw	-24
 15532  01584A  006F FF8C  F040    	movff	plusw1,btemp+22
 15533  015850  0EFF               	movlw	255
 15534  015852  2240               	addwfc	(btemp+22)^0,f,c
 15535  015854  0EE9               	movlw	-23
 15536  015856  006F FF8C  F041    	movff	plusw1,btemp+23
 15537  01585C  0EFF               	movlw	255
 15538  01585E  2241               	addwfc	(btemp+23)^0,f,c
 15539  015860  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15540  015866  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15541  01586C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15542  015872  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15543  015878  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15544  01587E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15545  015884  0060  F103  FFE6   	movff	btemp+22,postinc1
 15546  01588A  0060  F107  FFE6   	movff	btemp+23,postinc1
 15547  015890  EC3C  F0E7         	call	___aomod	;wreg free
 15548  015894  52E5               	movf	postdec1,f,c
 15549  015896  006F FF9C  F041    	movff	indf1,btemp+23
 15550  01589C  52E5               	movf	postdec1,f,c
 15551  01589E  006F FF9C  F040    	movff	indf1,btemp+22
 15552  0158A4  52E5               	movf	postdec1,f,c
 15553  0158A6  006F FF9C  F03F    	movff	indf1,btemp+21
 15554  0158AC  52E5               	movf	postdec1,f,c
 15555  0158AE  006F FF9C  F03E    	movff	indf1,btemp+20
 15556  0158B4  52E5               	movf	postdec1,f,c
 15557  0158B6  006F FF9C  F03D    	movff	indf1,btemp+19
 15558  0158BC  52E5               	movf	postdec1,f,c
 15559  0158BE  006F FF9C  F03C    	movff	indf1,btemp+18
 15560  0158C4  52E5               	movf	postdec1,f,c
 15561  0158C6  006F FF9C  F03B    	movff	indf1,btemp+17
 15562  0158CC  52E5               	movf	postdec1,f,c
 15563  0158CE  006F FF9C  F03A    	movff	indf1,btemp+16
 15564  0158D4  0EF8               	movlw	248
 15565  0158D6  26E1               	addwf	fsr1l,f,c
 15566  0158D8  0EFF               	movlw	255
 15567  0158DA  22E2               	addwfc	fsr1h,f,c
 15568  0158DC  0060  F0E8  F034   	movff	btemp+16,btemp+10
 15569  0158E2  0060  F0EC  F035   	movff	btemp+17,btemp+11
 15570                           
 15571                           ;stkvar	_rem @ sp[(-14)+4]
 15572  0158E8  0EF6               	movlw	-10
 15573  0158EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15574  0158F0  0EF7               	movlw	-9
 15575  0158F2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15576                           
 15577                           ;stkvar	_rem @ sp[(-14)+4]
 15578  0158F8  0EF7               	movlw	-9
 15579  0158FA  AEE3               	btfss	plusw1,7,c
 15580  0158FC  D015               	goto	l11700
 15581                           
 15582                           ;stkvar	_cycles @ sp[(-14)+12]
 15583  0158FE  50E1               	movf	fsr1l,w,c
 15584  015900  0FFE               	addlw	-2
 15585  015902  6ED9               	movwf	fsr2l,c
 15586  015904  50E2               	movf	fsr1h,w,c
 15587  015906  6EDA               	movwf	fsr2h,c
 15588  015908  0EFF               	movlw	255
 15589  01590A  22DA               	addwfc	fsr2h,f,c
 15590  01590C  06DE               	decf	postinc2,f,c
 15591  01590E  0E00               	movlw	0
 15592  015910  5ADD               	subwfb	postdec2,f,c
 15593                           
 15594                           ;stkvar	_rem @ sp[(-14)+4]
 15595  015912  50E1               	movf	fsr1l,w,c
 15596  015914  0FF6               	addlw	-10
 15597  015916  6ED9               	movwf	fsr2l,c
 15598  015918  50E2               	movf	fsr1h,w,c
 15599  01591A  6EDA               	movwf	fsr2h,c
 15600  01591C  0EFF               	movlw	255
 15601  01591E  22DA               	addwfc	fsr2h,f,c
 15602  015920  0E90               	movlw	144
 15603  015922  26DE               	addwf	postinc2,f,c
 15604  015924  0E01               	movlw	1
 15605  015926  22DD               	addwfc	postdec2,f,c
 15606  015928                     l11700:
 15607                           
 15608                           ;stkvar	_rem @ sp[(-14)+4]
 15609  015928  0EF6               	movlw	-10
 15610  01592A  006F FF8C  F02A    	movff	plusw1,btemp
 15611  015930  0EF7               	movlw	-9
 15612  015932  50E3               	movf	plusw1,w,c
 15613  015934  102A               	iorwf	btemp^0,w,c
 15614  015936  A4D8               	btfss	status,2,c
 15615  015938  D015               	goto	l11708
 15616                           
 15617                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15618  01593A  0EE8               	movlw	-24
 15619  01593C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15620  015942  0EE9               	movlw	-23
 15621  015944  006F FF8F FFDA     	movff	plusw1,fsr2h
 15622  01594A  0E01               	movlw	1
 15623  01594C  6EDE               	movwf	postinc2,c
 15624  01594E  0E00               	movlw	0
 15625  015950  6EDD               	movwf	postdec2,c
 15626                           
 15627                           ;stkvar	_centuries @ sp[(-14)+8]
 15628  015952  0EFA               	movlw	-6
 15629  015954  6AE3               	clrf	plusw1,c
 15630  015956  0EFB               	movlw	-5
 15631  015958  6AE3               	clrf	plusw1,c
 15632  01595A                     l11706:
 15633                           
 15634                           ;stkvar	_leaps @ sp[(-14)+10]
 15635  01595A  0EFC               	movlw	-4
 15636  01595C  6AE3               	clrf	plusw1,c
 15637  01595E  0EFD               	movlw	-3
 15638  015960  6AE3               	clrf	plusw1,c
 15639  015962  D0D6               	goto	l11740
 15640  015964                     l11708:
 15641                           
 15642                           ;stkvar	_rem @ sp[(-14)+4]
 15643  015964  0EF7               	movlw	-9
 15644  015966  BEE3               	btfsc	plusw1,7,c
 15645  015968  D04A               	goto	l11720
 15646  01596A  0EF7               	movlw	-9
 15647  01596C  50E3               	movf	plusw1,w,c
 15648  01596E  E108               	bnz	u10800
 15649  015970  0EF6               	movlw	-10
 15650  015972  006F FF8C  F02A    	movff	plusw1,btemp
 15651  015978  0EC8               	movlw	200
 15652  01597A  5E2A               	subwf	btemp^0,f,c
 15653  01597C  A0D8               	btfss	status,0,c
 15654  01597E  D03F               	goto	l11720
 15655  015980                     u10800:
 15656                           
 15657                           ;stkvar	_rem @ sp[(-14)+4]
 15658  015980  0EF7               	movlw	-9
 15659  015982  BEE3               	btfsc	plusw1,7,c
 15660  015984  D025               	goto	l11716
 15661  015986  0EF6               	movlw	-10
 15662  015988  006F FF8C  F02A    	movff	plusw1,btemp
 15663  01598E  0E2C               	movlw	44
 15664  015990  5E2A               	subwf	btemp^0,f,c
 15665  015992  0EF7               	movlw	-9
 15666  015994  006F FF8C  F02A    	movff	plusw1,btemp
 15667  01599A  0E01               	movlw	1
 15668  01599C  5A2A               	subwfb	btemp^0,f,c
 15669  01599E  A0D8               	btfss	status,0,c
 15670  0159A0  D017               	goto	l11716
 15671  0159A2  0E03               	movlw	3
 15672  0159A4  6E34               	movwf	(btemp+10)^0,c
 15673  0159A6  0E00               	movlw	0
 15674  0159A8  6E35               	movwf	(btemp+11)^0,c
 15675                           
 15676                           ;stkvar	_centuries @ sp[(-14)+8]
 15677  0159AA  0EFA               	movlw	-6
 15678  0159AC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15679  0159B2  0EFB               	movlw	-5
 15680  0159B4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15681                           
 15682                           ;stkvar	_rem @ sp[(-14)+4]
 15683  0159BA  50E1               	movf	fsr1l,w,c
 15684  0159BC  0FF6               	addlw	-10
 15685  0159BE  6ED9               	movwf	fsr2l,c
 15686  0159C0  50E2               	movf	fsr1h,w,c
 15687  0159C2  6EDA               	movwf	fsr2h,c
 15688  0159C4  0EFF               	movlw	255
 15689  0159C6  22DA               	addwfc	fsr2h,f,c
 15690  0159C8  0ED4               	movlw	212
 15691  0159CA  26DE               	addwf	postinc2,f,c
 15692  0159CC  0EFE               	movlw	254
 15693  0159CE  D015               	goto	L14
 15694  0159D0                     l11716:
 15695  0159D0  0E02               	movlw	2
 15696  0159D2  6E34               	movwf	(btemp+10)^0,c
 15697  0159D4  0E00               	movlw	0
 15698  0159D6  6E35               	movwf	(btemp+11)^0,c
 15699                           
 15700                           ;stkvar	_centuries @ sp[(-14)+8]
 15701  0159D8  0EFA               	movlw	-6
 15702  0159DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15703  0159E0  0EFB               	movlw	-5
 15704  0159E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15705                           
 15706                           ;stkvar	_rem @ sp[(-14)+4]
 15707  0159E8  50E1               	movf	fsr1l,w,c
 15708  0159EA  0FF6               	addlw	-10
 15709  0159EC  6ED9               	movwf	fsr2l,c
 15710  0159EE  50E2               	movf	fsr1h,w,c
 15711  0159F0  6EDA               	movwf	fsr2h,c
 15712  0159F2  0EFF               	movlw	255
 15713  0159F4  22DA               	addwfc	fsr2h,f,c
 15714  0159F6  0E38               	movlw	56
 15715  0159F8  D024               	goto	L15
 15716  0159FA                     L14:
 15717  0159FA  22DD               	addwfc	postdec2,f,c
 15718  0159FC  D029               	goto	l11728
 15719  0159FE                     l11720:
 15720                           
 15721                           ;stkvar	_rem @ sp[(-14)+4]
 15722  0159FE  0EF7               	movlw	-9
 15723  015A00  BEE3               	btfsc	plusw1,7,c
 15724  015A02  D022               	goto	l11726
 15725  015A04  0EF7               	movlw	-9
 15726  015A06  50E3               	movf	plusw1,w,c
 15727  015A08  E108               	bnz	u10820
 15728  015A0A  0EF6               	movlw	-10
 15729  015A0C  006F FF8C  F02A    	movff	plusw1,btemp
 15730  015A12  0E64               	movlw	100
 15731  015A14  5E2A               	subwf	btemp^0,f,c
 15732  015A16  A0D8               	btfss	status,0,c
 15733  015A18  D017               	goto	l11726
 15734  015A1A                     u10820:
 15735  015A1A  0E01               	movlw	1
 15736  015A1C  6E34               	movwf	(btemp+10)^0,c
 15737  015A1E  0E00               	movlw	0
 15738  015A20  6E35               	movwf	(btemp+11)^0,c
 15739                           
 15740                           ;stkvar	_centuries @ sp[(-14)+8]
 15741  015A22  0EFA               	movlw	-6
 15742  015A24  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15743  015A2A  0EFB               	movlw	-5
 15744  015A2C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15745                           
 15746                           ;stkvar	_rem @ sp[(-14)+4]
 15747  015A32  50E1               	movf	fsr1l,w,c
 15748  015A34  0FF6               	addlw	-10
 15749  015A36  6ED9               	movwf	fsr2l,c
 15750  015A38  50E2               	movf	fsr1h,w,c
 15751  015A3A  6EDA               	movwf	fsr2h,c
 15752  015A3C  0EFF               	movlw	255
 15753  015A3E  22DA               	addwfc	fsr2h,f,c
 15754  015A40  0E9C               	movlw	156
 15755  015A42                     L15:
 15756  015A42  26DE               	addwf	postinc2,f,c
 15757  015A44  0EFF               	movlw	255
 15758  015A46  D7D9               	goto	L14
 15759  015A48                     l11726:
 15760                           
 15761                           ;stkvar	_centuries @ sp[(-14)+8]
 15762  015A48  0EFA               	movlw	-6
 15763  015A4A  6AE3               	clrf	plusw1,c
 15764  015A4C  0EFB               	movlw	-5
 15765  015A4E  6AE3               	clrf	plusw1,c
 15766  015A50                     l11728:
 15767                           
 15768                           ;stkvar	_rem @ sp[(-14)+4]
 15769  015A50  0EF6               	movlw	-10
 15770  015A52  006F FF8C  F02A    	movff	plusw1,btemp
 15771  015A58  0EF7               	movlw	-9
 15772  015A5A  50E3               	movf	plusw1,w,c
 15773  015A5C  102A               	iorwf	btemp^0,w,c
 15774  015A5E  A4D8               	btfss	status,2,c
 15775  015A60  D00D               	goto	l11734
 15776                           
 15777                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15778  015A62  0EE8               	movlw	-24
 15779  015A64  006F FF8F FFD9     	movff	plusw1,fsr2l
 15780  015A6A  0EE9               	movlw	-23
 15781  015A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15782  015A72  0E00               	movlw	0
 15783  015A74  6EDE               	movwf	postinc2,c
 15784  015A76  0E00               	movlw	0
 15785  015A78  6EDD               	movwf	postdec2,c
 15786  015A7A  D76F               	goto	l11706
 15787  015A7C                     l11734:
 15788                           
 15789                           ;stkvar	_rem @ sp[(-14)+4]
 15790  015A7C  0EF6               	movlw	-10
 15791  015A7E  006F FF8C  F034    	movff	plusw1,btemp+10
 15792  015A84  0EF7               	movlw	-9
 15793  015A86  006F FF8C  F035    	movff	plusw1,btemp+11
 15794  015A8C  90D8               	bcf	status,0,c
 15795  015A8E  3235               	rrcf	(btemp+11)^0,f,c
 15796  015A90  3234               	rrcf	(btemp+10)^0,f,c
 15797  015A92  90D8               	bcf	status,0,c
 15798  015A94  3235               	rrcf	(btemp+11)^0,f,c
 15799  015A96  3234               	rrcf	(btemp+10)^0,f,c
 15800                           
 15801                           ;stkvar	_leaps @ sp[(-14)+10]
 15802  015A98  0EFC               	movlw	-4
 15803  015A9A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15804  015AA0  0EFD               	movlw	-3
 15805  015AA2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15806  015AA8  0E03               	movlw	3
 15807  015AAA  6E34               	movwf	(btemp+10)^0,c
 15808  015AAC  0E00               	movlw	0
 15809  015AAE  6E35               	movwf	(btemp+11)^0,c
 15810                           
 15811                           ;stkvar	_rem @ sp[(-14)+4]
 15812  015AB0  0EF6               	movlw	-10
 15813  015AB2  006F FF8C  F02A    	movff	plusw1,btemp
 15814  015AB8  5034               	movf	(btemp+10)^0,w,c
 15815  015ABA  162A               	andwf	btemp^0,f,c
 15816  015ABC  0EF6               	movlw	-10
 15817  015ABE  0060  F0AB  FFE3   	movff	btemp,plusw1
 15818  015AC4  0EF7               	movlw	-9
 15819  015AC6  006F FF8C  F02A    	movff	plusw1,btemp
 15820  015ACC  5035               	movf	(btemp+11)^0,w,c
 15821  015ACE  162A               	andwf	btemp^0,f,c
 15822  015AD0  0EF7               	movlw	-9
 15823  015AD2  0060  F0AB  FFE3   	movff	btemp,plusw1
 15824                           
 15825                           ;stkvar	_rem @ sp[(-14)+4]
 15826  015AD8  0EF6               	movlw	-10
 15827  015ADA  006F FF8C  F02A    	movff	plusw1,btemp
 15828  015AE0  0EF7               	movlw	-9
 15829  015AE2  50E3               	movf	plusw1,w,c
 15830  015AE4  102A               	iorwf	btemp^0,w,c
 15831  015AE6  A4D8               	btfss	status,2,c
 15832  015AE8  D002               	goto	u10840
 15833  015AEA  0E01               	movlw	1
 15834  015AEC  D001               	goto	u10850
 15835  015AEE                     u10840:
 15836  015AEE  0E00               	movlw	0
 15837  015AF0                     u10850:
 15838  015AF0  6E34               	movwf	(btemp+10)^0,c
 15839  015AF2  6A35               	clrf	(btemp+11)^0,c
 15840                           
 15841                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15842  015AF4  0EE8               	movlw	-24
 15843  015AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15844  015AFC  0EE9               	movlw	-23
 15845  015AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15846  015B04  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15847  015B0A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15848  015B10                     l11740:
 15849                           
 15850                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15851  015B10  0EE8               	movlw	-24
 15852  015B12  006F FF8F FFD9     	movff	plusw1,fsr2l
 15853  015B18  0EE9               	movlw	-23
 15854  015B1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15855  015B20  006F FF78  F034    	movff	postinc2,btemp+10
 15856  015B26  006F FF74  F035    	movff	postdec2,btemp+11
 15857                           
 15858                           ;stkvar	_centuries @ sp[(-14)+8]
 15859  015B2C  0EFA               	movlw	-6
 15860  015B2E  006F FF8C  F032    	movff	plusw1,btemp+8
 15861  015B34  0EFB               	movlw	-5
 15862  015B36  006F FF8C  F033    	movff	plusw1,btemp+9
 15863  015B3C  0E18               	movlw	24
 15864  015B3E  0232               	mulwf	(btemp+8)^0,c
 15865  015B40  006F FFCC  F030    	movff	prodl,btemp+6
 15866  015B46  006F FFD0  F031    	movff	prodh,btemp+7
 15867  015B4C  0233               	mulwf	(btemp+9)^0,c
 15868  015B4E  50F3               	movf	prodl,w,c
 15869  015B50  2631               	addwf	(btemp+7)^0,f,c
 15870                           
 15871                           ;stkvar	_cycles @ sp[(-14)+12]
 15872  015B52  0EFE               	movlw	-2
 15873  015B54  006F FF8C  F032    	movff	plusw1,btemp+8
 15874  015B5A  0EFF               	movlw	-1
 15875  015B5C  006F FF8C  F033    	movff	plusw1,btemp+9
 15876  015B62  0E61               	movlw	97
 15877  015B64  0232               	mulwf	(btemp+8)^0,c
 15878  015B66  006F FFCC  F02E    	movff	prodl,btemp+4
 15879  015B6C  006F FFD0  F02F    	movff	prodh,btemp+5
 15880  015B72  0233               	mulwf	(btemp+9)^0,c
 15881  015B74  50F3               	movf	prodl,w,c
 15882  015B76  262F               	addwf	(btemp+5)^0,f,c
 15883  015B78  5030               	movf	(btemp+6)^0,w,c
 15884  015B7A  262E               	addwf	(btemp+4)^0,f,c
 15885  015B7C  5031               	movf	(btemp+7)^0,w,c
 15886  015B7E  222F               	addwfc	(btemp+5)^0,f,c
 15887  015B80  5034               	movf	(btemp+10)^0,w,c
 15888  015B82  5E2E               	subwf	(btemp+4)^0,f,c
 15889  015B84  5035               	movf	(btemp+11)^0,w,c
 15890  015B86  5A2F               	subwfb	(btemp+5)^0,f,c
 15891                           
 15892                           ;stkvar	_leaps @ sp[(-14)+10]
 15893  015B88  50E1               	movf	fsr1l,w,c
 15894  015B8A  0FFC               	addlw	-4
 15895  015B8C  6ED9               	movwf	fsr2l,c
 15896  015B8E  50E2               	movf	fsr1h,w,c
 15897  015B90  6EDA               	movwf	fsr2h,c
 15898  015B92  0EFF               	movlw	255
 15899  015B94  22DA               	addwfc	fsr2h,f,c
 15900  015B96  502E               	movf	(btemp+4)^0,w,c
 15901  015B98  26DE               	addwf	postinc2,f,c
 15902  015B9A  502F               	movf	(btemp+5)^0,w,c
 15903  015B9C  22DD               	addwfc	postdec2,f,c
 15904  015B9E  0E80               	movlw	128
 15905  015BA0  6EE6               	movwf	postinc1,c
 15906  015BA2  0E51               	movlw	81
 15907  015BA4  6EE6               	movwf	postinc1,c
 15908  015BA6  0E01               	movlw	1
 15909  015BA8  6EE6               	movwf	postinc1,c
 15910  015BAA  0E00               	movlw	0
 15911  015BAC  6EE6               	movwf	postinc1,c
 15912  015BAE  0E00               	movlw	0
 15913  015BB0  6EE6               	movwf	postinc1,c
 15914  015BB2  0E00               	movlw	0
 15915  015BB4  6EE6               	movwf	postinc1,c
 15916  015BB6  0E00               	movlw	0
 15917  015BB8  6EE6               	movwf	postinc1,c
 15918  015BBA  0E00               	movlw	0
 15919  015BBC  6EE6               	movwf	postinc1,c
 15920                           
 15921                           ;stkvar	_leaps @ sp[(-22)+10]
 15922  015BBE  0EF4               	movlw	-12
 15923  015BC0  006F FF8C  F03A    	movff	plusw1,btemp+16
 15924  015BC6  0EF5               	movlw	-11
 15925  015BC8  006F FF8C  F03B    	movff	plusw1,btemp+17
 15926  015BCE  6A3C               	clrf	(btemp+18)^0,c
 15927  015BD0  BE3B               	btfsc	(btemp+17)^0,7,c
 15928  015BD2  683C               	setf	(btemp+18)^0,c
 15929  015BD4  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 15930  015BDA  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 15931  015BE0  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 15932  015BE6  0060  F0F0  F040   	movff	btemp+18,btemp+22
 15933  015BEC  0060  F0F0  F041   	movff	btemp+18,btemp+23
 15934  015BF2  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15935  015BF8  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15936  015BFE  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15937  015C04  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15938  015C0A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15939  015C10  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15940  015C16  0060  F103  FFE6   	movff	btemp+22,postinc1
 15941  015C1C  0060  F107  FFE6   	movff	btemp+23,postinc1
 15942  015C22  EC47  F0F8         	call	___omul	;wreg free
 15943  015C26  52E5               	movf	postdec1,f,c
 15944  015C28  006F FF9C  F041    	movff	indf1,btemp+23
 15945  015C2E  52E5               	movf	postdec1,f,c
 15946  015C30  006F FF9C  F040    	movff	indf1,btemp+22
 15947  015C36  52E5               	movf	postdec1,f,c
 15948  015C38  006F FF9C  F03F    	movff	indf1,btemp+21
 15949  015C3E  52E5               	movf	postdec1,f,c
 15950  015C40  006F FF9C  F03E    	movff	indf1,btemp+20
 15951  015C46  52E5               	movf	postdec1,f,c
 15952  015C48  006F FF9C  F03D    	movff	indf1,btemp+19
 15953  015C4E  52E5               	movf	postdec1,f,c
 15954  015C50  006F FF9C  F03C    	movff	indf1,btemp+18
 15955  015C56  52E5               	movf	postdec1,f,c
 15956  015C58  006F FF9C  F03B    	movff	indf1,btemp+17
 15957  015C5E  52E5               	movf	postdec1,f,c
 15958  015C60  006F FF9C  F03A    	movff	indf1,btemp+16
 15959  015C66  0EF8               	movlw	248
 15960  015C68  26E1               	addwf	fsr1l,f,c
 15961  015C6A  0EFF               	movlw	255
 15962  015C6C  22E2               	addwfc	fsr1h,f,c
 15963  015C6E  0E80               	movlw	128
 15964  015C70  6EE6               	movwf	postinc1,c
 15965  015C72  0E33               	movlw	51
 15966  015C74  6EE6               	movwf	postinc1,c
 15967  015C76  0EE1               	movlw	225
 15968  015C78  6EE6               	movwf	postinc1,c
 15969  015C7A  0E01               	movlw	1
 15970  015C7C  6EE6               	movwf	postinc1,c
 15971  015C7E  0E00               	movlw	0
 15972  015C80  6EE6               	movwf	postinc1,c
 15973  015C82  0E00               	movlw	0
 15974  015C84  6EE6               	movwf	postinc1,c
 15975  015C86  0E00               	movlw	0
 15976  015C88  6EE6               	movwf	postinc1,c
 15977  015C8A  0E00               	movlw	0
 15978  015C8C  6EE6               	movwf	postinc1,c
 15979                           
 15980                           ;stkvar	_year @ sp[(-22)+-8]
 15981  015C8E  50E1               	movf	fsr1l,w,c
 15982  015C90  0FE2               	addlw	-30
 15983  015C92  6ED9               	movwf	fsr2l,c
 15984  015C94  50E2               	movf	fsr1h,w,c
 15985  015C96  6EDA               	movwf	fsr2h,c
 15986  015C98  0EFF               	movlw	255
 15987  015C9A  22DA               	addwfc	fsr2h,f,c
 15988  015C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 15989  015CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 15990  015CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 15991  015CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 15992  015CB4  006F FF7B FFE6     	movff	postinc2,postinc1
 15993  015CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 15994  015CC0  006F FF7B FFE6     	movff	postinc2,postinc1
 15995  015CC6  006F FF7B FFE6     	movff	postinc2,postinc1
 15996  015CCC  EC47  F0F8         	call	___omul	;wreg free
 15997  015CD0  52E5               	movf	postdec1,f,c
 15998  015CD2  006F FF9C  F049    	movff	indf1,btemp+31
 15999  015CD8  52E5               	movf	postdec1,f,c
 16000  015CDA  006F FF9C  F048    	movff	indf1,btemp+30
 16001  015CE0  52E5               	movf	postdec1,f,c
 16002  015CE2  006F FF9C  F047    	movff	indf1,btemp+29
 16003  015CE8  52E5               	movf	postdec1,f,c
 16004  015CEA  006F FF9C  F046    	movff	indf1,btemp+28
 16005  015CF0  52E5               	movf	postdec1,f,c
 16006  015CF2  006F FF9C  F045    	movff	indf1,btemp+27
 16007  015CF8  52E5               	movf	postdec1,f,c
 16008  015CFA  006F FF9C  F044    	movff	indf1,btemp+26
 16009  015D00  52E5               	movf	postdec1,f,c
 16010  015D02  006F FF9C  F043    	movff	indf1,btemp+25
 16011  015D08  52E5               	movf	postdec1,f,c
 16012  015D0A  006F FF9C  F042    	movff	indf1,btemp+24
 16013  015D10  0EF8               	movlw	248
 16014  015D12  26E1               	addwf	fsr1l,f,c
 16015  015D14  0EFF               	movlw	255
 16016  015D16  22E2               	addwfc	fsr1h,f,c
 16017  015D18  503A               	movf	(btemp+16)^0,w,c
 16018  015D1A  2442               	addwf	(btemp+24)^0,w,c
 16019  015D1C  6E32               	movwf	(btemp+8)^0,c
 16020  015D1E  503B               	movf	(btemp+17)^0,w,c
 16021  015D20  2043               	addwfc	(btemp+25)^0,w,c
 16022  015D22  6E33               	movwf	(btemp+9)^0,c
 16023  015D24  503C               	movf	(btemp+18)^0,w,c
 16024  015D26  2044               	addwfc	(btemp+26)^0,w,c
 16025  015D28  6E34               	movwf	(btemp+10)^0,c
 16026  015D2A  503D               	movf	(btemp+19)^0,w,c
 16027  015D2C  2045               	addwfc	(btemp+27)^0,w,c
 16028  015D2E  6E35               	movwf	(btemp+11)^0,c
 16029  015D30  503E               	movf	(btemp+20)^0,w,c
 16030  015D32  2046               	addwfc	(btemp+28)^0,w,c
 16031  015D34  6E36               	movwf	(btemp+12)^0,c
 16032  015D36  503F               	movf	(btemp+21)^0,w,c
 16033  015D38  2047               	addwfc	(btemp+29)^0,w,c
 16034  015D3A  6E37               	movwf	(btemp+13)^0,c
 16035  015D3C  5040               	movf	(btemp+22)^0,w,c
 16036  015D3E  2048               	addwfc	(btemp+30)^0,w,c
 16037  015D40  6E38               	movwf	(btemp+14)^0,c
 16038  015D42  5041               	movf	(btemp+23)^0,w,c
 16039  015D44  2049               	addwfc	(btemp+31)^0,w,c
 16040  015D46  6E39               	movwf	(btemp+15)^0,c
 16041  015D48  0E00               	movlw	0
 16042  015D4A  2432               	addwf	(btemp+8)^0,w,c
 16043  015D4C  6E3A               	movwf	(btemp+16)^0,c
 16044  015D4E  0E77               	movlw	119
 16045  015D50  2033               	addwfc	(btemp+9)^0,w,c
 16046  015D52  6E3B               	movwf	(btemp+17)^0,c
 16047  015D54  0E76               	movlw	118
 16048  015D56  2034               	addwfc	(btemp+10)^0,w,c
 16049  015D58  6E3C               	movwf	(btemp+18)^0,c
 16050  015D5A  0E7C               	movlw	124
 16051  015D5C  2035               	addwfc	(btemp+11)^0,w,c
 16052  015D5E  6E3D               	movwf	(btemp+19)^0,c
 16053  015D60  0EFF               	movlw	255
 16054  015D62  2036               	addwfc	(btemp+12)^0,w,c
 16055  015D64  6E3E               	movwf	(btemp+20)^0,c
 16056  015D66  0EFF               	movlw	255
 16057  015D68  2037               	addwfc	(btemp+13)^0,w,c
 16058  015D6A  6E3F               	movwf	(btemp+21)^0,c
 16059  015D6C  0EFF               	movlw	255
 16060  015D6E  2038               	addwfc	(btemp+14)^0,w,c
 16061  015D70  6E40               	movwf	(btemp+22)^0,c
 16062  015D72  0EFF               	movlw	255
 16063  015D74  2039               	addwfc	(btemp+15)^0,w,c
 16064  015D76  6E41               	movwf	(btemp+23)^0,c
 16065  015D78                     L13:
 16066                           
 16067                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 16068  015D78  0EEA               	movlw	-22
 16069  015D7A  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16070  015D80  0EEB               	movlw	-21
 16071  015D82  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16072  015D88  0EEC               	movlw	-20
 16073  015D8A  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16074  015D90  0EED               	movlw	-19
 16075  015D92  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16076  015D98  0EEE               	movlw	-18
 16077  015D9A  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16078  015DA0  0EEF               	movlw	-17
 16079  015DA2  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16080  015DA8  0EF0               	movlw	-16
 16081  015DAA  0060  F103  FFE3   	movff	btemp+22,plusw1
 16082  015DB0  0EF1               	movlw	-15
 16083  015DB2  0060  F107  FFE3   	movff	btemp+23,plusw1
 16084                           
 16085                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 16086  015DB8  0EF2               	movlw	242
 16087  015DBA  26E1               	addwf	fsr1l,f,c
 16088  015DBC  0EFF               	movlw	255
 16089  015DBE  22E2               	addwfc	fsr1h,f,c
 16090  015DC0  0012               	return		;funcret
 16091  015DC2                     __end_of___year_to_secs:
 16092                           	opt callstack 0
 16093                           
 16094 ;; *************** function ___month_to_secs *****************
 16095 ;; Defined at:
 16096 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 16097 ;; Parameters:    Size  Location     Type
 16098 ;;  month           2  [STACK] int 
 16099 ;;  is_leap         2  [STACK] int 
 16100 ;; Auto vars:     Size  Location     Type
 16101 ;;  t               4  [STACK] long 
 16102 ;; Return value:  Size  Location     Type
 16103 ;;                  4  [STACK] long 
 16104 ;; Registers used:
 16105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 16106 ;; Tracked objects:
 16107 ;;		On entry : 0/0
 16108 ;;		On exit  : 0/0
 16109 ;;		Unchanged: 0/0
 16110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16115 ;;Total ram usage:        0 bytes
 16116 ;; Hardware stack levels used:    1
 16117 ;; Hardware stack levels required when called:   15
 16118 ;; This function calls:
 16119 ;;		Nothing
 16120 ;; This function is called by:
 16121 ;;		_rule_to_secs
 16122 ;; This function uses a reentrant model
 16123 ;;
 16124                           
 16125                           	psect	text44
 16126  00029E                     __ptext44:
 16127                           	opt callstack 0
 16128  00029E                     ___month_to_secs:
 16129                           	opt callstack 0
 16130                           
 16131                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16132  00029E  52E6               	movf	postinc1,f,c
 16133  0002A0  52E6               	movf	postinc1,f,c
 16134  0002A2  52E6               	movf	postinc1,f,c
 16135  0002A4  52E6               	movf	postinc1,f,c
 16136                           
 16137                           ;stkvar	_month @ sp[(-4)+-2]
 16138                           
 16139                           ;incstack = 0
 16140  0002A6  0EFA               	movlw	-6
 16141  0002A8  006F FF8C  F034    	movff	plusw1,btemp+10
 16142  0002AE  0EFB               	movlw	-5
 16143  0002B0  006F FF8C  F035    	movff	plusw1,btemp+11
 16144  0002B6  90D8               	bcf	status,0,c
 16145  0002B8  3634               	rlcf	(btemp+10)^0,f,c
 16146  0002BA  3635               	rlcf	(btemp+11)^0,f,c
 16147  0002BC  90D8               	bcf	status,0,c
 16148  0002BE  3634               	rlcf	(btemp+10)^0,f,c
 16149  0002C0  3635               	rlcf	(btemp+11)^0,f,c
 16150  0002C2  0E7B               	movlw	low ___month_to_secs@secs_through_month
 16151  0002C4  2434               	addwf	(btemp+10)^0,w,c
 16152  0002C6  6EF6               	movwf	tblptrl,c
 16153  0002C8  0EF8               	movlw	high ___month_to_secs@secs_through_month
 16154  0002CA  2035               	addwfc	(btemp+11)^0,w,c
 16155  0002CC  6EF7               	movwf	tblptrh,c
 16156  0002CE                     	if	1	;There are 3 active tblptr bytes
 16157  0002CE  6AF8               	clrf	tblptru,c
 16158  0002D0  0E00               	movlw	low (__mediumconst shr (0+16))
 16159  0002D2  22F8               	addwfc	tblptru,f,c
 16160  0002D4                     	endif
 16161  0002D4  0009               	tblrd		*+
 16162  0002D6  006F FFD4  F032    	movff	tablat,btemp+8
 16163  0002DC  0009               	tblrd		*+
 16164  0002DE  006F FFD4  F033    	movff	tablat,btemp+9
 16165  0002E4  0009               	tblrd		*+
 16166  0002E6  006F FFD4  F034    	movff	tablat,btemp+10
 16167  0002EC  0009               	tblrd		*+
 16168  0002EE  006F FFD4  F035    	movff	tablat,btemp+11
 16169                           
 16170                           ;stkvar	_t @ sp[(-4)+0]
 16171  0002F4  0EFC               	movlw	-4
 16172  0002F6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16173  0002FC  0EFD               	movlw	-3
 16174  0002FE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16175  000304  0EFE               	movlw	-2
 16176  000306  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16177  00030C  0EFF               	movlw	-1
 16178  00030E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16179                           
 16180                           ;stkvar	_is_leap @ sp[(-4)+-4]
 16181  000314  0EF8               	movlw	-8
 16182  000316  006F FF8C  F02A    	movff	plusw1,btemp
 16183  00031C  0EF9               	movlw	-7
 16184  00031E  50E3               	movf	plusw1,w,c
 16185  000320  102A               	iorwf	btemp^0,w,c
 16186  000322  B4D8               	btfsc	status,2,c
 16187  000324  D01D               	goto	l11754
 16188                           
 16189                           ;stkvar	_month @ sp[(-4)+-2]
 16190  000326  0EFB               	movlw	-5
 16191  000328  BEE3               	btfsc	plusw1,7,c
 16192  00032A  D01A               	goto	l11754
 16193  00032C  0EFB               	movlw	-5
 16194  00032E  50E3               	movf	plusw1,w,c
 16195  000330  E108               	bnz	u10870
 16196  000332  0EFA               	movlw	-6
 16197  000334  006F FF8C  F02A    	movff	plusw1,btemp
 16198  00033A  0E02               	movlw	2
 16199  00033C  5E2A               	subwf	btemp^0,f,c
 16200  00033E  A0D8               	btfss	status,0,c
 16201  000340  D00F               	goto	l11754
 16202  000342                     u10870:
 16203                           
 16204                           ;stkvar	_t @ sp[(-4)+0]
 16205  000342  50E1               	movf	fsr1l,w,c
 16206  000344  0FFC               	addlw	-4
 16207  000346  6ED9               	movwf	fsr2l,c
 16208  000348  50E2               	movf	fsr1h,w,c
 16209  00034A  6EDA               	movwf	fsr2h,c
 16210  00034C  0EFF               	movlw	255
 16211  00034E  22DA               	addwfc	fsr2h,f,c
 16212  000350  0E80               	movlw	128
 16213  000352  26DE               	addwf	postinc2,f,c
 16214  000354  0E51               	movlw	81
 16215  000356  22DE               	addwfc	postinc2,f,c
 16216  000358  0E01               	movlw	1
 16217  00035A  22DE               	addwfc	postinc2,f,c
 16218  00035C  0E00               	movlw	0
 16219  00035E  22DE               	addwfc	postinc2,f,c
 16220  000360                     l11754:
 16221                           
 16222                           ;stkvar	_t @ sp[(-4)+0]
 16223  000360  0EFC               	movlw	-4
 16224  000362  006F FF8C  F02A    	movff	plusw1,btemp
 16225  000368  0EFD               	movlw	-3
 16226  00036A  006F FF8C  F02B    	movff	plusw1,btemp+1
 16227  000370  0EFE               	movlw	-2
 16228  000372  006F FF8C  F02C    	movff	plusw1,btemp+2
 16229  000378  0EFF               	movlw	-1
 16230  00037A  006F FF8C  F02D    	movff	plusw1,btemp+3
 16231                           
 16232                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 16233  000380  0EF8               	movlw	248
 16234  000382  26E1               	addwf	fsr1l,f,c
 16235  000384  0EFF               	movlw	255
 16236  000386  22E2               	addwfc	fsr1h,f,c
 16237  000388  0012               	return		;funcret
 16238  00038A                     __end_of___month_to_secs:
 16239                           	opt callstack 0
 16240                           
 16241 ;; *************** function _do_tzset *****************
 16242 ;; Defined at:
 16243 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16244 ;; Parameters:    Size  Location     Type
 16245 ;;		None
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;  s               2  [STACK] PTR const unsigned char 
 16248 ;;		 -> __gmt(4), 
 16249 ;; Return value:  Size  Location     Type
 16250 ;;                  1  [STACK] void 
 16251 ;; Registers used:
 16252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16253 ;; Tracked objects:
 16254 ;;		On entry : 0/39
 16255 ;;		On exit  : 0/0
 16256 ;;		Unchanged: 0/0
 16257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16262 ;;Total ram usage:        0 bytes
 16263 ;; Hardware stack levels used:    1
 16264 ;; Hardware stack levels required when called:   18
 16265 ;; This function calls:
 16266 ;;		_getname
 16267 ;;		_getoff
 16268 ;;		_getrule
 16269 ;; This function is called by:
 16270 ;;		___secs_to_zone
 16271 ;; This function uses a reentrant model
 16272 ;;
 16273                           
 16274                           	psect	text45
 16275  01BFFA                     __ptext45:
 16276                           	opt callstack 0
 16277  01BFFA                     _do_tzset:
 16278                           	opt callstack 0
 16279                           
 16280                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16281  01BFFA  52E6               	movf	postinc1,f,c
 16282  01BFFC  52E6               	movf	postinc1,f,c
 16283                           
 16284                           ;stkvar	_s @ sp[(-2)+0]
 16285                           
 16286                           ;incstack = 0
 16287  01BFFE  0EF9               	movlw	high ___gmt
 16288  01C000  6E2A               	movwf	btemp^0,c
 16289  01C002  0EFF               	movlw	-1
 16290  01C004  0060  F0AB  FFE3   	movff	btemp,plusw1
 16291  01C00A  0EE7               	movlw	low ___gmt
 16292  01C00C  6E2A               	movwf	btemp^0,c
 16293  01C00E  0EFE               	movlw	-2
 16294  01C010  0060  F0AB  FFE3   	movff	btemp,plusw1
 16295                           
 16296                           ;stkvar	_s @ sp[(-2)+0]
 16297  01C016  0EFE               	movlw	254
 16298  01C018  24E1               	addwf	fsr1l,w,c
 16299  01C01A  6E2A               	movwf	btemp^0,c
 16300  01C01C  0EFF               	movlw	255
 16301  01C01E  20E2               	addwfc	fsr1h,w,c
 16302  01C020  6E2B               	movwf	(btemp+1)^0,c
 16303  01C022  0060  F0AB  FFE6   	movff	btemp,postinc1
 16304  01C028  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16305  01C02E  0EF6               	movlw	low _std_name
 16306  01C030  6EE6               	movwf	postinc1,c
 16307  01C032  0E01               	movlw	high _std_name
 16308  01C034  6EE6               	movwf	postinc1,c
 16309  01C036  ECD1  F0D8         	call	_getname	;wreg free
 16310  01C03A  0EF6               	movlw	low _std_name
 16311  01C03C  0100               	movlb	0	; () banked
 16312  01C03E  6F6C               	movwf	___tzname& (0+255),b
 16313  01C040  0E01               	movlw	high _std_name
 16314  01C042  6F6D               	movwf	(___tzname+1)& (0+255),b
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;stkvar	_s @ sp[(-2)+0]
 16318  01C044  0EFE               	movlw	254
 16319  01C046  24E1               	addwf	fsr1l,w,c
 16320  01C048  6E2A               	movwf	btemp^0,c
 16321  01C04A  0EFF               	movlw	255
 16322  01C04C  20E2               	addwfc	fsr1h,w,c
 16323  01C04E  6E2B               	movwf	(btemp+1)^0,c
 16324  01C050  0060  F0AB  FFE6   	movff	btemp,postinc1
 16325  01C056  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16326  01C05C  EC5C  F0E8         	call	_getoff	;wreg free
 16327  01C060  0060  F0A8  F070   	movff	btemp,___timezone
 16328  01C066  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 16329  01C06C  0100               	movlb	0	; () banked
 16330  01C06E  0E00               	movlw	0
 16331  01C070  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 16332  01C072  0EFF               	movlw	-1
 16333  01C074  6F72               	movwf	(___timezone+2)& (0+255),b
 16334  01C076  6F73               	movwf	(___timezone+3)& (0+255),b
 16335                           
 16336                           ; BSR set to: 0
 16337                           ;stkvar	_s @ sp[(-2)+0]
 16338  01C078  0EFE               	movlw	254
 16339  01C07A  24E1               	addwf	fsr1l,w,c
 16340  01C07C  6E2A               	movwf	btemp^0,c
 16341  01C07E  0EFF               	movlw	255
 16342  01C080  20E2               	addwfc	fsr1h,w,c
 16343  01C082  6E2B               	movwf	(btemp+1)^0,c
 16344  01C084  0060  F0AB  FFE6   	movff	btemp,postinc1
 16345  01C08A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16346  01C090  0EEF               	movlw	low _dst_name
 16347  01C092  6EE6               	movwf	postinc1,c
 16348  01C094  0E01               	movlw	high _dst_name
 16349  01C096  6EE6               	movwf	postinc1,c
 16350  01C098  ECD1  F0D8         	call	_getname	;wreg free
 16351  01C09C  0EEF               	movlw	low _dst_name
 16352  01C09E  0100               	movlb	0	; () banked
 16353  01C0A0  6F6E               	movwf	(___tzname+2)& (0+255),b
 16354  01C0A2  0E01               	movlw	high _dst_name
 16355  01C0A4  6F6F               	movwf	(___tzname+3)& (0+255),b
 16356                           
 16357                           ; BSR set to: 0
 16358  01C0A6  0101               	movlb	1	; () banked
 16359  01C0A8  51EF               	movf	_dst_name& (0+255),w,b
 16360  01C0AA  B4D8               	btfsc	status,2,c
 16361  01C0AC  D070               	goto	l3977
 16362                           
 16363                           ; BSR set to: 1
 16364  01C0AE  0E00               	movlw	0
 16365  01C0B0  0100               	movlb	0	; () banked
 16366  01C0B2  6FB9               	movwf	(___daylight+1)& (0+255),b
 16367  01C0B4  0E01               	movlw	1
 16368  01C0B6  6FB8               	movwf	___daylight& (0+255),b
 16369                           
 16370                           ; BSR set to: 0
 16371                           ;stkvar	_s @ sp[(-2)+0]
 16372  01C0B8  50E1               	movf	fsr1l,w,c
 16373  01C0BA  0FFE               	addlw	-2
 16374  01C0BC  6ED9               	movwf	fsr2l,c
 16375  01C0BE  50E2               	movf	fsr1h,w,c
 16376  01C0C0  6EDA               	movwf	fsr2h,c
 16377  01C0C2  0EFF               	movlw	255
 16378  01C0C4  22DA               	addwfc	fsr2h,f,c
 16379  01C0C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16380  01C0CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16381  01C0D2                     	if	0	;tblptru may be non-zero
 16382  01C0D2                     	endif
 16383  01C0D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16384  01C0D2  0E00               	movlw	low (__mediumconst shr (0+16))
 16385  01C0D4  6EF8               	movwf	tblptru,c
 16386  01C0D6                     	endif
 16387  01C0D6  0008               	tblrd		*
 16388  01C0D8  50F5               	movf	tablat,w,c
 16389  01C0DA  0A2B               	xorlw	43
 16390  01C0DC  B4D8               	btfsc	status,2,c
 16391  01C0DE  D035               	goto	u15890
 16392                           
 16393                           ; BSR set to: 0
 16394                           ;stkvar	_s @ sp[(-2)+0]
 16395  01C0E0  50E1               	movf	fsr1l,w,c
 16396  01C0E2  0FFE               	addlw	-2
 16397  01C0E4  6ED9               	movwf	fsr2l,c
 16398  01C0E6  50E2               	movf	fsr1h,w,c
 16399  01C0E8  6EDA               	movwf	fsr2h,c
 16400  01C0EA  0EFF               	movlw	255
 16401  01C0EC  22DA               	addwfc	fsr2h,f,c
 16402  01C0EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16403  01C0F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16404  01C0FA                     	if	0	;tblptru may be non-zero
 16405  01C0FA                     	endif
 16406  01C0FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16407  01C0FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16408  01C0FC  6EF8               	movwf	tblptru,c
 16409  01C0FE                     	endif
 16410  01C0FE  0008               	tblrd		*
 16411  01C100  50F5               	movf	tablat,w,c
 16412  01C102  0A2D               	xorlw	45
 16413  01C104  B4D8               	btfsc	status,2,c
 16414  01C106  D021               	goto	u15890
 16415                           
 16416                           ; BSR set to: 0
 16417  01C108  0ED0               	movlw	208
 16418  01C10A  6E34               	movwf	(btemp+10)^0,c
 16419  01C10C  0EFF               	movlw	255
 16420  01C10E  6E35               	movwf	(btemp+11)^0,c
 16421                           
 16422                           ;stkvar	_s @ sp[(-2)+0]
 16423  01C110  50E1               	movf	fsr1l,w,c
 16424  01C112  0FFE               	addlw	-2
 16425  01C114  6ED9               	movwf	fsr2l,c
 16426  01C116  50E2               	movf	fsr1h,w,c
 16427  01C118  6EDA               	movwf	fsr2h,c
 16428  01C11A  0EFF               	movlw	255
 16429  01C11C  22DA               	addwfc	fsr2h,f,c
 16430  01C11E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16431  01C124  006F FF77 FFF7     	movff	postdec2,tblptrh
 16432  01C12A                     	if	0	;tblptru may be non-zero
 16433  01C12A                     	endif
 16434  01C12A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16435  01C12A  0E00               	movlw	low (__mediumconst shr (0+16))
 16436  01C12C  6EF8               	movwf	tblptru,c
 16437  01C12E                     	endif
 16438  01C12E  0008               	tblrd		*
 16439  01C130  50F5               	movf	tablat,w,c
 16440  01C132  6E32               	movwf	(btemp+8)^0,c
 16441  01C134  6A33               	clrf	(btemp+9)^0,c
 16442  01C136  5034               	movf	(btemp+10)^0,w,c
 16443  01C138  2632               	addwf	(btemp+8)^0,f,c
 16444  01C13A  5035               	movf	(btemp+11)^0,w,c
 16445  01C13C  2233               	addwfc	(btemp+9)^0,f,c
 16446  01C13E  5033               	movf	(btemp+9)^0,w,c
 16447  01C140  E119               	bnz	l16364
 16448  01C142  0E0A               	movlw	10
 16449  01C144  5C32               	subwf	(btemp+8)^0,w,c
 16450  01C146  B0D8               	btfsc	status,0,c
 16451  01C148  D015               	goto	l16364
 16452  01C14A                     u15890:
 16453                           
 16454                           ; BSR set to: 0
 16455                           ;stkvar	_s @ sp[(-2)+0]
 16456  01C14A  0EFE               	movlw	254
 16457  01C14C  24E1               	addwf	fsr1l,w,c
 16458  01C14E  6E2A               	movwf	btemp^0,c
 16459  01C150  0EFF               	movlw	255
 16460  01C152  20E2               	addwfc	fsr1h,w,c
 16461  01C154  6E2B               	movwf	(btemp+1)^0,c
 16462  01C156  0060  F0AB  FFE6   	movff	btemp,postinc1
 16463  01C15C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16464  01C162  EC5C  F0E8         	call	_getoff	;wreg free
 16465  01C166  0060  F0A8  F0B6   	movff	btemp,_dst_off
 16466  01C16C  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 16467  01C172  D012               	goto	l16366
 16468  01C174                     l16364:
 16469                           
 16470                           ; BSR set to: 0
 16471  01C174  0060  F1C0  F034   	movff	___timezone,btemp+10
 16472  01C17A  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 16473  01C180  0EF0               	movlw	240
 16474  01C182  2434               	addwf	(btemp+10)^0,w,c
 16475  01C184  6FB6               	movwf	_dst_off& (0+255),b
 16476  01C186  0EF1               	movlw	241
 16477  01C188  2035               	addwfc	(btemp+11)^0,w,c
 16478  01C18A  6FB7               	movwf	(_dst_off+1)& (0+255),b
 16479  01C18C  D005               	goto	l16366
 16480  01C18E                     l3977:
 16481                           
 16482                           ; BSR set to: 1
 16483  01C18E  0100               	movlb	0	; () banked
 16484  01C190  6BB8               	clrf	___daylight& (0+255),b
 16485  01C192  6BB9               	clrf	(___daylight+1)& (0+255),b
 16486  01C194  6BB6               	clrf	_dst_off& (0+255),b
 16487  01C196  6BB7               	clrf	(_dst_off+1)& (0+255),b
 16488  01C198                     l16366:
 16489                           
 16490                           ;stkvar	_s @ sp[(-2)+0]
 16491  01C198  50E1               	movf	fsr1l,w,c
 16492  01C19A  0FFE               	addlw	-2
 16493  01C19C  6ED9               	movwf	fsr2l,c
 16494  01C19E  50E2               	movf	fsr1h,w,c
 16495  01C1A0  6EDA               	movwf	fsr2h,c
 16496  01C1A2  0EFF               	movlw	255
 16497  01C1A4  22DA               	addwfc	fsr2h,f,c
 16498  01C1A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16499  01C1AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16500  01C1B2                     	if	0	;tblptru may be non-zero
 16501  01C1B2                     	endif
 16502  01C1B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16503  01C1B2  0E00               	movlw	low (__mediumconst shr (0+16))
 16504  01C1B4  6EF8               	movwf	tblptru,c
 16505  01C1B6                     	endif
 16506  01C1B6  0008               	tblrd		*
 16507  01C1B8  50F5               	movf	tablat,w,c
 16508  01C1BA  0A2C               	xorlw	44
 16509  01C1BC  A4D8               	btfss	status,2,c
 16510  01C1BE  D023               	goto	l16372
 16511                           
 16512                           ;stkvar	_s @ sp[(-2)+0]
 16513  01C1C0  0EFE               	movlw	-2
 16514  01C1C2  50E3               	movf	plusw1,w,c
 16515  01C1C4  0F01               	addlw	1
 16516  01C1C6  6E2A               	movwf	btemp^0,c
 16517  01C1C8  0EFE               	movlw	-2
 16518  01C1CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 16519  01C1D0  6A2A               	clrf	btemp^0,c
 16520  01C1D2  0EFF               	movlw	-1
 16521  01C1D4  50E3               	movf	plusw1,w,c
 16522  01C1D6  202A               	addwfc	btemp^0,w,c
 16523  01C1D8  6E2A               	movwf	btemp^0,c
 16524  01C1DA  0EFF               	movlw	-1
 16525  01C1DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 16526  01C1E2  0EE5               	movlw	low _r0
 16527  01C1E4  6EE6               	movwf	postinc1,c
 16528  01C1E6  0E01               	movlw	high _r0
 16529  01C1E8  6EE6               	movwf	postinc1,c
 16530                           
 16531                           ;stkvar	_s @ sp[(-4)+0]
 16532  01C1EA  0EFC               	movlw	252
 16533  01C1EC  24E1               	addwf	fsr1l,w,c
 16534  01C1EE  6E2A               	movwf	btemp^0,c
 16535  01C1F0  0EFF               	movlw	255
 16536  01C1F2  20E2               	addwfc	fsr1h,w,c
 16537  01C1F4  6E2B               	movwf	(btemp+1)^0,c
 16538  01C1F6  0060  F0AB  FFE6   	movff	btemp,postinc1
 16539  01C1FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16540  01C202  EC3D  F0E1         	call	_getrule	;wreg free
 16541  01C206                     l16372:
 16542                           
 16543                           ;stkvar	_s @ sp[(-2)+0]
 16544  01C206  50E1               	movf	fsr1l,w,c
 16545  01C208  0FFE               	addlw	-2
 16546  01C20A  6ED9               	movwf	fsr2l,c
 16547  01C20C  50E2               	movf	fsr1h,w,c
 16548  01C20E  6EDA               	movwf	fsr2h,c
 16549  01C210  0EFF               	movlw	255
 16550  01C212  22DA               	addwfc	fsr2h,f,c
 16551  01C214  006F FF7B FFF6     	movff	postinc2,tblptrl
 16552  01C21A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16553  01C220                     	if	0	;tblptru may be non-zero
 16554  01C220                     	endif
 16555  01C220                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16556  01C220  0E00               	movlw	low (__mediumconst shr (0+16))
 16557  01C222  6EF8               	movwf	tblptru,c
 16558  01C224                     	endif
 16559  01C224  0008               	tblrd		*
 16560  01C226  50F5               	movf	tablat,w,c
 16561  01C228  0A2C               	xorlw	44
 16562  01C22A  A4D8               	btfss	status,2,c
 16563  01C22C  D023               	goto	l3985
 16564                           
 16565                           ;stkvar	_s @ sp[(-2)+0]
 16566  01C22E  0EFE               	movlw	-2
 16567  01C230  50E3               	movf	plusw1,w,c
 16568  01C232  0F01               	addlw	1
 16569  01C234  6E2A               	movwf	btemp^0,c
 16570  01C236  0EFE               	movlw	-2
 16571  01C238  0060  F0AB  FFE3   	movff	btemp,plusw1
 16572  01C23E  6A2A               	clrf	btemp^0,c
 16573  01C240  0EFF               	movlw	-1
 16574  01C242  50E3               	movf	plusw1,w,c
 16575  01C244  202A               	addwfc	btemp^0,w,c
 16576  01C246  6E2A               	movwf	btemp^0,c
 16577  01C248  0EFF               	movlw	-1
 16578  01C24A  0060  F0AB  FFE3   	movff	btemp,plusw1
 16579  01C250  0EDB               	movlw	low _r1
 16580  01C252  6EE6               	movwf	postinc1,c
 16581  01C254  0E01               	movlw	high _r1
 16582  01C256  6EE6               	movwf	postinc1,c
 16583                           
 16584                           ;stkvar	_s @ sp[(-4)+0]
 16585  01C258  0EFC               	movlw	252
 16586  01C25A  24E1               	addwf	fsr1l,w,c
 16587  01C25C  6E2A               	movwf	btemp^0,c
 16588  01C25E  0EFF               	movlw	255
 16589  01C260  20E2               	addwfc	fsr1h,w,c
 16590  01C262  6E2B               	movwf	(btemp+1)^0,c
 16591  01C264  0060  F0AB  FFE6   	movff	btemp,postinc1
 16592  01C26A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16593  01C270  EC3D  F0E1         	call	_getrule	;wreg free
 16594  01C274                     l3985:
 16595                           
 16596                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 16597  01C274  52E5               	movf	postdec1,f,c
 16598  01C276  52E5               	movf	postdec1,f,c
 16599  01C278  0012               	return		;funcret
 16600  01C27A                     __end_of_do_tzset:
 16601                           	opt callstack 0
 16602                           
 16603 ;; *************** function _getrule *****************
 16604 ;; Defined at:
 16605 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16606 ;; Parameters:    Size  Location     Type
 16607 ;;  p               2  [STACK] PTR PTR const unsigned c
 16608 ;;		 -> s(2), 
 16609 ;;  rule            2  [STACK] PTR int 
 16610 ;;		 -> r1(10), r0(10), 
 16611 ;; Auto vars:     Size  Location     Type
 16612 ;;  r               2  [STACK] int 
 16613 ;; Return value:  Size  Location     Type
 16614 ;;                  1  [STACK] void 
 16615 ;; Registers used:
 16616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16617 ;; Tracked objects:
 16618 ;;		On entry : 0/0
 16619 ;;		On exit  : 0/0
 16620 ;;		Unchanged: 0/0
 16621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16626 ;;Total ram usage:        0 bytes
 16627 ;; Hardware stack levels used:    1
 16628 ;; Hardware stack levels required when called:   17
 16629 ;; This function calls:
 16630 ;;		_getint
 16631 ;;		_getoff
 16632 ;; This function is called by:
 16633 ;;		_do_tzset
 16634 ;; This function uses a reentrant model
 16635 ;;
 16636                           
 16637                           	psect	text46
 16638  01C27A                     __ptext46:
 16639                           	opt callstack 0
 16640  01C27A                     _getrule:
 16641                           	opt callstack 0
 16642                           
 16643                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16644  01C27A  52E6               	movf	postinc1,f,c
 16645  01C27C  52E6               	movf	postinc1,f,c
 16646                           
 16647                           ;stkvar	_p @ sp[(-2)+-2]
 16648                           
 16649                           ;incstack = 0
 16650  01C27E  0EFC               	movlw	-4
 16651  01C280  006F FF8F FFD9     	movff	plusw1,fsr2l
 16652  01C286  0EFD               	movlw	-3
 16653  01C288  006F FF8F FFDA     	movff	plusw1,fsr2h
 16654  01C28E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16655  01C294  006F FF77 FFF7     	movff	postdec2,tblptrh
 16656  01C29A                     	if	0	;tblptru may be non-zero
 16657  01C29A                     	endif
 16658  01C29A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16659  01C29A  0E00               	movlw	low (__mediumconst shr (0+16))
 16660  01C29C  6EF8               	movwf	tblptru,c
 16661  01C29E                     	endif
 16662  01C29E  0008               	tblrd		*
 16663  01C2A0  50F5               	movf	tablat,w,c
 16664  01C2A2  6E34               	movwf	(btemp+10)^0,c
 16665  01C2A4  6A35               	clrf	(btemp+11)^0,c
 16666                           
 16667                           ;stkvar	_rule @ sp[(-2)+-4]
 16668  01C2A6  0EFA               	movlw	-6
 16669  01C2A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16670  01C2AE  0EFB               	movlw	-5
 16671  01C2B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16672  01C2B6  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 16673  01C2BC  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 16674  01C2C2  006F FF78  F034    	movff	postinc2,btemp+10
 16675  01C2C8  006F FF74  F035    	movff	postdec2,btemp+11
 16676                           
 16677                           ;stkvar	_r @ sp[(-2)+0]
 16678  01C2CE  0EFE               	movlw	-2
 16679  01C2D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16680  01C2D6  0EFF               	movlw	-1
 16681  01C2D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16682                           
 16683                           ;stkvar	_r @ sp[(-2)+0]
 16684  01C2DE  0EFE               	movlw	-2
 16685  01C2E0  006F FF8C  F02A    	movff	plusw1,btemp
 16686  01C2E6  0E4D               	movlw	77
 16687  01C2E8  182A               	xorwf	btemp^0,w,c
 16688  01C2EA  E104               	bnz	u15470
 16689  01C2EC  0EFF               	movlw	-1
 16690  01C2EE  50E3               	movf	plusw1,w,c
 16691  01C2F0  B4D8               	btfsc	status,2,c
 16692  01C2F2  D036               	goto	l16062
 16693  01C2F4                     u15470:
 16694                           
 16695                           ;stkvar	_r @ sp[(-2)+0]
 16696  01C2F4  0EFE               	movlw	-2
 16697  01C2F6  006F FF8C  F02A    	movff	plusw1,btemp
 16698  01C2FC  0E4A               	movlw	74
 16699  01C2FE  182A               	xorwf	btemp^0,w,c
 16700  01C300  E110               	bnz	l16058
 16701  01C302  0EFF               	movlw	-1
 16702  01C304  50E3               	movf	plusw1,w,c
 16703  01C306  A4D8               	btfss	status,2,c
 16704  01C308  D00C               	goto	l16058
 16705                           
 16706                           ;stkvar	_p @ sp[(-2)+-2]
 16707  01C30A  0EFC               	movlw	-4
 16708  01C30C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16709  01C312  0EFD               	movlw	-3
 16710  01C314  006F FF8F FFDA     	movff	plusw1,fsr2h
 16711  01C31A  2ADE               	incf	postinc2,f,c
 16712  01C31C  0E00               	movlw	0
 16713  01C31E  22DD               	addwfc	postdec2,f,c
 16714  01C320  D00C               	goto	l16060
 16715  01C322                     l16058:
 16716                           
 16717                           ;stkvar	_rule @ sp[(-2)+-4]
 16718  01C322  0EFA               	movlw	-6
 16719  01C324  006F FF8F FFD9     	movff	plusw1,fsr2l
 16720  01C32A  0EFB               	movlw	-5
 16721  01C32C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16722  01C332  0E00               	movlw	0
 16723  01C334  6EDE               	movwf	postinc2,c
 16724  01C336  0E00               	movlw	0
 16725  01C338  6EDD               	movwf	postdec2,c
 16726  01C33A                     l16060:
 16727                           
 16728                           ;stkvar	_p @ sp[(-2)+-2]
 16729  01C33A  0EFC               	movlw	-4
 16730  01C33C  006F FF8F FFE6     	movff	plusw1,postinc1
 16731  01C342  006F FF8F FFE6     	movff	plusw1,postinc1
 16732  01C348  ECD6  F000         	call	_getint	;wreg free
 16733                           
 16734                           ;stkvar	_rule @ sp[(-2)+-4]
 16735  01C34C  0EFA               	movlw	-6
 16736  01C34E  006F FF8C  F034    	movff	plusw1,btemp+10
 16737  01C354  0EFB               	movlw	-5
 16738  01C356  006F FF8C  F035    	movff	plusw1,btemp+11
 16739  01C35C  0E02               	movlw	2
 16740  01C35E  D06D               	goto	L16
 16741  01C360                     l16062:
 16742                           
 16743                           ;stkvar	_p @ sp[(-2)+-2]
 16744  01C360  0EFC               	movlw	-4
 16745  01C362  006F FF8F FFD9     	movff	plusw1,fsr2l
 16746  01C368  0EFD               	movlw	-3
 16747  01C36A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16748  01C370  2ADE               	incf	postinc2,f,c
 16749  01C372  0E00               	movlw	0
 16750  01C374  22DD               	addwfc	postdec2,f,c
 16751                           
 16752                           ;stkvar	_p @ sp[(-2)+-2]
 16753  01C376  0EFC               	movlw	-4
 16754  01C378  006F FF8F FFE6     	movff	plusw1,postinc1
 16755  01C37E  006F FF8F FFE6     	movff	plusw1,postinc1
 16756  01C384  ECD6  F000         	call	_getint	;wreg free
 16757                           
 16758                           ;stkvar	_rule @ sp[(-2)+-4]
 16759  01C388  0EFA               	movlw	-6
 16760  01C38A  006F FF8C  F034    	movff	plusw1,btemp+10
 16761  01C390  0EFB               	movlw	-5
 16762  01C392  006F FF8C  F035    	movff	plusw1,btemp+11
 16763  01C398  0E02               	movlw	2
 16764  01C39A  2434               	addwf	(btemp+10)^0,w,c
 16765  01C39C  6ED9               	movwf	fsr2l,c
 16766  01C39E  0E00               	movlw	0
 16767  01C3A0  2035               	addwfc	(btemp+11)^0,w,c
 16768  01C3A2  6EDA               	movwf	fsr2h,c
 16769  01C3A4  0060  F0AB  FFDE   	movff	btemp,postinc2
 16770  01C3AA  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16771                           
 16772                           ;stkvar	_p @ sp[(-2)+-2]
 16773  01C3B0  0EFC               	movlw	-4
 16774  01C3B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16775  01C3B8  0EFD               	movlw	-3
 16776  01C3BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16777  01C3C0  2ADE               	incf	postinc2,f,c
 16778  01C3C2  0E00               	movlw	0
 16779  01C3C4  22DD               	addwfc	postdec2,f,c
 16780                           
 16781                           ;stkvar	_p @ sp[(-2)+-2]
 16782  01C3C6  0EFC               	movlw	-4
 16783  01C3C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16784  01C3CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16785  01C3D4  ECD6  F000         	call	_getint	;wreg free
 16786                           
 16787                           ;stkvar	_rule @ sp[(-2)+-4]
 16788  01C3D8  0EFA               	movlw	-6
 16789  01C3DA  006F FF8C  F034    	movff	plusw1,btemp+10
 16790  01C3E0  0EFB               	movlw	-5
 16791  01C3E2  006F FF8C  F035    	movff	plusw1,btemp+11
 16792  01C3E8  0E04               	movlw	4
 16793  01C3EA  2434               	addwf	(btemp+10)^0,w,c
 16794  01C3EC  6ED9               	movwf	fsr2l,c
 16795  01C3EE  0E00               	movlw	0
 16796  01C3F0  2035               	addwfc	(btemp+11)^0,w,c
 16797  01C3F2  6EDA               	movwf	fsr2h,c
 16798  01C3F4  0060  F0AB  FFDE   	movff	btemp,postinc2
 16799  01C3FA  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16800                           
 16801                           ;stkvar	_p @ sp[(-2)+-2]
 16802  01C400  0EFC               	movlw	-4
 16803  01C402  006F FF8F FFD9     	movff	plusw1,fsr2l
 16804  01C408  0EFD               	movlw	-3
 16805  01C40A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16806  01C410  2ADE               	incf	postinc2,f,c
 16807  01C412  0E00               	movlw	0
 16808  01C414  22DD               	addwfc	postdec2,f,c
 16809                           
 16810                           ;stkvar	_p @ sp[(-2)+-2]
 16811  01C416  0EFC               	movlw	-4
 16812  01C418  006F FF8F FFE6     	movff	plusw1,postinc1
 16813  01C41E  006F FF8F FFE6     	movff	plusw1,postinc1
 16814  01C424  ECD6  F000         	call	_getint	;wreg free
 16815                           
 16816                           ;stkvar	_rule @ sp[(-2)+-4]
 16817  01C428  0EFA               	movlw	-6
 16818  01C42A  006F FF8C  F034    	movff	plusw1,btemp+10
 16819  01C430  0EFB               	movlw	-5
 16820  01C432  006F FF8C  F035    	movff	plusw1,btemp+11
 16821  01C438  0E06               	movlw	6
 16822  01C43A                     L16:
 16823  01C43A  2434               	addwf	(btemp+10)^0,w,c
 16824  01C43C  6ED9               	movwf	fsr2l,c
 16825  01C43E  0E00               	movlw	0
 16826  01C440  2035               	addwfc	(btemp+11)^0,w,c
 16827  01C442  6EDA               	movwf	fsr2h,c
 16828  01C444  0060  F0AB  FFDE   	movff	btemp,postinc2
 16829  01C44A  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16830                           
 16831                           ;stkvar	_p @ sp[(-2)+-2]
 16832  01C450  0EFC               	movlw	-4
 16833  01C452  006F FF8F FFD9     	movff	plusw1,fsr2l
 16834  01C458  0EFD               	movlw	-3
 16835  01C45A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16836  01C460  006F FF7B FFF6     	movff	postinc2,tblptrl
 16837  01C466  006F FF77 FFF7     	movff	postdec2,tblptrh
 16838  01C46C                     	if	0	;tblptru may be non-zero
 16839  01C46C                     	endif
 16840  01C46C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16841  01C46C  0E00               	movlw	low (__mediumconst shr (0+16))
 16842  01C46E  6EF8               	movwf	tblptru,c
 16843  01C470                     	endif
 16844  01C470  0008               	tblrd		*
 16845  01C472  50F5               	movf	tablat,w,c
 16846  01C474  0A2F               	xorlw	47
 16847  01C476  A4D8               	btfss	status,2,c
 16848  01C478  D029               	goto	l16078
 16849                           
 16850                           ;stkvar	_p @ sp[(-2)+-2]
 16851  01C47A  0EFC               	movlw	-4
 16852  01C47C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16853  01C482  0EFD               	movlw	-3
 16854  01C484  006F FF8F FFDA     	movff	plusw1,fsr2h
 16855  01C48A  2ADE               	incf	postinc2,f,c
 16856  01C48C  0E00               	movlw	0
 16857  01C48E  22DD               	addwfc	postdec2,f,c
 16858                           
 16859                           ;stkvar	_p @ sp[(-2)+-2]
 16860  01C490  0EFC               	movlw	-4
 16861  01C492  006F FF8F FFE6     	movff	plusw1,postinc1
 16862  01C498  006F FF8F FFE6     	movff	plusw1,postinc1
 16863  01C49E  EC5C  F0E8         	call	_getoff	;wreg free
 16864                           
 16865                           ;stkvar	_rule @ sp[(-2)+-4]
 16866  01C4A2  0EFA               	movlw	-6
 16867  01C4A4  006F FF8C  F034    	movff	plusw1,btemp+10
 16868  01C4AA  0EFB               	movlw	-5
 16869  01C4AC  006F FF8C  F035    	movff	plusw1,btemp+11
 16870  01C4B2  0E08               	movlw	8
 16871  01C4B4  2434               	addwf	(btemp+10)^0,w,c
 16872  01C4B6  6ED9               	movwf	fsr2l,c
 16873  01C4B8  0E00               	movlw	0
 16874  01C4BA  2035               	addwfc	(btemp+11)^0,w,c
 16875  01C4BC  6EDA               	movwf	fsr2h,c
 16876  01C4BE  0060  F0AB  FFDE   	movff	btemp,postinc2
 16877  01C4C4  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16878  01C4CA  D012               	goto	l3950
 16879  01C4CC                     l16078:
 16880                           
 16881                           ;stkvar	_rule @ sp[(-2)+-4]
 16882  01C4CC  0EFA               	movlw	-6
 16883  01C4CE  006F FF8C  F034    	movff	plusw1,btemp+10
 16884  01C4D4  0EFB               	movlw	-5
 16885  01C4D6  006F FF8C  F035    	movff	plusw1,btemp+11
 16886  01C4DC  0E08               	movlw	8
 16887  01C4DE  2434               	addwf	(btemp+10)^0,w,c
 16888  01C4E0  6ED9               	movwf	fsr2l,c
 16889  01C4E2  0E00               	movlw	0
 16890  01C4E4  2035               	addwfc	(btemp+11)^0,w,c
 16891  01C4E6  6EDA               	movwf	fsr2h,c
 16892  01C4E8  0E20               	movlw	32
 16893  01C4EA  6EDE               	movwf	postinc2,c
 16894  01C4EC  0E1C               	movlw	28
 16895  01C4EE  6EDD               	movwf	postdec2,c
 16896  01C4F0                     l3950:
 16897                           
 16898                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16899  01C4F0  0EFA               	movlw	250
 16900  01C4F2  26E1               	addwf	fsr1l,f,c
 16901  01C4F4  0EFF               	movlw	255
 16902  01C4F6  22E2               	addwfc	fsr1h,f,c
 16903  01C4F8  0012               	return		;funcret
 16904  01C4FA                     __end_of_getrule:
 16905                           	opt callstack 0
 16906                           
 16907 ;; *************** function _getoff *****************
 16908 ;; Defined at:
 16909 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16910 ;; Parameters:    Size  Location     Type
 16911 ;;  p               2  [STACK] PTR PTR const unsigned c
 16912 ;;		 -> s(2), 
 16913 ;; Auto vars:     Size  Location     Type
 16914 ;;  off             2  [STACK] int 
 16915 ;;  neg             2  [STACK] int 
 16916 ;; Return value:  Size  Location     Type
 16917 ;;                  2  [STACK] int 
 16918 ;; Registers used:
 16919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16920 ;; Tracked objects:
 16921 ;;		On entry : 0/0
 16922 ;;		On exit  : 0/0
 16923 ;;		Unchanged: 0/0
 16924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16929 ;;Total ram usage:        0 bytes
 16930 ;; Hardware stack levels used:    1
 16931 ;; Hardware stack levels required when called:   16
 16932 ;; This function calls:
 16933 ;;		_getint
 16934 ;; This function is called by:
 16935 ;;		_getrule
 16936 ;;		_do_tzset
 16937 ;; This function uses a reentrant model
 16938 ;;
 16939                           
 16940                           	psect	text47
 16941  01D0B8                     __ptext47:
 16942                           	opt callstack 0
 16943  01D0B8                     _getoff:
 16944                           	opt callstack 0
 16945                           
 16946                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16947  01D0B8  52E6               	movf	postinc1,f,c
 16948  01D0BA  52E6               	movf	postinc1,f,c
 16949  01D0BC  52E6               	movf	postinc1,f,c
 16950  01D0BE  52E6               	movf	postinc1,f,c
 16951                           
 16952                           ;stkvar	_neg @ sp[(-4)+2]
 16953                           
 16954                           ;incstack = 0
 16955  01D0C0  0EFE               	movlw	-2
 16956  01D0C2  6AE3               	clrf	plusw1,c
 16957  01D0C4  0EFF               	movlw	-1
 16958  01D0C6  6AE3               	clrf	plusw1,c
 16959                           
 16960                           ;stkvar	_p @ sp[(-4)+-2]
 16961  01D0C8  0EFA               	movlw	-6
 16962  01D0CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16963  01D0D0  0EFB               	movlw	-5
 16964  01D0D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16965  01D0D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 16966  01D0DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 16967  01D0E4                     	if	0	;tblptru may be non-zero
 16968  01D0E4                     	endif
 16969  01D0E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16970  01D0E4  0E00               	movlw	low (__mediumconst shr (0+16))
 16971  01D0E6  6EF8               	movwf	tblptru,c
 16972  01D0E8                     	endif
 16973  01D0E8  0008               	tblrd		*
 16974  01D0EA  50F5               	movf	tablat,w,c
 16975  01D0EC  0A2D               	xorlw	45
 16976  01D0EE  A4D8               	btfss	status,2,c
 16977  01D0F0  D018               	goto	l10890
 16978                           
 16979                           ;stkvar	_p @ sp[(-4)+-2]
 16980  01D0F2  0EFA               	movlw	-6
 16981  01D0F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16982  01D0FA  0EFB               	movlw	-5
 16983  01D0FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16984  01D102  2ADE               	incf	postinc2,f,c
 16985  01D104  0E00               	movlw	0
 16986  01D106  22DD               	addwfc	postdec2,f,c
 16987  01D108  0E01               	movlw	1
 16988  01D10A  6E34               	movwf	(btemp+10)^0,c
 16989  01D10C  0E00               	movlw	0
 16990  01D10E  6E35               	movwf	(btemp+11)^0,c
 16991                           
 16992                           ;stkvar	_neg @ sp[(-4)+2]
 16993  01D110  0EFE               	movlw	-2
 16994  01D112  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16995  01D118  0EFF               	movlw	-1
 16996  01D11A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16997  01D120  D020               	goto	l10894
 16998  01D122                     l10890:
 16999                           
 17000                           ;stkvar	_p @ sp[(-4)+-2]
 17001  01D122  0EFA               	movlw	-6
 17002  01D124  006F FF8F FFD9     	movff	plusw1,fsr2l
 17003  01D12A  0EFB               	movlw	-5
 17004  01D12C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17005  01D132  006F FF7B FFF6     	movff	postinc2,tblptrl
 17006  01D138  006F FF77 FFF7     	movff	postdec2,tblptrh
 17007  01D13E                     	if	0	;tblptru may be non-zero
 17008  01D13E                     	endif
 17009  01D13E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17010  01D13E  0E00               	movlw	low (__mediumconst shr (0+16))
 17011  01D140  6EF8               	movwf	tblptru,c
 17012  01D142                     	endif
 17013  01D142  0008               	tblrd		*
 17014  01D144  50F5               	movf	tablat,w,c
 17015  01D146  0A2B               	xorlw	43
 17016  01D148  A4D8               	btfss	status,2,c
 17017  01D14A  D00B               	goto	l10894
 17018                           
 17019                           ;stkvar	_p @ sp[(-4)+-2]
 17020  01D14C  0EFA               	movlw	-6
 17021  01D14E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17022  01D154  0EFB               	movlw	-5
 17023  01D156  006F FF8F FFDA     	movff	plusw1,fsr2h
 17024  01D15C  2ADE               	incf	postinc2,f,c
 17025  01D15E  0E00               	movlw	0
 17026  01D160  22DD               	addwfc	postdec2,f,c
 17027  01D162                     l10894:
 17028                           
 17029                           ;stkvar	_p @ sp[(-4)+-2]
 17030  01D162  0EFA               	movlw	-6
 17031  01D164  006F FF8F FFE6     	movff	plusw1,postinc1
 17032  01D16A  006F FF8F FFE6     	movff	plusw1,postinc1
 17033  01D170  ECD6  F000         	call	_getint	;wreg free
 17034  01D174  0060  F0A8  F034   	movff	btemp,btemp+10
 17035  01D17A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 17036  01D180  0E10               	movlw	16
 17037  01D182  0234               	mulwf	(btemp+10)^0,c
 17038  01D184  006F FFCC  F032    	movff	prodl,btemp+8
 17039  01D18A  006F FFD0  F033    	movff	prodh,btemp+9
 17040  01D190  0235               	mulwf	(btemp+11)^0,c
 17041  01D192  50F3               	movf	prodl,w,c
 17042  01D194  2633               	addwf	(btemp+9)^0,f,c
 17043  01D196  0E0E               	movlw	14
 17044  01D198  0234               	mulwf	(btemp+10)^0,c
 17045  01D19A  50F3               	movf	prodl,w,c
 17046  01D19C  2633               	addwf	(btemp+9)^0,f,c
 17047                           
 17048                           ;stkvar	_off @ sp[(-4)+0]
 17049  01D19E  0EFC               	movlw	-4
 17050  01D1A0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17051  01D1A6  0EFD               	movlw	-3
 17052  01D1A8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17053                           
 17054                           ;stkvar	_p @ sp[(-4)+-2]
 17055  01D1AE  0EFA               	movlw	-6
 17056  01D1B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 17057  01D1B6  0EFB               	movlw	-5
 17058  01D1B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 17059  01D1BE  006F FF7B FFF6     	movff	postinc2,tblptrl
 17060  01D1C4  006F FF77 FFF7     	movff	postdec2,tblptrh
 17061  01D1CA                     	if	0	;tblptru may be non-zero
 17062  01D1CA                     	endif
 17063  01D1CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17064  01D1CA  0E00               	movlw	low (__mediumconst shr (0+16))
 17065  01D1CC  6EF8               	movwf	tblptru,c
 17066  01D1CE                     	endif
 17067  01D1CE  0008               	tblrd		*
 17068  01D1D0  50F5               	movf	tablat,w,c
 17069  01D1D2  0A3A               	xorlw	58
 17070  01D1D4  A4D8               	btfss	status,2,c
 17071  01D1D6  D064               	goto	l10908
 17072                           
 17073                           ;stkvar	_p @ sp[(-4)+-2]
 17074  01D1D8  0EFA               	movlw	-6
 17075  01D1DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 17076  01D1E0  0EFB               	movlw	-5
 17077  01D1E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 17078  01D1E8  2ADE               	incf	postinc2,f,c
 17079  01D1EA  0E00               	movlw	0
 17080  01D1EC  22DD               	addwfc	postdec2,f,c
 17081                           
 17082                           ;stkvar	_p @ sp[(-4)+-2]
 17083  01D1EE  0EFA               	movlw	-6
 17084  01D1F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17085  01D1F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17086  01D1FC  ECD6  F000         	call	_getint	;wreg free
 17087  01D200  0060  F0A8  F034   	movff	btemp,btemp+10
 17088  01D206  0060  F0AC  F035   	movff	btemp+1,btemp+11
 17089  01D20C  0E3C               	movlw	60
 17090  01D20E  0234               	mulwf	(btemp+10)^0,c
 17091  01D210  006F FFCC  F032    	movff	prodl,btemp+8
 17092  01D216  006F FFD0  F033    	movff	prodh,btemp+9
 17093  01D21C  0235               	mulwf	(btemp+11)^0,c
 17094  01D21E  50F3               	movf	prodl,w,c
 17095  01D220  2633               	addwf	(btemp+9)^0,f,c
 17096                           
 17097                           ;stkvar	_off @ sp[(-4)+0]
 17098  01D222  50E1               	movf	fsr1l,w,c
 17099  01D224  0FFC               	addlw	-4
 17100  01D226  6ED9               	movwf	fsr2l,c
 17101  01D228  50E2               	movf	fsr1h,w,c
 17102  01D22A  6EDA               	movwf	fsr2h,c
 17103  01D22C  0EFF               	movlw	255
 17104  01D22E  22DA               	addwfc	fsr2h,f,c
 17105  01D230  5032               	movf	(btemp+8)^0,w,c
 17106  01D232  26DE               	addwf	postinc2,f,c
 17107  01D234  5033               	movf	(btemp+9)^0,w,c
 17108  01D236  22DD               	addwfc	postdec2,f,c
 17109                           
 17110                           ;stkvar	_p @ sp[(-4)+-2]
 17111  01D238  0EFA               	movlw	-6
 17112  01D23A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17113  01D240  0EFB               	movlw	-5
 17114  01D242  006F FF8F FFDA     	movff	plusw1,fsr2h
 17115  01D248  006F FF7B FFF6     	movff	postinc2,tblptrl
 17116  01D24E  006F FF77 FFF7     	movff	postdec2,tblptrh
 17117  01D254                     	if	0	;tblptru may be non-zero
 17118  01D254                     	endif
 17119  01D254                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17120  01D254  0E00               	movlw	low (__mediumconst shr (0+16))
 17121  01D256  6EF8               	movwf	tblptru,c
 17122  01D258                     	endif
 17123  01D258  0008               	tblrd		*
 17124  01D25A  50F5               	movf	tablat,w,c
 17125  01D25C  0A3A               	xorlw	58
 17126  01D25E  A4D8               	btfss	status,2,c
 17127  01D260  D01F               	goto	l10908
 17128                           
 17129                           ;stkvar	_p @ sp[(-4)+-2]
 17130  01D262  0EFA               	movlw	-6
 17131  01D264  006F FF8F FFD9     	movff	plusw1,fsr2l
 17132  01D26A  0EFB               	movlw	-5
 17133  01D26C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17134  01D272  2ADE               	incf	postinc2,f,c
 17135  01D274  0E00               	movlw	0
 17136  01D276  22DD               	addwfc	postdec2,f,c
 17137                           
 17138                           ;stkvar	_p @ sp[(-4)+-2]
 17139  01D278  0EFA               	movlw	-6
 17140  01D27A  006F FF8F FFE6     	movff	plusw1,postinc1
 17141  01D280  006F FF8F FFE6     	movff	plusw1,postinc1
 17142  01D286  ECD6  F000         	call	_getint	;wreg free
 17143                           
 17144                           ;stkvar	_off @ sp[(-4)+0]
 17145  01D28A  50E1               	movf	fsr1l,w,c
 17146  01D28C  0FFC               	addlw	-4
 17147  01D28E  6ED9               	movwf	fsr2l,c
 17148  01D290  50E2               	movf	fsr1h,w,c
 17149  01D292  6EDA               	movwf	fsr2h,c
 17150  01D294  0EFF               	movlw	255
 17151  01D296  22DA               	addwfc	fsr2h,f,c
 17152  01D298  502A               	movf	btemp^0,w,c
 17153  01D29A  26DE               	addwf	postinc2,f,c
 17154  01D29C  502B               	movf	(btemp+1)^0,w,c
 17155  01D29E  22DD               	addwfc	postdec2,f,c
 17156  01D2A0                     l10908:
 17157                           
 17158                           ;stkvar	_neg @ sp[(-4)+2]
 17159  01D2A0  0EFE               	movlw	-2
 17160  01D2A2  006F FF8C  F02A    	movff	plusw1,btemp
 17161  01D2A8  0EFF               	movlw	-1
 17162  01D2AA  50E3               	movf	plusw1,w,c
 17163  01D2AC  102A               	iorwf	btemp^0,w,c
 17164  01D2AE  A4D8               	btfss	status,2,c
 17165  01D2B0  D009               	goto	l10912
 17166                           
 17167                           ;stkvar	_off @ sp[(-4)+0]
 17168  01D2B2  0EFC               	movlw	-4
 17169  01D2B4  006F FF8C  F02A    	movff	plusw1,btemp
 17170  01D2BA  0EFD               	movlw	-3
 17171  01D2BC  006F FF8C  F02B    	movff	plusw1,btemp+1
 17172  01D2C2  D00D               	goto	l3941
 17173  01D2C4                     l10912:
 17174                           
 17175                           ;stkvar	_off @ sp[(-4)+0]
 17176  01D2C4  0EFC               	movlw	-4
 17177  01D2C6  006F FF8C  F02A    	movff	plusw1,btemp
 17178  01D2CC  1E2A               	comf	btemp^0,f,c
 17179  01D2CE  0EFD               	movlw	-3
 17180  01D2D0  006F FF8C  F02B    	movff	plusw1,btemp+1
 17181  01D2D6  1E2B               	comf	(btemp+1)^0,f,c
 17182  01D2D8  2A2A               	incf	btemp^0,f,c
 17183  01D2DA  B4D8               	btfsc	status,2,c
 17184  01D2DC  2A2B               	incf	(btemp+1)^0,f,c
 17185  01D2DE                     l3941:
 17186                           
 17187                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 17188  01D2DE  0EFA               	movlw	250
 17189  01D2E0  26E1               	addwf	fsr1l,f,c
 17190  01D2E2  0EFF               	movlw	255
 17191  01D2E4  22E2               	addwfc	fsr1h,f,c
 17192  01D2E6  0012               	return		;funcret
 17193  01D2E8                     __end_of_getoff:
 17194                           	opt callstack 0
 17195                           
 17196 ;; *************** function _getint *****************
 17197 ;; Defined at:
 17198 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;  p               2  [STACK] PTR PTR const unsigned c
 17201 ;;		 -> s(2), 
 17202 ;; Auto vars:     Size  Location     Type
 17203 ;;  x               2  [STACK] unsigned int 
 17204 ;; Return value:  Size  Location     Type
 17205 ;;                  2  [STACK] int 
 17206 ;; Registers used:
 17207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17208 ;; Tracked objects:
 17209 ;;		On entry : 0/0
 17210 ;;		On exit  : 0/0
 17211 ;;		Unchanged: 0/0
 17212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17217 ;;Total ram usage:        0 bytes
 17218 ;; Hardware stack levels used:    1
 17219 ;; Hardware stack levels required when called:   15
 17220 ;; This function calls:
 17221 ;;		Nothing
 17222 ;; This function is called by:
 17223 ;;		_getoff
 17224 ;;		_getrule
 17225 ;; This function uses a reentrant model
 17226 ;;
 17227                           
 17228                           	psect	text48
 17229  0001AC                     __ptext48:
 17230                           	opt callstack 0
 17231  0001AC                     _getint:
 17232                           	opt callstack 0
 17233                           
 17234                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17235  0001AC  52E6               	movf	postinc1,f,c
 17236  0001AE  52E6               	movf	postinc1,f,c
 17237                           
 17238                           ;stkvar	_x @ sp[(-2)+0]
 17239                           
 17240                           ;incstack = 0
 17241  0001B0  0EFE               	movlw	-2
 17242  0001B2  6AE3               	clrf	plusw1,c
 17243  0001B4  0EFF               	movlw	-1
 17244  0001B6  6AE3               	clrf	plusw1,c
 17245  0001B8  D043               	goto	l10046
 17246  0001BA                     l10042:
 17247  0001BA  0ED0               	movlw	208
 17248  0001BC  6E34               	movwf	(btemp+10)^0,c
 17249  0001BE  0EFF               	movlw	255
 17250  0001C0  6E35               	movwf	(btemp+11)^0,c
 17251                           
 17252                           ;stkvar	_x @ sp[(-2)+0]
 17253  0001C2  0EFE               	movlw	-2
 17254  0001C4  006F FF8C  F032    	movff	plusw1,btemp+8
 17255  0001CA  0EFF               	movlw	-1
 17256  0001CC  006F FF8C  F033    	movff	plusw1,btemp+9
 17257  0001D2  0E0A               	movlw	10
 17258  0001D4  0232               	mulwf	(btemp+8)^0,c
 17259  0001D6  006F FFCC  F030    	movff	prodl,btemp+6
 17260  0001DC  006F FFD0  F031    	movff	prodh,btemp+7
 17261  0001E2  0233               	mulwf	(btemp+9)^0,c
 17262  0001E4  50F3               	movf	prodl,w,c
 17263  0001E6  2631               	addwf	(btemp+7)^0,f,c
 17264                           
 17265                           ;stkvar	_p @ sp[(-2)+-2]
 17266  0001E8  0EFC               	movlw	-4
 17267  0001EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 17268  0001F0  0EFD               	movlw	-3
 17269  0001F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 17270  0001F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 17271  0001FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 17272  000204                     	if	0	;tblptru may be non-zero
 17273  000204                     	endif
 17274  000204                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17275  000204  0E00               	movlw	low (__mediumconst shr (0+16))
 17276  000206  6EF8               	movwf	tblptru,c
 17277  000208                     	endif
 17278  000208  0008               	tblrd		*
 17279  00020A  50F5               	movf	tablat,w,c
 17280  00020C  2630               	addwf	(btemp+6)^0,f,c
 17281  00020E  0E00               	movlw	0
 17282  000210  2231               	addwfc	(btemp+7)^0,f,c
 17283  000212  5034               	movf	(btemp+10)^0,w,c
 17284  000214  2630               	addwf	(btemp+6)^0,f,c
 17285  000216  5035               	movf	(btemp+11)^0,w,c
 17286  000218  2231               	addwfc	(btemp+7)^0,f,c
 17287                           
 17288                           ;stkvar	_x @ sp[(-2)+0]
 17289  00021A  0EFE               	movlw	-2
 17290  00021C  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 17291  000222  0EFF               	movlw	-1
 17292  000224  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 17293                           
 17294                           ;stkvar	_p @ sp[(-2)+-2]
 17295  00022A  0EFC               	movlw	-4
 17296  00022C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17297  000232  0EFD               	movlw	-3
 17298  000234  006F FF8F FFDA     	movff	plusw1,fsr2h
 17299  00023A  2ADE               	incf	postinc2,f,c
 17300  00023C  0E00               	movlw	0
 17301  00023E  22DD               	addwfc	postdec2,f,c
 17302  000240                     l10046:
 17303  000240  0ED0               	movlw	208
 17304  000242  6E34               	movwf	(btemp+10)^0,c
 17305  000244  0EFF               	movlw	255
 17306  000246  6E35               	movwf	(btemp+11)^0,c
 17307                           
 17308                           ;stkvar	_p @ sp[(-2)+-2]
 17309  000248  0EFC               	movlw	-4
 17310  00024A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17311  000250  0EFD               	movlw	-3
 17312  000252  006F FF8F FFDA     	movff	plusw1,fsr2h
 17313  000258  006F FF7B FFF6     	movff	postinc2,tblptrl
 17314  00025E  006F FF77 FFF7     	movff	postdec2,tblptrh
 17315  000264                     	if	0	;tblptru may be non-zero
 17316  000264                     	endif
 17317  000264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17318  000264  0E00               	movlw	low (__mediumconst shr (0+16))
 17319  000266  6EF8               	movwf	tblptru,c
 17320  000268                     	endif
 17321  000268  0008               	tblrd		*
 17322  00026A  50F5               	movf	tablat,w,c
 17323  00026C  6E32               	movwf	(btemp+8)^0,c
 17324  00026E  6A33               	clrf	(btemp+9)^0,c
 17325  000270  5034               	movf	(btemp+10)^0,w,c
 17326  000272  2632               	addwf	(btemp+8)^0,f,c
 17327  000274  5035               	movf	(btemp+11)^0,w,c
 17328  000276  2233               	addwfc	(btemp+9)^0,f,c
 17329  000278  5033               	movf	(btemp+9)^0,w,c
 17330  00027A  E104               	bnz	u7660
 17331  00027C  0E0A               	movlw	10
 17332  00027E  5C32               	subwf	(btemp+8)^0,w,c
 17333  000280  A0D8               	btfss	status,0,c
 17334  000282  D79B               	goto	l10042
 17335  000284                     u7660:
 17336                           
 17337                           ;stkvar	_x @ sp[(-2)+0]
 17338  000284  0EFE               	movlw	-2
 17339  000286  006F FF8C  F02A    	movff	plusw1,btemp
 17340  00028C  0EFF               	movlw	-1
 17341  00028E  006F FF8C  F02B    	movff	plusw1,btemp+1
 17342                           
 17343                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 17344  000294  52E5               	movf	postdec1,f,c
 17345  000296  52E5               	movf	postdec1,f,c
 17346  000298  52E5               	movf	postdec1,f,c
 17347  00029A  52E5               	movf	postdec1,f,c
 17348  00029C  0012               	return		;funcret
 17349  00029E                     __end_of_getint:
 17350                           	opt callstack 0
 17351                           
 17352 ;; *************** function _getname *****************
 17353 ;; Defined at:
 17354 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 17355 ;; Parameters:    Size  Location     Type
 17356 ;;  d               2  [STACK] PTR unsigned char 
 17357 ;;		 -> dst_name(7), std_name(7), 
 17358 ;;  p               2  [STACK] PTR PTR const unsigned c
 17359 ;;		 -> s(2), 
 17360 ;; Auto vars:     Size  Location     Type
 17361 ;;  i               2  [STACK] int 
 17362 ;; Return value:  Size  Location     Type
 17363 ;;                  1  [STACK] void 
 17364 ;; Registers used:
 17365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 17366 ;; Tracked objects:
 17367 ;;		On entry : 0/39
 17368 ;;		On exit  : 0/0
 17369 ;;		Unchanged: 0/0
 17370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17375 ;;Total ram usage:        0 bytes
 17376 ;; Hardware stack levels used:    1
 17377 ;; Hardware stack levels required when called:   15
 17378 ;; This function calls:
 17379 ;;		Nothing
 17380 ;; This function is called by:
 17381 ;;		_do_tzset
 17382 ;; This function uses a reentrant model
 17383 ;;
 17384                           
 17385                           	psect	text49
 17386  01B1A2                     __ptext49:
 17387                           	opt callstack 0
 17388  01B1A2                     _getname:
 17389                           	opt callstack 0
 17390                           
 17391                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17392  01B1A2  52E6               	movf	postinc1,f,c
 17393  01B1A4  52E6               	movf	postinc1,f,c
 17394                           
 17395                           ;stkvar	_p @ sp[(-2)+-4]
 17396                           
 17397                           ;incstack = 0
 17398  01B1A6  0EFA               	movlw	-6
 17399  01B1A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 17400  01B1AE  0EFB               	movlw	-5
 17401  01B1B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 17402  01B1B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 17403  01B1BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 17404  01B1C2                     	if	0	;tblptru may be non-zero
 17405  01B1C2                     	endif
 17406  01B1C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17407  01B1C2  0E00               	movlw	low (__mediumconst shr (0+16))
 17408  01B1C4  6EF8               	movwf	tblptru,c
 17409  01B1C6                     	endif
 17410  01B1C6  0008               	tblrd		*
 17411  01B1C8  50F5               	movf	tablat,w,c
 17412  01B1CA  0A3C               	xorlw	60
 17413  01B1CC  A4D8               	btfss	status,2,c
 17414  01B1CE  D09E               	goto	l16096
 17415                           
 17416                           ;stkvar	_p @ sp[(-2)+-4]
 17417  01B1D0  0EFA               	movlw	-6
 17418  01B1D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 17419  01B1D8  0EFB               	movlw	-5
 17420  01B1DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 17421  01B1E0  2ADE               	incf	postinc2,f,c
 17422  01B1E2  0E00               	movlw	0
 17423  01B1E4  22DD               	addwfc	postdec2,f,c
 17424                           
 17425                           ;stkvar	_i @ sp[(-2)+0]
 17426  01B1E6  0EFE               	movlw	-2
 17427  01B1E8  6AE3               	clrf	plusw1,c
 17428  01B1EA  0EFF               	movlw	-1
 17429  01B1EC  6AE3               	clrf	plusw1,c
 17430  01B1EE  D04D               	goto	l16090
 17431  01B1F0                     l16086:
 17432                           
 17433                           ;stkvar	_i @ sp[(-2)+0]
 17434  01B1F0  0EFE               	movlw	-2
 17435  01B1F2  006F FF8C  F034    	movff	plusw1,btemp+10
 17436  01B1F8  0EFF               	movlw	-1
 17437  01B1FA  006F FF8C  F035    	movff	plusw1,btemp+11
 17438                           
 17439                           ;stkvar	_p @ sp[(-2)+-4]
 17440  01B200  0EFA               	movlw	-6
 17441  01B202  006F FF8F FFD9     	movff	plusw1,fsr2l
 17442  01B208  0EFB               	movlw	-5
 17443  01B20A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17444  01B210  006F FF78  F032    	movff	postinc2,btemp+8
 17445  01B216  006F FF74  F033    	movff	postdec2,btemp+9
 17446  01B21C  5034               	movf	(btemp+10)^0,w,c
 17447  01B21E  2632               	addwf	(btemp+8)^0,f,c
 17448  01B220  5035               	movf	(btemp+11)^0,w,c
 17449  01B222  2233               	addwfc	(btemp+9)^0,f,c
 17450  01B224  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 17451  01B22A  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 17452  01B230                     	if	0	;tblptru may be non-zero
 17453  01B230                     	endif
 17454  01B230                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17455  01B230  0E00               	movlw	low (__mediumconst shr (0+16))
 17456  01B232  6EF8               	movwf	tblptru,c
 17457  01B234                     	endif
 17458                           
 17459                           ;stkvar	_i @ sp[(-2)+0]
 17460  01B234  0EFE               	movlw	-2
 17461  01B236  006F FF8C  F034    	movff	plusw1,btemp+10
 17462  01B23C  0EFF               	movlw	-1
 17463  01B23E  006F FF8C  F035    	movff	plusw1,btemp+11
 17464                           
 17465                           ;stkvar	_d @ sp[(-2)+-2]
 17466  01B244  0EFC               	movlw	-4
 17467  01B246  006F FF8C  F032    	movff	plusw1,btemp+8
 17468  01B24C  0EFD               	movlw	-3
 17469  01B24E  006F FF8C  F033    	movff	plusw1,btemp+9
 17470  01B254  5034               	movf	(btemp+10)^0,w,c
 17471  01B256  2432               	addwf	(btemp+8)^0,w,c
 17472  01B258  6ED9               	movwf	fsr2l,c
 17473  01B25A  5035               	movf	(btemp+11)^0,w,c
 17474  01B25C  2033               	addwfc	(btemp+9)^0,w,c
 17475  01B25E  6EDA               	movwf	fsr2h,c
 17476  01B260  0008               	tblrd		*
 17477  01B262  006F FFD7 FFDF     	movff	tablat,indf2
 17478                           
 17479                           ;stkvar	_i @ sp[(-2)+0]
 17480  01B268  0EFE               	movlw	-2
 17481  01B26A  50E3               	movf	plusw1,w,c
 17482  01B26C  0F01               	addlw	1
 17483  01B26E  6E2A               	movwf	btemp^0,c
 17484  01B270  0EFE               	movlw	-2
 17485  01B272  0060  F0AB  FFE3   	movff	btemp,plusw1
 17486  01B278  6A2A               	clrf	btemp^0,c
 17487  01B27A  0EFF               	movlw	-1
 17488  01B27C  50E3               	movf	plusw1,w,c
 17489  01B27E  202A               	addwfc	btemp^0,w,c
 17490  01B280  6E2A               	movwf	btemp^0,c
 17491  01B282  0EFF               	movlw	-1
 17492  01B284  0060  F0AB  FFE3   	movff	btemp,plusw1
 17493  01B28A                     l16090:
 17494                           
 17495                           ;stkvar	_i @ sp[(-2)+0]
 17496  01B28A  0EFE               	movlw	-2
 17497  01B28C  006F FF8C  F034    	movff	plusw1,btemp+10
 17498  01B292  0EFF               	movlw	-1
 17499  01B294  006F FF8C  F035    	movff	plusw1,btemp+11
 17500                           
 17501                           ;stkvar	_p @ sp[(-2)+-4]
 17502  01B29A  0EFA               	movlw	-6
 17503  01B29C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17504  01B2A2  0EFB               	movlw	-5
 17505  01B2A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 17506  01B2AA  006F FF78  F032    	movff	postinc2,btemp+8
 17507  01B2B0  006F FF74  F033    	movff	postdec2,btemp+9
 17508  01B2B6  5034               	movf	(btemp+10)^0,w,c
 17509  01B2B8  2632               	addwf	(btemp+8)^0,f,c
 17510  01B2BA  5035               	movf	(btemp+11)^0,w,c
 17511  01B2BC  2233               	addwfc	(btemp+9)^0,f,c
 17512  01B2BE  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 17513  01B2C4  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 17514  01B2CA                     	if	0	;tblptru may be non-zero
 17515  01B2CA                     	endif
 17516  01B2CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17517  01B2CA  0E00               	movlw	low (__mediumconst shr (0+16))
 17518  01B2CC  6EF8               	movwf	tblptru,c
 17519  01B2CE                     	endif
 17520  01B2CE  0008               	tblrd		*
 17521  01B2D0  50F5               	movf	tablat,w,c
 17522  01B2D2  0A3E               	xorlw	62
 17523  01B2D4  B4D8               	btfsc	status,2,c
 17524  01B2D6  D00E               	goto	u15520
 17525                           
 17526                           ;stkvar	_i @ sp[(-2)+0]
 17527  01B2D8  0EFF               	movlw	-1
 17528  01B2DA  BEE3               	btfsc	plusw1,7,c
 17529  01B2DC  D789               	goto	l16086
 17530  01B2DE  0EFF               	movlw	-1
 17531  01B2E0  50E3               	movf	plusw1,w,c
 17532  01B2E2  E108               	bnz	u15520
 17533  01B2E4  0EFE               	movlw	-2
 17534  01B2E6  006F FF8C  F02A    	movff	plusw1,btemp
 17535  01B2EC  0E06               	movlw	6
 17536  01B2EE  5E2A               	subwf	btemp^0,f,c
 17537  01B2F0  A0D8               	btfss	status,0,c
 17538  01B2F2  D77E               	goto	l16086
 17539  01B2F4                     u15520:
 17540                           
 17541                           ;stkvar	_p @ sp[(-2)+-4]
 17542  01B2F4  0EFA               	movlw	-6
 17543  01B2F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 17544  01B2FC  0EFB               	movlw	-5
 17545  01B2FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 17546  01B304  2ADE               	incf	postinc2,f,c
 17547  01B306  0E00               	movlw	0
 17548  01B308  22DD               	addwfc	postdec2,f,c
 17549  01B30A  D098               	goto	u15540
 17550  01B30C                     l16096:
 17551                           
 17552                           ;stkvar	_i @ sp[(-2)+0]
 17553  01B30C  0EFE               	movlw	-2
 17554  01B30E  6AE3               	clrf	plusw1,c
 17555  01B310  0EFF               	movlw	-1
 17556  01B312  6AE3               	clrf	plusw1,c
 17557  01B314  D04D               	goto	l16102
 17558  01B316                     l16098:
 17559                           
 17560                           ;stkvar	_i @ sp[(-2)+0]
 17561  01B316  0EFE               	movlw	-2
 17562  01B318  006F FF8C  F034    	movff	plusw1,btemp+10
 17563  01B31E  0EFF               	movlw	-1
 17564  01B320  006F FF8C  F035    	movff	plusw1,btemp+11
 17565                           
 17566                           ;stkvar	_p @ sp[(-2)+-4]
 17567  01B326  0EFA               	movlw	-6
 17568  01B328  006F FF8F FFD9     	movff	plusw1,fsr2l
 17569  01B32E  0EFB               	movlw	-5
 17570  01B330  006F FF8F FFDA     	movff	plusw1,fsr2h
 17571  01B336  006F FF78  F032    	movff	postinc2,btemp+8
 17572  01B33C  006F FF74  F033    	movff	postdec2,btemp+9
 17573  01B342  5034               	movf	(btemp+10)^0,w,c
 17574  01B344  2632               	addwf	(btemp+8)^0,f,c
 17575  01B346  5035               	movf	(btemp+11)^0,w,c
 17576  01B348  2233               	addwfc	(btemp+9)^0,f,c
 17577  01B34A  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 17578  01B350  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 17579  01B356                     	if	0	;tblptru may be non-zero
 17580  01B356                     	endif
 17581  01B356                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17582  01B356  0E00               	movlw	low (__mediumconst shr (0+16))
 17583  01B358  6EF8               	movwf	tblptru,c
 17584  01B35A                     	endif
 17585                           
 17586                           ;stkvar	_i @ sp[(-2)+0]
 17587  01B35A  0EFE               	movlw	-2
 17588  01B35C  006F FF8C  F034    	movff	plusw1,btemp+10
 17589  01B362  0EFF               	movlw	-1
 17590  01B364  006F FF8C  F035    	movff	plusw1,btemp+11
 17591                           
 17592                           ;stkvar	_d @ sp[(-2)+-2]
 17593  01B36A  0EFC               	movlw	-4
 17594  01B36C  006F FF8C  F032    	movff	plusw1,btemp+8
 17595  01B372  0EFD               	movlw	-3
 17596  01B374  006F FF8C  F033    	movff	plusw1,btemp+9
 17597  01B37A  5034               	movf	(btemp+10)^0,w,c
 17598  01B37C  2432               	addwf	(btemp+8)^0,w,c
 17599  01B37E  6ED9               	movwf	fsr2l,c
 17600  01B380  5035               	movf	(btemp+11)^0,w,c
 17601  01B382  2033               	addwfc	(btemp+9)^0,w,c
 17602  01B384  6EDA               	movwf	fsr2h,c
 17603  01B386  0008               	tblrd		*
 17604  01B388  006F FFD7 FFDF     	movff	tablat,indf2
 17605                           
 17606                           ;stkvar	_i @ sp[(-2)+0]
 17607  01B38E  0EFE               	movlw	-2
 17608  01B390  50E3               	movf	plusw1,w,c
 17609  01B392  0F01               	addlw	1
 17610  01B394  6E2A               	movwf	btemp^0,c
 17611  01B396  0EFE               	movlw	-2
 17612  01B398  0060  F0AB  FFE3   	movff	btemp,plusw1
 17613  01B39E  6A2A               	clrf	btemp^0,c
 17614  01B3A0  0EFF               	movlw	-1
 17615  01B3A2  50E3               	movf	plusw1,w,c
 17616  01B3A4  202A               	addwfc	btemp^0,w,c
 17617  01B3A6  6E2A               	movwf	btemp^0,c
 17618  01B3A8  0EFF               	movlw	-1
 17619  01B3AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 17620  01B3B0                     l16102:
 17621  01B3B0  0E9F               	movlw	159
 17622  01B3B2  6E34               	movwf	(btemp+10)^0,c
 17623  01B3B4  0EFF               	movlw	255
 17624  01B3B6  6E35               	movwf	(btemp+11)^0,c
 17625                           
 17626                           ;stkvar	_i @ sp[(-2)+0]
 17627  01B3B8  0EFE               	movlw	-2
 17628  01B3BA  006F FF8C  F032    	movff	plusw1,btemp+8
 17629  01B3C0  0EFF               	movlw	-1
 17630  01B3C2  006F FF8C  F033    	movff	plusw1,btemp+9
 17631                           
 17632                           ;stkvar	_p @ sp[(-2)+-4]
 17633  01B3C8  0EFA               	movlw	-6
 17634  01B3CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 17635  01B3D0  0EFB               	movlw	-5
 17636  01B3D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 17637  01B3D8  006F FF78  F030    	movff	postinc2,btemp+6
 17638  01B3DE  006F FF74  F031    	movff	postdec2,btemp+7
 17639  01B3E4  5032               	movf	(btemp+8)^0,w,c
 17640  01B3E6  2630               	addwf	(btemp+6)^0,f,c
 17641  01B3E8  5033               	movf	(btemp+9)^0,w,c
 17642  01B3EA  2231               	addwfc	(btemp+7)^0,f,c
 17643  01B3EC  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 17644  01B3F2  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 17645  01B3F8                     	if	0	;tblptru may be non-zero
 17646  01B3F8                     	endif
 17647  01B3F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17648  01B3F8  0E00               	movlw	low (__mediumconst shr (0+16))
 17649  01B3FA  6EF8               	movwf	tblptru,c
 17650  01B3FC                     	endif
 17651  01B3FC  0008               	tblrd		*
 17652  01B3FE  50F5               	movf	tablat,w,c
 17653  01B400  6E32               	movwf	(btemp+8)^0,c
 17654  01B402  6A33               	clrf	(btemp+9)^0,c
 17655  01B404  0E20               	movlw	32
 17656  01B406  1232               	iorwf	(btemp+8)^0,f,c
 17657  01B408  0E00               	movlw	0
 17658  01B40A  1233               	iorwf	(btemp+9)^0,f,c
 17659  01B40C  5034               	movf	(btemp+10)^0,w,c
 17660  01B40E  2632               	addwf	(btemp+8)^0,f,c
 17661  01B410  5035               	movf	(btemp+11)^0,w,c
 17662  01B412  2233               	addwfc	(btemp+9)^0,f,c
 17663  01B414  5033               	movf	(btemp+9)^0,w,c
 17664  01B416  E112               	bnz	l16106
 17665  01B418  0E1A               	movlw	26
 17666  01B41A  5C32               	subwf	(btemp+8)^0,w,c
 17667  01B41C  B0D8               	btfsc	status,0,c
 17668  01B41E  D00E               	goto	u15540
 17669                           
 17670                           ;stkvar	_i @ sp[(-2)+0]
 17671  01B420  0EFF               	movlw	-1
 17672  01B422  BEE3               	btfsc	plusw1,7,c
 17673  01B424  D778               	goto	l16098
 17674  01B426  0EFF               	movlw	-1
 17675  01B428  50E3               	movf	plusw1,w,c
 17676  01B42A  E108               	bnz	u15540
 17677  01B42C  0EFE               	movlw	-2
 17678  01B42E  006F FF8C  F02A    	movff	plusw1,btemp
 17679  01B434  0E06               	movlw	6
 17680  01B436  5E2A               	subwf	btemp^0,f,c
 17681  01B438  A0D8               	btfss	status,0,c
 17682  01B43A  D76D               	goto	l16098
 17683  01B43C                     u15540:
 17684  01B43C                     l16106:
 17685                           
 17686                           ;stkvar	_i @ sp[(-2)+0]
 17687  01B43C  0EFE               	movlw	-2
 17688  01B43E  006F FF8C  F034    	movff	plusw1,btemp+10
 17689  01B444  0EFF               	movlw	-1
 17690  01B446  006F FF8C  F035    	movff	plusw1,btemp+11
 17691                           
 17692                           ;stkvar	_p @ sp[(-2)+-4]
 17693  01B44C  0EFA               	movlw	-6
 17694  01B44E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17695  01B454  0EFB               	movlw	-5
 17696  01B456  006F FF8F FFDA     	movff	plusw1,fsr2h
 17697  01B45C  5034               	movf	(btemp+10)^0,w,c
 17698  01B45E  26DE               	addwf	postinc2,f,c
 17699  01B460  5035               	movf	(btemp+11)^0,w,c
 17700  01B462  22DD               	addwfc	postdec2,f,c
 17701                           
 17702                           ;stkvar	_i @ sp[(-2)+0]
 17703  01B464  0EFE               	movlw	-2
 17704  01B466  006F FF8C  F034    	movff	plusw1,btemp+10
 17705  01B46C  0EFF               	movlw	-1
 17706  01B46E  006F FF8C  F035    	movff	plusw1,btemp+11
 17707                           
 17708                           ;stkvar	_d @ sp[(-2)+-2]
 17709  01B474  0EFC               	movlw	-4
 17710  01B476  006F FF8C  F032    	movff	plusw1,btemp+8
 17711  01B47C  0EFD               	movlw	-3
 17712  01B47E  006F FF8C  F033    	movff	plusw1,btemp+9
 17713  01B484  5034               	movf	(btemp+10)^0,w,c
 17714  01B486  2432               	addwf	(btemp+8)^0,w,c
 17715  01B488  6ED9               	movwf	fsr2l,c
 17716  01B48A  5035               	movf	(btemp+11)^0,w,c
 17717  01B48C  2033               	addwfc	(btemp+9)^0,w,c
 17718  01B48E  6EDA               	movwf	fsr2h,c
 17719  01B490  0E00               	movlw	0
 17720  01B492  6EDF               	movwf	indf2,c
 17721                           
 17722                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17723  01B494  0EFA               	movlw	250
 17724  01B496  26E1               	addwf	fsr1l,f,c
 17725  01B498  0EFF               	movlw	255
 17726  01B49A  22E2               	addwfc	fsr1h,f,c
 17727  01B49C  0012               	return		;funcret
 17728  01B49E                     __end_of_getname:
 17729                           	opt callstack 0
 17730                           
 17731 ;; *************** function ___secs_to_tm *****************
 17732 ;; Defined at:
 17733 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 17734 ;; Parameters:    Size  Location     Type
 17735 ;;  t               8  [STACK] long long 
 17736 ;;  tm              2  [STACK] PTR struct tm
 17737 ;;		 -> localtime@tm(24), 
 17738 ;; Auto vars:     Size  Location     Type
 17739 ;;  years           8  [STACK] long long 
 17740 ;;  days            8  [STACK] long long 
 17741 ;;  secs            8  [STACK] long long 
 17742 ;;  remdays         4  [STACK] long 
 17743 ;;  q_cycles        4  [STACK] long 
 17744 ;;  c_cycles        4  [STACK] long 
 17745 ;;  remyears        4  [STACK] long 
 17746 ;;  remsecs         4  [STACK] long 
 17747 ;;  qc_cycles       4  [STACK] long 
 17748 ;;  months          2  [STACK] int 
 17749 ;;  leap            2  [STACK] int 
 17750 ;;  yday            2  [STACK] int 
 17751 ;;  wday            2  [STACK] int 
 17752 ;; Return value:  Size  Location     Type
 17753 ;;                  4  [STACK] long 
 17754 ;; Registers used:
 17755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 17756 ;; Tracked objects:
 17757 ;;		On entry : 0/39
 17758 ;;		On exit  : 0/0
 17759 ;;		Unchanged: 0/0
 17760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17765 ;;Total ram usage:        0 bytes
 17766 ;; Hardware stack levels used:    1
 17767 ;; Hardware stack levels required when called:   16
 17768 ;; This function calls:
 17769 ;;		___aldiv
 17770 ;;		___almod
 17771 ;;		___aodiv
 17772 ;;		___aomod
 17773 ;;		___lmul
 17774 ;;		___omul
 17775 ;; This function is called by:
 17776 ;;		___localtime_r
 17777 ;; This function uses a reentrant model
 17778 ;;
 17779                           
 17780                           	psect	text50
 17781  012964                     __ptext50:
 17782                           	opt callstack 0
 17783  012964                     ___secs_to_tm:
 17784                           	opt callstack 0
 17785                           
 17786                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17787  012964  0E39               	movlw	57
 17788  012966  26E1               	addwf	fsr1l,f,c
 17789  012968  0E00               	movlw	0
 17790  01296A  22E2               	addwfc	fsr1h,f,c
 17791                           
 17792                           ;stkvar	_t @ sp[(-57)+-8]
 17793                           
 17794                           ;incstack = 0
 17795  01296C  0EC6               	movlw	-58
 17796  01296E  AEE3               	btfss	plusw1,7,c
 17797  012970  D026               	goto	u16130
 17798  012972  0EC1               	movlw	-63
 17799  012974  006F FF8C  F02A    	movff	plusw1,btemp
 17800  01297A  0E80               	movlw	128
 17801  01297C  5E2A               	subwf	btemp^0,f,c
 17802  01297E  0EC2               	movlw	-62
 17803  012980  006F FF8C  F02A    	movff	plusw1,btemp
 17804  012986  0EBD               	movlw	189
 17805  012988  5A2A               	subwfb	btemp^0,f,c
 17806  01298A  0EC3               	movlw	-61
 17807  01298C  006F FF8C  F02A    	movff	plusw1,btemp
 17808  012992  0E0E               	movlw	14
 17809  012994  5A2A               	subwfb	btemp^0,f,c
 17810  012996  0EC4               	movlw	-60
 17811  012998  006F FF8C  F02A    	movff	plusw1,btemp
 17812  01299E  0EFF               	movlw	255
 17813  0129A0  5A2A               	subwfb	btemp^0,f,c
 17814  0129A2  0EC5               	movlw	-59
 17815  0129A4  006F FF8C  F02A    	movff	plusw1,btemp
 17816  0129AA  0EFF               	movlw	255
 17817  0129AC  5A2A               	subwfb	btemp^0,f,c
 17818  0129AE  0EC6               	movlw	-58
 17819  0129B0  006F FF8C  F02A    	movff	plusw1,btemp
 17820  0129B6  0EFF               	movlw	255
 17821  0129B8  5A2A               	subwfb	btemp^0,f,c
 17822  0129BA  A0D8               	btfss	status,0,c
 17823  0129BC  D028               	goto	u16140
 17824  0129BE                     u16130:
 17825                           
 17826                           ;stkvar	_t @ sp[(-57)+-8]
 17827  0129BE  0EC6               	movlw	-58
 17828  0129C0  BEE3               	btfsc	plusw1,7,c
 17829  0129C2  D02F               	goto	l16542
 17830  0129C4  0EC6               	movlw	-58
 17831  0129C6  50E3               	movf	plusw1,w,c
 17832  0129C8  E122               	bnz	u16140
 17833  0129CA  0EC5               	movlw	-59
 17834  0129CC  50E3               	movf	plusw1,w,c
 17835  0129CE  E11F               	bnz	u16140
 17836  0129D0  0EC4               	movlw	-60
 17837  0129D2  50E3               	movf	plusw1,w,c
 17838  0129D4  E11C               	bnz	u16140
 17839  0129D6  0EBF               	movlw	-65
 17840  0129D8  04E3               	decf	plusw1,w,c
 17841  0129DA  0EC0               	movlw	-64
 17842  0129DC  006F FF8C  F02A    	movff	plusw1,btemp
 17843  0129E2  0E7B               	movlw	123
 17844  0129E4  5A2A               	subwfb	btemp^0,f,c
 17845  0129E6  0EC1               	movlw	-63
 17846  0129E8  006F FF8C  F02A    	movff	plusw1,btemp
 17847  0129EE  0E9D               	movlw	157
 17848  0129F0  5A2A               	subwfb	btemp^0,f,c
 17849  0129F2  0EC2               	movlw	-62
 17850  0129F4  006F FF8C  F02A    	movff	plusw1,btemp
 17851  0129FA  0E40               	movlw	64
 17852  0129FC  5A2A               	subwfb	btemp^0,f,c
 17853  0129FE  0EC3               	movlw	-61
 17854  012A00  006F FF8C  F02A    	movff	plusw1,btemp
 17855  012A06  0EF1               	movlw	241
 17856  012A08  5A2A               	subwfb	btemp^0,f,c
 17857  012A0A  A0D8               	btfss	status,0,c
 17858  012A0C  D00A               	goto	l16542
 17859  012A0E                     u16140:
 17860  012A0E  0EFF               	movlw	255
 17861  012A10  6E2A               	movwf	btemp^0,c
 17862  012A12  0EFF               	movlw	255
 17863  012A14  6E2B               	movwf	(btemp+1)^0,c
 17864  012A16  0EFF               	movlw	255
 17865  012A18  6E2C               	movwf	(btemp+2)^0,c
 17866  012A1A  0EFF               	movlw	255
 17867  012A1C  6E2D               	movwf	(btemp+3)^0,c
 17868  012A1E  EF16  F09D         	goto	l3857
 17869  012A22                     l16542:
 17870                           
 17871                           ;stkvar	_t @ sp[(-57)+-8]
 17872  012A22  0EBF               	movlw	-65
 17873  012A24  50E3               	movf	plusw1,w,c
 17874  012A26  0F80               	addlw	128
 17875  012A28  6E3A               	movwf	(btemp+16)^0,c
 17876  012A2A  0EC0               	movlw	-64
 17877  012A2C  006F FF8C  F03B    	movff	plusw1,btemp+17
 17878  012A32  0EA2               	movlw	162
 17879  012A34  223B               	addwfc	(btemp+17)^0,f,c
 17880  012A36  0EC1               	movlw	-63
 17881  012A38  006F FF8C  F03C    	movff	plusw1,btemp+18
 17882  012A3E  0E43               	movlw	67
 17883  012A40  223C               	addwfc	(btemp+18)^0,f,c
 17884  012A42  0EC2               	movlw	-62
 17885  012A44  006F FF8C  F03D    	movff	plusw1,btemp+19
 17886  012A4A  0EC7               	movlw	199
 17887  012A4C  223D               	addwfc	(btemp+19)^0,f,c
 17888  012A4E  0EC3               	movlw	-61
 17889  012A50  006F FF8C  F03E    	movff	plusw1,btemp+20
 17890  012A56  0EFF               	movlw	255
 17891  012A58  223E               	addwfc	(btemp+20)^0,f,c
 17892  012A5A  0EC4               	movlw	-60
 17893  012A5C  006F FF8C  F03F    	movff	plusw1,btemp+21
 17894  012A62  0EFF               	movlw	255
 17895  012A64  223F               	addwfc	(btemp+21)^0,f,c
 17896  012A66  0EC5               	movlw	-59
 17897  012A68  006F FF8C  F040    	movff	plusw1,btemp+22
 17898  012A6E  0EFF               	movlw	255
 17899  012A70  2240               	addwfc	(btemp+22)^0,f,c
 17900  012A72  0EC6               	movlw	-58
 17901  012A74  006F FF8C  F041    	movff	plusw1,btemp+23
 17902  012A7A  0EFF               	movlw	255
 17903  012A7C  2241               	addwfc	(btemp+23)^0,f,c
 17904                           
 17905                           ;stkvar	_secs @ sp[(-57)+17]
 17906  012A7E  0ED8               	movlw	-40
 17907  012A80  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17908  012A86  0ED9               	movlw	-39
 17909  012A88  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17910  012A8E  0EDA               	movlw	-38
 17911  012A90  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17912  012A96  0EDB               	movlw	-37
 17913  012A98  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17914  012A9E  0EDC               	movlw	-36
 17915  012AA0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17916  012AA6  0EDD               	movlw	-35
 17917  012AA8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17918  012AAE  0EDE               	movlw	-34
 17919  012AB0  0060  F103  FFE3   	movff	btemp+22,plusw1
 17920  012AB6  0EDF               	movlw	-33
 17921  012AB8  0060  F107  FFE3   	movff	btemp+23,plusw1
 17922  012ABE  0E80               	movlw	128
 17923  012AC0  6EE6               	movwf	postinc1,c
 17924  012AC2  0E51               	movlw	81
 17925  012AC4  6EE6               	movwf	postinc1,c
 17926  012AC6  0E01               	movlw	1
 17927  012AC8  6EE6               	movwf	postinc1,c
 17928  012ACA  0E00               	movlw	0
 17929  012ACC  6EE6               	movwf	postinc1,c
 17930  012ACE  0E00               	movlw	0
 17931  012AD0  6EE6               	movwf	postinc1,c
 17932  012AD2  0E00               	movlw	0
 17933  012AD4  6EE6               	movwf	postinc1,c
 17934  012AD6  0E00               	movlw	0
 17935  012AD8  6EE6               	movwf	postinc1,c
 17936  012ADA  0E00               	movlw	0
 17937  012ADC  6EE6               	movwf	postinc1,c
 17938                           
 17939                           ;stkvar	_secs @ sp[(-65)+17]
 17940  012ADE  50E1               	movf	fsr1l,w,c
 17941  012AE0  0FD0               	addlw	-48
 17942  012AE2  6ED9               	movwf	fsr2l,c
 17943  012AE4  50E2               	movf	fsr1h,w,c
 17944  012AE6  6EDA               	movwf	fsr2h,c
 17945  012AE8  0EFF               	movlw	255
 17946  012AEA  22DA               	addwfc	fsr2h,f,c
 17947  012AEC  006F FF7B FFE6     	movff	postinc2,postinc1
 17948  012AF2  006F FF7B FFE6     	movff	postinc2,postinc1
 17949  012AF8  006F FF7B FFE6     	movff	postinc2,postinc1
 17950  012AFE  006F FF7B FFE6     	movff	postinc2,postinc1
 17951  012B04  006F FF7B FFE6     	movff	postinc2,postinc1
 17952  012B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 17953  012B10  006F FF7B FFE6     	movff	postinc2,postinc1
 17954  012B16  006F FF7B FFE6     	movff	postinc2,postinc1
 17955  012B1C  EC7D  F0E2         	call	___aodiv	;wreg free
 17956  012B20  52E5               	movf	postdec1,f,c
 17957  012B22  006F FF9C  F041    	movff	indf1,btemp+23
 17958  012B28  52E5               	movf	postdec1,f,c
 17959  012B2A  006F FF9C  F040    	movff	indf1,btemp+22
 17960  012B30  52E5               	movf	postdec1,f,c
 17961  012B32  006F FF9C  F03F    	movff	indf1,btemp+21
 17962  012B38  52E5               	movf	postdec1,f,c
 17963  012B3A  006F FF9C  F03E    	movff	indf1,btemp+20
 17964  012B40  52E5               	movf	postdec1,f,c
 17965  012B42  006F FF9C  F03D    	movff	indf1,btemp+19
 17966  012B48  52E5               	movf	postdec1,f,c
 17967  012B4A  006F FF9C  F03C    	movff	indf1,btemp+18
 17968  012B50  52E5               	movf	postdec1,f,c
 17969  012B52  006F FF9C  F03B    	movff	indf1,btemp+17
 17970  012B58  52E5               	movf	postdec1,f,c
 17971  012B5A  006F FF9C  F03A    	movff	indf1,btemp+16
 17972  012B60  0EF8               	movlw	248
 17973  012B62  26E1               	addwf	fsr1l,f,c
 17974  012B64  0EFF               	movlw	255
 17975  012B66  22E2               	addwfc	fsr1h,f,c
 17976                           
 17977                           ;stkvar	_days @ sp[(-57)+9]
 17978  012B68  0ED0               	movlw	-48
 17979  012B6A  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17980  012B70  0ED1               	movlw	-47
 17981  012B72  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17982  012B78  0ED2               	movlw	-46
 17983  012B7A  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17984  012B80  0ED3               	movlw	-45
 17985  012B82  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17986  012B88  0ED4               	movlw	-44
 17987  012B8A  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17988  012B90  0ED5               	movlw	-43
 17989  012B92  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17990  012B98  0ED6               	movlw	-42
 17991  012B9A  0060  F103  FFE3   	movff	btemp+22,plusw1
 17992  012BA0  0ED7               	movlw	-41
 17993  012BA2  0060  F107  FFE3   	movff	btemp+23,plusw1
 17994  012BA8  0E80               	movlw	128
 17995  012BAA  6EE6               	movwf	postinc1,c
 17996  012BAC  0E51               	movlw	81
 17997  012BAE  6EE6               	movwf	postinc1,c
 17998  012BB0  0E01               	movlw	1
 17999  012BB2  6EE6               	movwf	postinc1,c
 18000  012BB4  0E00               	movlw	0
 18001  012BB6  6EE6               	movwf	postinc1,c
 18002  012BB8  0E00               	movlw	0
 18003  012BBA  6EE6               	movwf	postinc1,c
 18004  012BBC  0E00               	movlw	0
 18005  012BBE  6EE6               	movwf	postinc1,c
 18006  012BC0  0E00               	movlw	0
 18007  012BC2  6EE6               	movwf	postinc1,c
 18008  012BC4  0E00               	movlw	0
 18009  012BC6  6EE6               	movwf	postinc1,c
 18010                           
 18011                           ;stkvar	_secs @ sp[(-65)+17]
 18012  012BC8  50E1               	movf	fsr1l,w,c
 18013  012BCA  0FD0               	addlw	-48
 18014  012BCC  6ED9               	movwf	fsr2l,c
 18015  012BCE  50E2               	movf	fsr1h,w,c
 18016  012BD0  6EDA               	movwf	fsr2h,c
 18017  012BD2  0EFF               	movlw	255
 18018  012BD4  22DA               	addwfc	fsr2h,f,c
 18019  012BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 18020  012BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 18021  012BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 18022  012BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 18023  012BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 18024  012BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 18025  012BFA  006F FF7B FFE6     	movff	postinc2,postinc1
 18026  012C00  006F FF7B FFE6     	movff	postinc2,postinc1
 18027  012C06  EC3C  F0E7         	call	___aomod	;wreg free
 18028  012C0A  52E5               	movf	postdec1,f,c
 18029  012C0C  006F FF9C  F041    	movff	indf1,btemp+23
 18030  012C12  52E5               	movf	postdec1,f,c
 18031  012C14  006F FF9C  F040    	movff	indf1,btemp+22
 18032  012C1A  52E5               	movf	postdec1,f,c
 18033  012C1C  006F FF9C  F03F    	movff	indf1,btemp+21
 18034  012C22  52E5               	movf	postdec1,f,c
 18035  012C24  006F FF9C  F03E    	movff	indf1,btemp+20
 18036  012C2A  52E5               	movf	postdec1,f,c
 18037  012C2C  006F FF9C  F03D    	movff	indf1,btemp+19
 18038  012C32  52E5               	movf	postdec1,f,c
 18039  012C34  006F FF9C  F03C    	movff	indf1,btemp+18
 18040  012C3A  52E5               	movf	postdec1,f,c
 18041  012C3C  006F FF9C  F03B    	movff	indf1,btemp+17
 18042  012C42  52E5               	movf	postdec1,f,c
 18043  012C44  006F FF9C  F03A    	movff	indf1,btemp+16
 18044  012C4A  0EF8               	movlw	248
 18045  012C4C  26E1               	addwf	fsr1l,f,c
 18046  012C4E  0EFF               	movlw	255
 18047  012C50  22E2               	addwfc	fsr1h,f,c
 18048  012C52  0060  F0E8  F032   	movff	btemp+16,btemp+8
 18049  012C58  0060  F0EC  F033   	movff	btemp+17,btemp+9
 18050  012C5E  0060  F0F0  F034   	movff	btemp+18,btemp+10
 18051  012C64  0060  F0F4  F035   	movff	btemp+19,btemp+11
 18052                           
 18053                           ;stkvar	_remsecs @ sp[(-57)+41]
 18054  012C6A  0EF0               	movlw	-16
 18055  012C6C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18056  012C72  0EF1               	movlw	-15
 18057  012C74  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18058  012C7A  0EF2               	movlw	-14
 18059  012C7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18060  012C82  0EF3               	movlw	-13
 18061  012C84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18062                           
 18063                           ;stkvar	_remsecs @ sp[(-57)+41]
 18064  012C8A  0EF3               	movlw	-13
 18065  012C8C  AEE3               	btfss	plusw1,7,c
 18066  012C8E  D01F               	goto	l16554
 18067                           
 18068                           ;stkvar	_remsecs @ sp[(-57)+41]
 18069  012C90  50E1               	movf	fsr1l,w,c
 18070  012C92  0FF0               	addlw	-16
 18071  012C94  6ED9               	movwf	fsr2l,c
 18072  012C96  50E2               	movf	fsr1h,w,c
 18073  012C98  6EDA               	movwf	fsr2h,c
 18074  012C9A  0EFF               	movlw	255
 18075  012C9C  22DA               	addwfc	fsr2h,f,c
 18076  012C9E  0E80               	movlw	128
 18077  012CA0  26DE               	addwf	postinc2,f,c
 18078  012CA2  0E51               	movlw	81
 18079  012CA4  22DE               	addwfc	postinc2,f,c
 18080  012CA6  0E01               	movlw	1
 18081  012CA8  22DE               	addwfc	postinc2,f,c
 18082  012CAA  0E00               	movlw	0
 18083  012CAC  22DE               	addwfc	postinc2,f,c
 18084                           
 18085                           ;stkvar	_days @ sp[(-57)+9]
 18086  012CAE  50E1               	movf	fsr1l,w,c
 18087  012CB0  0FD0               	addlw	-48
 18088  012CB2  6ED9               	movwf	fsr2l,c
 18089  012CB4  50E2               	movf	fsr1h,w,c
 18090  012CB6  6EDA               	movwf	fsr2h,c
 18091  012CB8  0EFF               	movlw	255
 18092  012CBA  22DA               	addwfc	fsr2h,f,c
 18093  012CBC  06DE               	decf	postinc2,f,c
 18094  012CBE  0E00               	movlw	0
 18095  012CC0  5ADE               	subwfb	postinc2,f,c
 18096  012CC2  5ADE               	subwfb	postinc2,f,c
 18097  012CC4  5ADE               	subwfb	postinc2,f,c
 18098  012CC6  5ADE               	subwfb	postinc2,f,c
 18099  012CC8  5ADE               	subwfb	postinc2,f,c
 18100  012CCA  5ADE               	subwfb	postinc2,f,c
 18101  012CCC  5ADE               	subwfb	postinc2,f,c
 18102  012CCE                     l16554:
 18103  012CCE  0E07               	movlw	7
 18104  012CD0  6EE6               	movwf	postinc1,c
 18105  012CD2  0E00               	movlw	0
 18106  012CD4  6EE6               	movwf	postinc1,c
 18107  012CD6  0E00               	movlw	0
 18108  012CD8  6EE6               	movwf	postinc1,c
 18109  012CDA  0E00               	movlw	0
 18110  012CDC  6EE6               	movwf	postinc1,c
 18111  012CDE  0E00               	movlw	0
 18112  012CE0  6EE6               	movwf	postinc1,c
 18113  012CE2  0E00               	movlw	0
 18114  012CE4  6EE6               	movwf	postinc1,c
 18115  012CE6  0E00               	movlw	0
 18116  012CE8  6EE6               	movwf	postinc1,c
 18117  012CEA  0E00               	movlw	0
 18118  012CEC  6EE6               	movwf	postinc1,c
 18119                           
 18120                           ;stkvar	_days @ sp[(-65)+9]
 18121  012CEE  0EC8               	movlw	-56
 18122  012CF0  50E3               	movf	plusw1,w,c
 18123  012CF2  0F03               	addlw	3
 18124  012CF4  6E3A               	movwf	(btemp+16)^0,c
 18125  012CF6  0EC9               	movlw	-55
 18126  012CF8  006F FF8C  F03B    	movff	plusw1,btemp+17
 18127  012CFE  0E00               	movlw	0
 18128  012D00  223B               	addwfc	(btemp+17)^0,f,c
 18129  012D02  0ECA               	movlw	-54
 18130  012D04  006F FF8C  F03C    	movff	plusw1,btemp+18
 18131  012D0A  0E00               	movlw	0
 18132  012D0C  223C               	addwfc	(btemp+18)^0,f,c
 18133  012D0E  0ECB               	movlw	-53
 18134  012D10  006F FF8C  F03D    	movff	plusw1,btemp+19
 18135  012D16  0E00               	movlw	0
 18136  012D18  223D               	addwfc	(btemp+19)^0,f,c
 18137  012D1A  0ECC               	movlw	-52
 18138  012D1C  006F FF8C  F03E    	movff	plusw1,btemp+20
 18139  012D22  0E00               	movlw	0
 18140  012D24  223E               	addwfc	(btemp+20)^0,f,c
 18141  012D26  0ECD               	movlw	-51
 18142  012D28  006F FF8C  F03F    	movff	plusw1,btemp+21
 18143  012D2E  0E00               	movlw	0
 18144  012D30  223F               	addwfc	(btemp+21)^0,f,c
 18145  012D32  0ECE               	movlw	-50
 18146  012D34  006F FF8C  F040    	movff	plusw1,btemp+22
 18147  012D3A  0E00               	movlw	0
 18148  012D3C  2240               	addwfc	(btemp+22)^0,f,c
 18149  012D3E  0ECF               	movlw	-49
 18150  012D40  006F FF8C  F041    	movff	plusw1,btemp+23
 18151  012D46  0E00               	movlw	0
 18152  012D48  2241               	addwfc	(btemp+23)^0,f,c
 18153  012D4A  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 18154  012D50  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 18155  012D56  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 18156  012D5C  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 18157  012D62  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 18158  012D68  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 18159  012D6E  0060  F103  FFE6   	movff	btemp+22,postinc1
 18160  012D74  0060  F107  FFE6   	movff	btemp+23,postinc1
 18161  012D7A  EC3C  F0E7         	call	___aomod	;wreg free
 18162  012D7E  52E5               	movf	postdec1,f,c
 18163  012D80  006F FF9C  F041    	movff	indf1,btemp+23
 18164  012D86  52E5               	movf	postdec1,f,c
 18165  012D88  006F FF9C  F040    	movff	indf1,btemp+22
 18166  012D8E  52E5               	movf	postdec1,f,c
 18167  012D90  006F FF9C  F03F    	movff	indf1,btemp+21
 18168  012D96  52E5               	movf	postdec1,f,c
 18169  012D98  006F FF9C  F03E    	movff	indf1,btemp+20
 18170  012D9E  52E5               	movf	postdec1,f,c
 18171  012DA0  006F FF9C  F03D    	movff	indf1,btemp+19
 18172  012DA6  52E5               	movf	postdec1,f,c
 18173  012DA8  006F FF9C  F03C    	movff	indf1,btemp+18
 18174  012DAE  52E5               	movf	postdec1,f,c
 18175  012DB0  006F FF9C  F03B    	movff	indf1,btemp+17
 18176  012DB6  52E5               	movf	postdec1,f,c
 18177  012DB8  006F FF9C  F03A    	movff	indf1,btemp+16
 18178  012DBE  0EF8               	movlw	248
 18179  012DC0  26E1               	addwf	fsr1l,f,c
 18180  012DC2  0EFF               	movlw	255
 18181  012DC4  22E2               	addwfc	fsr1h,f,c
 18182  012DC6  0060  F0E8  F034   	movff	btemp+16,btemp+10
 18183  012DCC  0060  F0EC  F035   	movff	btemp+17,btemp+11
 18184                           
 18185                           ;stkvar	_wday @ sp[(-57)+55]
 18186  012DD2  0EFE               	movlw	-2
 18187  012DD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18188  012DDA  0EFF               	movlw	-1
 18189  012DDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18190                           
 18191                           ;stkvar	_wday @ sp[(-57)+55]
 18192  012DE2  0EFF               	movlw	-1
 18193  012DE4  AEE3               	btfss	plusw1,7,c
 18194  012DE6  D011               	goto	l16560
 18195                           
 18196                           ;stkvar	_wday @ sp[(-57)+55]
 18197  012DE8  0EFE               	movlw	-2
 18198  012DEA  50E3               	movf	plusw1,w,c
 18199  012DEC  0F07               	addlw	7
 18200  012DEE  6E2A               	movwf	btemp^0,c
 18201  012DF0  0EFE               	movlw	-2
 18202  012DF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 18203  012DF8  6A2A               	clrf	btemp^0,c
 18204  012DFA  0EFF               	movlw	-1
 18205  012DFC  50E3               	movf	plusw1,w,c
 18206  012DFE  202A               	addwfc	btemp^0,w,c
 18207  012E00  6E2A               	movwf	btemp^0,c
 18208  012E02  0EFF               	movlw	-1
 18209  012E04  0060  F0AB  FFE3   	movff	btemp,plusw1
 18210  012E0A                     l16560:
 18211  012E0A  0EB1               	movlw	177
 18212  012E0C  6EE6               	movwf	postinc1,c
 18213  012E0E  0E3A               	movlw	58
 18214  012E10  6EE6               	movwf	postinc1,c
 18215  012E12  0E02               	movlw	2
 18216  012E14  6EE6               	movwf	postinc1,c
 18217  012E16  0E00               	movlw	0
 18218  012E18  6EE6               	movwf	postinc1,c
 18219  012E1A  0E00               	movlw	0
 18220  012E1C  6EE6               	movwf	postinc1,c
 18221  012E1E  0E00               	movlw	0
 18222  012E20  6EE6               	movwf	postinc1,c
 18223  012E22  0E00               	movlw	0
 18224  012E24  6EE6               	movwf	postinc1,c
 18225  012E26  0E00               	movlw	0
 18226  012E28  6EE6               	movwf	postinc1,c
 18227                           
 18228                           ;stkvar	_days @ sp[(-65)+9]
 18229  012E2A  50E1               	movf	fsr1l,w,c
 18230  012E2C  0FC8               	addlw	-56
 18231  012E2E  6ED9               	movwf	fsr2l,c
 18232  012E30  50E2               	movf	fsr1h,w,c
 18233  012E32  6EDA               	movwf	fsr2h,c
 18234  012E34  0EFF               	movlw	255
 18235  012E36  22DA               	addwfc	fsr2h,f,c
 18236  012E38  006F FF7B FFE6     	movff	postinc2,postinc1
 18237  012E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 18238  012E44  006F FF7B FFE6     	movff	postinc2,postinc1
 18239  012E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 18240  012E50  006F FF7B FFE6     	movff	postinc2,postinc1
 18241  012E56  006F FF7B FFE6     	movff	postinc2,postinc1
 18242  012E5C  006F FF7B FFE6     	movff	postinc2,postinc1
 18243  012E62  006F FF7B FFE6     	movff	postinc2,postinc1
 18244  012E68  EC7D  F0E2         	call	___aodiv	;wreg free
 18245  012E6C  52E5               	movf	postdec1,f,c
 18246  012E6E  006F FF9C  F041    	movff	indf1,btemp+23
 18247  012E74  52E5               	movf	postdec1,f,c
 18248  012E76  006F FF9C  F040    	movff	indf1,btemp+22
 18249  012E7C  52E5               	movf	postdec1,f,c
 18250  012E7E  006F FF9C  F03F    	movff	indf1,btemp+21
 18251  012E84  52E5               	movf	postdec1,f,c
 18252  012E86  006F FF9C  F03E    	movff	indf1,btemp+20
 18253  012E8C  52E5               	movf	postdec1,f,c
 18254  012E8E  006F FF9C  F03D    	movff	indf1,btemp+19
 18255  012E94  52E5               	movf	postdec1,f,c
 18256  012E96  006F FF9C  F03C    	movff	indf1,btemp+18
 18257  012E9C  52E5               	movf	postdec1,f,c
 18258  012E9E  006F FF9C  F03B    	movff	indf1,btemp+17
 18259  012EA4  52E5               	movf	postdec1,f,c
 18260  012EA6  006F FF9C  F03A    	movff	indf1,btemp+16
 18261  012EAC  0EF8               	movlw	248
 18262  012EAE  26E1               	addwf	fsr1l,f,c
 18263  012EB0  0EFF               	movlw	255
 18264  012EB2  22E2               	addwfc	fsr1h,f,c
 18265  012EB4  0060  F0E8  F032   	movff	btemp+16,btemp+8
 18266  012EBA  0060  F0EC  F033   	movff	btemp+17,btemp+9
 18267  012EC0  0060  F0F0  F034   	movff	btemp+18,btemp+10
 18268  012EC6  0060  F0F4  F035   	movff	btemp+19,btemp+11
 18269                           
 18270                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 18271  012ECC  0EF4               	movlw	-12
 18272  012ECE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18273  012ED4  0EF5               	movlw	-11
 18274  012ED6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18275  012EDC  0EF6               	movlw	-10
 18276  012EDE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18277  012EE4  0EF7               	movlw	-9
 18278  012EE6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18279  012EEC  0EB1               	movlw	177
 18280  012EEE  6EE6               	movwf	postinc1,c
 18281  012EF0  0E3A               	movlw	58
 18282  012EF2  6EE6               	movwf	postinc1,c
 18283  012EF4  0E02               	movlw	2
 18284  012EF6  6EE6               	movwf	postinc1,c
 18285  012EF8  0E00               	movlw	0
 18286  012EFA  6EE6               	movwf	postinc1,c
 18287  012EFC  0E00               	movlw	0
 18288  012EFE  6EE6               	movwf	postinc1,c
 18289  012F00  0E00               	movlw	0
 18290  012F02  6EE6               	movwf	postinc1,c
 18291  012F04  0E00               	movlw	0
 18292  012F06  6EE6               	movwf	postinc1,c
 18293  012F08  0E00               	movlw	0
 18294  012F0A  6EE6               	movwf	postinc1,c
 18295                           
 18296                           ;stkvar	_days @ sp[(-65)+9]
 18297  012F0C  50E1               	movf	fsr1l,w,c
 18298  012F0E  0FC8               	addlw	-56
 18299  012F10  6ED9               	movwf	fsr2l,c
 18300  012F12  50E2               	movf	fsr1h,w,c
 18301  012F14  6EDA               	movwf	fsr2h,c
 18302  012F16  0EFF               	movlw	255
 18303  012F18  22DA               	addwfc	fsr2h,f,c
 18304  012F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 18305  012F20  006F FF7B FFE6     	movff	postinc2,postinc1
 18306  012F26  006F FF7B FFE6     	movff	postinc2,postinc1
 18307  012F2C  006F FF7B FFE6     	movff	postinc2,postinc1
 18308  012F32  006F FF7B FFE6     	movff	postinc2,postinc1
 18309  012F38  006F FF7B FFE6     	movff	postinc2,postinc1
 18310  012F3E  006F FF7B FFE6     	movff	postinc2,postinc1
 18311  012F44  006F FF7B FFE6     	movff	postinc2,postinc1
 18312  012F4A  EC3C  F0E7         	call	___aomod	;wreg free
 18313  012F4E  52E5               	movf	postdec1,f,c
 18314  012F50  006F FF9C  F041    	movff	indf1,btemp+23
 18315  012F56  52E5               	movf	postdec1,f,c
 18316  012F58  006F FF9C  F040    	movff	indf1,btemp+22
 18317  012F5E  52E5               	movf	postdec1,f,c
 18318  012F60  006F FF9C  F03F    	movff	indf1,btemp+21
 18319  012F66  52E5               	movf	postdec1,f,c
 18320  012F68  006F FF9C  F03E    	movff	indf1,btemp+20
 18321  012F6E  52E5               	movf	postdec1,f,c
 18322  012F70  006F FF9C  F03D    	movff	indf1,btemp+19
 18323  012F76  52E5               	movf	postdec1,f,c
 18324  012F78  006F FF9C  F03C    	movff	indf1,btemp+18
 18325  012F7E  52E5               	movf	postdec1,f,c
 18326  012F80  006F FF9C  F03B    	movff	indf1,btemp+17
 18327  012F86  52E5               	movf	postdec1,f,c
 18328  012F88  006F FF9C  F03A    	movff	indf1,btemp+16
 18329  012F8E  0EF8               	movlw	248
 18330  012F90  26E1               	addwf	fsr1l,f,c
 18331  012F92  0EFF               	movlw	255
 18332  012F94  22E2               	addwfc	fsr1h,f,c
 18333  012F96  0060  F0E8  F032   	movff	btemp+16,btemp+8
 18334  012F9C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 18335  012FA2  0060  F0F0  F034   	movff	btemp+18,btemp+10
 18336  012FA8  0060  F0F4  F035   	movff	btemp+19,btemp+11
 18337                           
 18338                           ;stkvar	_remdays @ sp[(-57)+25]
 18339  012FAE  0EE0               	movlw	-32
 18340  012FB0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18341  012FB6  0EE1               	movlw	-31
 18342  012FB8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18343  012FBE  0EE2               	movlw	-30
 18344  012FC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18345  012FC6  0EE3               	movlw	-29
 18346  012FC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18347                           
 18348                           ;stkvar	_remdays @ sp[(-57)+25]
 18349  012FCE  0EE3               	movlw	-29
 18350  012FD0  AEE3               	btfss	plusw1,7,c
 18351  012FD2  D01B               	goto	l16568
 18352                           
 18353                           ;stkvar	_remdays @ sp[(-57)+25]
 18354  012FD4  50E1               	movf	fsr1l,w,c
 18355  012FD6  0FE0               	addlw	-32
 18356  012FD8  6ED9               	movwf	fsr2l,c
 18357  012FDA  50E2               	movf	fsr1h,w,c
 18358  012FDC  6EDA               	movwf	fsr2h,c
 18359  012FDE  0EFF               	movlw	255
 18360  012FE0  22DA               	addwfc	fsr2h,f,c
 18361  012FE2  0EB1               	movlw	177
 18362  012FE4  26DE               	addwf	postinc2,f,c
 18363  012FE6  0E3A               	movlw	58
 18364  012FE8  22DE               	addwfc	postinc2,f,c
 18365  012FEA  0E02               	movlw	2
 18366  012FEC  22DE               	addwfc	postinc2,f,c
 18367  012FEE  0E00               	movlw	0
 18368  012FF0  22DE               	addwfc	postinc2,f,c
 18369                           
 18370                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 18371  012FF2  50E1               	movf	fsr1l,w,c
 18372  012FF4  0FF4               	addlw	-12
 18373  012FF6  6ED9               	movwf	fsr2l,c
 18374  012FF8  50E2               	movf	fsr1h,w,c
 18375  012FFA  6EDA               	movwf	fsr2h,c
 18376  012FFC  0EFF               	movlw	255
 18377  012FFE  22DA               	addwfc	fsr2h,f,c
 18378  013000  06DE               	decf	postinc2,f,c
 18379  013002  0E00               	movlw	0
 18380  013004  5ADE               	subwfb	postinc2,f,c
 18381  013006  5ADE               	subwfb	postinc2,f,c
 18382  013008  5ADE               	subwfb	postinc2,f,c
 18383  01300A                     l16568:
 18384  01300A  0EAC               	movlw	172
 18385  01300C  6EE6               	movwf	postinc1,c
 18386  01300E  0E8E               	movlw	142
 18387  013010  6EE6               	movwf	postinc1,c
 18388  013012  0E00               	movlw	0
 18389  013014  6EE6               	movwf	postinc1,c
 18390  013016  0E00               	movlw	0
 18391  013018  6EE6               	movwf	postinc1,c
 18392                           
 18393                           ;stkvar	_remdays @ sp[(-61)+25]
 18394  01301A  0EDC               	movlw	-36
 18395  01301C  006F FF8F FFE6     	movff	plusw1,postinc1
 18396  013022  006F FF8F FFE6     	movff	plusw1,postinc1
 18397  013028  006F FF8F FFE6     	movff	plusw1,postinc1
 18398  01302E  006F FF8F FFE6     	movff	plusw1,postinc1
 18399  013034  ECFC  F0F0         	call	___aldiv	;wreg free
 18400                           
 18401                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18402  013038  0EE8               	movlw	-24
 18403  01303A  0060  F0AB  FFE3   	movff	btemp,plusw1
 18404  013040  0EE9               	movlw	-23
 18405  013042  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 18406  013048  0EEA               	movlw	-22
 18407  01304A  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 18408  013050  0EEB               	movlw	-21
 18409  013052  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 18410                           
 18411                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18412  013058  0EE8               	movlw	-24
 18413  01305A  006F FF8C  F02A    	movff	plusw1,btemp
 18414  013060  0E04               	movlw	4
 18415  013062  182A               	xorwf	btemp^0,w,c
 18416  013064  E116               	bnz	l16574
 18417  013066  0EE9               	movlw	-23
 18418  013068  50E3               	movf	plusw1,w,c
 18419  01306A  E113               	bnz	l16574
 18420  01306C  0EEA               	movlw	-22
 18421  01306E  50E3               	movf	plusw1,w,c
 18422  013070  E110               	bnz	l16574
 18423  013072  0EEB               	movlw	-21
 18424  013074  50E3               	movf	plusw1,w,c
 18425  013076  A4D8               	btfss	status,2,c
 18426  013078  D00C               	goto	l16574
 18427                           
 18428                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18429  01307A  50E1               	movf	fsr1l,w,c
 18430  01307C  0FE8               	addlw	-24
 18431  01307E  6ED9               	movwf	fsr2l,c
 18432  013080  50E2               	movf	fsr1h,w,c
 18433  013082  6EDA               	movwf	fsr2h,c
 18434  013084  0EFF               	movlw	255
 18435  013086  22DA               	addwfc	fsr2h,f,c
 18436  013088  06DE               	decf	postinc2,f,c
 18437  01308A  0E00               	movlw	0
 18438  01308C  5ADE               	subwfb	postinc2,f,c
 18439  01308E  5ADE               	subwfb	postinc2,f,c
 18440  013090  5ADE               	subwfb	postinc2,f,c
 18441  013092                     l16574:
 18442  013092  0EAC               	movlw	172
 18443  013094  6EE6               	movwf	postinc1,c
 18444  013096  0E8E               	movlw	142
 18445  013098  6EE6               	movwf	postinc1,c
 18446  01309A  0E00               	movlw	0
 18447  01309C  6EE6               	movwf	postinc1,c
 18448  01309E  0E00               	movlw	0
 18449  0130A0  6EE6               	movwf	postinc1,c
 18450                           
 18451                           ;stkvar	_c_cycles @ sp[(-61)+33]
 18452  0130A2  0EE4               	movlw	-28
 18453  0130A4  006F FF8F FFE6     	movff	plusw1,postinc1
 18454  0130AA  006F FF8F FFE6     	movff	plusw1,postinc1
 18455  0130B0  006F FF8F FFE6     	movff	plusw1,postinc1
 18456  0130B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18457  0130BC  ECAC  F002         	call	___lmul	;wreg free
 18458                           
 18459                           ;stkvar	_remdays @ sp[(-57)+25]
 18460  0130C0  50E1               	movf	fsr1l,w,c
 18461  0130C2  0FE0               	addlw	-32
 18462  0130C4  6ED9               	movwf	fsr2l,c
 18463  0130C6  50E2               	movf	fsr1h,w,c
 18464  0130C8  6EDA               	movwf	fsr2h,c
 18465  0130CA  0EFF               	movlw	255
 18466  0130CC  22DA               	addwfc	fsr2h,f,c
 18467  0130CE  502A               	movf	btemp^0,w,c
 18468  0130D0  5EDE               	subwf	postinc2,f,c
 18469  0130D2  502B               	movf	(btemp+1)^0,w,c
 18470  0130D4  5ADE               	subwfb	postinc2,f,c
 18471  0130D6  502C               	movf	(btemp+2)^0,w,c
 18472  0130D8  5ADE               	subwfb	postinc2,f,c
 18473  0130DA  502D               	movf	(btemp+3)^0,w,c
 18474  0130DC  5ADE               	subwfb	postinc2,f,c
 18475  0130DE  0EB5               	movlw	181
 18476  0130E0  6EE6               	movwf	postinc1,c
 18477  0130E2  0E05               	movlw	5
 18478  0130E4  6EE6               	movwf	postinc1,c
 18479  0130E6  0E00               	movlw	0
 18480  0130E8  6EE6               	movwf	postinc1,c
 18481  0130EA  0E00               	movlw	0
 18482  0130EC  6EE6               	movwf	postinc1,c
 18483                           
 18484                           ;stkvar	_remdays @ sp[(-61)+25]
 18485  0130EE  0EDC               	movlw	-36
 18486  0130F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18487  0130F6  006F FF8F FFE6     	movff	plusw1,postinc1
 18488  0130FC  006F FF8F FFE6     	movff	plusw1,postinc1
 18489  013102  006F FF8F FFE6     	movff	plusw1,postinc1
 18490  013108  ECFC  F0F0         	call	___aldiv	;wreg free
 18491                           
 18492                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18493  01310C  0EE4               	movlw	-28
 18494  01310E  0060  F0AB  FFE3   	movff	btemp,plusw1
 18495  013114  0EE5               	movlw	-27
 18496  013116  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 18497  01311C  0EE6               	movlw	-26
 18498  01311E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 18499  013124  0EE7               	movlw	-25
 18500  013126  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 18501                           
 18502                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18503  01312C  0EE4               	movlw	-28
 18504  01312E  006F FF8C  F02A    	movff	plusw1,btemp
 18505  013134  0E19               	movlw	25
 18506  013136  182A               	xorwf	btemp^0,w,c
 18507  013138  E116               	bnz	l16582
 18508  01313A  0EE5               	movlw	-27
 18509  01313C  50E3               	movf	plusw1,w,c
 18510  01313E  E113               	bnz	l16582
 18511  013140  0EE6               	movlw	-26
 18512  013142  50E3               	movf	plusw1,w,c
 18513  013144  E110               	bnz	l16582
 18514  013146  0EE7               	movlw	-25
 18515  013148  50E3               	movf	plusw1,w,c
 18516  01314A  A4D8               	btfss	status,2,c
 18517  01314C  D00C               	goto	l16582
 18518                           
 18519                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18520  01314E  50E1               	movf	fsr1l,w,c
 18521  013150  0FE4               	addlw	-28
 18522  013152  6ED9               	movwf	fsr2l,c
 18523  013154  50E2               	movf	fsr1h,w,c
 18524  013156  6EDA               	movwf	fsr2h,c
 18525  013158  0EFF               	movlw	255
 18526  01315A  22DA               	addwfc	fsr2h,f,c
 18527  01315C  06DE               	decf	postinc2,f,c
 18528  01315E  0E00               	movlw	0
 18529  013160  5ADE               	subwfb	postinc2,f,c
 18530  013162  5ADE               	subwfb	postinc2,f,c
 18531  013164  5ADE               	subwfb	postinc2,f,c
 18532  013166                     l16582:
 18533  013166  0EB5               	movlw	181
 18534  013168  6EE6               	movwf	postinc1,c
 18535  01316A  0E05               	movlw	5
 18536  01316C  6EE6               	movwf	postinc1,c
 18537  01316E  0E00               	movlw	0
 18538  013170  6EE6               	movwf	postinc1,c
 18539  013172  0E00               	movlw	0
 18540  013174  6EE6               	movwf	postinc1,c
 18541                           
 18542                           ;stkvar	_q_cycles @ sp[(-61)+29]
 18543  013176  0EE0               	movlw	-32
 18544  013178  006F FF8F FFE6     	movff	plusw1,postinc1
 18545  01317E  006F FF8F FFE6     	movff	plusw1,postinc1
 18546  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 18547  01318A  006F FF8F FFE6     	movff	plusw1,postinc1
 18548  013190  ECAC  F002         	call	___lmul	;wreg free
 18549                           
 18550                           ;stkvar	_remdays @ sp[(-57)+25]
 18551  013194  50E1               	movf	fsr1l,w,c
 18552  013196  0FE0               	addlw	-32
 18553  013198  6ED9               	movwf	fsr2l,c
 18554  01319A  50E2               	movf	fsr1h,w,c
 18555  01319C  6EDA               	movwf	fsr2h,c
 18556  01319E  0EFF               	movlw	255
 18557  0131A0  22DA               	addwfc	fsr2h,f,c
 18558  0131A2  502A               	movf	btemp^0,w,c
 18559  0131A4  5EDE               	subwf	postinc2,f,c
 18560  0131A6  502B               	movf	(btemp+1)^0,w,c
 18561  0131A8  5ADE               	subwfb	postinc2,f,c
 18562  0131AA  502C               	movf	(btemp+2)^0,w,c
 18563  0131AC  5ADE               	subwfb	postinc2,f,c
 18564  0131AE  502D               	movf	(btemp+3)^0,w,c
 18565  0131B0  5ADE               	subwfb	postinc2,f,c
 18566  0131B2  0E6D               	movlw	109
 18567  0131B4  6EE6               	movwf	postinc1,c
 18568  0131B6  0E01               	movlw	1
 18569  0131B8  6EE6               	movwf	postinc1,c
 18570  0131BA  0E00               	movlw	0
 18571  0131BC  6EE6               	movwf	postinc1,c
 18572  0131BE  0E00               	movlw	0
 18573  0131C0  6EE6               	movwf	postinc1,c
 18574                           
 18575                           ;stkvar	_remdays @ sp[(-61)+25]
 18576  0131C2  0EDC               	movlw	-36
 18577  0131C4  006F FF8F FFE6     	movff	plusw1,postinc1
 18578  0131CA  006F FF8F FFE6     	movff	plusw1,postinc1
 18579  0131D0  006F FF8F FFE6     	movff	plusw1,postinc1
 18580  0131D6  006F FF8F FFE6     	movff	plusw1,postinc1
 18581  0131DC  ECFC  F0F0         	call	___aldiv	;wreg free
 18582                           
 18583                           ;stkvar	_remyears @ sp[(-57)+37]
 18584  0131E0  0EEC               	movlw	-20
 18585  0131E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 18586  0131E8  0EED               	movlw	-19
 18587  0131EA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 18588  0131F0  0EEE               	movlw	-18
 18589  0131F2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 18590  0131F8  0EEF               	movlw	-17
 18591  0131FA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 18592                           
 18593                           ;stkvar	_remyears @ sp[(-57)+37]
 18594  013200  0EEC               	movlw	-20
 18595  013202  006F FF8C  F02A    	movff	plusw1,btemp
 18596  013208  0E04               	movlw	4
 18597  01320A  182A               	xorwf	btemp^0,w,c
 18598  01320C  E116               	bnz	l16590
 18599  01320E  0EED               	movlw	-19
 18600  013210  50E3               	movf	plusw1,w,c
 18601  013212  E113               	bnz	l16590
 18602  013214  0EEE               	movlw	-18
 18603  013216  50E3               	movf	plusw1,w,c
 18604  013218  E110               	bnz	l16590
 18605  01321A  0EEF               	movlw	-17
 18606  01321C  50E3               	movf	plusw1,w,c
 18607  01321E  A4D8               	btfss	status,2,c
 18608  013220  D00C               	goto	l16590
 18609                           
 18610                           ;stkvar	_remyears @ sp[(-57)+37]
 18611  013222  50E1               	movf	fsr1l,w,c
 18612  013224  0FEC               	addlw	-20
 18613  013226  6ED9               	movwf	fsr2l,c
 18614  013228  50E2               	movf	fsr1h,w,c
 18615  01322A  6EDA               	movwf	fsr2h,c
 18616  01322C  0EFF               	movlw	255
 18617  01322E  22DA               	addwfc	fsr2h,f,c
 18618  013230  06DE               	decf	postinc2,f,c
 18619  013232  0E00               	movlw	0
 18620  013234  5ADE               	subwfb	postinc2,f,c
 18621  013236  5ADE               	subwfb	postinc2,f,c
 18622  013238  5ADE               	subwfb	postinc2,f,c
 18623  01323A                     l16590:
 18624  01323A  0E6D               	movlw	109
 18625  01323C  6EE6               	movwf	postinc1,c
 18626  01323E  0E01               	movlw	1
 18627  013240  6EE6               	movwf	postinc1,c
 18628  013242  0E00               	movlw	0
 18629  013244  6EE6               	movwf	postinc1,c
 18630  013246  0E00               	movlw	0
 18631  013248  6EE6               	movwf	postinc1,c
 18632                           
 18633                           ;stkvar	_remyears @ sp[(-61)+37]
 18634  01324A  0EE8               	movlw	-24
 18635  01324C  006F FF8F FFE6     	movff	plusw1,postinc1
 18636  013252  006F FF8F FFE6     	movff	plusw1,postinc1
 18637  013258  006F FF8F FFE6     	movff	plusw1,postinc1
 18638  01325E  006F FF8F FFE6     	movff	plusw1,postinc1
 18639  013264  ECAC  F002         	call	___lmul	;wreg free
 18640                           
 18641                           ;stkvar	_remdays @ sp[(-57)+25]
 18642  013268  50E1               	movf	fsr1l,w,c
 18643  01326A  0FE0               	addlw	-32
 18644  01326C  6ED9               	movwf	fsr2l,c
 18645  01326E  50E2               	movf	fsr1h,w,c
 18646  013270  6EDA               	movwf	fsr2h,c
 18647  013272  0EFF               	movlw	255
 18648  013274  22DA               	addwfc	fsr2h,f,c
 18649  013276  502A               	movf	btemp^0,w,c
 18650  013278  5EDE               	subwf	postinc2,f,c
 18651  01327A  502B               	movf	(btemp+1)^0,w,c
 18652  01327C  5ADE               	subwfb	postinc2,f,c
 18653  01327E  502C               	movf	(btemp+2)^0,w,c
 18654  013280  5ADE               	subwfb	postinc2,f,c
 18655  013282  502D               	movf	(btemp+3)^0,w,c
 18656  013284  5ADE               	subwfb	postinc2,f,c
 18657                           
 18658                           ;stkvar	___secs_to_tm$7651 @ sp[(-57)+0]
 18659  013286  0EC7               	movlw	-57
 18660  013288  6AE3               	clrf	plusw1,c
 18661                           
 18662                           ;stkvar	_remyears @ sp[(-57)+37]
 18663  01328A  0EEC               	movlw	-20
 18664  01328C  50E3               	movf	plusw1,w,c
 18665  01328E  E127               	bnz	l16602
 18666  013290  0EED               	movlw	-19
 18667  013292  50E3               	movf	plusw1,w,c
 18668  013294  E124               	bnz	l16602
 18669  013296  0EEE               	movlw	-18
 18670  013298  50E3               	movf	plusw1,w,c
 18671  01329A  E121               	bnz	l16602
 18672  01329C  0EEF               	movlw	-17
 18673  01329E  50E3               	movf	plusw1,w,c
 18674  0132A0  A4D8               	btfss	status,2,c
 18675  0132A2  D01D               	goto	l16602
 18676                           
 18677                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18678  0132A4  0EE4               	movlw	-28
 18679  0132A6  50E3               	movf	plusw1,w,c
 18680  0132A8  E117               	bnz	l16600
 18681  0132AA  0EE5               	movlw	-27
 18682  0132AC  50E3               	movf	plusw1,w,c
 18683  0132AE  E114               	bnz	l16600
 18684  0132B0  0EE6               	movlw	-26
 18685  0132B2  50E3               	movf	plusw1,w,c
 18686  0132B4  E111               	bnz	l16600
 18687  0132B6  0EE7               	movlw	-25
 18688  0132B8  50E3               	movf	plusw1,w,c
 18689  0132BA  A4D8               	btfss	status,2,c
 18690  0132BC  D00D               	goto	u16230
 18691                           
 18692                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18693  0132BE  0EE8               	movlw	-24
 18694  0132C0  50E3               	movf	plusw1,w,c
 18695  0132C2  E10D               	bnz	l16602
 18696  0132C4  0EE9               	movlw	-23
 18697  0132C6  50E3               	movf	plusw1,w,c
 18698  0132C8  E10A               	bnz	l16602
 18699  0132CA  0EEA               	movlw	-22
 18700  0132CC  50E3               	movf	plusw1,w,c
 18701  0132CE  E107               	bnz	l16602
 18702  0132D0  0EEB               	movlw	-21
 18703  0132D2  50E3               	movf	plusw1,w,c
 18704  0132D4  A4D8               	btfss	status,2,c
 18705  0132D6  D003               	goto	l16602
 18706  0132D8                     u16230:
 18707  0132D8                     l16600:
 18708                           
 18709                           ;stkvar	___secs_to_tm$7651 @ sp[(-57)+0]
 18710  0132D8  0EC7               	movlw	-57
 18711  0132DA  6AE3               	clrf	plusw1,c
 18712  0132DC  2AE3               	incf	plusw1,f,c
 18713  0132DE                     l16602:
 18714                           
 18715                           ;stkvar	___secs_to_tm$7651 @ sp[(-57)+0]
 18716  0132DE  0EC7               	movlw	-57
 18717  0132E0  50E3               	movf	plusw1,w,c
 18718  0132E2  6E34               	movwf	(btemp+10)^0,c
 18719  0132E4  6A35               	clrf	(btemp+11)^0,c
 18720                           
 18721                           ;stkvar	_leap @ sp[(-57)+51]
 18722  0132E6  0EFA               	movlw	-6
 18723  0132E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18724  0132EE  0EFB               	movlw	-5
 18725  0132F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18726                           
 18727                           ;stkvar	_remdays @ sp[(-57)+25]
 18728                           ;stkvar	_leap @ sp[(-57)+51]
 18729  0132F6  0EFA               	movlw	-6
 18730  0132F8  006F FF8C  F034    	movff	plusw1,btemp+10
 18731  0132FE  0EFB               	movlw	-5
 18732  013300  006F FF8C  F035    	movff	plusw1,btemp+11
 18733  013306  0EE0               	movlw	-32
 18734  013308  50E3               	movf	plusw1,w,c
 18735  01330A  2634               	addwf	(btemp+10)^0,f,c
 18736  01330C  0EE1               	movlw	-31
 18737  01330E  50E3               	movf	plusw1,w,c
 18738  013310  2235               	addwfc	(btemp+11)^0,f,c
 18739  013312  0E3B               	movlw	59
 18740  013314  2634               	addwf	(btemp+10)^0,f,c
 18741  013316  0E00               	movlw	0
 18742  013318  2235               	addwfc	(btemp+11)^0,f,c
 18743                           
 18744                           ;stkvar	_yday @ sp[(-57)+53]
 18745  01331A  0EFC               	movlw	-4
 18746  01331C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18747  013322  0EFD               	movlw	-3
 18748  013324  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18749                           
 18750                           ;stkvar	_leap @ sp[(-57)+51]
 18751  01332A  0EFA               	movlw	-6
 18752  01332C  50E3               	movf	plusw1,w,c
 18753  01332E  0F6D               	addlw	109
 18754  013330  6E34               	movwf	(btemp+10)^0,c
 18755  013332  0EFB               	movlw	-5
 18756  013334  006F FF8C  F035    	movff	plusw1,btemp+11
 18757  01333A  0E01               	movlw	1
 18758  01333C  2235               	addwfc	(btemp+11)^0,f,c
 18759                           
 18760                           ;stkvar	_yday @ sp[(-57)+53]
 18761  01333E  0EFC               	movlw	-4
 18762  013340  006F FF8C  F02A    	movff	plusw1,btemp
 18763  013346  5034               	movf	(btemp+10)^0,w,c
 18764  013348  5C2A               	subwf	btemp^0,w,c
 18765  01334A  0EFD               	movlw	-3
 18766  01334C  50E3               	movf	plusw1,w,c
 18767  01334E  0A80               	xorlw	128
 18768  013350  6E2A               	movwf	btemp^0,c
 18769  013352  5035               	movf	(btemp+11)^0,w,c
 18770  013354  0A80               	xorlw	128
 18771  013356  582A               	subwfb	btemp^0,w,c
 18772  013358  A0D8               	btfss	status,0,c
 18773  01335A  D01E               	goto	l16610
 18774                           
 18775                           ;stkvar	_leap @ sp[(-57)+51]
 18776  01335C  0EFA               	movlw	-6
 18777  01335E  50E3               	movf	plusw1,w,c
 18778  013360  0F6D               	addlw	109
 18779  013362  6E34               	movwf	(btemp+10)^0,c
 18780  013364  0EFB               	movlw	-5
 18781  013366  006F FF8C  F035    	movff	plusw1,btemp+11
 18782  01336C  0E01               	movlw	1
 18783  01336E  2235               	addwfc	(btemp+11)^0,f,c
 18784                           
 18785                           ;stkvar	_yday @ sp[(-57)+53]
 18786  013370  0EFC               	movlw	-4
 18787  013372  006F FF8C  F02A    	movff	plusw1,btemp
 18788  013378  5034               	movf	(btemp+10)^0,w,c
 18789  01337A  5E2A               	subwf	btemp^0,f,c
 18790  01337C  0EFC               	movlw	-4
 18791  01337E  0060  F0AB  FFE3   	movff	btemp,plusw1
 18792  013384  0EFD               	movlw	-3
 18793  013386  006F FF8C  F02A    	movff	plusw1,btemp
 18794  01338C  5035               	movf	(btemp+11)^0,w,c
 18795  01338E  5A2A               	subwfb	btemp^0,f,c
 18796  013390  0EFD               	movlw	-3
 18797  013392  0060  F0AB  FFE3   	movff	btemp,plusw1
 18798  013398                     l16610:
 18799                           
 18800                           ;stkvar	_remyears @ sp[(-57)+37]
 18801                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18802  013398  0EE4               	movlw	-28
 18803  01339A  006F FF8C  F032    	movff	plusw1,btemp+8
 18804  0133A0  0EE5               	movlw	-27
 18805  0133A2  006F FF8C  F033    	movff	plusw1,btemp+9
 18806  0133A8  0EE6               	movlw	-26
 18807  0133AA  006F FF8C  F034    	movff	plusw1,btemp+10
 18808  0133B0  0EE7               	movlw	-25
 18809  0133B2  006F FF8C  F035    	movff	plusw1,btemp+11
 18810  0133B8  0E02               	movlw	2
 18811  0133BA                     u16255:
 18812  0133BA  90D8               	bcf	status,0,c
 18813  0133BC  3632               	rlcf	(btemp+8)^0,f,c
 18814  0133BE  3633               	rlcf	(btemp+9)^0,f,c
 18815  0133C0  3634               	rlcf	(btemp+10)^0,f,c
 18816  0133C2  3635               	rlcf	(btemp+11)^0,f,c
 18817  0133C4  2EE8               	decfsz	wreg,f,c
 18818  0133C6  D7F9               	goto	u16255
 18819  0133C8  0E64               	movlw	100
 18820  0133CA  6EE6               	movwf	postinc1,c
 18821  0133CC  0E00               	movlw	0
 18822  0133CE  6EE6               	movwf	postinc1,c
 18823  0133D0  0E00               	movlw	0
 18824  0133D2  6EE6               	movwf	postinc1,c
 18825  0133D4  0E00               	movlw	0
 18826  0133D6  6EE6               	movwf	postinc1,c
 18827                           
 18828                           ;stkvar	_c_cycles @ sp[(-61)+33]
 18829  0133D8  0EE4               	movlw	-28
 18830  0133DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18831  0133E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18832  0133E6  006F FF8F FFE6     	movff	plusw1,postinc1
 18833  0133EC  006F FF8F FFE6     	movff	plusw1,postinc1
 18834  0133F2  ECAC  F002         	call	___lmul	;wreg free
 18835  0133F6  5032               	movf	(btemp+8)^0,w,c
 18836  0133F8  242A               	addwf	btemp^0,w,c
 18837  0133FA  6E2E               	movwf	(btemp+4)^0,c
 18838  0133FC  5033               	movf	(btemp+9)^0,w,c
 18839  0133FE  202B               	addwfc	(btemp+1)^0,w,c
 18840  013400  6E2F               	movwf	(btemp+5)^0,c
 18841  013402  5034               	movf	(btemp+10)^0,w,c
 18842  013404  202C               	addwfc	(btemp+2)^0,w,c
 18843  013406  6E30               	movwf	(btemp+6)^0,c
 18844  013408  5035               	movf	(btemp+11)^0,w,c
 18845  01340A  202D               	addwfc	(btemp+3)^0,w,c
 18846  01340C  6E31               	movwf	(btemp+7)^0,c
 18847  01340E  0EEC               	movlw	-20
 18848  013410  50E3               	movf	plusw1,w,c
 18849  013412  262E               	addwf	(btemp+4)^0,f,c
 18850  013414  0EED               	movlw	-19
 18851  013416  50E3               	movf	plusw1,w,c
 18852  013418  222F               	addwfc	(btemp+5)^0,f,c
 18853  01341A  0EEE               	movlw	-18
 18854  01341C  50E3               	movf	plusw1,w,c
 18855  01341E  2230               	addwfc	(btemp+6)^0,f,c
 18856  013420  0EEF               	movlw	-17
 18857  013422  50E3               	movf	plusw1,w,c
 18858  013424  2231               	addwfc	(btemp+7)^0,f,c
 18859  013426  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 18860  01342C  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 18861  013432  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 18862  013438  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 18863  01343E  6A3E               	clrf	(btemp+20)^0,c
 18864  013440  BE3D               	btfsc	(btemp+19)^0,7,c
 18865  013442  683E               	setf	(btemp+20)^0,c
 18866  013444  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 18867  01344A  0060  F0F8  F040   	movff	btemp+20,btemp+22
 18868  013450  0060  F0F8  F041   	movff	btemp+20,btemp+23
 18869  013456  0E90               	movlw	144
 18870  013458  6EE6               	movwf	postinc1,c
 18871  01345A  0E01               	movlw	1
 18872  01345C  6EE6               	movwf	postinc1,c
 18873  01345E  0E00               	movlw	0
 18874  013460  6EE6               	movwf	postinc1,c
 18875  013462  0E00               	movlw	0
 18876  013464  6EE6               	movwf	postinc1,c
 18877  013466  0E00               	movlw	0
 18878  013468  6EE6               	movwf	postinc1,c
 18879  01346A  0E00               	movlw	0
 18880  01346C  6EE6               	movwf	postinc1,c
 18881  01346E  0E00               	movlw	0
 18882  013470  6EE6               	movwf	postinc1,c
 18883  013472  0E00               	movlw	0
 18884  013474  6EE6               	movwf	postinc1,c
 18885                           
 18886                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 18887  013476  0EEC               	movlw	-20
 18888  013478  006F FF8C  F042    	movff	plusw1,btemp+24
 18889  01347E  0EED               	movlw	-19
 18890  013480  006F FF8C  F043    	movff	plusw1,btemp+25
 18891  013486  0EEE               	movlw	-18
 18892  013488  006F FF8C  F044    	movff	plusw1,btemp+26
 18893  01348E  0EEF               	movlw	-17
 18894  013490  006F FF8C  F045    	movff	plusw1,btemp+27
 18895  013496  6A46               	clrf	(btemp+28)^0,c
 18896  013498  BE45               	btfsc	(btemp+27)^0,7,c
 18897  01349A  6846               	setf	(btemp+28)^0,c
 18898  01349C  0060  F118  F047   	movff	btemp+28,btemp+29
 18899  0134A2  0060  F118  F048   	movff	btemp+28,btemp+30
 18900  0134A8  0060  F118  F049   	movff	btemp+28,btemp+31
 18901  0134AE  0060  F10B  FFE6   	movff	btemp+24,postinc1
 18902  0134B4  0060  F10F  FFE6   	movff	btemp+25,postinc1
 18903  0134BA  0060  F113  FFE6   	movff	btemp+26,postinc1
 18904  0134C0  0060  F117  FFE6   	movff	btemp+27,postinc1
 18905  0134C6  0060  F11B  FFE6   	movff	btemp+28,postinc1
 18906  0134CC  0060  F11F  FFE6   	movff	btemp+29,postinc1
 18907  0134D2  0060  F123  FFE6   	movff	btemp+30,postinc1
 18908  0134D8  0060  F127  FFE6   	movff	btemp+31,postinc1
 18909  0134DE  EC47  F0F8         	call	___omul	;wreg free
 18910  0134E2  52E5               	movf	postdec1,f,c
 18911  0134E4  006F FF9C  F049    	movff	indf1,btemp+31
 18912  0134EA  52E5               	movf	postdec1,f,c
 18913  0134EC  006F FF9C  F048    	movff	indf1,btemp+30
 18914  0134F2  52E5               	movf	postdec1,f,c
 18915  0134F4  006F FF9C  F047    	movff	indf1,btemp+29
 18916  0134FA  52E5               	movf	postdec1,f,c
 18917  0134FC  006F FF9C  F046    	movff	indf1,btemp+28
 18918  013502  52E5               	movf	postdec1,f,c
 18919  013504  006F FF9C  F045    	movff	indf1,btemp+27
 18920  01350A  52E5               	movf	postdec1,f,c
 18921  01350C  006F FF9C  F044    	movff	indf1,btemp+26
 18922  013512  52E5               	movf	postdec1,f,c
 18923  013514  006F FF9C  F043    	movff	indf1,btemp+25
 18924  01351A  52E5               	movf	postdec1,f,c
 18925  01351C  006F FF9C  F042    	movff	indf1,btemp+24
 18926  013522  0EF8               	movlw	248
 18927  013524  26E1               	addwf	fsr1l,f,c
 18928  013526  0EFF               	movlw	255
 18929  013528  22E2               	addwfc	fsr1h,f,c
 18930  01352A  503A               	movf	(btemp+16)^0,w,c
 18931  01352C  2442               	addwf	(btemp+24)^0,w,c
 18932  01352E  6E32               	movwf	(btemp+8)^0,c
 18933  013530  503B               	movf	(btemp+17)^0,w,c
 18934  013532  2043               	addwfc	(btemp+25)^0,w,c
 18935  013534  6E33               	movwf	(btemp+9)^0,c
 18936  013536  503C               	movf	(btemp+18)^0,w,c
 18937  013538  2044               	addwfc	(btemp+26)^0,w,c
 18938  01353A  6E34               	movwf	(btemp+10)^0,c
 18939  01353C  503D               	movf	(btemp+19)^0,w,c
 18940  01353E  2045               	addwfc	(btemp+27)^0,w,c
 18941  013540  6E35               	movwf	(btemp+11)^0,c
 18942  013542  503E               	movf	(btemp+20)^0,w,c
 18943  013544  2046               	addwfc	(btemp+28)^0,w,c
 18944  013546  6E36               	movwf	(btemp+12)^0,c
 18945  013548  503F               	movf	(btemp+21)^0,w,c
 18946  01354A  2047               	addwfc	(btemp+29)^0,w,c
 18947  01354C  6E37               	movwf	(btemp+13)^0,c
 18948  01354E  5040               	movf	(btemp+22)^0,w,c
 18949  013550  2048               	addwfc	(btemp+30)^0,w,c
 18950  013552  6E38               	movwf	(btemp+14)^0,c
 18951  013554  5041               	movf	(btemp+23)^0,w,c
 18952  013556  2049               	addwfc	(btemp+31)^0,w,c
 18953  013558  6E39               	movwf	(btemp+15)^0,c
 18954                           
 18955                           ;stkvar	_years @ sp[(-57)+1]
 18956  01355A  0EC8               	movlw	-56
 18957  01355C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18958  013562  0EC9               	movlw	-55
 18959  013564  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18960  01356A  0ECA               	movlw	-54
 18961  01356C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18962  013572  0ECB               	movlw	-53
 18963  013574  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18964  01357A  0ECC               	movlw	-52
 18965  01357C  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 18966  013582  0ECD               	movlw	-51
 18967  013584  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 18968  01358A  0ECE               	movlw	-50
 18969  01358C  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 18970  013592  0ECF               	movlw	-49
 18971  013594  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 18972                           
 18973                           ;stkvar	_months @ sp[(-57)+49]
 18974  01359A  0EF8               	movlw	-8
 18975  01359C  6AE3               	clrf	plusw1,c
 18976  01359E  0EF9               	movlw	-7
 18977  0135A0  6AE3               	clrf	plusw1,c
 18978  0135A2  D030               	goto	l16618
 18979  0135A4                     l16614:
 18980                           
 18981                           ;stkvar	_remdays @ sp[(-57)+25]
 18982  0135A4  50E1               	movf	fsr1l,w,c
 18983  0135A6  0FE0               	addlw	-32
 18984  0135A8  6ED9               	movwf	fsr2l,c
 18985  0135AA  50E2               	movf	fsr1h,w,c
 18986  0135AC  6EDA               	movwf	fsr2h,c
 18987  0135AE  0EFF               	movlw	255
 18988  0135B0  22DA               	addwfc	fsr2h,f,c
 18989                           
 18990                           ;stkvar	_months @ sp[(-57)+49]
 18991  0135B2  0EF8               	movlw	-8
 18992  0135B4  006F FF8C  F034    	movff	plusw1,btemp+10
 18993  0135BA  0EF9               	movlw	-7
 18994  0135BC  006F FF8C  F035    	movff	plusw1,btemp+11
 18995  0135C2  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18996  0135C4  2434               	addwf	(btemp+10)^0,w,c
 18997  0135C6  6EF6               	movwf	tblptrl,c
 18998  0135C8  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18999  0135CA  2035               	addwfc	(btemp+11)^0,w,c
 19000  0135CC  6EF7               	movwf	tblptrh,c
 19001  0135CE                     	if	1	;There are 3 active tblptr bytes
 19002  0135CE  6AF8               	clrf	tblptru,c
 19003  0135D0  0E00               	movlw	low (__mediumconst shr (0+16))
 19004  0135D2  22F8               	addwfc	tblptru,f,c
 19005  0135D4                     	endif
 19006  0135D4  0008               	tblrd		*
 19007  0135D6  50F5               	movf	tablat,w,c
 19008  0135D8  5EDE               	subwf	postinc2,f,c
 19009  0135DA  0E00               	movlw	0
 19010  0135DC  5ADE               	subwfb	postinc2,f,c
 19011  0135DE  5ADE               	subwfb	postinc2,f,c
 19012  0135E0  5ADE               	subwfb	postinc2,f,c
 19013                           
 19014                           ;stkvar	_months @ sp[(-57)+49]
 19015  0135E2  0EF8               	movlw	-8
 19016  0135E4  50E3               	movf	plusw1,w,c
 19017  0135E6  0F01               	addlw	1
 19018  0135E8  6E2A               	movwf	btemp^0,c
 19019  0135EA  0EF8               	movlw	-8
 19020  0135EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19021  0135F2  6A2A               	clrf	btemp^0,c
 19022  0135F4  0EF9               	movlw	-7
 19023  0135F6  50E3               	movf	plusw1,w,c
 19024  0135F8  202A               	addwfc	btemp^0,w,c
 19025  0135FA  6E2A               	movwf	btemp^0,c
 19026  0135FC  0EF9               	movlw	-7
 19027  0135FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19028  013604                     l16618:
 19029                           
 19030                           ;stkvar	_months @ sp[(-57)+49]
 19031  013604  0EF8               	movlw	-8
 19032  013606  006F FF8C  F034    	movff	plusw1,btemp+10
 19033  01360C  0EF9               	movlw	-7
 19034  01360E  006F FF8C  F035    	movff	plusw1,btemp+11
 19035  013614  0EAB               	movlw	low ___secs_to_tm@days_in_month
 19036  013616  2434               	addwf	(btemp+10)^0,w,c
 19037  013618  6EF6               	movwf	tblptrl,c
 19038  01361A  0EF8               	movlw	high ___secs_to_tm@days_in_month
 19039  01361C  2035               	addwfc	(btemp+11)^0,w,c
 19040  01361E  6EF7               	movwf	tblptrh,c
 19041  013620                     	if	1	;There are 3 active tblptr bytes
 19042  013620  6AF8               	clrf	tblptru,c
 19043  013622  0E00               	movlw	low (__mediumconst shr (0+16))
 19044  013624  22F8               	addwfc	tblptru,f,c
 19045  013626                     	endif
 19046  013626  0008               	tblrd		*
 19047  013628  006F FFD4  F035    	movff	tablat,btemp+11
 19048  01362E  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 19049  013634  6A2F               	clrf	(btemp+5)^0,c
 19050  013636  6A30               	clrf	(btemp+6)^0,c
 19051  013638  6A31               	clrf	(btemp+7)^0,c
 19052                           
 19053                           ;stkvar	_remdays @ sp[(-57)+25]
 19054  01363A  0EE0               	movlw	-32
 19055  01363C  006F FF8C  F02A    	movff	plusw1,btemp
 19056  013642  502E               	movf	(btemp+4)^0,w,c
 19057  013644  5C2A               	subwf	btemp^0,w,c
 19058  013646  0EE1               	movlw	-31
 19059  013648  006F FF8C  F02A    	movff	plusw1,btemp
 19060  01364E  502F               	movf	(btemp+5)^0,w,c
 19061  013650  582A               	subwfb	btemp^0,w,c
 19062  013652  0EE2               	movlw	-30
 19063  013654  006F FF8C  F02A    	movff	plusw1,btemp
 19064  01365A  5030               	movf	(btemp+6)^0,w,c
 19065  01365C  582A               	subwfb	btemp^0,w,c
 19066  01365E  0EE3               	movlw	-29
 19067  013660  50E3               	movf	plusw1,w,c
 19068  013662  0A80               	xorlw	128
 19069  013664  6E2A               	movwf	btemp^0,c
 19070  013666  5031               	movf	(btemp+7)^0,w,c
 19071  013668  0A80               	xorlw	128
 19072  01366A  582A               	subwfb	btemp^0,w,c
 19073  01366C  B0D8               	btfsc	status,0,c
 19074  01366E  D79A               	goto	l16614
 19075                           
 19076                           ;stkvar	_months @ sp[(-57)+49]
 19077  013670  0EF9               	movlw	-7
 19078  013672  BEE3               	btfsc	plusw1,7,c
 19079  013674  D026               	goto	l16626
 19080  013676  0EF9               	movlw	-7
 19081  013678  50E3               	movf	plusw1,w,c
 19082  01367A  E108               	bnz	u16270
 19083  01367C  0EF8               	movlw	-8
 19084  01367E  006F FF8C  F02A    	movff	plusw1,btemp
 19085  013684  0E0A               	movlw	10
 19086  013686  5E2A               	subwf	btemp^0,f,c
 19087  013688  A0D8               	btfss	status,0,c
 19088  01368A  D01B               	goto	l16626
 19089  01368C                     u16270:
 19090                           
 19091                           ;stkvar	_months @ sp[(-57)+49]
 19092  01368C  50E1               	movf	fsr1l,w,c
 19093  01368E  0FF8               	addlw	-8
 19094  013690  6ED9               	movwf	fsr2l,c
 19095  013692  50E2               	movf	fsr1h,w,c
 19096  013694  6EDA               	movwf	fsr2h,c
 19097  013696  0EFF               	movlw	255
 19098  013698  22DA               	addwfc	fsr2h,f,c
 19099  01369A  0EF4               	movlw	244
 19100  01369C  26DE               	addwf	postinc2,f,c
 19101  01369E  0EFF               	movlw	255
 19102  0136A0  22DD               	addwfc	postdec2,f,c
 19103                           
 19104                           ;stkvar	_years @ sp[(-57)+1]
 19105  0136A2  50E1               	movf	fsr1l,w,c
 19106  0136A4  0FC8               	addlw	-56
 19107  0136A6  6ED9               	movwf	fsr2l,c
 19108  0136A8  50E2               	movf	fsr1h,w,c
 19109  0136AA  6EDA               	movwf	fsr2h,c
 19110  0136AC  0EFF               	movlw	255
 19111  0136AE  22DA               	addwfc	fsr2h,f,c
 19112  0136B0  2ADE               	incf	postinc2,f,c
 19113  0136B2  0E00               	movlw	0
 19114  0136B4  22DE               	addwfc	postinc2,f,c
 19115  0136B6  22DE               	addwfc	postinc2,f,c
 19116  0136B8  22DE               	addwfc	postinc2,f,c
 19117  0136BA  22DE               	addwfc	postinc2,f,c
 19118  0136BC  22DE               	addwfc	postinc2,f,c
 19119  0136BE  22DE               	addwfc	postinc2,f,c
 19120  0136C0  22DE               	addwfc	postinc2,f,c
 19121  0136C2                     l16626:
 19122                           
 19123                           ;stkvar	_years @ sp[(-57)+1]
 19124  0136C2  0EC8               	movlw	-56
 19125  0136C4  50E3               	movf	plusw1,w,c
 19126  0136C6  0F64               	addlw	100
 19127  0136C8  6E3A               	movwf	(btemp+16)^0,c
 19128  0136CA  0EC9               	movlw	-55
 19129  0136CC  006F FF8C  F03B    	movff	plusw1,btemp+17
 19130  0136D2  0E00               	movlw	0
 19131  0136D4  223B               	addwfc	(btemp+17)^0,f,c
 19132  0136D6  0ECA               	movlw	-54
 19133  0136D8  006F FF8C  F03C    	movff	plusw1,btemp+18
 19134  0136DE  0E00               	movlw	0
 19135  0136E0  223C               	addwfc	(btemp+18)^0,f,c
 19136  0136E2  0ECB               	movlw	-53
 19137  0136E4  006F FF8C  F03D    	movff	plusw1,btemp+19
 19138  0136EA  0E00               	movlw	0
 19139  0136EC  223D               	addwfc	(btemp+19)^0,f,c
 19140  0136EE  0ECC               	movlw	-52
 19141  0136F0  006F FF8C  F03E    	movff	plusw1,btemp+20
 19142  0136F6  0E00               	movlw	0
 19143  0136F8  223E               	addwfc	(btemp+20)^0,f,c
 19144  0136FA  0ECD               	movlw	-51
 19145  0136FC  006F FF8C  F03F    	movff	plusw1,btemp+21
 19146  013702  0E00               	movlw	0
 19147  013704  223F               	addwfc	(btemp+21)^0,f,c
 19148  013706  0ECE               	movlw	-50
 19149  013708  006F FF8C  F040    	movff	plusw1,btemp+22
 19150  01370E  0E00               	movlw	0
 19151  013710  2240               	addwfc	(btemp+22)^0,f,c
 19152  013712  0ECF               	movlw	-49
 19153  013714  006F FF8C  F041    	movff	plusw1,btemp+23
 19154  01371A  0E00               	movlw	0
 19155  01371C  2241               	addwfc	(btemp+23)^0,f,c
 19156  01371E  BE41               	btfsc	(btemp+23)^0,7,c
 19157  013720  D00C               	goto	u16280
 19158  013722  5041               	movf	(btemp+23)^0,w,c
 19159  013724  1040               	iorwf	(btemp+22)^0,w,c
 19160  013726  103F               	iorwf	(btemp+21)^0,w,c
 19161  013728  103E               	iorwf	(btemp+20)^0,w,c
 19162  01372A  103D               	iorwf	(btemp+19)^0,w,c
 19163  01372C  103C               	iorwf	(btemp+18)^0,w,c
 19164  01372E  E103               	bnz	u16281
 19165  013730  0E80               	movlw	128
 19166  013732  5C3B               	subwf	(btemp+17)^0,w,c
 19167  013734  B0D8               	btfsc	status,0,c
 19168  013736                     u16281:
 19169  013736  EF07  F095         	goto	u16140
 19170  01373A                     u16280:
 19171                           
 19172                           ;stkvar	_years @ sp[(-57)+1]
 19173  01373A  0EC8               	movlw	-56
 19174  01373C  50E3               	movf	plusw1,w,c
 19175  01373E  0F64               	addlw	100
 19176  013740  6E3A               	movwf	(btemp+16)^0,c
 19177  013742  0EC9               	movlw	-55
 19178  013744  006F FF8C  F03B    	movff	plusw1,btemp+17
 19179  01374A  0E00               	movlw	0
 19180  01374C  223B               	addwfc	(btemp+17)^0,f,c
 19181  01374E  0ECA               	movlw	-54
 19182  013750  006F FF8C  F03C    	movff	plusw1,btemp+18
 19183  013756  0E00               	movlw	0
 19184  013758  223C               	addwfc	(btemp+18)^0,f,c
 19185  01375A  0ECB               	movlw	-53
 19186  01375C  006F FF8C  F03D    	movff	plusw1,btemp+19
 19187  013762  0E00               	movlw	0
 19188  013764  223D               	addwfc	(btemp+19)^0,f,c
 19189  013766  0ECC               	movlw	-52
 19190  013768  006F FF8C  F03E    	movff	plusw1,btemp+20
 19191  01376E  0E00               	movlw	0
 19192  013770  223E               	addwfc	(btemp+20)^0,f,c
 19193  013772  0ECD               	movlw	-51
 19194  013774  006F FF8C  F03F    	movff	plusw1,btemp+21
 19195  01377A  0E00               	movlw	0
 19196  01377C  223F               	addwfc	(btemp+21)^0,f,c
 19197  01377E  0ECE               	movlw	-50
 19198  013780  006F FF8C  F040    	movff	plusw1,btemp+22
 19199  013786  0E00               	movlw	0
 19200  013788  2240               	addwfc	(btemp+22)^0,f,c
 19201  01378A  0ECF               	movlw	-49
 19202  01378C  006F FF8C  F041    	movff	plusw1,btemp+23
 19203  013792  0E00               	movlw	0
 19204  013794  2241               	addwfc	(btemp+23)^0,f,c
 19205  013796  AE41               	btfss	(btemp+23)^0,7,c
 19206  013798  D011               	goto	l16634
 19207  01379A  0E80               	movlw	128
 19208  01379C  5C3B               	subwf	(btemp+17)^0,w,c
 19209  01379E  0EFF               	movlw	255
 19210  0137A0  583C               	subwfb	(btemp+18)^0,w,c
 19211  0137A2  0EFF               	movlw	255
 19212  0137A4  583D               	subwfb	(btemp+19)^0,w,c
 19213  0137A6  0EFF               	movlw	255
 19214  0137A8  583E               	subwfb	(btemp+20)^0,w,c
 19215  0137AA  0EFF               	movlw	255
 19216  0137AC  583F               	subwfb	(btemp+21)^0,w,c
 19217  0137AE  0EFF               	movlw	255
 19218  0137B0  5840               	subwfb	(btemp+22)^0,w,c
 19219  0137B2  0EFF               	movlw	255
 19220  0137B4  5841               	subwfb	(btemp+23)^0,w,c
 19221  0137B6  A0D8               	btfss	status,0,c
 19222  0137B8  EF07  F095         	goto	u16140
 19223  0137BC                     l16634:
 19224                           
 19225                           ;stkvar	_years @ sp[(-57)+1]
 19226  0137BC  0EC8               	movlw	-56
 19227  0137BE  50E3               	movf	plusw1,w,c
 19228  0137C0  0F64               	addlw	100
 19229  0137C2  6E34               	movwf	(btemp+10)^0,c
 19230  0137C4  0EC9               	movlw	-55
 19231  0137C6  006F FF8C  F035    	movff	plusw1,btemp+11
 19232  0137CC  0E00               	movlw	0
 19233  0137CE  2235               	addwfc	(btemp+11)^0,f,c
 19234                           
 19235                           ;stkvar	_tm @ sp[(-57)+-10]
 19236  0137D0  0EBD               	movlw	-67
 19237  0137D2  006F FF8C  F032    	movff	plusw1,btemp+8
 19238  0137D8  0EBE               	movlw	-66
 19239  0137DA  006F FF8C  F033    	movff	plusw1,btemp+9
 19240  0137E0  0E0A               	movlw	10
 19241  0137E2  2432               	addwf	(btemp+8)^0,w,c
 19242  0137E4  6ED9               	movwf	fsr2l,c
 19243  0137E6  0E00               	movlw	0
 19244  0137E8  2033               	addwfc	(btemp+9)^0,w,c
 19245  0137EA  6EDA               	movwf	fsr2h,c
 19246  0137EC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19247  0137F2  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19248                           
 19249                           ;stkvar	_months @ sp[(-57)+49]
 19250  0137F8  0EF8               	movlw	-8
 19251  0137FA  50E3               	movf	plusw1,w,c
 19252  0137FC  0F02               	addlw	2
 19253  0137FE  6E34               	movwf	(btemp+10)^0,c
 19254  013800  0EF9               	movlw	-7
 19255  013802  006F FF8C  F035    	movff	plusw1,btemp+11
 19256  013808  0E00               	movlw	0
 19257  01380A  2235               	addwfc	(btemp+11)^0,f,c
 19258                           
 19259                           ;stkvar	_tm @ sp[(-57)+-10]
 19260  01380C  0EBD               	movlw	-67
 19261  01380E  006F FF8C  F032    	movff	plusw1,btemp+8
 19262  013814  0EBE               	movlw	-66
 19263  013816  006F FF8C  F033    	movff	plusw1,btemp+9
 19264  01381C  0E08               	movlw	8
 19265  01381E  2432               	addwf	(btemp+8)^0,w,c
 19266  013820  6ED9               	movwf	fsr2l,c
 19267  013822  0E00               	movlw	0
 19268  013824  2033               	addwfc	(btemp+9)^0,w,c
 19269  013826  6EDA               	movwf	fsr2h,c
 19270  013828  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19271  01382E  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19272                           
 19273                           ;stkvar	_remdays @ sp[(-57)+25]
 19274  013834  0EE0               	movlw	-32
 19275  013836  50E3               	movf	plusw1,w,c
 19276  013838  0F01               	addlw	1
 19277  01383A  6E34               	movwf	(btemp+10)^0,c
 19278  01383C  0EE1               	movlw	-31
 19279  01383E  006F FF8C  F035    	movff	plusw1,btemp+11
 19280  013844  0E00               	movlw	0
 19281  013846  2235               	addwfc	(btemp+11)^0,f,c
 19282                           
 19283                           ;stkvar	_tm @ sp[(-57)+-10]
 19284  013848  0EBD               	movlw	-67
 19285  01384A  006F FF8C  F032    	movff	plusw1,btemp+8
 19286  013850  0EBE               	movlw	-66
 19287  013852  006F FF8C  F033    	movff	plusw1,btemp+9
 19288  013858  0E06               	movlw	6
 19289  01385A  2432               	addwf	(btemp+8)^0,w,c
 19290  01385C  6ED9               	movwf	fsr2l,c
 19291  01385E  0E00               	movlw	0
 19292  013860  2033               	addwfc	(btemp+9)^0,w,c
 19293  013862  6EDA               	movwf	fsr2h,c
 19294  013864  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19295  01386A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19296                           
 19297                           ;stkvar	_wday @ sp[(-57)+55]
 19298  013870  50E1               	movf	fsr1l,w,c
 19299  013872  0FFE               	addlw	-2
 19300  013874  6ED9               	movwf	fsr2l,c
 19301  013876  50E2               	movf	fsr1h,w,c
 19302  013878  6EDA               	movwf	fsr2h,c
 19303  01387A  0EFF               	movlw	255
 19304  01387C  22DA               	addwfc	fsr2h,f,c
 19305                           
 19306                           ;stkvar	_tm @ sp[(-57)+-10]
 19307  01387E  0EBD               	movlw	-67
 19308  013880  006F FF8C  F034    	movff	plusw1,btemp+10
 19309  013886  0EBE               	movlw	-66
 19310  013888  006F FF8C  F035    	movff	plusw1,btemp+11
 19311  01388E  0E0C               	movlw	12
 19312  013890  2434               	addwf	(btemp+10)^0,w,c
 19313  013892  6EE9               	movwf	fsr0l,c
 19314  013894  0E00               	movlw	0
 19315  013896  2035               	addwfc	(btemp+11)^0,w,c
 19316  013898  6EEA               	movwf	fsr0h,c
 19317  01389A  006F FF7B FFEE     	movff	postinc2,postinc0
 19318  0138A0  006F FF77 FFED     	movff	postdec2,postdec0
 19319                           
 19320                           ;stkvar	_yday @ sp[(-57)+53]
 19321  0138A6  50E1               	movf	fsr1l,w,c
 19322  0138A8  0FFC               	addlw	-4
 19323  0138AA  6ED9               	movwf	fsr2l,c
 19324  0138AC  50E2               	movf	fsr1h,w,c
 19325  0138AE  6EDA               	movwf	fsr2h,c
 19326  0138B0  0EFF               	movlw	255
 19327  0138B2  22DA               	addwfc	fsr2h,f,c
 19328                           
 19329                           ;stkvar	_tm @ sp[(-57)+-10]
 19330  0138B4  0EBD               	movlw	-67
 19331  0138B6  006F FF8C  F034    	movff	plusw1,btemp+10
 19332  0138BC  0EBE               	movlw	-66
 19333  0138BE  006F FF8C  F035    	movff	plusw1,btemp+11
 19334  0138C4  0E0E               	movlw	14
 19335  0138C6  2434               	addwf	(btemp+10)^0,w,c
 19336  0138C8  6EE9               	movwf	fsr0l,c
 19337  0138CA  0E00               	movlw	0
 19338  0138CC  2035               	addwfc	(btemp+11)^0,w,c
 19339  0138CE  6EEA               	movwf	fsr0h,c
 19340  0138D0  006F FF7B FFEE     	movff	postinc2,postinc0
 19341  0138D6  006F FF77 FFED     	movff	postdec2,postdec0
 19342  0138DC  0E10               	movlw	16
 19343  0138DE  6EE6               	movwf	postinc1,c
 19344  0138E0  0E0E               	movlw	14
 19345  0138E2  6EE6               	movwf	postinc1,c
 19346  0138E4  0E00               	movlw	0
 19347  0138E6  6EE6               	movwf	postinc1,c
 19348  0138E8  0E00               	movlw	0
 19349  0138EA  6EE6               	movwf	postinc1,c
 19350                           
 19351                           ;stkvar	_remsecs @ sp[(-61)+41]
 19352  0138EC  0EEC               	movlw	-20
 19353  0138EE  006F FF8F FFE6     	movff	plusw1,postinc1
 19354  0138F4  006F FF8F FFE6     	movff	plusw1,postinc1
 19355  0138FA  006F FF8F FFE6     	movff	plusw1,postinc1
 19356  013900  006F FF8F FFE6     	movff	plusw1,postinc1
 19357  013906  ECFC  F0F0         	call	___aldiv	;wreg free
 19358  01390A  0060  F0A8  F034   	movff	btemp,btemp+10
 19359  013910  0060  F0AC  F035   	movff	btemp+1,btemp+11
 19360                           
 19361                           ;stkvar	_tm @ sp[(-57)+-10]
 19362  013916  0EBD               	movlw	-67
 19363  013918  006F FF8C  F032    	movff	plusw1,btemp+8
 19364  01391E  0EBE               	movlw	-66
 19365  013920  006F FF8C  F033    	movff	plusw1,btemp+9
 19366  013926  0E04               	movlw	4
 19367  013928  2432               	addwf	(btemp+8)^0,w,c
 19368  01392A  6ED9               	movwf	fsr2l,c
 19369  01392C  0E00               	movlw	0
 19370  01392E  2033               	addwfc	(btemp+9)^0,w,c
 19371  013930  6EDA               	movwf	fsr2h,c
 19372  013932  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19373  013938  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19374  01393E  0E3C               	movlw	60
 19375  013940  6EE6               	movwf	postinc1,c
 19376  013942  0E00               	movlw	0
 19377  013944  6EE6               	movwf	postinc1,c
 19378  013946  0E00               	movlw	0
 19379  013948  6EE6               	movwf	postinc1,c
 19380  01394A  0E00               	movlw	0
 19381  01394C  6EE6               	movwf	postinc1,c
 19382  01394E  0E3C               	movlw	60
 19383  013950  6EE6               	movwf	postinc1,c
 19384  013952  0E00               	movlw	0
 19385  013954  6EE6               	movwf	postinc1,c
 19386  013956  0E00               	movlw	0
 19387  013958  6EE6               	movwf	postinc1,c
 19388  01395A  0E00               	movlw	0
 19389  01395C  6EE6               	movwf	postinc1,c
 19390                           
 19391                           ;stkvar	_remsecs @ sp[(-65)+41]
 19392  01395E  0EE8               	movlw	-24
 19393  013960  006F FF8F FFE6     	movff	plusw1,postinc1
 19394  013966  006F FF8F FFE6     	movff	plusw1,postinc1
 19395  01396C  006F FF8F FFE6     	movff	plusw1,postinc1
 19396  013972  006F FF8F FFE6     	movff	plusw1,postinc1
 19397  013978  ECFC  F0F0         	call	___aldiv	;wreg free
 19398  01397C  0060  F0AB  FFE6   	movff	btemp,postinc1
 19399  013982  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 19400  013988  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 19401  01398E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 19402  013994  EC82  F0F5         	call	___almod	;wreg free
 19403  013998  0060  F0A8  F034   	movff	btemp,btemp+10
 19404  01399E  0060  F0AC  F035   	movff	btemp+1,btemp+11
 19405                           
 19406                           ;stkvar	_tm @ sp[(-57)+-10]
 19407  0139A4  0EBD               	movlw	-67
 19408  0139A6  006F FF8C  F032    	movff	plusw1,btemp+8
 19409  0139AC  0EBE               	movlw	-66
 19410  0139AE  006F FF8C  F033    	movff	plusw1,btemp+9
 19411  0139B4  0E02               	movlw	2
 19412  0139B6  2432               	addwf	(btemp+8)^0,w,c
 19413  0139B8  6ED9               	movwf	fsr2l,c
 19414  0139BA  0E00               	movlw	0
 19415  0139BC  2033               	addwfc	(btemp+9)^0,w,c
 19416  0139BE  6EDA               	movwf	fsr2h,c
 19417  0139C0  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19418  0139C6  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19419  0139CC  0E3C               	movlw	60
 19420  0139CE  6EE6               	movwf	postinc1,c
 19421  0139D0  0E00               	movlw	0
 19422  0139D2  6EE6               	movwf	postinc1,c
 19423  0139D4  0E00               	movlw	0
 19424  0139D6  6EE6               	movwf	postinc1,c
 19425  0139D8  0E00               	movlw	0
 19426  0139DA  6EE6               	movwf	postinc1,c
 19427                           
 19428                           ;stkvar	_remsecs @ sp[(-61)+41]
 19429  0139DC  0EEC               	movlw	-20
 19430  0139DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19431  0139E4  006F FF8F FFE6     	movff	plusw1,postinc1
 19432  0139EA  006F FF8F FFE6     	movff	plusw1,postinc1
 19433  0139F0  006F FF8F FFE6     	movff	plusw1,postinc1
 19434  0139F6  EC82  F0F5         	call	___almod	;wreg free
 19435  0139FA  0060  F0A8  F034   	movff	btemp,btemp+10
 19436  013A00  0060  F0AC  F035   	movff	btemp+1,btemp+11
 19437                           
 19438                           ;stkvar	_tm @ sp[(-57)+-10]
 19439  013A06  0EBD               	movlw	-67
 19440  013A08  006F FF8F FFD9     	movff	plusw1,fsr2l
 19441  013A0E  0EBE               	movlw	-66
 19442  013A10  006F FF8F FFDA     	movff	plusw1,fsr2h
 19443  013A16  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19444  013A1C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19445  013A22  0E00               	movlw	0
 19446  013A24  6E2A               	movwf	btemp^0,c
 19447  013A26  6A2B               	clrf	(btemp+1)^0,c
 19448  013A28  6A2C               	clrf	(btemp+2)^0,c
 19449  013A2A  6A2D               	clrf	(btemp+3)^0,c
 19450  013A2C                     l3857:
 19451                           
 19452                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 19453  013A2C  0EBD               	movlw	189
 19454  013A2E  26E1               	addwf	fsr1l,f,c
 19455  013A30  0EFF               	movlw	255
 19456  013A32  22E2               	addwfc	fsr1h,f,c
 19457  013A34  0012               	return		;funcret
 19458  013A36                     __end_of___secs_to_tm:
 19459                           	opt callstack 0
 19460                           
 19461 ;; *************** function ___omul *****************
 19462 ;; Defined at:
 19463 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 19464 ;; Parameters:    Size  Location     Type
 19465 ;;  multiplier      8  [STACK] unsigned long long 
 19466 ;;  multiplicand    8  [STACK] unsigned long long 
 19467 ;; Auto vars:     Size  Location     Type
 19468 ;;  product         8  [STACK] unsigned long long 
 19469 ;; Return value:  Size  Location     Type
 19470 ;;                  8  [STACK] unsigned long long 
 19471 ;; Registers used:
 19472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19473 ;; Tracked objects:
 19474 ;;		On entry : 0/0
 19475 ;;		On exit  : 0/0
 19476 ;;		Unchanged: 0/0
 19477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19482 ;;Total ram usage:        0 bytes
 19483 ;; Hardware stack levels used:    1
 19484 ;; Hardware stack levels required when called:   15
 19485 ;; This function calls:
 19486 ;;		Nothing
 19487 ;; This function is called by:
 19488 ;;		___secs_to_tm
 19489 ;;		___year_to_secs
 19490 ;; This function uses a reentrant model
 19491 ;;
 19492                           
 19493                           	psect	text51
 19494  01F08E                     __ptext51:
 19495                           	opt callstack 0
 19496  01F08E                     ___omul:
 19497                           	opt callstack 0
 19498                           
 19499                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19500  01F08E  0E08               	movlw	8
 19501  01F090  26E1               	addwf	fsr1l,f,c
 19502  01F092  0E00               	movlw	0
 19503  01F094  22E2               	addwfc	fsr1h,f,c
 19504                           
 19505                           ;stkvar	_product @ sp[(-8)+0]
 19506                           
 19507                           ;incstack = 0
 19508  01F096  0E07               	movlw	7
 19509  01F098  6E2A               	movwf	btemp^0,c
 19510  01F09A  0EF8               	movlw	-8
 19511  01F09C                     u8081:
 19512  01F09C  6AE3               	clrf	plusw1,c
 19513  01F09E  2AE8               	incf	wreg,f,c
 19514  01F0A0  062A               	decf	btemp^0,f,c
 19515  01F0A2  E2FC               	bc	u8081
 19516  01F0A4                     l10240:
 19517                           
 19518                           ;stkvar	_multiplier @ sp[(-8)+-8]
 19519  01F0A4  0EF0               	movlw	-16
 19520  01F0A6  A0E3               	btfss	plusw1,0,c
 19521  01F0A8  D050               	goto	l10244
 19522                           
 19523                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 19524                           ;stkvar	_product @ sp[(-8)+0]
 19525  01F0AA  0EF8               	movlw	-8
 19526  01F0AC  50E3               	movf	plusw1,w,c
 19527  01F0AE  6E2A               	movwf	btemp^0,c
 19528  01F0B0  0EE8               	movlw	-24
 19529  01F0B2  50E3               	movf	plusw1,w,c
 19530  01F0B4  262A               	addwf	btemp^0,f,c
 19531  01F0B6  0EF8               	movlw	-8
 19532  01F0B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19533  01F0BE  0EF9               	movlw	-7
 19534  01F0C0  50E3               	movf	plusw1,w,c
 19535  01F0C2  6E2A               	movwf	btemp^0,c
 19536  01F0C4  0EE9               	movlw	-23
 19537  01F0C6  50E3               	movf	plusw1,w,c
 19538  01F0C8  222A               	addwfc	btemp^0,f,c
 19539  01F0CA  0EF9               	movlw	-7
 19540  01F0CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19541  01F0D2  0EFA               	movlw	-6
 19542  01F0D4  50E3               	movf	plusw1,w,c
 19543  01F0D6  6E2A               	movwf	btemp^0,c
 19544  01F0D8  0EEA               	movlw	-22
 19545  01F0DA  50E3               	movf	plusw1,w,c
 19546  01F0DC  222A               	addwfc	btemp^0,f,c
 19547  01F0DE  0EFA               	movlw	-6
 19548  01F0E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19549  01F0E6  0EFB               	movlw	-5
 19550  01F0E8  50E3               	movf	plusw1,w,c
 19551  01F0EA  6E2A               	movwf	btemp^0,c
 19552  01F0EC  0EEB               	movlw	-21
 19553  01F0EE  50E3               	movf	plusw1,w,c
 19554  01F0F0  222A               	addwfc	btemp^0,f,c
 19555  01F0F2  0EFB               	movlw	-5
 19556  01F0F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19557  01F0FA  0EFC               	movlw	-4
 19558  01F0FC  50E3               	movf	plusw1,w,c
 19559  01F0FE  6E2A               	movwf	btemp^0,c
 19560  01F100  0EEC               	movlw	-20
 19561  01F102  50E3               	movf	plusw1,w,c
 19562  01F104  222A               	addwfc	btemp^0,f,c
 19563  01F106  0EFC               	movlw	-4
 19564  01F108  0060  F0AB  FFE3   	movff	btemp,plusw1
 19565  01F10E  0EFD               	movlw	-3
 19566  01F110  50E3               	movf	plusw1,w,c
 19567  01F112  6E2A               	movwf	btemp^0,c
 19568  01F114  0EED               	movlw	-19
 19569  01F116  50E3               	movf	plusw1,w,c
 19570  01F118  222A               	addwfc	btemp^0,f,c
 19571  01F11A  0EFD               	movlw	-3
 19572  01F11C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19573  01F122  0EFE               	movlw	-2
 19574  01F124  50E3               	movf	plusw1,w,c
 19575  01F126  6E2A               	movwf	btemp^0,c
 19576  01F128  0EEE               	movlw	-18
 19577  01F12A  50E3               	movf	plusw1,w,c
 19578  01F12C  222A               	addwfc	btemp^0,f,c
 19579  01F12E  0EFE               	movlw	-2
 19580  01F130  0060  F0AB  FFE3   	movff	btemp,plusw1
 19581  01F136  0EFF               	movlw	-1
 19582  01F138  50E3               	movf	plusw1,w,c
 19583  01F13A  6E2A               	movwf	btemp^0,c
 19584  01F13C  0EEF               	movlw	-17
 19585  01F13E  50E3               	movf	plusw1,w,c
 19586  01F140  222A               	addwfc	btemp^0,f,c
 19587  01F142  0EFF               	movlw	-1
 19588  01F144  0060  F0AB  FFE3   	movff	btemp,plusw1
 19589  01F14A                     l10244:
 19590                           
 19591                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 19592  01F14A  90D8               	bcf	status,0,c
 19593  01F14C  0EE8               	movlw	-24
 19594  01F14E  36E3               	rlcf	plusw1,f,c
 19595  01F150  0EE9               	movlw	-23
 19596  01F152  36E3               	rlcf	plusw1,f,c
 19597  01F154  0EEA               	movlw	-22
 19598  01F156  36E3               	rlcf	plusw1,f,c
 19599  01F158  0EEB               	movlw	-21
 19600  01F15A  36E3               	rlcf	plusw1,f,c
 19601  01F15C  0EEC               	movlw	-20
 19602  01F15E  36E3               	rlcf	plusw1,f,c
 19603  01F160  0EED               	movlw	-19
 19604  01F162  36E3               	rlcf	plusw1,f,c
 19605  01F164  0EEE               	movlw	-18
 19606  01F166  36E3               	rlcf	plusw1,f,c
 19607  01F168  0EEF               	movlw	-17
 19608  01F16A  36E3               	rlcf	plusw1,f,c
 19609                           
 19610                           ;stkvar	_multiplier @ sp[(-8)+-8]
 19611  01F16C  90D8               	bcf	status,0,c
 19612  01F16E  0EF7               	movlw	-9
 19613  01F170  32E3               	rrcf	plusw1,f,c
 19614  01F172  0EF6               	movlw	-10
 19615  01F174  32E3               	rrcf	plusw1,f,c
 19616  01F176  0EF5               	movlw	-11
 19617  01F178  32E3               	rrcf	plusw1,f,c
 19618  01F17A  0EF4               	movlw	-12
 19619  01F17C  32E3               	rrcf	plusw1,f,c
 19620  01F17E  0EF3               	movlw	-13
 19621  01F180  32E3               	rrcf	plusw1,f,c
 19622  01F182  0EF2               	movlw	-14
 19623  01F184  32E3               	rrcf	plusw1,f,c
 19624  01F186  0EF1               	movlw	-15
 19625  01F188  32E3               	rrcf	plusw1,f,c
 19626  01F18A  0EF0               	movlw	-16
 19627  01F18C  32E3               	rrcf	plusw1,f,c
 19628                           
 19629                           ;stkvar	_multiplier @ sp[(-8)+-8]
 19630  01F18E  0EF0               	movlw	-16
 19631  01F190  50E3               	movf	plusw1,w,c
 19632  01F192  E188               	bnz	l10240
 19633  01F194  0EF1               	movlw	-15
 19634  01F196  50E3               	movf	plusw1,w,c
 19635  01F198  E185               	bnz	l10240
 19636  01F19A  0EF2               	movlw	-14
 19637  01F19C  50E3               	movf	plusw1,w,c
 19638  01F19E  E182               	bnz	l10240
 19639  01F1A0  0EF3               	movlw	-13
 19640  01F1A2  50E3               	movf	plusw1,w,c
 19641  01F1A4  E10C               	bnz	u8101
 19642  01F1A6  0EF4               	movlw	-12
 19643  01F1A8  50E3               	movf	plusw1,w,c
 19644  01F1AA  E109               	bnz	u8101
 19645  01F1AC  0EF5               	movlw	-11
 19646  01F1AE  50E3               	movf	plusw1,w,c
 19647  01F1B0  E106               	bnz	u8101
 19648  01F1B2  0EF6               	movlw	-10
 19649  01F1B4  50E3               	movf	plusw1,w,c
 19650  01F1B6  E103               	bnz	u8101
 19651  01F1B8  0EF7               	movlw	-9
 19652  01F1BA  50E3               	movf	plusw1,w,c
 19653  01F1BC  A4D8               	btfss	status,2,c
 19654  01F1BE                     u8101:
 19655  01F1BE  D772               	goto	l10240
 19656                           
 19657                           ;stkvar	_product @ sp[(-8)+0]
 19658  01F1C0  0EF8               	movlw	248
 19659  01F1C2  24E1               	addwf	fsr1l,w,c
 19660  01F1C4  6ED9               	movwf	fsr2l,c
 19661  01F1C6  0EFF               	movlw	255
 19662  01F1C8  20E2               	addwfc	fsr1h,w,c
 19663  01F1CA  6EDA               	movwf	fsr2h,c
 19664                           
 19665                           ;stkvar	?___omul @ sp[(-8)+-8]
 19666  01F1CC  0E08               	movlw	8
 19667  01F1CE  6E2A               	movwf	btemp^0,c
 19668  01F1D0  0EF0               	movlw	-16
 19669  01F1D2                     us811999:
 19670  01F1D2  006F FF7B FFE3     	movff	postinc2,plusw1
 19671  01F1D8  28E8               	incf	wreg,w,c
 19672  01F1DA  2E2A               	decfsz	btemp^0,f,c
 19673  01F1DC  D7FA               	bra	us811999
 19674                           
 19675                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 19676  01F1DE  0EF8               	movlw	248
 19677  01F1E0  26E1               	addwf	fsr1l,f,c
 19678  01F1E2  0EFF               	movlw	255
 19679  01F1E4  22E2               	addwfc	fsr1h,f,c
 19680  01F1E6  0012               	return		;funcret
 19681  01F1E8                     __end_of___omul:
 19682                           	opt callstack 0
 19683                           
 19684 ;; *************** function ___lmul *****************
 19685 ;; Defined at:
 19686 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 19687 ;; Parameters:    Size  Location     Type
 19688 ;;  multiplier      4  [STACK] unsigned long 
 19689 ;;  multiplicand    4  [STACK] unsigned long 
 19690 ;; Auto vars:     Size  Location     Type
 19691 ;;  product         4  [STACK] unsigned long 
 19692 ;; Return value:  Size  Location     Type
 19693 ;;                  4  [STACK] unsigned long 
 19694 ;; Registers used:
 19695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19696 ;; Tracked objects:
 19697 ;;		On entry : 0/0
 19698 ;;		On exit  : 0/0
 19699 ;;		Unchanged: 0/0
 19700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19705 ;;Total ram usage:        0 bytes
 19706 ;; Hardware stack levels used:    1
 19707 ;; Hardware stack levels required when called:   15
 19708 ;; This function calls:
 19709 ;;		Nothing
 19710 ;; This function is called by:
 19711 ;;		___secs_to_tm
 19712 ;;		_rule_to_secs
 19713 ;;		___year_to_secs
 19714 ;; This function uses a reentrant model
 19715 ;;
 19716                           
 19717                           	psect	text52
 19718  000558                     __ptext52:
 19719                           	opt callstack 0
 19720  000558                     ___lmul:
 19721                           	opt callstack 0
 19722                           
 19723                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19724  000558  52E6               	movf	postinc1,f,c
 19725  00055A  52E6               	movf	postinc1,f,c
 19726  00055C  52E6               	movf	postinc1,f,c
 19727  00055E  52E6               	movf	postinc1,f,c
 19728                           
 19729                           ;stkvar	_product @ sp[(-4)+0]
 19730                           
 19731                           ;incstack = 0
 19732  000560  0EFC               	movlw	-4
 19733  000562  6AE3               	clrf	plusw1,c
 19734  000564  0EFD               	movlw	-3
 19735  000566  6AE3               	clrf	plusw1,c
 19736  000568  0EFE               	movlw	-2
 19737  00056A  6AE3               	clrf	plusw1,c
 19738  00056C  0EFF               	movlw	-1
 19739  00056E  6AE3               	clrf	plusw1,c
 19740  000570                     l2741:
 19741                           
 19742                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19743  000570  0EF8               	movlw	-8
 19744  000572  A0E3               	btfss	plusw1,0,c
 19745  000574  D028               	goto	l10230
 19746                           
 19747                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19748                           ;stkvar	_product @ sp[(-4)+0]
 19749  000576  0EFC               	movlw	-4
 19750  000578  50E3               	movf	plusw1,w,c
 19751  00057A  6E2A               	movwf	btemp^0,c
 19752  00057C  0EF4               	movlw	-12
 19753  00057E  50E3               	movf	plusw1,w,c
 19754  000580  262A               	addwf	btemp^0,f,c
 19755  000582  0EFC               	movlw	-4
 19756  000584  0060  F0AB  FFE3   	movff	btemp,plusw1
 19757  00058A  0EFD               	movlw	-3
 19758  00058C  50E3               	movf	plusw1,w,c
 19759  00058E  6E2A               	movwf	btemp^0,c
 19760  000590  0EF5               	movlw	-11
 19761  000592  50E3               	movf	plusw1,w,c
 19762  000594  222A               	addwfc	btemp^0,f,c
 19763  000596  0EFD               	movlw	-3
 19764  000598  0060  F0AB  FFE3   	movff	btemp,plusw1
 19765  00059E  0EFE               	movlw	-2
 19766  0005A0  50E3               	movf	plusw1,w,c
 19767  0005A2  6E2A               	movwf	btemp^0,c
 19768  0005A4  0EF6               	movlw	-10
 19769  0005A6  50E3               	movf	plusw1,w,c
 19770  0005A8  222A               	addwfc	btemp^0,f,c
 19771  0005AA  0EFE               	movlw	-2
 19772  0005AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19773  0005B2  0EFF               	movlw	-1
 19774  0005B4  50E3               	movf	plusw1,w,c
 19775  0005B6  6E2A               	movwf	btemp^0,c
 19776  0005B8  0EF7               	movlw	-9
 19777  0005BA  50E3               	movf	plusw1,w,c
 19778  0005BC  222A               	addwfc	btemp^0,f,c
 19779  0005BE  0EFF               	movlw	-1
 19780  0005C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19781  0005C6                     l10230:
 19782                           
 19783                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19784  0005C6  90D8               	bcf	status,0,c
 19785  0005C8  0EF4               	movlw	-12
 19786  0005CA  36E3               	rlcf	plusw1,f,c
 19787  0005CC  0EF5               	movlw	-11
 19788  0005CE  36E3               	rlcf	plusw1,f,c
 19789  0005D0  0EF6               	movlw	-10
 19790  0005D2  36E3               	rlcf	plusw1,f,c
 19791  0005D4  0EF7               	movlw	-9
 19792  0005D6  36E3               	rlcf	plusw1,f,c
 19793                           
 19794                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19795  0005D8  90D8               	bcf	status,0,c
 19796  0005DA  0EFB               	movlw	-5
 19797  0005DC  32E3               	rrcf	plusw1,f,c
 19798  0005DE  0EFA               	movlw	-6
 19799  0005E0  32E3               	rrcf	plusw1,f,c
 19800  0005E2  0EF9               	movlw	-7
 19801  0005E4  32E3               	rrcf	plusw1,f,c
 19802  0005E6  0EF8               	movlw	-8
 19803  0005E8  32E3               	rrcf	plusw1,f,c
 19804                           
 19805                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19806  0005EA  0EF8               	movlw	-8
 19807  0005EC  50E3               	movf	plusw1,w,c
 19808  0005EE  E1C0               	bnz	l2741
 19809  0005F0  0EF9               	movlw	-7
 19810  0005F2  50E3               	movf	plusw1,w,c
 19811  0005F4  E1BD               	bnz	l2741
 19812  0005F6  0EFA               	movlw	-6
 19813  0005F8  50E3               	movf	plusw1,w,c
 19814  0005FA  E1BA               	bnz	l2741
 19815  0005FC  0EFB               	movlw	-5
 19816  0005FE  50E3               	movf	plusw1,w,c
 19817  000600  A4D8               	btfss	status,2,c
 19818  000602  D7B6               	goto	l2741
 19819                           
 19820                           ;stkvar	_product @ sp[(-4)+0]
 19821  000604  0EFC               	movlw	-4
 19822  000606  006F FF8C  F02A    	movff	plusw1,btemp
 19823  00060C  0EFD               	movlw	-3
 19824  00060E  006F FF8C  F02B    	movff	plusw1,btemp+1
 19825  000614  0EFE               	movlw	-2
 19826  000616  006F FF8C  F02C    	movff	plusw1,btemp+2
 19827  00061C  0EFF               	movlw	-1
 19828  00061E  006F FF8C  F02D    	movff	plusw1,btemp+3
 19829                           
 19830                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19831  000624  0EF4               	movlw	244
 19832  000626  26E1               	addwf	fsr1l,f,c
 19833  000628  0EFF               	movlw	255
 19834  00062A  22E2               	addwfc	fsr1h,f,c
 19835  00062C  0012               	return		;funcret
 19836  00062E                     __end_of___lmul:
 19837                           	opt callstack 0
 19838                           
 19839 ;; *************** function ___almod *****************
 19840 ;; Defined at:
 19841 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 19842 ;; Parameters:    Size  Location     Type
 19843 ;;  dividend        4  [STACK] long 
 19844 ;;  divisor         4  [STACK] long 
 19845 ;; Auto vars:     Size  Location     Type
 19846 ;;  sign            1  [STACK] unsigned char 
 19847 ;;  counter         1  [STACK] unsigned char 
 19848 ;; Return value:  Size  Location     Type
 19849 ;;                  4  [STACK] long 
 19850 ;; Registers used:
 19851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19852 ;; Tracked objects:
 19853 ;;		On entry : 0/39
 19854 ;;		On exit  : 0/0
 19855 ;;		Unchanged: 0/0
 19856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19861 ;;Total ram usage:        0 bytes
 19862 ;; Hardware stack levels used:    1
 19863 ;; Hardware stack levels required when called:   15
 19864 ;; This function calls:
 19865 ;;		Nothing
 19866 ;; This function is called by:
 19867 ;;		___secs_to_tm
 19868 ;; This function uses a reentrant model
 19869 ;;
 19870                           
 19871                           	psect	text53
 19872  01EB04                     __ptext53:
 19873                           	opt callstack 0
 19874  01EB04                     ___almod:
 19875                           	opt callstack 0
 19876                           
 19877                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19878  01EB04  52E6               	movf	postinc1,f,c
 19879  01EB06  52E6               	movf	postinc1,f,c
 19880                           
 19881                           ;stkvar	_sign @ sp[(-2)+0]
 19882                           
 19883                           ;incstack = 0
 19884  01EB08  0EFE               	movlw	-2
 19885  01EB0A  6AE3               	clrf	plusw1,c
 19886                           
 19887                           ;stkvar	_dividend @ sp[(-2)+-4]
 19888  01EB0C  0EFD               	movlw	-3
 19889  01EB0E  AEE3               	btfss	plusw1,7,c
 19890  01EB10  D014               	goto	l12016
 19891                           
 19892                           ;stkvar	_dividend @ sp[(-2)+-4]
 19893                           ;stkvar	_dividend @ sp[(-2)+-4]
 19894  01EB12  0EFA               	movlw	-6
 19895  01EB14  6CE3               	negf	plusw1,c
 19896  01EB16  0EFB               	movlw	-5
 19897  01EB18  1EE3               	comf	plusw1,f,c
 19898  01EB1A  0EFC               	movlw	-4
 19899  01EB1C  1EE3               	comf	plusw1,f,c
 19900  01EB1E  0EFD               	movlw	-3
 19901  01EB20  1EE3               	comf	plusw1,f,c
 19902  01EB22  E308               	bnc	u11220
 19903  01EB24  0EFB               	movlw	-5
 19904  01EB26  2AE3               	incf	plusw1,f,c
 19905  01EB28  E305               	bnc	u11220
 19906  01EB2A  0EFC               	movlw	-4
 19907  01EB2C  2AE3               	incf	plusw1,f,c
 19908  01EB2E  E302               	bnc	u11220
 19909  01EB30  0EFD               	movlw	-3
 19910  01EB32  2AE3               	incf	plusw1,f,c
 19911  01EB34                     u11220:
 19912                           
 19913                           ;stkvar	_sign @ sp[(-2)+0]
 19914  01EB34  0EFE               	movlw	-2
 19915  01EB36  6AE3               	clrf	plusw1,c
 19916  01EB38  2AE3               	incf	plusw1,f,c
 19917  01EB3A                     l12016:
 19918                           
 19919                           ;stkvar	_divisor @ sp[(-2)+-8]
 19920  01EB3A  0EF9               	movlw	-7
 19921  01EB3C  AEE3               	btfss	plusw1,7,c
 19922  01EB3E  D011               	goto	u11240
 19923                           
 19924                           ;stkvar	_divisor @ sp[(-2)+-8]
 19925                           ;stkvar	_divisor @ sp[(-2)+-8]
 19926  01EB40  0EF6               	movlw	-10
 19927  01EB42  6CE3               	negf	plusw1,c
 19928  01EB44  0EF7               	movlw	-9
 19929  01EB46  1EE3               	comf	plusw1,f,c
 19930  01EB48  0EF8               	movlw	-8
 19931  01EB4A  1EE3               	comf	plusw1,f,c
 19932  01EB4C  0EF9               	movlw	-7
 19933  01EB4E  1EE3               	comf	plusw1,f,c
 19934  01EB50  E308               	bnc	u11240
 19935  01EB52  0EF7               	movlw	-9
 19936  01EB54  2AE3               	incf	plusw1,f,c
 19937  01EB56  E305               	bnc	u11240
 19938  01EB58  0EF8               	movlw	-8
 19939  01EB5A  2AE3               	incf	plusw1,f,c
 19940  01EB5C  E302               	bnc	u11240
 19941  01EB5E  0EF9               	movlw	-7
 19942  01EB60  2AE3               	incf	plusw1,f,c
 19943  01EB62                     u11240:
 19944                           
 19945                           ;stkvar	_divisor @ sp[(-2)+-8]
 19946  01EB62  0EF6               	movlw	-10
 19947  01EB64  50E3               	movf	plusw1,w,c
 19948  01EB66  E10A               	bnz	u11250
 19949  01EB68  0EF7               	movlw	-9
 19950  01EB6A  50E3               	movf	plusw1,w,c
 19951  01EB6C  E107               	bnz	u11250
 19952  01EB6E  0EF8               	movlw	-8
 19953  01EB70  50E3               	movf	plusw1,w,c
 19954  01EB72  E104               	bnz	u11250
 19955  01EB74  0EF9               	movlw	-7
 19956  01EB76  50E3               	movf	plusw1,w,c
 19957  01EB78  B4D8               	btfsc	status,2,c
 19958  01EB7A  D04D               	goto	u11280
 19959  01EB7C                     u11250:
 19960                           
 19961                           ;stkvar	_counter @ sp[(-2)+1]
 19962  01EB7C  0EFF               	movlw	-1
 19963  01EB7E  6AE3               	clrf	plusw1,c
 19964  01EB80  D00A               	goto	L17
 19965  01EB82                     l12024:
 19966                           
 19967                           ;stkvar	_divisor @ sp[(-2)+-8]
 19968  01EB82  90D8               	bcf	status,0,c
 19969  01EB84  0EF6               	movlw	-10
 19970  01EB86  36E3               	rlcf	plusw1,f,c
 19971  01EB88  0EF7               	movlw	-9
 19972  01EB8A  36E3               	rlcf	plusw1,f,c
 19973  01EB8C  0EF8               	movlw	-8
 19974  01EB8E  36E3               	rlcf	plusw1,f,c
 19975  01EB90  0EF9               	movlw	-7
 19976  01EB92  36E3               	rlcf	plusw1,f,c
 19977                           
 19978                           ;stkvar	_counter @ sp[(-2)+1]
 19979  01EB94  0EFF               	movlw	-1
 19980  01EB96                     L17:
 19981  01EB96  2AE3               	incf	plusw1,f,c
 19982                           
 19983                           ;stkvar	_divisor @ sp[(-2)+-8]
 19984  01EB98  0EF9               	movlw	-7
 19985  01EB9A  AEE3               	btfss	plusw1,7,c
 19986  01EB9C  D7F2               	goto	l12024
 19987  01EB9E                     u11260:
 19988                           
 19989                           ;stkvar	_divisor @ sp[(-2)+-8]
 19990                           ;stkvar	_dividend @ sp[(-2)+-4]
 19991  01EB9E  50E1               	movf	fsr1l,w,c
 19992  01EBA0  0FFA               	addlw	-6
 19993  01EBA2  6ED9               	movwf	fsr2l,c
 19994  01EBA4  50E2               	movf	fsr1h,w,c
 19995  01EBA6  6EDA               	movwf	fsr2h,c
 19996  01EBA8  0EFF               	movlw	255
 19997  01EBAA  22DA               	addwfc	fsr2h,f,c
 19998  01EBAC  0EF6               	movlw	-10
 19999  01EBAE  50E3               	movf	plusw1,w,c
 20000  01EBB0  5CDE               	subwf	postinc2,w,c
 20001  01EBB2  0EF7               	movlw	-9
 20002  01EBB4  50E3               	movf	plusw1,w,c
 20003  01EBB6  58DE               	subwfb	postinc2,w,c
 20004  01EBB8  0EF8               	movlw	-8
 20005  01EBBA  50E3               	movf	plusw1,w,c
 20006  01EBBC  58DE               	subwfb	postinc2,w,c
 20007  01EBBE  0EF9               	movlw	-7
 20008  01EBC0  50E3               	movf	plusw1,w,c
 20009  01EBC2  58DE               	subwfb	postinc2,w,c
 20010  01EBC4  A0D8               	btfss	status,0,c
 20011  01EBC6  D013               	goto	l12032
 20012                           
 20013                           ;stkvar	_divisor @ sp[(-2)+-8]
 20014                           ;stkvar	_dividend @ sp[(-2)+-4]
 20015  01EBC8  50E1               	movf	fsr1l,w,c
 20016  01EBCA  0FFA               	addlw	-6
 20017  01EBCC  6ED9               	movwf	fsr2l,c
 20018  01EBCE  50E2               	movf	fsr1h,w,c
 20019  01EBD0  6EDA               	movwf	fsr2h,c
 20020  01EBD2  0EFF               	movlw	255
 20021  01EBD4  22DA               	addwfc	fsr2h,f,c
 20022  01EBD6  0EF6               	movlw	-10
 20023  01EBD8  50E3               	movf	plusw1,w,c
 20024  01EBDA  5EDE               	subwf	postinc2,f,c
 20025  01EBDC  0EF7               	movlw	-9
 20026  01EBDE  50E3               	movf	plusw1,w,c
 20027  01EBE0  5ADE               	subwfb	postinc2,f,c
 20028  01EBE2  0EF8               	movlw	-8
 20029  01EBE4  50E3               	movf	plusw1,w,c
 20030  01EBE6  5ADE               	subwfb	postinc2,f,c
 20031  01EBE8  0EF9               	movlw	-7
 20032  01EBEA  50E3               	movf	plusw1,w,c
 20033  01EBEC  5ADE               	subwfb	postinc2,f,c
 20034  01EBEE                     l12032:
 20035                           
 20036                           ;stkvar	_divisor @ sp[(-2)+-8]
 20037  01EBEE  90D8               	bcf	status,0,c
 20038  01EBF0  0EF9               	movlw	-7
 20039  01EBF2  32E3               	rrcf	plusw1,f,c
 20040  01EBF4  0EF8               	movlw	-8
 20041  01EBF6  32E3               	rrcf	plusw1,f,c
 20042  01EBF8  0EF7               	movlw	-9
 20043  01EBFA  32E3               	rrcf	plusw1,f,c
 20044  01EBFC  0EF6               	movlw	-10
 20045  01EBFE  32E3               	rrcf	plusw1,f,c
 20046                           
 20047                           ;stkvar	_counter @ sp[(-2)+1]
 20048  01EC00  0EFF               	movlw	-1
 20049  01EC02  50E3               	movf	plusw1,w,c
 20050  01EC04  6E2A               	movwf	btemp^0,c
 20051  01EC06  0E01               	movlw	1
 20052  01EC08  5E2A               	subwf	btemp^0,f,c
 20053  01EC0A  0EFF               	movlw	-1
 20054  01EC0C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20055  01EC12  A4D8               	btfss	status,2,c
 20056  01EC14  D7C4               	goto	u11260
 20057  01EC16                     u11280:
 20058                           
 20059                           ;stkvar	_sign @ sp[(-2)+0]
 20060  01EC16  0EFE               	movlw	-2
 20061  01EC18  50E3               	movf	plusw1,w,c
 20062  01EC1A  B4D8               	btfsc	status,2,c
 20063  01EC1C  D011               	goto	u11300
 20064                           
 20065                           ;stkvar	_dividend @ sp[(-2)+-4]
 20066                           ;stkvar	_dividend @ sp[(-2)+-4]
 20067  01EC1E  0EFA               	movlw	-6
 20068  01EC20  6CE3               	negf	plusw1,c
 20069  01EC22  0EFB               	movlw	-5
 20070  01EC24  1EE3               	comf	plusw1,f,c
 20071  01EC26  0EFC               	movlw	-4
 20072  01EC28  1EE3               	comf	plusw1,f,c
 20073  01EC2A  0EFD               	movlw	-3
 20074  01EC2C  1EE3               	comf	plusw1,f,c
 20075  01EC2E  E308               	bnc	u11300
 20076  01EC30  0EFB               	movlw	-5
 20077  01EC32  2AE3               	incf	plusw1,f,c
 20078  01EC34  E305               	bnc	u11300
 20079  01EC36  0EFC               	movlw	-4
 20080  01EC38  2AE3               	incf	plusw1,f,c
 20081  01EC3A  E302               	bnc	u11300
 20082  01EC3C  0EFD               	movlw	-3
 20083  01EC3E  2AE3               	incf	plusw1,f,c
 20084  01EC40                     u11300:
 20085                           
 20086                           ;stkvar	_dividend @ sp[(-2)+-4]
 20087  01EC40  0EFA               	movlw	-6
 20088  01EC42  006F FF8C  F02A    	movff	plusw1,btemp
 20089  01EC48  0EFB               	movlw	-5
 20090  01EC4A  006F FF8C  F02B    	movff	plusw1,btemp+1
 20091  01EC50  0EFC               	movlw	-4
 20092  01EC52  006F FF8C  F02C    	movff	plusw1,btemp+2
 20093  01EC58  0EFD               	movlw	-3
 20094  01EC5A  006F FF8C  F02D    	movff	plusw1,btemp+3
 20095                           
 20096                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20097  01EC60  0EF6               	movlw	246
 20098  01EC62  26E1               	addwf	fsr1l,f,c
 20099  01EC64  0EFF               	movlw	255
 20100  01EC66  22E2               	addwfc	fsr1h,f,c
 20101  01EC68  0012               	return		;funcret
 20102  01EC6A                     __end_of___almod:
 20103                           	opt callstack 0
 20104                           
 20105 ;; *************** function ___aldiv *****************
 20106 ;; Defined at:
 20107 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 20108 ;; Parameters:    Size  Location     Type
 20109 ;;  dividend        4  [STACK] long 
 20110 ;;  divisor         4  [STACK] long 
 20111 ;; Auto vars:     Size  Location     Type
 20112 ;;  quotient        4  [STACK] long 
 20113 ;;  sign            1  [STACK] unsigned char 
 20114 ;;  counter         1  [STACK] unsigned char 
 20115 ;; Return value:  Size  Location     Type
 20116 ;;                  4  [STACK] long 
 20117 ;; Registers used:
 20118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 20119 ;; Tracked objects:
 20120 ;;		On entry : 0/0
 20121 ;;		On exit  : 0/0
 20122 ;;		Unchanged: 0/0
 20123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20128 ;;Total ram usage:        0 bytes
 20129 ;; Hardware stack levels used:    1
 20130 ;; Hardware stack levels required when called:   15
 20131 ;; This function calls:
 20132 ;;		Nothing
 20133 ;; This function is called by:
 20134 ;;		___secs_to_tm
 20135 ;;		_rule_to_secs
 20136 ;; This function uses a reentrant model
 20137 ;;
 20138                           
 20139                           	psect	text54
 20140  01E1F8                     __ptext54:
 20141                           	opt callstack 0
 20142  01E1F8                     ___aldiv:
 20143                           	opt callstack 0
 20144                           
 20145                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20146  01E1F8  0E06               	movlw	6
 20147  01E1FA  26E1               	addwf	fsr1l,f,c
 20148  01E1FC  0E00               	movlw	0
 20149  01E1FE  22E2               	addwfc	fsr1h,f,c
 20150                           
 20151                           ;stkvar	_sign @ sp[(-6)+4]
 20152                           
 20153                           ;incstack = 0
 20154  01E200  0EFE               	movlw	-2
 20155  01E202  6AE3               	clrf	plusw1,c
 20156                           
 20157                           ;stkvar	_divisor @ sp[(-6)+-8]
 20158  01E204  0EF5               	movlw	-11
 20159  01E206  AEE3               	btfss	plusw1,7,c
 20160  01E208  D014               	goto	l11550
 20161                           
 20162                           ;stkvar	_divisor @ sp[(-6)+-8]
 20163                           ;stkvar	_divisor @ sp[(-6)+-8]
 20164  01E20A  0EF2               	movlw	-14
 20165  01E20C  6CE3               	negf	plusw1,c
 20166  01E20E  0EF3               	movlw	-13
 20167  01E210  1EE3               	comf	plusw1,f,c
 20168  01E212  0EF4               	movlw	-12
 20169  01E214  1EE3               	comf	plusw1,f,c
 20170  01E216  0EF5               	movlw	-11
 20171  01E218  1EE3               	comf	plusw1,f,c
 20172  01E21A  E308               	bnc	u10540
 20173  01E21C  0EF3               	movlw	-13
 20174  01E21E  2AE3               	incf	plusw1,f,c
 20175  01E220  E305               	bnc	u10540
 20176  01E222  0EF4               	movlw	-12
 20177  01E224  2AE3               	incf	plusw1,f,c
 20178  01E226  E302               	bnc	u10540
 20179  01E228  0EF5               	movlw	-11
 20180  01E22A  2AE3               	incf	plusw1,f,c
 20181  01E22C                     u10540:
 20182                           
 20183                           ;stkvar	_sign @ sp[(-6)+4]
 20184  01E22C  0EFE               	movlw	-2
 20185  01E22E  6AE3               	clrf	plusw1,c
 20186  01E230  2AE3               	incf	plusw1,f,c
 20187  01E232                     l11550:
 20188                           
 20189                           ;stkvar	_dividend @ sp[(-6)+-4]
 20190  01E232  0EF9               	movlw	-7
 20191  01E234  AEE3               	btfss	plusw1,7,c
 20192  01E236  D013               	goto	l11556
 20193                           
 20194                           ;stkvar	_dividend @ sp[(-6)+-4]
 20195                           ;stkvar	_dividend @ sp[(-6)+-4]
 20196  01E238  0EF6               	movlw	-10
 20197  01E23A  6CE3               	negf	plusw1,c
 20198  01E23C  0EF7               	movlw	-9
 20199  01E23E  1EE3               	comf	plusw1,f,c
 20200  01E240  0EF8               	movlw	-8
 20201  01E242  1EE3               	comf	plusw1,f,c
 20202  01E244  0EF9               	movlw	-7
 20203  01E246  1EE3               	comf	plusw1,f,c
 20204  01E248  E308               	bnc	u10560
 20205  01E24A  0EF7               	movlw	-9
 20206  01E24C  2AE3               	incf	plusw1,f,c
 20207  01E24E  E305               	bnc	u10560
 20208  01E250  0EF8               	movlw	-8
 20209  01E252  2AE3               	incf	plusw1,f,c
 20210  01E254  E302               	bnc	u10560
 20211  01E256  0EF9               	movlw	-7
 20212  01E258  2AE3               	incf	plusw1,f,c
 20213  01E25A                     u10560:
 20214                           
 20215                           ;stkvar	_sign @ sp[(-6)+4]
 20216  01E25A  0EFE               	movlw	-2
 20217  01E25C  70E3               	btg	plusw1,0,c
 20218  01E25E                     l11556:
 20219                           
 20220                           ;stkvar	_quotient @ sp[(-6)+0]
 20221  01E25E  0EFA               	movlw	-6
 20222  01E260  6AE3               	clrf	plusw1,c
 20223  01E262  0EFB               	movlw	-5
 20224  01E264  6AE3               	clrf	plusw1,c
 20225  01E266  0EFC               	movlw	-4
 20226  01E268  6AE3               	clrf	plusw1,c
 20227  01E26A  0EFD               	movlw	-3
 20228  01E26C  6AE3               	clrf	plusw1,c
 20229                           
 20230                           ;stkvar	_divisor @ sp[(-6)+-8]
 20231  01E26E  0EF2               	movlw	-14
 20232  01E270  50E3               	movf	plusw1,w,c
 20233  01E272  E10A               	bnz	u10570
 20234  01E274  0EF3               	movlw	-13
 20235  01E276  50E3               	movf	plusw1,w,c
 20236  01E278  E107               	bnz	u10570
 20237  01E27A  0EF4               	movlw	-12
 20238  01E27C  50E3               	movf	plusw1,w,c
 20239  01E27E  E104               	bnz	u10570
 20240  01E280  0EF5               	movlw	-11
 20241  01E282  50E3               	movf	plusw1,w,c
 20242  01E284  B4D8               	btfsc	status,2,c
 20243  01E286  D058               	goto	u10600
 20244  01E288                     u10570:
 20245                           
 20246                           ;stkvar	_counter @ sp[(-6)+5]
 20247  01E288  0EFF               	movlw	-1
 20248  01E28A  6AE3               	clrf	plusw1,c
 20249  01E28C  D00A               	goto	L18
 20250  01E28E                     l11562:
 20251                           
 20252                           ;stkvar	_divisor @ sp[(-6)+-8]
 20253  01E28E  90D8               	bcf	status,0,c
 20254  01E290  0EF2               	movlw	-14
 20255  01E292  36E3               	rlcf	plusw1,f,c
 20256  01E294  0EF3               	movlw	-13
 20257  01E296  36E3               	rlcf	plusw1,f,c
 20258  01E298  0EF4               	movlw	-12
 20259  01E29A  36E3               	rlcf	plusw1,f,c
 20260  01E29C  0EF5               	movlw	-11
 20261  01E29E  36E3               	rlcf	plusw1,f,c
 20262                           
 20263                           ;stkvar	_counter @ sp[(-6)+5]
 20264  01E2A0  0EFF               	movlw	-1
 20265  01E2A2                     L18:
 20266  01E2A2  2AE3               	incf	plusw1,f,c
 20267                           
 20268                           ;stkvar	_divisor @ sp[(-6)+-8]
 20269  01E2A4  0EF5               	movlw	-11
 20270  01E2A6  AEE3               	btfss	plusw1,7,c
 20271  01E2A8  D7F2               	goto	l11562
 20272  01E2AA                     u10580:
 20273                           
 20274                           ;stkvar	_quotient @ sp[(-6)+0]
 20275  01E2AA  90D8               	bcf	status,0,c
 20276  01E2AC  0EFA               	movlw	-6
 20277  01E2AE  36E3               	rlcf	plusw1,f,c
 20278  01E2B0  0EFB               	movlw	-5
 20279  01E2B2  36E3               	rlcf	plusw1,f,c
 20280  01E2B4  0EFC               	movlw	-4
 20281  01E2B6  36E3               	rlcf	plusw1,f,c
 20282  01E2B8  0EFD               	movlw	-3
 20283  01E2BA  36E3               	rlcf	plusw1,f,c
 20284                           
 20285                           ;stkvar	_divisor @ sp[(-6)+-8]
 20286                           ;stkvar	_dividend @ sp[(-6)+-4]
 20287  01E2BC  50E1               	movf	fsr1l,w,c
 20288  01E2BE  0FF6               	addlw	-10
 20289  01E2C0  6ED9               	movwf	fsr2l,c
 20290  01E2C2  50E2               	movf	fsr1h,w,c
 20291  01E2C4  6EDA               	movwf	fsr2h,c
 20292  01E2C6  0EFF               	movlw	255
 20293  01E2C8  22DA               	addwfc	fsr2h,f,c
 20294  01E2CA  0EF2               	movlw	-14
 20295  01E2CC  50E3               	movf	plusw1,w,c
 20296  01E2CE  5CDE               	subwf	postinc2,w,c
 20297  01E2D0  0EF3               	movlw	-13
 20298  01E2D2  50E3               	movf	plusw1,w,c
 20299  01E2D4  58DE               	subwfb	postinc2,w,c
 20300  01E2D6  0EF4               	movlw	-12
 20301  01E2D8  50E3               	movf	plusw1,w,c
 20302  01E2DA  58DE               	subwfb	postinc2,w,c
 20303  01E2DC  0EF5               	movlw	-11
 20304  01E2DE  50E3               	movf	plusw1,w,c
 20305  01E2E0  58DE               	subwfb	postinc2,w,c
 20306  01E2E2  A0D8               	btfss	status,0,c
 20307  01E2E4  D015               	goto	l11574
 20308                           
 20309                           ;stkvar	_divisor @ sp[(-6)+-8]
 20310                           ;stkvar	_dividend @ sp[(-6)+-4]
 20311  01E2E6  50E1               	movf	fsr1l,w,c
 20312  01E2E8  0FF6               	addlw	-10
 20313  01E2EA  6ED9               	movwf	fsr2l,c
 20314  01E2EC  50E2               	movf	fsr1h,w,c
 20315  01E2EE  6EDA               	movwf	fsr2h,c
 20316  01E2F0  0EFF               	movlw	255
 20317  01E2F2  22DA               	addwfc	fsr2h,f,c
 20318  01E2F4  0EF2               	movlw	-14
 20319  01E2F6  50E3               	movf	plusw1,w,c
 20320  01E2F8  5EDE               	subwf	postinc2,f,c
 20321  01E2FA  0EF3               	movlw	-13
 20322  01E2FC  50E3               	movf	plusw1,w,c
 20323  01E2FE  5ADE               	subwfb	postinc2,f,c
 20324  01E300  0EF4               	movlw	-12
 20325  01E302  50E3               	movf	plusw1,w,c
 20326  01E304  5ADE               	subwfb	postinc2,f,c
 20327  01E306  0EF5               	movlw	-11
 20328  01E308  50E3               	movf	plusw1,w,c
 20329  01E30A  5ADE               	subwfb	postinc2,f,c
 20330                           
 20331                           ;stkvar	_quotient @ sp[(-6)+0]
 20332  01E30C  0EFA               	movlw	-6
 20333  01E30E  80E3               	bsf	plusw1,0,c
 20334  01E310                     l11574:
 20335                           
 20336                           ;stkvar	_divisor @ sp[(-6)+-8]
 20337  01E310  90D8               	bcf	status,0,c
 20338  01E312  0EF5               	movlw	-11
 20339  01E314  32E3               	rrcf	plusw1,f,c
 20340  01E316  0EF4               	movlw	-12
 20341  01E318  32E3               	rrcf	plusw1,f,c
 20342  01E31A  0EF3               	movlw	-13
 20343  01E31C  32E3               	rrcf	plusw1,f,c
 20344  01E31E  0EF2               	movlw	-14
 20345  01E320  32E3               	rrcf	plusw1,f,c
 20346                           
 20347                           ;stkvar	_counter @ sp[(-6)+5]
 20348  01E322  0EFF               	movlw	-1
 20349  01E324  50E3               	movf	plusw1,w,c
 20350  01E326  6E2A               	movwf	btemp^0,c
 20351  01E328  0E01               	movlw	1
 20352  01E32A  5E2A               	subwf	btemp^0,f,c
 20353  01E32C  0EFF               	movlw	-1
 20354  01E32E  0060  F0AB  FFE3   	movff	btemp,plusw1
 20355  01E334  A4D8               	btfss	status,2,c
 20356  01E336  D7B9               	goto	u10580
 20357  01E338                     u10600:
 20358                           
 20359                           ;stkvar	_sign @ sp[(-6)+4]
 20360  01E338  0EFE               	movlw	-2
 20361  01E33A  50E3               	movf	plusw1,w,c
 20362  01E33C  B4D8               	btfsc	status,2,c
 20363  01E33E  D011               	goto	u10620
 20364                           
 20365                           ;stkvar	_quotient @ sp[(-6)+0]
 20366                           ;stkvar	_quotient @ sp[(-6)+0]
 20367  01E340  0EFA               	movlw	-6
 20368  01E342  6CE3               	negf	plusw1,c
 20369  01E344  0EFB               	movlw	-5
 20370  01E346  1EE3               	comf	plusw1,f,c
 20371  01E348  0EFC               	movlw	-4
 20372  01E34A  1EE3               	comf	plusw1,f,c
 20373  01E34C  0EFD               	movlw	-3
 20374  01E34E  1EE3               	comf	plusw1,f,c
 20375  01E350  E308               	bnc	u10620
 20376  01E352  0EFB               	movlw	-5
 20377  01E354  2AE3               	incf	plusw1,f,c
 20378  01E356  E305               	bnc	u10620
 20379  01E358  0EFC               	movlw	-4
 20380  01E35A  2AE3               	incf	plusw1,f,c
 20381  01E35C  E302               	bnc	u10620
 20382  01E35E  0EFD               	movlw	-3
 20383  01E360  2AE3               	incf	plusw1,f,c
 20384  01E362                     u10620:
 20385                           
 20386                           ;stkvar	_quotient @ sp[(-6)+0]
 20387  01E362  0EFA               	movlw	-6
 20388  01E364  006F FF8C  F02A    	movff	plusw1,btemp
 20389  01E36A  0EFB               	movlw	-5
 20390  01E36C  006F FF8C  F02B    	movff	plusw1,btemp+1
 20391  01E372  0EFC               	movlw	-4
 20392  01E374  006F FF8C  F02C    	movff	plusw1,btemp+2
 20393  01E37A  0EFD               	movlw	-3
 20394  01E37C  006F FF8C  F02D    	movff	plusw1,btemp+3
 20395                           
 20396                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20397  01E382  0EF2               	movlw	242
 20398  01E384  26E1               	addwf	fsr1l,f,c
 20399  01E386  0EFF               	movlw	255
 20400  01E388  22E2               	addwfc	fsr1h,f,c
 20401  01E38A  0012               	return		;funcret
 20402  01E38C                     __end_of___aldiv:
 20403                           	opt callstack 0
 20404                           
 20405 ;; *************** function _asctime *****************
 20406 ;; Defined at:
 20407 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 20408 ;; Parameters:    Size  Location     Type
 20409 ;;  tim             2  [STACK] PTR const struct tm
 20410 ;;		 -> localtime@tm(24), NULL(0), 
 20411 ;; Auto vars:     Size  Location     Type
 20412 ;;  cp              2  [STACK] PTR unsigned char 
 20413 ;;		 -> asctime@buf(27), 
 20414 ;;  s               2  [STACK] PTR const unsigned char 
 20415 ;;		 -> STR_133(37), STR_132(22), 
 20416 ;; Return value:  Size  Location     Type
 20417 ;;                  2  [STACK] PTR unsigned char 
 20418 ;; Registers used:
 20419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20420 ;; Tracked objects:
 20421 ;;		On entry : 0/39
 20422 ;;		On exit  : 0/0
 20423 ;;		Unchanged: 0/0
 20424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20429 ;;Total ram usage:        0 bytes
 20430 ;; Hardware stack levels used:    1
 20431 ;; Hardware stack levels required when called:   17
 20432 ;; This function calls:
 20433 ;;		___awdiv
 20434 ;;		___awmod
 20435 ;;		_put2d
 20436 ;; This function is called by:
 20437 ;;		_main
 20438 ;;		_display_history
 20439 ;; This function uses a reentrant model
 20440 ;;
 20441                           
 20442                           	psect	text55
 20443  018842                     __ptext55:
 20444                           	opt callstack 0
 20445  018842                     _asctime:
 20446                           	opt callstack 0
 20447                           
 20448                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20449  018842  52E6               	movf	postinc1,f,c
 20450  018844  52E6               	movf	postinc1,f,c
 20451  018846  52E6               	movf	postinc1,f,c
 20452  018848  52E6               	movf	postinc1,f,c
 20453                           
 20454                           ;stkvar	_tim @ sp[(-4)+-2]
 20455                           
 20456                           ;incstack = 0
 20457  01884A  0EFA               	movlw	-6
 20458  01884C  006F FF8C  F034    	movff	plusw1,btemp+10
 20459  018852  0EFB               	movlw	-5
 20460  018854  006F FF8C  F035    	movff	plusw1,btemp+11
 20461  01885A  0E0C               	movlw	12
 20462  01885C  2434               	addwf	(btemp+10)^0,w,c
 20463  01885E  6ED9               	movwf	fsr2l,c
 20464  018860  0E00               	movlw	0
 20465  018862  2035               	addwfc	(btemp+11)^0,w,c
 20466  018864  6EDA               	movwf	fsr2h,c
 20467  018866  006F FF78  F034    	movff	postinc2,btemp+10
 20468  01886C  006F FF74  F035    	movff	postdec2,btemp+11
 20469  018872  0E03               	movlw	3
 20470  018874  0234               	mulwf	(btemp+10)^0,c
 20471  018876  006F FFCC  F032    	movff	prodl,btemp+8
 20472  01887C  006F FFD0  F033    	movff	prodh,btemp+9
 20473  018882  0235               	mulwf	(btemp+11)^0,c
 20474  018884  50F3               	movf	prodl,w,c
 20475  018886  2633               	addwf	(btemp+9)^0,f,c
 20476  018888  0E27               	movlw	low STR_132
 20477  01888A  6E34               	movwf	(btemp+10)^0,c
 20478  01888C  0EFD               	movlw	high STR_132
 20479  01888E  6E35               	movwf	(btemp+11)^0,c
 20480  018890  5032               	movf	(btemp+8)^0,w,c
 20481  018892  2634               	addwf	(btemp+10)^0,f,c
 20482  018894  5033               	movf	(btemp+9)^0,w,c
 20483  018896  2235               	addwfc	(btemp+11)^0,f,c
 20484                           
 20485                           ;stkvar	_s @ sp[(-4)+2]
 20486  018898  0EFF               	movlw	-1
 20487  01889A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20488  0188A0  0EFE               	movlw	-2
 20489  0188A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20490                           
 20491                           ;stkvar	_cp @ sp[(-4)+0]
 20492  0188A8  0E03               	movlw	high asctime@buf
 20493  0188AA  6E2A               	movwf	btemp^0,c
 20494  0188AC  0EFD               	movlw	-3
 20495  0188AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 20496  0188B4  0EC4               	movlw	low asctime@buf
 20497  0188B6  6E2A               	movwf	btemp^0,c
 20498  0188B8  0EFC               	movlw	-4
 20499  0188BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20500                           
 20501                           ;stkvar	_s @ sp[(-4)+2]
 20502  0188C0  50E1               	movf	fsr1l,w,c
 20503  0188C2  0FFE               	addlw	-2
 20504  0188C4  6ED9               	movwf	fsr2l,c
 20505  0188C6  50E2               	movf	fsr1h,w,c
 20506  0188C8  6EDA               	movwf	fsr2h,c
 20507  0188CA  0EFF               	movlw	255
 20508  0188CC  22DA               	addwfc	fsr2h,f,c
 20509  0188CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 20510  0188D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 20511  0188DA                     	if	0	;tblptru may be non-zero
 20512  0188DA                     	endif
 20513  0188DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20514  0188DA  0E00               	movlw	low (__mediumconst shr (0+16))
 20515  0188DC  6EF8               	movwf	tblptru,c
 20516  0188DE                     	endif
 20517                           
 20518                           ;stkvar	_cp @ sp[(-4)+0]
 20519  0188DE  0EFC               	movlw	-4
 20520  0188E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 20521  0188E6  0EFD               	movlw	-3
 20522  0188E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 20523  0188EE  0008               	tblrd		*
 20524  0188F0  006F FFD7 FFDF     	movff	tablat,indf2
 20525                           
 20526                           ;stkvar	_s @ sp[(-4)+2]
 20527  0188F6  0EFE               	movlw	-2
 20528  0188F8  50E3               	movf	plusw1,w,c
 20529  0188FA  0F01               	addlw	1
 20530  0188FC  6E2A               	movwf	btemp^0,c
 20531  0188FE  0EFE               	movlw	-2
 20532  018900  0060  F0AB  FFE3   	movff	btemp,plusw1
 20533  018906  6A2A               	clrf	btemp^0,c
 20534  018908  0EFF               	movlw	-1
 20535  01890A  50E3               	movf	plusw1,w,c
 20536  01890C  202A               	addwfc	btemp^0,w,c
 20537  01890E  6E2A               	movwf	btemp^0,c
 20538  018910  0EFF               	movlw	-1
 20539  018912  0060  F0AB  FFE3   	movff	btemp,plusw1
 20540                           
 20541                           ;stkvar	_cp @ sp[(-4)+0]
 20542  018918  0EFC               	movlw	-4
 20543  01891A  50E3               	movf	plusw1,w,c
 20544  01891C  0F01               	addlw	1
 20545  01891E  6E2A               	movwf	btemp^0,c
 20546  018920  0EFC               	movlw	-4
 20547  018922  0060  F0AB  FFE3   	movff	btemp,plusw1
 20548  018928  6A2A               	clrf	btemp^0,c
 20549  01892A  0EFD               	movlw	-3
 20550  01892C  50E3               	movf	plusw1,w,c
 20551  01892E  202A               	addwfc	btemp^0,w,c
 20552  018930  6E2A               	movwf	btemp^0,c
 20553  018932  0EFD               	movlw	-3
 20554  018934  0060  F0AB  FFE3   	movff	btemp,plusw1
 20555                           
 20556                           ;stkvar	_s @ sp[(-4)+2]
 20557  01893A  50E1               	movf	fsr1l,w,c
 20558  01893C  0FFE               	addlw	-2
 20559  01893E  6ED9               	movwf	fsr2l,c
 20560  018940  50E2               	movf	fsr1h,w,c
 20561  018942  6EDA               	movwf	fsr2h,c
 20562  018944  0EFF               	movlw	255
 20563  018946  22DA               	addwfc	fsr2h,f,c
 20564  018948  006F FF7B FFF6     	movff	postinc2,tblptrl
 20565  01894E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20566  018954                     	if	0	;tblptru may be non-zero
 20567  018954                     	endif
 20568  018954                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20569  018954  0E00               	movlw	low (__mediumconst shr (0+16))
 20570  018956  6EF8               	movwf	tblptru,c
 20571  018958                     	endif
 20572                           
 20573                           ;stkvar	_cp @ sp[(-4)+0]
 20574  018958  0EFC               	movlw	-4
 20575  01895A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20576  018960  0EFD               	movlw	-3
 20577  018962  006F FF8F FFDA     	movff	plusw1,fsr2h
 20578  018968  0008               	tblrd		*
 20579  01896A  006F FFD7 FFDF     	movff	tablat,indf2
 20580                           
 20581                           ;stkvar	_s @ sp[(-4)+2]
 20582  018970  0EFE               	movlw	-2
 20583  018972  50E3               	movf	plusw1,w,c
 20584  018974  0F01               	addlw	1
 20585  018976  6E2A               	movwf	btemp^0,c
 20586  018978  0EFE               	movlw	-2
 20587  01897A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20588  018980  6A2A               	clrf	btemp^0,c
 20589  018982  0EFF               	movlw	-1
 20590  018984  50E3               	movf	plusw1,w,c
 20591  018986  202A               	addwfc	btemp^0,w,c
 20592  018988  6E2A               	movwf	btemp^0,c
 20593  01898A  0EFF               	movlw	-1
 20594  01898C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20595                           
 20596                           ;stkvar	_cp @ sp[(-4)+0]
 20597  018992  0EFC               	movlw	-4
 20598  018994  50E3               	movf	plusw1,w,c
 20599  018996  0F01               	addlw	1
 20600  018998  6E2A               	movwf	btemp^0,c
 20601  01899A  0EFC               	movlw	-4
 20602  01899C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20603  0189A2  6A2A               	clrf	btemp^0,c
 20604  0189A4  0EFD               	movlw	-3
 20605  0189A6  50E3               	movf	plusw1,w,c
 20606  0189A8  202A               	addwfc	btemp^0,w,c
 20607  0189AA  6E2A               	movwf	btemp^0,c
 20608  0189AC  0EFD               	movlw	-3
 20609  0189AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 20610                           
 20611                           ;stkvar	_s @ sp[(-4)+2]
 20612  0189B4  50E1               	movf	fsr1l,w,c
 20613  0189B6  0FFE               	addlw	-2
 20614  0189B8  6ED9               	movwf	fsr2l,c
 20615  0189BA  50E2               	movf	fsr1h,w,c
 20616  0189BC  6EDA               	movwf	fsr2h,c
 20617  0189BE  0EFF               	movlw	255
 20618  0189C0  22DA               	addwfc	fsr2h,f,c
 20619  0189C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20620  0189C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20621  0189CE                     	if	0	;tblptru may be non-zero
 20622  0189CE                     	endif
 20623  0189CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20624  0189CE  0E00               	movlw	low (__mediumconst shr (0+16))
 20625  0189D0  6EF8               	movwf	tblptru,c
 20626  0189D2                     	endif
 20627                           
 20628                           ;stkvar	_cp @ sp[(-4)+0]
 20629  0189D2  0EFC               	movlw	-4
 20630  0189D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 20631  0189DA  0EFD               	movlw	-3
 20632  0189DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 20633  0189E2  0008               	tblrd		*
 20634  0189E4  006F FFD7 FFDF     	movff	tablat,indf2
 20635                           
 20636                           ;stkvar	_cp @ sp[(-4)+0]
 20637  0189EA  0EFC               	movlw	-4
 20638  0189EC  50E3               	movf	plusw1,w,c
 20639  0189EE  0F01               	addlw	1
 20640  0189F0  6E2A               	movwf	btemp^0,c
 20641  0189F2  0EFC               	movlw	-4
 20642  0189F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 20643  0189FA  6A2A               	clrf	btemp^0,c
 20644  0189FC  0EFD               	movlw	-3
 20645  0189FE  50E3               	movf	plusw1,w,c
 20646  018A00  202A               	addwfc	btemp^0,w,c
 20647  018A02  6E2A               	movwf	btemp^0,c
 20648  018A04  0EFD               	movlw	-3
 20649  018A06  0060  F0AB  FFE3   	movff	btemp,plusw1
 20650                           
 20651                           ;stkvar	_cp @ sp[(-4)+0]
 20652  018A0C  0EFC               	movlw	-4
 20653  018A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20654  018A14  0EFD               	movlw	-3
 20655  018A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 20656  018A1C  0E20               	movlw	32
 20657  018A1E  6EDF               	movwf	indf2,c
 20658                           
 20659                           ;stkvar	_cp @ sp[(-4)+0]
 20660  018A20  0EFC               	movlw	-4
 20661  018A22  50E3               	movf	plusw1,w,c
 20662  018A24  0F01               	addlw	1
 20663  018A26  6E2A               	movwf	btemp^0,c
 20664  018A28  0EFC               	movlw	-4
 20665  018A2A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20666  018A30  6A2A               	clrf	btemp^0,c
 20667  018A32  0EFD               	movlw	-3
 20668  018A34  50E3               	movf	plusw1,w,c
 20669  018A36  202A               	addwfc	btemp^0,w,c
 20670  018A38  6E2A               	movwf	btemp^0,c
 20671  018A3A  0EFD               	movlw	-3
 20672  018A3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20673                           
 20674                           ;stkvar	_tim @ sp[(-4)+-2]
 20675  018A42  0EFA               	movlw	-6
 20676  018A44  006F FF8C  F034    	movff	plusw1,btemp+10
 20677  018A4A  0EFB               	movlw	-5
 20678  018A4C  006F FF8C  F035    	movff	plusw1,btemp+11
 20679  018A52  0E08               	movlw	8
 20680  018A54  2434               	addwf	(btemp+10)^0,w,c
 20681  018A56  6ED9               	movwf	fsr2l,c
 20682  018A58  0E00               	movlw	0
 20683  018A5A  2035               	addwfc	(btemp+11)^0,w,c
 20684  018A5C  6EDA               	movwf	fsr2h,c
 20685  018A5E  006F FF78  F034    	movff	postinc2,btemp+10
 20686  018A64  006F FF74  F035    	movff	postdec2,btemp+11
 20687  018A6A  0E03               	movlw	3
 20688  018A6C  0234               	mulwf	(btemp+10)^0,c
 20689  018A6E  006F FFCC  F032    	movff	prodl,btemp+8
 20690  018A74  006F FFD0  F033    	movff	prodh,btemp+9
 20691  018A7A  0235               	mulwf	(btemp+11)^0,c
 20692  018A7C  50F3               	movf	prodl,w,c
 20693  018A7E  2633               	addwf	(btemp+9)^0,f,c
 20694  018A80  0E76               	movlw	low STR_133
 20695  018A82  6E34               	movwf	(btemp+10)^0,c
 20696  018A84  0EFA               	movlw	high STR_133
 20697  018A86  6E35               	movwf	(btemp+11)^0,c
 20698  018A88  5032               	movf	(btemp+8)^0,w,c
 20699  018A8A  2634               	addwf	(btemp+10)^0,f,c
 20700  018A8C  5033               	movf	(btemp+9)^0,w,c
 20701  018A8E  2235               	addwfc	(btemp+11)^0,f,c
 20702                           
 20703                           ;stkvar	_s @ sp[(-4)+2]
 20704  018A90  0EFF               	movlw	-1
 20705  018A92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20706  018A98  0EFE               	movlw	-2
 20707  018A9A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20708                           
 20709                           ;stkvar	_s @ sp[(-4)+2]
 20710  018AA0  50E1               	movf	fsr1l,w,c
 20711  018AA2  0FFE               	addlw	-2
 20712  018AA4  6ED9               	movwf	fsr2l,c
 20713  018AA6  50E2               	movf	fsr1h,w,c
 20714  018AA8  6EDA               	movwf	fsr2h,c
 20715  018AAA  0EFF               	movlw	255
 20716  018AAC  22DA               	addwfc	fsr2h,f,c
 20717  018AAE  006F FF7B FFF6     	movff	postinc2,tblptrl
 20718  018AB4  006F FF77 FFF7     	movff	postdec2,tblptrh
 20719  018ABA                     	if	0	;tblptru may be non-zero
 20720  018ABA                     	endif
 20721  018ABA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20722  018ABA  0E00               	movlw	low (__mediumconst shr (0+16))
 20723  018ABC  6EF8               	movwf	tblptru,c
 20724  018ABE                     	endif
 20725                           
 20726                           ;stkvar	_cp @ sp[(-4)+0]
 20727  018ABE  0EFC               	movlw	-4
 20728  018AC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 20729  018AC6  0EFD               	movlw	-3
 20730  018AC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 20731  018ACE  0008               	tblrd		*
 20732  018AD0  006F FFD7 FFDF     	movff	tablat,indf2
 20733                           
 20734                           ;stkvar	_s @ sp[(-4)+2]
 20735  018AD6  0EFE               	movlw	-2
 20736  018AD8  50E3               	movf	plusw1,w,c
 20737  018ADA  0F01               	addlw	1
 20738  018ADC  6E2A               	movwf	btemp^0,c
 20739  018ADE  0EFE               	movlw	-2
 20740  018AE0  0060  F0AB  FFE3   	movff	btemp,plusw1
 20741  018AE6  6A2A               	clrf	btemp^0,c
 20742  018AE8  0EFF               	movlw	-1
 20743  018AEA  50E3               	movf	plusw1,w,c
 20744  018AEC  202A               	addwfc	btemp^0,w,c
 20745  018AEE  6E2A               	movwf	btemp^0,c
 20746  018AF0  0EFF               	movlw	-1
 20747  018AF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 20748                           
 20749                           ;stkvar	_cp @ sp[(-4)+0]
 20750  018AF8  0EFC               	movlw	-4
 20751  018AFA  50E3               	movf	plusw1,w,c
 20752  018AFC  0F01               	addlw	1
 20753  018AFE  6E2A               	movwf	btemp^0,c
 20754  018B00  0EFC               	movlw	-4
 20755  018B02  0060  F0AB  FFE3   	movff	btemp,plusw1
 20756  018B08  6A2A               	clrf	btemp^0,c
 20757  018B0A  0EFD               	movlw	-3
 20758  018B0C  50E3               	movf	plusw1,w,c
 20759  018B0E  202A               	addwfc	btemp^0,w,c
 20760  018B10  6E2A               	movwf	btemp^0,c
 20761  018B12  0EFD               	movlw	-3
 20762  018B14  0060  F0AB  FFE3   	movff	btemp,plusw1
 20763                           
 20764                           ;stkvar	_s @ sp[(-4)+2]
 20765  018B1A  50E1               	movf	fsr1l,w,c
 20766  018B1C  0FFE               	addlw	-2
 20767  018B1E  6ED9               	movwf	fsr2l,c
 20768  018B20  50E2               	movf	fsr1h,w,c
 20769  018B22  6EDA               	movwf	fsr2h,c
 20770  018B24  0EFF               	movlw	255
 20771  018B26  22DA               	addwfc	fsr2h,f,c
 20772  018B28  006F FF7B FFF6     	movff	postinc2,tblptrl
 20773  018B2E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20774  018B34                     	if	0	;tblptru may be non-zero
 20775  018B34                     	endif
 20776  018B34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20777  018B34  0E00               	movlw	low (__mediumconst shr (0+16))
 20778  018B36  6EF8               	movwf	tblptru,c
 20779  018B38                     	endif
 20780                           
 20781                           ;stkvar	_cp @ sp[(-4)+0]
 20782  018B38  0EFC               	movlw	-4
 20783  018B3A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20784  018B40  0EFD               	movlw	-3
 20785  018B42  006F FF8F FFDA     	movff	plusw1,fsr2h
 20786  018B48  0008               	tblrd		*
 20787  018B4A  006F FFD7 FFDF     	movff	tablat,indf2
 20788                           
 20789                           ;stkvar	_s @ sp[(-4)+2]
 20790  018B50  0EFE               	movlw	-2
 20791  018B52  50E3               	movf	plusw1,w,c
 20792  018B54  0F01               	addlw	1
 20793  018B56  6E2A               	movwf	btemp^0,c
 20794  018B58  0EFE               	movlw	-2
 20795  018B5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20796  018B60  6A2A               	clrf	btemp^0,c
 20797  018B62  0EFF               	movlw	-1
 20798  018B64  50E3               	movf	plusw1,w,c
 20799  018B66  202A               	addwfc	btemp^0,w,c
 20800  018B68  6E2A               	movwf	btemp^0,c
 20801  018B6A  0EFF               	movlw	-1
 20802  018B6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20803                           
 20804                           ;stkvar	_cp @ sp[(-4)+0]
 20805  018B72  0EFC               	movlw	-4
 20806  018B74  50E3               	movf	plusw1,w,c
 20807  018B76  0F01               	addlw	1
 20808  018B78  6E2A               	movwf	btemp^0,c
 20809  018B7A  0EFC               	movlw	-4
 20810  018B7C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20811  018B82  6A2A               	clrf	btemp^0,c
 20812  018B84  0EFD               	movlw	-3
 20813  018B86  50E3               	movf	plusw1,w,c
 20814  018B88  202A               	addwfc	btemp^0,w,c
 20815  018B8A  6E2A               	movwf	btemp^0,c
 20816  018B8C  0EFD               	movlw	-3
 20817  018B8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 20818                           
 20819                           ;stkvar	_s @ sp[(-4)+2]
 20820  018B94  50E1               	movf	fsr1l,w,c
 20821  018B96  0FFE               	addlw	-2
 20822  018B98  6ED9               	movwf	fsr2l,c
 20823  018B9A  50E2               	movf	fsr1h,w,c
 20824  018B9C  6EDA               	movwf	fsr2h,c
 20825  018B9E  0EFF               	movlw	255
 20826  018BA0  22DA               	addwfc	fsr2h,f,c
 20827  018BA2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20828  018BA8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20829  018BAE                     	if	0	;tblptru may be non-zero
 20830  018BAE                     	endif
 20831  018BAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20832  018BAE  0E00               	movlw	low (__mediumconst shr (0+16))
 20833  018BB0  6EF8               	movwf	tblptru,c
 20834  018BB2                     	endif
 20835                           
 20836                           ;stkvar	_cp @ sp[(-4)+0]
 20837  018BB2  0EFC               	movlw	-4
 20838  018BB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 20839  018BBA  0EFD               	movlw	-3
 20840  018BBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 20841  018BC2  0008               	tblrd		*
 20842  018BC4  006F FFD7 FFDF     	movff	tablat,indf2
 20843  018BCA  0E20               	movlw	32
 20844  018BCC  0103               	movlb	3	; () banked
 20845  018BCE  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 20846                           
 20847                           ; BSR set to: 3
 20848  018BD0  0E20               	movlw	32
 20849  018BD2  6EE6               	movwf	postinc1,c
 20850  018BD4  0E20               	movlw	32
 20851  018BD6  6EE6               	movwf	postinc1,c
 20852                           
 20853                           ;stkvar	_tim @ sp[(-6)+-2]
 20854  018BD8  0EF8               	movlw	-8
 20855  018BDA  006F FF8C  F034    	movff	plusw1,btemp+10
 20856  018BE0  0EF9               	movlw	-7
 20857  018BE2  006F FF8C  F035    	movff	plusw1,btemp+11
 20858  018BE8  0E06               	movlw	6
 20859  018BEA  2434               	addwf	(btemp+10)^0,w,c
 20860  018BEC  6ED9               	movwf	fsr2l,c
 20861  018BEE  0E00               	movlw	0
 20862  018BF0  2035               	addwfc	(btemp+11)^0,w,c
 20863  018BF2  6EDA               	movwf	fsr2h,c
 20864  018BF4  50DF               	movf	indf2,w,c
 20865  018BF6  6EE6               	movwf	postinc1,c
 20866  018BF8  0ECE               	movlw	low (asctime@buf+10)
 20867  018BFA  6EE6               	movwf	postinc1,c
 20868  018BFC  0E03               	movlw	high (asctime@buf+10)
 20869  018BFE  6EE6               	movwf	postinc1,c
 20870  018C00  ECB6  F0FC         	call	_put2d	;wreg free
 20871  018C04  0E3A               	movlw	58
 20872  018C06  6EE6               	movwf	postinc1,c
 20873  018C08  0E30               	movlw	48
 20874  018C0A  6EE6               	movwf	postinc1,c
 20875                           
 20876                           ;stkvar	_tim @ sp[(-6)+-2]
 20877  018C0C  0EF8               	movlw	-8
 20878  018C0E  006F FF8C  F034    	movff	plusw1,btemp+10
 20879  018C14  0EF9               	movlw	-7
 20880  018C16  006F FF8C  F035    	movff	plusw1,btemp+11
 20881  018C1C  0E04               	movlw	4
 20882  018C1E  2434               	addwf	(btemp+10)^0,w,c
 20883  018C20  6ED9               	movwf	fsr2l,c
 20884  018C22  0E00               	movlw	0
 20885  018C24  2035               	addwfc	(btemp+11)^0,w,c
 20886  018C26  6EDA               	movwf	fsr2h,c
 20887  018C28  50DF               	movf	indf2,w,c
 20888  018C2A  6EE6               	movwf	postinc1,c
 20889  018C2C  0ED1               	movlw	low (asctime@buf+13)
 20890  018C2E  6EE6               	movwf	postinc1,c
 20891  018C30  0E03               	movlw	high (asctime@buf+13)
 20892  018C32  6EE6               	movwf	postinc1,c
 20893  018C34  ECB6  F0FC         	call	_put2d	;wreg free
 20894  018C38  0E3A               	movlw	58
 20895  018C3A  6EE6               	movwf	postinc1,c
 20896  018C3C  0E30               	movlw	48
 20897  018C3E  6EE6               	movwf	postinc1,c
 20898                           
 20899                           ;stkvar	_tim @ sp[(-6)+-2]
 20900  018C40  0EF8               	movlw	-8
 20901  018C42  006F FF8C  F034    	movff	plusw1,btemp+10
 20902  018C48  0EF9               	movlw	-7
 20903  018C4A  006F FF8C  F035    	movff	plusw1,btemp+11
 20904  018C50  0E02               	movlw	2
 20905  018C52  2434               	addwf	(btemp+10)^0,w,c
 20906  018C54  6ED9               	movwf	fsr2l,c
 20907  018C56  0E00               	movlw	0
 20908  018C58  2035               	addwfc	(btemp+11)^0,w,c
 20909  018C5A  6EDA               	movwf	fsr2h,c
 20910  018C5C  50DF               	movf	indf2,w,c
 20911  018C5E  6EE6               	movwf	postinc1,c
 20912  018C60  0ED4               	movlw	low (asctime@buf+16)
 20913  018C62  6EE6               	movwf	postinc1,c
 20914  018C64  0E03               	movlw	high (asctime@buf+16)
 20915  018C66  6EE6               	movwf	postinc1,c
 20916  018C68  ECB6  F0FC         	call	_put2d	;wreg free
 20917  018C6C  0E20               	movlw	32
 20918  018C6E  6EE6               	movwf	postinc1,c
 20919  018C70  0E30               	movlw	48
 20920  018C72  6EE6               	movwf	postinc1,c
 20921                           
 20922                           ;stkvar	_tim @ sp[(-6)+-2]
 20923  018C74  0EF8               	movlw	-8
 20924  018C76  006F FF8F FFD9     	movff	plusw1,fsr2l
 20925  018C7C  0EF9               	movlw	-7
 20926  018C7E  006F FF8F FFDA     	movff	plusw1,fsr2h
 20927  018C84  50DF               	movf	indf2,w,c
 20928  018C86  6EE6               	movwf	postinc1,c
 20929  018C88  0ED7               	movlw	low (asctime@buf+19)
 20930  018C8A  6EE6               	movwf	postinc1,c
 20931  018C8C  0E03               	movlw	high (asctime@buf+19)
 20932  018C8E  6EE6               	movwf	postinc1,c
 20933  018C90  ECB6  F0FC         	call	_put2d	;wreg free
 20934  018C94  0E00               	movlw	0
 20935  018C96  6EE6               	movwf	postinc1,c
 20936  018C98  0E20               	movlw	32
 20937  018C9A  6EE6               	movwf	postinc1,c
 20938  018C9C  0E64               	movlw	100
 20939  018C9E  6EE6               	movwf	postinc1,c
 20940  018CA0  0E00               	movlw	0
 20941  018CA2  6EE6               	movwf	postinc1,c
 20942                           
 20943                           ;stkvar	_tim @ sp[(-8)+-2]
 20944  018CA4  0EF6               	movlw	-10
 20945  018CA6  006F FF8C  F034    	movff	plusw1,btemp+10
 20946  018CAC  0EF7               	movlw	-9
 20947  018CAE  006F FF8C  F035    	movff	plusw1,btemp+11
 20948  018CB4  0E0A               	movlw	10
 20949  018CB6  2434               	addwf	(btemp+10)^0,w,c
 20950  018CB8  6ED9               	movwf	fsr2l,c
 20951  018CBA  0E00               	movlw	0
 20952  018CBC  2035               	addwfc	(btemp+11)^0,w,c
 20953  018CBE  6EDA               	movwf	fsr2h,c
 20954  018CC0  006F FF78  F034    	movff	postinc2,btemp+10
 20955  018CC6  006F FF74  F035    	movff	postdec2,btemp+11
 20956  018CCC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20957  018CD2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20958  018CD8  ECA0  F0F9         	call	___awdiv	;wreg free
 20959  018CDC  502A               	movf	btemp^0,w,c
 20960  018CDE  0F13               	addlw	19
 20961  018CE0  6EE6               	movwf	postinc1,c
 20962  018CE2  0EDA               	movlw	low (asctime@buf+22)
 20963  018CE4  6EE6               	movwf	postinc1,c
 20964  018CE6  0E03               	movlw	high (asctime@buf+22)
 20965  018CE8  6EE6               	movwf	postinc1,c
 20966  018CEA  ECB6  F0FC         	call	_put2d	;wreg free
 20967  018CEE  0E0A               	movlw	10
 20968  018CF0  6EE6               	movwf	postinc1,c
 20969  018CF2  0E30               	movlw	48
 20970  018CF4  6EE6               	movwf	postinc1,c
 20971  018CF6  0E64               	movlw	100
 20972  018CF8  6EE6               	movwf	postinc1,c
 20973  018CFA  0E00               	movlw	0
 20974  018CFC  6EE6               	movwf	postinc1,c
 20975                           
 20976                           ;stkvar	_tim @ sp[(-8)+-2]
 20977  018CFE  0EF6               	movlw	-10
 20978  018D00  006F FF8C  F034    	movff	plusw1,btemp+10
 20979  018D06  0EF7               	movlw	-9
 20980  018D08  006F FF8C  F035    	movff	plusw1,btemp+11
 20981  018D0E  0E0A               	movlw	10
 20982  018D10  2434               	addwf	(btemp+10)^0,w,c
 20983  018D12  6ED9               	movwf	fsr2l,c
 20984  018D14  0E00               	movlw	0
 20985  018D16  2035               	addwfc	(btemp+11)^0,w,c
 20986  018D18  6EDA               	movwf	fsr2h,c
 20987  018D1A  006F FF78  F034    	movff	postinc2,btemp+10
 20988  018D20  006F FF74  F035    	movff	postdec2,btemp+11
 20989  018D26  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20990  018D2C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20991  018D32  ECCF  F0FD         	call	___awmod	;wreg free
 20992  018D36  502A               	movf	btemp^0,w,c
 20993  018D38  6EE6               	movwf	postinc1,c
 20994  018D3A  0EDC               	movlw	low (asctime@buf+24)
 20995  018D3C  6EE6               	movwf	postinc1,c
 20996  018D3E  0E03               	movlw	high (asctime@buf+24)
 20997  018D40  6EE6               	movwf	postinc1,c
 20998  018D42  ECB6  F0FC         	call	_put2d	;wreg free
 20999  018D46  0EC4               	movlw	low asctime@buf
 21000  018D48  6E2A               	movwf	btemp^0,c
 21001  018D4A  0E03               	movlw	high asctime@buf
 21002  018D4C  6E2B               	movwf	(btemp+1)^0,c
 21003                           
 21004                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21005  018D4E  0EFA               	movlw	250
 21006  018D50  26E1               	addwf	fsr1l,f,c
 21007  018D52  0EFF               	movlw	255
 21008  018D54  22E2               	addwfc	fsr1h,f,c
 21009  018D56  0012               	return		;funcret
 21010  018D58                     __end_of_asctime:
 21011                           	opt callstack 0
 21012                           
 21013 ;; *************** function _put2d *****************
 21014 ;; Defined at:
 21015 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 21016 ;; Parameters:    Size  Location     Type
 21017 ;;  cp              2  [STACK] PTR unsigned char 
 21018 ;;		 -> asctime@buf(27), 
 21019 ;;  i               1  [STACK] unsigned char 
 21020 ;;  cl              1  [STACK] unsigned char 
 21021 ;;  ct              1  [STACK] unsigned char 
 21022 ;; Auto vars:     Size  Location     Type
 21023 ;;		None
 21024 ;; Return value:  Size  Location     Type
 21025 ;;                  1  [STACK] void 
 21026 ;; Registers used:
 21027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21028 ;; Tracked objects:
 21029 ;;		On entry : 0/3
 21030 ;;		On exit  : 0/0
 21031 ;;		Unchanged: 0/0
 21032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21037 ;;Total ram usage:        0 bytes
 21038 ;; Hardware stack levels used:    1
 21039 ;; Hardware stack levels required when called:   16
 21040 ;; This function calls:
 21041 ;;		___awdiv
 21042 ;;		___lbmod
 21043 ;; This function is called by:
 21044 ;;		_asctime
 21045 ;; This function uses a reentrant model
 21046 ;;
 21047                           
 21048                           	psect	text56
 21049  01F96C                     __ptext56:
 21050                           	opt callstack 0
 21051  01F96C                     _put2d:
 21052                           	opt callstack 12
 21053                           
 21054                           ;stkvar	_ct @ sp[(0)+-5]
 21055                           ;stkvar	_cp @ sp[(0)+-2]
 21056                           
 21057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21058                           ;incstack = 0
 21059  01F96C  0EFE               	movlw	-2
 21060  01F96E  006F FF8F FFD9     	movff	plusw1,fsr2l
 21061  01F974  0EFF               	movlw	-1
 21062  01F976  006F FF8F FFDA     	movff	plusw1,fsr2h
 21063  01F97C  0EFB               	movlw	-5
 21064  01F97E  006F FF8F FFDF     	movff	plusw1,indf2
 21065  01F984  0E0A               	movlw	10
 21066  01F986  6EE6               	movwf	postinc1,c
 21067                           
 21068                           ;stkvar	_i @ sp[(-1)+-3]
 21069  01F988  0EFC               	movlw	-4
 21070  01F98A  50E3               	movf	plusw1,w,c
 21071  01F98C  6EE6               	movwf	postinc1,c
 21072  01F98E  ECB4  F007         	call	___lbmod	;wreg free
 21073  01F992  0E30               	movlw	48
 21074  01F994  262A               	addwf	btemp^0,f,c
 21075                           
 21076                           ;stkvar	_cp @ sp[(0)+-2]
 21077  01F996  0EFE               	movlw	-2
 21078  01F998  006F FF8C  F02B    	movff	plusw1,btemp+1
 21079  01F99E  0E01               	movlw	1
 21080  01F9A0  5E2B               	subwf	(btemp+1)^0,f,c
 21081  01F9A2  0EFE               	movlw	-2
 21082  01F9A4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21083  01F9AA  0EFF               	movlw	-1
 21084  01F9AC  006F FF8C  F02B    	movff	plusw1,btemp+1
 21085  01F9B2  0E00               	movlw	0
 21086  01F9B4  5A2B               	subwfb	(btemp+1)^0,f,c
 21087  01F9B6  0EFF               	movlw	-1
 21088  01F9B8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21089  01F9BE  0EFE               	movlw	-2
 21090  01F9C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 21091  01F9C6  0EFF               	movlw	-1
 21092  01F9C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 21093  01F9CE  0060  F0AB  FFDF   	movff	btemp,indf2
 21094  01F9D4  0E0A               	movlw	10
 21095  01F9D6  6EE6               	movwf	postinc1,c
 21096  01F9D8  0E00               	movlw	0
 21097  01F9DA  6EE6               	movwf	postinc1,c
 21098                           
 21099                           ;stkvar	_i @ sp[(-2)+-3]
 21100  01F9DC  0EFB               	movlw	-5
 21101  01F9DE  50E3               	movf	plusw1,w,c
 21102  01F9E0  6EE6               	movwf	postinc1,c
 21103  01F9E2  0E00               	movlw	0
 21104  01F9E4  6EE6               	movwf	postinc1,c
 21105  01F9E6  ECA0  F0F9         	call	___awdiv	;wreg free
 21106                           
 21107                           ;stkvar	_i @ sp[(0)+-3]
 21108  01F9EA  0EFD               	movlw	-3
 21109  01F9EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 21110  01F9F2  0EFD               	movlw	-3
 21111  01F9F4  50E3               	movf	plusw1,w,c
 21112  01F9F6  B4D8               	btfsc	status,2,c
 21113  01F9F8  D021               	goto	l16702
 21114                           
 21115                           ;stkvar	_cp @ sp[(0)+-2]
 21116  01F9FA  0EFE               	movlw	-2
 21117  01F9FC  006F FF8C  F02A    	movff	plusw1,btemp
 21118  01FA02  0E01               	movlw	1
 21119  01FA04  5E2A               	subwf	btemp^0,f,c
 21120  01FA06  0EFE               	movlw	-2
 21121  01FA08  0060  F0AB  FFE3   	movff	btemp,plusw1
 21122  01FA0E  0EFF               	movlw	-1
 21123  01FA10  006F FF8C  F02A    	movff	plusw1,btemp
 21124  01FA16  0E00               	movlw	0
 21125  01FA18  5A2A               	subwfb	btemp^0,f,c
 21126  01FA1A  0EFF               	movlw	-1
 21127  01FA1C  0060  F0AB  FFE3   	movff	btemp,plusw1
 21128  01FA22  0EFE               	movlw	-2
 21129  01FA24  006F FF8F FFD9     	movff	plusw1,fsr2l
 21130  01FA2A  0EFF               	movlw	-1
 21131  01FA2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 21132                           
 21133                           ;stkvar	_i @ sp[(0)+-3]
 21134  01FA32  0EFD               	movlw	-3
 21135  01FA34  50E3               	movf	plusw1,w,c
 21136  01FA36  0F30               	addlw	48
 21137  01FA38  6EDF               	movwf	indf2,c
 21138  01FA3A  D020               	goto	l3426
 21139  01FA3C                     l16702:
 21140                           
 21141                           ;stkvar	_cl @ sp[(0)+-4]
 21142                           ;stkvar	_cp @ sp[(0)+-2]
 21143  01FA3C  0EFE               	movlw	-2
 21144  01FA3E  006F FF8C  F02A    	movff	plusw1,btemp
 21145  01FA44  0E01               	movlw	1
 21146  01FA46  5E2A               	subwf	btemp^0,f,c
 21147  01FA48  0EFE               	movlw	-2
 21148  01FA4A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21149  01FA50  0EFF               	movlw	-1
 21150  01FA52  006F FF8C  F02A    	movff	plusw1,btemp
 21151  01FA58  0E00               	movlw	0
 21152  01FA5A  5A2A               	subwfb	btemp^0,f,c
 21153  01FA5C  0EFF               	movlw	-1
 21154  01FA5E  0060  F0AB  FFE3   	movff	btemp,plusw1
 21155  01FA64  0EFE               	movlw	-2
 21156  01FA66  006F FF8F FFD9     	movff	plusw1,fsr2l
 21157  01FA6C  0EFF               	movlw	-1
 21158  01FA6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 21159  01FA74  0EFC               	movlw	-4
 21160  01FA76  006F FF8F FFDF     	movff	plusw1,indf2
 21161  01FA7C                     l3426:
 21162                           
 21163                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 21164  01FA7C  0EFB               	movlw	251
 21165  01FA7E  26E1               	addwf	fsr1l,f,c
 21166  01FA80  0EFF               	movlw	255
 21167  01FA82  22E2               	addwfc	fsr1h,f,c
 21168  01FA84  0012               	return		;funcret
 21169  01FA86                     __end_of_put2d:
 21170                           	opt callstack 0
 21171                           
 21172 ;; *************** function ___lbmod *****************
 21173 ;; Defined at:
 21174 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 21175 ;; Parameters:    Size  Location     Type
 21176 ;;  dividend        1  [STACK] unsigned char 
 21177 ;;  divisor         1  [STACK] unsigned char 
 21178 ;; Auto vars:     Size  Location     Type
 21179 ;;  rem             1  [STACK] unsigned char 
 21180 ;;  counter         1  [STACK] unsigned char 
 21181 ;; Return value:  Size  Location     Type
 21182 ;;                  1  [STACK] unsigned char 
 21183 ;; Registers used:
 21184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 21185 ;; Tracked objects:
 21186 ;;		On entry : 0/3
 21187 ;;		On exit  : 0/0
 21188 ;;		Unchanged: 0/0
 21189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21194 ;;Total ram usage:        0 bytes
 21195 ;; Hardware stack levels used:    1
 21196 ;; Hardware stack levels required when called:   15
 21197 ;; This function calls:
 21198 ;;		Nothing
 21199 ;; This function is called by:
 21200 ;;		_put2d
 21201 ;; This function uses a reentrant model
 21202 ;;
 21203                           
 21204                           	psect	text57
 21205  000F68                     __ptext57:
 21206                           	opt callstack 0
 21207  000F68                     ___lbmod:
 21208                           	opt callstack 0
 21209                           
 21210                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21211  000F68  52E6               	movf	postinc1,f,c
 21212  000F6A  52E6               	movf	postinc1,f,c
 21213                           
 21214                           ;stkvar	_counter @ sp[(-2)+1]
 21215                           
 21216                           ;incstack = 0
 21217  000F6C  0EFF               	movlw	-1
 21218  000F6E  6AE3               	clrf	plusw1,c
 21219  000F70  86E3               	bsf	plusw1,3,c
 21220                           
 21221                           ;stkvar	_rem @ sp[(-2)+0]
 21222  000F72  0EFE               	movlw	-2
 21223  000F74  6AE3               	clrf	plusw1,c
 21224  000F76                     l12448:
 21225                           
 21226                           ;stkvar	_dividend @ sp[(-2)+-1]
 21227  000F76  0EFD               	movlw	-3
 21228  000F78  006F FF8C  F035    	movff	plusw1,btemp+11
 21229                           
 21230                           ;stkvar	_rem @ sp[(-2)+0]
 21231  000F7E  0EFE               	movlw	-2
 21232  000F80  006F FF8C  F034    	movff	plusw1,btemp+10
 21233  000F86  90D8               	bcf	status,0,c
 21234  000F88  3435               	rlcf	(btemp+11)^0,w,c
 21235  000F8A  3434               	rlcf	(btemp+10)^0,w,c
 21236  000F8C  6E35               	movwf	(btemp+11)^0,c
 21237                           
 21238                           ;stkvar	_rem @ sp[(-2)+0]
 21239  000F8E  0EFE               	movlw	-2
 21240  000F90  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21241                           
 21242                           ;stkvar	_dividend @ sp[(-2)+-1]
 21243  000F96  50E1               	movf	fsr1l,w,c
 21244  000F98  0FFD               	addlw	-3
 21245  000F9A  6ED9               	movwf	fsr2l,c
 21246  000F9C  50E2               	movf	fsr1h,w,c
 21247  000F9E  6EDA               	movwf	fsr2h,c
 21248  000FA0  0EFF               	movlw	255
 21249  000FA2  22DA               	addwfc	fsr2h,f,c
 21250  000FA4  90D8               	bcf	status,0,c
 21251  000FA6  36DF               	rlcf	indf2,f,c
 21252                           
 21253                           ;stkvar	_divisor @ sp[(-2)+-2]
 21254                           ;stkvar	_rem @ sp[(-2)+0]
 21255  000FA8  50E1               	movf	fsr1l,w,c
 21256  000FAA  0FFE               	addlw	-2
 21257  000FAC  6ED9               	movwf	fsr2l,c
 21258  000FAE  50E2               	movf	fsr1h,w,c
 21259  000FB0  6EDA               	movwf	fsr2h,c
 21260  000FB2  0EFF               	movlw	255
 21261  000FB4  22DA               	addwfc	fsr2h,f,c
 21262  000FB6  0EFC               	movlw	-4
 21263  000FB8  50E3               	movf	plusw1,w,c
 21264  000FBA  5CDE               	subwf	postinc2,w,c
 21265  000FBC  A0D8               	btfss	status,0,c
 21266  000FBE  D00D               	goto	l12456
 21267                           
 21268                           ;stkvar	_divisor @ sp[(-2)+-2]
 21269  000FC0  0EFC               	movlw	-4
 21270  000FC2  006F FF8C  F035    	movff	plusw1,btemp+11
 21271                           
 21272                           ;stkvar	_rem @ sp[(-2)+0]
 21273  000FC8  50E1               	movf	fsr1l,w,c
 21274  000FCA  0FFE               	addlw	-2
 21275  000FCC  6ED9               	movwf	fsr2l,c
 21276  000FCE  50E2               	movf	fsr1h,w,c
 21277  000FD0  6EDA               	movwf	fsr2h,c
 21278  000FD2  0EFF               	movlw	255
 21279  000FD4  22DA               	addwfc	fsr2h,f,c
 21280  000FD6  5035               	movf	(btemp+11)^0,w,c
 21281  000FD8  5EDF               	subwf	indf2,f,c
 21282  000FDA                     l12456:
 21283                           
 21284                           ;stkvar	_counter @ sp[(-2)+1]
 21285  000FDA  0EFF               	movlw	-1
 21286  000FDC  50E3               	movf	plusw1,w,c
 21287  000FDE  6E2A               	movwf	btemp^0,c
 21288  000FE0  0E01               	movlw	1
 21289  000FE2  5E2A               	subwf	btemp^0,f,c
 21290  000FE4  0EFF               	movlw	-1
 21291  000FE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 21292  000FEC  A4D8               	btfss	status,2,c
 21293  000FEE  D7C3               	goto	l12448
 21294                           
 21295                           ;stkvar	_rem @ sp[(-2)+0]
 21296  000FF0  0EFE               	movlw	-2
 21297  000FF2  006F FF8C  F02A    	movff	plusw1,btemp
 21298                           
 21299                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21300  000FF8  52E5               	movf	postdec1,f,c
 21301  000FFA  52E5               	movf	postdec1,f,c
 21302  000FFC  52E5               	movf	postdec1,f,c
 21303  000FFE  52E5               	movf	postdec1,f,c
 21304  001000  0012               	return		;funcret
 21305  001002                     __end_of___lbmod:
 21306                           	opt callstack 0
 21307                           
 21308 ;; *************** function _current_sensor_cal *****************
 21309 ;; Defined at:
 21310 ;;		line 525 in file "main.c"
 21311 ;; Parameters:    Size  Location     Type
 21312 ;;		None
 21313 ;; Auto vars:     Size  Location     Type
 21314 ;;  cp              4  [STACK] unsigned long 
 21315 ;;  cb              4  [STACK] unsigned long 
 21316 ;;  x               1  [STACK] unsigned char 
 21317 ;; Return value:  Size  Location     Type
 21318 ;;                  1  [STACK] _Bool 
 21319 ;; Registers used:
 21320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 21321 ;; Tracked objects:
 21322 ;;		On entry : 0/2
 21323 ;;		On exit  : 0/0
 21324 ;;		Unchanged: 0/0
 21325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21330 ;;Total ram usage:        0 bytes
 21331 ;; Hardware stack levels used:    1
 21332 ;; Hardware stack levels required when called:   27
 21333 ;; This function calls:
 21334 ;;		_WaitMs
 21335 ;;		_cal_current_zero
 21336 ;;		_clear_adc_scan
 21337 ;;		_get_raw_result
 21338 ;;		_get_switch
 21339 ;;		_get_vterm_ptr
 21340 ;;		_spinners
 21341 ;;		_sprintf
 21342 ;;		_start_adc_scan
 21343 ;;		_update_lcd
 21344 ;;		_write_cal_data
 21345 ;; This function is called by:
 21346 ;;		_main
 21347 ;; This function uses a reentrant model
 21348 ;;
 21349                           
 21350                           	psect	text58
 21351  019694                     __ptext58:
 21352                           	opt callstack 0
 21353  019694                     _current_sensor_cal:
 21354                           	opt callstack 0
 21355                           
 21356                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21357  019694  0E09               	movlw	9
 21358  019696  26E1               	addwf	fsr1l,f,c
 21359  019698  0E00               	movlw	0
 21360  01969A  22E2               	addwfc	fsr1h,f,c
 21361                           
 21362                           ;main.c: 527:  uint8_t x = 0;
 21363                           ;stkvar	_x @ sp[(-9)+8]
 21364                           
 21365                           ;incstack = 0
 21366  01969C  0EFF               	movlw	-1
 21367  01969E  6AE3               	clrf	plusw1,c
 21368                           
 21369                           ;main.c: 528:  uint32_t cb = 0, cp = 0;
 21370                           ;stkvar	_cb @ sp[(-9)+4]
 21371  0196A0  0EFB               	movlw	-5
 21372  0196A2  6AE3               	clrf	plusw1,c
 21373  0196A4  0EFC               	movlw	-4
 21374  0196A6  6AE3               	clrf	plusw1,c
 21375  0196A8  0EFD               	movlw	-3
 21376  0196AA  6AE3               	clrf	plusw1,c
 21377  0196AC  0EFE               	movlw	-2
 21378  0196AE  6AE3               	clrf	plusw1,c
 21379                           
 21380                           ;stkvar	_cp @ sp[(-9)+0]
 21381  0196B0  0EF7               	movlw	-9
 21382  0196B2  6AE3               	clrf	plusw1,c
 21383  0196B4  0EF8               	movlw	-8
 21384  0196B6  6AE3               	clrf	plusw1,c
 21385  0196B8  0EF9               	movlw	-7
 21386  0196BA  6AE3               	clrf	plusw1,c
 21387  0196BC  0EFA               	movlw	-6
 21388  0196BE  6AE3               	clrf	plusw1,c
 21389                           
 21390                           ;main.c: 530:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21391  0196C0  0E03               	movlw	low STR_57
 21392  0196C2  6EE6               	movwf	postinc1,c
 21393  0196C4  0EFE               	movlw	high STR_57
 21394  0196C6  6EE6               	movwf	postinc1,c
 21395  0196C8  0E00               	movlw	0
 21396  0196CA  6EE6               	movwf	postinc1,c
 21397  0196CC  0E00               	movlw	0
 21398  0196CE  6EE6               	movwf	postinc1,c
 21399  0196D0  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21400  0196D4  0060  F0AB  FFE6   	movff	btemp,postinc1
 21401  0196DA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21402  0196E0  0E04               	movlw	4
 21403  0196E2  6EE6               	movwf	postinc1,c
 21404  0196E4  ECE5  F0FE         	call	_sprintf	;wreg free
 21405                           
 21406                           ; BSR set to: 0
 21407                           ;main.c: 531:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 21408  0196E8  0ED7               	movlw	low STR_58
 21409  0196EA  6EE6               	movwf	postinc1,c
 21410  0196EC  0EFD               	movlw	high STR_58
 21411  0196EE  6EE6               	movwf	postinc1,c
 21412  0196F0  0E00               	movlw	0
 21413  0196F2  6EE6               	movwf	postinc1,c
 21414  0196F4  0E01               	movlw	1
 21415  0196F6  6EE6               	movwf	postinc1,c
 21416  0196F8  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21417  0196FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21418  019702  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21419  019708  0E04               	movlw	4
 21420  01970A  6EE6               	movwf	postinc1,c
 21421  01970C  ECE5  F0FE         	call	_sprintf	;wreg free
 21422                           
 21423                           ; BSR set to: 0
 21424                           ;main.c: 532:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 21425  019710  0EC1               	movlw	low STR_59
 21426  019712  6EE6               	movwf	postinc1,c
 21427  019714  0EFD               	movlw	high STR_59
 21428  019716  6EE6               	movwf	postinc1,c
 21429  019718  0E00               	movlw	0
 21430  01971A  6EE6               	movwf	postinc1,c
 21431  01971C  0E02               	movlw	2
 21432  01971E  6EE6               	movwf	postinc1,c
 21433  019720  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21434  019724  0060  F0AB  FFE6   	movff	btemp,postinc1
 21435  01972A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21436  019730  0E04               	movlw	4
 21437  019732  6EE6               	movwf	postinc1,c
 21438  019734  ECE5  F0FE         	call	_sprintf	;wreg free
 21439                           
 21440                           ; BSR set to: 0
 21441                           ;main.c: 533:  update_lcd(0);
 21442  019738  0E00               	movlw	0
 21443  01973A  6EE6               	movwf	postinc1,c
 21444  01973C  EC97  F0F7         	call	_update_lcd	;wreg free
 21445                           
 21446                           ;main.c: 534:  WaitMs(2000);
 21447  019740  0ED0               	movlw	208
 21448  019742  6EE6               	movwf	postinc1,c
 21449  019744  0E07               	movlw	7
 21450  019746  6EE6               	movwf	postinc1,c
 21451  019748  EC2E  F012         	call	_WaitMs	;wreg free
 21452  01974C                     l17014:
 21453                           
 21454                           ;main.c: 536:   if (++x > 64)
 21455                           ;stkvar	_x @ sp[(-9)+8]
 21456  01974C  0EFF               	movlw	-1
 21457  01974E  2AE3               	incf	plusw1,f,c
 21458  019750  0EFF               	movlw	-1
 21459  019752  006F FF8C  F02A    	movff	plusw1,btemp
 21460  019758  0E40               	movlw	64
 21461  01975A  642A               	cpfsgt	btemp^0,c
 21462  01975C  D001               	goto	l17018
 21463  01975E  D1CF               	goto	l1524
 21464  019760                     l17018:
 21465                           
 21466                           ;main.c: 538:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 21467  019760  0E00               	movlw	0
 21468  019762  6EE6               	movwf	postinc1,c
 21469  019764  0E04               	movlw	4
 21470  019766  6EE6               	movwf	postinc1,c
 21471  019768  EC5B  F000         	call	_spinners	;wreg free
 21472  01976C  502A               	movf	btemp^0,w,c
 21473  01976E  6EE6               	movwf	postinc1,c
 21474  019770  0E00               	movlw	0
 21475  019772  6EE6               	movwf	postinc1,c
 21476  019774  0E47               	movlw	low STR_60
 21477  019776  6EE6               	movwf	postinc1,c
 21478  019778  0EFF               	movlw	high STR_60
 21479  01977A  6EE6               	movwf	postinc1,c
 21480  01977C  0E00               	movlw	0
 21481  01977E  6EE6               	movwf	postinc1,c
 21482  019780  0E02               	movlw	2
 21483  019782  6EE6               	movwf	postinc1,c
 21484  019784  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21485  019788  0060  F0AB  FFE6   	movff	btemp,postinc1
 21486  01978E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21487  019794  0E06               	movlw	6
 21488  019796  6EE6               	movwf	postinc1,c
 21489  019798  ECE5  F0FE         	call	_sprintf	;wreg free
 21490                           
 21491                           ;main.c: 539:   update_lcd(0);
 21492  01979C  0E00               	movlw	0
 21493  01979E  6EE6               	movwf	postinc1,c
 21494  0197A0  EC97  F0F7         	call	_update_lcd	;wreg free
 21495                           
 21496                           ;main.c: 540:   WaitMs(100);
 21497  0197A4  0E64               	movlw	100
 21498  0197A6  6EE6               	movwf	postinc1,c
 21499  0197A8  0E00               	movlw	0
 21500  0197AA  6EE6               	movwf	postinc1,c
 21501  0197AC  EC2E  F012         	call	_WaitMs	;wreg free
 21502                           
 21503                           ;main.c: 541:  } while (get_switch(SCALIB));
 21504  0197B0  0E04               	movlw	4
 21505  0197B2  6EE6               	movwf	postinc1,c
 21506  0197B4  EC41  F013         	call	_get_switch	;wreg free
 21507  0197B8  502A               	movf	btemp^0,w,c
 21508  0197BA  A4D8               	btfss	status,2,c
 21509  0197BC  D7C7               	goto	l17014
 21510                           
 21511                           ;main.c: 543:  x = 0;
 21512                           ;stkvar	_x @ sp[(-9)+8]
 21513  0197BE  0EFF               	movlw	-1
 21514  0197C0  6AE3               	clrf	plusw1,c
 21515  0197C2                     l17026:
 21516                           
 21517                           ;main.c: 545:   cb += get_raw_result(C_BATT);
 21518  0197C2  0E00               	movlw	0
 21519  0197C4  6EE6               	movwf	postinc1,c
 21520  0197C6  ECF6  F011         	call	_get_raw_result	;wreg free
 21521                           
 21522                           ;stkvar	_cb @ sp[(-9)+4]
 21523  0197CA  50E1               	movf	fsr1l,w,c
 21524  0197CC  0FFB               	addlw	-5
 21525  0197CE  6ED9               	movwf	fsr2l,c
 21526  0197D0  50E2               	movf	fsr1h,w,c
 21527  0197D2  6EDA               	movwf	fsr2h,c
 21528  0197D4  0EFF               	movlw	255
 21529  0197D6  22DA               	addwfc	fsr2h,f,c
 21530  0197D8  502A               	movf	btemp^0,w,c
 21531  0197DA  26DE               	addwf	postinc2,f,c
 21532  0197DC  502B               	movf	(btemp+1)^0,w,c
 21533  0197DE  22DE               	addwfc	postinc2,f,c
 21534  0197E0  0E00               	movlw	0
 21535  0197E2  22DE               	addwfc	postinc2,f,c
 21536  0197E4  22DE               	addwfc	postinc2,f,c
 21537                           
 21538                           ; BSR set to: 57
 21539                           ;main.c: 546:   cp += get_raw_result(C_PV);
 21540  0197E6  0E01               	movlw	1
 21541  0197E8  6EE6               	movwf	postinc1,c
 21542  0197EA  ECF6  F011         	call	_get_raw_result	;wreg free
 21543                           
 21544                           ;stkvar	_cp @ sp[(-9)+0]
 21545  0197EE  50E1               	movf	fsr1l,w,c
 21546  0197F0  0FF7               	addlw	-9
 21547  0197F2  6ED9               	movwf	fsr2l,c
 21548  0197F4  50E2               	movf	fsr1h,w,c
 21549  0197F6  6EDA               	movwf	fsr2h,c
 21550  0197F8  0EFF               	movlw	255
 21551  0197FA  22DA               	addwfc	fsr2h,f,c
 21552  0197FC  502A               	movf	btemp^0,w,c
 21553  0197FE  26DE               	addwf	postinc2,f,c
 21554  019800  502B               	movf	(btemp+1)^0,w,c
 21555  019802  22DE               	addwfc	postinc2,f,c
 21556  019804  0E00               	movlw	0
 21557  019806  22DE               	addwfc	postinc2,f,c
 21558  019808  22DE               	addwfc	postinc2,f,c
 21559                           
 21560                           ; BSR set to: 57
 21561                           ;main.c: 547:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 21562  01980A  0E45               	movlw	low STR_61
 21563  01980C  6EE6               	movwf	postinc1,c
 21564  01980E  0EFE               	movlw	high STR_61
 21565  019810  6EE6               	movwf	postinc1,c
 21566  019812  0E00               	movlw	0
 21567  019814  6EE6               	movwf	postinc1,c
 21568  019816  0E00               	movlw	0
 21569  019818  6EE6               	movwf	postinc1,c
 21570  01981A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21571  01981E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21572  019824  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21573  01982A  0E04               	movlw	4
 21574  01982C  6EE6               	movwf	postinc1,c
 21575  01982E  ECE5  F0FE         	call	_sprintf	;wreg free
 21576                           
 21577                           ; BSR set to: 0
 21578                           ;main.c: 548:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21579  019832  0E01               	movlw	1
 21580  019834  6EE6               	movwf	postinc1,c
 21581  019836  ECF6  F011         	call	_get_raw_result	;wreg free
 21582  01983A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21583  019840  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21584  019846  0E00               	movlw	0
 21585  019848  6EE6               	movwf	postinc1,c
 21586  01984A  ECF6  F011         	call	_get_raw_result	;wreg free
 21587  01984E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21588  019854  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21589  01985A  0E3D               	movlw	low STR_62
 21590  01985C  6EE6               	movwf	postinc1,c
 21591  01985E  0EFD               	movlw	high STR_62
 21592  019860  6EE6               	movwf	postinc1,c
 21593  019862  0E00               	movlw	0
 21594  019864  6EE6               	movwf	postinc1,c
 21595  019866  0E01               	movlw	1
 21596  019868  6EE6               	movwf	postinc1,c
 21597  01986A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21598  01986E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21599  019874  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21600  01987A  0E08               	movlw	8
 21601  01987C  6EE6               	movwf	postinc1,c
 21602  01987E  ECE5  F0FE         	call	_sprintf	;wreg free
 21603                           
 21604                           ; BSR set to: 0
 21605                           ;main.c: 549:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 21606                           ;stkvar	_x @ sp[(-9)+8]
 21607  019882  0EFF               	movlw	-1
 21608  019884  50E3               	movf	plusw1,w,c
 21609  019886  6EE6               	movwf	postinc1,c
 21610  019888  0E00               	movlw	0
 21611  01988A  6EE6               	movwf	postinc1,c
 21612  01988C  0E9D               	movlw	low STR_63
 21613  01988E  6EE6               	movwf	postinc1,c
 21614  019890  0EFE               	movlw	high STR_63
 21615  019892  6EE6               	movwf	postinc1,c
 21616  019894  0E00               	movlw	0
 21617  019896  6EE6               	movwf	postinc1,c
 21618  019898  0E02               	movlw	2
 21619  01989A  6EE6               	movwf	postinc1,c
 21620  01989C  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21621  0198A0  0060  F0AB  FFE6   	movff	btemp,postinc1
 21622  0198A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21623  0198AC  0E06               	movlw	6
 21624  0198AE  6EE6               	movwf	postinc1,c
 21625  0198B0  ECE5  F0FE         	call	_sprintf	;wreg free
 21626                           
 21627                           ; BSR set to: 0
 21628                           ;main.c: 550:   update_lcd(0);
 21629  0198B4  0E00               	movlw	0
 21630  0198B6  6EE6               	movwf	postinc1,c
 21631  0198B8  EC97  F0F7         	call	_update_lcd	;wreg free
 21632                           
 21633                           ;main.c: 551:   clear_adc_scan();
 21634  0198BC  ECB5  F016         	call	_clear_adc_scan	;wreg free
 21635                           
 21636                           ; BSR set to: 1
 21637                           ;main.c: 552:   start_adc_scan();
 21638  0198C0  EC5F  F00D         	call	_start_adc_scan	;wreg free
 21639                           
 21640                           ;main.c: 553:   WaitMs(100);
 21641  0198C4  0E64               	movlw	100
 21642  0198C6  6EE6               	movwf	postinc1,c
 21643  0198C8  0E00               	movlw	0
 21644  0198CA  6EE6               	movwf	postinc1,c
 21645  0198CC  EC2E  F012         	call	_WaitMs	;wreg free
 21646                           
 21647                           ;main.c: 554:  } while (++x < 64);
 21648                           ;stkvar	_x @ sp[(-9)+8]
 21649  0198D0  0EFF               	movlw	-1
 21650  0198D2  2AE3               	incf	plusw1,f,c
 21651  0198D4  0EFF               	movlw	-1
 21652  0198D6  006F FF8C  F02A    	movff	plusw1,btemp
 21653  0198DC  0E3F               	movlw	63
 21654  0198DE  642A               	cpfsgt	btemp^0,c
 21655  0198E0  D770               	goto	l17026
 21656                           
 21657                           ;main.c: 555:  cb = cb >> 6;
 21658  0198E2  0E06               	movlw	6
 21659  0198E4  6E35               	movwf	(btemp+11)^0,c
 21660                           
 21661                           ;stkvar	_cb @ sp[(-9)+4]
 21662  0198E6  50E1               	movf	fsr1l,w,c
 21663  0198E8  0FFB               	addlw	-5
 21664  0198EA  6ED9               	movwf	fsr2l,c
 21665  0198EC  50E2               	movf	fsr1h,w,c
 21666  0198EE  6EDA               	movwf	fsr2h,c
 21667  0198F0  0EFF               	movlw	255
 21668  0198F2  22DA               	addwfc	fsr2h,f,c
 21669  0198F4  2835               	incf	(btemp+11)^0,w,c
 21670  0198F6  52DE               	movf	postinc2,f,c
 21671  0198F8  D007               	goto	u16640
 21672  0198FA                     u16645:
 21673  0198FA  52DE               	movf	postinc2,f,c
 21674  0198FC  52DE               	movf	postinc2,f,c
 21675  0198FE  90D8               	bcf	status,0,c
 21676  019900  32DD               	rrcf	postdec2,f,c
 21677  019902  32DD               	rrcf	postdec2,f,c
 21678  019904  32DD               	rrcf	postdec2,f,c
 21679  019906  32DE               	rrcf	postinc2,f,c
 21680  019908                     u16640:
 21681  019908  2EE8               	decfsz	wreg,f,c
 21682  01990A  D7F7               	goto	u16645
 21683                           
 21684                           ;main.c: 556:  cp = cp >> 6;
 21685  01990C  0E06               	movlw	6
 21686  01990E  6E35               	movwf	(btemp+11)^0,c
 21687                           
 21688                           ;stkvar	_cp @ sp[(-9)+0]
 21689  019910  50E1               	movf	fsr1l,w,c
 21690  019912  0FF7               	addlw	-9
 21691  019914  6ED9               	movwf	fsr2l,c
 21692  019916  50E2               	movf	fsr1h,w,c
 21693  019918  6EDA               	movwf	fsr2h,c
 21694  01991A  0EFF               	movlw	255
 21695  01991C  22DA               	addwfc	fsr2h,f,c
 21696  01991E  2835               	incf	(btemp+11)^0,w,c
 21697  019920  52DE               	movf	postinc2,f,c
 21698  019922  D007               	goto	u16650
 21699  019924                     u16655:
 21700  019924  52DE               	movf	postinc2,f,c
 21701  019926  52DE               	movf	postinc2,f,c
 21702  019928  90D8               	bcf	status,0,c
 21703  01992A  32DD               	rrcf	postdec2,f,c
 21704  01992C  32DD               	rrcf	postdec2,f,c
 21705  01992E  32DD               	rrcf	postdec2,f,c
 21706  019930  32DE               	rrcf	postinc2,f,c
 21707  019932                     u16650:
 21708  019932  2EE8               	decfsz	wreg,f,c
 21709  019934  D7F7               	goto	u16655
 21710                           
 21711                           ;main.c: 558:  if (cal_current_zero(0, cb, cp)) {
 21712                           ;stkvar	_cp @ sp[(-9)+0]
 21713  019936  0EF7               	movlw	-9
 21714  019938  006F FF8F FFE6     	movff	plusw1,postinc1
 21715  01993E  006F FF8F FFE6     	movff	plusw1,postinc1
 21716                           
 21717                           ;stkvar	_cb @ sp[(-11)+4]
 21718  019944  0EF9               	movlw	-7
 21719  019946  006F FF8F FFE6     	movff	plusw1,postinc1
 21720  01994C  006F FF8F FFE6     	movff	plusw1,postinc1
 21721  019952  0E00               	movlw	0
 21722  019954  6EE6               	movwf	postinc1,c
 21723  019956  EC4D  F008         	call	_cal_current_zero	;wreg free
 21724  01995A  502A               	movf	btemp^0,w,c
 21725  01995C  B4D8               	btfsc	status,2,c
 21726  01995E  D075               	goto	l17064
 21727                           
 21728                           ;main.c: 559:   cal_current_zero(1, cb, cp);
 21729                           ;stkvar	_cp @ sp[(-9)+0]
 21730  019960  0EF7               	movlw	-9
 21731  019962  006F FF8F FFE6     	movff	plusw1,postinc1
 21732  019968  006F FF8F FFE6     	movff	plusw1,postinc1
 21733                           
 21734                           ;stkvar	_cb @ sp[(-11)+4]
 21735  01996E  0EF9               	movlw	-7
 21736  019970  006F FF8F FFE6     	movff	plusw1,postinc1
 21737  019976  006F FF8F FFE6     	movff	plusw1,postinc1
 21738  01997C  0E01               	movlw	1
 21739  01997E  6EE6               	movwf	postinc1,c
 21740  019980  EC4D  F008         	call	_cal_current_zero	;wreg free
 21741                           
 21742                           ;main.c: 560:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21743  019984  0E03               	movlw	low STR_57
 21744  019986  6EE6               	movwf	postinc1,c
 21745  019988  0EFE               	movlw	high STR_57
 21746  01998A  6EE6               	movwf	postinc1,c
 21747  01998C  0E00               	movlw	0
 21748  01998E  6EE6               	movwf	postinc1,c
 21749  019990  0E00               	movlw	0
 21750  019992  6EE6               	movwf	postinc1,c
 21751  019994  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21752  019998  0060  F0AB  FFE6   	movff	btemp,postinc1
 21753  01999E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21754  0199A4  0E04               	movlw	4
 21755  0199A6  6EE6               	movwf	postinc1,c
 21756  0199A8  ECE5  F0FE         	call	_sprintf	;wreg free
 21757                           
 21758                           ; BSR set to: 0
 21759                           ;main.c: 561:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 21760                           ;stkvar	_cp @ sp[(-9)+0]
 21761  0199AC  0EF7               	movlw	-9
 21762  0199AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21763  0199B4  006F FF8F FFE6     	movff	plusw1,postinc1
 21764  0199BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21765  0199C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21766                           
 21767                           ;stkvar	_cb @ sp[(-13)+4]
 21768  0199C6  0EF7               	movlw	-9
 21769  0199C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21770  0199CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21771  0199D4  006F FF8F FFE6     	movff	plusw1,postinc1
 21772  0199DA  006F FF8F FFE6     	movff	plusw1,postinc1
 21773  0199E0  0E53               	movlw	low STR_65
 21774  0199E2  6EE6               	movwf	postinc1,c
 21775  0199E4  0EFD               	movlw	high STR_65
 21776  0199E6  6EE6               	movwf	postinc1,c
 21777  0199E8  0E00               	movlw	0
 21778  0199EA  6EE6               	movwf	postinc1,c
 21779  0199EC  0E01               	movlw	1
 21780  0199EE  6EE6               	movwf	postinc1,c
 21781  0199F0  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21782  0199F4  0060  F0AB  FFE6   	movff	btemp,postinc1
 21783  0199FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21784  019A00  0E0C               	movlw	12
 21785  019A02  6EE6               	movwf	postinc1,c
 21786  019A04  ECE5  F0FE         	call	_sprintf	;wreg free
 21787                           
 21788                           ; BSR set to: 0
 21789                           ;main.c: 562:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 21790  019A08  0EED               	movlw	low STR_66
 21791  019A0A  6EE6               	movwf	postinc1,c
 21792  019A0C  0EFD               	movlw	high STR_66
 21793  019A0E  6EE6               	movwf	postinc1,c
 21794  019A10  0E00               	movlw	0
 21795  019A12  6EE6               	movwf	postinc1,c
 21796  019A14  0E02               	movlw	2
 21797  019A16  6EE6               	movwf	postinc1,c
 21798  019A18  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21799  019A1C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21800  019A22  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21801  019A28  0E04               	movlw	4
 21802  019A2A  6EE6               	movwf	postinc1,c
 21803  019A2C  ECE5  F0FE         	call	_sprintf	;wreg free
 21804                           
 21805                           ; BSR set to: 0
 21806                           ;main.c: 563:   update_lcd(0);
 21807  019A30  0E00               	movlw	0
 21808  019A32  6EE6               	movwf	postinc1,c
 21809  019A34  EC97  F0F7         	call	_update_lcd	;wreg free
 21810                           
 21811                           ;main.c: 564:   WaitMs(2000);
 21812  019A38  0ED0               	movlw	208
 21813  019A3A  6EE6               	movwf	postinc1,c
 21814  019A3C  0E07               	movlw	7
 21815  019A3E  6EE6               	movwf	postinc1,c
 21816  019A40  EC2E  F012         	call	_WaitMs	;wreg free
 21817                           
 21818                           ;main.c: 565:   write_cal_data();
 21819  019A44  ECF4  F0F8         	call	_write_cal_data	;wreg free
 21820                           
 21821                           ;main.c: 566:  } else {
 21822  019A48  D05A               	goto	l1524
 21823  019A4A                     l17064:
 21824                           
 21825                           ;main.c: 567:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21826  019A4A  0E03               	movlw	low STR_57
 21827  019A4C  6EE6               	movwf	postinc1,c
 21828  019A4E  0EFE               	movlw	high STR_57
 21829  019A50  6EE6               	movwf	postinc1,c
 21830  019A52  0E00               	movlw	0
 21831  019A54  6EE6               	movwf	postinc1,c
 21832  019A56  0E00               	movlw	0
 21833  019A58  6EE6               	movwf	postinc1,c
 21834  019A5A  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21835  019A5E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21836  019A64  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21837  019A6A  0E04               	movlw	4
 21838  019A6C  6EE6               	movwf	postinc1,c
 21839  019A6E  ECE5  F0FE         	call	_sprintf	;wreg free
 21840                           
 21841                           ;main.c: 568:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21842  019A72  0E01               	movlw	1
 21843  019A74  6EE6               	movwf	postinc1,c
 21844  019A76  ECF6  F011         	call	_get_raw_result	;wreg free
 21845  019A7A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21846  019A80  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21847  019A86  0E00               	movlw	0
 21848  019A88  6EE6               	movwf	postinc1,c
 21849  019A8A  ECF6  F011         	call	_get_raw_result	;wreg free
 21850  019A8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21851  019A94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21852  019A9A  0E53               	movlw	low STR_65
 21853  019A9C  6EE6               	movwf	postinc1,c
 21854  019A9E  0EFD               	movlw	high STR_65
 21855  019AA0  6EE6               	movwf	postinc1,c
 21856  019AA2  0E00               	movlw	0
 21857  019AA4  6EE6               	movwf	postinc1,c
 21858  019AA6  0E01               	movlw	1
 21859  019AA8  6EE6               	movwf	postinc1,c
 21860  019AAA  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21861  019AAE  0060  F0AB  FFE6   	movff	btemp,postinc1
 21862  019AB4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21863  019ABA  0E08               	movlw	8
 21864  019ABC  6EE6               	movwf	postinc1,c
 21865  019ABE  ECE5  F0FE         	call	_sprintf	;wreg free
 21866                           
 21867                           ;main.c: 569:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 21868  019AC2  0E71               	movlw	low STR_69
 21869  019AC4  6EE6               	movwf	postinc1,c
 21870  019AC6  0EFE               	movlw	high STR_69
 21871  019AC8  6EE6               	movwf	postinc1,c
 21872  019ACA  0E00               	movlw	0
 21873  019ACC  6EE6               	movwf	postinc1,c
 21874  019ACE  0E02               	movlw	2
 21875  019AD0  6EE6               	movwf	postinc1,c
 21876  019AD2  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 21877  019AD6  0060  F0AB  FFE6   	movff	btemp,postinc1
 21878  019ADC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21879  019AE2  0E04               	movlw	4
 21880  019AE4  6EE6               	movwf	postinc1,c
 21881  019AE6  ECE5  F0FE         	call	_sprintf	;wreg free
 21882                           
 21883                           ;main.c: 570:   update_lcd(0);
 21884  019AEA  0E00               	movlw	0
 21885  019AEC  6EE6               	movwf	postinc1,c
 21886  019AEE  EC97  F0F7         	call	_update_lcd	;wreg free
 21887                           
 21888                           ;main.c: 571:   WaitMs(2000);
 21889  019AF2  0ED0               	movlw	208
 21890  019AF4  6EE6               	movwf	postinc1,c
 21891  019AF6  0E07               	movlw	7
 21892  019AF8  6EE6               	movwf	postinc1,c
 21893  019AFA  EC2E  F012         	call	_WaitMs	;wreg free
 21894  019AFE                     l1524:
 21895                           
 21896                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 21897  019AFE  0EF7               	movlw	247
 21898  019B00  26E1               	addwf	fsr1l,f,c
 21899  019B02  0EFF               	movlw	255
 21900  019B04  22E2               	addwfc	fsr1h,f,c
 21901  019B06  0012               	return		;funcret
 21902  019B08                     __end_of_current_sensor_cal:
 21903                           	opt callstack 0
 21904                           
 21905 ;; *************** function _write_cal_data *****************
 21906 ;; Defined at:
 21907 ;;		line 418 in file "daq.c"
 21908 ;; Parameters:    Size  Location     Type
 21909 ;;		None
 21910 ;; Auto vars:     Size  Location     Type
 21911 ;;  x               2  [STACK] unsigned short 
 21912 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21913 ;;		 -> R(155), 
 21914 ;;  y               2  [STACK] unsigned short 
 21915 ;;  crcVal          1  [STACK] unsigned char 
 21916 ;; Return value:  Size  Location     Type
 21917 ;;                  1  [STACK] void 
 21918 ;; Registers used:
 21919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21920 ;; Tracked objects:
 21921 ;;		On entry : 0/39
 21922 ;;		On exit  : 0/0
 21923 ;;		Unchanged: 0/0
 21924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21929 ;;Total ram usage:        0 bytes
 21930 ;; Hardware stack levels used:    1
 21931 ;; Hardware stack levels required when called:   17
 21932 ;; This function calls:
 21933 ;;		_CRC_8BitDataWrite
 21934 ;;		_CRC_CalculatedResultGet
 21935 ;;		_CRC_Initialize
 21936 ;;		_CRC_IsBusy
 21937 ;;		_CRC_Start
 21938 ;;		_DATAEE_WriteByte
 21939 ;; This function is called by:
 21940 ;;		_main
 21941 ;;		_current_sensor_cal
 21942 ;; This function uses a reentrant model
 21943 ;;
 21944                           
 21945                           	psect	text59
 21946  01F1E8                     __ptext59:
 21947                           	opt callstack 0
 21948  01F1E8                     _write_cal_data:
 21949                           	opt callstack 0
 21950                           
 21951                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21952  01F1E8  0E07               	movlw	7
 21953  01F1EA  26E1               	addwf	fsr1l,f,c
 21954  01F1EC  0E00               	movlw	0
 21955  01F1EE  22E2               	addwfc	fsr1h,f,c
 21956                           
 21957                           ;daq.c: 420:  uint16_t x = 0, y;
 21958                           ;stkvar	_x @ sp[(-7)+0]
 21959                           
 21960                           ;incstack = 0
 21961  01F1F0  0EF9               	movlw	-7
 21962  01F1F2  6AE3               	clrf	plusw1,c
 21963  01F1F4  0EFA               	movlw	-6
 21964  01F1F6  6AE3               	clrf	plusw1,c
 21965                           
 21966                           ;daq.c: 421:  uint8_t *r_cal_ptr, crcVal;;daq.c: 423:  y = sizeof(R);
 21967  01F1F8  0E9B               	movlw	155
 21968  01F1FA  6E34               	movwf	(btemp+10)^0,c
 21969  01F1FC  0E00               	movlw	0
 21970  01F1FE  6E35               	movwf	(btemp+11)^0,c
 21971                           
 21972                           ;stkvar	_y @ sp[(-7)+4]
 21973  01F200  0EFD               	movlw	-3
 21974  01F202  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21975  01F208  0EFE               	movlw	-2
 21976  01F20A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21977                           
 21978                           ;daq.c: 424:  R.crc = 0x42;
 21979  01F210  0E42               	movlw	66
 21980  01F212  0101               	movlb	1	; () banked
 21981  01F214  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 21982                           
 21983                           ; BSR set to: 1
 21984                           ;daq.c: 425:  r_cal_ptr = (uint8_t*) & R;
 21985                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21986  01F216  0E01               	movlw	high _R
 21987  01F218  6E2A               	movwf	btemp^0,c
 21988  01F21A  0EFC               	movlw	-4
 21989  01F21C  0060  F0AB  FFE3   	movff	btemp,plusw1
 21990  01F222  0E00               	movlw	low _R
 21991  01F224  6E2A               	movwf	btemp^0,c
 21992  01F226  0EFB               	movlw	-5
 21993  01F228  0060  F0AB  FFE3   	movff	btemp,plusw1
 21994                           
 21995                           ; BSR set to: 1
 21996                           ;daq.c: 426:  R.checkmark = 0x1957;
 21997  01F22E  0E19               	movlw	25
 21998  01F230  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 21999  01F232  0E57               	movlw	87
 22000  01F234  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 22001                           
 22002                           ; BSR set to: 1
 22003                           ;daq.c: 428:  CRC_Initialize();
 22004  01F236  EC71  F009         	call	_CRC_Initialize	;wreg free
 22005                           
 22006                           ; BSR set to: 0
 22007                           ;daq.c: 431:  CRC_Start();
 22008  01F23A  ECB2  F016         	call	_CRC_Start	;wreg free
 22009  01F23E                     l13550:
 22010                           
 22011                           ;daq.c: 434:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 22012                           ;stkvar	_x @ sp[(-7)+0]
 22013  01F23E  0EF9               	movlw	-7
 22014  01F240  006F FF8C  F034    	movff	plusw1,btemp+10
 22015  01F246  0EFA               	movlw	-6
 22016  01F248  006F FF8C  F035    	movff	plusw1,btemp+11
 22017                           
 22018                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 22019  01F24E  0EFB               	movlw	-5
 22020  01F250  006F FF8C  F032    	movff	plusw1,btemp+8
 22021  01F256  0EFC               	movlw	-4
 22022  01F258  006F FF8C  F033    	movff	plusw1,btemp+9
 22023  01F25E  5034               	movf	(btemp+10)^0,w,c
 22024  01F260  2432               	addwf	(btemp+8)^0,w,c
 22025  01F262  6ED9               	movwf	fsr2l,c
 22026  01F264  5035               	movf	(btemp+11)^0,w,c
 22027  01F266  2033               	addwfc	(btemp+9)^0,w,c
 22028  01F268  6EDA               	movwf	fsr2h,c
 22029  01F26A  50DF               	movf	indf2,w,c
 22030  01F26C  6EE6               	movwf	postinc1,c
 22031                           
 22032                           ;stkvar	_x @ sp[(-8)+0]
 22033  01F26E  0EF8               	movlw	-8
 22034  01F270  006F FF8F FFE6     	movff	plusw1,postinc1
 22035  01F276  006F FF8F FFE6     	movff	plusw1,postinc1
 22036  01F27C  EC93  F00C         	call	_DATAEE_WriteByte	;wreg free
 22037                           
 22038                           ;daq.c: 435:   CRC_8BitDataWrite(r_cal_ptr[x]);
 22039                           ;stkvar	_x @ sp[(-7)+0]
 22040  01F280  0EF9               	movlw	-7
 22041  01F282  006F FF8C  F034    	movff	plusw1,btemp+10
 22042  01F288  0EFA               	movlw	-6
 22043  01F28A  006F FF8C  F035    	movff	plusw1,btemp+11
 22044                           
 22045                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 22046  01F290  0EFB               	movlw	-5
 22047  01F292  006F FF8C  F032    	movff	plusw1,btemp+8
 22048  01F298  0EFC               	movlw	-4
 22049  01F29A  006F FF8C  F033    	movff	plusw1,btemp+9
 22050  01F2A0  5034               	movf	(btemp+10)^0,w,c
 22051  01F2A2  2432               	addwf	(btemp+8)^0,w,c
 22052  01F2A4  6ED9               	movwf	fsr2l,c
 22053  01F2A6  5035               	movf	(btemp+11)^0,w,c
 22054  01F2A8  2033               	addwfc	(btemp+9)^0,w,c
 22055  01F2AA  6EDA               	movwf	fsr2h,c
 22056  01F2AC  50DF               	movf	indf2,w,c
 22057  01F2AE  6EE6               	movwf	postinc1,c
 22058  01F2B0  EC19  F016         	call	_CRC_8BitDataWrite	;wreg free
 22059  01F2B4                     l13554:
 22060  01F2B4  EC3B  F016         	call	_CRC_IsBusy	;wreg free
 22061  01F2B8  502A               	movf	btemp^0,w,c
 22062  01F2BA  A4D8               	btfss	status,2,c
 22063  01F2BC  D7FB               	goto	l13554
 22064                           
 22065                           ;daq.c: 437:  } while (++x < y);
 22066                           ;stkvar	_y @ sp[(-7)+4]
 22067  01F2BE  0EFD               	movlw	-3
 22068  01F2C0  006F FF8C  F034    	movff	plusw1,btemp+10
 22069  01F2C6  0EFE               	movlw	-2
 22070  01F2C8  006F FF8C  F035    	movff	plusw1,btemp+11
 22071                           
 22072                           ;stkvar	_x @ sp[(-7)+0]
 22073  01F2CE  0EF9               	movlw	-7
 22074  01F2D0  50E3               	movf	plusw1,w,c
 22075  01F2D2  0F01               	addlw	1
 22076  01F2D4  6E2A               	movwf	btemp^0,c
 22077  01F2D6  0EF9               	movlw	-7
 22078  01F2D8  0060  F0AB  FFE3   	movff	btemp,plusw1
 22079  01F2DE  6A2A               	clrf	btemp^0,c
 22080  01F2E0  0EFA               	movlw	-6
 22081  01F2E2  50E3               	movf	plusw1,w,c
 22082  01F2E4  202A               	addwfc	btemp^0,w,c
 22083  01F2E6  6E2A               	movwf	btemp^0,c
 22084  01F2E8  0EFA               	movlw	-6
 22085  01F2EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 22086  01F2F0  0EF9               	movlw	-7
 22087  01F2F2  006F FF8C  F032    	movff	plusw1,btemp+8
 22088  01F2F8  0EFA               	movlw	-6
 22089  01F2FA  006F FF8C  F033    	movff	plusw1,btemp+9
 22090  01F300  5034               	movf	(btemp+10)^0,w,c
 22091  01F302  5C32               	subwf	(btemp+8)^0,w,c
 22092  01F304  5035               	movf	(btemp+11)^0,w,c
 22093  01F306  5833               	subwfb	(btemp+9)^0,w,c
 22094  01F308  A0D8               	btfss	status,0,c
 22095  01F30A  D799               	goto	l13550
 22096                           
 22097                           ;daq.c: 439:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 22098  01F30C  0E00               	movlw	0
 22099  01F30E  6EE6               	movwf	postinc1,c
 22100  01F310  0E00               	movlw	0
 22101  01F312  6EE6               	movwf	postinc1,c
 22102  01F314  0E00               	movlw	0
 22103  01F316  6EE6               	movwf	postinc1,c
 22104  01F318  EC10  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
 22105                           
 22106                           ;stkvar	_crcVal @ sp[(-7)+6]
 22107  01F31C  0EFF               	movlw	-1
 22108  01F31E  0060  F0AB  FFE3   	movff	btemp,plusw1
 22109                           
 22110                           ;daq.c: 441:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 22111                           ;stkvar	_crcVal @ sp[(-7)+6]
 22112  01F324  0EFF               	movlw	-1
 22113  01F326  50E3               	movf	plusw1,w,c
 22114  01F328  6EE6               	movwf	postinc1,c
 22115  01F32A  0E9A               	movlw	154
 22116  01F32C  6EE6               	movwf	postinc1,c
 22117  01F32E  0E00               	movlw	0
 22118  01F330  6EE6               	movwf	postinc1,c
 22119  01F332  EC93  F00C         	call	_DATAEE_WriteByte	;wreg free
 22120                           
 22121                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22122  01F336  0EF9               	movlw	249
 22123  01F338  26E1               	addwf	fsr1l,f,c
 22124  01F33A  0EFF               	movlw	255
 22125  01F33C  22E2               	addwfc	fsr1h,f,c
 22126  01F33E  0012               	return		;funcret
 22127  01F340                     __end_of_write_cal_data:
 22128                           	opt callstack 0
 22129                           
 22130 ;; *************** function _DATAEE_WriteByte *****************
 22131 ;; Defined at:
 22132 ;;		line 172 in file "mcc_generated_files/memory.c"
 22133 ;; Parameters:    Size  Location     Type
 22134 ;;  bAdd            2  [STACK] unsigned short 
 22135 ;;  bData           1  [STACK] unsigned char 
 22136 ;; Auto vars:     Size  Location     Type
 22137 ;;  GIEBitValue     1  [STACK] unsigned char 
 22138 ;; Return value:  Size  Location     Type
 22139 ;;                  1  [STACK] void 
 22140 ;; Registers used:
 22141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22142 ;; Tracked objects:
 22143 ;;		On entry : 0/39
 22144 ;;		On exit  : 0/0
 22145 ;;		Unchanged: 0/0
 22146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22151 ;;Total ram usage:        0 bytes
 22152 ;; Hardware stack levels used:    1
 22153 ;; Hardware stack levels required when called:   15
 22154 ;; This function calls:
 22155 ;;		Nothing
 22156 ;; This function is called by:
 22157 ;;		_write_cal_data
 22158 ;; This function uses a reentrant model
 22159 ;;
 22160                           
 22161                           	psect	text60
 22162  001926                     __ptext60:
 22163                           	opt callstack 0
 22164  001926                     _DATAEE_WriteByte:
 22165                           	opt callstack 0
 22166                           
 22167                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22168  001926  52E6               	movf	postinc1,f,c
 22169                           
 22170                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 22171                           
 22172                           ;incstack = 0
 22173  001928  AED2               	btfss	210,7,c	;volatile
 22174  00192A  D003               	goto	u12080
 22175  00192C  6A35               	clrf	(btemp+11)^0,c
 22176  00192E  2A35               	incf	(btemp+11)^0,f,c
 22177  001930  D001               	goto	u12088
 22178  001932                     u12080:
 22179  001932  6A35               	clrf	(btemp+11)^0,c
 22180  001934                     u12088:
 22181                           
 22182                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22183  001934  0EFF               	movlw	-1
 22184  001936  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22185                           
 22186                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 22187                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22188  00193C  0EFE               	movlw	254
 22189  00193E  24E1               	addwf	fsr1l,w,c
 22190  001940  6ED9               	movwf	fsr2l,c
 22191  001942  0EFF               	movlw	255
 22192  001944  20E2               	addwfc	fsr1h,w,c
 22193  001946  6EDA               	movwf	fsr2h,c
 22194  001948  50DF               	movf	indf2,w,c
 22195  00194A  0B03               	andlw	3
 22196  00194C  0139               	movlb	57	; () banked
 22197  00194E  6FE1               	movwf	225,b	;volatile
 22198                           
 22199                           ; BSR set to: 57
 22200                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 22201                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22202  001950  0EFD               	movlw	-3
 22203  001952  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 22204                           
 22205                           ; BSR set to: 57
 22206                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 22207                           ;stkvar	_bData @ sp[(-1)+-3]
 22208  001958  0EFC               	movlw	-4
 22209  00195A  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 22210                           
 22211                           ; BSR set to: 57
 22212                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 22213  001960  0E3F               	movlw	-193
 22214  001962  17E5               	andwf	229,f,b	;volsfr
 22215                           
 22216                           ; BSR set to: 57
 22217                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 22218  001964  85E5               	bsf	229,2,b	;volsfr
 22219                           
 22220                           ; BSR set to: 57
 22221                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 22222  001966  9ED2               	bcf	210,7,c	;volatile
 22223                           
 22224                           ; BSR set to: 57
 22225                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 22226  001968  0E55               	movlw	85
 22227  00196A  6FE6               	movwf	230,b	;volsfr
 22228                           
 22229                           ; BSR set to: 57
 22230                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 22231  00196C  0EAA               	movlw	170
 22232  00196E  6FE6               	movwf	230,b	;volsfr
 22233                           
 22234                           ; BSR set to: 57
 22235                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 22236  001970  83E5               	bsf	229,1,b	;volsfr
 22237  001972                     l942:
 22238                           
 22239                           ; BSR set to: 57
 22240                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 22241  001972  B3E5               	btfsc	229,1,b	;volsfr
 22242  001974  D7FE               	goto	l942
 22243                           
 22244                           ; BSR set to: 57
 22245                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 22246  001976  95E5               	bcf	229,2,b	;volsfr
 22247                           
 22248                           ; BSR set to: 57
 22249                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 22250                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22251  001978  0EFF               	movlw	-1
 22252  00197A  B0E3               	btfsc	plusw1,0,c
 22253  00197C  D002               	bra	u12105
 22254  00197E  9ED2               	bcf	210,7,c	;volatile
 22255  001980  D001               	bra	u12106
 22256  001982                     u12105:
 22257  001982  8ED2               	bsf	210,7,c	;volatile
 22258  001984                     u12106:
 22259                           
 22260                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22261  001984  52E5               	movf	postdec1,f,c
 22262  001986  52E5               	movf	postdec1,f,c
 22263  001988  52E5               	movf	postdec1,f,c
 22264  00198A  52E5               	movf	postdec1,f,c
 22265  00198C  0012               	return		;funcret
 22266  00198E                     __end_of_DATAEE_WriteByte:
 22267                           	opt callstack 0
 22268                           
 22269 ;; *************** function _CRC_Start *****************
 22270 ;; Defined at:
 22271 ;;		line 119 in file "mcc_generated_files/crc.c"
 22272 ;; Parameters:    Size  Location     Type
 22273 ;;		None
 22274 ;; Auto vars:     Size  Location     Type
 22275 ;;		None
 22276 ;; Return value:  Size  Location     Type
 22277 ;;                  1  [STACK] void 
 22278 ;; Registers used:
 22279 ;;		None
 22280 ;; Tracked objects:
 22281 ;;		On entry : 3F/0
 22282 ;;		On exit  : 3F/39
 22283 ;;		Unchanged: 0/0
 22284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22289 ;;Total ram usage:        0 bytes
 22290 ;; Hardware stack levels used:    1
 22291 ;; Hardware stack levels required when called:   15
 22292 ;; This function calls:
 22293 ;;		Nothing
 22294 ;; This function is called by:
 22295 ;;		_read_cal_data
 22296 ;;		_write_cal_data
 22297 ;; This function uses a reentrant model
 22298 ;;
 22299                           
 22300                           	psect	text61
 22301  002D64                     __ptext61:
 22302                           	opt callstack 0
 22303  002D64                     _CRC_Start:
 22304                           	opt callstack 14
 22305                           
 22306                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 22307                           
 22308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22309                           ;incstack = 0
 22310  002D64  0139               	movlb	57	; () banked
 22311  002D66  8D68               	bsf	104,6,b	;volatile
 22312                           
 22313                           ; BSR set to: 57
 22314                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 22315  002D68  0012               	return		;funcret
 22316  002D6A                     __end_of_CRC_Start:
 22317                           	opt callstack 0
 22318                           
 22319 ;; *************** function _CRC_IsBusy *****************
 22320 ;; Defined at:
 22321 ;;		line 201 in file "mcc_generated_files/crc.c"
 22322 ;; Parameters:    Size  Location     Type
 22323 ;;		None
 22324 ;; Auto vars:     Size  Location     Type
 22325 ;;		None
 22326 ;; Return value:  Size  Location     Type
 22327 ;;                  1  [STACK] _Bool 
 22328 ;; Registers used:
 22329 ;;		btemp
 22330 ;; Tracked objects:
 22331 ;;		On entry : 0/39
 22332 ;;		On exit  : 0/0
 22333 ;;		Unchanged: 0/0
 22334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22339 ;;Total ram usage:        0 bytes
 22340 ;; Hardware stack levels used:    1
 22341 ;; Hardware stack levels required when called:   15
 22342 ;; This function calls:
 22343 ;;		Nothing
 22344 ;; This function is called by:
 22345 ;;		_read_cal_data
 22346 ;;		_write_cal_data
 22347 ;; This function uses a reentrant model
 22348 ;;
 22349                           
 22350                           	psect	text62
 22351  002C76                     __ptext62:
 22352                           	opt callstack 0
 22353  002C76                     _CRC_IsBusy:
 22354                           	opt callstack 14
 22355                           
 22356                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 22357                           
 22358                           ; BSR set to: 57
 22359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22360                           ;incstack = 0
 22361  002C76  0139               	movlb	57	; () banked
 22362  002C78  AB68               	btfss	104,5,b	;volatile
 22363  002C7A  D003               	goto	u12310
 22364  002C7C  6A2A               	clrf	btemp^0,c
 22365  002C7E  2A2A               	incf	btemp^0,f,c
 22366  002C80  0012               	return	
 22367  002C82                     u12310:
 22368  002C82  6A2A               	clrf	btemp^0,c
 22369                           
 22370                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 22371  002C84  0012               	return		;funcret
 22372  002C86                     __end_of_CRC_IsBusy:
 22373                           	opt callstack 0
 22374                           
 22375 ;; *************** function _CRC_CalculatedResultGet *****************
 22376 ;; Defined at:
 22377 ;;		line 159 in file "mcc_generated_files/crc.c"
 22378 ;; Parameters:    Size  Location     Type
 22379 ;;  reverse         1  [STACK] _Bool 
 22380 ;;  xorValue        2  [STACK] unsigned short 
 22381 ;; Auto vars:     Size  Location     Type
 22382 ;;  result          2  [STACK] unsigned short 
 22383 ;;  mask            2  [STACK] unsigned short 
 22384 ;; Return value:  Size  Location     Type
 22385 ;;                  2  [STACK] unsigned short 
 22386 ;; Registers used:
 22387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 22388 ;; Tracked objects:
 22389 ;;		On entry : 0/39
 22390 ;;		On exit  : 0/0
 22391 ;;		Unchanged: 0/0
 22392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22397 ;;Total ram usage:        0 bytes
 22398 ;; Hardware stack levels used:    1
 22399 ;; Hardware stack levels required when called:   16
 22400 ;; This function calls:
 22401 ;;		_CRC_ReverseValue
 22402 ;; This function is called by:
 22403 ;;		_read_cal_data
 22404 ;;		_write_cal_data
 22405 ;; This function uses a reentrant model
 22406 ;;
 22407                           
 22408                           	psect	text63
 22409  01E820                     __ptext63:
 22410                           	opt callstack 0
 22411  01E820                     _CRC_CalculatedResultGet:
 22412                           	opt callstack 0
 22413                           
 22414                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22415  01E820  52E6               	movf	postinc1,f,c
 22416  01E822  52E6               	movf	postinc1,f,c
 22417  01E824  52E6               	movf	postinc1,f,c
 22418  01E826  52E6               	movf	postinc1,f,c
 22419                           
 22420                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 22421                           
 22422                           ;incstack = 0
 22423  01E828  0139               	movlb	57	; () banked
 22424  01E82A  9D68               	bcf	104,6,b	;volatile
 22425                           
 22426                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 22427  01E82C  9DA0               	bcf	160,6,b	;volatile
 22428                           
 22429                           ; BSR set to: 57
 22430                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 22431  01E82E  5169               	movf	105,w,b	;volatile
 22432  01E830  0B0F               	andlw	15
 22433  01E832  6E35               	movwf	(btemp+11)^0,c
 22434  01E834  3A35               	swapf	(btemp+11)^0,f,c
 22435  01E836  5169               	movf	105,w,b	;volatile
 22436  01E838  1835               	xorwf	(btemp+11)^0,w,c
 22437  01E83A  0B0F               	andlw	-241
 22438  01E83C  1835               	xorwf	(btemp+11)^0,w,c
 22439  01E83E  6F69               	movwf	105,b	;volatile
 22440                           
 22441                           ; BSR set to: 57
 22442                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 22443  01E840  0E08               	movlw	8
 22444  01E842  0100               	movlb	0	; () banked
 22445  01E844  65E5               	cpfsgt	(_crcObj+1)& (0+255),b
 22446  01E846  D003               	goto	l1282
 22447                           
 22448                           ; BSR set to: 0
 22449                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 22450  01E848  0139               	movlb	57	; () banked
 22451  01E84A  6B61               	clrf	97,b	;volatile
 22452  01E84C  D001               	goto	L19
 22453  01E84E                     l1282:
 22454                           
 22455                           ; BSR set to: 0
 22456                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 22457  01E84E  0139               	movlb	57	; () banked
 22458  01E850                     L19:
 22459  01E850  6B60               	clrf	96,b	;volatile
 22460                           
 22461                           ; BSR set to: 57
 22462                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 22463                           
 22464                           ;mcc_generated_files/crc.c: 176:      }
 22465  01E852  8D68               	bsf	104,6,b	;volatile
 22466  01E854                     l1284:
 22467                           
 22468                           ; BSR set to: 57
 22469  01E854  ADA0               	btfss	160,6,b	;volatile
 22470  01E856  D7FE               	goto	l1284
 22471                           
 22472                           ; BSR set to: 57
 22473                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 22474  01E858  9DA0               	bcf	160,6,b	;volatile
 22475                           
 22476                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 22477  01E85A  9D68               	bcf	104,6,b	;volatile
 22478                           
 22479                           ; BSR set to: 57
 22480                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 22481  01E85C  0060  F390  F035   	movff	_crcObj,btemp+11
 22482  01E862  0EFF               	movlw	255
 22483  01E864  2635               	addwf	(btemp+11)^0,f,c
 22484  01E866  3A35               	swapf	(btemp+11)^0,f,c
 22485  01E868  5169               	movf	105,w,b	;volatile
 22486  01E86A  1835               	xorwf	(btemp+11)^0,w,c
 22487  01E86C  0B0F               	andlw	-241
 22488  01E86E  1835               	xorwf	(btemp+11)^0,w,c
 22489  01E870  6F69               	movwf	105,b	;volatile
 22490                           
 22491                           ; BSR set to: 57
 22492                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 22493  01E872  5162               	movf	98,w,b	;volatile
 22494  01E874  006E F58C  F02A    	movff	14691,btemp	;volatile
 22495  01E87A  6A2B               	clrf	(btemp+1)^0,c
 22496  01E87C  0060  F0A8  F02B   	movff	btemp,btemp+1
 22497  01E882  6A2A               	clrf	btemp^0,c
 22498  01E884  122A               	iorwf	btemp^0,f,c
 22499  01E886  0E00               	movlw	0
 22500  01E888  122B               	iorwf	(btemp+1)^0,f,c
 22501                           
 22502                           ;stkvar	_result @ sp[(-4)+0]
 22503  01E88A  0EFC               	movlw	-4
 22504  01E88C  0060  F0AB  FFE3   	movff	btemp,plusw1
 22505  01E892  0EFD               	movlw	-3
 22506  01E894  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22507                           
 22508                           ; BSR set to: 57
 22509                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 22510  01E89A  0E10               	movlw	16
 22511  01E89C  0100               	movlb	0	; () banked
 22512  01E89E  61E5               	cpfslt	(_crcObj+1)& (0+255),b
 22513  01E8A0  D03A               	goto	l12822
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 22517  01E8A2  0EFF               	movlw	255
 22518  01E8A4  6E34               	movwf	(btemp+10)^0,c
 22519  01E8A6  0EFF               	movlw	255
 22520  01E8A8  6E35               	movwf	(btemp+11)^0,c
 22521  01E8AA  0060  F394  F033   	movff	_crcObj+1,btemp+9
 22522  01E8B0  0E01               	movlw	1
 22523  01E8B2  6E30               	movwf	(btemp+6)^0,c
 22524  01E8B4  0E00               	movlw	0
 22525  01E8B6  6E31               	movwf	(btemp+7)^0,c
 22526  01E8B8  2A33               	incf	(btemp+9)^0,f,c
 22527  01E8BA  D003               	goto	u12294
 22528  01E8BC                     u12295:
 22529  01E8BC  90D8               	bcf	status,0,c
 22530  01E8BE  3630               	rlcf	(btemp+6)^0,f,c
 22531  01E8C0  3631               	rlcf	(btemp+7)^0,f,c
 22532  01E8C2                     u12294:
 22533  01E8C2  2E33               	decfsz	(btemp+9)^0,f,c
 22534  01E8C4  D7FB               	goto	u12295
 22535  01E8C6  5034               	movf	(btemp+10)^0,w,c
 22536  01E8C8  2630               	addwf	(btemp+6)^0,f,c
 22537  01E8CA  5035               	movf	(btemp+11)^0,w,c
 22538  01E8CC  2231               	addwfc	(btemp+7)^0,f,c
 22539                           
 22540                           ;stkvar	_mask @ sp[(-4)+2]
 22541  01E8CE  0EFE               	movlw	-2
 22542  01E8D0  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 22543  01E8D6  0EFF               	movlw	-1
 22544  01E8D8  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 22545                           
 22546                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 22547                           ;stkvar	_mask @ sp[(-4)+2]
 22548  01E8DE  0EFE               	movlw	-2
 22549  01E8E0  006F FF8C  F034    	movff	plusw1,btemp+10
 22550  01E8E6  0EFF               	movlw	-1
 22551  01E8E8  006F FF8C  F035    	movff	plusw1,btemp+11
 22552                           
 22553                           ;stkvar	_result @ sp[(-4)+0]
 22554  01E8EE  0EFC               	movlw	-4
 22555  01E8F0  006F FF8C  F02A    	movff	plusw1,btemp
 22556  01E8F6  5034               	movf	(btemp+10)^0,w,c
 22557  01E8F8  162A               	andwf	btemp^0,f,c
 22558  01E8FA  0EFC               	movlw	-4
 22559  01E8FC  0060  F0AB  FFE3   	movff	btemp,plusw1
 22560  01E902  0EFD               	movlw	-3
 22561  01E904  006F FF8C  F02A    	movff	plusw1,btemp
 22562  01E90A  5035               	movf	(btemp+11)^0,w,c
 22563  01E90C  162A               	andwf	btemp^0,f,c
 22564  01E90E  0EFD               	movlw	-3
 22565  01E910  0060  F0AB  FFE3   	movff	btemp,plusw1
 22566  01E916                     l12822:
 22567                           
 22568                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 22569                           ;stkvar	_reverse @ sp[(-4)+-1]
 22570  01E916  0EFB               	movlw	-5
 22571  01E918  50E3               	movf	plusw1,w,c
 22572  01E91A  B4D8               	btfsc	status,2,c
 22573  01E91C  D011               	goto	l12826
 22574                           
 22575                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 22576                           ;stkvar	_result @ sp[(-4)+0]
 22577  01E91E  0EFC               	movlw	-4
 22578  01E920  006F FF8F FFE6     	movff	plusw1,postinc1
 22579  01E926  006F FF8F FFE6     	movff	plusw1,postinc1
 22580  01E92C  EC81  F003         	call	_CRC_ReverseValue	;wreg free
 22581                           
 22582                           ;stkvar	_result @ sp[(-4)+0]
 22583  01E930  0EFC               	movlw	-4
 22584  01E932  0060  F0AB  FFE3   	movff	btemp,plusw1
 22585  01E938  0EFD               	movlw	-3
 22586  01E93A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22587  01E940                     l12826:
 22588                           
 22589                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 22590                           ;stkvar	_xorValue @ sp[(-4)+-3]
 22591  01E940  0EF9               	movlw	-7
 22592  01E942  006F FF8C  F034    	movff	plusw1,btemp+10
 22593  01E948  0EFA               	movlw	-6
 22594  01E94A  006F FF8C  F035    	movff	plusw1,btemp+11
 22595                           
 22596                           ;stkvar	_result @ sp[(-4)+0]
 22597  01E950  0EFC               	movlw	-4
 22598  01E952  006F FF8C  F02A    	movff	plusw1,btemp
 22599  01E958  5034               	movf	(btemp+10)^0,w,c
 22600  01E95A  1A2A               	xorwf	btemp^0,f,c
 22601  01E95C  0EFC               	movlw	-4
 22602  01E95E  0060  F0AB  FFE3   	movff	btemp,plusw1
 22603  01E964  0EFD               	movlw	-3
 22604  01E966  006F FF8C  F02A    	movff	plusw1,btemp
 22605  01E96C  5035               	movf	(btemp+11)^0,w,c
 22606  01E96E  1A2A               	xorwf	btemp^0,f,c
 22607  01E970  0EFD               	movlw	-3
 22608  01E972  0060  F0AB  FFE3   	movff	btemp,plusw1
 22609                           
 22610                           ;mcc_generated_files/crc.c: 198:     return result;
 22611                           ;stkvar	_result @ sp[(-4)+0]
 22612  01E978  0EFC               	movlw	-4
 22613  01E97A  006F FF8C  F02A    	movff	plusw1,btemp
 22614  01E980  0EFD               	movlw	-3
 22615  01E982  006F FF8C  F02B    	movff	plusw1,btemp+1
 22616                           
 22617                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 22618  01E988  0EF9               	movlw	249
 22619  01E98A  26E1               	addwf	fsr1l,f,c
 22620  01E98C  0EFF               	movlw	255
 22621  01E98E  22E2               	addwfc	fsr1h,f,c
 22622  01E990  0012               	return		;funcret
 22623  01E992                     __end_of_CRC_CalculatedResultGet:
 22624                           	opt callstack 0
 22625                           
 22626 ;; *************** function _CRC_ReverseValue *****************
 22627 ;; Defined at:
 22628 ;;		line 138 in file "mcc_generated_files/crc.c"
 22629 ;; Parameters:    Size  Location     Type
 22630 ;;  crc             2  [STACK] unsigned short 
 22631 ;; Auto vars:     Size  Location     Type
 22632 ;;  mask            2  [STACK] unsigned short 
 22633 ;;  reverse         2  [STACK] unsigned short 
 22634 ;; Return value:  Size  Location     Type
 22635 ;;                  2  [STACK] unsigned short 
 22636 ;; Registers used:
 22637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22638 ;; Tracked objects:
 22639 ;;		On entry : 0/0
 22640 ;;		On exit  : 0/0
 22641 ;;		Unchanged: 0/0
 22642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22647 ;;Total ram usage:        0 bytes
 22648 ;; Hardware stack levels used:    1
 22649 ;; Hardware stack levels required when called:   15
 22650 ;; This function calls:
 22651 ;;		Nothing
 22652 ;; This function is called by:
 22653 ;;		_CRC_CalculatedResultGet
 22654 ;; This function uses a reentrant model
 22655 ;;
 22656                           
 22657                           	psect	text64
 22658  000702                     __ptext64:
 22659                           	opt callstack 0
 22660  000702                     _CRC_ReverseValue:
 22661                           	opt callstack 0
 22662                           
 22663                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22664  000702  52E6               	movf	postinc1,f,c
 22665  000704  52E6               	movf	postinc1,f,c
 22666  000706  52E6               	movf	postinc1,f,c
 22667  000708  52E6               	movf	postinc1,f,c
 22668                           
 22669                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 22670                           
 22671                           ;incstack = 0
 22672  00070A  0E01               	movlw	1
 22673  00070C  6E34               	movwf	(btemp+10)^0,c
 22674  00070E  0E00               	movlw	0
 22675  000710  6E35               	movwf	(btemp+11)^0,c
 22676                           
 22677                           ;stkvar	_mask @ sp[(-4)+0]
 22678  000712  0EFC               	movlw	-4
 22679  000714  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 22680  00071A  0EFD               	movlw	-3
 22681  00071C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22682                           
 22683                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 22684  000722  0060  F394  F035   	movff	_crcObj+1,btemp+11
 22685  000728  0EFF               	movlw	255
 22686  00072A  2635               	addwf	(btemp+11)^0,f,c
 22687                           
 22688                           ;stkvar	_mask @ sp[(-4)+0]
 22689  00072C  50E1               	movf	fsr1l,w,c
 22690  00072E  0FFC               	addlw	-4
 22691  000730  6ED9               	movwf	fsr2l,c
 22692  000732  50E2               	movf	fsr1h,w,c
 22693  000734  6EDA               	movwf	fsr2h,c
 22694  000736  0EFF               	movlw	255
 22695  000738  22DA               	addwfc	fsr2h,f,c
 22696  00073A  2835               	incf	(btemp+11)^0,w,c
 22697  00073C  D003               	goto	u11560
 22698  00073E                     u11565:
 22699  00073E  90D8               	bcf	status,0,c
 22700  000740  36DE               	rlcf	postinc2,f,c
 22701  000742  36DD               	rlcf	postdec2,f,c
 22702  000744                     u11560:
 22703  000744  2EE8               	decfsz	wreg,f,c
 22704  000746  D7FB               	goto	u11565
 22705                           
 22706                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 22707                           ;stkvar	_reverse @ sp[(-4)+2]
 22708  000748  0EFE               	movlw	-2
 22709  00074A  6AE3               	clrf	plusw1,c
 22710  00074C  0EFF               	movlw	-1
 22711  00074E  6AE3               	clrf	plusw1,c
 22712                           
 22713                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22714  000750  D029               	goto	l12306
 22715  000752                     l12298:
 22716                           
 22717                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 22718                           ;stkvar	_crc @ sp[(-4)+-2]
 22719  000752  0EFA               	movlw	-6
 22720  000754  A0E3               	btfss	plusw1,0,c
 22721  000756  D01C               	goto	l12302
 22722                           
 22723                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 22724                           ;stkvar	_mask @ sp[(-4)+0]
 22725  000758  0EFC               	movlw	-4
 22726  00075A  006F FF8C  F034    	movff	plusw1,btemp+10
 22727  000760  0EFD               	movlw	-3
 22728  000762  006F FF8C  F035    	movff	plusw1,btemp+11
 22729                           
 22730                           ;stkvar	_reverse @ sp[(-4)+2]
 22731  000768  0EFE               	movlw	-2
 22732  00076A  006F FF8C  F02A    	movff	plusw1,btemp
 22733  000770  5034               	movf	(btemp+10)^0,w,c
 22734  000772  122A               	iorwf	btemp^0,f,c
 22735  000774  0EFE               	movlw	-2
 22736  000776  0060  F0AB  FFE3   	movff	btemp,plusw1
 22737  00077C  0EFF               	movlw	-1
 22738  00077E  006F FF8C  F02A    	movff	plusw1,btemp
 22739  000784  5035               	movf	(btemp+11)^0,w,c
 22740  000786  122A               	iorwf	btemp^0,f,c
 22741  000788  0EFF               	movlw	-1
 22742  00078A  0060  F0AB  FFE3   	movff	btemp,plusw1
 22743  000790                     l12302:
 22744                           
 22745                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 22746                           ;stkvar	_mask @ sp[(-4)+0]
 22747  000790  90D8               	bcf	status,0,c
 22748  000792  0EFD               	movlw	-3
 22749  000794  32E3               	rrcf	plusw1,f,c
 22750  000796  0EFC               	movlw	-4
 22751  000798  32E3               	rrcf	plusw1,f,c
 22752                           
 22753                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 22754                           ;stkvar	_crc @ sp[(-4)+-2]
 22755  00079A  90D8               	bcf	status,0,c
 22756  00079C  0EFB               	movlw	-5
 22757  00079E  32E3               	rrcf	plusw1,f,c
 22758  0007A0  0EFA               	movlw	-6
 22759  0007A2  32E3               	rrcf	plusw1,f,c
 22760  0007A4                     l12306:
 22761                           
 22762                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22763                           ;stkvar	_crc @ sp[(-4)+-2]
 22764  0007A4  0EFA               	movlw	-6
 22765  0007A6  006F FF8C  F02A    	movff	plusw1,btemp
 22766  0007AC  0EFB               	movlw	-5
 22767  0007AE  50E3               	movf	plusw1,w,c
 22768  0007B0  102A               	iorwf	btemp^0,w,c
 22769  0007B2  A4D8               	btfss	status,2,c
 22770  0007B4  D7CE               	goto	l12298
 22771                           
 22772                           ;mcc_generated_files/crc.c: 156:     return reverse;
 22773                           ;stkvar	_reverse @ sp[(-4)+2]
 22774  0007B6  0EFE               	movlw	-2
 22775  0007B8  006F FF8C  F02A    	movff	plusw1,btemp
 22776  0007BE  0EFF               	movlw	-1
 22777  0007C0  006F FF8C  F02B    	movff	plusw1,btemp+1
 22778                           
 22779                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22780  0007C6  0EFA               	movlw	250
 22781  0007C8  26E1               	addwf	fsr1l,f,c
 22782  0007CA  0EFF               	movlw	255
 22783  0007CC  22E2               	addwfc	fsr1h,f,c
 22784  0007CE  0012               	return		;funcret
 22785  0007D0                     __end_of_CRC_ReverseValue:
 22786                           	opt callstack 0
 22787                           
 22788 ;; *************** function _CRC_8BitDataWrite *****************
 22789 ;; Defined at:
 22790 ;;		line 125 in file "mcc_generated_files/crc.c"
 22791 ;; Parameters:    Size  Location     Type
 22792 ;;  data            1  [STACK] unsigned char 
 22793 ;; Auto vars:     Size  Location     Type
 22794 ;;		None
 22795 ;; Return value:  Size  Location     Type
 22796 ;;                  1  [STACK] _Bool 
 22797 ;; Registers used:
 22798 ;;		fsr1l, fsr1h
 22799 ;; Tracked objects:
 22800 ;;		On entry : 0/4
 22801 ;;		On exit  : 3F/39
 22802 ;;		Unchanged: 0/0
 22803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22808 ;;Total ram usage:        0 bytes
 22809 ;; Hardware stack levels used:    1
 22810 ;; Hardware stack levels required when called:   15
 22811 ;; This function calls:
 22812 ;;		Nothing
 22813 ;; This function is called by:
 22814 ;;		_read_cal_data
 22815 ;;		_write_cal_data
 22816 ;; This function uses a reentrant model
 22817 ;;
 22818                           
 22819                           	psect	text65
 22820  002C32                     __ptext65:
 22821                           	opt callstack 0
 22822  002C32                     _CRC_8BitDataWrite:
 22823                           	opt callstack 14
 22824                           
 22825                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 22826                           
 22827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22828                           ;incstack = 0
 22829  002C32  0139               	movlb	57	; () banked
 22830  002C34  B168               	btfsc	104,0,b	;volatile
 22831  002C36  D004               	goto	l1271
 22832                           
 22833                           ; BSR set to: 57
 22834                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 22835                           ;stkvar	_data @ sp[(0)+-1]
 22836  002C38  0EFF               	movlw	-1
 22837  002C3A  006F FF8F F960     	movff	plusw1,14688	;volatile
 22838  002C40                     l1271:
 22839                           
 22840                           ; BSR set to: 57
 22841                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 22842  002C40  52E5               	movf	postdec1,f,c
 22843  002C42  0012               	return		;funcret
 22844  002C44                     __end_of_CRC_8BitDataWrite:
 22845                           	opt callstack 0
 22846                           
 22847 ;; *************** function _start_adc_scan *****************
 22848 ;; Defined at:
 22849 ;;		line 74 in file "daq.c"
 22850 ;; Parameters:    Size  Location     Type
 22851 ;;		None
 22852 ;; Auto vars:     Size  Location     Type
 22853 ;;		None
 22854 ;; Return value:  Size  Location     Type
 22855 ;;                  1  [STACK] _Bool 
 22856 ;; Registers used:
 22857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22858 ;; Tracked objects:
 22859 ;;		On entry : 0/0
 22860 ;;		On exit  : 0/0
 22861 ;;		Unchanged: 0/0
 22862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22867 ;;Total ram usage:        0 bytes
 22868 ;; Hardware stack levels used:    1
 22869 ;; Hardware stack levels required when called:   16
 22870 ;; This function calls:
 22871 ;;		_ADCC_DischargeSampleCapacitor
 22872 ;;		_ADCC_SetADIInterruptHandler
 22873 ;;		_ADCC_SetADTIInterruptHandler
 22874 ;;		_ADCC_StartConversion
 22875 ;; This function is called by:
 22876 ;;		_main
 22877 ;;		_current_sensor_cal
 22878 ;;		_update_adc_result
 22879 ;; This function uses a reentrant model
 22880 ;;
 22881                           
 22882                           	psect	text66
 22883  001ABE                     __ptext66:
 22884                           	opt callstack 0
 22885  001ABE                     _start_adc_scan:
 22886                           	opt callstack 14
 22887                           
 22888                           ;daq.c: 76:  if (R.done)
 22889                           
 22890                           ; BSR set to: 57
 22891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22892                           ;incstack = 0
 22893  001ABE  0101               	movlb	1	; () banked
 22894  001AC0  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 22895  001AC2  A4D8               	btfss	status,2,c
 22896  001AC4  0012               	return	
 22897                           
 22898                           ; BSR set to: 1
 22899                           ;daq.c: 79:  R.scan_index = 0;
 22900  001AC6  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22901                           
 22902                           ; BSR set to: 1
 22903                           ;daq.c: 80:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22904  001AC8  013A               	movlb	58	; () banked
 22905  001ACA  5140               	movf	64,w,b	;volatile
 22906  001ACC  006E F940  F02A    	movff	14928,btemp	;volatile
 22907  001AD2  6A2B               	clrf	(btemp+1)^0,c
 22908  001AD4  0060  F0A8  F02B   	movff	btemp,btemp+1
 22909  001ADA  6A2A               	clrf	btemp^0,c
 22910  001ADC  262A               	addwf	btemp^0,f,c
 22911  001ADE  0E00               	movlw	0
 22912  001AE0  222B               	addwfc	(btemp+1)^0,f,c
 22913  001AE2  0E77               	movlw	119
 22914  001AE4  142A               	andwf	btemp^0,w,c
 22915  001AE6  0101               	movlb	1	; () banked
 22916  001AE8  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22917  001AEA  0E3C               	movlw	60
 22918  001AEC  142B               	andwf	(btemp+1)^0,w,c
 22919  001AEE  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22920                           
 22921                           ; BSR set to: 1
 22922                           ;daq.c: 81:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22923  001AF0  0E92               	movlw	low _adc_int_handler
 22924  001AF2  6EE6               	movwf	postinc1,c
 22925  001AF4  0E2D               	movlw	high _adc_int_handler
 22926  001AF6  6EE6               	movwf	postinc1,c
 22927  001AF8  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22928  001AFA  6EE6               	movwf	postinc1,c
 22929  001AFC  EC75  F014         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22930                           
 22931                           ;daq.c: 82:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22932  001B00  0E04               	movlw	low _adc_int_t_handler
 22933  001B02  6EE6               	movwf	postinc1,c
 22934  001B04  0E15               	movlw	high _adc_int_t_handler
 22935  001B06  6EE6               	movwf	postinc1,c
 22936  001B08  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 22937  001B0A  6EE6               	movwf	postinc1,c
 22938  001B0C  EC61  F014         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22939                           
 22940                           ;daq.c: 83:  ADCC_DischargeSampleCapacitor();
 22941  001B10  EC9F  F016         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22942                           
 22943                           ; BSR set to: 62
 22944                           ;daq.c: 84:  ADCC_StartConversion(R.scan_index & 0xf);
 22945  001B14  0101               	movlb	1	; () banked
 22946  001B16  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 22947  001B18  0B0F               	andlw	15
 22948  001B1A  6EE6               	movwf	postinc1,c
 22949  001B1C  EC22  F016         	call	_ADCC_StartConversion	;wreg free
 22950                           
 22951                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22952  001B20  0012               	return		;funcret
 22953  001B22                     __end_of_start_adc_scan:
 22954                           	opt callstack 0
 22955                           
 22956 ;; *************** function _ADCC_StartConversion *****************
 22957 ;; Defined at:
 22958 ;;		line 128 in file "mcc_generated_files/adcc.c"
 22959 ;; Parameters:    Size  Location     Type
 22960 ;;  channel         1  [STACK] enum E16136
 22961 ;; Auto vars:     Size  Location     Type
 22962 ;;		None
 22963 ;; Return value:  Size  Location     Type
 22964 ;;                  1  [STACK] void 
 22965 ;; Registers used:
 22966 ;;		fsr1l, fsr1h
 22967 ;; Tracked objects:
 22968 ;;		On entry : 3F/1
 22969 ;;		On exit  : 3F/3E
 22970 ;;		Unchanged: 0/0
 22971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22976 ;;Total ram usage:        0 bytes
 22977 ;; Hardware stack levels used:    1
 22978 ;; Hardware stack levels required when called:   15
 22979 ;; This function calls:
 22980 ;;		Nothing
 22981 ;; This function is called by:
 22982 ;;		_start_adc_scan
 22983 ;;		_adc_int_t_handler
 22984 ;; This function uses a reentrant model
 22985 ;;
 22986                           
 22987                           	psect	text67
 22988  002C44                     __ptext67:
 22989                           	opt callstack 0
 22990  002C44                     _ADCC_StartConversion:
 22991                           	opt callstack 0
 22992                           
 22993                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 22994                           ;stkvar	_channel @ sp[(0)+-1]
 22995                           
 22996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22997                           ;incstack = 0
 22998 ;; hardware stack exceeded
 22999  002C44  0EFF               	movlw	-1
 23000  002C46  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 23001                           
 23002                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 23003  002C4C  013E               	movlb	62	; () banked
 23004  002C4E  8FF8               	bsf	248,7,b	;volatile
 23005                           
 23006                           ; BSR set to: 62
 23007                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 23008  002C50  81F8               	bsf	248,0,b	;volatile
 23009                           
 23010                           ; BSR set to: 62
 23011                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 23012  002C52  52E5               	movf	postdec1,f,c
 23013  002C54  0012               	return		;funcret
 23014  002C56                     __end_of_ADCC_StartConversion:
 23015                           	opt callstack 0
 23016                           
 23017 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 23018 ;; Defined at:
 23019 ;;		line 189 in file "mcc_generated_files/adcc.c"
 23020 ;; Parameters:    Size  Location     Type
 23021 ;;		None
 23022 ;; Auto vars:     Size  Location     Type
 23023 ;;		None
 23024 ;; Return value:  Size  Location     Type
 23025 ;;                  1  [STACK] void 
 23026 ;; Registers used:
 23027 ;;		wreg, status,2
 23028 ;; Tracked objects:
 23029 ;;		On entry : 0/1
 23030 ;;		On exit  : 3F/3E
 23031 ;;		Unchanged: 0/0
 23032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23037 ;;Total ram usage:        0 bytes
 23038 ;; Hardware stack levels used:    1
 23039 ;; Hardware stack levels required when called:   15
 23040 ;; This function calls:
 23041 ;;		Nothing
 23042 ;; This function is called by:
 23043 ;;		_start_adc_scan
 23044 ;;		_adc_int_t_handler
 23045 ;; This function uses a reentrant model
 23046 ;;
 23047                           
 23048                           	psect	text68
 23049  002D3E                     __ptext68:
 23050                           	opt callstack 0
 23051  002D3E                     _ADCC_DischargeSampleCapacitor:
 23052                           	opt callstack 0
 23053                           
 23054                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 23055                           
 23056                           ; BSR set to: 62
 23057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23058                           ;incstack = 0
 23059 ;; hardware stack exceeded
 23060  002D3E  0E3B               	movlw	59
 23061  002D40  013E               	movlb	62	; () banked
 23062  002D42  6FF1               	movwf	241,b	;volatile
 23063                           
 23064                           ; BSR set to: 62
 23065                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 23066  002D44  0012               	return		;funcret
 23067  002D46                     __end_of_ADCC_DischargeSampleCapacitor:
 23068                           	opt callstack 0
 23069                           
 23070 ;; *************** function _spinners *****************
 23071 ;; Defined at:
 23072 ;;		line 147 in file "mbmc.c"
 23073 ;; Parameters:    Size  Location     Type
 23074 ;;  shape           1  [STACK] unsigned char 
 23075 ;;  reset           1  [STACK] const unsigned char 
 23076 ;; Auto vars:     Size  Location     Type
 23077 ;;  c               1  [STACK] unsigned char 
 23078 ;; Return value:  Size  Location     Type
 23079 ;;                  1  [STACK] unsigned char 
 23080 ;; Registers used:
 23081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 23082 ;; Tracked objects:
 23083 ;;		On entry : 0/0
 23084 ;;		On exit  : 0/0
 23085 ;;		Unchanged: 0/0
 23086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23091 ;;Total ram usage:        0 bytes
 23092 ;; Hardware stack levels used:    1
 23093 ;; Hardware stack levels required when called:   16
 23094 ;; This function calls:
 23095 ;;		_strlen
 23096 ;; This function is called by:
 23097 ;;		_main
 23098 ;;		_current_sensor_cal
 23099 ;; This function uses a reentrant model
 23100 ;;
 23101                           
 23102                           	psect	text69
 23103  0000B6                     __ptext69:
 23104                           	opt callstack 0
 23105  0000B6                     _spinners:
 23106                           	opt callstack 0
 23107                           
 23108                           ; BSR set to: 62
 23109                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23110  0000B6  52E6               	movf	postinc1,f,c
 23111                           
 23112                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 23113                           ;stkvar	_shape @ sp[(-1)+-1]
 23114                           
 23115                           ;incstack = 0
 23116  0000B8  0EFE               	movlw	-2
 23117  0000BA  006F FF8C  F02A    	movff	plusw1,btemp
 23118  0000C0  0E05               	movlw	5
 23119  0000C2  642A               	cpfsgt	btemp^0,c
 23120  0000C4  D002               	goto	l2192
 23121                           
 23122                           ;mbmc.c: 153:   shape = 0;
 23123                           ;stkvar	_shape @ sp[(-1)+-1]
 23124  0000C6  0EFE               	movlw	-2
 23125  0000C8  6AE3               	clrf	plusw1,c
 23126  0000CA                     l2192:
 23127                           
 23128                           ;mbmc.c: 154:  if (reset)
 23129                           ;stkvar	_reset @ sp[(-1)+-2]
 23130  0000CA  0EFD               	movlw	-3
 23131  0000CC  50E3               	movf	plusw1,w,c
 23132  0000CE  B4D8               	btfsc	status,2,c
 23133  0000D0  D00C               	goto	l13456
 23134                           
 23135                           ;mbmc.c: 155:   s[shape] = 0;
 23136                           ;stkvar	_shape @ sp[(-1)+-1]
 23137  0000D2  0EFE               	movlw	-2
 23138  0000D4  50E3               	movf	plusw1,w,c
 23139  0000D6  6E34               	movwf	(btemp+10)^0,c
 23140  0000D8  6A35               	clrf	(btemp+11)^0,c
 23141  0000DA  0ECD               	movlw	low spinners@s
 23142  0000DC  2434               	addwf	(btemp+10)^0,w,c
 23143  0000DE  6ED9               	movwf	fsr2l,c
 23144  0000E0  0E01               	movlw	high spinners@s
 23145  0000E2  2035               	addwfc	(btemp+11)^0,w,c
 23146  0000E4  6EDA               	movwf	fsr2h,c
 23147  0000E6  0E00               	movlw	0
 23148  0000E8  6EDF               	movwf	indf2,c
 23149  0000EA                     l13456:
 23150                           
 23151                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 23152                           ;stkvar	_shape @ sp[(-1)+-1]
 23153  0000EA  0EFE               	movlw	-2
 23154  0000EC  50E3               	movf	plusw1,w,c
 23155  0000EE  0D14               	mullw	20
 23156  0000F0  0E67               	movlw	low _spin
 23157  0000F2  6E34               	movwf	(btemp+10)^0,c
 23158  0000F4  0EF9               	movlw	high _spin
 23159  0000F6  6E35               	movwf	(btemp+11)^0,c
 23160  0000F8  50F3               	movf	243,w,c
 23161  0000FA  2634               	addwf	(btemp+10)^0,f,c
 23162  0000FC  50F4               	movf	244,w,c
 23163  0000FE  2235               	addwfc	(btemp+11)^0,f,c
 23164                           
 23165                           ;stkvar	_shape @ sp[(-1)+-1]
 23166  000100  0EFE               	movlw	-2
 23167  000102  50E3               	movf	plusw1,w,c
 23168  000104  6E32               	movwf	(btemp+8)^0,c
 23169  000106  6A33               	clrf	(btemp+9)^0,c
 23170  000108  0ECD               	movlw	low spinners@s
 23171  00010A  2432               	addwf	(btemp+8)^0,w,c
 23172  00010C  6ED9               	movwf	fsr2l,c
 23173  00010E  0E01               	movlw	high spinners@s
 23174  000110  2033               	addwfc	(btemp+9)^0,w,c
 23175  000112  6EDA               	movwf	fsr2h,c
 23176  000114  50DF               	movf	indf2,w,c
 23177  000116  2634               	addwf	(btemp+10)^0,f,c
 23178  000118  0E00               	movlw	0
 23179  00011A  2235               	addwfc	(btemp+11)^0,f,c
 23180  00011C  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 23181  000122  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 23182  000128                     	if	0	;tblptru may be non-zero
 23183  000128                     	endif
 23184  000128                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23185  000128  0E00               	movlw	low (__mediumconst shr (0+16))
 23186  00012A  6EF8               	movwf	tblptru,c
 23187  00012C                     	endif
 23188                           
 23189                           ;stkvar	_c @ sp[(-1)+0]
 23190  00012C  0008               	tblrd		*
 23191  00012E  0EFF               	movlw	-1
 23192  000130  006F FFD7 FFE3     	movff	tablat,plusw1
 23193                           
 23194                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 23195                           ;stkvar	_shape @ sp[(-1)+-1]
 23196  000136  0EFE               	movlw	-2
 23197  000138  50E3               	movf	plusw1,w,c
 23198  00013A  0D14               	mullw	20
 23199  00013C  0E67               	movlw	low _spin
 23200  00013E  6E34               	movwf	(btemp+10)^0,c
 23201  000140  0EF9               	movlw	high _spin
 23202  000142  6E35               	movwf	(btemp+11)^0,c
 23203  000144  50F3               	movf	243,w,c
 23204  000146  2634               	addwf	(btemp+10)^0,f,c
 23205  000148  50F4               	movf	244,w,c
 23206  00014A  2235               	addwfc	(btemp+11)^0,f,c
 23207  00014C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23208  000152  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23209  000158  EC63  F007         	call	_strlen	;wreg free
 23210                           
 23211                           ;stkvar	_shape @ sp[(-1)+-1]
 23212  00015C  0EFE               	movlw	-2
 23213  00015E  50E3               	movf	plusw1,w,c
 23214  000160  6E34               	movwf	(btemp+10)^0,c
 23215  000162  6A35               	clrf	(btemp+11)^0,c
 23216  000164  0ECD               	movlw	low spinners@s
 23217  000166  2434               	addwf	(btemp+10)^0,w,c
 23218  000168  6ED9               	movwf	fsr2l,c
 23219  00016A  0E01               	movlw	high spinners@s
 23220  00016C  2035               	addwfc	(btemp+11)^0,w,c
 23221  00016E  6EDA               	movwf	fsr2h,c
 23222  000170  2ADF               	incf	indf2,f,c
 23223  000172  50DF               	movf	indf2,w,c
 23224  000174  6E34               	movwf	(btemp+10)^0,c
 23225  000176  6A35               	clrf	(btemp+11)^0,c
 23226  000178  502A               	movf	btemp^0,w,c
 23227  00017A  5C34               	subwf	(btemp+10)^0,w,c
 23228  00017C  502B               	movf	(btemp+1)^0,w,c
 23229  00017E  5835               	subwfb	(btemp+11)^0,w,c
 23230  000180  A0D8               	btfss	status,0,c
 23231  000182  D00C               	goto	l13462
 23232                           
 23233                           ;mbmc.c: 158:   s[shape] = 0;
 23234                           ;stkvar	_shape @ sp[(-1)+-1]
 23235  000184  0EFE               	movlw	-2
 23236  000186  50E3               	movf	plusw1,w,c
 23237  000188  6E34               	movwf	(btemp+10)^0,c
 23238  00018A  6A35               	clrf	(btemp+11)^0,c
 23239  00018C  0ECD               	movlw	low spinners@s
 23240  00018E  2434               	addwf	(btemp+10)^0,w,c
 23241  000190  6ED9               	movwf	fsr2l,c
 23242  000192  0E01               	movlw	high spinners@s
 23243  000194  2035               	addwfc	(btemp+11)^0,w,c
 23244  000196  6EDA               	movwf	fsr2h,c
 23245  000198  0E00               	movlw	0
 23246  00019A  6EDF               	movwf	indf2,c
 23247  00019C                     l13462:
 23248                           
 23249                           ;mbmc.c: 159:  return c;
 23250                           ;stkvar	_c @ sp[(-1)+0]
 23251  00019C  0EFF               	movlw	-1
 23252  00019E  006F FF8C  F02A    	movff	plusw1,btemp
 23253                           
 23254                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 23255  0001A4  52E5               	movf	postdec1,f,c
 23256  0001A6  52E5               	movf	postdec1,f,c
 23257  0001A8  52E5               	movf	postdec1,f,c
 23258  0001AA  0012               	return		;funcret
 23259  0001AC                     __end_of_spinners:
 23260                           	opt callstack 0
 23261                           
 23262 ;; *************** function _get_switch *****************
 23263 ;; Defined at:
 23264 ;;		line 18 in file "dio.c"
 23265 ;; Parameters:    Size  Location     Type
 23266 ;;  i               1  [STACK] const unsigned char 
 23267 ;; Auto vars:     Size  Location     Type
 23268 ;;		None
 23269 ;; Return value:  Size  Location     Type
 23270 ;;                  1  [STACK] enum E17187
 23271 ;; Registers used:
 23272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23273 ;; Tracked objects:
 23274 ;;		On entry : 0/0
 23275 ;;		On exit  : 0/0
 23276 ;;		Unchanged: 0/0
 23277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23282 ;;Total ram usage:        0 bytes
 23283 ;; Hardware stack levels used:    1
 23284 ;; Hardware stack levels required when called:   15
 23285 ;; This function calls:
 23286 ;;		Nothing
 23287 ;; This function is called by:
 23288 ;;		_main
 23289 ;;		_current_sensor_cal
 23290 ;;		_display_history
 23291 ;;		_hid_input
 23292 ;; This function uses a reentrant model
 23293 ;;
 23294                           
 23295                           	psect	text70
 23296  002682                     __ptext70:
 23297                           	opt callstack 0
 23298  002682                     _get_switch:
 23299                           	opt callstack 13
 23300                           
 23301                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 23302                           ;stkvar	_i @ sp[(0)+-1]
 23303                           
 23304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23305                           ;incstack = 0
 23306  002682  0EFF               	movlw	-1
 23307  002684  006F FF8C  F02A    	movff	plusw1,btemp
 23308  00268A  0E05               	movlw	5
 23309  00268C  642A               	cpfsgt	btemp^0,c
 23310  00268E  D002               	goto	l12892
 23311                           
 23312                           ;dio.c: 21:   return SW_OFF;
 23313  002690  0E00               	movlw	0
 23314  002692  D00A               	goto	L20
 23315  002694                     l12892:
 23316                           
 23317                           ;dio.c: 23:  return S.button[i].sw;
 23318                           ;stkvar	_i @ sp[(0)+-1]
 23319  002694  0EFF               	movlw	-1
 23320  002696  50E3               	movf	plusw1,w,c
 23321  002698  0D05               	mullw	5
 23322  00269A  0EA4               	movlw	low _S
 23323  00269C  24F3               	addwf	243,w,c
 23324  00269E  6ED9               	movwf	fsr2l,c
 23325  0026A0  0E01               	movlw	high _S
 23326  0026A2  20F4               	addwfc	prodh,w,c
 23327  0026A4  6EDA               	movwf	fsr2h,c
 23328  0026A6  50DF               	movf	indf2,w,c
 23329  0026A8                     L20:
 23330  0026A8  6E2A               	movwf	btemp^0,c
 23331                           
 23332                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23333  0026AA  52E5               	movf	postdec1,f,c
 23334  0026AC  0012               	return		;funcret
 23335  0026AE                     __end_of_get_switch:
 23336                           	opt callstack 0
 23337                           
 23338 ;; *************** function _clear_adc_scan *****************
 23339 ;; Defined at:
 23340 ;;		line 105 in file "daq.c"
 23341 ;; Parameters:    Size  Location     Type
 23342 ;;		None
 23343 ;; Auto vars:     Size  Location     Type
 23344 ;;		None
 23345 ;; Return value:  Size  Location     Type
 23346 ;;                  1  [STACK] void 
 23347 ;; Registers used:
 23348 ;;		None
 23349 ;; Tracked objects:
 23350 ;;		On entry : 0/0
 23351 ;;		On exit  : 3F/1
 23352 ;;		Unchanged: 0/0
 23353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;Total ram usage:        0 bytes
 23359 ;; Hardware stack levels used:    1
 23360 ;; Hardware stack levels required when called:   15
 23361 ;; This function calls:
 23362 ;;		Nothing
 23363 ;; This function is called by:
 23364 ;;		_main
 23365 ;;		_current_sensor_cal
 23366 ;;		_update_adc_result
 23367 ;; This function uses a reentrant model
 23368 ;;
 23369                           
 23370                           	psect	text71
 23371  002D6A                     __ptext71:
 23372                           	opt callstack 0
 23373  002D6A                     _clear_adc_scan:
 23374                           	opt callstack 13
 23375                           
 23376                           ;daq.c: 107:  R.done = 0;
 23377                           
 23378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23379                           ;incstack = 0
 23380  002D6A  0101               	movlb	1	; () banked
 23381  002D6C  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 23382                           
 23383                           ; BSR set to: 1
 23384                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23385  002D6E  0012               	return		;funcret
 23386  002D70                     __end_of_clear_adc_scan:
 23387                           	opt callstack 0
 23388                           
 23389 ;; *************** function _cal_current_zero *****************
 23390 ;; Defined at:
 23391 ;;		line 339 in file "daq.c"
 23392 ;; Parameters:    Size  Location     Type
 23393 ;;  mode            1  [STACK] const _Bool 
 23394 ;;  cb              2  [STACK] const short 
 23395 ;;  cp              2  [STACK] const short 
 23396 ;; Auto vars:     Size  Location     Type
 23397 ;;		None
 23398 ;; Return value:  Size  Location     Type
 23399 ;;                  1  [STACK] _Bool 
 23400 ;; Registers used:
 23401 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23402 ;; Tracked objects:
 23403 ;;		On entry : 0/1
 23404 ;;		On exit  : 0/0
 23405 ;;		Unchanged: 0/0
 23406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23411 ;;Total ram usage:        0 bytes
 23412 ;; Hardware stack levels used:    1
 23413 ;; Hardware stack levels required when called:   16
 23414 ;; This function calls:
 23415 ;;		_check_range
 23416 ;; This function is called by:
 23417 ;;		_current_sensor_cal
 23418 ;; This function uses a reentrant model
 23419 ;;
 23420                           
 23421                           	psect	text72
 23422  00109A                     __ptext72:
 23423                           	opt callstack 0
 23424  00109A                     _cal_current_zero:
 23425                           	opt callstack 13
 23426                           
 23427                           ;daq.c: 339: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 340: {;daq.c: 342:  if (!check_range(cb, 100, 4000))
 23428                           
 23429                           ; BSR set to: 1
 23430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23431                           ;incstack = 0
 23432  00109A  0EA0               	movlw	160
 23433  00109C  6EE6               	movwf	postinc1,c
 23434  00109E  0E0F               	movlw	15
 23435  0010A0  6EE6               	movwf	postinc1,c
 23436  0010A2  0E64               	movlw	100
 23437  0010A4  6EE6               	movwf	postinc1,c
 23438  0010A6  0E00               	movlw	0
 23439  0010A8  6EE6               	movwf	postinc1,c
 23440                           
 23441                           ;stkvar	_cb @ sp[(-4)+-3]
 23442  0010AA  0EF9               	movlw	-7
 23443  0010AC  006F FF8F FFE6     	movff	plusw1,postinc1
 23444  0010B2  006F FF8F FFE6     	movff	plusw1,postinc1
 23445  0010B8  ECC3  F00A         	call	_check_range	;wreg free
 23446  0010BC  502A               	movf	btemp^0,w,c
 23447  0010BE  A4D8               	btfss	status,2,c
 23448  0010C0  D002               	goto	l13592
 23449  0010C2                     u12640:
 23450                           
 23451                           ;daq.c: 343:   return 0;
 23452  0010C2  0E00               	movlw	0
 23453  0010C4  D019               	goto	L21
 23454  0010C6                     l13592:
 23455                           
 23456                           ;daq.c: 345:  if (!check_range(cp, 100, 4000))
 23457  0010C6  0EA0               	movlw	160
 23458  0010C8  6EE6               	movwf	postinc1,c
 23459  0010CA  0E0F               	movlw	15
 23460  0010CC  6EE6               	movwf	postinc1,c
 23461  0010CE  0E64               	movlw	100
 23462  0010D0  6EE6               	movwf	postinc1,c
 23463  0010D2  0E00               	movlw	0
 23464  0010D4  6EE6               	movwf	postinc1,c
 23465                           
 23466                           ;stkvar	_cp @ sp[(-4)+-5]
 23467  0010D6  0EF7               	movlw	-9
 23468  0010D8  006F FF8F FFE6     	movff	plusw1,postinc1
 23469  0010DE  006F FF8F FFE6     	movff	plusw1,postinc1
 23470  0010E4  ECC3  F00A         	call	_check_range	;wreg free
 23471  0010E8  502A               	movf	btemp^0,w,c
 23472  0010EA  B4D8               	btfsc	status,2,c
 23473  0010EC  D7EA               	goto	u12640
 23474                           
 23475                           ;daq.c: 348:  if (!mode)
 23476                           ;stkvar	_mode @ sp[(0)+-1]
 23477  0010EE  0EFF               	movlw	-1
 23478  0010F0  50E3               	movf	plusw1,w,c
 23479  0010F2  A4D8               	btfss	status,2,c
 23480  0010F4  D003               	goto	l13604
 23481  0010F6                     u12660:
 23482                           
 23483                           ;daq.c: 349:   return 1;
 23484  0010F6  0E01               	movlw	1
 23485  0010F8                     L21:
 23486  0010F8  6E2A               	movwf	btemp^0,c
 23487  0010FA  D013               	goto	l2066
 23488  0010FC                     l13604:
 23489                           
 23490                           ;daq.c: 351:  R.n_offset[0] = cb;
 23491                           ;stkvar	_cb @ sp[(0)+-3]
 23492  0010FC  0EFD               	movlw	-3
 23493  0010FE  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 23494  001104  0EFE               	movlw	-2
 23495  001106  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 23496                           
 23497                           ;daq.c: 352:  R.n_offset[1] = cp;
 23498                           ;stkvar	_cp @ sp[(0)+-5]
 23499  00110C  0EFB               	movlw	-5
 23500  00110E  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 23501  001114  0EFC               	movlw	-4
 23502  001116  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 23503                           
 23504                           ;daq.c: 353:  R.c_zero_cal = 1;
 23505  00111C  0101               	movlb	1	; () banked
 23506  00111E  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 23507  001120  D7EA               	goto	u12660
 23508  001122                     l2066:
 23509                           
 23510                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 23511  001122  0EFB               	movlw	251
 23512  001124  26E1               	addwf	fsr1l,f,c
 23513  001126  0EFF               	movlw	255
 23514  001128  22E2               	addwfc	fsr1h,f,c
 23515  00112A  0012               	return		;funcret
 23516  00112C                     __end_of_cal_current_zero:
 23517                           	opt callstack 0
 23518                           
 23519 ;; *************** function _check_range *****************
 23520 ;; Defined at:
 23521 ;;		line 327 in file "daq.c"
 23522 ;; Parameters:    Size  Location     Type
 23523 ;;  value           2  [STACK] const short 
 23524 ;;  window          2  [STACK] const short 
 23525 ;;  standard        2  [STACK] const short 
 23526 ;; Auto vars:     Size  Location     Type
 23527 ;;		None
 23528 ;; Return value:  Size  Location     Type
 23529 ;;                  1  [STACK] _Bool 
 23530 ;; Registers used:
 23531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23532 ;; Tracked objects:
 23533 ;;		On entry : 0/1
 23534 ;;		On exit  : 0/0
 23535 ;;		Unchanged: 0/0
 23536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23541 ;;Total ram usage:        0 bytes
 23542 ;; Hardware stack levels used:    1
 23543 ;; Hardware stack levels required when called:   15
 23544 ;; This function calls:
 23545 ;;		Nothing
 23546 ;; This function is called by:
 23547 ;;		_cal_current_zero
 23548 ;; This function uses a reentrant model
 23549 ;;
 23550                           
 23551                           	psect	text73
 23552  001586                     __ptext73:
 23553                           	opt callstack 0
 23554  001586                     _check_range:
 23555                           	opt callstack 13
 23556                           
 23557                           ;daq.c: 327: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 328: {;daq.c: 329:  if (value > (standard + window))
 23558                           ;stkvar	_value @ sp[(0)+-2]
 23559                           ;stkvar	_window @ sp[(0)+-4]
 23560                           ;stkvar	_standard @ sp[(0)+-6]
 23561                           
 23562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23563                           ;incstack = 0
 23564  001586  0EFA               	movlw	-6
 23565  001588  006F FF8C  F034    	movff	plusw1,btemp+10
 23566  00158E  0EFB               	movlw	-5
 23567  001590  006F FF8C  F035    	movff	plusw1,btemp+11
 23568  001596  0EFC               	movlw	-4
 23569  001598  50E3               	movf	plusw1,w,c
 23570  00159A  2634               	addwf	(btemp+10)^0,f,c
 23571  00159C  0EFD               	movlw	-3
 23572  00159E  50E3               	movf	plusw1,w,c
 23573  0015A0  2235               	addwfc	(btemp+11)^0,f,c
 23574  0015A2  0EFE               	movlw	-2
 23575  0015A4  50E3               	movf	plusw1,w,c
 23576  0015A6  5C34               	subwf	(btemp+10)^0,w,c
 23577  0015A8  5035               	movf	(btemp+11)^0,w,c
 23578  0015AA  0A80               	xorlw	128
 23579  0015AC  6E2A               	movwf	btemp^0,c
 23580  0015AE  0EFF               	movlw	-1
 23581  0015B0  50E3               	movf	plusw1,w,c
 23582  0015B2  0A80               	xorlw	128
 23583  0015B4  582A               	subwfb	btemp^0,w,c
 23584  0015B6  B0D8               	btfsc	status,0,c
 23585  0015B8  D002               	goto	l12964
 23586  0015BA                     u12370:
 23587                           
 23588                           ;daq.c: 330:   return 0;
 23589  0015BA  0E00               	movlw	0
 23590  0015BC  D01E               	goto	L22
 23591  0015BE                     l12964:
 23592                           
 23593                           ;daq.c: 331:  if (value < (standard - window))
 23594                           ;stkvar	_window @ sp[(0)+-4]
 23595                           ;stkvar	_standard @ sp[(0)+-6]
 23596  0015BE  0EFA               	movlw	-6
 23597  0015C0  006F FF8C  F034    	movff	plusw1,btemp+10
 23598  0015C6  0EFB               	movlw	-5
 23599  0015C8  006F FF8C  F035    	movff	plusw1,btemp+11
 23600  0015CE  0EFC               	movlw	-4
 23601  0015D0  50E3               	movf	plusw1,w,c
 23602  0015D2  5E34               	subwf	(btemp+10)^0,f,c
 23603  0015D4  0EFD               	movlw	-3
 23604  0015D6  50E3               	movf	plusw1,w,c
 23605  0015D8  5A35               	subwfb	(btemp+11)^0,f,c
 23606                           
 23607                           ;stkvar	_value @ sp[(0)+-2]
 23608  0015DA  0EFE               	movlw	-2
 23609  0015DC  006F FF8C  F02A    	movff	plusw1,btemp
 23610  0015E2  5034               	movf	(btemp+10)^0,w,c
 23611  0015E4  5C2A               	subwf	btemp^0,w,c
 23612  0015E6  0EFF               	movlw	-1
 23613  0015E8  50E3               	movf	plusw1,w,c
 23614  0015EA  0A80               	xorlw	128
 23615  0015EC  6E2A               	movwf	btemp^0,c
 23616  0015EE  5035               	movf	(btemp+11)^0,w,c
 23617  0015F0  0A80               	xorlw	128
 23618  0015F2  582A               	subwfb	btemp^0,w,c
 23619  0015F4  A0D8               	btfss	status,0,c
 23620  0015F6  D7E1               	goto	u12370
 23621                           
 23622                           ;daq.c: 333:  return 1;
 23623  0015F8  0E01               	movlw	1
 23624  0015FA                     L22:
 23625  0015FA  6E2A               	movwf	btemp^0,c
 23626                           
 23627                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 23628  0015FC  0EFA               	movlw	250
 23629  0015FE  26E1               	addwf	fsr1l,f,c
 23630  001600  0EFF               	movlw	255
 23631  001602  22E2               	addwfc	fsr1h,f,c
 23632  001604  0012               	return		;funcret
 23633  001606                     __end_of_check_range:
 23634                           	opt callstack 0
 23635                           
 23636 ;; *************** function _convert_adc_data *****************
 23637 ;; Defined at:
 23638 ;;		line 51 in file "mbmc.c"
 23639 ;; Parameters:    Size  Location     Type
 23640 ;;		None
 23641 ;; Auto vars:     Size  Location     Type
 23642 ;;  i               1  [STACK] unsigned char 
 23643 ;; Return value:  Size  Location     Type
 23644 ;;                  1  [STACK] void 
 23645 ;; Registers used:
 23646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23647 ;; Tracked objects:
 23648 ;;		On entry : 0/2
 23649 ;;		On exit  : 0/0
 23650 ;;		Unchanged: 0/0
 23651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23656 ;;Total ram usage:        0 bytes
 23657 ;; Hardware stack levels used:    1
 23658 ;; Hardware stack levels required when called:   18
 23659 ;; This function calls:
 23660 ;;		_conv_raw_result
 23661 ;;		_lp_filter
 23662 ;; This function is called by:
 23663 ;;		_main
 23664 ;; This function uses a reentrant model
 23665 ;;
 23666                           
 23667                           	psect	text74
 23668  000A0A                     __ptext74:
 23669                           	opt callstack 0
 23670  000A0A                     _convert_adc_data:
 23671                           	opt callstack 0
 23672                           
 23673                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23674  000A0A  52E6               	movf	postinc1,f,c
 23675                           
 23676                           ;mbmc.c: 53:  uint8_t i = 0;
 23677                           ;stkvar	_i @ sp[(-1)+0]
 23678                           
 23679                           ;incstack = 0
 23680  000A0C  0EFF               	movlw	-1
 23681  000A0E  6AE3               	clrf	plusw1,c
 23682  000A10                     l14406:
 23683                           
 23684                           ;mbmc.c: 56:   if (V.calib) {
 23685  000A10  0102               	movlb	2	; () banked
 23686  000A12  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 23687  000A14  B4D8               	btfsc	status,2,c
 23688  000A16  D01B               	goto	l14410
 23689                           
 23690                           ; BSR set to: 2
 23691                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 23692  000A18  0E01               	movlw	1
 23693  000A1A  6EE6               	movwf	postinc1,c
 23694                           
 23695                           ;stkvar	_i @ sp[(-2)+0]
 23696  000A1C  0EFE               	movlw	-2
 23697  000A1E  50E3               	movf	plusw1,w,c
 23698  000A20  6EE6               	movwf	postinc1,c
 23699  000A22  0E01               	movlw	1
 23700  000A24  6EE6               	movwf	postinc1,c
 23701                           
 23702                           ;stkvar	_i @ sp[(-4)+0]
 23703  000A26  0EFC               	movlw	-4
 23704  000A28  50E3               	movf	plusw1,w,c
 23705  000A2A  6EE6               	movwf	postinc1,c
 23706  000A2C  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 23707  000A30  0060  F0AB  FFE6   	movff	btemp,postinc1
 23708  000A36  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23709  000A3C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23710  000A42  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23711  000A48  EC82  F0EE         	call	_lp_filter	;wreg free
 23712  000A4C  D01A               	goto	L23
 23713  000A4E                     l14410:
 23714                           
 23715                           ; BSR set to: 2
 23716                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 23717  000A4E  0E00               	movlw	0
 23718  000A50  6EE6               	movwf	postinc1,c
 23719                           
 23720                           ;stkvar	_i @ sp[(-2)+0]
 23721  000A52  0EFE               	movlw	-2
 23722  000A54  50E3               	movf	plusw1,w,c
 23723  000A56  6EE6               	movwf	postinc1,c
 23724  000A58  0E00               	movlw	0
 23725  000A5A  6EE6               	movwf	postinc1,c
 23726                           
 23727                           ;stkvar	_i @ sp[(-4)+0]
 23728  000A5C  0EFC               	movlw	-4
 23729  000A5E  50E3               	movf	plusw1,w,c
 23730  000A60  6EE6               	movwf	postinc1,c
 23731  000A62  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 23732  000A66  0060  F0AB  FFE6   	movff	btemp,postinc1
 23733  000A6C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23734  000A72  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23735  000A78  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23736  000A7E  EC82  F0EE         	call	_lp_filter	;wreg free
 23737  000A82                     L23:
 23738                           
 23739                           ;stkvar	_i @ sp[(-1)+0]
 23740  000A82  0EFF               	movlw	-1
 23741  000A84  50E3               	movf	plusw1,w,c
 23742  000A86  0D04               	mullw	4
 23743  000A88  0E81               	movlw	low _C
 23744  000A8A  24F3               	addwf	243,w,c
 23745  000A8C  6ED9               	movwf	fsr2l,c
 23746  000A8E  0E0B               	movlw	high _C
 23747  000A90  20F4               	addwfc	prodh,w,c
 23748  000A92  6EDA               	movwf	fsr2h,c
 23749  000A94  0060  F0AB  FFDE   	movff	btemp,postinc2
 23750  000A9A  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 23751  000AA0  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 23752  000AA6  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 23753                           
 23754                           ;mbmc.c: 61:  } while (++i < 16);
 23755                           ;stkvar	_i @ sp[(-1)+0]
 23756  000AAC  0EFF               	movlw	-1
 23757  000AAE  2AE3               	incf	plusw1,f,c
 23758  000AB0  0EFF               	movlw	-1
 23759  000AB2  006F FF8C  F02A    	movff	plusw1,btemp
 23760  000AB8  0E0F               	movlw	15
 23761  000ABA  642A               	cpfsgt	btemp^0,c
 23762  000ABC  D7A9               	goto	l14406
 23763                           
 23764                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23765  000ABE  52E5               	movf	postdec1,f,c
 23766  000AC0  0012               	return		;funcret
 23767  000AC2                     __end_of_convert_adc_data:
 23768                           	opt callstack 0
 23769                           
 23770 ;; *************** function _clear_hid_pflags *****************
 23771 ;; Defined at:
 23772 ;;		line 67 in file "hid.c"
 23773 ;; Parameters:    Size  Location     Type
 23774 ;;  h               2  [STACK] PTR struct H_data
 23775 ;;		 -> H(9), 
 23776 ;; Auto vars:     Size  Location     Type
 23777 ;;		None
 23778 ;; Return value:  Size  Location     Type
 23779 ;;                  1  [STACK] void 
 23780 ;; Registers used:
 23781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 23782 ;; Tracked objects:
 23783 ;;		On entry : 3E/0
 23784 ;;		On exit  : 0/0
 23785 ;;		Unchanged: 0/0
 23786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23791 ;;Total ram usage:        0 bytes
 23792 ;; Hardware stack levels used:    1
 23793 ;; Hardware stack levels required when called:   15
 23794 ;; This function calls:
 23795 ;;		Nothing
 23796 ;; This function is called by:
 23797 ;;		_main
 23798 ;; This function uses a reentrant model
 23799 ;;
 23800                           
 23801                           	psect	text75
 23802  00198E                     __ptext75:
 23803                           	opt callstack 0
 23804  00198E                     _clear_hid_pflags:
 23805                           	opt callstack 15
 23806                           
 23807                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 23808                           ;stkvar	_h @ sp[(0)+-2]
 23809                           
 23810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23811                           ;incstack = 0
 23812  00198E  0EFE               	movlw	-2
 23813  001990  006F FF8C  F034    	movff	plusw1,btemp+10
 23814  001996  0EFF               	movlw	-1
 23815  001998  006F FF8C  F035    	movff	plusw1,btemp+11
 23816  00199E  0E03               	movlw	3
 23817  0019A0  2434               	addwf	(btemp+10)^0,w,c
 23818  0019A2  6ED9               	movwf	fsr2l,c
 23819  0019A4  0E00               	movlw	0
 23820  0019A6  2035               	addwfc	(btemp+11)^0,w,c
 23821  0019A8  6EDA               	movwf	fsr2h,c
 23822  0019AA  0E00               	movlw	0
 23823  0019AC  6EDF               	movwf	indf2,c
 23824                           
 23825                           ;hid.c: 70:  h->enter_p = SW_OFF;
 23826                           ;stkvar	_h @ sp[(0)+-2]
 23827  0019AE  0EFE               	movlw	-2
 23828  0019B0  006F FF8C  F034    	movff	plusw1,btemp+10
 23829  0019B6  0EFF               	movlw	-1
 23830  0019B8  006F FF8C  F035    	movff	plusw1,btemp+11
 23831  0019BE  0E05               	movlw	5
 23832  0019C0  2434               	addwf	(btemp+10)^0,w,c
 23833  0019C2  6ED9               	movwf	fsr2l,c
 23834  0019C4  0E00               	movlw	0
 23835  0019C6  2035               	addwfc	(btemp+11)^0,w,c
 23836  0019C8  6EDA               	movwf	fsr2h,c
 23837  0019CA  0E00               	movlw	0
 23838  0019CC  6EDF               	movwf	indf2,c
 23839                           
 23840                           ;hid.c: 71:  h->calib_p = SW_OFF;
 23841                           ;stkvar	_h @ sp[(0)+-2]
 23842  0019CE  0EFE               	movlw	-2
 23843  0019D0  006F FF8C  F034    	movff	plusw1,btemp+10
 23844  0019D6  0EFF               	movlw	-1
 23845  0019D8  006F FF8C  F035    	movff	plusw1,btemp+11
 23846  0019DE  0E07               	movlw	7
 23847  0019E0  2434               	addwf	(btemp+10)^0,w,c
 23848  0019E2  6ED9               	movwf	fsr2l,c
 23849  0019E4  0E00               	movlw	0
 23850  0019E6  2035               	addwfc	(btemp+11)^0,w,c
 23851  0019E8  6EDA               	movwf	fsr2h,c
 23852  0019EA  0E00               	movlw	0
 23853  0019EC  6EDF               	movwf	indf2,c
 23854                           
 23855                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 23856  0019EE  52E5               	movf	postdec1,f,c
 23857  0019F0  52E5               	movf	postdec1,f,c
 23858  0019F2  0012               	return		;funcret
 23859  0019F4                     __end_of_clear_hid_pflags:
 23860                           	opt callstack 0
 23861                           
 23862 ;; *************** function _check_help *****************
 23863 ;; Defined at:
 23864 ;;		line 40 in file "mconfig.c"
 23865 ;; Parameters:    Size  Location     Type
 23866 ;;  flipper         1  [STACK] const _Bool 
 23867 ;; Auto vars:     Size  Location     Type
 23868 ;;  estatus         1    0        _Bool 
 23869 ;; Return value:  Size  Location     Type
 23870 ;;                  1  [STACK] _Bool 
 23871 ;; Registers used:
 23872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23873 ;; Tracked objects:
 23874 ;;		On entry : 3F/2
 23875 ;;		On exit  : 0/0
 23876 ;;		Unchanged: 0/0
 23877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23882 ;;Total ram usage:        0 bytes
 23883 ;; Hardware stack levels used:    1
 23884 ;; Hardware stack levels required when called:   27
 23885 ;; This function calls:
 23886 ;;		_StartTimer
 23887 ;;		_TimerDone
 23888 ;;		_display_help
 23889 ;;		_display_info
 23890 ;;		_get_vterm_ptr
 23891 ;;		_help_button
 23892 ;;		_mode_lamp_bright
 23893 ;;		_mode_lamp_dim
 23894 ;;		_set_display_info
 23895 ;;		_set_temp_display_help
 23896 ;;		_set_vterm
 23897 ;;		_sprintf
 23898 ;;		_update_lcd
 23899 ;;		_vterm_dump
 23900 ;; This function is called by:
 23901 ;;		_main
 23902 ;; This function uses a reentrant model
 23903 ;;
 23904                           
 23905                           	psect	text76
 23906  01D724                     __ptext76:
 23907                           	opt callstack 0
 23908  01D724                     _check_help:
 23909                           	opt callstack 3
 23910                           
 23911                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 23912                           
 23913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23914                           ;incstack = 0
 23915  01D724  ECDA  F011         	call	_help_button	;wreg free
 23916  01D728  502A               	movf	btemp^0,w,c
 23917  01D72A  B4D8               	btfsc	status,2,c
 23918  01D72C  D0D0               	goto	l17186
 23919  01D72E  ECA3  F016         	call	_display_info	;wreg free
 23920  01D732  042A               	decf	btemp^0,w,c
 23921  01D734  B4D8               	btfsc	status,2,c
 23922  01D736  D0CB               	goto	l17186
 23923                           
 23924                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 23925  01D738  0EDC               	movlw	220
 23926  01D73A  6EE6               	movwf	postinc1,c
 23927  01D73C  0E05               	movlw	5
 23928  01D73E  6EE6               	movwf	postinc1,c
 23929  01D740  0E0B               	movlw	11
 23930  01D742  6EE6               	movwf	postinc1,c
 23931  01D744  EC20  F011         	call	_StartTimer	;wreg free
 23932                           
 23933                           ;mconfig.c: 48:   if (V.debug)
 23934  01D748  0102               	movlb	2	; () banked
 23935  01D74A  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 23936                           
 23937                           ; BSR set to: 2
 23938                           ;mconfig.c: 49:    vterm_dump();
 23939  01D74C  ECC6  F0F1         	call	_vterm_dump	;wreg free
 23940                           
 23941                           ;mconfig.c: 51:   set_vterm(1);
 23942  01D750  0E01               	movlw	1
 23943  01D752  6EE6               	movwf	postinc1,c
 23944  01D754  EC92  F015         	call	_set_vterm	;wreg free
 23945                           
 23946                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 23947  01D758  ECA3  F016         	call	_display_info	;wreg free
 23948  01D75C  502A               	movf	btemp^0,w,c
 23949  01D75E  6EE6               	movwf	postinc1,c
 23950  01D760  EC43  F016         	call	_set_temp_display_help	;wreg free
 23951                           
 23952                           ; BSR set to: 2
 23953                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 23954  01D764  0E01               	movlw	1
 23955  01D766  6EE6               	movwf	postinc1,c
 23956  01D768  ECA1  F015         	call	_set_display_info	;wreg free
 23957                           
 23958                           ;mconfig.c: 54:   if (flipper) {
 23959                           ;stkvar	_flipper @ sp[(0)+-1]
 23960  01D76C  0EFF               	movlw	-1
 23961  01D76E  50E3               	movf	plusw1,w,c
 23962  01D770  B4D8               	btfsc	status,2,c
 23963  01D772  D019               	goto	l17172
 23964                           
 23965                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 23966  01D774  0EB6               	movlw	low STR_75
 23967  01D776  6EE6               	movwf	postinc1,c
 23968  01D778  0EFF               	movlw	high STR_75
 23969  01D77A  6EE6               	movwf	postinc1,c
 23970  01D77C  0E71               	movlw	low STR_77
 23971  01D77E  6EE6               	movwf	postinc1,c
 23972  01D780  0EFF               	movlw	high STR_77
 23973  01D782  6EE6               	movwf	postinc1,c
 23974  01D784  0E01               	movlw	1
 23975  01D786  6EE6               	movwf	postinc1,c
 23976  01D788  0E00               	movlw	0
 23977  01D78A  6EE6               	movwf	postinc1,c
 23978  01D78C  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 23979  01D790  0060  F0AB  FFE6   	movff	btemp,postinc1
 23980  01D796  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23981  01D79C  0E06               	movlw	6
 23982  01D79E  6EE6               	movwf	postinc1,c
 23983  01D7A0  ECE5  F0FE         	call	_sprintf	;wreg free
 23984                           
 23985                           ;mconfig.c: 56:   } else {
 23986  01D7A4  D018               	goto	l1833
 23987  01D7A6                     l17172:
 23988                           
 23989                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 23990  01D7A6  0ECC               	movlw	low STR_76
 23991  01D7A8  6EE6               	movwf	postinc1,c
 23992  01D7AA  0EFF               	movlw	high STR_76
 23993  01D7AC  6EE6               	movwf	postinc1,c
 23994  01D7AE  0E71               	movlw	low STR_77
 23995  01D7B0  6EE6               	movwf	postinc1,c
 23996  01D7B2  0EFF               	movlw	high STR_77
 23997  01D7B4  6EE6               	movwf	postinc1,c
 23998  01D7B6  0E01               	movlw	1
 23999  01D7B8  6EE6               	movwf	postinc1,c
 24000  01D7BA  0E00               	movlw	0
 24001  01D7BC  6EE6               	movwf	postinc1,c
 24002  01D7BE  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24003  01D7C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 24004  01D7C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24005  01D7CE  0E06               	movlw	6
 24006  01D7D0  6EE6               	movwf	postinc1,c
 24007  01D7D2  ECE5  F0FE         	call	_sprintf	;wreg free
 24008  01D7D6                     l1833:
 24009                           
 24010                           ; BSR set to: 0
 24011                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 24012  01D7D6  0102               	movlb	2	; () banked
 24013  01D7D8  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24014  01D7DA  32E8               	rrcf	wreg,f,c
 24015  01D7DC  32E8               	rrcf	wreg,f,c
 24016  01D7DE  0B03               	andlw	3
 24017  01D7E0  0D2C               	mullw	44
 24018  01D7E2  0E16               	movlw	22
 24019  01D7E4  26F3               	addwf	243,f,c
 24020  01D7E6  0E00               	movlw	0
 24021  01D7E8  22F4               	addwfc	244,f,c
 24022  01D7EA  0EB7               	movlw	low _T
 24023  01D7EC  6E34               	movwf	(btemp+10)^0,c
 24024  01D7EE  0EF8               	movlw	high _T
 24025  01D7F0  6E35               	movwf	(btemp+11)^0,c
 24026  01D7F2  50F3               	movf	243,w,c
 24027  01D7F4  2634               	addwf	(btemp+10)^0,f,c
 24028  01D7F6  50F4               	movf	244,w,c
 24029  01D7F8  2235               	addwfc	(btemp+11)^0,f,c
 24030  01D7FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24031  01D800  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24032  01D806  0EC2               	movlw	low STR_79
 24033  01D808  6EE6               	movwf	postinc1,c
 24034  01D80A  0EFF               	movlw	high STR_79
 24035  01D80C  6EE6               	movwf	postinc1,c
 24036  01D80E  0E01               	movlw	1
 24037  01D810  6EE6               	movwf	postinc1,c
 24038  01D812  0E01               	movlw	1
 24039  01D814  6EE6               	movwf	postinc1,c
 24040  01D816  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24041  01D81A  0060  F0AB  FFE6   	movff	btemp,postinc1
 24042  01D820  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24043  01D826  0E06               	movlw	6
 24044  01D828  6EE6               	movwf	postinc1,c
 24045  01D82A  ECE5  F0FE         	call	_sprintf	;wreg free
 24046                           
 24047                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 24048  01D82E  0102               	movlb	2	; () banked
 24049  01D830  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24050  01D832  32E8               	rrcf	wreg,f,c
 24051  01D834  32E8               	rrcf	wreg,f,c
 24052  01D836  0B03               	andlw	3
 24053  01D838  0D2C               	mullw	44
 24054  01D83A  0EB7               	movlw	low _T
 24055  01D83C  6E34               	movwf	(btemp+10)^0,c
 24056  01D83E  0EF8               	movlw	high _T
 24057  01D840  6E35               	movwf	(btemp+11)^0,c
 24058  01D842  50F3               	movf	243,w,c
 24059  01D844  2634               	addwf	(btemp+10)^0,f,c
 24060  01D846  50F4               	movf	244,w,c
 24061  01D848  2235               	addwfc	(btemp+11)^0,f,c
 24062  01D84A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24063  01D850  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24064  01D856  0EC2               	movlw	low STR_79
 24065  01D858  6EE6               	movwf	postinc1,c
 24066  01D85A  0EFF               	movlw	high STR_79
 24067  01D85C  6EE6               	movwf	postinc1,c
 24068  01D85E  0E01               	movlw	1
 24069  01D860  6EE6               	movwf	postinc1,c
 24070  01D862  0E02               	movlw	2
 24071  01D864  6EE6               	movwf	postinc1,c
 24072  01D866  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24073  01D86A  0060  F0AB  FFE6   	movff	btemp,postinc1
 24074  01D870  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24075  01D876  0E06               	movlw	6
 24076  01D878  6EE6               	movwf	postinc1,c
 24077  01D87A  ECE5  F0FE         	call	_sprintf	;wreg free
 24078                           
 24079                           ; BSR set to: 0
 24080                           ;mconfig.c: 61:   V.help_id++;
 24081  01D87E  EE20  F29F         	lfsr	2,_V+152	;volatile
 24082  01D882  38DF               	swapf	223,w,c
 24083  01D884  6E35               	movwf	(btemp+11)^0,c
 24084  01D886  3235               	rrcf	(btemp+11)^0,f,c
 24085  01D888  3035               	rrcf	(btemp+11)^0,w,c
 24086  01D88A  0B03               	andlw	3
 24087  01D88C  6E35               	movwf	(btemp+11)^0,c
 24088  01D88E  2A35               	incf	(btemp+11)^0,f,c
 24089  01D890  3A35               	swapf	(btemp+11)^0,f,c
 24090  01D892  3635               	rlcf	(btemp+11)^0,f,c
 24091  01D894  3635               	rlcf	(btemp+11)^0,f,c
 24092  01D896  50DF               	movf	223,w,c
 24093  01D898  1835               	xorwf	(btemp+11)^0,w,c
 24094  01D89A  0B3F               	andlw	-193
 24095  01D89C  1835               	xorwf	(btemp+11)^0,w,c
 24096  01D89E  6EDF               	movwf	223,c
 24097                           
 24098                           ; BSR set to: 0
 24099                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 24100  01D8A0  0EB8               	movlw	184
 24101  01D8A2  6EE6               	movwf	postinc1,c
 24102  01D8A4  0E0B               	movlw	11
 24103  01D8A6  6EE6               	movwf	postinc1,c
 24104  01D8A8  0E09               	movlw	9
 24105  01D8AA  6EE6               	movwf	postinc1,c
 24106  01D8AC  EC20  F011         	call	_StartTimer	;wreg free
 24107                           
 24108                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 24109  01D8B0  0EB8               	movlw	184
 24110  01D8B2  6EE6               	movwf	postinc1,c
 24111  01D8B4  0E0B               	movlw	11
 24112  01D8B6  6EE6               	movwf	postinc1,c
 24113  01D8B8  0E07               	movlw	7
 24114  01D8BA  6EE6               	movwf	postinc1,c
 24115  01D8BC  EC20  F011         	call	_StartTimer	;wreg free
 24116                           
 24117                           ;mconfig.c: 64:   mode_lamp_bright();
 24118  01D8C0  EC61  F016         	call	_mode_lamp_bright	;wreg free
 24119                           
 24120                           ;mconfig.c: 65:   update_lcd(1);
 24121  01D8C4  0E01               	movlw	1
 24122  01D8C6  6EE6               	movwf	postinc1,c
 24123  01D8C8  EC97  F0F7         	call	_update_lcd	;wreg free
 24124                           
 24125                           ;mconfig.c: 67:  } else {
 24126  01D8CC  D032               	goto	l1834
 24127  01D8CE                     l17186:
 24128                           
 24129                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 24130  01D8CE  0E09               	movlw	9
 24131  01D8D0  6EE6               	movwf	postinc1,c
 24132  01D8D2  ECAD  F013         	call	_TimerDone	;wreg free
 24133  01D8D6  502A               	movf	btemp^0,w,c
 24134  01D8D8  B4D8               	btfsc	status,2,c
 24135  01D8DA  D02B               	goto	l1834
 24136                           
 24137                           ;mconfig.c: 69:    set_vterm(0);
 24138  01D8DC  0E00               	movlw	0
 24139  01D8DE  6EE6               	movwf	postinc1,c
 24140  01D8E0  EC92  F015         	call	_set_vterm	;wreg free
 24141                           
 24142                           ;mconfig.c: 70:    V.help = 0;
 24143  01D8E4  0102               	movlb	2	; () banked
 24144  01D8E6  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 24145                           
 24146                           ; BSR set to: 2
 24147                           ;mconfig.c: 71:    set_display_info(display_help());
 24148  01D8E8  ECA7  F016         	call	_display_help	;wreg free
 24149  01D8EC  502A               	movf	btemp^0,w,c
 24150  01D8EE  6EE6               	movwf	postinc1,c
 24151  01D8F0  ECA1  F015         	call	_set_display_info	;wreg free
 24152                           
 24153                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 24154  01D8F4  0060  FA67  FFE6   	movff	_V+146,postinc1
 24155  01D8FA  0060  FA6B  FFE6   	movff	_V+147,postinc1
 24156  01D900  ECCB  F015         	call	_mode_lamp_dim	;wreg free
 24157                           
 24158                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 24159  01D904  0E0B               	movlw	11
 24160  01D906  6EE6               	movwf	postinc1,c
 24161  01D908  ECAD  F013         	call	_TimerDone	;wreg free
 24162  01D90C  502A               	movf	btemp^0,w,c
 24163  01D90E  B4D8               	btfsc	status,2,c
 24164  01D910  D010               	goto	l1834
 24165                           
 24166                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 24167  01D912  0102               	movlb	2	; () banked
 24168  01D914  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 24169  01D916  A4D8               	btfss	status,2,c
 24170  01D918  D002               	goto	u16800
 24171  01D91A  0E01               	movlw	1
 24172  01D91C  D001               	goto	u16810
 24173  01D91E                     u16800:
 24174  01D91E  0E00               	movlw	0
 24175  01D920                     u16810:
 24176  01D920  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 24177                           
 24178                           ; BSR set to: 2
 24179                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 24180  01D922  0EDC               	movlw	220
 24181  01D924  6EE6               	movwf	postinc1,c
 24182  01D926  0E05               	movlw	5
 24183  01D928  6EE6               	movwf	postinc1,c
 24184  01D92A  0E0B               	movlw	11
 24185  01D92C  6EE6               	movwf	postinc1,c
 24186  01D92E  EC20  F011         	call	_StartTimer	;wreg free
 24187  01D932                     l1834:
 24188                           
 24189                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24190  01D932  52E5               	movf	postdec1,f,c
 24191  01D934  0012               	return		;funcret
 24192  01D936                     __end_of_check_help:
 24193                           	opt callstack 0
 24194                           
 24195 ;; *************** function _vterm_dump *****************
 24196 ;; Defined at:
 24197 ;;		line 124 in file "mconfig.c"
 24198 ;; Parameters:    Size  Location     Type
 24199 ;;		None
 24200 ;; Auto vars:     Size  Location     Type
 24201 ;;		None
 24202 ;; Return value:  Size  Location     Type
 24203 ;;                  1  [STACK] void 
 24204 ;; Registers used:
 24205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24206 ;; Tracked objects:
 24207 ;;		On entry : 3F/2
 24208 ;;		On exit  : 0/0
 24209 ;;		Unchanged: 0/0
 24210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24215 ;;Total ram usage:        0 bytes
 24216 ;; Hardware stack levels used:    1
 24217 ;; Hardware stack levels required when called:   26
 24218 ;; This function calls:
 24219 ;;		_WaitMs
 24220 ;;		_eaDogM_WriteStringAtPos
 24221 ;;		_get_vterm_ptr
 24222 ;;		_sprintf
 24223 ;;		_wait_lcd_done
 24224 ;; This function is called by:
 24225 ;;		_check_help
 24226 ;; This function uses a reentrant model
 24227 ;;
 24228                           
 24229                           	psect	text77
 24230  01E38C                     __ptext77:
 24231                           	opt callstack 0
 24232  01E38C                     _vterm_dump:
 24233                           	opt callstack 3
 24234                           
 24235                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 24236                           
 24237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24238                           ;incstack = 0
 24239  01E38C  0E01               	movlw	1
 24240  01E38E  6EE6               	movwf	postinc1,c
 24241  01E390  0E00               	movlw	0
 24242  01E392  6EE6               	movwf	postinc1,c
 24243  01E394  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24244  01E398  0060  F0AB  FFE6   	movff	btemp,postinc1
 24245  01E39E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24246  01E3A4  0E00               	movlw	0
 24247  01E3A6  6EE6               	movwf	postinc1,c
 24248  01E3A8  0E00               	movlw	0
 24249  01E3AA  6EE6               	movwf	postinc1,c
 24250  01E3AC  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24251  01E3B0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24252  01E3B6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24253  01E3BC  0EA7               	movlw	low STR_81
 24254  01E3BE  6EE6               	movwf	postinc1,c
 24255  01E3C0  0EFF               	movlw	high STR_81
 24256  01E3C2  6EE6               	movwf	postinc1,c
 24257  01E3C4  0E08               	movlw	low (_V+1)
 24258  01E3C6  6EE6               	movwf	postinc1,c
 24259  01E3C8  0E02               	movlw	high (_V+1)
 24260  01E3CA  6EE6               	movwf	postinc1,c
 24261  01E3CC  0E08               	movlw	8
 24262  01E3CE  6EE6               	movwf	postinc1,c
 24263  01E3D0  ECE5  F0FE         	call	_sprintf	;wreg free
 24264                           
 24265                           ; BSR set to: 0
 24266                           ;mconfig.c: 127:  wait_lcd_done();
 24267  01E3D4  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24268                           
 24269                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 24270  01E3D8  0E08               	movlw	low (_V+1)
 24271  01E3DA  6EE6               	movwf	postinc1,c
 24272  01E3DC  0E02               	movlw	high (_V+1)
 24273  01E3DE  6EE6               	movwf	postinc1,c
 24274  01E3E0  0E00               	movlw	0
 24275  01E3E2  6EE6               	movwf	postinc1,c
 24276  01E3E4  0E00               	movlw	0
 24277  01E3E6  6EE6               	movwf	postinc1,c
 24278  01E3E8  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24279                           
 24280                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 24281  01E3EC  0E01               	movlw	1
 24282  01E3EE  6EE6               	movwf	postinc1,c
 24283  01E3F0  0E01               	movlw	1
 24284  01E3F2  6EE6               	movwf	postinc1,c
 24285  01E3F4  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24286  01E3F8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24287  01E3FE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24288  01E404  0E00               	movlw	0
 24289  01E406  6EE6               	movwf	postinc1,c
 24290  01E408  0E01               	movlw	1
 24291  01E40A  6EE6               	movwf	postinc1,c
 24292  01E40C  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24293  01E410  0060  F0AB  FFE6   	movff	btemp,postinc1
 24294  01E416  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24295  01E41C  0EA7               	movlw	low STR_81
 24296  01E41E  6EE6               	movwf	postinc1,c
 24297  01E420  0EFF               	movlw	high STR_81
 24298  01E422  6EE6               	movwf	postinc1,c
 24299  01E424  0E08               	movlw	low (_V+1)
 24300  01E426  6EE6               	movwf	postinc1,c
 24301  01E428  0E02               	movlw	high (_V+1)
 24302  01E42A  6EE6               	movwf	postinc1,c
 24303  01E42C  0E08               	movlw	8
 24304  01E42E  6EE6               	movwf	postinc1,c
 24305  01E430  ECE5  F0FE         	call	_sprintf	;wreg free
 24306                           
 24307                           ; BSR set to: 0
 24308                           ;mconfig.c: 130:  wait_lcd_done();
 24309  01E434  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24310                           
 24311                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 24312  01E438  0E08               	movlw	low (_V+1)
 24313  01E43A  6EE6               	movwf	postinc1,c
 24314  01E43C  0E02               	movlw	high (_V+1)
 24315  01E43E  6EE6               	movwf	postinc1,c
 24316  01E440  0E00               	movlw	0
 24317  01E442  6EE6               	movwf	postinc1,c
 24318  01E444  0E01               	movlw	1
 24319  01E446  6EE6               	movwf	postinc1,c
 24320  01E448  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24321                           
 24322                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 24323  01E44C  0E01               	movlw	1
 24324  01E44E  6EE6               	movwf	postinc1,c
 24325  01E450  0E02               	movlw	2
 24326  01E452  6EE6               	movwf	postinc1,c
 24327  01E454  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24328  01E458  0060  F0AB  FFE6   	movff	btemp,postinc1
 24329  01E45E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24330  01E464  0E00               	movlw	0
 24331  01E466  6EE6               	movwf	postinc1,c
 24332  01E468  0E02               	movlw	2
 24333  01E46A  6EE6               	movwf	postinc1,c
 24334  01E46C  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24335  01E470  0060  F0AB  FFE6   	movff	btemp,postinc1
 24336  01E476  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24337  01E47C  0EA7               	movlw	low STR_81
 24338  01E47E  6EE6               	movwf	postinc1,c
 24339  01E480  0EFF               	movlw	high STR_81
 24340  01E482  6EE6               	movwf	postinc1,c
 24341  01E484  0E08               	movlw	low (_V+1)
 24342  01E486  6EE6               	movwf	postinc1,c
 24343  01E488  0E02               	movlw	high (_V+1)
 24344  01E48A  6EE6               	movwf	postinc1,c
 24345  01E48C  0E08               	movlw	8
 24346  01E48E  6EE6               	movwf	postinc1,c
 24347  01E490  ECE5  F0FE         	call	_sprintf	;wreg free
 24348                           
 24349                           ; BSR set to: 0
 24350                           ;mconfig.c: 133:  wait_lcd_done();
 24351  01E494  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24352                           
 24353                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 24354  01E498  0E08               	movlw	low (_V+1)
 24355  01E49A  6EE6               	movwf	postinc1,c
 24356  01E49C  0E02               	movlw	high (_V+1)
 24357  01E49E  6EE6               	movwf	postinc1,c
 24358  01E4A0  0E00               	movlw	0
 24359  01E4A2  6EE6               	movwf	postinc1,c
 24360  01E4A4  0E02               	movlw	2
 24361  01E4A6  6EE6               	movwf	postinc1,c
 24362  01E4A8  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24363                           
 24364                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 24365  01E4AC  0E01               	movlw	1
 24366  01E4AE  6EE6               	movwf	postinc1,c
 24367  01E4B0  0E03               	movlw	3
 24368  01E4B2  6EE6               	movwf	postinc1,c
 24369  01E4B4  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24370  01E4B8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24371  01E4BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24372  01E4C4  0E00               	movlw	0
 24373  01E4C6  6EE6               	movwf	postinc1,c
 24374  01E4C8  0E03               	movlw	3
 24375  01E4CA  6EE6               	movwf	postinc1,c
 24376  01E4CC  EC2A  F013         	call	_get_vterm_ptr	;wreg free
 24377  01E4D0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24378  01E4D6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24379  01E4DC  0EA7               	movlw	low STR_81
 24380  01E4DE  6EE6               	movwf	postinc1,c
 24381  01E4E0  0EFF               	movlw	high STR_81
 24382  01E4E2  6EE6               	movwf	postinc1,c
 24383  01E4E4  0E08               	movlw	low (_V+1)
 24384  01E4E6  6EE6               	movwf	postinc1,c
 24385  01E4E8  0E02               	movlw	high (_V+1)
 24386  01E4EA  6EE6               	movwf	postinc1,c
 24387  01E4EC  0E08               	movlw	8
 24388  01E4EE  6EE6               	movwf	postinc1,c
 24389  01E4F0  ECE5  F0FE         	call	_sprintf	;wreg free
 24390                           
 24391                           ; BSR set to: 0
 24392                           ;mconfig.c: 136:  wait_lcd_done();
 24393  01E4F4  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24394                           
 24395                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 24396  01E4F8  0E08               	movlw	low (_V+1)
 24397  01E4FA  6EE6               	movwf	postinc1,c
 24398  01E4FC  0E02               	movlw	high (_V+1)
 24399  01E4FE  6EE6               	movwf	postinc1,c
 24400  01E500  0E00               	movlw	0
 24401  01E502  6EE6               	movwf	postinc1,c
 24402  01E504  0E03               	movlw	3
 24403  01E506  6EE6               	movwf	postinc1,c
 24404  01E508  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24405                           
 24406                           ; BSR set to: 59
 24407                           ;mconfig.c: 138:  WaitMs(3000);
 24408  01E50C  0EB8               	movlw	184
 24409  01E50E  6EE6               	movwf	postinc1,c
 24410  01E510  0E0B               	movlw	11
 24411  01E512  6EE6               	movwf	postinc1,c
 24412  01E514  EC2E  F012         	call	_WaitMs	;wreg free
 24413                           
 24414                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 24415  01E518  0012               	return		;funcret
 24416  01E51A                     __end_of_vterm_dump:
 24417                           	opt callstack 0
 24418                           
 24419 ;; *************** function _sprintf *****************
 24420 ;; Defined at:
 24421 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 24422 ;; Parameters:    Size  Location     Type
 24423 ;;  s               2  [STACK] PTR unsigned char 
 24424 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 24425 ;;  fmt             2  [STACK] PTR const unsigned char 
 24426 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 24427 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 24428 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 24429 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 24430 ;;		 -> STR_78(19), STR_77(19), STR_73(14), STR_72(28), 
 24431 ;;		 -> STR_71(28), STR_70(28), STR_69(22), STR_68(22), 
 24432 ;;		 -> STR_67(22), STR_66(22), STR_65(22), STR_64(22), 
 24433 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(21), 
 24434 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 24435 ;;		 -> STR_55(22), STR_54(22), STR_53(24), STR_52(24), 
 24436 ;;		 -> STR_51(24), STR_50(30), STR_49(24), STR_48(24), 
 24437 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(23), 
 24438 ;;		 -> STR_43(23), STR_42(23), STR_41(23), STR_40(23), 
 24439 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 24440 ;;		 -> STR_35(18), STR_34(17), STR_33(17), STR_32(22), 
 24441 ;;		 -> STR_31(22), STR_30(22), STR_29(14), STR_28(14), 
 24442 ;;		 -> STR_27(27), STR_26(27), STR_25(23), STR_24(22), 
 24443 ;;		 -> STR_23(22), STR_22(22), STR_21(22), STR_20(23), 
 24444 ;;		 -> STR_19(23), STR_18(23), STR_17(26), STR_16(22), 
 24445 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 24446 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24447 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24448 ;;		 -> STR_2(21), STR_1(21), 
 24449 ;; Auto vars:     Size  Location     Type
 24450 ;;  f               6  [STACK] struct _IO_FILE
 24451 ;;  ap              2  [STACK] PTR void [1]
 24452 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24453 ;;  ret             2    0        int 
 24454 ;; Return value:  Size  Location     Type
 24455 ;;                  2  [STACK] int 
 24456 ;; Registers used:
 24457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24458 ;; Tracked objects:
 24459 ;;		On entry : 0/2
 24460 ;;		On exit  : 3F/0
 24461 ;;		Unchanged: 0/0
 24462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24467 ;;Total ram usage:        0 bytes
 24468 ;; Hardware stack levels used:    1
 24469 ;; Hardware stack levels required when called:   23
 24470 ;; This function calls:
 24471 ;;		_vfprintf
 24472 ;; This function is called by:
 24473 ;;		_main
 24474 ;;		_current_sensor_cal
 24475 ;;		_display_history
 24476 ;;		_check_help
 24477 ;;		_vterm_dump
 24478 ;;		_calc_bsoc
 24479 ;; This function uses a reentrant model
 24480 ;;
 24481                           
 24482                           	psect	text78
 24483  01FDCA                     __ptext78:
 24484                           	opt callstack 0
 24485  01FDCA                     _sprintf:
 24486                           	opt callstack 0
 24487                           
 24488                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24489  01FDCA  0E08               	movlw	8
 24490  01FDCC  26E1               	addwf	fsr1l,f,c
 24491  01FDCE  0E00               	movlw	0
 24492  01FDD0  22E2               	addwfc	fsr1h,f,c
 24493                           
 24494                           ;incstack = 0
 24495 ;; hardware stack exceeded
 24496  01FDD2  0EFE               	movlw	254
 24497  01FDD4  6E34               	movwf	(btemp+10)^0,c
 24498  01FDD6  0EFF               	movlw	255
 24499  01FDD8  6E35               	movwf	(btemp+11)^0,c
 24500                           
 24501                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 24502  01FDDA  0EF5               	movlw	245
 24503  01FDDC  24E1               	addwf	fsr1l,w,c
 24504  01FDDE  6E32               	movwf	(btemp+8)^0,c
 24505  01FDE0  0EFF               	movlw	255
 24506  01FDE2  20E2               	addwfc	fsr1h,w,c
 24507  01FDE4  6E33               	movwf	(btemp+9)^0,c
 24508  01FDE6  5034               	movf	(btemp+10)^0,w,c
 24509  01FDE8  2632               	addwf	(btemp+8)^0,f,c
 24510  01FDEA  5035               	movf	(btemp+11)^0,w,c
 24511  01FDEC  2233               	addwfc	(btemp+9)^0,f,c
 24512                           
 24513                           ;stkvar	_ap @ sp[(-8)+6]
 24514  01FDEE  0EFF               	movlw	-1
 24515  01FDF0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 24516  01FDF6  0EFE               	movlw	-2
 24517  01FDF8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 24518                           
 24519                           ;stkvar	_s @ sp[(-8)+-3]
 24520  01FDFE  0EF5               	movlw	-11
 24521  01FE00  006F FF8C  F034    	movff	plusw1,btemp+10
 24522  01FE06  0EF6               	movlw	-10
 24523  01FE08  006F FF8C  F035    	movff	plusw1,btemp+11
 24524                           
 24525                           ;stkvar	_f @ sp[(-8)+0]
 24526  01FE0E  0EF9               	movlw	-7
 24527  01FE10  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24528  01FE16  0EF8               	movlw	-8
 24529  01FE18  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24530                           
 24531                           ;stkvar	_f @ sp[(-8)+0]
 24532  01FE1E  0EFA               	movlw	250
 24533  01FE20  24E1               	addwf	fsr1l,w,c
 24534  01FE22  6ED9               	movwf	fsr2l,c
 24535  01FE24  0EFF               	movlw	255
 24536  01FE26  20E2               	addwfc	fsr1h,w,c
 24537  01FE28  6EDA               	movwf	fsr2h,c
 24538  01FE2A  0E00               	movlw	0
 24539  01FE2C  6EDE               	movwf	postinc2,c
 24540  01FE2E  0E00               	movlw	0
 24541  01FE30  6EDD               	movwf	postdec2,c
 24542                           
 24543                           ;stkvar	_f @ sp[(-8)+0]
 24544  01FE32  0EFC               	movlw	252
 24545  01FE34  24E1               	addwf	fsr1l,w,c
 24546  01FE36  6ED9               	movwf	fsr2l,c
 24547  01FE38  0EFF               	movlw	255
 24548  01FE3A  20E2               	addwfc	fsr1h,w,c
 24549  01FE3C  6EDA               	movwf	fsr2h,c
 24550  01FE3E  0E00               	movlw	0
 24551  01FE40  6EDE               	movwf	postinc2,c
 24552  01FE42  0E00               	movlw	0
 24553  01FE44  6EDD               	movwf	postdec2,c
 24554                           
 24555                           ;stkvar	_ap @ sp[(-8)+6]
 24556  01FE46  0EFE               	movlw	254
 24557  01FE48  24E1               	addwf	fsr1l,w,c
 24558  01FE4A  6E2A               	movwf	btemp^0,c
 24559  01FE4C  0EFF               	movlw	255
 24560  01FE4E  20E2               	addwfc	fsr1h,w,c
 24561  01FE50  6E2B               	movwf	(btemp+1)^0,c
 24562  01FE52  0060  F0AB  FFE6   	movff	btemp,postinc1
 24563  01FE58  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24564                           
 24565                           ;stkvar	_fmt @ sp[(-10)+-5]
 24566  01FE5E  0EF1               	movlw	-15
 24567  01FE60  006F FF8F FFE6     	movff	plusw1,postinc1
 24568  01FE66  006F FF8F FFE6     	movff	plusw1,postinc1
 24569                           
 24570                           ;stkvar	_f @ sp[(-12)+0]
 24571  01FE6C  0EF4               	movlw	244
 24572  01FE6E  24E1               	addwf	fsr1l,w,c
 24573  01FE70  6E2A               	movwf	btemp^0,c
 24574  01FE72  0EFF               	movlw	255
 24575  01FE74  20E2               	addwfc	fsr1h,w,c
 24576  01FE76  6E2B               	movwf	(btemp+1)^0,c
 24577  01FE78  0060  F0AB  FFE6   	movff	btemp,postinc1
 24578  01FE7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24579  01FE84  EC13  F006         	call	_vfprintf	;wreg free
 24580                           
 24581                           ; BSR set to: 0
 24582                           ;stkvar	_f @ sp[(-8)+0]
 24583  01FE88  0EFA               	movlw	250
 24584  01FE8A  24E1               	addwf	fsr1l,w,c
 24585  01FE8C  6ED9               	movwf	fsr2l,c
 24586  01FE8E  0EFF               	movlw	255
 24587  01FE90  20E2               	addwfc	fsr1h,w,c
 24588  01FE92  6EDA               	movwf	fsr2h,c
 24589  01FE94  006F FF78  F034    	movff	postinc2,btemp+10
 24590  01FE9A  006F FF74  F035    	movff	postdec2,btemp+11
 24591                           
 24592                           ;stkvar	_s @ sp[(-8)+-3]
 24593  01FEA0  0EF5               	movlw	-11
 24594  01FEA2  006F FF8C  F032    	movff	plusw1,btemp+8
 24595  01FEA8  0EF6               	movlw	-10
 24596  01FEAA  006F FF8C  F033    	movff	plusw1,btemp+9
 24597  01FEB0  5034               	movf	(btemp+10)^0,w,c
 24598  01FEB2  2432               	addwf	(btemp+8)^0,w,c
 24599  01FEB4  6ED9               	movwf	fsr2l,c
 24600  01FEB6  5035               	movf	(btemp+11)^0,w,c
 24601  01FEB8  2033               	addwfc	(btemp+9)^0,w,c
 24602  01FEBA  6EDA               	movwf	fsr2h,c
 24603  01FEBC  0E00               	movlw	0
 24604  01FEBE  6EDF               	movwf	indf2,c
 24605                           
 24606                           ; BSR set to: 0
 24607                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 24608  01FEC0  0EF8               	movlw	248
 24609  01FEC2  26E1               	addwf	fsr1l,f,c
 24610  01FEC4  0EFF               	movlw	255
 24611  01FEC6  22E2               	addwfc	fsr1h,f,c
 24612  01FEC8  52E5               	movf	postdec1,f,c
 24613  01FECA  50E7               	movf	indf1,w,c
 24614  01FECC  5EE1               	subwf	fsr1l,f,c
 24615  01FECE  0E00               	movlw	0
 24616  01FED0  5AE2               	subwfb	fsr1h,f,c
 24617  01FED2  0012               	return		;funcret
 24618  01FED4                     __end_of_sprintf:
 24619                           	opt callstack 0
 24620                           
 24621 ;; *************** function _get_vterm_ptr *****************
 24622 ;; Defined at:
 24623 ;;		line 119 in file "mconfig.c"
 24624 ;; Parameters:    Size  Location     Type
 24625 ;;  line            1  [STACK] const unsigned char 
 24626 ;;  vterm           1  [STACK] const unsigned char 
 24627 ;; Auto vars:     Size  Location     Type
 24628 ;;		None
 24629 ;; Return value:  Size  Location     Type
 24630 ;;                  2  [STACK] PTR unsigned char 
 24631 ;; Registers used:
 24632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24633 ;; Tracked objects:
 24634 ;;		On entry : 0/2
 24635 ;;		On exit  : 0/0
 24636 ;;		Unchanged: 0/0
 24637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24642 ;;Total ram usage:        0 bytes
 24643 ;; Hardware stack levels used:    1
 24644 ;; Hardware stack levels required when called:   15
 24645 ;; This function calls:
 24646 ;;		Nothing
 24647 ;; This function is called by:
 24648 ;;		_main
 24649 ;;		_current_sensor_cal
 24650 ;;		_display_history
 24651 ;;		_check_help
 24652 ;;		_vterm_dump
 24653 ;; This function uses a reentrant model
 24654 ;;
 24655                           
 24656                           	psect	text79
 24657  002654                     __ptext79:
 24658                           	opt callstack 0
 24659  002654                     _get_vterm_ptr:
 24660                           	opt callstack 15
 24661                           
 24662                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 24663                           ;stkvar	_vterm @ sp[(0)+-2]
 24664                           
 24665                           ; BSR set to: 0
 24666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24667                           ;incstack = 0
 24668  002654  0EFE               	movlw	-2
 24669  002656  50E3               	movf	plusw1,w,c
 24670  002658  0B03               	andlw	3
 24671  00265A  0DA0               	mullw	160
 24672  00265C  0EFF               	movlw	low _D
 24673  00265E  6E2A               	movwf	btemp^0,c
 24674  002660  0E06               	movlw	high _D
 24675  002662  6E2B               	movwf	(btemp+1)^0,c
 24676  002664  50F3               	movf	243,w,c
 24677  002666  262A               	addwf	btemp^0,f,c
 24678  002668  50F4               	movf	244,w,c
 24679  00266A  222B               	addwfc	(btemp+1)^0,f,c
 24680                           
 24681                           ;stkvar	_line @ sp[(0)+-1]
 24682  00266C  0EFF               	movlw	-1
 24683  00266E  50E3               	movf	plusw1,w,c
 24684  002670  0B03               	andlw	3
 24685  002672  0D28               	mullw	40
 24686  002674  50F3               	movf	243,w,c
 24687  002676  262A               	addwf	btemp^0,f,c
 24688  002678  50F4               	movf	244,w,c
 24689  00267A  222B               	addwfc	(btemp+1)^0,f,c
 24690                           
 24691                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24692  00267C  52E5               	movf	postdec1,f,c
 24693  00267E  52E5               	movf	postdec1,f,c
 24694  002680  0012               	return		;funcret
 24695  002682                     __end_of_get_vterm_ptr:
 24696                           	opt callstack 0
 24697                           
 24698 ;; *************** function _WaitMs *****************
 24699 ;; Defined at:
 24700 ;;		line 32 in file "timers.c"
 24701 ;; Parameters:    Size  Location     Type
 24702 ;;  numMilliseco    2  [STACK] const unsigned short 
 24703 ;; Auto vars:     Size  Location     Type
 24704 ;;		None
 24705 ;; Return value:  Size  Location     Type
 24706 ;;                  1  [STACK] void 
 24707 ;; Registers used:
 24708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24709 ;; Tracked objects:
 24710 ;;		On entry : 0/2
 24711 ;;		On exit  : 0/0
 24712 ;;		Unchanged: 0/0
 24713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24718 ;;Total ram usage:        0 bytes
 24719 ;; Hardware stack levels used:    1
 24720 ;; Hardware stack levels required when called:   16
 24721 ;; This function calls:
 24722 ;;		_StartTimer
 24723 ;;		_TimerDone
 24724 ;; This function is called by:
 24725 ;;		_main
 24726 ;;		_current_sensor_cal
 24727 ;;		_display_history
 24728 ;;		_vterm_dump
 24729 ;; This function uses a reentrant model
 24730 ;;
 24731                           
 24732                           	psect	text80
 24733  00245C                     __ptext80:
 24734                           	opt callstack 0
 24735  00245C                     _WaitMs:
 24736                           	opt callstack 13
 24737                           
 24738                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 24739                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 24740                           
 24741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24742                           ;incstack = 0
 24743  00245C  0EFE               	movlw	-2
 24744  00245E  006F FF8F FFE6     	movff	plusw1,postinc1
 24745  002464  006F FF8F FFE6     	movff	plusw1,postinc1
 24746  00246A  0E00               	movlw	0
 24747  00246C  6EE6               	movwf	postinc1,c
 24748  00246E  EC20  F011         	call	_StartTimer	;wreg free
 24749                           
 24750                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24751  002472  D005               	goto	l12838
 24752  002474                     l1765:
 24753                           
 24754                           ;timers.c: 36:   __nop();
 24755  002474  F000               	nop	
 24756                           
 24757                           ;timers.c: 37:   __nop();
 24758  002476  F000               	nop	
 24759                           
 24760                           ;timers.c: 38:   __nop();
 24761  002478  F000               	nop	
 24762                           
 24763                           ;timers.c: 39:   __nop();
 24764  00247A  F000               	nop	
 24765  00247C  0004               	clrwdt		;# 
 24766  00247E                     l12838:
 24767                           
 24768                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24769  00247E  0E00               	movlw	0
 24770  002480  6EE6               	movwf	postinc1,c
 24771  002482  ECAD  F013         	call	_TimerDone	;wreg free
 24772  002486  502A               	movf	btemp^0,w,c
 24773  002488  B4D8               	btfsc	status,2,c
 24774  00248A  D7F4               	goto	l1765
 24775                           
 24776                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24777  00248C  52E5               	movf	postdec1,f,c
 24778  00248E  52E5               	movf	postdec1,f,c
 24779  002490  0012               	return		;funcret
 24780  002492                     __end_of_WaitMs:
 24781                           	opt callstack 0
 24782                           
 24783 ;; *************** function _update_lcd *****************
 24784 ;; Defined at:
 24785 ;;		line 85 in file "mconfig.c"
 24786 ;; Parameters:    Size  Location     Type
 24787 ;;  vterm           1  [STACK] unsigned char 
 24788 ;; Auto vars:     Size  Location     Type
 24789 ;;		None
 24790 ;; Return value:  Size  Location     Type
 24791 ;;                  1  [STACK] unsigned char 
 24792 ;; Registers used:
 24793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24794 ;; Tracked objects:
 24795 ;;		On entry : 0/0
 24796 ;;		On exit  : 0/0
 24797 ;;		Unchanged: 0/0
 24798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24803 ;;Total ram usage:        0 bytes
 24804 ;; Hardware stack levels used:    1
 24805 ;; Hardware stack levels required when called:   26
 24806 ;; This function calls:
 24807 ;;		_eaDogM_WriteStringAtPos
 24808 ;;		_wait_lcd_done
 24809 ;; This function is called by:
 24810 ;;		_main
 24811 ;;		_current_sensor_cal
 24812 ;;		_display_history
 24813 ;;		_check_help
 24814 ;; This function uses a reentrant model
 24815 ;;
 24816                           
 24817                           	psect	text81
 24818  01EF2E                     __ptext81:
 24819                           	opt callstack 0
 24820  01EF2E                     _update_lcd:
 24821                           	opt callstack 4
 24822                           
 24823                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 24824                           ;stkvar	_vterm @ sp[(0)+-1]
 24825                           
 24826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24827                           ;incstack = 0
 24828  01EF2E  0EFF               	movlw	-1
 24829  01EF30  006F FF8C  F02A    	movff	plusw1,btemp
 24830  01EF36  0E03               	movlw	3
 24831  01EF38  162A               	andwf	btemp^0,f,c
 24832  01EF3A  0EFF               	movlw	-1
 24833  01EF3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 24834                           
 24835                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 24836  01EF42  EE22  F17F         	lfsr	2,_D+640
 24837  01EF46  A0DF               	btfss	indf2,0,c
 24838  01EF48  D004               	goto	l16732
 24839                           
 24840                           ;stkvar	_vterm @ sp[(0)+-1]
 24841  01EF4A  0EFF               	movlw	-1
 24842  01EF4C  50E3               	movf	plusw1,w,c
 24843  01EF4E  B4D8               	btfsc	status,2,c
 24844  01EF50  D09C               	goto	l1841
 24845  01EF52                     l16732:
 24846                           
 24847                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 24848                           ;stkvar	_vterm @ sp[(0)+-1]
 24849  01EF52  0EFF               	movlw	-1
 24850  01EF54  50E3               	movf	plusw1,w,c
 24851  01EF56  0DA0               	mullw	160
 24852  01EF58  0E13               	movlw	low (_D+20)
 24853  01EF5A  24F3               	addwf	243,w,c
 24854  01EF5C  6ED9               	movwf	fsr2l,c
 24855  01EF5E  0E07               	movlw	high (_D+20)
 24856  01EF60  20F4               	addwfc	prodh,w,c
 24857  01EF62  6EDA               	movwf	fsr2h,c
 24858  01EF64  0E00               	movlw	0
 24859  01EF66  6EDF               	movwf	indf2,c
 24860                           
 24861                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 24862                           ;stkvar	_vterm @ sp[(0)+-1]
 24863  01EF68  0EFF               	movlw	-1
 24864  01EF6A  50E3               	movf	plusw1,w,c
 24865  01EF6C  0DA0               	mullw	160
 24866  01EF6E  0E3B               	movlw	low (_D+60)
 24867  01EF70  24F3               	addwf	243,w,c
 24868  01EF72  6ED9               	movwf	fsr2l,c
 24869  01EF74  0E07               	movlw	high (_D+60)
 24870  01EF76  20F4               	addwfc	prodh,w,c
 24871  01EF78  6EDA               	movwf	fsr2h,c
 24872  01EF7A  0E00               	movlw	0
 24873  01EF7C  6EDF               	movwf	indf2,c
 24874                           
 24875                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 24876                           ;stkvar	_vterm @ sp[(0)+-1]
 24877  01EF7E  0EFF               	movlw	-1
 24878  01EF80  50E3               	movf	plusw1,w,c
 24879  01EF82  0DA0               	mullw	160
 24880  01EF84  0E63               	movlw	low (_D+100)
 24881  01EF86  24F3               	addwf	243,w,c
 24882  01EF88  6ED9               	movwf	fsr2l,c
 24883  01EF8A  0E07               	movlw	high (_D+100)
 24884  01EF8C  20F4               	addwfc	prodh,w,c
 24885  01EF8E  6EDA               	movwf	fsr2h,c
 24886  01EF90  0E00               	movlw	0
 24887  01EF92  6EDF               	movwf	indf2,c
 24888                           
 24889                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 24890                           ;stkvar	_vterm @ sp[(0)+-1]
 24891  01EF94  0EFF               	movlw	-1
 24892  01EF96  50E3               	movf	plusw1,w,c
 24893  01EF98  0DA0               	mullw	160
 24894  01EF9A  0E8B               	movlw	low (_D+140)
 24895  01EF9C  24F3               	addwf	243,w,c
 24896  01EF9E  6ED9               	movwf	fsr2l,c
 24897  01EFA0  0E07               	movlw	high (_D+140)
 24898  01EFA2  20F4               	addwfc	prodh,w,c
 24899  01EFA4  6EDA               	movwf	fsr2h,c
 24900  01EFA6  0E00               	movlw	0
 24901  01EFA8  6EDF               	movwf	indf2,c
 24902                           
 24903                           ;mconfig.c: 96:  wait_lcd_done();
 24904  01EFAA  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24905                           
 24906                           ; BSR set to: 61
 24907                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 24908                           ;stkvar	_vterm @ sp[(0)+-1]
 24909  01EFAE  0EFF               	movlw	-1
 24910  01EFB0  50E3               	movf	plusw1,w,c
 24911  01EFB2  0DA0               	mullw	160
 24912  01EFB4  0EFF               	movlw	low _D
 24913  01EFB6  6E34               	movwf	(btemp+10)^0,c
 24914  01EFB8  0E06               	movlw	high _D
 24915  01EFBA  6E35               	movwf	(btemp+11)^0,c
 24916  01EFBC  50F3               	movf	243,w,c
 24917  01EFBE  2634               	addwf	(btemp+10)^0,f,c
 24918  01EFC0  50F4               	movf	244,w,c
 24919  01EFC2  2235               	addwfc	(btemp+11)^0,f,c
 24920  01EFC4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24921  01EFCA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24922  01EFD0  0E00               	movlw	0
 24923  01EFD2  6EE6               	movwf	postinc1,c
 24924  01EFD4  0E00               	movlw	0
 24925  01EFD6  6EE6               	movwf	postinc1,c
 24926  01EFD8  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24927                           
 24928                           ; BSR set to: 59
 24929                           ;mconfig.c: 98:  wait_lcd_done();
 24930  01EFDC  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24931                           
 24932                           ; BSR set to: 61
 24933                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 24934                           ;stkvar	_vterm @ sp[(0)+-1]
 24935  01EFE0  0EFF               	movlw	-1
 24936  01EFE2  50E3               	movf	plusw1,w,c
 24937  01EFE4  0DA0               	mullw	160
 24938  01EFE6  0EFF               	movlw	low _D
 24939  01EFE8  6E34               	movwf	(btemp+10)^0,c
 24940  01EFEA  0E06               	movlw	high _D
 24941  01EFEC  6E35               	movwf	(btemp+11)^0,c
 24942  01EFEE  0E28               	movlw	40
 24943  01EFF0  2634               	addwf	(btemp+10)^0,f,c
 24944  01EFF2  0E00               	movlw	0
 24945  01EFF4  2235               	addwfc	(btemp+11)^0,f,c
 24946  01EFF6  50F3               	movf	243,w,c
 24947  01EFF8  2634               	addwf	(btemp+10)^0,f,c
 24948  01EFFA  50F4               	movf	244,w,c
 24949  01EFFC  2235               	addwfc	(btemp+11)^0,f,c
 24950  01EFFE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24951  01F004  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24952  01F00A  0E00               	movlw	0
 24953  01F00C  6EE6               	movwf	postinc1,c
 24954  01F00E  0E01               	movlw	1
 24955  01F010  6EE6               	movwf	postinc1,c
 24956  01F012  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24957                           
 24958                           ; BSR set to: 59
 24959                           ;mconfig.c: 100:  wait_lcd_done();
 24960  01F016  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24961                           
 24962                           ; BSR set to: 61
 24963                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 24964                           ;stkvar	_vterm @ sp[(0)+-1]
 24965  01F01A  0EFF               	movlw	-1
 24966  01F01C  50E3               	movf	plusw1,w,c
 24967  01F01E  0DA0               	mullw	160
 24968  01F020  0EFF               	movlw	low _D
 24969  01F022  6E34               	movwf	(btemp+10)^0,c
 24970  01F024  0E06               	movlw	high _D
 24971  01F026  6E35               	movwf	(btemp+11)^0,c
 24972  01F028  0E50               	movlw	80
 24973  01F02A  2634               	addwf	(btemp+10)^0,f,c
 24974  01F02C  0E00               	movlw	0
 24975  01F02E  2235               	addwfc	(btemp+11)^0,f,c
 24976  01F030  50F3               	movf	243,w,c
 24977  01F032  2634               	addwf	(btemp+10)^0,f,c
 24978  01F034  50F4               	movf	244,w,c
 24979  01F036  2235               	addwfc	(btemp+11)^0,f,c
 24980  01F038  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24981  01F03E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24982  01F044  0E00               	movlw	0
 24983  01F046  6EE6               	movwf	postinc1,c
 24984  01F048  0E02               	movlw	2
 24985  01F04A  6EE6               	movwf	postinc1,c
 24986  01F04C  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24987                           
 24988                           ; BSR set to: 59
 24989                           ;mconfig.c: 102:  wait_lcd_done();
 24990  01F050  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24991                           
 24992                           ; BSR set to: 61
 24993                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 24994                           ;stkvar	_vterm @ sp[(0)+-1]
 24995  01F054  0EFF               	movlw	-1
 24996  01F056  50E3               	movf	plusw1,w,c
 24997  01F058  0DA0               	mullw	160
 24998  01F05A  0EFF               	movlw	low _D
 24999  01F05C  6E34               	movwf	(btemp+10)^0,c
 25000  01F05E  0E06               	movlw	high _D
 25001  01F060  6E35               	movwf	(btemp+11)^0,c
 25002  01F062  0E78               	movlw	120
 25003  01F064  2634               	addwf	(btemp+10)^0,f,c
 25004  01F066  0E00               	movlw	0
 25005  01F068  2235               	addwfc	(btemp+11)^0,f,c
 25006  01F06A  50F3               	movf	243,w,c
 25007  01F06C  2634               	addwf	(btemp+10)^0,f,c
 25008  01F06E  50F4               	movf	244,w,c
 25009  01F070  2235               	addwfc	(btemp+11)^0,f,c
 25010  01F072  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25011  01F078  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25012  01F07E  0E00               	movlw	0
 25013  01F080  6EE6               	movwf	postinc1,c
 25014  01F082  0E03               	movlw	3
 25015  01F084  6EE6               	movwf	postinc1,c
 25016  01F086  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 25017  01F08A                     l1841:
 25018                           
 25019                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 25020  01F08A  52E5               	movf	postdec1,f,c
 25021  01F08C  0012               	return		;funcret
 25022  01F08E                     __end_of_update_lcd:
 25023                           	opt callstack 0
 25024                           
 25025 ;; *************** function _eaDogM_WriteStringAtPos *****************
 25026 ;; Defined at:
 25027 ;;		line 195 in file "eadog.c"
 25028 ;; Parameters:    Size  Location     Type
 25029 ;;  r               1  [STACK] const unsigned char 
 25030 ;;  c               1  [STACK] const unsigned char 
 25031 ;;  strPtr          2  [STACK] PTR unsigned char 
 25032 ;;		 -> D.lcd(640), D(642), V(181), 
 25033 ;; Auto vars:     Size  Location     Type
 25034 ;;  row             1  [STACK] unsigned char 
 25035 ;; Return value:  Size  Location     Type
 25036 ;;                  1  [STACK] void 
 25037 ;; Registers used:
 25038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25039 ;; Tracked objects:
 25040 ;;		On entry : 3F/3D
 25041 ;;		On exit  : 3F/3B
 25042 ;;		Unchanged: 0/0
 25043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25048 ;;Total ram usage:        0 bytes
 25049 ;; Hardware stack levels used:    1
 25050 ;; Hardware stack levels required when called:   25
 25051 ;; This function calls:
 25052 ;;		_eaDogM_WriteString
 25053 ;;		_send_lcd_cmd_dma
 25054 ;;		_send_lcd_data_dma
 25055 ;;		_wait_lcd_done
 25056 ;; This function is called by:
 25057 ;;		_update_lcd
 25058 ;;		_vterm_dump
 25059 ;; This function uses a reentrant model
 25060 ;;
 25061                           
 25062                           	psect	text82
 25063  00112C                     __ptext82:
 25064                           	opt callstack 0
 25065  00112C                     _eaDogM_WriteStringAtPos:
 25066                           	opt callstack 0
 25067                           
 25068                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25069  00112C  52E6               	movf	postinc1,f,c
 25070                           
 25071                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 25072                           
 25073                           ;incstack = 0
 25074  00112E  D013               	goto	l16678
 25075  001130                     l16666:
 25076                           
 25077                           ;eadog.c: 201:   row = 0x40;
 25078                           ;stkvar	_row @ sp[(-1)+0]
 25079  001130  0EFF               	movlw	-1
 25080  001132  6AE3               	clrf	plusw1,c
 25081  001134  8CE3               	bsf	plusw1,6,c
 25082                           
 25083                           ;eadog.c: 202:   break;
 25084  001136  D025               	goto	l16680
 25085  001138                     l16668:
 25086                           
 25087                           ;eadog.c: 204:   row = 0x14;
 25088                           ;stkvar	_row @ sp[(-1)+0]
 25089  001138  0EFF               	movlw	-1
 25090  00113A  6AE3               	clrf	plusw1,c
 25091  00113C  84E3               	bsf	plusw1,2,c
 25092  00113E  88E3               	bsf	plusw1,4,c	;indir
 25093                           
 25094                           ;eadog.c: 205:   break;
 25095  001140  D020               	goto	l16680
 25096  001142                     l16670:
 25097                           
 25098                           ;eadog.c: 207:   row = 0x54;
 25099  001142  0E54               	movlw	84
 25100  001144  6E35               	movwf	(btemp+11)^0,c
 25101                           
 25102                           ;stkvar	_row @ sp[(-1)+0]
 25103  001146  0EFF               	movlw	-1
 25104  001148  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25105                           
 25106                           ;eadog.c: 208:   break;
 25107  00114E  D019               	goto	l16680
 25108  001150                     l16672:
 25109                           
 25110                           ;eadog.c: 210:   row = 0x00;
 25111                           ;stkvar	_row @ sp[(-1)+0]
 25112  001150  0EFF               	movlw	-1
 25113  001152  6AE3               	clrf	plusw1,c
 25114                           
 25115                           ;eadog.c: 211:   break;
 25116  001154  D016               	goto	l16680
 25117  001156                     l16678:
 25118                           
 25119                           ;stkvar	_r @ sp[(-1)+-1]
 25120  001156  0EFE               	movlw	-2
 25121  001158  50E3               	movf	plusw1,w,c
 25122  00115A  6E34               	movwf	(btemp+10)^0,c
 25123  00115C  6A35               	clrf	(btemp+11)^0,c
 25124                           
 25125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25126                           ; Switch size 1, requested type "simple"
 25127                           ; Number of cases is 1, Range of values is 0 to 0
 25128                           ; switch strategies available:
 25129                           ; Name         Instructions Cycles
 25130                           ; simple_byte            4     3 (average)
 25131                           ;	Chosen strategy is simple_byte
 25132  00115E  5035               	movf	(btemp+11)^0,w,c
 25133  001160  0A00               	xorlw	0	; case 0
 25134  001162  A4D8               	btfss	status,2,c
 25135  001164  D7E5               	goto	l16666
 25136                           
 25137                           ; Switch size 1, requested type "simple"
 25138                           ; Number of cases is 4, Range of values is 0 to 3
 25139                           ; switch strategies available:
 25140                           ; Name         Instructions Cycles
 25141                           ; simple_byte           13     7 (average)
 25142                           ;	Chosen strategy is simple_byte
 25143  001166  5034               	movf	(btemp+10)^0,w,c
 25144  001168  0A00               	xorlw	0	; case 0
 25145  00116A  B4D8               	btfsc	status,2,c
 25146  00116C  D7E1               	goto	l16666
 25147  00116E  0A01               	xorlw	1	; case 1
 25148  001170  B4D8               	btfsc	status,2,c
 25149  001172  D7E2               	goto	l16668
 25150  001174  0A03               	xorlw	3	; case 2
 25151  001176  B4D8               	btfsc	status,2,c
 25152  001178  D7E4               	goto	l16670
 25153  00117A  0A01               	xorlw	1	; case 3
 25154  00117C  B4D8               	btfsc	status,2,c
 25155  00117E  D7E8               	goto	l16672
 25156  001180  D7D7               	goto	l16666
 25157  001182                     l16680:
 25158                           
 25159                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 25160  001182  0E45               	movlw	69
 25161  001184  6EE6               	movwf	postinc1,c
 25162  001186  EC83  F015         	call	_send_lcd_cmd_dma	;wreg free
 25163                           
 25164                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 25165                           ;stkvar	_c @ sp[(-1)+-2]
 25166  00118A  0EFD               	movlw	-3
 25167  00118C  006F FF8C  F035    	movff	plusw1,btemp+11
 25168                           
 25169                           ;stkvar	_row @ sp[(-1)+0]
 25170  001192  0EFF               	movlw	-1
 25171  001194  50E3               	movf	plusw1,w,c
 25172  001196  2435               	addwf	(btemp+11)^0,w,c
 25173  001198  6EE6               	movwf	postinc1,c
 25174  00119A  EC34  F010         	call	_send_lcd_data_dma	;wreg free
 25175                           
 25176                           ; BSR set to: 59
 25177                           ;eadog.c: 218:  wait_lcd_done();
 25178  00119E  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25179                           
 25180                           ; BSR set to: 61
 25181                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 25182                           ;stkvar	_strPtr @ sp[(-1)+-4]
 25183  0011A2  0EFB               	movlw	-5
 25184  0011A4  006F FF8F FFE6     	movff	plusw1,postinc1
 25185  0011AA  006F FF8F FFE6     	movff	plusw1,postinc1
 25186  0011B0  ECBE  F006         	call	_eaDogM_WriteString	;wreg free
 25187                           
 25188                           ; BSR set to: 59
 25189                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 25190  0011B4  0EFB               	movlw	251
 25191  0011B6  26E1               	addwf	fsr1l,f,c
 25192  0011B8  0EFF               	movlw	255
 25193  0011BA  22E2               	addwfc	fsr1h,f,c
 25194  0011BC  0012               	return		;funcret
 25195  0011BE                     __end_of_eaDogM_WriteStringAtPos:
 25196                           	opt callstack 0
 25197                           
 25198 ;; *************** function _send_lcd_cmd_dma *****************
 25199 ;; Defined at:
 25200 ;;		line 171 in file "eadog.c"
 25201 ;; Parameters:    Size  Location     Type
 25202 ;;  strPtr          1  [STACK] const unsigned char 
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;		None
 25205 ;; Return value:  Size  Location     Type
 25206 ;;                  1  [STACK] void 
 25207 ;; Registers used:
 25208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25209 ;; Tracked objects:
 25210 ;;		On entry : 0/3D
 25211 ;;		On exit  : 3F/3D
 25212 ;;		Unchanged: 0/0
 25213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25218 ;;Total ram usage:        0 bytes
 25219 ;; Hardware stack levels used:    1
 25220 ;; Hardware stack levels required when called:   18
 25221 ;; This function calls:
 25222 ;;		_send_lcd_data_dma
 25223 ;;		_wait_lcd_done
 25224 ;; This function is called by:
 25225 ;;		_eaDogM_WriteStringAtPos
 25226 ;;		_eaDogM_WriteCommand
 25227 ;; This function uses a reentrant model
 25228 ;;
 25229                           
 25230                           	psect	text83
 25231  002B06                     __ptext83:
 25232                           	opt callstack 0
 25233  002B06                     _send_lcd_cmd_dma:
 25234                           	opt callstack 10
 25235                           
 25236                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 25237                           
 25238                           ; BSR set to: 59
 25239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25240                           ;incstack = 0
 25241  002B06  0EFE               	movlw	254
 25242  002B08  6EE6               	movwf	postinc1,c
 25243  002B0A  EC34  F010         	call	_send_lcd_data_dma	;wreg free
 25244                           
 25245                           ; BSR set to: 59
 25246                           ;eadog.c: 174:  wait_lcd_done();
 25247  002B0E  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25248                           
 25249                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 25250                           ;stkvar	_strPtr @ sp[(0)+-1]
 25251  002B12  0EFF               	movlw	-1
 25252  002B14  50E3               	movf	plusw1,w,c
 25253  002B16  6EE6               	movwf	postinc1,c
 25254  002B18  EC34  F010         	call	_send_lcd_data_dma	;wreg free
 25255                           
 25256                           ; BSR set to: 59
 25257                           ;eadog.c: 176:  wait_lcd_done();
 25258  002B1C  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25259                           
 25260                           ; BSR set to: 61
 25261                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25262  002B20  52E5               	movf	postdec1,f,c
 25263  002B22  0012               	return		;funcret
 25264  002B24                     __end_of_send_lcd_cmd_dma:
 25265                           	opt callstack 0
 25266                           
 25267 ;; *************** function _wait_lcd_done *****************
 25268 ;; Defined at:
 25269 ;;		line 443 in file "eadog.c"
 25270 ;; Parameters:    Size  Location     Type
 25271 ;;		None
 25272 ;; Auto vars:     Size  Location     Type
 25273 ;;		None
 25274 ;; Return value:  Size  Location     Type
 25275 ;;                  1  [STACK] void 
 25276 ;; Registers used:
 25277 ;;		None
 25278 ;; Tracked objects:
 25279 ;;		On entry : 0/2
 25280 ;;		On exit  : 3F/3D
 25281 ;;		Unchanged: 0/0
 25282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25287 ;;Total ram usage:        0 bytes
 25288 ;; Hardware stack levels used:    1
 25289 ;; Hardware stack levels required when called:   15
 25290 ;; This function calls:
 25291 ;;		Nothing
 25292 ;; This function is called by:
 25293 ;;		_main
 25294 ;;		_send_lcd_cmd_dma
 25295 ;;		_eaDogM_WriteStringAtPos
 25296 ;;		_update_lcd
 25297 ;;		_vterm_dump
 25298 ;; This function uses a reentrant model
 25299 ;;
 25300                           
 25301                           	psect	text84
 25302  002CB4                     __ptext84:
 25303                           	opt callstack 0
 25304  002CB4                     _wait_lcd_done:
 25305                           	opt callstack 15
 25306                           
 25307                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 25308                           
 25309                           ; BSR set to: 61
 25310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25311                           ;incstack = 0
 25312  002CB4  0100               	movlb	0	; () banked
 25313  002CB6  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 25314  002CB8  D7FD               	goto	_wait_lcd_done
 25315  002CBA                     u10880:
 25316  002CBA  013D               	movlb	61	; () banked
 25317  002CBC  BB17               	btfsc	23,5,b	;volatile
 25318  002CBE  0012               	return	
 25319  002CC0  D7FC               	goto	u10880
 25320  002CC2                     __end_of_wait_lcd_done:
 25321                           	opt callstack 0
 25322                           
 25323 ;; *************** function _send_lcd_data_dma *****************
 25324 ;; Defined at:
 25325 ;;		line 182 in file "eadog.c"
 25326 ;; Parameters:    Size  Location     Type
 25327 ;;  strPtr          1  [STACK] const unsigned char 
 25328 ;; Auto vars:     Size  Location     Type
 25329 ;;		None
 25330 ;; Return value:  Size  Location     Type
 25331 ;;                  1  [STACK] void 
 25332 ;; Registers used:
 25333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25334 ;; Tracked objects:
 25335 ;;		On entry : 0/3D
 25336 ;;		On exit  : 3F/3B
 25337 ;;		Unchanged: 0/0
 25338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25343 ;;Total ram usage:        0 bytes
 25344 ;; Hardware stack levels used:    1
 25345 ;; Hardware stack levels required when called:   17
 25346 ;; This function calls:
 25347 ;;		_ringBufS_flush
 25348 ;;		_ringBufS_put_dma
 25349 ;;		_start_lcd
 25350 ;;		_wait_lcd_set
 25351 ;; This function is called by:
 25352 ;;		_send_lcd_cmd_dma
 25353 ;;		_eaDogM_WriteStringAtPos
 25354 ;; This function uses a reentrant model
 25355 ;;
 25356                           
 25357                           	psect	text85
 25358  002068                     __ptext85:
 25359                           	opt callstack 0
 25360  002068                     _send_lcd_data_dma:
 25361                           	opt callstack 11
 25362                           
 25363                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 25364                           
 25365                           ; BSR set to: 61
 25366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25367                           ;incstack = 0
 25368  002068  ECB8  F016         	call	_wait_lcd_set	;wreg free
 25369                           
 25370                           ; BSR set to: 0
 25371                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 25372  00206C  0E00               	movlw	0
 25373  00206E  6EE6               	movwf	postinc1,c
 25374  002070  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25375  002076  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25376  00207C  ECDF  F008         	call	_ringBufS_flush	;wreg free
 25377  002080  94BC               	bcf	188,2,c	;volatile
 25378                           
 25379                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 25380  002082  013B               	movlb	59	; () banked
 25381  002084  9FFC               	bcf	252,7,b	;volatile
 25382                           
 25383                           ; BSR set to: 59
 25384                           ;eadog.c: 189:  DMA1SSZ = 1;
 25385  002086  0E00               	movlw	0
 25386  002088  6FF8               	movwf	248,b	;volatile
 25387  00208A  0E01               	movlw	1
 25388  00208C  6FF7               	movwf	247,b	;volatile
 25389                           
 25390                           ; BSR set to: 59
 25391                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 25392  00208E  8FFC               	bsf	252,7,b	;volatile
 25393                           
 25394                           ; BSR set to: 59
 25395                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 25396                           ;stkvar	_strPtr @ sp[(0)+-1]
 25397  002090  0EFF               	movlw	-1
 25398  002092  50E3               	movf	plusw1,w,c
 25399  002094  6EE6               	movwf	postinc1,c
 25400  002096  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25401  00209C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25402  0020A2  EC69  F006         	call	_ringBufS_put_dma	;wreg free
 25403                           
 25404                           ;eadog.c: 192:  start_lcd();
 25405  0020A6  ECBB  F016         	call	_start_lcd	;wreg free
 25406                           
 25407                           ; BSR set to: 59
 25408                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 25409  0020AA  52E5               	movf	postdec1,f,c
 25410  0020AC  0012               	return		;funcret
 25411  0020AE                     __end_of_send_lcd_data_dma:
 25412                           	opt callstack 0
 25413                           
 25414 ;; *************** function _eaDogM_WriteString *****************
 25415 ;; Defined at:
 25416 ;;		line 151 in file "eadog.c"
 25417 ;; Parameters:    Size  Location     Type
 25418 ;;  strPtr          2  [STACK] PTR unsigned char 
 25419 ;;		 -> D.lcd(640), D(642), V(181), 
 25420 ;; Auto vars:     Size  Location     Type
 25421 ;;		None
 25422 ;; Return value:  Size  Location     Type
 25423 ;;                  1  [STACK] void 
 25424 ;; Registers used:
 25425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25426 ;; Tracked objects:
 25427 ;;		On entry : 3F/3D
 25428 ;;		On exit  : 3F/3B
 25429 ;;		Unchanged: 0/0
 25430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25435 ;;Total ram usage:        0 bytes
 25436 ;; Hardware stack levels used:    1
 25437 ;; Hardware stack levels required when called:   24
 25438 ;; This function calls:
 25439 ;;		_printf
 25440 ;;		_ringBufS_flush
 25441 ;;		_start_lcd
 25442 ;;		_strlen
 25443 ;;		_wait_lcd_set
 25444 ;; This function is called by:
 25445 ;;		_eaDogM_WriteStringAtPos
 25446 ;; This function uses a reentrant model
 25447 ;;
 25448                           
 25449                           	psect	text86
 25450  000D7C                     __ptext86:
 25451                           	opt callstack 0
 25452  000D7C                     _eaDogM_WriteString:
 25453                           	opt callstack 4
 25454                           
 25455                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 25456                           
 25457                           ; BSR set to: 59
 25458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25459                           ;incstack = 0
 25460  000D7C  ECB8  F016         	call	_wait_lcd_set	;wreg free
 25461                           
 25462                           ; BSR set to: 0
 25463                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 25464  000D80  0E00               	movlw	0
 25465  000D82  6EE6               	movwf	postinc1,c
 25466  000D84  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25467  000D8A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25468  000D90  ECDF  F008         	call	_ringBufS_flush	;wreg free
 25469  000D94  94BC               	bcf	188,2,c	;volatile
 25470                           
 25471                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 25472                           ;stkvar	_strPtr @ sp[(0)+-2]
 25473  000D96  0EFE               	movlw	-2
 25474  000D98  006F FF8F FFE6     	movff	plusw1,postinc1
 25475  000D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 25476  000DA4  EC63  F007         	call	_strlen	;wreg free
 25477  000DA8  502B               	movf	(btemp+1)^0,w,c
 25478  000DAA  E104               	bnz	u16000
 25479  000DAC  0E41               	movlw	65
 25480  000DAE  5C2A               	subwf	btemp^0,w,c
 25481  000DB0  A0D8               	btfss	status,0,c
 25482  000DB2  D010               	goto	l16428
 25483  000DB4                     u16000:
 25484                           
 25485                           ;stkvar	_strPtr @ sp[(0)+-2]
 25486  000DB4  0EFE               	movlw	-2
 25487  000DB6  006F FF8C  F034    	movff	plusw1,btemp+10
 25488  000DBC  0EFF               	movlw	-1
 25489  000DBE  006F FF8C  F035    	movff	plusw1,btemp+11
 25490  000DC4  0E40               	movlw	64
 25491  000DC6  2434               	addwf	(btemp+10)^0,w,c
 25492  000DC8  6ED9               	movwf	fsr2l,c
 25493  000DCA  0E00               	movlw	0
 25494  000DCC  2035               	addwfc	(btemp+11)^0,w,c
 25495  000DCE  6EDA               	movwf	fsr2h,c
 25496  000DD0  0E00               	movlw	0
 25497  000DD2  6EDF               	movwf	indf2,c
 25498  000DD4                     l16428:
 25499                           
 25500                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 25501  000DD4  013B               	movlb	59	; () banked
 25502  000DD6  9FFC               	bcf	252,7,b	;volatile
 25503                           
 25504                           ; BSR set to: 59
 25505                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 25506                           ;stkvar	_strPtr @ sp[(0)+-2]
 25507  000DD8  0EFE               	movlw	-2
 25508  000DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 25509  000DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 25510  000DE6  EC63  F007         	call	_strlen	;wreg free
 25511  000DEA  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 25512  000DF0  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 25513                           
 25514                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 25515  000DF6  013B               	movlb	59	; () banked
 25516  000DF8  8FFC               	bsf	252,7,b	;volatile
 25517                           
 25518                           ; BSR set to: 59
 25519                           ;eadog.c: 161:  printf("%s", strPtr);
 25520                           ;stkvar	_strPtr @ sp[(0)+-2]
 25521  000DFA  0EFE               	movlw	-2
 25522  000DFC  006F FF8F FFE6     	movff	plusw1,postinc1
 25523  000E02  006F FF8F FFE6     	movff	plusw1,postinc1
 25524  000E08  0EFC               	movlw	low STR_74
 25525  000E0A  6EE6               	movwf	postinc1,c
 25526  000E0C  0EFF               	movlw	high STR_74
 25527  000E0E  6EE6               	movwf	postinc1,c
 25528  000E10  0E04               	movlw	4
 25529  000E12  6EE6               	movwf	postinc1,c
 25530  000E14  EC91  F00D         	call	_printf	;wreg free
 25531                           
 25532                           ; BSR set to: 0
 25533                           ;eadog.c: 162:  start_lcd();
 25534  000E18  ECBB  F016         	call	_start_lcd	;wreg free
 25535                           
 25536                           ; BSR set to: 59
 25537                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25538  000E1C  52E5               	movf	postdec1,f,c
 25539  000E1E  52E5               	movf	postdec1,f,c
 25540  000E20  0012               	return		;funcret
 25541  000E22                     __end_of_eaDogM_WriteString:
 25542                           	opt callstack 0
 25543                           
 25544 ;; *************** function _wait_lcd_set *****************
 25545 ;; Defined at:
 25546 ;;		line 433 in file "eadog.c"
 25547 ;; Parameters:    Size  Location     Type
 25548 ;;		None
 25549 ;; Auto vars:     Size  Location     Type
 25550 ;;		None
 25551 ;; Return value:  Size  Location     Type
 25552 ;;                  1  [STACK] void 
 25553 ;; Registers used:
 25554 ;;		None
 25555 ;; Tracked objects:
 25556 ;;		On entry : 0/3D
 25557 ;;		On exit  : 3F/0
 25558 ;;		Unchanged: 0/0
 25559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25564 ;;Total ram usage:        0 bytes
 25565 ;; Hardware stack levels used:    1
 25566 ;; Hardware stack levels required when called:   15
 25567 ;; This function calls:
 25568 ;;		Nothing
 25569 ;; This function is called by:
 25570 ;;		_eaDogM_WriteString
 25571 ;;		_send_lcd_data_dma
 25572 ;; This function uses a reentrant model
 25573 ;;
 25574                           
 25575                           	psect	text87
 25576  002D70                     __ptext87:
 25577                           	opt callstack 0
 25578  002D70                     _wait_lcd_set:
 25579                           	opt callstack 12
 25580                           
 25581                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 25582                           
 25583                           ; BSR set to: 59
 25584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25585                           ;incstack = 0
 25586  002D70  0100               	movlb	0	; () banked
 25587  002D72  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 25588                           
 25589                           ; BSR set to: 0
 25590                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25591  002D74  0012               	return		;funcret
 25592  002D76                     __end_of_wait_lcd_set:
 25593                           	opt callstack 0
 25594                           
 25595 ;; *************** function _start_lcd *****************
 25596 ;; Defined at:
 25597 ;;		line 428 in file "eadog.c"
 25598 ;; Parameters:    Size  Location     Type
 25599 ;;		None
 25600 ;; Auto vars:     Size  Location     Type
 25601 ;;		None
 25602 ;; Return value:  Size  Location     Type
 25603 ;;                  1  [STACK] void 
 25604 ;; Registers used:
 25605 ;;		None
 25606 ;; Tracked objects:
 25607 ;;		On entry : 0/3B
 25608 ;;		On exit  : 3F/3B
 25609 ;;		Unchanged: 0/0
 25610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25615 ;;Total ram usage:        0 bytes
 25616 ;; Hardware stack levels used:    1
 25617 ;; Hardware stack levels required when called:   15
 25618 ;; This function calls:
 25619 ;;		Nothing
 25620 ;; This function is called by:
 25621 ;;		_eaDogM_WriteString
 25622 ;;		_send_lcd_data_dma
 25623 ;; This function uses a reentrant model
 25624 ;;
 25625                           
 25626                           	psect	text88
 25627  002D76                     __ptext88:
 25628                           	opt callstack 0
 25629  002D76                     _start_lcd:
 25630                           	opt callstack 12
 25631                           
 25632                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 25633                           
 25634                           ; BSR set to: 0
 25635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25636                           ;incstack = 0
 25637  002D76  013B               	movlb	59	; () banked
 25638  002D78  8DFC               	bsf	252,6,b	;volatile
 25639                           
 25640                           ; BSR set to: 59
 25641                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25642  002D7A  0012               	return		;funcret
 25643  002D7C                     __end_of_start_lcd:
 25644                           	opt callstack 0
 25645                           
 25646 ;; *************** function _ringBufS_flush *****************
 25647 ;; Defined at:
 25648 ;;		line 76 in file "ringbufs.c"
 25649 ;; Parameters:    Size  Location     Type
 25650 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25651 ;;		 -> ring_buf1(67), 
 25652 ;;  clearBuffer     1  [STACK] const char 
 25653 ;; Auto vars:     Size  Location     Type
 25654 ;;		None
 25655 ;; Return value:  Size  Location     Type
 25656 ;;                  1  [STACK] void 
 25657 ;; Registers used:
 25658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25659 ;; Tracked objects:
 25660 ;;		On entry : 3F/0
 25661 ;;		On exit  : 0/0
 25662 ;;		Unchanged: 0/0
 25663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25668 ;;Total ram usage:        0 bytes
 25669 ;; Hardware stack levels used:    1
 25670 ;; Hardware stack levels required when called:   16
 25671 ;; This function calls:
 25672 ;;		_memset
 25673 ;; This function is called by:
 25674 ;;		_eaDogM_WriteString
 25675 ;;		_send_lcd_data_dma
 25676 ;; This function uses a reentrant model
 25677 ;;
 25678                           
 25679                           	psect	text89
 25680  0011BE                     __ptext89:
 25681                           	opt callstack 0
 25682  0011BE                     _ringBufS_flush:
 25683                           	opt callstack 11
 25684                           
 25685                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 25686                           ;stkvar	__this @ sp[(0)+-2]
 25687                           
 25688                           ; BSR set to: 59
 25689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25690                           ;incstack = 0
 25691  0011BE  0EFE               	movlw	-2
 25692  0011C0  006F FF8C  F034    	movff	plusw1,btemp+10
 25693  0011C6  0EFF               	movlw	-1
 25694  0011C8  006F FF8C  F035    	movff	plusw1,btemp+11
 25695  0011CE  0E42               	movlw	66
 25696  0011D0  2434               	addwf	(btemp+10)^0,w,c
 25697  0011D2  6ED9               	movwf	fsr2l,c
 25698  0011D4  0E00               	movlw	0
 25699  0011D6  2035               	addwfc	(btemp+11)^0,w,c
 25700  0011D8  6EDA               	movwf	fsr2h,c
 25701  0011DA  0E00               	movlw	0
 25702  0011DC  6EDF               	movwf	indf2,c
 25703                           
 25704                           ;ringbufs.c: 79:  _this->head = 0;
 25705                           ;stkvar	__this @ sp[(0)+-2]
 25706  0011DE  0EFE               	movlw	-2
 25707  0011E0  006F FF8C  F034    	movff	plusw1,btemp+10
 25708  0011E6  0EFF               	movlw	-1
 25709  0011E8  006F FF8C  F035    	movff	plusw1,btemp+11
 25710  0011EE  0E40               	movlw	64
 25711  0011F0  2434               	addwf	(btemp+10)^0,w,c
 25712  0011F2  6ED9               	movwf	fsr2l,c
 25713  0011F4  0E00               	movlw	0
 25714  0011F6  2035               	addwfc	(btemp+11)^0,w,c
 25715  0011F8  6EDA               	movwf	fsr2h,c
 25716  0011FA  0E00               	movlw	0
 25717  0011FC  6EDF               	movwf	indf2,c
 25718                           
 25719                           ;ringbufs.c: 80:  _this->tail = 0;
 25720                           ;stkvar	__this @ sp[(0)+-2]
 25721  0011FE  0EFE               	movlw	-2
 25722  001200  006F FF8C  F034    	movff	plusw1,btemp+10
 25723  001206  0EFF               	movlw	-1
 25724  001208  006F FF8C  F035    	movff	plusw1,btemp+11
 25725  00120E  0E41               	movlw	65
 25726  001210  2434               	addwf	(btemp+10)^0,w,c
 25727  001212  6ED9               	movwf	fsr2l,c
 25728  001214  0E00               	movlw	0
 25729  001216  2035               	addwfc	(btemp+11)^0,w,c
 25730  001218  6EDA               	movwf	fsr2h,c
 25731  00121A  0E00               	movlw	0
 25732  00121C  6EDF               	movwf	indf2,c
 25733                           
 25734                           ;ringbufs.c: 81:  if (clearBuffer) {
 25735                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 25736  00121E  0EFD               	movlw	-3
 25737  001220  50E3               	movf	plusw1,w,c
 25738  001222  B4D8               	btfsc	status,2,c
 25739  001224  D011               	goto	l1750
 25740                           
 25741                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 25742  001226  0E40               	movlw	64
 25743  001228  6EE6               	movwf	postinc1,c
 25744  00122A  0E00               	movlw	0
 25745  00122C  6EE6               	movwf	postinc1,c
 25746  00122E  0E00               	movlw	0
 25747  001230  6EE6               	movwf	postinc1,c
 25748  001232  0E00               	movlw	0
 25749  001234  6EE6               	movwf	postinc1,c
 25750                           
 25751                           ;stkvar	__this @ sp[(-4)+-2]
 25752  001236  0EFA               	movlw	-6
 25753  001238  006F FF8F FFE6     	movff	plusw1,postinc1
 25754  00123E  006F FF8F FFE6     	movff	plusw1,postinc1
 25755  001244  EC4F  F0DA         	call	_memset	;wreg free
 25756  001248                     l1750:
 25757                           
 25758                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 25759  001248  52E5               	movf	postdec1,f,c
 25760  00124A  52E5               	movf	postdec1,f,c
 25761  00124C  52E5               	movf	postdec1,f,c
 25762  00124E  0012               	return		;funcret
 25763  001250                     __end_of_ringBufS_flush:
 25764                           	opt callstack 0
 25765                           
 25766 ;; *************** function _memset *****************
 25767 ;; Defined at:
 25768 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 25769 ;; Parameters:    Size  Location     Type
 25770 ;;  dest            2  [STACK] PTR void 
 25771 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25772 ;;  c               2  [STACK] int 
 25773 ;;  n               2  [STACK] unsigned int 
 25774 ;; Auto vars:     Size  Location     Type
 25775 ;;  s               2  [STACK] PTR unsigned char 
 25776 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25777 ;;  k               2  [STACK] unsigned int 
 25778 ;; Return value:  Size  Location     Type
 25779 ;;                  2  [STACK] PTR void 
 25780 ;; Registers used:
 25781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25782 ;; Tracked objects:
 25783 ;;		On entry : 0/0
 25784 ;;		On exit  : 0/0
 25785 ;;		Unchanged: 0/0
 25786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25791 ;;Total ram usage:        0 bytes
 25792 ;; Hardware stack levels used:    1
 25793 ;; Hardware stack levels required when called:   15
 25794 ;; This function calls:
 25795 ;;		Nothing
 25796 ;; This function is called by:
 25797 ;;		_ringBufS_init
 25798 ;;		_ringBufS_flush
 25799 ;; This function uses a reentrant model
 25800 ;;
 25801                           
 25802                           	psect	text90
 25803  01B49E                     __ptext90:
 25804                           	opt callstack 0
 25805  01B49E                     _memset:
 25806                           	opt callstack 0
 25807                           
 25808                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25809  01B49E  52E6               	movf	postinc1,f,c
 25810  01B4A0  52E6               	movf	postinc1,f,c
 25811  01B4A2  52E6               	movf	postinc1,f,c
 25812  01B4A4  52E6               	movf	postinc1,f,c
 25813                           
 25814                           ;stkvar	_dest @ sp[(-4)+-2]
 25815                           
 25816                           ;incstack = 0
 25817  01B4A6  0EFA               	movlw	-6
 25818  01B4A8  006F FF8C  F034    	movff	plusw1,btemp+10
 25819  01B4AE  0EFB               	movlw	-5
 25820  01B4B0  006F FF8C  F035    	movff	plusw1,btemp+11
 25821                           
 25822                           ;stkvar	_s @ sp[(-4)+0]
 25823  01B4B6  0EFD               	movlw	-3
 25824  01B4B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25825  01B4BE  0EFC               	movlw	-4
 25826  01B4C0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25827                           
 25828                           ;stkvar	_n @ sp[(-4)+-6]
 25829  01B4C6  0EF6               	movlw	-10
 25830  01B4C8  006F FF8C  F02A    	movff	plusw1,btemp
 25831  01B4CE  0EF7               	movlw	-9
 25832  01B4D0  50E3               	movf	plusw1,w,c
 25833  01B4D2  102A               	iorwf	btemp^0,w,c
 25834  01B4D4  B4D8               	btfsc	status,2,c
 25835  01B4D6  D154               	goto	u14330
 25836                           
 25837                           ;stkvar	_c @ sp[(-4)+-4]
 25838                           ;stkvar	_s @ sp[(-4)+0]
 25839  01B4D8  0EFC               	movlw	-4
 25840  01B4DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25841  01B4E0  0EFD               	movlw	-3
 25842  01B4E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25843  01B4E8  0EF8               	movlw	-8
 25844  01B4EA  006F FF8F FFDF     	movff	plusw1,indf2
 25845                           
 25846                           ;stkvar	_c @ sp[(-4)+-4]
 25847                           ;stkvar	_n @ sp[(-4)+-6]
 25848                           ;stkvar	_s @ sp[(-4)+0]
 25849  01B4F0  0EFC               	movlw	-4
 25850  01B4F2  006F FF8C  F034    	movff	plusw1,btemp+10
 25851  01B4F8  0EFD               	movlw	-3
 25852  01B4FA  006F FF8C  F035    	movff	plusw1,btemp+11
 25853  01B500  0EF6               	movlw	-10
 25854  01B502  50E3               	movf	plusw1,w,c
 25855  01B504  2634               	addwf	(btemp+10)^0,f,c
 25856  01B506  0EF7               	movlw	-9
 25857  01B508  50E3               	movf	plusw1,w,c
 25858  01B50A  2235               	addwfc	(btemp+11)^0,f,c
 25859  01B50C  0EFF               	movlw	255
 25860  01B50E  2434               	addwf	(btemp+10)^0,w,c
 25861  01B510  6ED9               	movwf	fsr2l,c
 25862  01B512  0EFF               	movlw	255
 25863  01B514  2035               	addwfc	(btemp+11)^0,w,c
 25864  01B516  6EDA               	movwf	fsr2h,c
 25865  01B518  0EF8               	movlw	-8
 25866  01B51A  006F FF8F FFDF     	movff	plusw1,indf2
 25867                           
 25868                           ;stkvar	_n @ sp[(-4)+-6]
 25869  01B520  0EF7               	movlw	-9
 25870  01B522  50E3               	movf	plusw1,w,c
 25871  01B524  E108               	bnz	l15442
 25872  01B526  0EF6               	movlw	-10
 25873  01B528  006F FF8C  F02A    	movff	plusw1,btemp
 25874  01B52E  0E03               	movlw	3
 25875  01B530  5E2A               	subwf	btemp^0,f,c
 25876  01B532  A0D8               	btfss	status,0,c
 25877  01B534  D125               	goto	u14330
 25878  01B536                     l15442:
 25879                           
 25880                           ;stkvar	_c @ sp[(-4)+-4]
 25881                           ;stkvar	_s @ sp[(-4)+0]
 25882  01B536  0EFC               	movlw	-4
 25883  01B538  006F FF8C  F034    	movff	plusw1,btemp+10
 25884  01B53E  0EFD               	movlw	-3
 25885  01B540  006F FF8C  F035    	movff	plusw1,btemp+11
 25886  01B546  0E01               	movlw	1
 25887  01B548  2434               	addwf	(btemp+10)^0,w,c
 25888  01B54A  6ED9               	movwf	fsr2l,c
 25889  01B54C  0E00               	movlw	0
 25890  01B54E  2035               	addwfc	(btemp+11)^0,w,c
 25891  01B550  6EDA               	movwf	fsr2h,c
 25892  01B552  0EF8               	movlw	-8
 25893  01B554  006F FF8F FFDF     	movff	plusw1,indf2
 25894                           
 25895                           ;stkvar	_c @ sp[(-4)+-4]
 25896                           ;stkvar	_s @ sp[(-4)+0]
 25897  01B55A  0EFC               	movlw	-4
 25898  01B55C  006F FF8C  F034    	movff	plusw1,btemp+10
 25899  01B562  0EFD               	movlw	-3
 25900  01B564  006F FF8C  F035    	movff	plusw1,btemp+11
 25901  01B56A  0E02               	movlw	2
 25902  01B56C  2434               	addwf	(btemp+10)^0,w,c
 25903  01B56E  6ED9               	movwf	fsr2l,c
 25904  01B570  0E00               	movlw	0
 25905  01B572  2035               	addwfc	(btemp+11)^0,w,c
 25906  01B574  6EDA               	movwf	fsr2h,c
 25907  01B576  0EF8               	movlw	-8
 25908  01B578  006F FF8F FFDF     	movff	plusw1,indf2
 25909                           
 25910                           ;stkvar	_c @ sp[(-4)+-4]
 25911                           ;stkvar	_n @ sp[(-4)+-6]
 25912                           ;stkvar	_s @ sp[(-4)+0]
 25913  01B57E  0EFC               	movlw	-4
 25914  01B580  006F FF8C  F034    	movff	plusw1,btemp+10
 25915  01B586  0EFD               	movlw	-3
 25916  01B588  006F FF8C  F035    	movff	plusw1,btemp+11
 25917  01B58E  0EF6               	movlw	-10
 25918  01B590  50E3               	movf	plusw1,w,c
 25919  01B592  2634               	addwf	(btemp+10)^0,f,c
 25920  01B594  0EF7               	movlw	-9
 25921  01B596  50E3               	movf	plusw1,w,c
 25922  01B598  2235               	addwfc	(btemp+11)^0,f,c
 25923  01B59A  0EFE               	movlw	254
 25924  01B59C  2434               	addwf	(btemp+10)^0,w,c
 25925  01B59E  6ED9               	movwf	fsr2l,c
 25926  01B5A0  0EFF               	movlw	255
 25927  01B5A2  2035               	addwfc	(btemp+11)^0,w,c
 25928  01B5A4  6EDA               	movwf	fsr2h,c
 25929  01B5A6  0EF8               	movlw	-8
 25930  01B5A8  006F FF8F FFDF     	movff	plusw1,indf2
 25931                           
 25932                           ;stkvar	_c @ sp[(-4)+-4]
 25933                           ;stkvar	_n @ sp[(-4)+-6]
 25934                           ;stkvar	_s @ sp[(-4)+0]
 25935  01B5AE  0EFC               	movlw	-4
 25936  01B5B0  006F FF8C  F034    	movff	plusw1,btemp+10
 25937  01B5B6  0EFD               	movlw	-3
 25938  01B5B8  006F FF8C  F035    	movff	plusw1,btemp+11
 25939  01B5BE  0EF6               	movlw	-10
 25940  01B5C0  50E3               	movf	plusw1,w,c
 25941  01B5C2  2634               	addwf	(btemp+10)^0,f,c
 25942  01B5C4  0EF7               	movlw	-9
 25943  01B5C6  50E3               	movf	plusw1,w,c
 25944  01B5C8  2235               	addwfc	(btemp+11)^0,f,c
 25945  01B5CA  0EFD               	movlw	253
 25946  01B5CC  2434               	addwf	(btemp+10)^0,w,c
 25947  01B5CE  6ED9               	movwf	fsr2l,c
 25948  01B5D0  0EFF               	movlw	255
 25949  01B5D2  2035               	addwfc	(btemp+11)^0,w,c
 25950  01B5D4  6EDA               	movwf	fsr2h,c
 25951  01B5D6  0EF8               	movlw	-8
 25952  01B5D8  006F FF8F FFDF     	movff	plusw1,indf2
 25953                           
 25954                           ;stkvar	_n @ sp[(-4)+-6]
 25955  01B5DE  0EF7               	movlw	-9
 25956  01B5E0  50E3               	movf	plusw1,w,c
 25957  01B5E2  E108               	bnz	l15448
 25958  01B5E4  0EF6               	movlw	-10
 25959  01B5E6  006F FF8C  F02A    	movff	plusw1,btemp
 25960  01B5EC  0E07               	movlw	7
 25961  01B5EE  5E2A               	subwf	btemp^0,f,c
 25962  01B5F0  A0D8               	btfss	status,0,c
 25963  01B5F2  D0C6               	goto	u14330
 25964  01B5F4                     l15448:
 25965                           
 25966                           ;stkvar	_c @ sp[(-4)+-4]
 25967                           ;stkvar	_s @ sp[(-4)+0]
 25968  01B5F4  0EFC               	movlw	-4
 25969  01B5F6  006F FF8C  F034    	movff	plusw1,btemp+10
 25970  01B5FC  0EFD               	movlw	-3
 25971  01B5FE  006F FF8C  F035    	movff	plusw1,btemp+11
 25972  01B604  0E03               	movlw	3
 25973  01B606  2434               	addwf	(btemp+10)^0,w,c
 25974  01B608  6ED9               	movwf	fsr2l,c
 25975  01B60A  0E00               	movlw	0
 25976  01B60C  2035               	addwfc	(btemp+11)^0,w,c
 25977  01B60E  6EDA               	movwf	fsr2h,c
 25978  01B610  0EF8               	movlw	-8
 25979  01B612  006F FF8F FFDF     	movff	plusw1,indf2
 25980                           
 25981                           ;stkvar	_c @ sp[(-4)+-4]
 25982                           ;stkvar	_n @ sp[(-4)+-6]
 25983                           ;stkvar	_s @ sp[(-4)+0]
 25984  01B618  0EFC               	movlw	-4
 25985  01B61A  006F FF8C  F034    	movff	plusw1,btemp+10
 25986  01B620  0EFD               	movlw	-3
 25987  01B622  006F FF8C  F035    	movff	plusw1,btemp+11
 25988  01B628  0EF6               	movlw	-10
 25989  01B62A  50E3               	movf	plusw1,w,c
 25990  01B62C  2634               	addwf	(btemp+10)^0,f,c
 25991  01B62E  0EF7               	movlw	-9
 25992  01B630  50E3               	movf	plusw1,w,c
 25993  01B632  2235               	addwfc	(btemp+11)^0,f,c
 25994  01B634  0EFC               	movlw	252
 25995  01B636  2434               	addwf	(btemp+10)^0,w,c
 25996  01B638  6ED9               	movwf	fsr2l,c
 25997  01B63A  0EFF               	movlw	255
 25998  01B63C  2035               	addwfc	(btemp+11)^0,w,c
 25999  01B63E  6EDA               	movwf	fsr2h,c
 26000  01B640  0EF8               	movlw	-8
 26001  01B642  006F FF8F FFDF     	movff	plusw1,indf2
 26002                           
 26003                           ;stkvar	_n @ sp[(-4)+-6]
 26004  01B648  0EF7               	movlw	-9
 26005  01B64A  50E3               	movf	plusw1,w,c
 26006  01B64C  E108               	bnz	l15454
 26007  01B64E  0EF6               	movlw	-10
 26008  01B650  006F FF8C  F02A    	movff	plusw1,btemp
 26009  01B656  0E09               	movlw	9
 26010  01B658  5E2A               	subwf	btemp^0,f,c
 26011  01B65A  A0D8               	btfss	status,0,c
 26012  01B65C  D091               	goto	u14330
 26013  01B65E                     l15454:
 26014                           
 26015                           ;stkvar	_s @ sp[(-4)+0]
 26016  01B65E  0EFC               	movlw	-4
 26017  01B660  006F FF8C  F034    	movff	plusw1,btemp+10
 26018  01B666  1E34               	comf	(btemp+10)^0,f,c
 26019  01B668  0EFD               	movlw	-3
 26020  01B66A  006F FF8C  F035    	movff	plusw1,btemp+11
 26021  01B670  1E35               	comf	(btemp+11)^0,f,c
 26022  01B672  2A34               	incf	(btemp+10)^0,f,c
 26023  01B674  B4D8               	btfsc	status,2,c
 26024  01B676  2A35               	incf	(btemp+11)^0,f,c
 26025  01B678  0E03               	movlw	3
 26026  01B67A  1634               	andwf	(btemp+10)^0,f,c
 26027  01B67C  0E00               	movlw	0
 26028  01B67E  1635               	andwf	(btemp+11)^0,f,c
 26029                           
 26030                           ;stkvar	_k @ sp[(-4)+2]
 26031  01B680  0EFE               	movlw	-2
 26032  01B682  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26033  01B688  0EFF               	movlw	-1
 26034  01B68A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26035                           
 26036                           ;stkvar	_k @ sp[(-4)+2]
 26037                           ;stkvar	_s @ sp[(-4)+0]
 26038  01B690  0EFC               	movlw	-4
 26039  01B692  50E3               	movf	plusw1,w,c
 26040  01B694  6E2A               	movwf	btemp^0,c
 26041  01B696  0EFE               	movlw	-2
 26042  01B698  50E3               	movf	plusw1,w,c
 26043  01B69A  262A               	addwf	btemp^0,f,c
 26044  01B69C  0EFC               	movlw	-4
 26045  01B69E  0060  F0AB  FFE3   	movff	btemp,plusw1
 26046  01B6A4  0EFD               	movlw	-3
 26047  01B6A6  50E3               	movf	plusw1,w,c
 26048  01B6A8  6E2A               	movwf	btemp^0,c
 26049  01B6AA  0EFF               	movlw	-1
 26050  01B6AC  50E3               	movf	plusw1,w,c
 26051  01B6AE  222A               	addwfc	btemp^0,f,c
 26052  01B6B0  0EFD               	movlw	-3
 26053  01B6B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 26054                           
 26055                           ;stkvar	_k @ sp[(-4)+2]
 26056                           ;stkvar	_n @ sp[(-4)+-6]
 26057  01B6B8  0EF6               	movlw	-10
 26058  01B6BA  50E3               	movf	plusw1,w,c
 26059  01B6BC  6E2A               	movwf	btemp^0,c
 26060  01B6BE  0EFE               	movlw	-2
 26061  01B6C0  50E3               	movf	plusw1,w,c
 26062  01B6C2  5E2A               	subwf	btemp^0,f,c
 26063  01B6C4  0EF6               	movlw	-10
 26064  01B6C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 26065  01B6CC  0EF7               	movlw	-9
 26066  01B6CE  50E3               	movf	plusw1,w,c
 26067  01B6D0  6E2A               	movwf	btemp^0,c
 26068  01B6D2  0EFF               	movlw	-1
 26069  01B6D4  50E3               	movf	plusw1,w,c
 26070  01B6D6  5A2A               	subwfb	btemp^0,f,c
 26071  01B6D8  0EF7               	movlw	-9
 26072  01B6DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26073  01B6E0  0EFC               	movlw	252
 26074  01B6E2  6E34               	movwf	(btemp+10)^0,c
 26075  01B6E4  0EFF               	movlw	255
 26076  01B6E6  6E35               	movwf	(btemp+11)^0,c
 26077                           
 26078                           ;stkvar	_n @ sp[(-4)+-6]
 26079  01B6E8  0EF6               	movlw	-10
 26080  01B6EA  006F FF8C  F02A    	movff	plusw1,btemp
 26081  01B6F0  5034               	movf	(btemp+10)^0,w,c
 26082  01B6F2  162A               	andwf	btemp^0,f,c
 26083  01B6F4  0EF6               	movlw	-10
 26084  01B6F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 26085  01B6FC  0EF7               	movlw	-9
 26086  01B6FE  006F FF8C  F02A    	movff	plusw1,btemp
 26087  01B704  5035               	movf	(btemp+11)^0,w,c
 26088  01B706  162A               	andwf	btemp^0,f,c
 26089  01B708  0EF7               	movlw	-9
 26090  01B70A  D02E               	goto	L24
 26091  01B70C                     l15462:
 26092                           
 26093                           ;stkvar	_c @ sp[(-4)+-4]
 26094                           ;stkvar	_s @ sp[(-4)+0]
 26095  01B70C  0EFC               	movlw	-4
 26096  01B70E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26097  01B714  0EFD               	movlw	-3
 26098  01B716  006F FF8F FFDA     	movff	plusw1,fsr2h
 26099  01B71C  0EF8               	movlw	-8
 26100  01B71E  006F FF8F FFDF     	movff	plusw1,indf2
 26101                           
 26102                           ;stkvar	_n @ sp[(-4)+-6]
 26103  01B724  0EF6               	movlw	-10
 26104  01B726  006F FF8C  F02A    	movff	plusw1,btemp
 26105  01B72C  0E01               	movlw	1
 26106  01B72E  5E2A               	subwf	btemp^0,f,c
 26107  01B730  0EF6               	movlw	-10
 26108  01B732  0060  F0AB  FFE3   	movff	btemp,plusw1
 26109  01B738  0EF7               	movlw	-9
 26110  01B73A  006F FF8C  F02A    	movff	plusw1,btemp
 26111  01B740  0E00               	movlw	0
 26112  01B742  5A2A               	subwfb	btemp^0,f,c
 26113  01B744  0EF7               	movlw	-9
 26114  01B746  0060  F0AB  FFE3   	movff	btemp,plusw1
 26115                           
 26116                           ;stkvar	_s @ sp[(-4)+0]
 26117  01B74C  0EFC               	movlw	-4
 26118  01B74E  50E3               	movf	plusw1,w,c
 26119  01B750  0F01               	addlw	1
 26120  01B752  6E2A               	movwf	btemp^0,c
 26121  01B754  0EFC               	movlw	-4
 26122  01B756  0060  F0AB  FFE3   	movff	btemp,plusw1
 26123  01B75C  6A2A               	clrf	btemp^0,c
 26124  01B75E  0EFD               	movlw	-3
 26125  01B760  50E3               	movf	plusw1,w,c
 26126  01B762  202A               	addwfc	btemp^0,w,c
 26127  01B764  6E2A               	movwf	btemp^0,c
 26128  01B766  0EFD               	movlw	-3
 26129  01B768                     L24:
 26130  01B768  0060  F0AB  FFE3   	movff	btemp,plusw1
 26131                           
 26132                           ;stkvar	_n @ sp[(-4)+-6]
 26133  01B76E  0EF6               	movlw	-10
 26134  01B770  006F FF8C  F02A    	movff	plusw1,btemp
 26135  01B776  0EF7               	movlw	-9
 26136  01B778  50E3               	movf	plusw1,w,c
 26137  01B77A  102A               	iorwf	btemp^0,w,c
 26138  01B77C  A4D8               	btfss	status,2,c
 26139  01B77E  D7C6               	goto	l15462
 26140  01B780                     u14330:
 26141                           
 26142                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 26143  01B780  0EF6               	movlw	246
 26144  01B782  26E1               	addwf	fsr1l,f,c
 26145  01B784  0EFF               	movlw	255
 26146  01B786  22E2               	addwfc	fsr1h,f,c
 26147  01B788  0012               	return		;funcret
 26148  01B78A                     __end_of_memset:
 26149                           	opt callstack 0
 26150                           
 26151 ;; *************** function _printf *****************
 26152 ;; Defined at:
 26153 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 26154 ;; Parameters:    Size  Location     Type
 26155 ;;  fmt             2  [STACK] PTR const unsigned char 
 26156 ;;		 -> STR_74(3), 
 26157 ;; Auto vars:     Size  Location     Type
 26158 ;;  ap              2  [STACK] PTR void [1]
 26159 ;;		 -> ?_printf(2), ?_sprintf(2), 
 26160 ;;  ret             2    0        int 
 26161 ;; Return value:  Size  Location     Type
 26162 ;;                  2  [STACK] int 
 26163 ;; Registers used:
 26164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26165 ;; Tracked objects:
 26166 ;;		On entry : 3F/3B
 26167 ;;		On exit  : 3F/0
 26168 ;;		Unchanged: 0/0
 26169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26174 ;;Total ram usage:        0 bytes
 26175 ;; Hardware stack levels used:    1
 26176 ;; Hardware stack levels required when called:   23
 26177 ;; This function calls:
 26178 ;;		_vfprintf
 26179 ;; This function is called by:
 26180 ;;		_eaDogM_WriteString
 26181 ;; This function uses a reentrant model
 26182 ;;
 26183                           
 26184                           	psect	text91
 26185  001B22                     __ptext91:
 26186                           	opt callstack 0
 26187  001B22                     _printf:
 26188                           	opt callstack 0
 26189                           
 26190                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26191  001B22  52E6               	movf	postinc1,f,c
 26192  001B24  52E6               	movf	postinc1,f,c
 26193                           
 26194                           ;stkvar	?_printf @ sp[(-2)+-3]
 26195                           
 26196                           ;incstack = 0
 26197  001B26  0EFB               	movlw	251
 26198  001B28  24E1               	addwf	fsr1l,w,c
 26199  001B2A  6E34               	movwf	(btemp+10)^0,c
 26200  001B2C  0EFF               	movlw	255
 26201  001B2E  20E2               	addwfc	fsr1h,w,c
 26202  001B30  6E35               	movwf	(btemp+11)^0,c
 26203                           
 26204                           ;stkvar	_ap @ sp[(-2)+0]
 26205  001B32  0EFF               	movlw	-1
 26206  001B34  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26207  001B3A  0EFE               	movlw	-2
 26208  001B3C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26209                           
 26210                           ;stkvar	_ap @ sp[(-2)+0]
 26211  001B42  0EFE               	movlw	254
 26212  001B44  24E1               	addwf	fsr1l,w,c
 26213  001B46  6E2A               	movwf	btemp^0,c
 26214  001B48  0EFF               	movlw	255
 26215  001B4A  20E2               	addwfc	fsr1h,w,c
 26216  001B4C  6E2B               	movwf	(btemp+1)^0,c
 26217  001B4E  0060  F0AB  FFE6   	movff	btemp,postinc1
 26218  001B54  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26219                           
 26220                           ;stkvar	_fmt @ sp[(-4)+-3]
 26221  001B5A  0EF9               	movlw	-7
 26222  001B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 26223  001B62  006F FF8F FFE6     	movff	plusw1,postinc1
 26224  001B68  0E00               	movlw	0
 26225  001B6A  6EE6               	movwf	postinc1,c
 26226  001B6C  0E00               	movlw	0
 26227  001B6E  6EE6               	movwf	postinc1,c
 26228  001B70  EC13  F006         	call	_vfprintf	;wreg free
 26229                           
 26230                           ; BSR set to: 0
 26231                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 26232  001B74  52E5               	movf	postdec1,f,c
 26233  001B76  52E5               	movf	postdec1,f,c
 26234  001B78  52E5               	movf	postdec1,f,c
 26235  001B7A  50E7               	movf	indf1,w,c
 26236  001B7C  5EE1               	subwf	fsr1l,f,c
 26237  001B7E  0E00               	movlw	0
 26238  001B80  5AE2               	subwfb	fsr1h,f,c
 26239  001B82  0012               	return		;funcret
 26240  001B84                     __end_of_printf:
 26241                           	opt callstack 0
 26242                           
 26243 ;; *************** function _vfprintf *****************
 26244 ;; Defined at:
 26245 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26246 ;; Parameters:    Size  Location     Type
 26247 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26248 ;;		 -> f(6), NULL(0), 
 26249 ;;  fmt             2  [STACK] PTR const unsigned char 
 26250 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 26251 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 26252 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 26253 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 26254 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 26255 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 26256 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 26257 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26258 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 26259 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 26260 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 26261 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 26262 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 26263 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26264 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 26265 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 26266 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 26267 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 26268 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 26269 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 26270 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 26271 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26272 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26273 ;;  ap              2  [STACK] PTR PTR void 
 26274 ;;		 -> ap(2), ap(2), 
 26275 ;; Auto vars:     Size  Location     Type
 26276 ;;  cfmt            2  [STACK] PTR unsigned char 
 26277 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 26278 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 26279 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 26280 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 26281 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 26282 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 26283 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 26284 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26285 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 26286 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 26287 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 26288 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 26289 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 26290 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26291 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 26292 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 26293 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 26294 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 26295 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 26296 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 26297 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 26298 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26299 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26300 ;; Return value:  Size  Location     Type
 26301 ;;                  2  [STACK] int 
 26302 ;; Registers used:
 26303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26304 ;; Tracked objects:
 26305 ;;		On entry : 0/2
 26306 ;;		On exit  : 3F/0
 26307 ;;		Unchanged: 0/0
 26308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26313 ;;Total ram usage:        0 bytes
 26314 ;; Hardware stack levels used:    1
 26315 ;; Hardware stack levels required when called:   22
 26316 ;; This function calls:
 26317 ;;		_vfpfcnvrt
 26318 ;; This function is called by:
 26319 ;;		_sprintf
 26320 ;;		_printf
 26321 ;; This function uses a reentrant model
 26322 ;;
 26323                           
 26324                           	psect	text92
 26325  000C26                     __ptext92:
 26326                           	opt callstack 0
 26327  000C26                     _vfprintf:
 26328                           	opt callstack 0
 26329                           
 26330                           ; BSR set to: 0
 26331                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26332  000C26  52E6               	movf	postinc1,f,c
 26333  000C28  52E6               	movf	postinc1,f,c
 26334                           
 26335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 26336                           ;stkvar	_fmt @ sp[(-2)+-4]
 26337                           
 26338                           ;incstack = 0
 26339 ;; hardware stack exceeded
 26340  000C2A  0EFA               	movlw	-6
 26341  000C2C  006F FF8C  F034    	movff	plusw1,btemp+10
 26342  000C32  0EFB               	movlw	-5
 26343  000C34  006F FF8C  F035    	movff	plusw1,btemp+11
 26344                           
 26345                           ;stkvar	_cfmt @ sp[(-2)+0]
 26346  000C3A  0EFF               	movlw	-1
 26347  000C3C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26348  000C42  0EFE               	movlw	-2
 26349  000C44  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26350                           
 26351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 26352  000C4A  0100               	movlb	0	; () banked
 26353  000C4C  6BBA               	clrf	_nout& (0+255),b
 26354  000C4E  6BBB               	clrf	(_nout+1)& (0+255),b
 26355                           
 26356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26357  000C50  D021               	goto	l16450
 26358  000C52                     l16448:
 26359                           
 26360                           ; BSR set to: 0
 26361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 26362                           ;stkvar	_ap @ sp[(-2)+-6]
 26363  000C52  0EF8               	movlw	-8
 26364  000C54  006F FF8F FFE6     	movff	plusw1,postinc1
 26365  000C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 26366                           
 26367                           ;stkvar	_cfmt @ sp[(-4)+0]
 26368  000C60  0EFC               	movlw	252
 26369  000C62  24E1               	addwf	fsr1l,w,c
 26370  000C64  6E2A               	movwf	btemp^0,c
 26371  000C66  0EFF               	movlw	255
 26372  000C68  20E2               	addwfc	fsr1h,w,c
 26373  000C6A  6E2B               	movwf	(btemp+1)^0,c
 26374  000C6C  0060  F0AB  FFE6   	movff	btemp,postinc1
 26375  000C72  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26376                           
 26377                           ;stkvar	_fp @ sp[(-6)+-2]
 26378  000C78  0EF8               	movlw	-8
 26379  000C7A  006F FF8F FFE6     	movff	plusw1,postinc1
 26380  000C80  006F FF8F FFE6     	movff	plusw1,postinc1
 26381  000C86  EC1B  F09D         	call	_vfpfcnvrt	;wreg free
 26382  000C8A  502A               	movf	btemp^0,w,c
 26383  000C8C  0100               	movlb	0	; () banked
 26384  000C8E  27BA               	addwf	_nout& (0+255),f,b
 26385  000C90  502B               	movf	(btemp+1)^0,w,c
 26386  000C92  23BB               	addwfc	(_nout+1)& (0+255),f,b
 26387  000C94                     l16450:
 26388                           
 26389                           ; BSR set to: 0
 26390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26391                           ;stkvar	_cfmt @ sp[(-2)+0]
 26392  000C94  50E1               	movf	fsr1l,w,c
 26393  000C96  0FFE               	addlw	-2
 26394  000C98  6ED9               	movwf	fsr2l,c
 26395  000C9A  50E2               	movf	fsr1h,w,c
 26396  000C9C  6EDA               	movwf	fsr2h,c
 26397  000C9E  0EFF               	movlw	255
 26398  000CA0  22DA               	addwfc	fsr2h,f,c
 26399  000CA2  006F FF7B FFF6     	movff	postinc2,tblptrl
 26400  000CA8  006F FF77 FFF7     	movff	postdec2,tblptrh
 26401  000CAE                     	if	0	;tblptru may be non-zero
 26402  000CAE                     	endif
 26403  000CAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26404  000CAE  0E00               	movlw	low (__mediumconst shr (0+16))
 26405  000CB0  6EF8               	movwf	tblptru,c
 26406  000CB2                     	endif
 26407  000CB2  0008               	tblrd		*
 26408  000CB4  50F5               	movf	tablat,w,c
 26409  000CB6  0900               	iorlw	0
 26410  000CB8  A4D8               	btfss	status,2,c
 26411  000CBA  D7CB               	goto	l16448
 26412                           
 26413                           ; BSR set to: 0
 26414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 26415  000CBC  0060  F2E8  F02A   	movff	_nout,btemp
 26416  000CC2  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 26417                           
 26418                           ; BSR set to: 0
 26419                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 26420  000CC8  0EF8               	movlw	248
 26421  000CCA  26E1               	addwf	fsr1l,f,c
 26422  000CCC  0EFF               	movlw	255
 26423  000CCE  22E2               	addwfc	fsr1h,f,c
 26424  000CD0  0012               	return		;funcret
 26425  000CD2                     __end_of_vfprintf:
 26426                           	opt callstack 0
 26427                           
 26428 ;; *************** function _vfpfcnvrt *****************
 26429 ;; Defined at:
 26430 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26431 ;; Parameters:    Size  Location     Type
 26432 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26433 ;;		 -> f(6), NULL(0), 
 26434 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 26435 ;;		 -> cfmt(2), 
 26436 ;;  ap              2  [STACK] PTR PTR void 
 26437 ;;		 -> ap(2), ap(2), 
 26438 ;; Auto vars:     Size  Location     Type
 26439 ;;  llu             8  [STACK] unsigned long long 
 26440 ;;  ll              8  [STACK] long long 
 26441 ;;  f               4  [STACK] long long 
 26442 ;;  ct              3  [STACK] unsigned char [3]
 26443 ;;  vp              3    0        PTR void 
 26444 ;;  cp              2  [STACK] PTR unsigned char 
 26445 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_76(9), 
 26446 ;;		 -> STR_75(12), D.lcd(640), D(642), T(176), 
 26447 ;;		 -> STR_3(5), V(181), 
 26448 ;;  i               2    0        int 
 26449 ;;  done            2    0        int 
 26450 ;;  c               1  [STACK] unsigned char 
 26451 ;; Return value:  Size  Location     Type
 26452 ;;                  2  [STACK] int 
 26453 ;; Registers used:
 26454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26455 ;; Tracked objects:
 26456 ;;		On entry : 0/0
 26457 ;;		On exit  : 0/0
 26458 ;;		Unchanged: 0/0
 26459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26464 ;;Total ram usage:        0 bytes
 26465 ;; Hardware stack levels used:    1
 26466 ;; Hardware stack levels required when called:   21
 26467 ;; This function calls:
 26468 ;;		_atoi
 26469 ;;		_ctoa
 26470 ;;		_dtoa
 26471 ;;		_efgtoa
 26472 ;;		_fputc
 26473 ;;		_isdigit
 26474 ;;		_isupper
 26475 ;;		_stoa
 26476 ;;		_strncmp
 26477 ;;		_tolower
 26478 ;;		_utoa
 26479 ;;		_xtoa
 26480 ;; This function is called by:
 26481 ;;		_vfprintf
 26482 ;; This function uses a reentrant model
 26483 ;;
 26484                           
 26485                           	psect	text93
 26486  013A36                     __ptext93:
 26487                           	opt callstack 0
 26488  013A36                     _vfpfcnvrt:
 26489                           	opt callstack 0
 26490                           
 26491                           ; BSR set to: 0
 26492                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26493  013A36  0E20               	movlw	32
 26494  013A38  26E1               	addwf	fsr1l,f,c
 26495  013A3A  0E00               	movlw	0
 26496  013A3C  22E2               	addwfc	fsr1h,f,c
 26497                           
 26498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 26499                           ;stkvar	_fmt @ sp[(-32)+-4]
 26500                           
 26501                           ;incstack = 0
 26502 ;; hardware stack exceeded
 26503  013A3E  0EDC               	movlw	-36
 26504  013A40  006F FF8F FFD9     	movff	plusw1,fsr2l
 26505  013A46  0EDD               	movlw	-35
 26506  013A48  006F FF8F FFDA     	movff	plusw1,fsr2h
 26507  013A4E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26508  013A54  006F FF77 FFF7     	movff	postdec2,tblptrh
 26509  013A5A                     	if	0	;tblptru may be non-zero
 26510  013A5A                     	endif
 26511  013A5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26512  013A5A  0E00               	movlw	low (__mediumconst shr (0+16))
 26513  013A5C  6EF8               	movwf	tblptru,c
 26514  013A5E                     	endif
 26515  013A5E  0008               	tblrd		*
 26516  013A60  50F5               	movf	tablat,w,c
 26517  013A62  0A25               	xorlw	37
 26518  013A64  A4D8               	btfss	status,2,c
 26519  013A66  EFC2  F0A4         	goto	l16332
 26520                           
 26521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 26522                           ;stkvar	_fmt @ sp[(-32)+-4]
 26523  013A6A  0EDC               	movlw	-36
 26524  013A6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26525  013A72  0EDD               	movlw	-35
 26526  013A74  006F FF8F FFDA     	movff	plusw1,fsr2h
 26527  013A7A  2ADE               	incf	postinc2,f,c
 26528  013A7C  0E00               	movlw	0
 26529  013A7E  22DD               	addwfc	postdec2,f,c
 26530                           
 26531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 26532  013A80  6A4A               	clrf	_width^0,c
 26533  013A82  6A4B               	clrf	(_width+1)^0,c
 26534  013A84  6A4E               	clrf	_flags^0,c
 26535  013A86  6A4F               	clrf	(_flags+1)^0,c
 26536                           
 26537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 26538  013A88  684C               	setf	_prec^0,c
 26539  013A8A  684D               	setf	(_prec+1)^0,c
 26540                           
 26541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 26542                           ;stkvar	_fmt @ sp[(-32)+-4]
 26543  013A8C  0EDC               	movlw	-36
 26544  013A8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26545  013A94  0EDD               	movlw	-35
 26546  013A96  006F FF8F FFDA     	movff	plusw1,fsr2h
 26547  013A9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26548  013AA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26549  013AA8                     	if	0	;tblptru may be non-zero
 26550  013AA8                     	endif
 26551  013AA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26552  013AA8  0E00               	movlw	low (__mediumconst shr (0+16))
 26553  013AAA  6EF8               	movwf	tblptru,c
 26554  013AAC                     	endif
 26555  013AAC  0008               	tblrd		*
 26556  013AAE  50F5               	movf	tablat,w,c
 26557  013AB0  0A2A               	xorlw	42
 26558  013AB2  A4D8               	btfss	status,2,c
 26559  013AB4  D031               	goto	l16150
 26560                           
 26561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 26562                           ;stkvar	_fmt @ sp[(-32)+-4]
 26563  013AB6  0EDC               	movlw	-36
 26564  013AB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26565  013ABE  0EDD               	movlw	-35
 26566  013AC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26567  013AC6  2ADE               	incf	postinc2,f,c
 26568  013AC8  0E00               	movlw	0
 26569  013ACA  22DD               	addwfc	postdec2,f,c
 26570                           
 26571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 26572                           ;stkvar	_ap @ sp[(-32)+-6]
 26573  013ACC  0EDA               	movlw	-38
 26574  013ACE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26575  013AD4  0EDB               	movlw	-37
 26576  013AD6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26577  013ADC  0E02               	movlw	2
 26578  013ADE  5EDE               	subwf	postinc2,f,c
 26579  013AE0  0E00               	movlw	0
 26580  013AE2  5ADD               	subwfb	postdec2,f,c
 26581  013AE4  006F FF78  F034    	movff	postinc2,btemp+10
 26582  013AEA  006F FF74  F035    	movff	postdec2,btemp+11
 26583  013AF0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26584  013AF6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26585  013AFC  006F FF78  F04A    	movff	postinc2,_width
 26586  013B02  006F FF74  F04B    	movff	postdec2,_width+1
 26587                           
 26588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 26589  013B08  AE4B               	btfss	(_width+1)^0,7,c
 26590  013B0A  D066               	goto	u15600
 26591                           
 26592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 26593  013B0C  804E               	bsf	_flags^0,0,c
 26594                           
 26595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 26596  013B0E  6C4A               	negf	_width^0,c
 26597  013B10  1E4B               	comf	(_width+1)^0,f,c
 26598  013B12  B0D8               	btfsc	status,0,c
 26599  013B14  2A4B               	incf	(_width+1)^0,f,c
 26600  013B16  D060               	goto	u15600
 26601  013B18                     l16150:
 26602                           
 26603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 26604                           ;stkvar	_fmt @ sp[(-32)+-4]
 26605  013B18  0EDC               	movlw	-36
 26606  013B1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26607  013B20  0EDD               	movlw	-35
 26608  013B22  006F FF8F FFDA     	movff	plusw1,fsr2h
 26609  013B28  006F FF78  F034    	movff	postinc2,btemp+10
 26610  013B2E  006F FF74  F035    	movff	postdec2,btemp+11
 26611  013B34  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26612  013B3A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26613  013B40  ECBD  F0E3         	call	_atoi	;wreg free
 26614  013B44  0060  F0A8  F04A   	movff	btemp,_width
 26615  013B4A  0060  F0AC  F04B   	movff	btemp+1,_width+1
 26616                           
 26617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26618  013B50  D00B               	goto	l16154
 26619  013B52                     l16152:
 26620                           
 26621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 26622                           ;stkvar	_fmt @ sp[(-32)+-4]
 26623  013B52  0EDC               	movlw	-36
 26624  013B54  006F FF8F FFD9     	movff	plusw1,fsr2l
 26625  013B5A  0EDD               	movlw	-35
 26626  013B5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26627  013B62  2ADE               	incf	postinc2,f,c
 26628  013B64  0E00               	movlw	0
 26629  013B66  22DD               	addwfc	postdec2,f,c
 26630  013B68                     l16154:
 26631  013B68  0ED0               	movlw	208
 26632  013B6A  6E34               	movwf	(btemp+10)^0,c
 26633  013B6C  0EFF               	movlw	255
 26634  013B6E  6E35               	movwf	(btemp+11)^0,c
 26635                           
 26636                           ;stkvar	_fmt @ sp[(-32)+-4]
 26637  013B70  0EDC               	movlw	-36
 26638  013B72  006F FF8F FFD9     	movff	plusw1,fsr2l
 26639  013B78  0EDD               	movlw	-35
 26640  013B7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26641  013B80  006F FF7B FFF6     	movff	postinc2,tblptrl
 26642  013B86  006F FF77 FFF7     	movff	postdec2,tblptrh
 26643  013B8C                     	if	0	;tblptru may be non-zero
 26644  013B8C                     	endif
 26645  013B8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26646  013B8C  0E00               	movlw	low (__mediumconst shr (0+16))
 26647  013B8E  6EF8               	movwf	tblptru,c
 26648  013B90                     	endif
 26649  013B90  0008               	tblrd		*
 26650  013B92  50F5               	movf	tablat,w,c
 26651  013B94  6E32               	movwf	(btemp+8)^0,c
 26652  013B96  6A33               	clrf	(btemp+9)^0,c
 26653  013B98  5034               	movf	(btemp+10)^0,w,c
 26654  013B9A  2632               	addwf	(btemp+8)^0,f,c
 26655  013B9C  5035               	movf	(btemp+11)^0,w,c
 26656  013B9E  2233               	addwfc	(btemp+9)^0,f,c
 26657  013BA0  5033               	movf	(btemp+9)^0,w,c
 26658  013BA2  E106               	bnz	u15580
 26659  013BA4  0E0A               	movlw	10
 26660  013BA6  5C32               	subwf	(btemp+8)^0,w,c
 26661  013BA8  B0D8               	btfsc	status,0,c
 26662  013BAA  D002               	goto	u15580
 26663  013BAC  0E01               	movlw	1
 26664  013BAE  D001               	goto	u15590
 26665  013BB0                     u15580:
 26666  013BB0  0E00               	movlw	0
 26667  013BB2                     u15590:
 26668  013BB2  6E34               	movwf	(btemp+10)^0,c
 26669  013BB4  6A35               	clrf	(btemp+11)^0,c
 26670                           
 26671                           ;stkvar	_vfpfcnvrt$6691 @ sp[(-32)+4]
 26672  013BB6  0EE4               	movlw	-28
 26673  013BB8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26674  013BBE  0EE5               	movlw	-27
 26675  013BC0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26676                           
 26677                           ;stkvar	_vfpfcnvrt$6691 @ sp[(-32)+4]
 26678  013BC6  0EE4               	movlw	-28
 26679  013BC8  006F FF8C  F02A    	movff	plusw1,btemp
 26680  013BCE  0EE5               	movlw	-27
 26681  013BD0  50E3               	movf	plusw1,w,c
 26682  013BD2  102A               	iorwf	btemp^0,w,c
 26683  013BD4  A4D8               	btfss	status,2,c
 26684  013BD6  D7BD               	goto	l16152
 26685  013BD8                     u15600:
 26686                           
 26687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 26688                           ;stkvar	_fmt @ sp[(-32)+-4]
 26689  013BD8  0EDC               	movlw	-36
 26690  013BDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 26691  013BE0  0EDD               	movlw	-35
 26692  013BE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 26693  013BE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 26694  013BEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 26695  013BF4                     	if	0	;tblptru may be non-zero
 26696  013BF4                     	endif
 26697  013BF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26698  013BF4  0E00               	movlw	low (__mediumconst shr (0+16))
 26699  013BF6  6EF8               	movwf	tblptru,c
 26700  013BF8                     	endif
 26701  013BF8  0008               	tblrd		*
 26702  013BFA  50F5               	movf	tablat,w,c
 26703  013BFC  0A2E               	xorlw	46
 26704  013BFE  A4D8               	btfss	status,2,c
 26705  013C00  D0AC               	goto	u15650
 26706                           
 26707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 26708  013C02  6A4C               	clrf	_prec^0,c
 26709  013C04  6A4D               	clrf	(_prec+1)^0,c
 26710                           
 26711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 26712                           ;stkvar	_fmt @ sp[(-32)+-4]
 26713  013C06  0EDC               	movlw	-36
 26714  013C08  006F FF8F FFD9     	movff	plusw1,fsr2l
 26715  013C0E  0EDD               	movlw	-35
 26716  013C10  006F FF8F FFDA     	movff	plusw1,fsr2h
 26717  013C16  2ADE               	incf	postinc2,f,c
 26718  013C18  0E00               	movlw	0
 26719  013C1A  22DD               	addwfc	postdec2,f,c
 26720                           
 26721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 26722                           ;stkvar	_fmt @ sp[(-32)+-4]
 26723  013C1C  0EDC               	movlw	-36
 26724  013C1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26725  013C24  0EDD               	movlw	-35
 26726  013C26  006F FF8F FFDA     	movff	plusw1,fsr2h
 26727  013C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26728  013C32  006F FF77 FFF7     	movff	postdec2,tblptrh
 26729  013C38                     	if	0	;tblptru may be non-zero
 26730  013C38                     	endif
 26731  013C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26732  013C38  0E00               	movlw	low (__mediumconst shr (0+16))
 26733  013C3A  6EF8               	movwf	tblptru,c
 26734  013C3C                     	endif
 26735  013C3C  0008               	tblrd		*
 26736  013C3E  50F5               	movf	tablat,w,c
 26737  013C40  0A2A               	xorlw	42
 26738  013C42  A4D8               	btfss	status,2,c
 26739  013C44  D02A               	goto	l16172
 26740                           
 26741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 26742                           ;stkvar	_fmt @ sp[(-32)+-4]
 26743  013C46  0EDC               	movlw	-36
 26744  013C48  006F FF8F FFD9     	movff	plusw1,fsr2l
 26745  013C4E  0EDD               	movlw	-35
 26746  013C50  006F FF8F FFDA     	movff	plusw1,fsr2h
 26747  013C56  2ADE               	incf	postinc2,f,c
 26748  013C58  0E00               	movlw	0
 26749  013C5A  22DD               	addwfc	postdec2,f,c
 26750                           
 26751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 26752                           ;stkvar	_ap @ sp[(-32)+-6]
 26753  013C5C  0EDA               	movlw	-38
 26754  013C5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26755  013C64  0EDB               	movlw	-37
 26756  013C66  006F FF8F FFDA     	movff	plusw1,fsr2h
 26757  013C6C  0E02               	movlw	2
 26758  013C6E  5EDE               	subwf	postinc2,f,c
 26759  013C70  0E00               	movlw	0
 26760  013C72  5ADD               	subwfb	postdec2,f,c
 26761  013C74  006F FF78  F034    	movff	postinc2,btemp+10
 26762  013C7A  006F FF74  F035    	movff	postdec2,btemp+11
 26763  013C80  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26764  013C86  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26765  013C8C  006F FF78  F04C    	movff	postinc2,_prec
 26766  013C92  006F FF74  F04D    	movff	postdec2,_prec+1
 26767                           
 26768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 26769  013C98  D060               	goto	u15650
 26770  013C9A                     l16172:
 26771                           
 26772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 26773                           ;stkvar	_fmt @ sp[(-32)+-4]
 26774  013C9A  0EDC               	movlw	-36
 26775  013C9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26776  013CA2  0EDD               	movlw	-35
 26777  013CA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26778  013CAA  006F FF78  F034    	movff	postinc2,btemp+10
 26779  013CB0  006F FF74  F035    	movff	postdec2,btemp+11
 26780  013CB6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26781  013CBC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26782  013CC2  ECBD  F0E3         	call	_atoi	;wreg free
 26783  013CC6  0060  F0A8  F04C   	movff	btemp,_prec
 26784  013CCC  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 26785                           
 26786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26787  013CD2  D00B               	goto	l16176
 26788  013CD4                     l16174:
 26789                           
 26790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 26791                           ;stkvar	_fmt @ sp[(-32)+-4]
 26792  013CD4  0EDC               	movlw	-36
 26793  013CD6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26794  013CDC  0EDD               	movlw	-35
 26795  013CDE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26796  013CE4  2ADE               	incf	postinc2,f,c
 26797  013CE6  0E00               	movlw	0
 26798  013CE8  22DD               	addwfc	postdec2,f,c
 26799  013CEA                     l16176:
 26800  013CEA  0ED0               	movlw	208
 26801  013CEC  6E34               	movwf	(btemp+10)^0,c
 26802  013CEE  0EFF               	movlw	255
 26803  013CF0  6E35               	movwf	(btemp+11)^0,c
 26804                           
 26805                           ;stkvar	_fmt @ sp[(-32)+-4]
 26806  013CF2  0EDC               	movlw	-36
 26807  013CF4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26808  013CFA  0EDD               	movlw	-35
 26809  013CFC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26810  013D02  006F FF7B FFF6     	movff	postinc2,tblptrl
 26811  013D08  006F FF77 FFF7     	movff	postdec2,tblptrh
 26812  013D0E                     	if	0	;tblptru may be non-zero
 26813  013D0E                     	endif
 26814  013D0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26815  013D0E  0E00               	movlw	low (__mediumconst shr (0+16))
 26816  013D10  6EF8               	movwf	tblptru,c
 26817  013D12                     	endif
 26818  013D12  0008               	tblrd		*
 26819  013D14  50F5               	movf	tablat,w,c
 26820  013D16  6E32               	movwf	(btemp+8)^0,c
 26821  013D18  6A33               	clrf	(btemp+9)^0,c
 26822  013D1A  5034               	movf	(btemp+10)^0,w,c
 26823  013D1C  2632               	addwf	(btemp+8)^0,f,c
 26824  013D1E  5035               	movf	(btemp+11)^0,w,c
 26825  013D20  2233               	addwfc	(btemp+9)^0,f,c
 26826  013D22  5033               	movf	(btemp+9)^0,w,c
 26827  013D24  E106               	bnz	u15630
 26828  013D26  0E0A               	movlw	10
 26829  013D28  5C32               	subwf	(btemp+8)^0,w,c
 26830  013D2A  B0D8               	btfsc	status,0,c
 26831  013D2C  D002               	goto	u15630
 26832  013D2E  0E01               	movlw	1
 26833  013D30  D001               	goto	u15640
 26834  013D32                     u15630:
 26835  013D32  0E00               	movlw	0
 26836  013D34                     u15640:
 26837  013D34  6E34               	movwf	(btemp+10)^0,c
 26838  013D36  6A35               	clrf	(btemp+11)^0,c
 26839                           
 26840                           ;stkvar	_vfpfcnvrt$6692 @ sp[(-32)+0]
 26841  013D38  0EE0               	movlw	-32
 26842  013D3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26843  013D40  0EE1               	movlw	-31
 26844  013D42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26845                           
 26846                           ;stkvar	_vfpfcnvrt$6692 @ sp[(-32)+0]
 26847  013D48  0EE0               	movlw	-32
 26848  013D4A  006F FF8C  F02A    	movff	plusw1,btemp
 26849  013D50  0EE1               	movlw	-31
 26850  013D52  50E3               	movf	plusw1,w,c
 26851  013D54  102A               	iorwf	btemp^0,w,c
 26852  013D56  A4D8               	btfss	status,2,c
 26853  013D58  D7BD               	goto	l16174
 26854  013D5A                     u15650:
 26855                           
 26856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 26857                           ;stkvar	_fmt @ sp[(-32)+-4]
 26858  013D5A  0EDC               	movlw	-36
 26859  013D5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26860  013D62  0EDD               	movlw	-35
 26861  013D64  006F FF8F FFDA     	movff	plusw1,fsr2h
 26862  013D6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26863  013D70  006F FF77 FFF7     	movff	postdec2,tblptrh
 26864  013D76                     	if	0	;tblptru may be non-zero
 26865  013D76                     	endif
 26866  013D76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26867  013D76  0E00               	movlw	low (__mediumconst shr (0+16))
 26868  013D78  6EF8               	movwf	tblptru,c
 26869  013D7A                     	endif
 26870  013D7A  0008               	tblrd		*
 26871  013D7C  50F5               	movf	tablat,w,c
 26872  013D7E  6EE6               	movwf	postinc1,c
 26873  013D80  0E00               	movlw	0
 26874  013D82  6EE6               	movwf	postinc1,c
 26875  013D84  EC40  F00A         	call	_tolower	;wreg free
 26876                           
 26877                           ;stkvar	_ct @ sp[(-32)+26]
 26878  013D88  0EFA               	movlw	-6
 26879  013D8A  0060  F0AB  FFE3   	movff	btemp,plusw1
 26880                           
 26881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 26882                           ;stkvar	_ct @ sp[(-32)+26]
 26883  013D90  0EFA               	movlw	-6
 26884  013D92  50E3               	movf	plusw1,w,c
 26885  013D94  B4D8               	btfsc	status,2,c
 26886  013D96  D05B               	goto	l16192
 26887                           
 26888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 26889                           ;stkvar	_ct @ sp[(-32)+26]
 26890  013D98  0EFB               	movlw	251
 26891  013D9A  24E1               	addwf	fsr1l,w,c
 26892  013D9C  6ED9               	movwf	fsr2l,c
 26893  013D9E  0EFF               	movlw	255
 26894  013DA0  20E2               	addwfc	fsr1h,w,c
 26895  013DA2  6EDA               	movwf	fsr2h,c
 26896                           
 26897                           ;stkvar	_fmt @ sp[(-32)+-4]
 26898  013DA4  0EDC               	movlw	-36
 26899  013DA6  006F FF8F FFE9     	movff	plusw1,fsr0l
 26900  013DAC  0EDD               	movlw	-35
 26901  013DAE  006F FF8F FFEA     	movff	plusw1,fsr0h
 26902  013DB4  006F FFB8  F034    	movff	postinc0,btemp+10
 26903  013DBA  006F FFB4  F035    	movff	postdec0,btemp+11
 26904  013DC0  0E01               	movlw	1
 26905  013DC2  2634               	addwf	(btemp+10)^0,f,c
 26906  013DC4  0E00               	movlw	0
 26907  013DC6  2235               	addwfc	(btemp+11)^0,f,c
 26908  013DC8  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26909  013DCE  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26910  013DD4                     	if	0	;tblptru may be non-zero
 26911  013DD4                     	endif
 26912  013DD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26913  013DD4  0E00               	movlw	low (__mediumconst shr (0+16))
 26914  013DD6  6EF8               	movwf	tblptru,c
 26915  013DD8                     	endif
 26916  013DD8  0008               	tblrd		*
 26917  013DDA  50F5               	movf	tablat,w,c
 26918  013DDC  6EE6               	movwf	postinc1,c
 26919  013DDE  0E00               	movlw	0
 26920  013DE0  6EE6               	movwf	postinc1,c
 26921  013DE2  EC40  F00A         	call	_tolower	;wreg free
 26922  013DE6  502A               	movf	btemp^0,w,c
 26923  013DE8  6EDF               	movwf	indf2,c
 26924                           
 26925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 26926                           ;stkvar	_ct @ sp[(-32)+26]
 26927  013DEA  0EFB               	movlw	251
 26928  013DEC  24E1               	addwf	fsr1l,w,c
 26929  013DEE  6ED9               	movwf	fsr2l,c
 26930  013DF0  0EFF               	movlw	255
 26931  013DF2  20E2               	addwfc	fsr1h,w,c
 26932  013DF4  6EDA               	movwf	fsr2h,c
 26933  013DF6  50DF               	movf	indf2,w,c
 26934  013DF8  B4D8               	btfsc	status,2,c
 26935  013DFA  D029               	goto	l16192
 26936                           
 26937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 26938                           ;stkvar	_ct @ sp[(-32)+26]
 26939  013DFC  0EFC               	movlw	252
 26940  013DFE  24E1               	addwf	fsr1l,w,c
 26941  013E00  6ED9               	movwf	fsr2l,c
 26942  013E02  0EFF               	movlw	255
 26943  013E04  20E2               	addwfc	fsr1h,w,c
 26944  013E06  6EDA               	movwf	fsr2h,c
 26945                           
 26946                           ;stkvar	_fmt @ sp[(-32)+-4]
 26947  013E08  0EDC               	movlw	-36
 26948  013E0A  006F FF8F FFE9     	movff	plusw1,fsr0l
 26949  013E10  0EDD               	movlw	-35
 26950  013E12  006F FF8F FFEA     	movff	plusw1,fsr0h
 26951  013E18  006F FFB8  F034    	movff	postinc0,btemp+10
 26952  013E1E  006F FFB4  F035    	movff	postdec0,btemp+11
 26953  013E24  0E02               	movlw	2
 26954  013E26  2634               	addwf	(btemp+10)^0,f,c
 26955  013E28  0E00               	movlw	0
 26956  013E2A  2235               	addwfc	(btemp+11)^0,f,c
 26957  013E2C  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26958  013E32  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26959  013E38                     	if	0	;tblptru may be non-zero
 26960  013E38                     	endif
 26961  013E38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26962  013E38  0E00               	movlw	low (__mediumconst shr (0+16))
 26963  013E3A  6EF8               	movwf	tblptru,c
 26964  013E3C                     	endif
 26965  013E3C  0008               	tblrd		*
 26966  013E3E  50F5               	movf	tablat,w,c
 26967  013E40  6EE6               	movwf	postinc1,c
 26968  013E42  0E00               	movlw	0
 26969  013E44  6EE6               	movwf	postinc1,c
 26970  013E46  EC40  F00A         	call	_tolower	;wreg free
 26971  013E4A  502A               	movf	btemp^0,w,c
 26972  013E4C  6EDF               	movwf	indf2,c
 26973  013E4E                     l16192:
 26974                           
 26975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 26976                           ;stkvar	_fmt @ sp[(-32)+-4]
 26977  013E4E  0EDC               	movlw	-36
 26978  013E50  006F FF8F FFD9     	movff	plusw1,fsr2l
 26979  013E56  0EDD               	movlw	-35
 26980  013E58  006F FF8F FFDA     	movff	plusw1,fsr2h
 26981  013E5E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26982  013E64  006F FF77 FFF7     	movff	postdec2,tblptrh
 26983  013E6A                     	if	0	;tblptru may be non-zero
 26984  013E6A                     	endif
 26985  013E6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26986  013E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 26987  013E6C  6EF8               	movwf	tblptru,c
 26988  013E6E                     	endif
 26989  013E6E  0008               	tblrd		*
 26990  013E70  50F5               	movf	tablat,w,c
 26991  013E72  0A63               	xorlw	99
 26992  013E74  A4D8               	btfss	status,2,c
 26993  013E76  D037               	goto	l16202
 26994                           
 26995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 26996                           ;stkvar	_fmt @ sp[(-32)+-4]
 26997  013E78  0EDC               	movlw	-36
 26998  013E7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26999  013E80  0EDD               	movlw	-35
 27000  013E82  006F FF8F FFDA     	movff	plusw1,fsr2h
 27001  013E88  2ADE               	incf	postinc2,f,c
 27002  013E8A  0E00               	movlw	0
 27003  013E8C  22DD               	addwfc	postdec2,f,c
 27004                           
 27005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 27006                           ;stkvar	_ap @ sp[(-32)+-6]
 27007  013E8E  0EDA               	movlw	-38
 27008  013E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 27009  013E96  0EDB               	movlw	-37
 27010  013E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 27011  013E9E  0E02               	movlw	2
 27012  013EA0  5EDE               	subwf	postinc2,f,c
 27013  013EA2  0E00               	movlw	0
 27014  013EA4  5ADD               	subwfb	postdec2,f,c
 27015  013EA6  006F FF78  F034    	movff	postinc2,btemp+10
 27016  013EAC  006F FF74  F035    	movff	postdec2,btemp+11
 27017  013EB2  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27018  013EB8  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27019  013EBE  50DF               	movf	indf2,w,c
 27020  013EC0  6E35               	movwf	(btemp+11)^0,c
 27021                           
 27022                           ;stkvar	_c @ sp[(-32)+31]
 27023  013EC2  0EFF               	movlw	-1
 27024  013EC4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27025                           
 27026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 27027                           ;stkvar	_c @ sp[(-32)+31]
 27028  013ECA  0EFF               	movlw	-1
 27029  013ECC  50E3               	movf	plusw1,w,c
 27030  013ECE  6EE6               	movwf	postinc1,c
 27031                           
 27032                           ;stkvar	_fp @ sp[(-33)+-2]
 27033  013ED0  0EDD               	movlw	-35
 27034  013ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 27035  013ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 27036  013EDE  ECBA  F009         	call	_ctoa	;wreg free
 27037  013EE2  EFEC  F0A4         	goto	l2699
 27038  013EE6                     l16202:
 27039                           
 27040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 27041                           ;stkvar	_fmt @ sp[(-32)+-4]
 27042  013EE6  0EDC               	movlw	-36
 27043  013EE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27044  013EEE  0EDD               	movlw	-35
 27045  013EF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27046  013EF6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27047  013EFC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27048  013F02                     	if	0	;tblptru may be non-zero
 27049  013F02                     	endif
 27050  013F02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27051  013F02  0E00               	movlw	low (__mediumconst shr (0+16))
 27052  013F04  6EF8               	movwf	tblptru,c
 27053  013F06                     	endif
 27054  013F06  0008               	tblrd		*
 27055  013F08  50F5               	movf	tablat,w,c
 27056  013F0A  0A64               	xorlw	100
 27057  013F0C  B4D8               	btfsc	status,2,c
 27058  013F0E  D015               	goto	u15700
 27059                           
 27060                           ;stkvar	_fmt @ sp[(-32)+-4]
 27061  013F10  0EDC               	movlw	-36
 27062  013F12  006F FF8F FFD9     	movff	plusw1,fsr2l
 27063  013F18  0EDD               	movlw	-35
 27064  013F1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27065  013F20  006F FF7B FFF6     	movff	postinc2,tblptrl
 27066  013F26  006F FF77 FFF7     	movff	postdec2,tblptrh
 27067  013F2C                     	if	0	;tblptru may be non-zero
 27068  013F2C                     	endif
 27069  013F2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27070  013F2C  0E00               	movlw	low (__mediumconst shr (0+16))
 27071  013F2E  6EF8               	movwf	tblptru,c
 27072  013F30                     	endif
 27073  013F30  0008               	tblrd		*
 27074  013F32  50F5               	movf	tablat,w,c
 27075  013F34  0A69               	xorlw	105
 27076  013F36  A4D8               	btfss	status,2,c
 27077  013F38  D076               	goto	l16214
 27078  013F3A                     u15700:
 27079                           
 27080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 27081                           ;stkvar	_fmt @ sp[(-32)+-4]
 27082  013F3A  0EDC               	movlw	-36
 27083  013F3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27084  013F42  0EDD               	movlw	-35
 27085  013F44  006F FF8F FFDA     	movff	plusw1,fsr2h
 27086  013F4A  2ADE               	incf	postinc2,f,c
 27087  013F4C  0E00               	movlw	0
 27088  013F4E  22DD               	addwfc	postdec2,f,c
 27089                           
 27090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 27091                           ;stkvar	_ap @ sp[(-32)+-6]
 27092  013F50  0EDA               	movlw	-38
 27093  013F52  006F FF8F FFD9     	movff	plusw1,fsr2l
 27094  013F58  0EDB               	movlw	-37
 27095  013F5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27096  013F60  0E02               	movlw	2
 27097  013F62  5EDE               	subwf	postinc2,f,c
 27098  013F64  0E00               	movlw	0
 27099  013F66  5ADD               	subwfb	postdec2,f,c
 27100  013F68  006F FF78  F034    	movff	postinc2,btemp+10
 27101  013F6E  006F FF74  F035    	movff	postdec2,btemp+11
 27102  013F74  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27103  013F7A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27104  013F80  006F FF78  F034    	movff	postinc2,btemp+10
 27105  013F86  006F FF74  F035    	movff	postdec2,btemp+11
 27106                           
 27107                           ;stkvar	_ll @ sp[(-32)+14]
 27108  013F8C  0EEE               	movlw	-18
 27109  013F8E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27110  013F94  0EEF               	movlw	-17
 27111  013F96  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27112  013F9C  6A2A               	clrf	btemp^0,c
 27113  013F9E  BEE3               	btfsc	plusw1,7,c
 27114  013FA0  682A               	setf	btemp^0,c
 27115  013FA2  0EF0               	movlw	-16
 27116  013FA4  0060  F0AB  FFE3   	movff	btemp,plusw1
 27117  013FAA  0EF1               	movlw	-15
 27118  013FAC  0060  F0AB  FFE3   	movff	btemp,plusw1
 27119  013FB2  0EF2               	movlw	-14
 27120  013FB4  0060  F0AB  FFE3   	movff	btemp,plusw1
 27121  013FBA  0EF3               	movlw	-13
 27122  013FBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 27123  013FC2  0EF4               	movlw	-12
 27124  013FC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 27125  013FCA  0EF5               	movlw	-11
 27126  013FCC  0060  F0AB  FFE3   	movff	btemp,plusw1
 27127  013FD2                     l16210:
 27128                           
 27129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 27130                           ;stkvar	_ll @ sp[(-32)+14]
 27131  013FD2  50E1               	movf	fsr1l,w,c
 27132  013FD4  0FEE               	addlw	-18
 27133  013FD6  6ED9               	movwf	fsr2l,c
 27134  013FD8  50E2               	movf	fsr1h,w,c
 27135  013FDA  6EDA               	movwf	fsr2h,c
 27136  013FDC  0EFF               	movlw	255
 27137  013FDE  22DA               	addwfc	fsr2h,f,c
 27138  013FE0  006F FF7B FFE6     	movff	postinc2,postinc1
 27139  013FE6  006F FF7B FFE6     	movff	postinc2,postinc1
 27140  013FEC  006F FF7B FFE6     	movff	postinc2,postinc1
 27141  013FF2  006F FF7B FFE6     	movff	postinc2,postinc1
 27142  013FF8  006F FF7B FFE6     	movff	postinc2,postinc1
 27143  013FFE  006F FF7B FFE6     	movff	postinc2,postinc1
 27144  014004  006F FF7B FFE6     	movff	postinc2,postinc1
 27145  01400A  006F FF7B FFE6     	movff	postinc2,postinc1
 27146                           
 27147                           ;stkvar	_fp @ sp[(-40)+-2]
 27148  014010  0ED6               	movlw	-42
 27149  014012  006F FF8F FFE6     	movff	plusw1,postinc1
 27150  014018  006F FF8F FFE6     	movff	plusw1,postinc1
 27151  01401E  EC0A  F0C9         	call	_dtoa	;wreg free
 27152  014022  EFEC  F0A4         	goto	l2699
 27153  014026                     l16214:
 27154                           
 27155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 27156  014026  0E02               	movlw	2
 27157  014028  6EE6               	movwf	postinc1,c
 27158  01402A  0E00               	movlw	0
 27159  01402C  6EE6               	movwf	postinc1,c
 27160  01402E  0EED               	movlw	low STR_104
 27161  014030  6EE6               	movwf	postinc1,c
 27162  014032  0EFF               	movlw	high STR_104
 27163  014034  6EE6               	movwf	postinc1,c
 27164                           
 27165                           ;stkvar	_fmt @ sp[(-36)+-4]
 27166  014036  0ED8               	movlw	-40
 27167  014038  006F FF8F FFD9     	movff	plusw1,fsr2l
 27168  01403E  0ED9               	movlw	-39
 27169  014040  006F FF8F FFDA     	movff	plusw1,fsr2h
 27170  014046  006F FF78  F034    	movff	postinc2,btemp+10
 27171  01404C  006F FF74  F035    	movff	postdec2,btemp+11
 27172  014052  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27173  014058  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27174  01405E  EC74  F0E9         	call	_strncmp	;wreg free
 27175  014062  502A               	movf	btemp^0,w,c
 27176  014064  102B               	iorwf	(btemp+1)^0,w,c
 27177  014066  B4D8               	btfsc	status,2,c
 27178  014068  D022               	goto	u15720
 27179  01406A  0E02               	movlw	2
 27180  01406C  6EE6               	movwf	postinc1,c
 27181  01406E  0E00               	movlw	0
 27182  014070  6EE6               	movwf	postinc1,c
 27183  014072  0EF3               	movlw	low STR_108
 27184  014074  6EE6               	movwf	postinc1,c
 27185  014076  0EFF               	movlw	high STR_108
 27186  014078  6EE6               	movwf	postinc1,c
 27187                           
 27188                           ;stkvar	_fmt @ sp[(-36)+-4]
 27189  01407A  0ED8               	movlw	-40
 27190  01407C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27191  014082  0ED9               	movlw	-39
 27192  014084  006F FF8F FFDA     	movff	plusw1,fsr2h
 27193  01408A  006F FF78  F034    	movff	postinc2,btemp+10
 27194  014090  006F FF74  F035    	movff	postdec2,btemp+11
 27195  014096  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27196  01409C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27197  0140A2  EC74  F0E9         	call	_strncmp	;wreg free
 27198  0140A6  502A               	movf	btemp^0,w,c
 27199  0140A8  102B               	iorwf	(btemp+1)^0,w,c
 27200  0140AA  A4D8               	btfss	status,2,c
 27201  0140AC  D069               	goto	l16226
 27202  0140AE                     u15720:
 27203                           
 27204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 27205                           ;stkvar	_fmt @ sp[(-32)+-4]
 27206  0140AE  0EDC               	movlw	-36
 27207  0140B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 27208  0140B6  0EDD               	movlw	-35
 27209  0140B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 27210  0140BE  0E02               	movlw	2
 27211  0140C0  26DE               	addwf	postinc2,f,c
 27212  0140C2  0E00               	movlw	0
 27213  0140C4  22DD               	addwfc	postdec2,f,c
 27214                           
 27215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 27216                           ;stkvar	_ap @ sp[(-32)+-6]
 27217  0140C6  0EDA               	movlw	-38
 27218  0140C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27219  0140CE  0EDB               	movlw	-37
 27220  0140D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27221  0140D6  0E04               	movlw	4
 27222  0140D8  5EDE               	subwf	postinc2,f,c
 27223  0140DA  0E00               	movlw	0
 27224  0140DC  5ADD               	subwfb	postdec2,f,c
 27225  0140DE  006F FF78  F034    	movff	postinc2,btemp+10
 27226  0140E4  006F FF74  F035    	movff	postdec2,btemp+11
 27227  0140EA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27228  0140F0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27229  0140F6  006F FF78  F032    	movff	postinc2,btemp+8
 27230  0140FC  006F FF78  F033    	movff	postinc2,btemp+9
 27231  014102  006F FF78  F034    	movff	postinc2,btemp+10
 27232  014108  006F FF78  F035    	movff	postinc2,btemp+11
 27233  01410E  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 27234  014114  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 27235  01411A  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 27236  014120  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 27237  014126  6A3E               	clrf	(btemp+20)^0,c
 27238  014128  BE3D               	btfsc	(btemp+19)^0,7,c
 27239  01412A  683E               	setf	(btemp+20)^0,c
 27240  01412C  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 27241  014132  0060  F0F8  F040   	movff	btemp+20,btemp+22
 27242  014138  0060  F0F8  F041   	movff	btemp+20,btemp+23
 27243                           
 27244                           ;stkvar	_ll @ sp[(-32)+14]
 27245  01413E  0EEE               	movlw	-18
 27246  014140  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27247  014146  0EEF               	movlw	-17
 27248  014148  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27249  01414E  0EF0               	movlw	-16
 27250  014150  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27251  014156  0EF1               	movlw	-15
 27252  014158  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27253  01415E  0EF2               	movlw	-14
 27254  014160  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27255  014166  0EF3               	movlw	-13
 27256  014168  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27257  01416E  0EF4               	movlw	-12
 27258  014170  0060  F103  FFE3   	movff	btemp+22,plusw1
 27259  014176  0EF5               	movlw	-11
 27260  014178  0060  F107  FFE3   	movff	btemp+23,plusw1
 27261  01417E  D729               	goto	l16210
 27262  014180                     l16226:
 27263                           
 27264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 27265                           ;stkvar	_ct @ sp[(-32)+26]
 27266  014180  0EFA               	movlw	-6
 27267  014182  006F FF8C  F02A    	movff	plusw1,btemp
 27268  014188  0E66               	movlw	102
 27269  01418A  182A               	xorwf	btemp^0,w,c
 27270  01418C  A4D8               	btfss	status,2,c
 27271  01418E  D06E               	goto	l16238
 27272                           
 27273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 27274                           ;stkvar	_fmt @ sp[(-32)+-4]
 27275  014190  0EDC               	movlw	-36
 27276  014192  006F FF8F FFD9     	movff	plusw1,fsr2l
 27277  014198  0EDD               	movlw	-35
 27278  01419A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27279  0141A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 27280  0141A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 27281  0141AC                     	if	0	;tblptru may be non-zero
 27282  0141AC                     	endif
 27283  0141AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27284  0141AC  0E00               	movlw	low (__mediumconst shr (0+16))
 27285  0141AE  6EF8               	movwf	tblptru,c
 27286  0141B0                     	endif
 27287                           
 27288                           ;stkvar	_c @ sp[(-32)+31]
 27289  0141B0  0008               	tblrd		*
 27290  0141B2  0EFF               	movlw	-1
 27291  0141B4  006F FFD7 FFE3     	movff	tablat,plusw1
 27292                           
 27293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 27294                           ;stkvar	_fmt @ sp[(-32)+-4]
 27295  0141BA  0EDC               	movlw	-36
 27296  0141BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27297  0141C2  0EDD               	movlw	-35
 27298  0141C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27299  0141CA  2ADE               	incf	postinc2,f,c
 27300  0141CC  0E00               	movlw	0
 27301  0141CE  22DD               	addwfc	postdec2,f,c
 27302                           
 27303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 27304                           ;stkvar	_ap @ sp[(-32)+-6]
 27305  0141D0  0EDA               	movlw	-38
 27306  0141D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27307  0141D8  0EDB               	movlw	-37
 27308  0141DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27309  0141E0  0E04               	movlw	4
 27310  0141E2  5EDE               	subwf	postinc2,f,c
 27311  0141E4  0E00               	movlw	0
 27312  0141E6  5ADD               	subwfb	postdec2,f,c
 27313  0141E8  006F FF78  F034    	movff	postinc2,btemp+10
 27314  0141EE  006F FF74  F035    	movff	postdec2,btemp+11
 27315  0141F4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27316  0141FA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27317  014200  006F FF78  F032    	movff	postinc2,btemp+8
 27318  014206  006F FF78  F033    	movff	postinc2,btemp+9
 27319  01420C  006F FF78  F034    	movff	postinc2,btemp+10
 27320  014212  006F FF78  F035    	movff	postinc2,btemp+11
 27321                           
 27322                           ;stkvar	_f @ sp[(-32)+22]
 27323  014218  0EF6               	movlw	-10
 27324  01421A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27325  014220  0EF7               	movlw	-9
 27326  014222  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27327  014228  0EF8               	movlw	-8
 27328  01422A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27329  014230  0EF9               	movlw	-7
 27330  014232  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27331  014238                     l16234:
 27332                           
 27333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 27334                           ;stkvar	_c @ sp[(-32)+31]
 27335  014238  0EFF               	movlw	-1
 27336  01423A  50E3               	movf	plusw1,w,c
 27337  01423C  6EE6               	movwf	postinc1,c
 27338                           
 27339                           ;stkvar	_f @ sp[(-33)+22]
 27340  01423E  0EF5               	movlw	-11
 27341  014240  006F FF8F FFE6     	movff	plusw1,postinc1
 27342  014246  006F FF8F FFE6     	movff	plusw1,postinc1
 27343  01424C  006F FF8F FFE6     	movff	plusw1,postinc1
 27344  014252  006F FF8F FFE6     	movff	plusw1,postinc1
 27345                           
 27346                           ;stkvar	_fp @ sp[(-37)+-2]
 27347  014258  0ED9               	movlw	-39
 27348  01425A  006F FF8F FFE6     	movff	plusw1,postinc1
 27349  014260  006F FF8F FFE6     	movff	plusw1,postinc1
 27350  014266  EC90  F08B         	call	_efgtoa	;wreg free
 27351  01426A  D3B6               	goto	l2699
 27352  01426C                     l16238:
 27353                           
 27354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 27355  01426C  0E02               	movlw	2
 27356  01426E  6EE6               	movwf	postinc1,c
 27357  014270  0E00               	movlw	0
 27358  014272  6EE6               	movwf	postinc1,c
 27359  014274  0EF0               	movlw	low STR_113
 27360  014276  6EE6               	movwf	postinc1,c
 27361  014278  0EFF               	movlw	high STR_113
 27362  01427A  6EE6               	movwf	postinc1,c
 27363                           
 27364                           ;stkvar	_ct @ sp[(-36)+26]
 27365  01427C  0EF6               	movlw	246
 27366  01427E  24E1               	addwf	fsr1l,w,c
 27367  014280  6E2A               	movwf	btemp^0,c
 27368  014282  0EFF               	movlw	255
 27369  014284  20E2               	addwfc	fsr1h,w,c
 27370  014286  6E2B               	movwf	(btemp+1)^0,c
 27371  014288  0060  F0AB  FFE6   	movff	btemp,postinc1
 27372  01428E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 27373  014294  EC74  F0E9         	call	_strncmp	;wreg free
 27374  014298  502A               	movf	btemp^0,w,c
 27375  01429A  102B               	iorwf	(btemp+1)^0,w,c
 27376  01429C  A4D8               	btfss	status,2,c
 27377  01429E  D096               	goto	l16258
 27378                           
 27379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 27380                           ;stkvar	_fmt @ sp[(-32)+-4]
 27381  0142A0  0EDC               	movlw	-36
 27382  0142A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27383  0142A8  0EDD               	movlw	-35
 27384  0142AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27385  0142B0  006F FF78  F034    	movff	postinc2,btemp+10
 27386  0142B6  006F FF74  F035    	movff	postdec2,btemp+11
 27387  0142BC  0E01               	movlw	1
 27388  0142BE  2634               	addwf	(btemp+10)^0,f,c
 27389  0142C0  0E00               	movlw	0
 27390  0142C2  2235               	addwfc	(btemp+11)^0,f,c
 27391  0142C4  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27392  0142CA  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27393  0142D0                     	if	0	;tblptru may be non-zero
 27394  0142D0                     	endif
 27395  0142D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27396  0142D0  0E00               	movlw	low (__mediumconst shr (0+16))
 27397  0142D2  6EF8               	movwf	tblptru,c
 27398  0142D4                     	endif
 27399                           
 27400                           ;stkvar	_c @ sp[(-32)+31]
 27401  0142D4  0008               	tblrd		*
 27402  0142D6  0EFF               	movlw	-1
 27403  0142D8  006F FFD7 FFE3     	movff	tablat,plusw1
 27404  0142DE  0EBF               	movlw	191
 27405  0142E0  6E34               	movwf	(btemp+10)^0,c
 27406  0142E2  0EFF               	movlw	255
 27407  0142E4  6E35               	movwf	(btemp+11)^0,c
 27408                           
 27409                           ;stkvar	_fmt @ sp[(-32)+-4]
 27410  0142E6  0EDC               	movlw	-36
 27411  0142E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27412  0142EE  0EDD               	movlw	-35
 27413  0142F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27414  0142F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27415  0142FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27416  014302                     	if	0	;tblptru may be non-zero
 27417  014302                     	endif
 27418  014302                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27419  014302  0E00               	movlw	low (__mediumconst shr (0+16))
 27420  014304  6EF8               	movwf	tblptru,c
 27421  014306                     	endif
 27422  014306  0008               	tblrd		*
 27423  014308  50F5               	movf	tablat,w,c
 27424  01430A  6E32               	movwf	(btemp+8)^0,c
 27425  01430C  6A33               	clrf	(btemp+9)^0,c
 27426  01430E  5034               	movf	(btemp+10)^0,w,c
 27427  014310  2632               	addwf	(btemp+8)^0,f,c
 27428  014312  5035               	movf	(btemp+11)^0,w,c
 27429  014314  2233               	addwfc	(btemp+9)^0,f,c
 27430  014316  5033               	movf	(btemp+9)^0,w,c
 27431  014318  E106               	bnz	u15750
 27432  01431A  0E1A               	movlw	26
 27433  01431C  5C32               	subwf	(btemp+8)^0,w,c
 27434  01431E  B0D8               	btfsc	status,0,c
 27435  014320  D002               	goto	u15750
 27436  014322  0E01               	movlw	1
 27437  014324  D001               	goto	u15760
 27438  014326                     u15750:
 27439  014326  0E00               	movlw	0
 27440  014328                     u15760:
 27441  014328  6E34               	movwf	(btemp+10)^0,c
 27442  01432A  6A35               	clrf	(btemp+11)^0,c
 27443                           
 27444                           ;stkvar	_vfpfcnvrt$6703 @ sp[(-32)+2]
 27445  01432C  0EE2               	movlw	-30
 27446  01432E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27447  014334  0EE3               	movlw	-29
 27448  014336  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27449                           
 27450                           ;stkvar	_vfpfcnvrt$6703 @ sp[(-32)+2]
 27451  01433C  0EE2               	movlw	-30
 27452  01433E  006F FF8C  F02A    	movff	plusw1,btemp
 27453  014344  0EE3               	movlw	-29
 27454  014346  50E3               	movf	plusw1,w,c
 27455  014348  102A               	iorwf	btemp^0,w,c
 27456                           
 27457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 27458                           ;stkvar	_ap @ sp[(-32)+-6]
 27459                           
 27460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 27461                           
 27462                           ;stkvar	_f @ sp[(-32)+22]
 27463                           
 27464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 27465                           ;stkvar	_ap @ sp[(-32)+-6]
 27466  01434A  0EDA               	movlw	-38
 27467  01434C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27468  014352  0EDB               	movlw	-37
 27469  014354  006F FF8F FFDA     	movff	plusw1,fsr2h
 27470  01435A  0E04               	movlw	4
 27471  01435C  5EDE               	subwf	postinc2,f,c
 27472  01435E  0E00               	movlw	0
 27473  014360  5ADD               	subwfb	postdec2,f,c
 27474  014362  006F FF78  F034    	movff	postinc2,btemp+10
 27475  014368  006F FF74  F035    	movff	postdec2,btemp+11
 27476  01436E  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27477  014374  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27478  01437A  006F FF78  F032    	movff	postinc2,btemp+8
 27479  014380  006F FF78  F033    	movff	postinc2,btemp+9
 27480  014386  006F FF78  F034    	movff	postinc2,btemp+10
 27481  01438C  006F FF78  F035    	movff	postinc2,btemp+11
 27482                           
 27483                           ;stkvar	_f @ sp[(-32)+22]
 27484  014392  0EF6               	movlw	-10
 27485  014394  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27486  01439A  0EF7               	movlw	-9
 27487  01439C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27488  0143A2  0EF8               	movlw	-8
 27489  0143A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27490  0143AA  0EF9               	movlw	-7
 27491  0143AC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27492                           
 27493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 27494                           ;stkvar	_fmt @ sp[(-32)+-4]
 27495  0143B2  0EDC               	movlw	-36
 27496  0143B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27497  0143BA  0EDD               	movlw	-35
 27498  0143BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27499  0143C2  0E02               	movlw	2
 27500  0143C4  26DE               	addwf	postinc2,f,c
 27501  0143C6  0E00               	movlw	0
 27502  0143C8  22DD               	addwfc	postdec2,f,c
 27503  0143CA  D736               	goto	l16234
 27504  0143CC                     l16258:
 27505                           
 27506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 27507                           ;stkvar	_fmt @ sp[(-32)+-4]
 27508  0143CC  0EDC               	movlw	-36
 27509  0143CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27510  0143D4  0EDD               	movlw	-35
 27511  0143D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27512  0143DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 27513  0143E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 27514  0143E8                     	if	0	;tblptru may be non-zero
 27515  0143E8                     	endif
 27516  0143E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27517  0143E8  0E00               	movlw	low (__mediumconst shr (0+16))
 27518  0143EA  6EF8               	movwf	tblptru,c
 27519  0143EC                     	endif
 27520  0143EC  0008               	tblrd		*
 27521  0143EE  50F5               	movf	tablat,w,c
 27522  0143F0  0A73               	xorlw	115
 27523  0143F2  A4D8               	btfss	status,2,c
 27524  0143F4  D042               	goto	l16268
 27525                           
 27526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 27527                           ;stkvar	_fmt @ sp[(-32)+-4]
 27528  0143F6  0EDC               	movlw	-36
 27529  0143F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27530  0143FE  0EDD               	movlw	-35
 27531  014400  006F FF8F FFDA     	movff	plusw1,fsr2h
 27532  014406  2ADE               	incf	postinc2,f,c
 27533  014408  0E00               	movlw	0
 27534  01440A  22DD               	addwfc	postdec2,f,c
 27535                           
 27536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 27537                           ;stkvar	_ap @ sp[(-32)+-6]
 27538  01440C  0EDA               	movlw	-38
 27539  01440E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27540  014414  0EDB               	movlw	-37
 27541  014416  006F FF8F FFDA     	movff	plusw1,fsr2h
 27542  01441C  0E02               	movlw	2
 27543  01441E  5EDE               	subwf	postinc2,f,c
 27544  014420  0E00               	movlw	0
 27545  014422  5ADD               	subwfb	postdec2,f,c
 27546  014424  006F FF78  F034    	movff	postinc2,btemp+10
 27547  01442A  006F FF74  F035    	movff	postdec2,btemp+11
 27548  014430  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27549  014436  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27550  01443C  006F FF78  F034    	movff	postinc2,btemp+10
 27551  014442  006F FF74  F035    	movff	postdec2,btemp+11
 27552                           
 27553                           ;stkvar	_cp @ sp[(-32)+29]
 27554  014448  0EFE               	movlw	-2
 27555  01444A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27556  014450  0EFD               	movlw	-3
 27557  014452  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27558                           
 27559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 27560                           ;stkvar	_cp @ sp[(-32)+29]
 27561  014458  0EFD               	movlw	-3
 27562  01445A  006F FF8F FFE6     	movff	plusw1,postinc1
 27563  014460  006F FF8F FFE6     	movff	plusw1,postinc1
 27564                           
 27565                           ;stkvar	_fp @ sp[(-34)+-2]
 27566  014466  0EDC               	movlw	-36
 27567  014468  006F FF8F FFE6     	movff	plusw1,postinc1
 27568  01446E  006F FF8F FFE6     	movff	plusw1,postinc1
 27569  014474  EC9E  F0DE         	call	_stoa	;wreg free
 27570  014478  D2AF               	goto	l2699
 27571  01447A                     l16268:
 27572                           
 27573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 27574                           ;stkvar	_fmt @ sp[(-32)+-4]
 27575  01447A  0EDC               	movlw	-36
 27576  01447C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27577  014482  0EDD               	movlw	-35
 27578  014484  006F FF8F FFDA     	movff	plusw1,fsr2h
 27579  01448A  006F FF7B FFF6     	movff	postinc2,tblptrl
 27580  014490  006F FF77 FFF7     	movff	postdec2,tblptrh
 27581  014496                     	if	0	;tblptru may be non-zero
 27582  014496                     	endif
 27583  014496                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27584  014496  0E00               	movlw	low (__mediumconst shr (0+16))
 27585  014498  6EF8               	movwf	tblptru,c
 27586  01449A                     	endif
 27587  01449A  0008               	tblrd		*
 27588  01449C  50F5               	movf	tablat,w,c
 27589  01449E  0A75               	xorlw	117
 27590  0144A0  A4D8               	btfss	status,2,c
 27591  0144A2  D07C               	goto	l16278
 27592                           
 27593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 27594                           ;stkvar	_fmt @ sp[(-32)+-4]
 27595  0144A4  0EDC               	movlw	-36
 27596  0144A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 27597  0144AC  0EDD               	movlw	-35
 27598  0144AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 27599  0144B4  2ADE               	incf	postinc2,f,c
 27600  0144B6  0E00               	movlw	0
 27601  0144B8  22DD               	addwfc	postdec2,f,c
 27602                           
 27603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27604                           ;stkvar	_ap @ sp[(-32)+-6]
 27605  0144BA  0EDA               	movlw	-38
 27606  0144BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27607  0144C2  0EDB               	movlw	-37
 27608  0144C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27609  0144CA  0E02               	movlw	2
 27610  0144CC  5EDE               	subwf	postinc2,f,c
 27611  0144CE  0E00               	movlw	0
 27612  0144D0  5ADD               	subwfb	postdec2,f,c
 27613  0144D2  006F FF78  F034    	movff	postinc2,btemp+10
 27614  0144D8  006F FF74  F035    	movff	postdec2,btemp+11
 27615  0144DE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27616  0144E4  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27617  0144EA  006F FF78  F034    	movff	postinc2,btemp+10
 27618  0144F0  006F FF74  F035    	movff	postdec2,btemp+11
 27619  0144F6  5034               	movf	(btemp+10)^0,w,c
 27620  0144F8  6E3A               	movwf	(btemp+16)^0,c
 27621  0144FA  5035               	movf	(btemp+11)^0,w,c
 27622  0144FC  6E3B               	movwf	(btemp+17)^0,c
 27623  0144FE  6A3C               	clrf	(btemp+18)^0,c
 27624  014500  6A3D               	clrf	(btemp+19)^0,c
 27625  014502  6A3E               	clrf	(btemp+20)^0,c
 27626  014504  6A3F               	clrf	(btemp+21)^0,c
 27627  014506  6A40               	clrf	(btemp+22)^0,c
 27628  014508  6A41               	clrf	(btemp+23)^0,c
 27629                           
 27630                           ;stkvar	_llu @ sp[(-32)+6]
 27631  01450A  0EE6               	movlw	-26
 27632  01450C  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27633  014512  0EE7               	movlw	-25
 27634  014514  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27635  01451A  0EE8               	movlw	-24
 27636  01451C  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27637  014522  0EE9               	movlw	-23
 27638  014524  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27639  01452A  0EEA               	movlw	-22
 27640  01452C  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27641  014532  0EEB               	movlw	-21
 27642  014534  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27643  01453A  0EEC               	movlw	-20
 27644  01453C  0060  F103  FFE3   	movff	btemp+22,plusw1
 27645  014542  0EED               	movlw	-19
 27646  014544  0060  F107  FFE3   	movff	btemp+23,plusw1
 27647                           
 27648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 27649                           ;stkvar	_llu @ sp[(-32)+6]
 27650  01454A  50E1               	movf	fsr1l,w,c
 27651  01454C  0FE6               	addlw	-26
 27652  01454E  6ED9               	movwf	fsr2l,c
 27653  014550  50E2               	movf	fsr1h,w,c
 27654  014552  6EDA               	movwf	fsr2h,c
 27655  014554  0EFF               	movlw	255
 27656  014556  22DA               	addwfc	fsr2h,f,c
 27657  014558  006F FF7B FFE6     	movff	postinc2,postinc1
 27658  01455E  006F FF7B FFE6     	movff	postinc2,postinc1
 27659  014564  006F FF7B FFE6     	movff	postinc2,postinc1
 27660  01456A  006F FF7B FFE6     	movff	postinc2,postinc1
 27661  014570  006F FF7B FFE6     	movff	postinc2,postinc1
 27662  014576  006F FF7B FFE6     	movff	postinc2,postinc1
 27663  01457C  006F FF7B FFE6     	movff	postinc2,postinc1
 27664  014582  006F FF7B FFE6     	movff	postinc2,postinc1
 27665                           
 27666                           ;stkvar	_fp @ sp[(-40)+-2]
 27667  014588  0ED6               	movlw	-42
 27668  01458A  006F FF8F FFE6     	movff	plusw1,postinc1
 27669  014590  006F FF8F FFE6     	movff	plusw1,postinc1
 27670  014596  EC31  F0D7         	call	_utoa	;wreg free
 27671  01459A  D21E               	goto	l2699
 27672  01459C                     l16278:
 27673                           
 27674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 27675  01459C  0E02               	movlw	2
 27676  01459E  6EE6               	movwf	postinc1,c
 27677  0145A0  0E00               	movlw	0
 27678  0145A2  6EE6               	movwf	postinc1,c
 27679  0145A4  0EF6               	movlw	low STR_118
 27680  0145A6  6EE6               	movwf	postinc1,c
 27681  0145A8  0EFF               	movlw	high STR_118
 27682  0145AA  6EE6               	movwf	postinc1,c
 27683                           
 27684                           ;stkvar	_fmt @ sp[(-36)+-4]
 27685  0145AC  0ED8               	movlw	-40
 27686  0145AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27687  0145B4  0ED9               	movlw	-39
 27688  0145B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27689  0145BC  006F FF78  F034    	movff	postinc2,btemp+10
 27690  0145C2  006F FF74  F035    	movff	postdec2,btemp+11
 27691  0145C8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27692  0145CE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27693  0145D4  EC74  F0E9         	call	_strncmp	;wreg free
 27694  0145D8  502A               	movf	btemp^0,w,c
 27695  0145DA  102B               	iorwf	(btemp+1)^0,w,c
 27696  0145DC  A4D8               	btfss	status,2,c
 27697  0145DE  D039               	goto	l16288
 27698                           
 27699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 27700                           ;stkvar	_fmt @ sp[(-32)+-4]
 27701  0145E0  0EDC               	movlw	-36
 27702  0145E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27703  0145E8  0EDD               	movlw	-35
 27704  0145EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27705  0145F0  0E02               	movlw	2
 27706  0145F2  26DE               	addwf	postinc2,f,c
 27707  0145F4  0E00               	movlw	0
 27708  0145F6  22DD               	addwfc	postdec2,f,c
 27709                           
 27710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27711                           ;stkvar	_ap @ sp[(-32)+-6]
 27712  0145F8  0EDA               	movlw	-38
 27713  0145FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27714  014600  0EDB               	movlw	-37
 27715  014602  006F FF8F FFDA     	movff	plusw1,fsr2h
 27716  014608  0E04               	movlw	4
 27717  01460A  5EDE               	subwf	postinc2,f,c
 27718  01460C  0E00               	movlw	0
 27719  01460E  5ADD               	subwfb	postdec2,f,c
 27720  014610  006F FF78  F034    	movff	postinc2,btemp+10
 27721  014616  006F FF74  F035    	movff	postdec2,btemp+11
 27722  01461C  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27723  014622  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27724  014628  006F FF78  F032    	movff	postinc2,btemp+8
 27725  01462E  006F FF78  F033    	movff	postinc2,btemp+9
 27726  014634  006F FF78  F034    	movff	postinc2,btemp+10
 27727  01463A  006F FF78  F035    	movff	postinc2,btemp+11
 27728  014640  5032               	movf	(btemp+8)^0,w,c
 27729  014642  6E3A               	movwf	(btemp+16)^0,c
 27730  014644  5033               	movf	(btemp+9)^0,w,c
 27731  014646  6E3B               	movwf	(btemp+17)^0,c
 27732  014648  5034               	movf	(btemp+10)^0,w,c
 27733  01464A  6E3C               	movwf	(btemp+18)^0,c
 27734  01464C  5035               	movf	(btemp+11)^0,w,c
 27735  01464E  6E3D               	movwf	(btemp+19)^0,c
 27736  014650  D758               	goto	L25
 27737  014652                     l16288:
 27738                           
 27739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 27740                           ;stkvar	_fmt @ sp[(-32)+-4]
 27741  014652  0EDC               	movlw	-36
 27742  014654  006F FF8F FFD9     	movff	plusw1,fsr2l
 27743  01465A  0EDD               	movlw	-35
 27744  01465C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27745  014662  006F FF7B FFF6     	movff	postinc2,tblptrl
 27746  014668  006F FF77 FFF7     	movff	postdec2,tblptrh
 27747  01466E                     	if	0	;tblptru may be non-zero
 27748  01466E                     	endif
 27749  01466E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27750  01466E  0E00               	movlw	low (__mediumconst shr (0+16))
 27751  014670  6EF8               	movwf	tblptru,c
 27752  014672                     	endif
 27753  014672  0008               	tblrd		*
 27754  014674  50F5               	movf	tablat,w,c
 27755  014676  0A78               	xorlw	120
 27756  014678  B4D8               	btfsc	status,2,c
 27757  01467A  D015               	goto	u15820
 27758                           
 27759                           ;stkvar	_fmt @ sp[(-32)+-4]
 27760  01467C  0EDC               	movlw	-36
 27761  01467E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27762  014684  0EDD               	movlw	-35
 27763  014686  006F FF8F FFDA     	movff	plusw1,fsr2h
 27764  01468C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27765  014692  006F FF77 FFF7     	movff	postdec2,tblptrh
 27766  014698                     	if	0	;tblptru may be non-zero
 27767  014698                     	endif
 27768  014698                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27769  014698  0E00               	movlw	low (__mediumconst shr (0+16))
 27770  01469A  6EF8               	movwf	tblptru,c
 27771  01469C                     	endif
 27772  01469C  0008               	tblrd		*
 27773  01469E  50F5               	movf	tablat,w,c
 27774  0146A0  0A58               	xorlw	88
 27775  0146A2  A4D8               	btfss	status,2,c
 27776  0146A4  D094               	goto	l16302
 27777  0146A6                     u15820:
 27778                           
 27779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 27780                           ;stkvar	_fmt @ sp[(-32)+-4]
 27781  0146A6  0EDC               	movlw	-36
 27782  0146A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27783  0146AE  0EDD               	movlw	-35
 27784  0146B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27785  0146B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27786  0146BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27787  0146C2                     	if	0	;tblptru may be non-zero
 27788  0146C2                     	endif
 27789  0146C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27790  0146C2  0E00               	movlw	low (__mediumconst shr (0+16))
 27791  0146C4  6EF8               	movwf	tblptru,c
 27792  0146C6                     	endif
 27793                           
 27794                           ;stkvar	_c @ sp[(-32)+31]
 27795  0146C6  0008               	tblrd		*
 27796  0146C8  0EFF               	movlw	-1
 27797  0146CA  006F FFD7 FFE3     	movff	tablat,plusw1
 27798                           
 27799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 27800                           ;stkvar	_fmt @ sp[(-32)+-4]
 27801  0146D0  0EDC               	movlw	-36
 27802  0146D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27803  0146D8  0EDD               	movlw	-35
 27804  0146DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27805  0146E0  2ADE               	incf	postinc2,f,c
 27806  0146E2  0E00               	movlw	0
 27807  0146E4  22DD               	addwfc	postdec2,f,c
 27808                           
 27809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27810                           ;stkvar	_ap @ sp[(-32)+-6]
 27811  0146E6  0EDA               	movlw	-38
 27812  0146E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27813  0146EE  0EDB               	movlw	-37
 27814  0146F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27815  0146F6  0E02               	movlw	2
 27816  0146F8  5EDE               	subwf	postinc2,f,c
 27817  0146FA  0E00               	movlw	0
 27818  0146FC  5ADD               	subwfb	postdec2,f,c
 27819  0146FE  006F FF78  F034    	movff	postinc2,btemp+10
 27820  014704  006F FF74  F035    	movff	postdec2,btemp+11
 27821  01470A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27822  014710  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27823  014716  006F FF78  F034    	movff	postinc2,btemp+10
 27824  01471C  006F FF74  F035    	movff	postdec2,btemp+11
 27825  014722  5034               	movf	(btemp+10)^0,w,c
 27826  014724  6E3A               	movwf	(btemp+16)^0,c
 27827  014726  5035               	movf	(btemp+11)^0,w,c
 27828  014728  6E3B               	movwf	(btemp+17)^0,c
 27829  01472A  6A3C               	clrf	(btemp+18)^0,c
 27830  01472C  6A3D               	clrf	(btemp+19)^0,c
 27831  01472E  6A3E               	clrf	(btemp+20)^0,c
 27832  014730  6A3F               	clrf	(btemp+21)^0,c
 27833  014732  6A40               	clrf	(btemp+22)^0,c
 27834  014734  6A41               	clrf	(btemp+23)^0,c
 27835                           
 27836                           ;stkvar	_llu @ sp[(-32)+6]
 27837  014736  0EE6               	movlw	-26
 27838  014738  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27839  01473E  0EE7               	movlw	-25
 27840  014740  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27841  014746  0EE8               	movlw	-24
 27842  014748  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27843  01474E  0EE9               	movlw	-23
 27844  014750  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27845  014756  0EEA               	movlw	-22
 27846  014758  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27847  01475E  0EEB               	movlw	-21
 27848  014760  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27849  014766  0EEC               	movlw	-20
 27850  014768  0060  F103  FFE3   	movff	btemp+22,plusw1
 27851  01476E  0EED               	movlw	-19
 27852  014770  0060  F107  FFE3   	movff	btemp+23,plusw1
 27853                           
 27854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 27855                           ;stkvar	_c @ sp[(-32)+31]
 27856  014776  0EFF               	movlw	-1
 27857  014778  50E3               	movf	plusw1,w,c
 27858  01477A  6EE6               	movwf	postinc1,c
 27859                           
 27860                           ;stkvar	_llu @ sp[(-33)+6]
 27861  01477C  50E1               	movf	fsr1l,w,c
 27862  01477E  0FE5               	addlw	-27
 27863  014780  6ED9               	movwf	fsr2l,c
 27864  014782  50E2               	movf	fsr1h,w,c
 27865  014784  6EDA               	movwf	fsr2h,c
 27866  014786  0EFF               	movlw	255
 27867  014788  22DA               	addwfc	fsr2h,f,c
 27868  01478A  006F FF7B FFE6     	movff	postinc2,postinc1
 27869  014790  006F FF7B FFE6     	movff	postinc2,postinc1
 27870  014796  006F FF7B FFE6     	movff	postinc2,postinc1
 27871  01479C  006F FF7B FFE6     	movff	postinc2,postinc1
 27872  0147A2  006F FF7B FFE6     	movff	postinc2,postinc1
 27873  0147A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27874  0147AE  006F FF7B FFE6     	movff	postinc2,postinc1
 27875  0147B4  006F FF7B FFE6     	movff	postinc2,postinc1
 27876                           
 27877                           ;stkvar	_fp @ sp[(-41)+-2]
 27878  0147BA  0ED5               	movlw	-43
 27879  0147BC  006F FF8F FFE6     	movff	plusw1,postinc1
 27880  0147C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27881  0147C8  ECE4  F0D1         	call	_xtoa	;wreg free
 27882  0147CC  D105               	goto	l2699
 27883  0147CE                     l16302:
 27884                           
 27885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 27886  0147CE  0E02               	movlw	2
 27887  0147D0  6EE6               	movwf	postinc1,c
 27888  0147D2  0E00               	movlw	0
 27889  0147D4  6EE6               	movwf	postinc1,c
 27890  0147D6  0EF9               	movlw	low STR_123
 27891  0147D8  6EE6               	movwf	postinc1,c
 27892  0147DA  0EFF               	movlw	high STR_123
 27893  0147DC  6EE6               	movwf	postinc1,c
 27894                           
 27895                           ;stkvar	_fmt @ sp[(-36)+-4]
 27896  0147DE  0ED8               	movlw	-40
 27897  0147E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 27898  0147E6  0ED9               	movlw	-39
 27899  0147E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 27900  0147EE  006F FF78  F034    	movff	postinc2,btemp+10
 27901  0147F4  006F FF74  F035    	movff	postdec2,btemp+11
 27902  0147FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27903  014800  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27904  014806  EC74  F0E9         	call	_strncmp	;wreg free
 27905  01480A  502A               	movf	btemp^0,w,c
 27906  01480C  102B               	iorwf	(btemp+1)^0,w,c
 27907  01480E  B4D8               	btfsc	status,2,c
 27908  014810  D022               	goto	u15840
 27909  014812  0E02               	movlw	2
 27910  014814  6EE6               	movwf	postinc1,c
 27911  014816  0E00               	movlw	0
 27912  014818  6EE6               	movwf	postinc1,c
 27913  01481A  0EEA               	movlw	low STR_127
 27914  01481C  6EE6               	movwf	postinc1,c
 27915  01481E  0EFF               	movlw	high STR_127
 27916  014820  6EE6               	movwf	postinc1,c
 27917                           
 27918                           ;stkvar	_fmt @ sp[(-36)+-4]
 27919  014822  0ED8               	movlw	-40
 27920  014824  006F FF8F FFD9     	movff	plusw1,fsr2l
 27921  01482A  0ED9               	movlw	-39
 27922  01482C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27923  014832  006F FF78  F034    	movff	postinc2,btemp+10
 27924  014838  006F FF74  F035    	movff	postdec2,btemp+11
 27925  01483E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27926  014844  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27927  01484A  EC74  F0E9         	call	_strncmp	;wreg free
 27928  01484E  502A               	movf	btemp^0,w,c
 27929  014850  102B               	iorwf	(btemp+1)^0,w,c
 27930  014852  A4D8               	btfss	status,2,c
 27931  014854  D058               	goto	l16316
 27932  014856                     u15840:
 27933                           
 27934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 27935                           ;stkvar	_fmt @ sp[(-32)+-4]
 27936  014856  0EDC               	movlw	-36
 27937  014858  006F FF8F FFD9     	movff	plusw1,fsr2l
 27938  01485E  0EDD               	movlw	-35
 27939  014860  006F FF8F FFDA     	movff	plusw1,fsr2h
 27940  014866  006F FF78  F034    	movff	postinc2,btemp+10
 27941  01486C  006F FF74  F035    	movff	postdec2,btemp+11
 27942  014872  0E01               	movlw	1
 27943  014874  2634               	addwf	(btemp+10)^0,f,c
 27944  014876  0E00               	movlw	0
 27945  014878  2235               	addwfc	(btemp+11)^0,f,c
 27946  01487A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27947  014880  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27948  014886                     	if	0	;tblptru may be non-zero
 27949  014886                     	endif
 27950  014886                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27951  014886  0E00               	movlw	low (__mediumconst shr (0+16))
 27952  014888  6EF8               	movwf	tblptru,c
 27953  01488A                     	endif
 27954                           
 27955                           ;stkvar	_c @ sp[(-32)+31]
 27956  01488A  0008               	tblrd		*
 27957  01488C  0EFF               	movlw	-1
 27958  01488E  006F FFD7 FFE3     	movff	tablat,plusw1
 27959                           
 27960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 27961                           ;stkvar	_fmt @ sp[(-32)+-4]
 27962  014894  0EDC               	movlw	-36
 27963  014896  006F FF8F FFD9     	movff	plusw1,fsr2l
 27964  01489C  0EDD               	movlw	-35
 27965  01489E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27966  0148A4  0E02               	movlw	2
 27967  0148A6  26DE               	addwf	postinc2,f,c
 27968  0148A8  0E00               	movlw	0
 27969  0148AA  22DD               	addwfc	postdec2,f,c
 27970                           
 27971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27972                           ;stkvar	_ap @ sp[(-32)+-6]
 27973  0148AC  0EDA               	movlw	-38
 27974  0148AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27975  0148B4  0EDB               	movlw	-37
 27976  0148B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27977  0148BC  0E04               	movlw	4
 27978  0148BE  5EDE               	subwf	postinc2,f,c
 27979  0148C0  0E00               	movlw	0
 27980  0148C2  5ADD               	subwfb	postdec2,f,c
 27981  0148C4  006F FF78  F034    	movff	postinc2,btemp+10
 27982  0148CA  006F FF74  F035    	movff	postdec2,btemp+11
 27983  0148D0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27984  0148D6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27985  0148DC  006F FF78  F032    	movff	postinc2,btemp+8
 27986  0148E2  006F FF78  F033    	movff	postinc2,btemp+9
 27987  0148E8  006F FF78  F034    	movff	postinc2,btemp+10
 27988  0148EE  006F FF78  F035    	movff	postinc2,btemp+11
 27989  0148F4  5032               	movf	(btemp+8)^0,w,c
 27990  0148F6  6E3A               	movwf	(btemp+16)^0,c
 27991  0148F8  5033               	movf	(btemp+9)^0,w,c
 27992  0148FA  6E3B               	movwf	(btemp+17)^0,c
 27993  0148FC  5034               	movf	(btemp+10)^0,w,c
 27994  0148FE  6E3C               	movwf	(btemp+18)^0,c
 27995  014900  5035               	movf	(btemp+11)^0,w,c
 27996  014902  6E3D               	movwf	(btemp+19)^0,c
 27997  014904  D714               	goto	L26
 27998  014906                     l16316:
 27999                           
 28000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 28001                           ;stkvar	_fmt @ sp[(-32)+-4]
 28002  014906  0EDC               	movlw	-36
 28003  014908  006F FF8F FFD9     	movff	plusw1,fsr2l
 28004  01490E  0EDD               	movlw	-35
 28005  014910  006F FF8F FFDA     	movff	plusw1,fsr2h
 28006  014916  006F FF7B FFF6     	movff	postinc2,tblptrl
 28007  01491C  006F FF77 FFF7     	movff	postdec2,tblptrh
 28008  014922                     	if	0	;tblptru may be non-zero
 28009  014922                     	endif
 28010  014922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28011  014922  0E00               	movlw	low (__mediumconst shr (0+16))
 28012  014924  6EF8               	movwf	tblptru,c
 28013  014926                     	endif
 28014  014926  0008               	tblrd		*
 28015  014928  50F5               	movf	tablat,w,c
 28016  01492A  0A25               	xorlw	37
 28017  01492C  A4D8               	btfss	status,2,c
 28018  01492E  D01A               	goto	l16326
 28019                           
 28020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 28021                           ;stkvar	_fmt @ sp[(-32)+-4]
 28022  014930  0EDC               	movlw	-36
 28023  014932  006F FF8F FFD9     	movff	plusw1,fsr2l
 28024  014938  0EDD               	movlw	-35
 28025  01493A  006F FF8F FFDA     	movff	plusw1,fsr2h
 28026  014940  2ADE               	incf	postinc2,f,c
 28027  014942  0E00               	movlw	0
 28028  014944  22DD               	addwfc	postdec2,f,c
 28029                           
 28030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 28031                           ;stkvar	_fp @ sp[(-32)+-2]
 28032  014946  0EDE               	movlw	-34
 28033  014948  006F FF8F FFE6     	movff	plusw1,postinc1
 28034  01494E  006F FF8F FFE6     	movff	plusw1,postinc1
 28035  014954  0E25               	movlw	37
 28036  014956  6EE6               	movwf	postinc1,c
 28037  014958  0E00               	movlw	0
 28038  01495A  6EE6               	movwf	postinc1,c
 28039  01495C  EC24  F0FC         	call	_fputc	;wreg free
 28040  014960                     l16322:
 28041                           
 28042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 28043  014960  0E01               	movlw	1
 28044  014962  D00C               	goto	L27
 28045  014964                     l16326:
 28046                           
 28047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 28048                           ;stkvar	_fmt @ sp[(-32)+-4]
 28049  014964  0EDC               	movlw	-36
 28050  014966  006F FF8F FFD9     	movff	plusw1,fsr2l
 28051  01496C  0EDD               	movlw	-35
 28052  01496E  006F FF8F FFDA     	movff	plusw1,fsr2h
 28053  014974  2ADE               	incf	postinc2,f,c
 28054  014976  0E00               	movlw	0
 28055  014978  22DD               	addwfc	postdec2,f,c
 28056                           
 28057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 28058  01497A  0E00               	movlw	0
 28059  01497C                     L27:
 28060  01497C  6E2A               	movwf	btemp^0,c
 28061  01497E  0E00               	movlw	0
 28062  014980  6E2B               	movwf	(btemp+1)^0,c
 28063  014982  D02A               	goto	l2699
 28064  014984                     l16332:
 28065                           
 28066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 28067                           ;stkvar	_fp @ sp[(-32)+-2]
 28068  014984  0EDE               	movlw	-34
 28069  014986  006F FF8F FFE6     	movff	plusw1,postinc1
 28070  01498C  006F FF8F FFE6     	movff	plusw1,postinc1
 28071                           
 28072                           ;stkvar	_fmt @ sp[(-34)+-4]
 28073  014992  0EDA               	movlw	-38
 28074  014994  006F FF8F FFD9     	movff	plusw1,fsr2l
 28075  01499A  0EDB               	movlw	-37
 28076  01499C  006F FF8F FFDA     	movff	plusw1,fsr2h
 28077  0149A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 28078  0149A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 28079  0149AE                     	if	0	;tblptru may be non-zero
 28080  0149AE                     	endif
 28081  0149AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28082  0149AE  0E00               	movlw	low (__mediumconst shr (0+16))
 28083  0149B0  6EF8               	movwf	tblptru,c
 28084  0149B2                     	endif
 28085  0149B2  0008               	tblrd		*
 28086  0149B4  50F5               	movf	tablat,w,c
 28087  0149B6  6EE6               	movwf	postinc1,c
 28088  0149B8  0E00               	movlw	0
 28089  0149BA  6EE6               	movwf	postinc1,c
 28090  0149BC  EC24  F0FC         	call	_fputc	;wreg free
 28091                           
 28092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 28093                           ;stkvar	_fmt @ sp[(-32)+-4]
 28094  0149C0  0EDC               	movlw	-36
 28095  0149C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 28096  0149C8  0EDD               	movlw	-35
 28097  0149CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 28098  0149D0  2ADE               	incf	postinc2,f,c
 28099  0149D2  0E00               	movlw	0
 28100  0149D4  22DD               	addwfc	postdec2,f,c
 28101  0149D6  D7C4               	goto	l16322
 28102  0149D8                     l2699:
 28103                           
 28104                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 28105  0149D8  0EDA               	movlw	218
 28106  0149DA  26E1               	addwf	fsr1l,f,c
 28107  0149DC  0EFF               	movlw	255
 28108  0149DE  22E2               	addwfc	fsr1h,f,c
 28109  0149E0  0012               	return		;funcret
 28110  0149E2                     __end_of_vfpfcnvrt:
 28111                           	opt callstack 0
 28112                           
 28113 ;; *************** function _xtoa *****************
 28114 ;; Defined at:
 28115 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28116 ;; Parameters:    Size  Location     Type
 28117 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28118 ;;		 -> f(6), NULL(0), 
 28119 ;;  d               8  [STACK] unsigned long long 
 28120 ;;  x               1  [STACK] unsigned char 
 28121 ;; Auto vars:     Size  Location     Type
 28122 ;;  n               8  [STACK] unsigned long long 
 28123 ;;  c               2  [STACK] int 
 28124 ;;  i               2  [STACK] int 
 28125 ;;  w               2  [STACK] int 
 28126 ;;  p               2  [STACK] int 
 28127 ;; Return value:  Size  Location     Type
 28128 ;;                  2  [STACK] int 
 28129 ;; Registers used:
 28130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28131 ;; Tracked objects:
 28132 ;;		On entry : 0/0
 28133 ;;		On exit  : 0/0
 28134 ;;		Unchanged: 0/0
 28135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28140 ;;Total ram usage:        0 bytes
 28141 ;; Hardware stack levels used:    1
 28142 ;; Hardware stack levels required when called:   20
 28143 ;; This function calls:
 28144 ;;		_isalpha
 28145 ;;		_isupper
 28146 ;;		_pad
 28147 ;;		_toupper
 28148 ;; This function is called by:
 28149 ;;		_vfpfcnvrt
 28150 ;; This function uses a reentrant model
 28151 ;;
 28152                           
 28153                           	psect	text94
 28154  01A3C8                     __ptext94:
 28155                           	opt callstack 0
 28156  01A3C8                     _xtoa:
 28157                           	opt callstack 0
 28158                           
 28159                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28160  01A3C8  0E14               	movlw	20
 28161  01A3CA  26E1               	addwf	fsr1l,f,c
 28162  01A3CC  0E00               	movlw	0
 28163  01A3CE  22E2               	addwfc	fsr1h,f,c
 28164                           
 28165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 28166                           
 28167                           ;incstack = 0
 28168 ;; hardware stack exceeded
 28169  01A3D0  AE4D               	btfss	(_prec+1)^0,7,c
 28170                           
 28171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 28172  01A3D2  924E               	bcf	_flags^0,1,c
 28173                           
 28174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 28175  01A3D4  BE4D               	btfsc	(_prec+1)^0,7,c
 28176  01A3D6  D005               	goto	u15300
 28177  01A3D8  504D               	movf	(_prec+1)^0,w,c
 28178  01A3DA  E110               	bnz	l15986
 28179  01A3DC  044C               	decf	_prec^0,w,c
 28180  01A3DE  B0D8               	btfsc	status,0,c
 28181  01A3E0  D00D               	goto	l15986
 28182  01A3E2                     u15300:
 28183  01A3E2  0E01               	movlw	1
 28184  01A3E4  6E34               	movwf	(btemp+10)^0,c
 28185  01A3E6  0E00               	movlw	0
 28186  01A3E8  6E35               	movwf	(btemp+11)^0,c
 28187                           
 28188                           ;stkvar	_p @ sp[(-20)+18]
 28189  01A3EA  0EFE               	movlw	-2
 28190  01A3EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28191  01A3F2  0EFF               	movlw	-1
 28192  01A3F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28193  01A3FA  D008               	goto	l2649
 28194  01A3FC                     l15986:
 28195                           
 28196                           ;stkvar	_p @ sp[(-20)+18]
 28197  01A3FC  0EFE               	movlw	-2
 28198  01A3FE  0060  F133  FFE3   	movff	_prec,plusw1
 28199  01A404  0EFF               	movlw	-1
 28200  01A406  0060  F137  FFE3   	movff	_prec+1,plusw1
 28201  01A40C                     l2649:
 28202                           
 28203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 28204                           ;stkvar	_w @ sp[(-20)+16]
 28205  01A40C  0EFC               	movlw	-4
 28206  01A40E  0060  F12B  FFE3   	movff	_width,plusw1
 28207  01A414  0EFD               	movlw	-3
 28208  01A416  0060  F12F  FFE3   	movff	_width+1,plusw1
 28209                           
 28210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 28211  01A41C  A84E               	btfss	_flags^0,4,c
 28212  01A41E  D00B               	goto	l15992
 28213                           
 28214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 28215                           ;stkvar	_w @ sp[(-20)+16]
 28216  01A420  50E1               	movf	fsr1l,w,c
 28217  01A422  0FFC               	addlw	-4
 28218  01A424  6ED9               	movwf	fsr2l,c
 28219  01A426  50E2               	movf	fsr1h,w,c
 28220  01A428  6EDA               	movwf	fsr2h,c
 28221  01A42A  0EFF               	movlw	255
 28222  01A42C  22DA               	addwfc	fsr2h,f,c
 28223  01A42E  0EFE               	movlw	254
 28224  01A430  26DE               	addwf	postinc2,f,c
 28225  01A432  0EFF               	movlw	255
 28226  01A434  22DD               	addwfc	postdec2,f,c
 28227  01A436                     l15992:
 28228                           
 28229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 28230                           ;stkvar	_d @ sp[(-20)+-10]
 28231  01A436  0EE2               	movlw	226
 28232  01A438  24E1               	addwf	fsr1l,w,c
 28233  01A43A  6ED9               	movwf	fsr2l,c
 28234  01A43C  0EFF               	movlw	255
 28235  01A43E  20E2               	addwfc	fsr1h,w,c
 28236  01A440  6EDA               	movwf	fsr2h,c
 28237                           
 28238                           ;stkvar	_n @ sp[(-20)+4]
 28239  01A442  0E08               	movlw	8
 28240  01A444  6E2A               	movwf	btemp^0,c
 28241  01A446  0EF0               	movlw	-16
 28242  01A448                     us1532999:
 28243  01A448  006F FF7B FFE3     	movff	postinc2,plusw1
 28244  01A44E  28E8               	incf	wreg,w,c
 28245  01A450  2E2A               	decfsz	btemp^0,f,c
 28246  01A452  D7FA               	bra	us1532999
 28247                           
 28248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 28249  01A454  0E4F               	movlw	79
 28250  01A456  6E34               	movwf	(btemp+10)^0,c
 28251  01A458  0E00               	movlw	0
 28252  01A45A  6E35               	movwf	(btemp+11)^0,c
 28253                           
 28254                           ;stkvar	_i @ sp[(-20)+14]
 28255  01A45C  0EFA               	movlw	-6
 28256  01A45E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28257  01A464  0EFB               	movlw	-5
 28258  01A466  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28259                           
 28260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 28261  01A46C  0103               	movlb	3	; () banked
 28262  01A46E  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28263                           
 28264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28265  01A470  D0EE               	goto	l16030
 28266  01A472                     l15998:
 28267                           
 28268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 28269                           ;stkvar	_i @ sp[(-20)+14]
 28270  01A472  50E1               	movf	fsr1l,w,c
 28271  01A474  0FFA               	addlw	-6
 28272  01A476  6ED9               	movwf	fsr2l,c
 28273  01A478  50E2               	movf	fsr1h,w,c
 28274  01A47A  6EDA               	movwf	fsr2h,c
 28275  01A47C  0EFF               	movlw	255
 28276  01A47E  22DA               	addwfc	fsr2h,f,c
 28277  01A480  06DE               	decf	postinc2,f,c
 28278  01A482  0E00               	movlw	0
 28279  01A484  5ADD               	subwfb	postdec2,f,c
 28280                           
 28281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 28282                           ;stkvar	_n @ sp[(-20)+4]
 28283  01A486  0EF0               	movlw	-16
 28284  01A488  006F FF8C  F034    	movff	plusw1,btemp+10
 28285  01A48E  0EF1               	movlw	-15
 28286  01A490  006F FF8C  F035    	movff	plusw1,btemp+11
 28287  01A496  0E0F               	movlw	15
 28288  01A498  1634               	andwf	(btemp+10)^0,f,c
 28289  01A49A  0E00               	movlw	0
 28290  01A49C  1635               	andwf	(btemp+11)^0,f,c
 28291                           
 28292                           ;stkvar	_c @ sp[(-20)+12]
 28293  01A49E  0EF8               	movlw	-8
 28294  01A4A0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28295  01A4A6  0EF9               	movlw	-7
 28296  01A4A8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28297                           
 28298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 28299                           ;stkvar	_c @ sp[(-20)+12]
 28300  01A4AE  0EF9               	movlw	-7
 28301  01A4B0  BEE3               	btfsc	plusw1,7,c
 28302  01A4B2  D00F               	goto	l16006
 28303  01A4B4  0EF9               	movlw	-7
 28304  01A4B6  50E3               	movf	plusw1,w,c
 28305  01A4B8  E108               	bnz	u15330
 28306  01A4BA  0EF8               	movlw	-8
 28307  01A4BC  006F FF8C  F02A    	movff	plusw1,btemp
 28308  01A4C2  0E0A               	movlw	10
 28309  01A4C4  5E2A               	subwf	btemp^0,f,c
 28310  01A4C6  A0D8               	btfss	status,0,c
 28311  01A4C8  D004               	goto	l16006
 28312  01A4CA                     u15330:
 28313                           
 28314                           ;stkvar	_c @ sp[(-20)+12]
 28315  01A4CA  0EF8               	movlw	-8
 28316  01A4CC  50E3               	movf	plusw1,w,c
 28317  01A4CE  0F57               	addlw	87
 28318  01A4D0  D003               	goto	L28
 28319  01A4D2                     l16006:
 28320                           
 28321                           ;stkvar	_c @ sp[(-20)+12]
 28322  01A4D2  0EF8               	movlw	-8
 28323  01A4D4  50E3               	movf	plusw1,w,c
 28324  01A4D6  0F30               	addlw	48
 28325  01A4D8                     L28:
 28326  01A4D8  6E34               	movwf	(btemp+10)^0,c
 28327  01A4DA  0EF9               	movlw	-7
 28328  01A4DC  006F FF8C  F035    	movff	plusw1,btemp+11
 28329  01A4E2  0E00               	movlw	0
 28330  01A4E4  2235               	addwfc	(btemp+11)^0,f,c
 28331                           
 28332                           ;stkvar	_c @ sp[(-20)+12]
 28333  01A4E6  0EF8               	movlw	-8
 28334  01A4E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28335  01A4EE  0EF9               	movlw	-7
 28336  01A4F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28337  01A4F6  0EBF               	movlw	191
 28338  01A4F8  6E34               	movwf	(btemp+10)^0,c
 28339  01A4FA  0EFF               	movlw	255
 28340  01A4FC  6E35               	movwf	(btemp+11)^0,c
 28341                           
 28342                           ;stkvar	_x @ sp[(-20)+-11]
 28343  01A4FE  0EE1               	movlw	-31
 28344  01A500  50E3               	movf	plusw1,w,c
 28345  01A502  6E32               	movwf	(btemp+8)^0,c
 28346  01A504  6A33               	clrf	(btemp+9)^0,c
 28347  01A506  5034               	movf	(btemp+10)^0,w,c
 28348  01A508  2632               	addwf	(btemp+8)^0,f,c
 28349  01A50A  5035               	movf	(btemp+11)^0,w,c
 28350  01A50C  2233               	addwfc	(btemp+9)^0,f,c
 28351  01A50E  5033               	movf	(btemp+9)^0,w,c
 28352  01A510  E106               	bnz	u15340
 28353  01A512  0E1A               	movlw	26
 28354  01A514  5C32               	subwf	(btemp+8)^0,w,c
 28355  01A516  B0D8               	btfsc	status,0,c
 28356  01A518  D002               	goto	u15340
 28357  01A51A  0E01               	movlw	1
 28358  01A51C  D001               	goto	u15350
 28359  01A51E                     u15340:
 28360  01A51E  0E00               	movlw	0
 28361  01A520                     u15350:
 28362  01A520  6E34               	movwf	(btemp+10)^0,c
 28363  01A522  6A35               	clrf	(btemp+11)^0,c
 28364                           
 28365                           ;stkvar	_xtoa$6676 @ sp[(-20)+2]
 28366  01A524  0EEE               	movlw	-18
 28367  01A526  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28368  01A52C  0EEF               	movlw	-17
 28369  01A52E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28370                           
 28371                           ;stkvar	_xtoa$6676 @ sp[(-20)+2]
 28372  01A534  0EEE               	movlw	-18
 28373  01A536  006F FF8C  F02A    	movff	plusw1,btemp
 28374  01A53C  0EEF               	movlw	-17
 28375  01A53E  50E3               	movf	plusw1,w,c
 28376  01A540  102A               	iorwf	btemp^0,w,c
 28377  01A542  B4D8               	btfsc	status,2,c
 28378  01A544  D041               	goto	l16022
 28379  01A546  0E9F               	movlw	159
 28380  01A548  6E34               	movwf	(btemp+10)^0,c
 28381  01A54A  0EFF               	movlw	255
 28382  01A54C  6E35               	movwf	(btemp+11)^0,c
 28383                           
 28384                           ;stkvar	_c @ sp[(-20)+12]
 28385  01A54E  0EF8               	movlw	-8
 28386  01A550  006F FF8C  F032    	movff	plusw1,btemp+8
 28387  01A556  0EF9               	movlw	-7
 28388  01A558  006F FF8C  F033    	movff	plusw1,btemp+9
 28389  01A55E  0E20               	movlw	32
 28390  01A560  1232               	iorwf	(btemp+8)^0,f,c
 28391  01A562  0E00               	movlw	0
 28392  01A564  1233               	iorwf	(btemp+9)^0,f,c
 28393  01A566  5034               	movf	(btemp+10)^0,w,c
 28394  01A568  2632               	addwf	(btemp+8)^0,f,c
 28395  01A56A  5035               	movf	(btemp+11)^0,w,c
 28396  01A56C  2233               	addwfc	(btemp+9)^0,f,c
 28397  01A56E  5033               	movf	(btemp+9)^0,w,c
 28398  01A570  E106               	bnz	u15370
 28399  01A572  0E1A               	movlw	26
 28400  01A574  5C32               	subwf	(btemp+8)^0,w,c
 28401  01A576  B0D8               	btfsc	status,0,c
 28402  01A578  D002               	goto	u15370
 28403  01A57A  0E01               	movlw	1
 28404  01A57C  D001               	goto	u15380
 28405  01A57E                     u15370:
 28406  01A57E  0E00               	movlw	0
 28407  01A580                     u15380:
 28408  01A580  6E34               	movwf	(btemp+10)^0,c
 28409  01A582  6A35               	clrf	(btemp+11)^0,c
 28410                           
 28411                           ;stkvar	_xtoa$6677 @ sp[(-20)+0]
 28412  01A584  0EEC               	movlw	-20
 28413  01A586  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28414  01A58C  0EED               	movlw	-19
 28415  01A58E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28416                           
 28417                           ;stkvar	_xtoa$6677 @ sp[(-20)+0]
 28418  01A594  0EEC               	movlw	-20
 28419  01A596  006F FF8C  F02A    	movff	plusw1,btemp
 28420  01A59C  0EED               	movlw	-19
 28421  01A59E  50E3               	movf	plusw1,w,c
 28422  01A5A0  102A               	iorwf	btemp^0,w,c
 28423  01A5A2  B4D8               	btfsc	status,2,c
 28424  01A5A4  D011               	goto	l16022
 28425                           
 28426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 28427                           ;stkvar	_c @ sp[(-20)+12]
 28428  01A5A6  0EF8               	movlw	-8
 28429  01A5A8  006F FF8F FFE6     	movff	plusw1,postinc1
 28430  01A5AE  006F FF8F FFE6     	movff	plusw1,postinc1
 28431  01A5B4  ECFE  F009         	call	_toupper	;wreg free
 28432                           
 28433                           ;stkvar	_c @ sp[(-20)+12]
 28434  01A5B8  0EF8               	movlw	-8
 28435  01A5BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 28436  01A5C0  0EF9               	movlw	-7
 28437  01A5C2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 28438  01A5C8                     l16022:
 28439                           
 28440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 28441                           ;stkvar	_c @ sp[(-20)+12]
 28442                           ;stkvar	_i @ sp[(-20)+14]
 28443  01A5C8  0EFA               	movlw	-6
 28444  01A5CA  006F FF8C  F034    	movff	plusw1,btemp+10
 28445  01A5D0  0EFB               	movlw	-5
 28446  01A5D2  006F FF8C  F035    	movff	plusw1,btemp+11
 28447  01A5D8  0E54               	movlw	low _dbuf
 28448  01A5DA  2434               	addwf	(btemp+10)^0,w,c
 28449  01A5DC  6ED9               	movwf	fsr2l,c
 28450  01A5DE  0E03               	movlw	high _dbuf
 28451  01A5E0  2035               	addwfc	(btemp+11)^0,w,c
 28452  01A5E2  6EDA               	movwf	fsr2h,c
 28453  01A5E4  0EF8               	movlw	-8
 28454  01A5E6  006F FF8F FFDF     	movff	plusw1,indf2
 28455                           
 28456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 28457                           ;stkvar	_p @ sp[(-20)+18]
 28458  01A5EC  50E1               	movf	fsr1l,w,c
 28459  01A5EE  0FFE               	addlw	-2
 28460  01A5F0  6ED9               	movwf	fsr2l,c
 28461  01A5F2  50E2               	movf	fsr1h,w,c
 28462  01A5F4  6EDA               	movwf	fsr2h,c
 28463  01A5F6  0EFF               	movlw	255
 28464  01A5F8  22DA               	addwfc	fsr2h,f,c
 28465  01A5FA  06DE               	decf	postinc2,f,c
 28466  01A5FC  0E00               	movlw	0
 28467  01A5FE  5ADD               	subwfb	postdec2,f,c
 28468                           
 28469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 28470                           ;stkvar	_w @ sp[(-20)+16]
 28471  01A600  50E1               	movf	fsr1l,w,c
 28472  01A602  0FFC               	addlw	-4
 28473  01A604  6ED9               	movwf	fsr2l,c
 28474  01A606  50E2               	movf	fsr1h,w,c
 28475  01A608  6EDA               	movwf	fsr2h,c
 28476  01A60A  0EFF               	movlw	255
 28477  01A60C  22DA               	addwfc	fsr2h,f,c
 28478  01A60E  06DE               	decf	postinc2,f,c
 28479  01A610  0E00               	movlw	0
 28480  01A612  5ADD               	subwfb	postdec2,f,c
 28481                           
 28482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 28483  01A614  0E04               	movlw	4
 28484  01A616  6E35               	movwf	(btemp+11)^0,c
 28485                           
 28486                           ;stkvar	_n @ sp[(-20)+4]
 28487  01A618  50E1               	movf	fsr1l,w,c
 28488  01A61A  0FF0               	addlw	-16
 28489  01A61C  6ED9               	movwf	fsr2l,c
 28490  01A61E  50E2               	movf	fsr1h,w,c
 28491  01A620  6EDA               	movwf	fsr2h,c
 28492  01A622  0EFF               	movlw	255
 28493  01A624  22DA               	addwfc	fsr2h,f,c
 28494  01A626  2835               	incf	(btemp+11)^0,w,c
 28495  01A628  52DE               	movf	postinc2,f,c
 28496  01A62A  D00F               	goto	u15400
 28497  01A62C                     u15405:
 28498  01A62C  52DE               	movf	postinc2,f,c
 28499  01A62E  52DE               	movf	postinc2,f,c
 28500  01A630  52DE               	movf	postinc2,f,c
 28501  01A632  52DE               	movf	postinc2,f,c
 28502  01A634  52DE               	movf	postinc2,f,c
 28503  01A636  52DE               	movf	postinc2,f,c
 28504  01A638  90D8               	bcf	status,0,c
 28505  01A63A  32DD               	rrcf	postdec2,f,c
 28506  01A63C  32DD               	rrcf	postdec2,f,c
 28507  01A63E  32DD               	rrcf	postdec2,f,c
 28508  01A640  32DD               	rrcf	postdec2,f,c
 28509  01A642  32DD               	rrcf	postdec2,f,c
 28510  01A644  32DD               	rrcf	postdec2,f,c
 28511  01A646  32DD               	rrcf	postdec2,f,c
 28512  01A648  32DE               	rrcf	postinc2,f,c
 28513  01A64A                     u15400:
 28514  01A64A  2EE8               	decfsz	wreg,f,c
 28515  01A64C  D7EF               	goto	u15405
 28516  01A64E                     l16030:
 28517                           
 28518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28519                           ;stkvar	_i @ sp[(-20)+14]
 28520  01A64E  0EFB               	movlw	-5
 28521  01A650  BEE3               	btfsc	plusw1,7,c
 28522  01A652  D03A               	goto	u15450
 28523  01A654  0EFB               	movlw	-5
 28524  01A656  50E3               	movf	plusw1,w,c
 28525  01A658  E108               	bnz	u15410
 28526  01A65A  0EFA               	movlw	-6
 28527  01A65C  006F FF8C  F02A    	movff	plusw1,btemp
 28528  01A662  0E02               	movlw	2
 28529  01A664  5E2A               	subwf	btemp^0,f,c
 28530  01A666  A0D8               	btfss	status,0,c
 28531  01A668  D02F               	goto	u15450
 28532  01A66A                     u15410:
 28533                           
 28534                           ;stkvar	_n @ sp[(-20)+4]
 28535  01A66A  0EF0               	movlw	-16
 28536  01A66C  50E3               	movf	plusw1,w,c
 28537  01A66E  E115               	bnz	u15421
 28538  01A670  0EF1               	movlw	-15
 28539  01A672  50E3               	movf	plusw1,w,c
 28540  01A674  E112               	bnz	u15421
 28541  01A676  0EF2               	movlw	-14
 28542  01A678  50E3               	movf	plusw1,w,c
 28543  01A67A  E10F               	bnz	u15421
 28544  01A67C  0EF3               	movlw	-13
 28545  01A67E  50E3               	movf	plusw1,w,c
 28546  01A680  E10C               	bnz	u15421
 28547  01A682  0EF4               	movlw	-12
 28548  01A684  50E3               	movf	plusw1,w,c
 28549  01A686  E109               	bnz	u15421
 28550  01A688  0EF5               	movlw	-11
 28551  01A68A  50E3               	movf	plusw1,w,c
 28552  01A68C  E106               	bnz	u15421
 28553  01A68E  0EF6               	movlw	-10
 28554  01A690  50E3               	movf	plusw1,w,c
 28555  01A692  E103               	bnz	u15421
 28556  01A694  0EF7               	movlw	-9
 28557  01A696  50E3               	movf	plusw1,w,c
 28558  01A698  A4D8               	btfss	status,2,c
 28559  01A69A                     u15421:
 28560  01A69A  D6EB               	goto	l15998
 28561                           
 28562                           ;stkvar	_p @ sp[(-20)+18]
 28563  01A69C  0EFF               	movlw	-1
 28564  01A69E  BEE3               	btfsc	plusw1,7,c
 28565  01A6A0  D007               	goto	u15430
 28566  01A6A2  0EFF               	movlw	-1
 28567  01A6A4  50E3               	movf	plusw1,w,c
 28568  01A6A6  E103               	bnz	u15431
 28569  01A6A8  0EFE               	movlw	-2
 28570  01A6AA  04E3               	decf	plusw1,w,c
 28571  01A6AC  B0D8               	btfsc	status,0,c
 28572  01A6AE                     u15431:
 28573  01A6AE  D6E1               	goto	l15998
 28574  01A6B0                     u15430:
 28575                           
 28576                           ;stkvar	_w @ sp[(-20)+16]
 28577  01A6B0  0EFD               	movlw	-3
 28578  01A6B2  BEE3               	btfsc	plusw1,7,c
 28579  01A6B4  D009               	goto	u15450
 28580  01A6B6  0EFD               	movlw	-3
 28581  01A6B8  50E3               	movf	plusw1,w,c
 28582  01A6BA  E104               	bnz	u15440
 28583  01A6BC  0EFC               	movlw	-4
 28584  01A6BE  04E3               	decf	plusw1,w,c
 28585  01A6C0  A0D8               	btfss	status,0,c
 28586  01A6C2  D002               	goto	u15450
 28587  01A6C4                     u15440:
 28588  01A6C4  B24E               	btfsc	_flags^0,1,c
 28589  01A6C6  D6D5               	goto	l15998
 28590  01A6C8                     u15450:
 28591                           
 28592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 28593  01A6C8  A84E               	btfss	_flags^0,4,c
 28594  01A6CA  D036               	goto	l16046
 28595                           
 28596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 28597                           ;stkvar	_i @ sp[(-20)+14]
 28598  01A6CC  50E1               	movf	fsr1l,w,c
 28599  01A6CE  0FFA               	addlw	-6
 28600  01A6D0  6ED9               	movwf	fsr2l,c
 28601  01A6D2  50E2               	movf	fsr1h,w,c
 28602  01A6D4  6EDA               	movwf	fsr2h,c
 28603  01A6D6  0EFF               	movlw	255
 28604  01A6D8  22DA               	addwfc	fsr2h,f,c
 28605  01A6DA  06DE               	decf	postinc2,f,c
 28606  01A6DC  0E00               	movlw	0
 28607  01A6DE  5ADD               	subwfb	postdec2,f,c
 28608                           
 28609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 28610                           ;stkvar	_x @ sp[(-20)+-11]
 28611                           ;stkvar	_i @ sp[(-20)+14]
 28612  01A6E0  0EFA               	movlw	-6
 28613  01A6E2  006F FF8C  F034    	movff	plusw1,btemp+10
 28614  01A6E8  0EFB               	movlw	-5
 28615  01A6EA  006F FF8C  F035    	movff	plusw1,btemp+11
 28616  01A6F0  0E54               	movlw	low _dbuf
 28617  01A6F2  2434               	addwf	(btemp+10)^0,w,c
 28618  01A6F4  6ED9               	movwf	fsr2l,c
 28619  01A6F6  0E03               	movlw	high _dbuf
 28620  01A6F8  2035               	addwfc	(btemp+11)^0,w,c
 28621  01A6FA  6EDA               	movwf	fsr2h,c
 28622  01A6FC  0EE1               	movlw	-31
 28623  01A6FE  006F FF8F FFDF     	movff	plusw1,indf2
 28624                           
 28625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 28626                           ;stkvar	_i @ sp[(-20)+14]
 28627  01A704  50E1               	movf	fsr1l,w,c
 28628  01A706  0FFA               	addlw	-6
 28629  01A708  6ED9               	movwf	fsr2l,c
 28630  01A70A  50E2               	movf	fsr1h,w,c
 28631  01A70C  6EDA               	movwf	fsr2h,c
 28632  01A70E  0EFF               	movlw	255
 28633  01A710  22DA               	addwfc	fsr2h,f,c
 28634  01A712  06DE               	decf	postinc2,f,c
 28635  01A714  0E00               	movlw	0
 28636  01A716  5ADD               	subwfb	postdec2,f,c
 28637                           
 28638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 28639                           ;stkvar	_i @ sp[(-20)+14]
 28640  01A718  0EFA               	movlw	-6
 28641  01A71A  006F FF8C  F034    	movff	plusw1,btemp+10
 28642  01A720  0EFB               	movlw	-5
 28643  01A722  006F FF8C  F035    	movff	plusw1,btemp+11
 28644  01A728  0E54               	movlw	low _dbuf
 28645  01A72A  2434               	addwf	(btemp+10)^0,w,c
 28646  01A72C  6ED9               	movwf	fsr2l,c
 28647  01A72E  0E03               	movlw	high _dbuf
 28648  01A730  2035               	addwfc	(btemp+11)^0,w,c
 28649  01A732  6EDA               	movwf	fsr2h,c
 28650  01A734  0E30               	movlw	48
 28651  01A736  6EDF               	movwf	indf2,c
 28652  01A738                     l16046:
 28653                           
 28654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 28655                           ;stkvar	_w @ sp[(-20)+16]
 28656  01A738  0EFC               	movlw	-4
 28657  01A73A  006F FF8F FFE6     	movff	plusw1,postinc1
 28658  01A740  006F FF8F FFE6     	movff	plusw1,postinc1
 28659                           
 28660                           ;stkvar	_i @ sp[(-22)+14]
 28661  01A746  0E54               	movlw	low _dbuf
 28662  01A748  6E34               	movwf	(btemp+10)^0,c
 28663  01A74A  0E03               	movlw	high _dbuf
 28664  01A74C  6E35               	movwf	(btemp+11)^0,c
 28665  01A74E  0EF8               	movlw	-8
 28666  01A750  50E3               	movf	plusw1,w,c
 28667  01A752  2634               	addwf	(btemp+10)^0,f,c
 28668  01A754  0EF9               	movlw	-7
 28669  01A756  50E3               	movf	plusw1,w,c
 28670  01A758  2235               	addwfc	(btemp+11)^0,f,c
 28671  01A75A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28672  01A760  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28673                           
 28674                           ;stkvar	_fp @ sp[(-24)+-2]
 28675  01A766  0EE6               	movlw	-26
 28676  01A768  006F FF8F FFE6     	movff	plusw1,postinc1
 28677  01A76E  006F FF8F FFE6     	movff	plusw1,postinc1
 28678  01A774  EC5B  F0FE         	call	_pad	;wreg free
 28679                           
 28680                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 28681  01A778  0EE1               	movlw	225
 28682  01A77A  26E1               	addwf	fsr1l,f,c
 28683  01A77C  0EFF               	movlw	255
 28684  01A77E  22E2               	addwfc	fsr1h,f,c
 28685  01A780  0012               	return		;funcret
 28686  01A782                     __end_of_xtoa:
 28687                           	opt callstack 0
 28688                           
 28689 ;; *************** function _toupper *****************
 28690 ;; Defined at:
 28691 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 28692 ;; Parameters:    Size  Location     Type
 28693 ;;  c               2  [STACK] int 
 28694 ;; Auto vars:     Size  Location     Type
 28695 ;;		None
 28696 ;; Return value:  Size  Location     Type
 28697 ;;                  2  [STACK] int 
 28698 ;; Registers used:
 28699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 28700 ;; Tracked objects:
 28701 ;;		On entry : 0/3
 28702 ;;		On exit  : 0/0
 28703 ;;		Unchanged: 0/0
 28704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28709 ;;Total ram usage:        0 bytes
 28710 ;; Hardware stack levels used:    1
 28711 ;; Hardware stack levels required when called:   16
 28712 ;; This function calls:
 28713 ;;		_islower
 28714 ;; This function is called by:
 28715 ;;		_xtoa
 28716 ;; This function uses a reentrant model
 28717 ;;
 28718                           
 28719                           	psect	text95
 28720  0013FC                     __ptext95:
 28721                           	opt callstack 0
 28722  0013FC                     _toupper:
 28723                           	opt callstack 0
 28724                           
 28725                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28726  0013FC  52E6               	movf	postinc1,f,c
 28727  0013FE  52E6               	movf	postinc1,f,c
 28728                           
 28729                           ;stkvar	_c @ sp[(-2)+-2]
 28730                           
 28731                           ;incstack = 0
 28732 ;; hardware stack exceeded
 28733  001400  0EFC               	movlw	-4
 28734  001402  50E3               	movf	plusw1,w,c
 28735  001404  0F9F               	addlw	159
 28736  001406  6E34               	movwf	(btemp+10)^0,c
 28737  001408  0EFD               	movlw	-3
 28738  00140A  006F FF8C  F035    	movff	plusw1,btemp+11
 28739  001410  0EFF               	movlw	255
 28740  001412  2235               	addwfc	(btemp+11)^0,f,c
 28741  001414  5035               	movf	(btemp+11)^0,w,c
 28742  001416  E106               	bnz	u8010
 28743  001418  0E1A               	movlw	26
 28744  00141A  5C34               	subwf	(btemp+10)^0,w,c
 28745  00141C  B0D8               	btfsc	status,0,c
 28746  00141E  D002               	goto	u8010
 28747  001420  0E01               	movlw	1
 28748  001422  D001               	goto	u8020
 28749  001424                     u8010:
 28750  001424  0E00               	movlw	0
 28751  001426                     u8020:
 28752  001426  6E34               	movwf	(btemp+10)^0,c
 28753  001428  6A35               	clrf	(btemp+11)^0,c
 28754                           
 28755                           ;stkvar	_toupper$7618 @ sp[(-2)+0]
 28756  00142A  0EFE               	movlw	-2
 28757  00142C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28758  001432  0EFF               	movlw	-1
 28759  001434  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28760                           
 28761                           ;stkvar	_toupper$7618 @ sp[(-2)+0]
 28762  00143A  0EFE               	movlw	-2
 28763  00143C  006F FF8C  F02A    	movff	plusw1,btemp
 28764  001442  0EFF               	movlw	-1
 28765  001444  50E3               	movf	plusw1,w,c
 28766  001446  102A               	iorwf	btemp^0,w,c
 28767  001448  B4D8               	btfsc	status,2,c
 28768  00144A  D00D               	goto	l10218
 28769                           
 28770                           ;stkvar	_c @ sp[(-2)+-2]
 28771  00144C  0EFC               	movlw	-4
 28772  00144E  006F FF8C  F02A    	movff	plusw1,btemp
 28773  001454  0EFD               	movlw	-3
 28774  001456  006F FF8C  F02B    	movff	plusw1,btemp+1
 28775  00145C  0E5F               	movlw	95
 28776  00145E  162A               	andwf	btemp^0,f,c
 28777  001460  0E00               	movlw	0
 28778  001462  162B               	andwf	(btemp+1)^0,f,c
 28779  001464  D008               	goto	l3846
 28780  001466                     l10218:
 28781                           
 28782                           ;stkvar	_c @ sp[(-2)+-2]
 28783  001466  0EFC               	movlw	-4
 28784  001468  006F FF8C  F02A    	movff	plusw1,btemp
 28785  00146E  0EFD               	movlw	-3
 28786  001470  006F FF8C  F02B    	movff	plusw1,btemp+1
 28787  001476                     l3846:
 28788                           
 28789                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28790  001476  52E5               	movf	postdec1,f,c
 28791  001478  52E5               	movf	postdec1,f,c
 28792  00147A  52E5               	movf	postdec1,f,c
 28793  00147C  52E5               	movf	postdec1,f,c
 28794  00147E  0012               	return		;funcret
 28795  001480                     __end_of_toupper:
 28796                           	opt callstack 0
 28797                           
 28798 ;; *************** function _islower *****************
 28799 ;; Defined at:
 28800 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 28801 ;; Parameters:    Size  Location     Type
 28802 ;;  c               2  [STACK] int 
 28803 ;; Auto vars:     Size  Location     Type
 28804 ;;		None
 28805 ;; Return value:  Size  Location     Type
 28806 ;;                  2  [STACK] int 
 28807 ;; Registers used:
 28808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 28809 ;; Tracked objects:
 28810 ;;		On entry : 0/0
 28811 ;;		On exit  : 0/0
 28812 ;;		Unchanged: 0/0
 28813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28818 ;;Total ram usage:        0 bytes
 28819 ;; Hardware stack levels used:    1
 28820 ;; Hardware stack levels required when called:   15
 28821 ;; This function calls:
 28822 ;;		Nothing
 28823 ;; This function is called by:
 28824 ;;		_toupper
 28825 ;; This function uses a reentrant model
 28826 ;;
 28827                           
 28828                           	psect	text96
 28829  0025C4                     __ptext96:
 28830                           	opt callstack 0
 28831  0025C4                     _islower:
 28832                           	opt callstack 0
 28833                           
 28834                           ;stkvar	_c @ sp[(0)+-2]
 28835                           
 28836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28837                           ;incstack = 0
 28838 ;; hardware stack exceeded
 28839  0025C4  0EFE               	movlw	-2
 28840  0025C6  50E3               	movf	plusw1,w,c
 28841  0025C8  0F9F               	addlw	159
 28842  0025CA  6E34               	movwf	(btemp+10)^0,c
 28843  0025CC  0EFF               	movlw	-1
 28844  0025CE  006F FF8C  F035    	movff	plusw1,btemp+11
 28845  0025D4  0EFF               	movlw	255
 28846  0025D6  2235               	addwfc	(btemp+11)^0,f,c
 28847  0025D8  5035               	movf	(btemp+11)^0,w,c
 28848  0025DA  E106               	bnz	u7640
 28849  0025DC  0E1A               	movlw	26
 28850  0025DE  5C34               	subwf	(btemp+10)^0,w,c
 28851  0025E0  B0D8               	btfsc	status,0,c
 28852  0025E2  D002               	goto	u7640
 28853  0025E4  0E01               	movlw	1
 28854  0025E6  D001               	goto	u7650
 28855  0025E8                     u7640:
 28856  0025E8  0E00               	movlw	0
 28857  0025EA                     u7650:
 28858  0025EA  6E2A               	movwf	btemp^0,c
 28859  0025EC  6A2B               	clrf	(btemp+1)^0,c
 28860                           
 28861                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28862  0025EE  52E5               	movf	postdec1,f,c
 28863  0025F0  52E5               	movf	postdec1,f,c
 28864  0025F2  0012               	return		;funcret
 28865  0025F4                     __end_of_islower:
 28866                           	opt callstack 0
 28867                           
 28868 ;; *************** function _isalpha *****************
 28869 ;; Defined at:
 28870 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 28871 ;; Parameters:    Size  Location     Type
 28872 ;;  c               2  [STACK] int 
 28873 ;; Auto vars:     Size  Location     Type
 28874 ;;		None
 28875 ;; Return value:  Size  Location     Type
 28876 ;;                  2  [STACK] int 
 28877 ;; Registers used:
 28878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 28879 ;; Tracked objects:
 28880 ;;		On entry : 0/0
 28881 ;;		On exit  : 0/0
 28882 ;;		Unchanged: 0/0
 28883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28888 ;;Total ram usage:        0 bytes
 28889 ;; Hardware stack levels used:    1
 28890 ;; Hardware stack levels required when called:   15
 28891 ;; This function calls:
 28892 ;;		Nothing
 28893 ;; This function is called by:
 28894 ;;		_xtoa
 28895 ;; This function uses a reentrant model
 28896 ;;
 28897                           
 28898                           	psect	text97
 28899  00213A                     __ptext97:
 28900                           	opt callstack 0
 28901  00213A                     _isalpha:
 28902                           	opt callstack 0
 28903                           
 28904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28905                           ;incstack = 0
 28906 ;; hardware stack exceeded
 28907  00213A  0E9F               	movlw	159
 28908  00213C  6E34               	movwf	(btemp+10)^0,c
 28909  00213E  0EFF               	movlw	255
 28910  002140  6E35               	movwf	(btemp+11)^0,c
 28911                           
 28912                           ;stkvar	_c @ sp[(0)+-2]
 28913  002142  0EFE               	movlw	-2
 28914  002144  006F FF8C  F032    	movff	plusw1,btemp+8
 28915  00214A  0EFF               	movlw	-1
 28916  00214C  006F FF8C  F033    	movff	plusw1,btemp+9
 28917  002152  0E20               	movlw	32
 28918  002154  1232               	iorwf	(btemp+8)^0,f,c
 28919  002156  0E00               	movlw	0
 28920  002158  1233               	iorwf	(btemp+9)^0,f,c
 28921  00215A  5034               	movf	(btemp+10)^0,w,c
 28922  00215C  2632               	addwf	(btemp+8)^0,f,c
 28923  00215E  5035               	movf	(btemp+11)^0,w,c
 28924  002160  2233               	addwfc	(btemp+9)^0,f,c
 28925  002162  5033               	movf	(btemp+9)^0,w,c
 28926  002164  E106               	bnz	u7990
 28927  002166  0E1A               	movlw	26
 28928  002168  5C32               	subwf	(btemp+8)^0,w,c
 28929  00216A  B0D8               	btfsc	status,0,c
 28930  00216C  D002               	goto	u7990
 28931  00216E  0E01               	movlw	1
 28932  002170  D001               	goto	u8000
 28933  002172                     u7990:
 28934  002172  0E00               	movlw	0
 28935  002174                     u8000:
 28936  002174  6E2A               	movwf	btemp^0,c
 28937  002176  6A2B               	clrf	(btemp+1)^0,c
 28938                           
 28939                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28940  002178  52E5               	movf	postdec1,f,c
 28941  00217A  52E5               	movf	postdec1,f,c
 28942  00217C  0012               	return		;funcret
 28943  00217E                     __end_of_isalpha:
 28944                           	opt callstack 0
 28945                           
 28946 ;; *************** function _utoa *****************
 28947 ;; Defined at:
 28948 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28949 ;; Parameters:    Size  Location     Type
 28950 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28951 ;;		 -> f(6), NULL(0), 
 28952 ;;  d               8  [STACK] unsigned long long 
 28953 ;; Auto vars:     Size  Location     Type
 28954 ;;  n               8  [STACK] unsigned long long 
 28955 ;;  i               2  [STACK] int 
 28956 ;;  w               2  [STACK] int 
 28957 ;;  p               2  [STACK] int 
 28958 ;; Return value:  Size  Location     Type
 28959 ;;                  2  [STACK] int 
 28960 ;; Registers used:
 28961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 28962 ;; Tracked objects:
 28963 ;;		On entry : 0/0
 28964 ;;		On exit  : 0/0
 28965 ;;		Unchanged: 0/0
 28966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28971 ;;Total ram usage:        0 bytes
 28972 ;; Hardware stack levels used:    1
 28973 ;; Hardware stack levels required when called:   20
 28974 ;; This function calls:
 28975 ;;		___lodiv
 28976 ;;		___lomod
 28977 ;;		_pad
 28978 ;; This function is called by:
 28979 ;;		_vfpfcnvrt
 28980 ;; This function uses a reentrant model
 28981 ;;
 28982                           
 28983                           	psect	text98
 28984  01AE62                     __ptext98:
 28985                           	opt callstack 0
 28986  01AE62                     _utoa:
 28987                           	opt callstack 0
 28988                           
 28989                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28990  01AE62  0E0E               	movlw	14
 28991  01AE64  26E1               	addwf	fsr1l,f,c
 28992  01AE66  0E00               	movlw	0
 28993  01AE68  22E2               	addwfc	fsr1h,f,c
 28994                           
 28995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 28996                           
 28997                           ;incstack = 0
 28998 ;; hardware stack exceeded
 28999  01AE6A  AE4D               	btfss	(_prec+1)^0,7,c
 29000                           
 29001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 29002  01AE6C  924E               	bcf	_flags^0,1,c
 29003                           
 29004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 29005  01AE6E  BE4D               	btfsc	(_prec+1)^0,7,c
 29006  01AE70  D005               	goto	u15220
 29007  01AE72  504D               	movf	(_prec+1)^0,w,c
 29008  01AE74  E110               	bnz	l15946
 29009  01AE76  044C               	decf	_prec^0,w,c
 29010  01AE78  B0D8               	btfsc	status,0,c
 29011  01AE7A  D00D               	goto	l15946
 29012  01AE7C                     u15220:
 29013  01AE7C  0E01               	movlw	1
 29014  01AE7E  6E34               	movwf	(btemp+10)^0,c
 29015  01AE80  0E00               	movlw	0
 29016  01AE82  6E35               	movwf	(btemp+11)^0,c
 29017                           
 29018                           ;stkvar	_p @ sp[(-14)+12]
 29019  01AE84  0EFE               	movlw	-2
 29020  01AE86  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29021  01AE8C  0EFF               	movlw	-1
 29022  01AE8E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29023  01AE94  D008               	goto	l2634
 29024  01AE96                     l15946:
 29025                           
 29026                           ;stkvar	_p @ sp[(-14)+12]
 29027  01AE96  0EFE               	movlw	-2
 29028  01AE98  0060  F133  FFE3   	movff	_prec,plusw1
 29029  01AE9E  0EFF               	movlw	-1
 29030  01AEA0  0060  F137  FFE3   	movff	_prec+1,plusw1
 29031  01AEA6                     l2634:
 29032                           
 29033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 29034                           ;stkvar	_w @ sp[(-14)+10]
 29035  01AEA6  0EFC               	movlw	-4
 29036  01AEA8  0060  F12B  FFE3   	movff	_width,plusw1
 29037  01AEAE  0EFD               	movlw	-3
 29038  01AEB0  0060  F12F  FFE3   	movff	_width+1,plusw1
 29039                           
 29040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 29041                           ;stkvar	_d @ sp[(-14)+-10]
 29042  01AEB6  0EE8               	movlw	232
 29043  01AEB8  24E1               	addwf	fsr1l,w,c
 29044  01AEBA  6ED9               	movwf	fsr2l,c
 29045  01AEBC  0EFF               	movlw	255
 29046  01AEBE  20E2               	addwfc	fsr1h,w,c
 29047  01AEC0  6EDA               	movwf	fsr2h,c
 29048                           
 29049                           ;stkvar	_n @ sp[(-14)+0]
 29050  01AEC2  0E08               	movlw	8
 29051  01AEC4  6E2A               	movwf	btemp^0,c
 29052  01AEC6  0EF2               	movlw	-14
 29053  01AEC8                     us1523999:
 29054  01AEC8  006F FF7B FFE3     	movff	postinc2,plusw1
 29055  01AECE  28E8               	incf	wreg,w,c
 29056  01AED0  2E2A               	decfsz	btemp^0,f,c
 29057  01AED2  D7FA               	bra	us1523999
 29058                           
 29059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 29060  01AED4  0E4F               	movlw	79
 29061  01AED6  6E34               	movwf	(btemp+10)^0,c
 29062  01AED8  0E00               	movlw	0
 29063  01AEDA  6E35               	movwf	(btemp+11)^0,c
 29064                           
 29065                           ;stkvar	_i @ sp[(-14)+8]
 29066  01AEDC  0EFA               	movlw	-6
 29067  01AEDE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29068  01AEE4  0EFB               	movlw	-5
 29069  01AEE6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29070                           
 29071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 29072  01AEEC  0103               	movlb	3	; () banked
 29073  01AEEE  6BA3               	clrf	(_dbuf+79)& (0+255),b
 29074                           
 29075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29076  01AEF0  D0FB               	goto	l15964
 29077  01AEF2                     l15954:
 29078                           
 29079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 29080                           ;stkvar	_i @ sp[(-14)+8]
 29081  01AEF2  50E1               	movf	fsr1l,w,c
 29082  01AEF4  0FFA               	addlw	-6
 29083  01AEF6  6ED9               	movwf	fsr2l,c
 29084  01AEF8  50E2               	movf	fsr1h,w,c
 29085  01AEFA  6EDA               	movwf	fsr2h,c
 29086  01AEFC  0EFF               	movlw	255
 29087  01AEFE  22DA               	addwfc	fsr2h,f,c
 29088  01AF00  06DE               	decf	postinc2,f,c
 29089  01AF02  0E00               	movlw	0
 29090  01AF04  5ADD               	subwfb	postdec2,f,c
 29091                           
 29092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 29093  01AF06  0E0A               	movlw	10
 29094  01AF08  6EE6               	movwf	postinc1,c
 29095  01AF0A  0E00               	movlw	0
 29096  01AF0C  6EE6               	movwf	postinc1,c
 29097  01AF0E  0E00               	movlw	0
 29098  01AF10  6EE6               	movwf	postinc1,c
 29099  01AF12  0E00               	movlw	0
 29100  01AF14  6EE6               	movwf	postinc1,c
 29101  01AF16  0E00               	movlw	0
 29102  01AF18  6EE6               	movwf	postinc1,c
 29103  01AF1A  0E00               	movlw	0
 29104  01AF1C  6EE6               	movwf	postinc1,c
 29105  01AF1E  0E00               	movlw	0
 29106  01AF20  6EE6               	movwf	postinc1,c
 29107  01AF22  0E00               	movlw	0
 29108  01AF24  6EE6               	movwf	postinc1,c
 29109                           
 29110                           ;stkvar	_n @ sp[(-22)+0]
 29111  01AF26  50E1               	movf	fsr1l,w,c
 29112  01AF28  0FEA               	addlw	-22
 29113  01AF2A  6ED9               	movwf	fsr2l,c
 29114  01AF2C  50E2               	movf	fsr1h,w,c
 29115  01AF2E  6EDA               	movwf	fsr2h,c
 29116  01AF30  0EFF               	movlw	255
 29117  01AF32  22DA               	addwfc	fsr2h,f,c
 29118  01AF34  006F FF7B FFE6     	movff	postinc2,postinc1
 29119  01AF3A  006F FF7B FFE6     	movff	postinc2,postinc1
 29120  01AF40  006F FF7B FFE6     	movff	postinc2,postinc1
 29121  01AF46  006F FF7B FFE6     	movff	postinc2,postinc1
 29122  01AF4C  006F FF7B FFE6     	movff	postinc2,postinc1
 29123  01AF52  006F FF7B FFE6     	movff	postinc2,postinc1
 29124  01AF58  006F FF7B FFE6     	movff	postinc2,postinc1
 29125  01AF5E  006F FF7B FFE6     	movff	postinc2,postinc1
 29126  01AF64  ECE8  F0FA         	call	___lomod	;wreg free
 29127  01AF68  52E5               	movf	postdec1,f,c
 29128  01AF6A  006F FF9C  F041    	movff	indf1,btemp+23
 29129  01AF70  52E5               	movf	postdec1,f,c
 29130  01AF72  006F FF9C  F040    	movff	indf1,btemp+22
 29131  01AF78  52E5               	movf	postdec1,f,c
 29132  01AF7A  006F FF9C  F03F    	movff	indf1,btemp+21
 29133  01AF80  52E5               	movf	postdec1,f,c
 29134  01AF82  006F FF9C  F03E    	movff	indf1,btemp+20
 29135  01AF88  52E5               	movf	postdec1,f,c
 29136  01AF8A  006F FF9C  F03D    	movff	indf1,btemp+19
 29137  01AF90  52E5               	movf	postdec1,f,c
 29138  01AF92  006F FF9C  F03C    	movff	indf1,btemp+18
 29139  01AF98  52E5               	movf	postdec1,f,c
 29140  01AF9A  006F FF9C  F03B    	movff	indf1,btemp+17
 29141  01AFA0  52E5               	movf	postdec1,f,c
 29142  01AFA2  006F FF9C  F03A    	movff	indf1,btemp+16
 29143  01AFA8  0EF8               	movlw	248
 29144  01AFAA  26E1               	addwf	fsr1l,f,c
 29145  01AFAC  0EFF               	movlw	255
 29146  01AFAE  22E2               	addwfc	fsr1h,f,c
 29147  01AFB0  0E30               	movlw	48
 29148  01AFB2  263A               	addwf	(btemp+16)^0,f,c
 29149                           
 29150                           ;stkvar	_i @ sp[(-14)+8]
 29151  01AFB4  0EFA               	movlw	-6
 29152  01AFB6  006F FF8C  F034    	movff	plusw1,btemp+10
 29153  01AFBC  0EFB               	movlw	-5
 29154  01AFBE  006F FF8C  F035    	movff	plusw1,btemp+11
 29155  01AFC4  0E54               	movlw	low _dbuf
 29156  01AFC6  2434               	addwf	(btemp+10)^0,w,c
 29157  01AFC8  6ED9               	movwf	fsr2l,c
 29158  01AFCA  0E03               	movlw	high _dbuf
 29159  01AFCC  2035               	addwfc	(btemp+11)^0,w,c
 29160  01AFCE  6EDA               	movwf	fsr2h,c
 29161  01AFD0  0060  F0EB  FFDF   	movff	btemp+16,indf2
 29162                           
 29163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 29164                           ;stkvar	_p @ sp[(-14)+12]
 29165  01AFD6  50E1               	movf	fsr1l,w,c
 29166  01AFD8  0FFE               	addlw	-2
 29167  01AFDA  6ED9               	movwf	fsr2l,c
 29168  01AFDC  50E2               	movf	fsr1h,w,c
 29169  01AFDE  6EDA               	movwf	fsr2h,c
 29170  01AFE0  0EFF               	movlw	255
 29171  01AFE2  22DA               	addwfc	fsr2h,f,c
 29172  01AFE4  06DE               	decf	postinc2,f,c
 29173  01AFE6  0E00               	movlw	0
 29174  01AFE8  5ADD               	subwfb	postdec2,f,c
 29175                           
 29176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 29177                           ;stkvar	_w @ sp[(-14)+10]
 29178  01AFEA  50E1               	movf	fsr1l,w,c
 29179  01AFEC  0FFC               	addlw	-4
 29180  01AFEE  6ED9               	movwf	fsr2l,c
 29181  01AFF0  50E2               	movf	fsr1h,w,c
 29182  01AFF2  6EDA               	movwf	fsr2h,c
 29183  01AFF4  0EFF               	movlw	255
 29184  01AFF6  22DA               	addwfc	fsr2h,f,c
 29185  01AFF8  06DE               	decf	postinc2,f,c
 29186  01AFFA  0E00               	movlw	0
 29187  01AFFC  5ADD               	subwfb	postdec2,f,c
 29188                           
 29189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 29190  01AFFE  0E0A               	movlw	10
 29191  01B000  6EE6               	movwf	postinc1,c
 29192  01B002  0E00               	movlw	0
 29193  01B004  6EE6               	movwf	postinc1,c
 29194  01B006  0E00               	movlw	0
 29195  01B008  6EE6               	movwf	postinc1,c
 29196  01B00A  0E00               	movlw	0
 29197  01B00C  6EE6               	movwf	postinc1,c
 29198  01B00E  0E00               	movlw	0
 29199  01B010  6EE6               	movwf	postinc1,c
 29200  01B012  0E00               	movlw	0
 29201  01B014  6EE6               	movwf	postinc1,c
 29202  01B016  0E00               	movlw	0
 29203  01B018  6EE6               	movwf	postinc1,c
 29204  01B01A  0E00               	movlw	0
 29205  01B01C  6EE6               	movwf	postinc1,c
 29206                           
 29207                           ;stkvar	_n @ sp[(-22)+0]
 29208  01B01E  50E1               	movf	fsr1l,w,c
 29209  01B020  0FEA               	addlw	-22
 29210  01B022  6ED9               	movwf	fsr2l,c
 29211  01B024  50E2               	movf	fsr1h,w,c
 29212  01B026  6EDA               	movwf	fsr2h,c
 29213  01B028  0EFF               	movlw	255
 29214  01B02A  22DA               	addwfc	fsr2h,f,c
 29215  01B02C  006F FF7B FFE6     	movff	postinc2,postinc1
 29216  01B032  006F FF7B FFE6     	movff	postinc2,postinc1
 29217  01B038  006F FF7B FFE6     	movff	postinc2,postinc1
 29218  01B03E  006F FF7B FFE6     	movff	postinc2,postinc1
 29219  01B044  006F FF7B FFE6     	movff	postinc2,postinc1
 29220  01B04A  006F FF7B FFE6     	movff	postinc2,postinc1
 29221  01B050  006F FF7B FFE6     	movff	postinc2,postinc1
 29222  01B056  006F FF7B FFE6     	movff	postinc2,postinc1
 29223  01B05C  EC50  F0F3         	call	___lodiv	;wreg free
 29224  01B060  52E5               	movf	postdec1,f,c
 29225  01B062  006F FF9C  F041    	movff	indf1,btemp+23
 29226  01B068  52E5               	movf	postdec1,f,c
 29227  01B06A  006F FF9C  F040    	movff	indf1,btemp+22
 29228  01B070  52E5               	movf	postdec1,f,c
 29229  01B072  006F FF9C  F03F    	movff	indf1,btemp+21
 29230  01B078  52E5               	movf	postdec1,f,c
 29231  01B07A  006F FF9C  F03E    	movff	indf1,btemp+20
 29232  01B080  52E5               	movf	postdec1,f,c
 29233  01B082  006F FF9C  F03D    	movff	indf1,btemp+19
 29234  01B088  52E5               	movf	postdec1,f,c
 29235  01B08A  006F FF9C  F03C    	movff	indf1,btemp+18
 29236  01B090  52E5               	movf	postdec1,f,c
 29237  01B092  006F FF9C  F03B    	movff	indf1,btemp+17
 29238  01B098  52E5               	movf	postdec1,f,c
 29239  01B09A  006F FF9C  F03A    	movff	indf1,btemp+16
 29240  01B0A0  0EF8               	movlw	248
 29241  01B0A2  26E1               	addwf	fsr1l,f,c
 29242  01B0A4  0EFF               	movlw	255
 29243  01B0A6  22E2               	addwfc	fsr1h,f,c
 29244                           
 29245                           ;stkvar	_n @ sp[(-14)+0]
 29246  01B0A8  0EF2               	movlw	-14
 29247  01B0AA  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 29248  01B0B0  0EF3               	movlw	-13
 29249  01B0B2  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 29250  01B0B8  0EF4               	movlw	-12
 29251  01B0BA  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 29252  01B0C0  0EF5               	movlw	-11
 29253  01B0C2  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 29254  01B0C8  0EF6               	movlw	-10
 29255  01B0CA  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 29256  01B0D0  0EF7               	movlw	-9
 29257  01B0D2  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 29258  01B0D8  0EF8               	movlw	-8
 29259  01B0DA  0060  F103  FFE3   	movff	btemp+22,plusw1
 29260  01B0E0  0EF9               	movlw	-7
 29261  01B0E2  0060  F107  FFE3   	movff	btemp+23,plusw1
 29262  01B0E8                     l15964:
 29263                           
 29264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29265                           ;stkvar	_i @ sp[(-14)+8]
 29266  01B0E8  0EFA               	movlw	-6
 29267  01B0EA  006F FF8C  F02A    	movff	plusw1,btemp
 29268  01B0F0  0EFB               	movlw	-5
 29269  01B0F2  50E3               	movf	plusw1,w,c
 29270  01B0F4  102A               	iorwf	btemp^0,w,c
 29271  01B0F6  B4D8               	btfsc	status,2,c
 29272  01B0F8  D02F               	goto	u15280
 29273                           
 29274                           ;stkvar	_n @ sp[(-14)+0]
 29275  01B0FA  0EF2               	movlw	-14
 29276  01B0FC  50E3               	movf	plusw1,w,c
 29277  01B0FE  E115               	bnz	u15251
 29278  01B100  0EF3               	movlw	-13
 29279  01B102  50E3               	movf	plusw1,w,c
 29280  01B104  E112               	bnz	u15251
 29281  01B106  0EF4               	movlw	-12
 29282  01B108  50E3               	movf	plusw1,w,c
 29283  01B10A  E10F               	bnz	u15251
 29284  01B10C  0EF5               	movlw	-11
 29285  01B10E  50E3               	movf	plusw1,w,c
 29286  01B110  E10C               	bnz	u15251
 29287  01B112  0EF6               	movlw	-10
 29288  01B114  50E3               	movf	plusw1,w,c
 29289  01B116  E109               	bnz	u15251
 29290  01B118  0EF7               	movlw	-9
 29291  01B11A  50E3               	movf	plusw1,w,c
 29292  01B11C  E106               	bnz	u15251
 29293  01B11E  0EF8               	movlw	-8
 29294  01B120  50E3               	movf	plusw1,w,c
 29295  01B122  E103               	bnz	u15251
 29296  01B124  0EF9               	movlw	-7
 29297  01B126  50E3               	movf	plusw1,w,c
 29298  01B128  A4D8               	btfss	status,2,c
 29299  01B12A                     u15251:
 29300  01B12A  D6E3               	goto	l15954
 29301                           
 29302                           ;stkvar	_p @ sp[(-14)+12]
 29303  01B12C  0EFF               	movlw	-1
 29304  01B12E  BEE3               	btfsc	plusw1,7,c
 29305  01B130  D007               	goto	u15260
 29306  01B132  0EFF               	movlw	-1
 29307  01B134  50E3               	movf	plusw1,w,c
 29308  01B136  E103               	bnz	u15261
 29309  01B138  0EFE               	movlw	-2
 29310  01B13A  04E3               	decf	plusw1,w,c
 29311  01B13C  B0D8               	btfsc	status,0,c
 29312  01B13E                     u15261:
 29313  01B13E  D6D9               	goto	l15954
 29314  01B140                     u15260:
 29315                           
 29316                           ;stkvar	_w @ sp[(-14)+10]
 29317  01B140  0EFD               	movlw	-3
 29318  01B142  BEE3               	btfsc	plusw1,7,c
 29319  01B144  D009               	goto	u15280
 29320  01B146  0EFD               	movlw	-3
 29321  01B148  50E3               	movf	plusw1,w,c
 29322  01B14A  E104               	bnz	u15270
 29323  01B14C  0EFC               	movlw	-4
 29324  01B14E  04E3               	decf	plusw1,w,c
 29325  01B150  A0D8               	btfss	status,0,c
 29326  01B152  D002               	goto	u15280
 29327  01B154                     u15270:
 29328  01B154  B24E               	btfsc	_flags^0,1,c
 29329  01B156  D6CD               	goto	l15954
 29330  01B158                     u15280:
 29331                           
 29332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 29333                           ;stkvar	_w @ sp[(-14)+10]
 29334  01B158  0EFC               	movlw	-4
 29335  01B15A  006F FF8F FFE6     	movff	plusw1,postinc1
 29336  01B160  006F FF8F FFE6     	movff	plusw1,postinc1
 29337                           
 29338                           ;stkvar	_i @ sp[(-16)+8]
 29339  01B166  0E54               	movlw	low _dbuf
 29340  01B168  6E34               	movwf	(btemp+10)^0,c
 29341  01B16A  0E03               	movlw	high _dbuf
 29342  01B16C  6E35               	movwf	(btemp+11)^0,c
 29343  01B16E  0EF8               	movlw	-8
 29344  01B170  50E3               	movf	plusw1,w,c
 29345  01B172  2634               	addwf	(btemp+10)^0,f,c
 29346  01B174  0EF9               	movlw	-7
 29347  01B176  50E3               	movf	plusw1,w,c
 29348  01B178  2235               	addwfc	(btemp+11)^0,f,c
 29349  01B17A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29350  01B180  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29351                           
 29352                           ;stkvar	_fp @ sp[(-18)+-2]
 29353  01B186  0EEC               	movlw	-20
 29354  01B188  006F FF8F FFE6     	movff	plusw1,postinc1
 29355  01B18E  006F FF8F FFE6     	movff	plusw1,postinc1
 29356  01B194  EC5B  F0FE         	call	_pad	;wreg free
 29357                           
 29358                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 29359  01B198  0EE8               	movlw	232
 29360  01B19A  26E1               	addwf	fsr1l,f,c
 29361  01B19C  0EFF               	movlw	255
 29362  01B19E  22E2               	addwfc	fsr1h,f,c
 29363  01B1A0  0012               	return		;funcret
 29364  01B1A2                     __end_of_utoa:
 29365                           	opt callstack 0
 29366                           
 29367 ;; *************** function ___lomod *****************
 29368 ;; Defined at:
 29369 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 29370 ;; Parameters:    Size  Location     Type
 29371 ;;  dividend        8  [STACK] unsigned long long 
 29372 ;;  divisor         8  [STACK] unsigned long long 
 29373 ;; Auto vars:     Size  Location     Type
 29374 ;;  counter         1  [STACK] unsigned char 
 29375 ;; Return value:  Size  Location     Type
 29376 ;;                  8  [STACK] unsigned long long 
 29377 ;; Registers used:
 29378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29379 ;; Tracked objects:
 29380 ;;		On entry : 0/3
 29381 ;;		On exit  : 0/0
 29382 ;;		Unchanged: 0/0
 29383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29388 ;;Total ram usage:        0 bytes
 29389 ;; Hardware stack levels used:    1
 29390 ;; Hardware stack levels required when called:   15
 29391 ;; This function calls:
 29392 ;;		Nothing
 29393 ;; This function is called by:
 29394 ;;		_utoa
 29395 ;; This function uses a reentrant model
 29396 ;;
 29397                           
 29398                           	psect	text99
 29399  01F5D0                     __ptext99:
 29400                           	opt callstack 0
 29401  01F5D0                     ___lomod:
 29402                           	opt callstack 0
 29403                           
 29404                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29405  01F5D0  52E6               	movf	postinc1,f,c
 29406                           
 29407                           ;stkvar	_divisor @ sp[(-1)+-16]
 29408                           
 29409                           ;incstack = 0
 29410 ;; hardware stack exceeded
 29411  01F5D2  0EEF               	movlw	-17
 29412  01F5D4  50E3               	movf	plusw1,w,c
 29413  01F5D6  E116               	bnz	u9200
 29414  01F5D8  0EF0               	movlw	-16
 29415  01F5DA  50E3               	movf	plusw1,w,c
 29416  01F5DC  E113               	bnz	u9200
 29417  01F5DE  0EF1               	movlw	-15
 29418  01F5E0  50E3               	movf	plusw1,w,c
 29419  01F5E2  E110               	bnz	u9200
 29420  01F5E4  0EF2               	movlw	-14
 29421  01F5E6  50E3               	movf	plusw1,w,c
 29422  01F5E8  E10D               	bnz	u9200
 29423  01F5EA  0EF3               	movlw	-13
 29424  01F5EC  50E3               	movf	plusw1,w,c
 29425  01F5EE  E10A               	bnz	u9200
 29426  01F5F0  0EF4               	movlw	-12
 29427  01F5F2  50E3               	movf	plusw1,w,c
 29428  01F5F4  E107               	bnz	u9200
 29429  01F5F6  0EF5               	movlw	-11
 29430  01F5F8  50E3               	movf	plusw1,w,c
 29431  01F5FA  E104               	bnz	u9200
 29432  01F5FC  0EF6               	movlw	-10
 29433  01F5FE  50E3               	movf	plusw1,w,c
 29434  01F600  B4D8               	btfsc	status,2,c
 29435  01F602  D075               	goto	u9230
 29436  01F604                     u9200:
 29437                           
 29438                           ;stkvar	_counter @ sp[(-1)+0]
 29439  01F604  0EFF               	movlw	-1
 29440  01F606  6AE3               	clrf	plusw1,c
 29441  01F608  D012               	goto	L29
 29442  01F60A                     l10854:
 29443                           
 29444                           ;stkvar	_divisor @ sp[(-1)+-16]
 29445  01F60A  90D8               	bcf	status,0,c
 29446  01F60C  0EEF               	movlw	-17
 29447  01F60E  36E3               	rlcf	plusw1,f,c
 29448  01F610  0EF0               	movlw	-16
 29449  01F612  36E3               	rlcf	plusw1,f,c
 29450  01F614  0EF1               	movlw	-15
 29451  01F616  36E3               	rlcf	plusw1,f,c
 29452  01F618  0EF2               	movlw	-14
 29453  01F61A  36E3               	rlcf	plusw1,f,c
 29454  01F61C  0EF3               	movlw	-13
 29455  01F61E  36E3               	rlcf	plusw1,f,c
 29456  01F620  0EF4               	movlw	-12
 29457  01F622  36E3               	rlcf	plusw1,f,c
 29458  01F624  0EF5               	movlw	-11
 29459  01F626  36E3               	rlcf	plusw1,f,c
 29460  01F628  0EF6               	movlw	-10
 29461  01F62A  36E3               	rlcf	plusw1,f,c
 29462                           
 29463                           ;stkvar	_counter @ sp[(-1)+0]
 29464  01F62C  0EFF               	movlw	-1
 29465  01F62E                     L29:
 29466  01F62E  2AE3               	incf	plusw1,f,c
 29467                           
 29468                           ;stkvar	_divisor @ sp[(-1)+-16]
 29469  01F630  0EF6               	movlw	-10
 29470  01F632  AEE3               	btfss	plusw1,7,c
 29471  01F634  D7EA               	goto	l10854
 29472  01F636                     u9210:
 29473                           
 29474                           ;stkvar	_divisor @ sp[(-1)+-16]
 29475                           ;stkvar	_dividend @ sp[(-1)+-8]
 29476  01F636  50E1               	movf	fsr1l,w,c
 29477  01F638  0FF7               	addlw	-9
 29478  01F63A  6ED9               	movwf	fsr2l,c
 29479  01F63C  50E2               	movf	fsr1h,w,c
 29480  01F63E  6EDA               	movwf	fsr2h,c
 29481  01F640  0EFF               	movlw	255
 29482  01F642  22DA               	addwfc	fsr2h,f,c
 29483  01F644  0EEF               	movlw	-17
 29484  01F646  50E3               	movf	plusw1,w,c
 29485  01F648  5CDE               	subwf	postinc2,w,c
 29486  01F64A  0EF0               	movlw	-16
 29487  01F64C  50E3               	movf	plusw1,w,c
 29488  01F64E  58DE               	subwfb	postinc2,w,c
 29489  01F650  0EF1               	movlw	-15
 29490  01F652  50E3               	movf	plusw1,w,c
 29491  01F654  58DE               	subwfb	postinc2,w,c
 29492  01F656  0EF2               	movlw	-14
 29493  01F658  50E3               	movf	plusw1,w,c
 29494  01F65A  58DE               	subwfb	postinc2,w,c
 29495  01F65C  0EF3               	movlw	-13
 29496  01F65E  50E3               	movf	plusw1,w,c
 29497  01F660  58DE               	subwfb	postinc2,w,c
 29498  01F662  0EF4               	movlw	-12
 29499  01F664  50E3               	movf	plusw1,w,c
 29500  01F666  58DE               	subwfb	postinc2,w,c
 29501  01F668  0EF5               	movlw	-11
 29502  01F66A  50E3               	movf	plusw1,w,c
 29503  01F66C  58DE               	subwfb	postinc2,w,c
 29504  01F66E  0EF6               	movlw	-10
 29505  01F670  50E3               	movf	plusw1,w,c
 29506  01F672  58DE               	subwfb	postinc2,w,c
 29507  01F674  A0D8               	btfss	status,0,c
 29508  01F676  D01F               	goto	l10862
 29509                           
 29510                           ;stkvar	_divisor @ sp[(-1)+-16]
 29511                           ;stkvar	_dividend @ sp[(-1)+-8]
 29512  01F678  50E1               	movf	fsr1l,w,c
 29513  01F67A  0FF7               	addlw	-9
 29514  01F67C  6ED9               	movwf	fsr2l,c
 29515  01F67E  50E2               	movf	fsr1h,w,c
 29516  01F680  6EDA               	movwf	fsr2h,c
 29517  01F682  0EFF               	movlw	255
 29518  01F684  22DA               	addwfc	fsr2h,f,c
 29519  01F686  0EEF               	movlw	-17
 29520  01F688  50E3               	movf	plusw1,w,c
 29521  01F68A  5EDE               	subwf	postinc2,f,c
 29522  01F68C  0EF0               	movlw	-16
 29523  01F68E  50E3               	movf	plusw1,w,c
 29524  01F690  5ADE               	subwfb	postinc2,f,c
 29525  01F692  0EF1               	movlw	-15
 29526  01F694  50E3               	movf	plusw1,w,c
 29527  01F696  5ADE               	subwfb	postinc2,f,c
 29528  01F698  0EF2               	movlw	-14
 29529  01F69A  50E3               	movf	plusw1,w,c
 29530  01F69C  5ADE               	subwfb	postinc2,f,c
 29531  01F69E  0EF3               	movlw	-13
 29532  01F6A0  50E3               	movf	plusw1,w,c
 29533  01F6A2  5ADE               	subwfb	postinc2,f,c
 29534  01F6A4  0EF4               	movlw	-12
 29535  01F6A6  50E3               	movf	plusw1,w,c
 29536  01F6A8  5ADE               	subwfb	postinc2,f,c
 29537  01F6AA  0EF5               	movlw	-11
 29538  01F6AC  50E3               	movf	plusw1,w,c
 29539  01F6AE  5ADE               	subwfb	postinc2,f,c
 29540  01F6B0  0EF6               	movlw	-10
 29541  01F6B2  50E3               	movf	plusw1,w,c
 29542  01F6B4  5ADE               	subwfb	postinc2,f,c
 29543  01F6B6                     l10862:
 29544                           
 29545                           ;stkvar	_divisor @ sp[(-1)+-16]
 29546  01F6B6  90D8               	bcf	status,0,c
 29547  01F6B8  0EF6               	movlw	-10
 29548  01F6BA  32E3               	rrcf	plusw1,f,c
 29549  01F6BC  0EF5               	movlw	-11
 29550  01F6BE  32E3               	rrcf	plusw1,f,c
 29551  01F6C0  0EF4               	movlw	-12
 29552  01F6C2  32E3               	rrcf	plusw1,f,c
 29553  01F6C4  0EF3               	movlw	-13
 29554  01F6C6  32E3               	rrcf	plusw1,f,c
 29555  01F6C8  0EF2               	movlw	-14
 29556  01F6CA  32E3               	rrcf	plusw1,f,c
 29557  01F6CC  0EF1               	movlw	-15
 29558  01F6CE  32E3               	rrcf	plusw1,f,c
 29559  01F6D0  0EF0               	movlw	-16
 29560  01F6D2  32E3               	rrcf	plusw1,f,c
 29561  01F6D4  0EEF               	movlw	-17
 29562  01F6D6  32E3               	rrcf	plusw1,f,c
 29563                           
 29564                           ;stkvar	_counter @ sp[(-1)+0]
 29565  01F6D8  0EFF               	movlw	-1
 29566  01F6DA  50E3               	movf	plusw1,w,c
 29567  01F6DC  6E2A               	movwf	btemp^0,c
 29568  01F6DE  0E01               	movlw	1
 29569  01F6E0  5E2A               	subwf	btemp^0,f,c
 29570  01F6E2  0EFF               	movlw	-1
 29571  01F6E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29572  01F6EA  A4D8               	btfss	status,2,c
 29573  01F6EC  D7A4               	goto	u9210
 29574  01F6EE                     u9230:
 29575                           
 29576                           ;stkvar	_dividend @ sp[(-1)+-8]
 29577  01F6EE  0EF7               	movlw	247
 29578  01F6F0  24E1               	addwf	fsr1l,w,c
 29579  01F6F2  6ED9               	movwf	fsr2l,c
 29580  01F6F4  0EFF               	movlw	255
 29581  01F6F6  20E2               	addwfc	fsr1h,w,c
 29582  01F6F8  6EDA               	movwf	fsr2h,c
 29583                           
 29584                           ;stkvar	?___lomod @ sp[(-1)+-8]
 29585  01F6FA  0E08               	movlw	8
 29586  01F6FC  6E2A               	movwf	btemp^0,c
 29587  01F6FE  0EF7               	movlw	-9
 29588  01F700                     us924999:
 29589  01F700  006F FF7B FFE3     	movff	postinc2,plusw1
 29590  01F706  28E8               	incf	wreg,w,c
 29591  01F708  2E2A               	decfsz	btemp^0,f,c
 29592  01F70A  D7FA               	bra	us924999
 29593                           
 29594                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29595  01F70C  52E5               	movf	postdec1,f,c
 29596  01F70E  0012               	return		;funcret
 29597  01F710                     __end_of___lomod:
 29598                           	opt callstack 0
 29599                           
 29600 ;; *************** function ___lodiv *****************
 29601 ;; Defined at:
 29602 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 29603 ;; Parameters:    Size  Location     Type
 29604 ;;  dividend        8  [STACK] unsigned long long 
 29605 ;;  divisor         8  [STACK] unsigned long long 
 29606 ;; Auto vars:     Size  Location     Type
 29607 ;;  quotient        8  [STACK] unsigned long long 
 29608 ;;  counter         1  [STACK] unsigned char 
 29609 ;; Return value:  Size  Location     Type
 29610 ;;                  8  [STACK] unsigned long long 
 29611 ;; Registers used:
 29612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29613 ;; Tracked objects:
 29614 ;;		On entry : 0/3
 29615 ;;		On exit  : 0/0
 29616 ;;		Unchanged: 0/0
 29617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29622 ;;Total ram usage:        0 bytes
 29623 ;; Hardware stack levels used:    1
 29624 ;; Hardware stack levels required when called:   15
 29625 ;; This function calls:
 29626 ;;		Nothing
 29627 ;; This function is called by:
 29628 ;;		_utoa
 29629 ;; This function uses a reentrant model
 29630 ;;
 29631                           
 29632                           	psect	text100
 29633  01E6A0                     __ptext100:
 29634                           	opt callstack 0
 29635  01E6A0                     ___lodiv:
 29636                           	opt callstack 0
 29637                           
 29638                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29639  01E6A0  0E09               	movlw	9
 29640  01E6A2  26E1               	addwf	fsr1l,f,c
 29641  01E6A4  0E00               	movlw	0
 29642  01E6A6  22E2               	addwfc	fsr1h,f,c
 29643                           
 29644                           ;stkvar	_quotient @ sp[(-9)+0]
 29645                           
 29646                           ;incstack = 0
 29647 ;; hardware stack exceeded
 29648  01E6A8  0E07               	movlw	7
 29649  01E6AA  6E2A               	movwf	btemp^0,c
 29650  01E6AC  0EF7               	movlw	-9
 29651  01E6AE                     u9141:
 29652  01E6AE  6AE3               	clrf	plusw1,c
 29653  01E6B0  2AE8               	incf	wreg,f,c
 29654  01E6B2  062A               	decf	btemp^0,f,c
 29655  01E6B4  E2FC               	bc	u9141
 29656                           
 29657                           ;stkvar	_divisor @ sp[(-9)+-16]
 29658  01E6B6  0EE7               	movlw	-25
 29659  01E6B8  50E3               	movf	plusw1,w,c
 29660  01E6BA  E116               	bnz	u9150
 29661  01E6BC  0EE8               	movlw	-24
 29662  01E6BE  50E3               	movf	plusw1,w,c
 29663  01E6C0  E113               	bnz	u9150
 29664  01E6C2  0EE9               	movlw	-23
 29665  01E6C4  50E3               	movf	plusw1,w,c
 29666  01E6C6  E110               	bnz	u9150
 29667  01E6C8  0EEA               	movlw	-22
 29668  01E6CA  50E3               	movf	plusw1,w,c
 29669  01E6CC  E10D               	bnz	u9150
 29670  01E6CE  0EEB               	movlw	-21
 29671  01E6D0  50E3               	movf	plusw1,w,c
 29672  01E6D2  E10A               	bnz	u9150
 29673  01E6D4  0EEC               	movlw	-20
 29674  01E6D6  50E3               	movf	plusw1,w,c
 29675  01E6D8  E107               	bnz	u9150
 29676  01E6DA  0EED               	movlw	-19
 29677  01E6DC  50E3               	movf	plusw1,w,c
 29678  01E6DE  E104               	bnz	u9150
 29679  01E6E0  0EEE               	movlw	-18
 29680  01E6E2  50E3               	movf	plusw1,w,c
 29681  01E6E4  B4D8               	btfsc	status,2,c
 29682  01E6E6  D088               	goto	u9180
 29683  01E6E8                     u9150:
 29684                           
 29685                           ;stkvar	_counter @ sp[(-9)+8]
 29686  01E6E8  0EFF               	movlw	-1
 29687  01E6EA  6AE3               	clrf	plusw1,c
 29688  01E6EC  D012               	goto	L30
 29689  01E6EE                     l10830:
 29690                           
 29691                           ;stkvar	_divisor @ sp[(-9)+-16]
 29692  01E6EE  90D8               	bcf	status,0,c
 29693  01E6F0  0EE7               	movlw	-25
 29694  01E6F2  36E3               	rlcf	plusw1,f,c
 29695  01E6F4  0EE8               	movlw	-24
 29696  01E6F6  36E3               	rlcf	plusw1,f,c
 29697  01E6F8  0EE9               	movlw	-23
 29698  01E6FA  36E3               	rlcf	plusw1,f,c
 29699  01E6FC  0EEA               	movlw	-22
 29700  01E6FE  36E3               	rlcf	plusw1,f,c
 29701  01E700  0EEB               	movlw	-21
 29702  01E702  36E3               	rlcf	plusw1,f,c
 29703  01E704  0EEC               	movlw	-20
 29704  01E706  36E3               	rlcf	plusw1,f,c
 29705  01E708  0EED               	movlw	-19
 29706  01E70A  36E3               	rlcf	plusw1,f,c
 29707  01E70C  0EEE               	movlw	-18
 29708  01E70E  36E3               	rlcf	plusw1,f,c
 29709                           
 29710                           ;stkvar	_counter @ sp[(-9)+8]
 29711  01E710  0EFF               	movlw	-1
 29712  01E712                     L30:
 29713  01E712  2AE3               	incf	plusw1,f,c
 29714                           
 29715                           ;stkvar	_divisor @ sp[(-9)+-16]
 29716  01E714  0EEE               	movlw	-18
 29717  01E716  AEE3               	btfss	plusw1,7,c
 29718  01E718  D7EA               	goto	l10830
 29719  01E71A                     u9160:
 29720                           
 29721                           ;stkvar	_quotient @ sp[(-9)+0]
 29722  01E71A  90D8               	bcf	status,0,c
 29723  01E71C  0EF7               	movlw	-9
 29724  01E71E  36E3               	rlcf	plusw1,f,c
 29725  01E720  0EF8               	movlw	-8
 29726  01E722  36E3               	rlcf	plusw1,f,c
 29727  01E724  0EF9               	movlw	-7
 29728  01E726  36E3               	rlcf	plusw1,f,c
 29729  01E728  0EFA               	movlw	-6
 29730  01E72A  36E3               	rlcf	plusw1,f,c
 29731  01E72C  0EFB               	movlw	-5
 29732  01E72E  36E3               	rlcf	plusw1,f,c
 29733  01E730  0EFC               	movlw	-4
 29734  01E732  36E3               	rlcf	plusw1,f,c
 29735  01E734  0EFD               	movlw	-3
 29736  01E736  36E3               	rlcf	plusw1,f,c
 29737  01E738  0EFE               	movlw	-2
 29738  01E73A  36E3               	rlcf	plusw1,f,c
 29739                           
 29740                           ;stkvar	_divisor @ sp[(-9)+-16]
 29741                           ;stkvar	_dividend @ sp[(-9)+-8]
 29742  01E73C  50E1               	movf	fsr1l,w,c
 29743  01E73E  0FEF               	addlw	-17
 29744  01E740  6ED9               	movwf	fsr2l,c
 29745  01E742  50E2               	movf	fsr1h,w,c
 29746  01E744  6EDA               	movwf	fsr2h,c
 29747  01E746  0EFF               	movlw	255
 29748  01E748  22DA               	addwfc	fsr2h,f,c
 29749  01E74A  0EE7               	movlw	-25
 29750  01E74C  50E3               	movf	plusw1,w,c
 29751  01E74E  5CDE               	subwf	postinc2,w,c
 29752  01E750  0EE8               	movlw	-24
 29753  01E752  50E3               	movf	plusw1,w,c
 29754  01E754  58DE               	subwfb	postinc2,w,c
 29755  01E756  0EE9               	movlw	-23
 29756  01E758  50E3               	movf	plusw1,w,c
 29757  01E75A  58DE               	subwfb	postinc2,w,c
 29758  01E75C  0EEA               	movlw	-22
 29759  01E75E  50E3               	movf	plusw1,w,c
 29760  01E760  58DE               	subwfb	postinc2,w,c
 29761  01E762  0EEB               	movlw	-21
 29762  01E764  50E3               	movf	plusw1,w,c
 29763  01E766  58DE               	subwfb	postinc2,w,c
 29764  01E768  0EEC               	movlw	-20
 29765  01E76A  50E3               	movf	plusw1,w,c
 29766  01E76C  58DE               	subwfb	postinc2,w,c
 29767  01E76E  0EED               	movlw	-19
 29768  01E770  50E3               	movf	plusw1,w,c
 29769  01E772  58DE               	subwfb	postinc2,w,c
 29770  01E774  0EEE               	movlw	-18
 29771  01E776  50E3               	movf	plusw1,w,c
 29772  01E778  58DE               	subwfb	postinc2,w,c
 29773  01E77A  A0D8               	btfss	status,0,c
 29774  01E77C  D021               	goto	l10842
 29775                           
 29776                           ;stkvar	_divisor @ sp[(-9)+-16]
 29777                           ;stkvar	_dividend @ sp[(-9)+-8]
 29778  01E77E  50E1               	movf	fsr1l,w,c
 29779  01E780  0FEF               	addlw	-17
 29780  01E782  6ED9               	movwf	fsr2l,c
 29781  01E784  50E2               	movf	fsr1h,w,c
 29782  01E786  6EDA               	movwf	fsr2h,c
 29783  01E788  0EFF               	movlw	255
 29784  01E78A  22DA               	addwfc	fsr2h,f,c
 29785  01E78C  0EE7               	movlw	-25
 29786  01E78E  50E3               	movf	plusw1,w,c
 29787  01E790  5EDE               	subwf	postinc2,f,c
 29788  01E792  0EE8               	movlw	-24
 29789  01E794  50E3               	movf	plusw1,w,c
 29790  01E796  5ADE               	subwfb	postinc2,f,c
 29791  01E798  0EE9               	movlw	-23
 29792  01E79A  50E3               	movf	plusw1,w,c
 29793  01E79C  5ADE               	subwfb	postinc2,f,c
 29794  01E79E  0EEA               	movlw	-22
 29795  01E7A0  50E3               	movf	plusw1,w,c
 29796  01E7A2  5ADE               	subwfb	postinc2,f,c
 29797  01E7A4  0EEB               	movlw	-21
 29798  01E7A6  50E3               	movf	plusw1,w,c
 29799  01E7A8  5ADE               	subwfb	postinc2,f,c
 29800  01E7AA  0EEC               	movlw	-20
 29801  01E7AC  50E3               	movf	plusw1,w,c
 29802  01E7AE  5ADE               	subwfb	postinc2,f,c
 29803  01E7B0  0EED               	movlw	-19
 29804  01E7B2  50E3               	movf	plusw1,w,c
 29805  01E7B4  5ADE               	subwfb	postinc2,f,c
 29806  01E7B6  0EEE               	movlw	-18
 29807  01E7B8  50E3               	movf	plusw1,w,c
 29808  01E7BA  5ADE               	subwfb	postinc2,f,c
 29809                           
 29810                           ;stkvar	_quotient @ sp[(-9)+0]
 29811  01E7BC  0EF7               	movlw	-9
 29812  01E7BE  80E3               	bsf	plusw1,0,c
 29813  01E7C0                     l10842:
 29814                           
 29815                           ;stkvar	_divisor @ sp[(-9)+-16]
 29816  01E7C0  90D8               	bcf	status,0,c
 29817  01E7C2  0EEE               	movlw	-18
 29818  01E7C4  32E3               	rrcf	plusw1,f,c
 29819  01E7C6  0EED               	movlw	-19
 29820  01E7C8  32E3               	rrcf	plusw1,f,c
 29821  01E7CA  0EEC               	movlw	-20
 29822  01E7CC  32E3               	rrcf	plusw1,f,c
 29823  01E7CE  0EEB               	movlw	-21
 29824  01E7D0  32E3               	rrcf	plusw1,f,c
 29825  01E7D2  0EEA               	movlw	-22
 29826  01E7D4  32E3               	rrcf	plusw1,f,c
 29827  01E7D6  0EE9               	movlw	-23
 29828  01E7D8  32E3               	rrcf	plusw1,f,c
 29829  01E7DA  0EE8               	movlw	-24
 29830  01E7DC  32E3               	rrcf	plusw1,f,c
 29831  01E7DE  0EE7               	movlw	-25
 29832  01E7E0  32E3               	rrcf	plusw1,f,c
 29833                           
 29834                           ;stkvar	_counter @ sp[(-9)+8]
 29835  01E7E2  0EFF               	movlw	-1
 29836  01E7E4  50E3               	movf	plusw1,w,c
 29837  01E7E6  6E2A               	movwf	btemp^0,c
 29838  01E7E8  0E01               	movlw	1
 29839  01E7EA  5E2A               	subwf	btemp^0,f,c
 29840  01E7EC  0EFF               	movlw	-1
 29841  01E7EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29842  01E7F4  A4D8               	btfss	status,2,c
 29843  01E7F6  D791               	goto	u9160
 29844  01E7F8                     u9180:
 29845                           
 29846                           ;stkvar	_quotient @ sp[(-9)+0]
 29847  01E7F8  0EF7               	movlw	247
 29848  01E7FA  24E1               	addwf	fsr1l,w,c
 29849  01E7FC  6ED9               	movwf	fsr2l,c
 29850  01E7FE  0EFF               	movlw	255
 29851  01E800  20E2               	addwfc	fsr1h,w,c
 29852  01E802  6EDA               	movwf	fsr2h,c
 29853                           
 29854                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 29855  01E804  0E08               	movlw	8
 29856  01E806  6E2A               	movwf	btemp^0,c
 29857  01E808  0EEF               	movlw	-17
 29858  01E80A                     us919999:
 29859  01E80A  006F FF7B FFE3     	movff	postinc2,plusw1
 29860  01E810  28E8               	incf	wreg,w,c
 29861  01E812  2E2A               	decfsz	btemp^0,f,c
 29862  01E814  D7FA               	bra	us919999
 29863                           
 29864                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29865  01E816  0EF7               	movlw	247
 29866  01E818  26E1               	addwf	fsr1l,f,c
 29867  01E81A  0EFF               	movlw	255
 29868  01E81C  22E2               	addwfc	fsr1h,f,c
 29869  01E81E  0012               	return		;funcret
 29870  01E820                     __end_of___lodiv:
 29871                           	opt callstack 0
 29872                           
 29873 ;; *************** function _strncmp *****************
 29874 ;; Defined at:
 29875 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 29876 ;; Parameters:    Size  Location     Type
 29877 ;;  _l              2  [STACK] PTR const unsigned char 
 29878 ;;		 -> ct(3), STR_95(127), STR_93(3), STR_92(3), 
 29879 ;;		 -> STR_91(21), STR_90(21), STR_89(21), STR_88(21), 
 29880 ;;		 -> STR_87(21), STR_86(21), STR_85(26), STR_84(15), 
 29881 ;;		 -> STR_83(15), STR_82(15), STR_81(15), STR_80(10), 
 29882 ;;		 -> STR_79(10), STR_78(19), STR_77(19), STR_74(3), 
 29883 ;;		 -> STR_73(14), STR_72(28), STR_71(28), STR_70(28), 
 29884 ;;		 -> STR_69(22), STR_68(22), STR_67(22), STR_66(22), 
 29885 ;;		 -> STR_65(22), STR_64(22), STR_63(22), STR_62(22), 
 29886 ;;		 -> STR_61(22), STR_60(21), STR_59(22), STR_58(22), 
 29887 ;;		 -> STR_57(22), STR_56(22), STR_55(22), STR_54(22), 
 29888 ;;		 -> STR_53(24), STR_52(24), STR_51(24), STR_50(30), 
 29889 ;;		 -> STR_49(24), STR_48(24), STR_47(23), STR_46(23), 
 29890 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(23), 
 29891 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 29892 ;;		 -> STR_37(23), STR_36(23), STR_35(18), STR_34(17), 
 29893 ;;		 -> STR_33(17), STR_32(22), STR_31(22), STR_30(22), 
 29894 ;;		 -> STR_29(14), STR_28(14), STR_27(27), STR_26(27), 
 29895 ;;		 -> STR_25(23), STR_24(22), STR_23(22), STR_22(22), 
 29896 ;;		 -> STR_21(22), STR_20(23), STR_19(23), STR_18(23), 
 29897 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 29898 ;;		 -> STR_13(21), STR_12(21), STR_11(21), STR_10(21), 
 29899 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29900 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29901 ;;  _r              2  [STACK] PTR const unsigned char 
 29902 ;;		 -> STR_129(3), STR_125(3), STR_120(3), STR_115(3), 
 29903 ;;		 -> STR_110(3), STR_106(3), 
 29904 ;;  n               2  [STACK] unsigned int 
 29905 ;; Auto vars:     Size  Location     Type
 29906 ;;  r               2  [STACK] PTR const unsigned char 
 29907 ;;		 -> STR_129(3), STR_125(3), STR_120(3), STR_115(3), 
 29908 ;;		 -> STR_110(3), STR_106(3), 
 29909 ;;  l               2  [STACK] PTR const unsigned char 
 29910 ;;		 -> ct(3), STR_95(127), STR_93(3), STR_92(3), 
 29911 ;;		 -> STR_91(21), STR_90(21), STR_89(21), STR_88(21), 
 29912 ;;		 -> STR_87(21), STR_86(21), STR_85(26), STR_84(15), 
 29913 ;;		 -> STR_83(15), STR_82(15), STR_81(15), STR_80(10), 
 29914 ;;		 -> STR_79(10), STR_78(19), STR_77(19), STR_74(3), 
 29915 ;;		 -> STR_73(14), STR_72(28), STR_71(28), STR_70(28), 
 29916 ;;		 -> STR_69(22), STR_68(22), STR_67(22), STR_66(22), 
 29917 ;;		 -> STR_65(22), STR_64(22), STR_63(22), STR_62(22), 
 29918 ;;		 -> STR_61(22), STR_60(21), STR_59(22), STR_58(22), 
 29919 ;;		 -> STR_57(22), STR_56(22), STR_55(22), STR_54(22), 
 29920 ;;		 -> STR_53(24), STR_52(24), STR_51(24), STR_50(30), 
 29921 ;;		 -> STR_49(24), STR_48(24), STR_47(23), STR_46(23), 
 29922 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(23), 
 29923 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 29924 ;;		 -> STR_37(23), STR_36(23), STR_35(18), STR_34(17), 
 29925 ;;		 -> STR_33(17), STR_32(22), STR_31(22), STR_30(22), 
 29926 ;;		 -> STR_29(14), STR_28(14), STR_27(27), STR_26(27), 
 29927 ;;		 -> STR_25(23), STR_24(22), STR_23(22), STR_22(22), 
 29928 ;;		 -> STR_21(22), STR_20(23), STR_19(23), STR_18(23), 
 29929 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 29930 ;;		 -> STR_13(21), STR_12(21), STR_11(21), STR_10(21), 
 29931 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29932 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29933 ;; Return value:  Size  Location     Type
 29934 ;;                  2  [STACK] int 
 29935 ;; Registers used:
 29936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 29937 ;; Tracked objects:
 29938 ;;		On entry : 0/0
 29939 ;;		On exit  : 0/0
 29940 ;;		Unchanged: 0/0
 29941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29946 ;;Total ram usage:        0 bytes
 29947 ;; Hardware stack levels used:    1
 29948 ;; Hardware stack levels required when called:   15
 29949 ;; This function calls:
 29950 ;;		Nothing
 29951 ;; This function is called by:
 29952 ;;		_vfpfcnvrt
 29953 ;; This function uses a reentrant model
 29954 ;;
 29955                           
 29956                           	psect	text101
 29957  01D2E8                     __ptext101:
 29958                           	opt callstack 0
 29959  01D2E8                     _strncmp:
 29960                           	opt callstack 0
 29961                           
 29962                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29963  01D2E8  52E6               	movf	postinc1,f,c
 29964  01D2EA  52E6               	movf	postinc1,f,c
 29965  01D2EC  52E6               	movf	postinc1,f,c
 29966  01D2EE  52E6               	movf	postinc1,f,c
 29967                           
 29968                           ;stkvar	__l @ sp[(-4)+-2]
 29969                           
 29970                           ;incstack = 0
 29971 ;; hardware stack exceeded
 29972  01D2F0  0EFA               	movlw	-6
 29973  01D2F2  006F FF8C  F034    	movff	plusw1,btemp+10
 29974  01D2F8  0EFB               	movlw	-5
 29975  01D2FA  006F FF8C  F035    	movff	plusw1,btemp+11
 29976                           
 29977                           ;stkvar	_l @ sp[(-4)+2]
 29978  01D300  0EFF               	movlw	-1
 29979  01D302  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29980  01D308  0EFE               	movlw	-2
 29981  01D30A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29982                           
 29983                           ;stkvar	__r @ sp[(-4)+-4]
 29984  01D310  0EF8               	movlw	-8
 29985  01D312  006F FF8C  F034    	movff	plusw1,btemp+10
 29986  01D318  0EF9               	movlw	-7
 29987  01D31A  006F FF8C  F035    	movff	plusw1,btemp+11
 29988                           
 29989                           ;stkvar	_r @ sp[(-4)+0]
 29990  01D320  0EFD               	movlw	-3
 29991  01D322  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29992  01D328  0EFC               	movlw	-4
 29993  01D32A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29994                           
 29995                           ;stkvar	_n @ sp[(-4)+-6]
 29996  01D330  0EF6               	movlw	-10
 29997  01D332  006F FF8C  F02A    	movff	plusw1,btemp
 29998  01D338  0E01               	movlw	1
 29999  01D33A  5E2A               	subwf	btemp^0,f,c
 30000  01D33C  0EF6               	movlw	-10
 30001  01D33E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30002  01D344  0EF7               	movlw	-9
 30003  01D346  006F FF8C  F02A    	movff	plusw1,btemp
 30004  01D34C  0E00               	movlw	0
 30005  01D34E  5A2A               	subwfb	btemp^0,f,c
 30006  01D350  0EF7               	movlw	-9
 30007  01D352  0060  F0AB  FFE3   	movff	btemp,plusw1
 30008  01D358  0EF6               	movlw	-10
 30009  01D35A  28E3               	incf	plusw1,w,c
 30010  01D35C  E13F               	bnz	l11530
 30011  01D35E  0EF7               	movlw	-9
 30012  01D360  28E3               	incf	plusw1,w,c
 30013  01D362  A4D8               	btfss	status,2,c
 30014  01D364  D03B               	goto	l11530
 30015  01D366  0E00               	movlw	0
 30016  01D368  6E2A               	movwf	btemp^0,c
 30017  01D36A  0E00               	movlw	0
 30018  01D36C  6E2B               	movwf	(btemp+1)^0,c
 30019  01D36E  D0C7               	goto	l3818
 30020  01D370                     l11528:
 30021                           
 30022                           ;stkvar	_l @ sp[(-4)+2]
 30023  01D370  0EFE               	movlw	-2
 30024  01D372  50E3               	movf	plusw1,w,c
 30025  01D374  0F01               	addlw	1
 30026  01D376  6E2A               	movwf	btemp^0,c
 30027  01D378  0EFE               	movlw	-2
 30028  01D37A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30029  01D380  6A2A               	clrf	btemp^0,c
 30030  01D382  0EFF               	movlw	-1
 30031  01D384  50E3               	movf	plusw1,w,c
 30032  01D386  202A               	addwfc	btemp^0,w,c
 30033  01D388  6E2A               	movwf	btemp^0,c
 30034  01D38A  0EFF               	movlw	-1
 30035  01D38C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30036                           
 30037                           ;stkvar	_r @ sp[(-4)+0]
 30038  01D392  0EFC               	movlw	-4
 30039  01D394  50E3               	movf	plusw1,w,c
 30040  01D396  0F01               	addlw	1
 30041  01D398  6E2A               	movwf	btemp^0,c
 30042  01D39A  0EFC               	movlw	-4
 30043  01D39C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30044  01D3A2  6A2A               	clrf	btemp^0,c
 30045  01D3A4  0EFD               	movlw	-3
 30046  01D3A6  50E3               	movf	plusw1,w,c
 30047  01D3A8  202A               	addwfc	btemp^0,w,c
 30048  01D3AA  6E2A               	movwf	btemp^0,c
 30049  01D3AC  0EFD               	movlw	-3
 30050  01D3AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30051                           
 30052                           ;stkvar	_n @ sp[(-4)+-6]
 30053  01D3B4  0EF6               	movlw	-10
 30054  01D3B6  006F FF8C  F02A    	movff	plusw1,btemp
 30055  01D3BC  0E01               	movlw	1
 30056  01D3BE  5E2A               	subwf	btemp^0,f,c
 30057  01D3C0  0EF6               	movlw	-10
 30058  01D3C2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30059  01D3C8  0EF7               	movlw	-9
 30060  01D3CA  006F FF8C  F02A    	movff	plusw1,btemp
 30061  01D3D0  0E00               	movlw	0
 30062  01D3D2  5A2A               	subwfb	btemp^0,f,c
 30063  01D3D4  0EF7               	movlw	-9
 30064  01D3D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30065  01D3DC                     l11530:
 30066                           
 30067                           ;stkvar	_l @ sp[(-4)+2]
 30068  01D3DC  0EFE               	movlw	-2
 30069  01D3DE  006F FF8F FFF6     	movff	plusw1,tblptrl
 30070  01D3E4  0EFF               	movlw	-1
 30071  01D3E6  006F FF8F FFF7     	movff	plusw1,tblptrh
 30072  01D3EC  0E00               	movlw	low (__mediumconst shr (0+16))
 30073  01D3EE  6EF8               	movwf	tblptru,c
 30074  01D3F0  0E1F               	movlw	(high __ramtop+-1)
 30075  01D3F2  64F7               	cpfsgt	tblptrh,c
 30076  01D3F4  D003               	bra	u10477
 30077  01D3F6  0008               	tblrd		*
 30078  01D3F8  50F5               	movf	tablat,w,c
 30079  01D3FA  D007               	bra	u10470
 30080  01D3FC                     u10477:
 30081  01D3FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30082  01D402  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30083  01D408  50EF               	movf	indf0,w,c
 30084  01D40A                     u10470:
 30085  01D40A  0900               	iorlw	0
 30086  01D40C  B4D8               	btfsc	status,2,c
 30087  01D40E  D04A               	goto	u10510
 30088                           
 30089                           ;stkvar	_r @ sp[(-4)+0]
 30090  01D410  50E1               	movf	fsr1l,w,c
 30091  01D412  0FFC               	addlw	-4
 30092  01D414  6ED9               	movwf	fsr2l,c
 30093  01D416  50E2               	movf	fsr1h,w,c
 30094  01D418  6EDA               	movwf	fsr2h,c
 30095  01D41A  0EFF               	movlw	255
 30096  01D41C  22DA               	addwfc	fsr2h,f,c
 30097  01D41E  006F FF7B FFF6     	movff	postinc2,tblptrl
 30098  01D424  006F FF77 FFF7     	movff	postdec2,tblptrh
 30099  01D42A                     	if	0	;tblptru may be non-zero
 30100  01D42A                     	endif
 30101  01D42A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30102  01D42A  0E00               	movlw	low (__mediumconst shr (0+16))
 30103  01D42C  6EF8               	movwf	tblptru,c
 30104  01D42E                     	endif
 30105  01D42E  0008               	tblrd		*
 30106  01D430  50F5               	movf	tablat,w,c
 30107  01D432  0900               	iorlw	0
 30108  01D434  B4D8               	btfsc	status,2,c
 30109  01D436  D036               	goto	u10510
 30110                           
 30111                           ;stkvar	_n @ sp[(-4)+-6]
 30112  01D438  0EF6               	movlw	-10
 30113  01D43A  006F FF8C  F02A    	movff	plusw1,btemp
 30114  01D440  0EF7               	movlw	-9
 30115  01D442  50E3               	movf	plusw1,w,c
 30116  01D444  102A               	iorwf	btemp^0,w,c
 30117  01D446  B4D8               	btfsc	status,2,c
 30118  01D448  D02D               	goto	u10510
 30119                           
 30120                           ;stkvar	_r @ sp[(-4)+0]
 30121  01D44A  50E1               	movf	fsr1l,w,c
 30122  01D44C  0FFC               	addlw	-4
 30123  01D44E  6ED9               	movwf	fsr2l,c
 30124  01D450  50E2               	movf	fsr1h,w,c
 30125  01D452  6EDA               	movwf	fsr2h,c
 30126  01D454  0EFF               	movlw	255
 30127  01D456  22DA               	addwfc	fsr2h,f,c
 30128  01D458  006F FF7B FFF6     	movff	postinc2,tblptrl
 30129  01D45E  006F FF77 FFF7     	movff	postdec2,tblptrh
 30130  01D464                     	if	0	;tblptru may be non-zero
 30131  01D464                     	endif
 30132  01D464                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30133  01D464  0E00               	movlw	low (__mediumconst shr (0+16))
 30134  01D466  6EF8               	movwf	tblptru,c
 30135  01D468                     	endif
 30136  01D468  0008               	tblrd		*
 30137  01D46A  006F FFD4  F035    	movff	tablat,btemp+11
 30138                           
 30139                           ;stkvar	_l @ sp[(-4)+2]
 30140  01D470  0EFE               	movlw	-2
 30141  01D472  006F FF8F FFF6     	movff	plusw1,tblptrl
 30142  01D478  0EFF               	movlw	-1
 30143  01D47A  006F FF8F FFF7     	movff	plusw1,tblptrh
 30144  01D480  0E00               	movlw	low (__mediumconst shr (0+16))
 30145  01D482  6EF8               	movwf	tblptru,c
 30146  01D484  0E1F               	movlw	(high __ramtop+-1)
 30147  01D486  64F7               	cpfsgt	tblptrh,c
 30148  01D488  D003               	bra	u10517
 30149  01D48A  0008               	tblrd		*
 30150  01D48C  50F5               	movf	tablat,w,c
 30151  01D48E  D007               	bra	u10515
 30152  01D490                     u10517:
 30153  01D490  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30154  01D496  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30155  01D49C  50EF               	movf	indf0,w,c
 30156  01D49E                     u10515:
 30157  01D49E  1835               	xorwf	(btemp+11)^0,w,c
 30158  01D4A0  B4D8               	btfsc	status,2,c
 30159  01D4A2  D766               	goto	l11528
 30160  01D4A4                     u10510:
 30161                           
 30162                           ;stkvar	_l @ sp[(-4)+2]
 30163  01D4A4  0EFE               	movlw	-2
 30164  01D4A6  006F FF8F FFF6     	movff	plusw1,tblptrl
 30165  01D4AC  0EFF               	movlw	-1
 30166  01D4AE  006F FF8F FFF7     	movff	plusw1,tblptrh
 30167  01D4B4  0E00               	movlw	low (__mediumconst shr (0+16))
 30168  01D4B6  6EF8               	movwf	tblptru,c
 30169  01D4B8  0E1F               	movlw	(high __ramtop+-1)
 30170  01D4BA  64F7               	cpfsgt	tblptrh,c
 30171  01D4BC  D003               	bra	u10527
 30172  01D4BE  0008               	tblrd		*
 30173  01D4C0  50F5               	movf	tablat,w,c
 30174  01D4C2  D007               	bra	u10520
 30175  01D4C4                     u10527:
 30176  01D4C4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30177  01D4CA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30178  01D4D0  50EF               	movf	indf0,w,c
 30179  01D4D2                     u10520:
 30180  01D4D2  6E2A               	movwf	btemp^0,c
 30181  01D4D4  6A2B               	clrf	(btemp+1)^0,c
 30182                           
 30183                           ;stkvar	_r @ sp[(-4)+0]
 30184  01D4D6  50E1               	movf	fsr1l,w,c
 30185  01D4D8  0FFC               	addlw	-4
 30186  01D4DA  6ED9               	movwf	fsr2l,c
 30187  01D4DC  50E2               	movf	fsr1h,w,c
 30188  01D4DE  6EDA               	movwf	fsr2h,c
 30189  01D4E0  0EFF               	movlw	255
 30190  01D4E2  22DA               	addwfc	fsr2h,f,c
 30191  01D4E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 30192  01D4EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 30193  01D4F0                     	if	0	;tblptru may be non-zero
 30194  01D4F0                     	endif
 30195  01D4F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30196  01D4F0  0E00               	movlw	low (__mediumconst shr (0+16))
 30197  01D4F2  6EF8               	movwf	tblptru,c
 30198  01D4F4                     	endif
 30199  01D4F4  0008               	tblrd		*
 30200  01D4F6  50F5               	movf	tablat,w,c
 30201  01D4F8  5E2A               	subwf	btemp^0,f,c
 30202  01D4FA  0E00               	movlw	0
 30203  01D4FC  5A2B               	subwfb	(btemp+1)^0,f,c
 30204  01D4FE                     l3818:
 30205                           
 30206                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 30207  01D4FE  0EF6               	movlw	246
 30208  01D500  26E1               	addwf	fsr1l,f,c
 30209  01D502  0EFF               	movlw	255
 30210  01D504  22E2               	addwfc	fsr1h,f,c
 30211  01D506  0012               	return		;funcret
 30212  01D508                     __end_of_strncmp:
 30213                           	opt callstack 0
 30214                           
 30215 ;; *************** function _stoa *****************
 30216 ;; Defined at:
 30217 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30218 ;; Parameters:    Size  Location     Type
 30219 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30220 ;;		 -> f(6), NULL(0), 
 30221 ;;  s               2  [STACK] PTR unsigned char 
 30222 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_76(9), 
 30223 ;;		 -> STR_75(12), D.lcd(640), D(642), T(176), 
 30224 ;;		 -> STR_3(5), V(181), 
 30225 ;; Auto vars:     Size  Location     Type
 30226 ;;  nuls            7  [STACK] unsigned char [7]
 30227 ;;  l               2  [STACK] int 
 30228 ;;  p               2  [STACK] int 
 30229 ;;  cp              2  [STACK] PTR unsigned char 
 30230 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 30231 ;;		 -> STR_76(9), STR_75(12), D.lcd(640), D(642), 
 30232 ;;		 -> T(176), STR_3(5), V(181), 
 30233 ;;  w               2  [STACK] int 
 30234 ;;  i               2  [STACK] int 
 30235 ;; Return value:  Size  Location     Type
 30236 ;;                  2  [STACK] int 
 30237 ;; Registers used:
 30238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 30239 ;; Tracked objects:
 30240 ;;		On entry : 0/0
 30241 ;;		On exit  : 0/0
 30242 ;;		Unchanged: 0/0
 30243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30248 ;;Total ram usage:        0 bytes
 30249 ;; Hardware stack levels used:    1
 30250 ;; Hardware stack levels required when called:   18
 30251 ;; This function calls:
 30252 ;;		_fputc
 30253 ;;		_strlen
 30254 ;; This function is called by:
 30255 ;;		_vfpfcnvrt
 30256 ;; This function uses a reentrant model
 30257 ;;
 30258                           
 30259                           	psect	text102
 30260  01BD3C                     __ptext102:
 30261                           	opt callstack 0
 30262  01BD3C                     _stoa:
 30263                           	opt callstack 0
 30264                           
 30265                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30266  01BD3C  0E11               	movlw	17
 30267  01BD3E  26E1               	addwf	fsr1l,f,c
 30268  01BD40  0E00               	movlw	0
 30269  01BD42  22E2               	addwfc	fsr1h,f,c
 30270                           
 30271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 30272                           
 30273                           ;incstack = 0
 30274 ;; hardware stack exceeded
 30275  01BD44  EE20  F200         	lfsr	2,stoa@F1166
 30276                           
 30277                           ;stkvar	_nuls @ sp[(-17)+0]
 30278  01BD48  0E07               	movlw	7
 30279  01BD4A  6E2A               	movwf	btemp^0,c
 30280  01BD4C  0EEF               	movlw	-17
 30281  01BD4E                     us1511999:
 30282  01BD4E  006F FF7B FFE3     	movff	postinc2,plusw1
 30283  01BD54  28E8               	incf	wreg,w,c
 30284  01BD56  2E2A               	decfsz	btemp^0,f,c
 30285  01BD58  D7FA               	bra	us1511999
 30286                           
 30287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 30288                           ;stkvar	_s @ sp[(-17)+-4]
 30289  01BD5A  0EEB               	movlw	-21
 30290  01BD5C  006F FF8C  F034    	movff	plusw1,btemp+10
 30291  01BD62  0EEC               	movlw	-20
 30292  01BD64  006F FF8C  F035    	movff	plusw1,btemp+11
 30293                           
 30294                           ;stkvar	_cp @ sp[(-17)+11]
 30295  01BD6A  0EFB               	movlw	-5
 30296  01BD6C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30297  01BD72  0EFA               	movlw	-6
 30298  01BD74  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30299                           
 30300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 30301                           ;stkvar	_cp @ sp[(-17)+11]
 30302  01BD7A  0EFA               	movlw	-6
 30303  01BD7C  006F FF8C  F02A    	movff	plusw1,btemp
 30304  01BD82  0EFB               	movlw	-5
 30305  01BD84  50E3               	movf	plusw1,w,c
 30306  01BD86  102A               	iorwf	btemp^0,w,c
 30307  01BD88  A4D8               	btfss	status,2,c
 30308  01BD8A  D00E               	goto	l15894
 30309                           
 30310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 30311                           ;stkvar	_nuls @ sp[(-17)+0]
 30312  01BD8C  0EEF               	movlw	239
 30313  01BD8E  24E1               	addwf	fsr1l,w,c
 30314  01BD90  6E34               	movwf	(btemp+10)^0,c
 30315  01BD92  0EFF               	movlw	255
 30316  01BD94  20E2               	addwfc	fsr1h,w,c
 30317  01BD96  6E35               	movwf	(btemp+11)^0,c
 30318                           
 30319                           ;stkvar	_cp @ sp[(-17)+11]
 30320  01BD98  0EFB               	movlw	-5
 30321  01BD9A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30322  01BDA0  0EFA               	movlw	-6
 30323  01BDA2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30324  01BDA8                     l15894:
 30325                           
 30326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 30327                           ;stkvar	_cp @ sp[(-17)+11]
 30328  01BDA8  0EFA               	movlw	-6
 30329  01BDAA  006F FF8F FFE6     	movff	plusw1,postinc1
 30330  01BDB0  006F FF8F FFE6     	movff	plusw1,postinc1
 30331  01BDB6  EC63  F007         	call	_strlen	;wreg free
 30332                           
 30333                           ;stkvar	_l @ sp[(-17)+7]
 30334  01BDBA  0EF6               	movlw	-10
 30335  01BDBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 30336  01BDC2  0EF7               	movlw	-9
 30337  01BDC4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30338                           
 30339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 30340                           ;stkvar	_p @ sp[(-17)+9]
 30341  01BDCA  0EF8               	movlw	-8
 30342  01BDCC  0060  F133  FFE3   	movff	_prec,plusw1
 30343  01BDD2  0EF9               	movlw	-7
 30344  01BDD4  0060  F137  FFE3   	movff	_prec+1,plusw1
 30345                           
 30346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 30347                           ;stkvar	_p @ sp[(-17)+9]
 30348  01BDDA  0EF9               	movlw	-7
 30349  01BDDC  BEE3               	btfsc	plusw1,7,c
 30350  01BDDE  D023               	goto	l2613
 30351                           
 30352                           ;stkvar	_l @ sp[(-17)+7]
 30353                           ;stkvar	_p @ sp[(-17)+9]
 30354  01BDE0  50E1               	movf	fsr1l,w,c
 30355  01BDE2  0FF8               	addlw	-8
 30356  01BDE4  6ED9               	movwf	fsr2l,c
 30357  01BDE6  50E2               	movf	fsr1h,w,c
 30358  01BDE8  6EDA               	movwf	fsr2h,c
 30359  01BDEA  0EFF               	movlw	255
 30360  01BDEC  22DA               	addwfc	fsr2h,f,c
 30361  01BDEE  0EF6               	movlw	-10
 30362  01BDF0  50E3               	movf	plusw1,w,c
 30363  01BDF2  5CDE               	subwf	postinc2,w,c
 30364  01BDF4  50DE               	movf	postinc2,w,c
 30365  01BDF6  0A80               	xorlw	128
 30366  01BDF8  6E2A               	movwf	btemp^0,c
 30367  01BDFA  0EF7               	movlw	-9
 30368  01BDFC  50E3               	movf	plusw1,w,c
 30369  01BDFE  0A80               	xorlw	128
 30370  01BE00  582A               	subwfb	btemp^0,w,c
 30371  01BE02  B0D8               	btfsc	status,0,c
 30372  01BE04  D010               	goto	l2613
 30373                           
 30374                           ;stkvar	_p @ sp[(-17)+9]
 30375                           ;stkvar	_l @ sp[(-17)+7]
 30376  01BE06  0EF8               	movlw	-8
 30377  01BE08  006F FF8C  F02A    	movff	plusw1,btemp
 30378  01BE0E  0EF6               	movlw	-10
 30379  01BE10  0060  F0AB  FFE3   	movff	btemp,plusw1
 30380  01BE16  0EF9               	movlw	-7
 30381  01BE18  006F FF8C  F02A    	movff	plusw1,btemp
 30382  01BE1E  0EF7               	movlw	-9
 30383  01BE20  0060  F0AB  FFE3   	movff	btemp,plusw1
 30384  01BE26                     l2613:
 30385                           
 30386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 30387                           ;stkvar	_l @ sp[(-17)+7]
 30388                           ;stkvar	_p @ sp[(-17)+9]
 30389  01BE26  0EF6               	movlw	-10
 30390  01BE28  006F FF8C  F02A    	movff	plusw1,btemp
 30391  01BE2E  0EF8               	movlw	-8
 30392  01BE30  0060  F0AB  FFE3   	movff	btemp,plusw1
 30393  01BE36  0EF7               	movlw	-9
 30394  01BE38  006F FF8C  F02A    	movff	plusw1,btemp
 30395  01BE3E  0EF9               	movlw	-7
 30396  01BE40  0060  F0AB  FFE3   	movff	btemp,plusw1
 30397                           
 30398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 30399                           ;stkvar	_w @ sp[(-17)+13]
 30400  01BE46  0EFC               	movlw	-4
 30401  01BE48  0060  F12B  FFE3   	movff	_width,plusw1
 30402  01BE4E  0EFD               	movlw	-3
 30403  01BE50  0060  F12F  FFE3   	movff	_width+1,plusw1
 30404                           
 30405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 30406  01BE56  A04E               	btfss	_flags^0,0,c
 30407  01BE58  D01F               	goto	l15914
 30408  01BE5A  D031               	goto	u15160
 30409  01BE5C                     l15910:
 30410                           
 30411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 30412                           ;stkvar	_fp @ sp[(-17)+-2]
 30413  01BE5C  0EED               	movlw	-19
 30414  01BE5E  006F FF8F FFE6     	movff	plusw1,postinc1
 30415  01BE64  006F FF8F FFE6     	movff	plusw1,postinc1
 30416  01BE6A  0E20               	movlw	32
 30417  01BE6C  6EE6               	movwf	postinc1,c
 30418  01BE6E  0E00               	movlw	0
 30419  01BE70  6EE6               	movwf	postinc1,c
 30420  01BE72  EC24  F0FC         	call	_fputc	;wreg free
 30421                           
 30422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 30423                           ;stkvar	_l @ sp[(-17)+7]
 30424  01BE76  0EF6               	movlw	-10
 30425  01BE78  50E3               	movf	plusw1,w,c
 30426  01BE7A  0F01               	addlw	1
 30427  01BE7C  6E2A               	movwf	btemp^0,c
 30428  01BE7E  0EF6               	movlw	-10
 30429  01BE80  0060  F0AB  FFE3   	movff	btemp,plusw1
 30430  01BE86  6A2A               	clrf	btemp^0,c
 30431  01BE88  0EF7               	movlw	-9
 30432  01BE8A  50E3               	movf	plusw1,w,c
 30433  01BE8C  202A               	addwfc	btemp^0,w,c
 30434  01BE8E  6E2A               	movwf	btemp^0,c
 30435  01BE90  0EF7               	movlw	-9
 30436  01BE92  0060  F0AB  FFE3   	movff	btemp,plusw1
 30437  01BE98                     l15914:
 30438                           
 30439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 30440                           ;stkvar	_w @ sp[(-17)+13]
 30441                           ;stkvar	_l @ sp[(-17)+7]
 30442  01BE98  50E1               	movf	fsr1l,w,c
 30443  01BE9A  0FF6               	addlw	-10
 30444  01BE9C  6ED9               	movwf	fsr2l,c
 30445  01BE9E  50E2               	movf	fsr1h,w,c
 30446  01BEA0  6EDA               	movwf	fsr2h,c
 30447  01BEA2  0EFF               	movlw	255
 30448  01BEA4  22DA               	addwfc	fsr2h,f,c
 30449  01BEA6  0EFC               	movlw	-4
 30450  01BEA8  50E3               	movf	plusw1,w,c
 30451  01BEAA  5CDE               	subwf	postinc2,w,c
 30452  01BEAC  50DE               	movf	postinc2,w,c
 30453  01BEAE  0A80               	xorlw	128
 30454  01BEB0  6E2A               	movwf	btemp^0,c
 30455  01BEB2  0EFD               	movlw	-3
 30456  01BEB4  50E3               	movf	plusw1,w,c
 30457  01BEB6  0A80               	xorlw	128
 30458  01BEB8  582A               	subwfb	btemp^0,w,c
 30459  01BEBA  A0D8               	btfss	status,0,c
 30460  01BEBC  D7CF               	goto	l15910
 30461  01BEBE                     u15160:
 30462                           
 30463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 30464                           ;stkvar	_i @ sp[(-17)+15]
 30465  01BEBE  0EFE               	movlw	-2
 30466  01BEC0  6AE3               	clrf	plusw1,c
 30467  01BEC2  0EFF               	movlw	-1
 30468  01BEC4  6AE3               	clrf	plusw1,c
 30469                           
 30470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30471  01BEC6  D045               	goto	l15924
 30472  01BEC8                     l15918:
 30473                           
 30474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 30475                           ;stkvar	_fp @ sp[(-17)+-2]
 30476  01BEC8  0EED               	movlw	-19
 30477  01BECA  006F FF8F FFE6     	movff	plusw1,postinc1
 30478  01BED0  006F FF8F FFE6     	movff	plusw1,postinc1
 30479                           
 30480                           ;stkvar	_cp @ sp[(-19)+11]
 30481  01BED6  0EF8               	movlw	-8
 30482  01BED8  006F FF8F FFF6     	movff	plusw1,tblptrl
 30483  01BEDE  0EF9               	movlw	-7
 30484  01BEE0  006F FF8F FFF7     	movff	plusw1,tblptrh
 30485  01BEE6  0E00               	movlw	low (__mediumconst shr (0+16))
 30486  01BEE8  6EF8               	movwf	tblptru,c
 30487  01BEEA  0E1F               	movlw	(high __ramtop+-1)
 30488  01BEEC  64F7               	cpfsgt	tblptrh,c
 30489  01BEEE  D003               	bra	u15177
 30490  01BEF0  0008               	tblrd		*
 30491  01BEF2  50F5               	movf	tablat,w,c
 30492  01BEF4  D007               	bra	u15170
 30493  01BEF6                     u15177:
 30494  01BEF6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30495  01BEFC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30496  01BF02  50EF               	movf	indf0,w,c
 30497  01BF04                     u15170:
 30498  01BF04  6EE6               	movwf	postinc1,c
 30499  01BF06  0E00               	movlw	0
 30500  01BF08  6EE6               	movwf	postinc1,c
 30501  01BF0A  EC24  F0FC         	call	_fputc	;wreg free
 30502                           
 30503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 30504                           ;stkvar	_cp @ sp[(-17)+11]
 30505  01BF0E  0EFA               	movlw	-6
 30506  01BF10  50E3               	movf	plusw1,w,c
 30507  01BF12  0F01               	addlw	1
 30508  01BF14  6E2A               	movwf	btemp^0,c
 30509  01BF16  0EFA               	movlw	-6
 30510  01BF18  0060  F0AB  FFE3   	movff	btemp,plusw1
 30511  01BF1E  6A2A               	clrf	btemp^0,c
 30512  01BF20  0EFB               	movlw	-5
 30513  01BF22  50E3               	movf	plusw1,w,c
 30514  01BF24  202A               	addwfc	btemp^0,w,c
 30515  01BF26  6E2A               	movwf	btemp^0,c
 30516  01BF28  0EFB               	movlw	-5
 30517  01BF2A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30518                           
 30519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 30520                           ;stkvar	_i @ sp[(-17)+15]
 30521  01BF30  0EFE               	movlw	-2
 30522  01BF32  50E3               	movf	plusw1,w,c
 30523  01BF34  0F01               	addlw	1
 30524  01BF36  6E2A               	movwf	btemp^0,c
 30525  01BF38  0EFE               	movlw	-2
 30526  01BF3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30527  01BF40  6A2A               	clrf	btemp^0,c
 30528  01BF42  0EFF               	movlw	-1
 30529  01BF44  50E3               	movf	plusw1,w,c
 30530  01BF46  202A               	addwfc	btemp^0,w,c
 30531  01BF48  6E2A               	movwf	btemp^0,c
 30532  01BF4A  0EFF               	movlw	-1
 30533  01BF4C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30534  01BF52                     l15924:
 30535                           
 30536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30537                           ;stkvar	_p @ sp[(-17)+9]
 30538                           ;stkvar	_i @ sp[(-17)+15]
 30539  01BF52  50E1               	movf	fsr1l,w,c
 30540  01BF54  0FFE               	addlw	-2
 30541  01BF56  6ED9               	movwf	fsr2l,c
 30542  01BF58  50E2               	movf	fsr1h,w,c
 30543  01BF5A  6EDA               	movwf	fsr2h,c
 30544  01BF5C  0EFF               	movlw	255
 30545  01BF5E  22DA               	addwfc	fsr2h,f,c
 30546  01BF60  0EF8               	movlw	-8
 30547  01BF62  50E3               	movf	plusw1,w,c
 30548  01BF64  5CDE               	subwf	postinc2,w,c
 30549  01BF66  50DE               	movf	postinc2,w,c
 30550  01BF68  0A80               	xorlw	128
 30551  01BF6A  6E2A               	movwf	btemp^0,c
 30552  01BF6C  0EF9               	movlw	-7
 30553  01BF6E  50E3               	movf	plusw1,w,c
 30554  01BF70  0A80               	xorlw	128
 30555  01BF72  582A               	subwfb	btemp^0,w,c
 30556  01BF74  A0D8               	btfss	status,0,c
 30557  01BF76  D7A8               	goto	l15918
 30558                           
 30559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 30560  01BF78  B04E               	btfsc	_flags^0,0,c
 30561  01BF7A  D01F               	goto	l15932
 30562  01BF7C  D031               	goto	u15200
 30563  01BF7E                     l15928:
 30564                           
 30565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 30566                           ;stkvar	_fp @ sp[(-17)+-2]
 30567  01BF7E  0EED               	movlw	-19
 30568  01BF80  006F FF8F FFE6     	movff	plusw1,postinc1
 30569  01BF86  006F FF8F FFE6     	movff	plusw1,postinc1
 30570  01BF8C  0E20               	movlw	32
 30571  01BF8E  6EE6               	movwf	postinc1,c
 30572  01BF90  0E00               	movlw	0
 30573  01BF92  6EE6               	movwf	postinc1,c
 30574  01BF94  EC24  F0FC         	call	_fputc	;wreg free
 30575                           
 30576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 30577                           ;stkvar	_l @ sp[(-17)+7]
 30578  01BF98  0EF6               	movlw	-10
 30579  01BF9A  50E3               	movf	plusw1,w,c
 30580  01BF9C  0F01               	addlw	1
 30581  01BF9E  6E2A               	movwf	btemp^0,c
 30582  01BFA0  0EF6               	movlw	-10
 30583  01BFA2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30584  01BFA8  6A2A               	clrf	btemp^0,c
 30585  01BFAA  0EF7               	movlw	-9
 30586  01BFAC  50E3               	movf	plusw1,w,c
 30587  01BFAE  202A               	addwfc	btemp^0,w,c
 30588  01BFB0  6E2A               	movwf	btemp^0,c
 30589  01BFB2  0EF7               	movlw	-9
 30590  01BFB4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30591  01BFBA                     l15932:
 30592                           
 30593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 30594                           ;stkvar	_w @ sp[(-17)+13]
 30595                           ;stkvar	_l @ sp[(-17)+7]
 30596  01BFBA  50E1               	movf	fsr1l,w,c
 30597  01BFBC  0FF6               	addlw	-10
 30598  01BFBE  6ED9               	movwf	fsr2l,c
 30599  01BFC0  50E2               	movf	fsr1h,w,c
 30600  01BFC2  6EDA               	movwf	fsr2h,c
 30601  01BFC4  0EFF               	movlw	255
 30602  01BFC6  22DA               	addwfc	fsr2h,f,c
 30603  01BFC8  0EFC               	movlw	-4
 30604  01BFCA  50E3               	movf	plusw1,w,c
 30605  01BFCC  5CDE               	subwf	postinc2,w,c
 30606  01BFCE  50DE               	movf	postinc2,w,c
 30607  01BFD0  0A80               	xorlw	128
 30608  01BFD2  6E2A               	movwf	btemp^0,c
 30609  01BFD4  0EFD               	movlw	-3
 30610  01BFD6  50E3               	movf	plusw1,w,c
 30611  01BFD8  0A80               	xorlw	128
 30612  01BFDA  582A               	subwfb	btemp^0,w,c
 30613  01BFDC  A0D8               	btfss	status,0,c
 30614  01BFDE  D7CF               	goto	l15928
 30615  01BFE0                     u15200:
 30616                           
 30617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 30618                           ;stkvar	_l @ sp[(-17)+7]
 30619  01BFE0  0EF6               	movlw	-10
 30620  01BFE2  006F FF8C  F02A    	movff	plusw1,btemp
 30621  01BFE8  0EF7               	movlw	-9
 30622  01BFEA  006F FF8C  F02B    	movff	plusw1,btemp+1
 30623                           
 30624                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 30625  01BFF0  0EEB               	movlw	235
 30626  01BFF2  26E1               	addwf	fsr1l,f,c
 30627  01BFF4  0EFF               	movlw	255
 30628  01BFF6  22E2               	addwfc	fsr1h,f,c
 30629  01BFF8  0012               	return		;funcret
 30630  01BFFA                     __end_of_stoa:
 30631                           	opt callstack 0
 30632                           
 30633 ;; *************** function _efgtoa *****************
 30634 ;; Defined at:
 30635 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30636 ;; Parameters:    Size  Location     Type
 30637 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30638 ;;		 -> f(6), NULL(0), 
 30639 ;;  f               4  [STACK] PTR struct _IO_FILE
 30640 ;;  c               1  [STACK] unsigned char 
 30641 ;; Auto vars:     Size  Location     Type
 30642 ;;  u               4  [STACK] unsigned char 
 30643 ;;  g               4  [STACK] unsigned char 
 30644 ;;  l               4  [STACK] unsigned char 
 30645 ;;  h               4  [STACK] unsigned char 
 30646 ;;  ou              4  [STACK] unsigned char 
 30647 ;;  n               2  [STACK] int 
 30648 ;;  e               2  [STACK] int 
 30649 ;;  i               2  [STACK] int 
 30650 ;;  w               2  [STACK] int 
 30651 ;;  p               2  [STACK] int 
 30652 ;;  sign            2  [STACK] int 
 30653 ;;  d               2  [STACK] int 
 30654 ;;  ne              2  [STACK] int 
 30655 ;;  m               2  [STACK] int 
 30656 ;;  pp              2  [STACK] int 
 30657 ;;  t               2  [STACK] int 
 30658 ;;  mode            1  [STACK] unsigned char 
 30659 ;;  nmode           1  [STACK] unsigned char 
 30660 ;; Return value:  Size  Location     Type
 30661 ;;                  2  [STACK] int 
 30662 ;; Registers used:
 30663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 30664 ;; Tracked objects:
 30665 ;;		On entry : 0/0
 30666 ;;		On exit  : 0/0
 30667 ;;		Unchanged: 0/0
 30668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30673 ;;Total ram usage:        0 bytes
 30674 ;; Hardware stack levels used:    1
 30675 ;; Hardware stack levels required when called:   20
 30676 ;; This function calls:
 30677 ;;		___awdiv
 30678 ;;		___awmod
 30679 ;;		___fladd
 30680 ;;		___fldiv
 30681 ;;		___fleq
 30682 ;;		___flge
 30683 ;;		___flmul
 30684 ;;		___flneg
 30685 ;;		___flsub
 30686 ;;		___fltol
 30687 ;;		___fpclassifyf
 30688 ;;		_floorf
 30689 ;;		_isupper
 30690 ;;		_pad
 30691 ;;		_strcpy
 30692 ;;		_tolower
 30693 ;; This function is called by:
 30694 ;;		_vfpfcnvrt
 30695 ;; This function uses a reentrant model
 30696 ;;
 30697                           
 30698                           	psect	text103
 30699  011720                     __ptext103:
 30700                           	opt callstack 0
 30701  011720                     _efgtoa:
 30702                           	opt callstack 0
 30703                           
 30704                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30705  011720  0E38               	movlw	56
 30706  011722  26E1               	addwf	fsr1l,f,c
 30707  011724  0E00               	movlw	0
 30708  011726  22E2               	addwfc	fsr1h,f,c
 30709                           
 30710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 30711                           ;stkvar	_sign @ sp[(-56)+42]
 30712                           
 30713                           ;incstack = 0
 30714 ;; hardware stack exceeded
 30715  011728  0EF2               	movlw	-14
 30716  01172A  6AE3               	clrf	plusw1,c
 30717  01172C  0EF3               	movlw	-13
 30718  01172E  6AE3               	clrf	plusw1,c
 30719                           
 30720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 30721                           ;stkvar	_f @ sp[(-56)+-6]
 30722  011730  0EC2               	movlw	-62
 30723  011732  006F FF8C  F032    	movff	plusw1,btemp+8
 30724  011738  0EC3               	movlw	-61
 30725  01173A  006F FF8C  F033    	movff	plusw1,btemp+9
 30726  011740  0EC4               	movlw	-60
 30727  011742  006F FF8C  F034    	movff	plusw1,btemp+10
 30728  011748  0EC5               	movlw	-59
 30729  01174A  006F FF8C  F035    	movff	plusw1,btemp+11
 30730                           
 30731                           ;stkvar	_g @ sp[(-56)+16]
 30732  011750  0ED8               	movlw	-40
 30733  011752  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30734  011758  0ED9               	movlw	-39
 30735  01175A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30736  011760  0EDA               	movlw	-38
 30737  011762  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30738  011768  0EDB               	movlw	-37
 30739  01176A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30740                           
 30741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 30742                           ;stkvar	_g @ sp[(-56)+16]
 30743  011770  0EDB               	movlw	-37
 30744  011772  AEE3               	btfss	plusw1,7,c
 30745  011774  D02B               	goto	l15592
 30746                           
 30747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 30748  011776  0E01               	movlw	1
 30749  011778  6E34               	movwf	(btemp+10)^0,c
 30750  01177A  0E00               	movlw	0
 30751  01177C  6E35               	movwf	(btemp+11)^0,c
 30752                           
 30753                           ;stkvar	_sign @ sp[(-56)+42]
 30754  01177E  0EF2               	movlw	-14
 30755  011780  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30756  011786  0EF3               	movlw	-13
 30757  011788  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30758                           
 30759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 30760                           ;stkvar	_g @ sp[(-56)+16]
 30761  01178E  0ED8               	movlw	-40
 30762  011790  006F FF8F FFE6     	movff	plusw1,postinc1
 30763  011796  006F FF8F FFE6     	movff	plusw1,postinc1
 30764  01179C  006F FF8F FFE6     	movff	plusw1,postinc1
 30765  0117A2  006F FF8F FFE6     	movff	plusw1,postinc1
 30766  0117A8  ECA4  F00F         	call	___flneg	;wreg free
 30767                           
 30768                           ;stkvar	_g @ sp[(-56)+16]
 30769  0117AC  0ED8               	movlw	-40
 30770  0117AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30771  0117B4  0ED9               	movlw	-39
 30772  0117B6  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30773  0117BC  0EDA               	movlw	-38
 30774  0117BE  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30775  0117C4  0EDB               	movlw	-37
 30776  0117C6  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30777  0117CC                     l15592:
 30778                           
 30779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 30780                           ;stkvar	_n @ sp[(-56)+32]
 30781  0117CC  0EE8               	movlw	-24
 30782  0117CE  6AE3               	clrf	plusw1,c
 30783  0117D0  0EE9               	movlw	-23
 30784  0117D2  6AE3               	clrf	plusw1,c
 30785                           
 30786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 30787                           ;stkvar	_w @ sp[(-56)+38]
 30788  0117D4  0EEE               	movlw	-18
 30789  0117D6  0060  F12B  FFE3   	movff	_width,plusw1
 30790  0117DC  0EEF               	movlw	-17
 30791  0117DE  0060  F12F  FFE3   	movff	_width+1,plusw1
 30792                           
 30793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 30794                           ;stkvar	_sign @ sp[(-56)+42]
 30795  0117E4  0EF2               	movlw	-14
 30796  0117E6  006F FF8C  F02A    	movff	plusw1,btemp
 30797  0117EC  0EF3               	movlw	-13
 30798  0117EE  50E3               	movf	plusw1,w,c
 30799  0117F0  102A               	iorwf	btemp^0,w,c
 30800  0117F2  A4D8               	btfss	status,2,c
 30801  0117F4  D002               	goto	u14610
 30802  0117F6  A44E               	btfss	_flags^0,2,c
 30803  0117F8  D036               	goto	l15612
 30804  0117FA                     u14610:
 30805                           
 30806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 30807                           ;stkvar	_sign @ sp[(-56)+42]
 30808  0117FA  0EF2               	movlw	-14
 30809  0117FC  006F FF8C  F02A    	movff	plusw1,btemp
 30810  011802  0EF3               	movlw	-13
 30811  011804  50E3               	movf	plusw1,w,c
 30812  011806  102A               	iorwf	btemp^0,w,c
 30813  011808  A4D8               	btfss	status,2,c
 30814  01180A  D002               	goto	l15604
 30815  01180C  0E2B               	movlw	43
 30816  01180E  D001               	goto	L31
 30817  011810                     l15604:
 30818  011810  0E2D               	movlw	45
 30819  011812                     L31:
 30820  011812  6E34               	movwf	(btemp+10)^0,c
 30821  011814  0E00               	movlw	0
 30822  011816  6E35               	movwf	(btemp+11)^0,c
 30823                           
 30824                           ;stkvar	_efgtoa$6638 @ sp[(-56)+10]
 30825  011818  0ED2               	movlw	-46
 30826  01181A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30827  011820  0ED3               	movlw	-45
 30828  011822  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30829                           
 30830                           ;stkvar	_efgtoa$6638 @ sp[(-56)+10]
 30831  011828  0ED2               	movlw	-46
 30832  01182A  006F FF8C  F354    	movff	plusw1,_dbuf
 30833                           
 30834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 30835                           ;stkvar	_n @ sp[(-56)+32]
 30836  011830  0EE8               	movlw	-24
 30837  011832  50E3               	movf	plusw1,w,c
 30838  011834  0F01               	addlw	1
 30839  011836  6E2A               	movwf	btemp^0,c
 30840  011838  0EE8               	movlw	-24
 30841  01183A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30842  011840  6A2A               	clrf	btemp^0,c
 30843  011842  0EE9               	movlw	-23
 30844  011844  50E3               	movf	plusw1,w,c
 30845  011846  202A               	addwfc	btemp^0,w,c
 30846  011848  6E2A               	movwf	btemp^0,c
 30847  01184A  0EE9               	movlw	-23
 30848  01184C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30849                           
 30850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 30851                           ;stkvar	_w @ sp[(-56)+38]
 30852  011852  50E1               	movf	fsr1l,w,c
 30853  011854  0FEE               	addlw	-18
 30854  011856  6ED9               	movwf	fsr2l,c
 30855  011858  50E2               	movf	fsr1h,w,c
 30856  01185A  6EDA               	movwf	fsr2h,c
 30857  01185C  0EFF               	movlw	255
 30858  01185E  22DA               	addwfc	fsr2h,f,c
 30859  011860  06DE               	decf	postinc2,f,c
 30860  011862  0E00               	movlw	0
 30861  011864  5ADD               	subwfb	postdec2,f,c
 30862  011866                     l15612:
 30863                           
 30864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30865                           ;stkvar	_g @ sp[(-56)+16]
 30866  011866  0ED8               	movlw	-40
 30867  011868  006F FF8F FFE6     	movff	plusw1,postinc1
 30868  01186E  006F FF8F FFE6     	movff	plusw1,postinc1
 30869  011874  006F FF8F FFE6     	movff	plusw1,postinc1
 30870  01187A  006F FF8F FFE6     	movff	plusw1,postinc1
 30871  011880  EC31  F0F0         	call	___fpclassifyf	;wreg free
 30872  011884  042A               	decf	btemp^0,w,c
 30873  011886  102B               	iorwf	(btemp+1)^0,w,c
 30874  011888  A4D8               	btfss	status,2,c
 30875  01188A  D076               	goto	l15630
 30876  01188C  0EBF               	movlw	191
 30877  01188E  6E34               	movwf	(btemp+10)^0,c
 30878  011890  0EFF               	movlw	255
 30879  011892  6E35               	movwf	(btemp+11)^0,c
 30880                           
 30881                           ;stkvar	_c @ sp[(-56)+-7]
 30882  011894  0EC1               	movlw	-63
 30883  011896  50E3               	movf	plusw1,w,c
 30884  011898  6E32               	movwf	(btemp+8)^0,c
 30885  01189A  6A33               	clrf	(btemp+9)^0,c
 30886  01189C  5034               	movf	(btemp+10)^0,w,c
 30887  01189E  2632               	addwf	(btemp+8)^0,f,c
 30888  0118A0  5035               	movf	(btemp+11)^0,w,c
 30889  0118A2  2233               	addwfc	(btemp+9)^0,f,c
 30890  0118A4  5033               	movf	(btemp+9)^0,w,c
 30891  0118A6  E106               	bnz	u14640
 30892  0118A8  0E1A               	movlw	26
 30893  0118AA  5C32               	subwf	(btemp+8)^0,w,c
 30894  0118AC  B0D8               	btfsc	status,0,c
 30895  0118AE  D002               	goto	u14640
 30896  0118B0  0E01               	movlw	1
 30897  0118B2  D001               	goto	u14650
 30898  0118B4                     u14640:
 30899  0118B4  0E00               	movlw	0
 30900  0118B6                     u14650:
 30901  0118B6  6E34               	movwf	(btemp+10)^0,c
 30902  0118B8  6A35               	clrf	(btemp+11)^0,c
 30903                           
 30904                           ;stkvar	_efgtoa$6639 @ sp[(-56)+8]
 30905  0118BA  0ED0               	movlw	-48
 30906  0118BC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30907  0118C2  0ED1               	movlw	-47
 30908  0118C4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30909                           
 30910                           ;stkvar	_efgtoa$6639 @ sp[(-56)+8]
 30911  0118CA  0ED0               	movlw	-48
 30912  0118CC  006F FF8C  F02A    	movff	plusw1,btemp
 30913  0118D2  0ED1               	movlw	-47
 30914  0118D4  50E3               	movf	plusw1,w,c
 30915  0118D6  102A               	iorwf	btemp^0,w,c
 30916  0118D8  B4D8               	btfsc	status,2,c
 30917  0118DA  D017               	goto	l15622
 30918                           
 30919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 30920  0118DC  0EDA               	movlw	low STR_96
 30921  0118DE  6EE6               	movwf	postinc1,c
 30922  0118E0  0EFF               	movlw	high STR_96
 30923  0118E2  6EE6               	movwf	postinc1,c
 30924                           
 30925                           ;stkvar	_n @ sp[(-58)+32]
 30926  0118E4  0E54               	movlw	low _dbuf
 30927  0118E6  6E34               	movwf	(btemp+10)^0,c
 30928  0118E8  0E03               	movlw	high _dbuf
 30929  0118EA  6E35               	movwf	(btemp+11)^0,c
 30930  0118EC  0EE6               	movlw	-26
 30931  0118EE  50E3               	movf	plusw1,w,c
 30932  0118F0  2634               	addwf	(btemp+10)^0,f,c
 30933  0118F2  0EE7               	movlw	-25
 30934  0118F4  50E3               	movf	plusw1,w,c
 30935  0118F6  2235               	addwfc	(btemp+11)^0,f,c
 30936  0118F8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30937  0118FE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30938  011904  EC17  F003         	call	_strcpy	;wreg free
 30939                           
 30940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 30941  011908  D016               	goto	l15624
 30942  01190A                     l15622:
 30943                           
 30944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 30945  01190A  0EE2               	movlw	low STR_97
 30946  01190C  6EE6               	movwf	postinc1,c
 30947  01190E  0EFF               	movlw	high STR_97
 30948  011910  6EE6               	movwf	postinc1,c
 30949                           
 30950                           ;stkvar	_n @ sp[(-58)+32]
 30951  011912  0E54               	movlw	low _dbuf
 30952  011914  6E34               	movwf	(btemp+10)^0,c
 30953  011916  0E03               	movlw	high _dbuf
 30954  011918  6E35               	movwf	(btemp+11)^0,c
 30955  01191A  0EE6               	movlw	-26
 30956  01191C  50E3               	movf	plusw1,w,c
 30957  01191E  2634               	addwf	(btemp+10)^0,f,c
 30958  011920  0EE7               	movlw	-25
 30959  011922  50E3               	movf	plusw1,w,c
 30960  011924  2235               	addwfc	(btemp+11)^0,f,c
 30961  011926  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30962  01192C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30963  011932  EC17  F003         	call	_strcpy	;wreg free
 30964  011936                     l15624:
 30965                           
 30966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 30967                           ;stkvar	_w @ sp[(-56)+38]
 30968  011936  50E1               	movf	fsr1l,w,c
 30969  011938  0FEE               	addlw	-18
 30970  01193A  6ED9               	movwf	fsr2l,c
 30971  01193C  50E2               	movf	fsr1h,w,c
 30972  01193E  6EDA               	movwf	fsr2h,c
 30973  011940  0EFF               	movlw	255
 30974  011942  22DA               	addwfc	fsr2h,f,c
 30975  011944  0EFD               	movlw	253
 30976  011946  26DE               	addwf	postinc2,f,c
 30977  011948  0EFF               	movlw	255
 30978  01194A  22DD               	addwfc	postdec2,f,c
 30979  01194C                     l15626:
 30980                           
 30981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 30982                           ;stkvar	_w @ sp[(-56)+38]
 30983  01194C  0EEE               	movlw	-18
 30984  01194E  006F FF8F FFE6     	movff	plusw1,postinc1
 30985  011954  006F FF8F FFE6     	movff	plusw1,postinc1
 30986  01195A  0E54               	movlw	low _dbuf
 30987  01195C  6EE6               	movwf	postinc1,c
 30988  01195E  0E03               	movlw	high _dbuf
 30989  011960  6EE6               	movwf	postinc1,c
 30990                           
 30991                           ;stkvar	_fp @ sp[(-60)+-2]
 30992  011962  0EC2               	movlw	-62
 30993  011964  006F FF8F FFE6     	movff	plusw1,postinc1
 30994  01196A  006F FF8F FFE6     	movff	plusw1,postinc1
 30995  011970  EC5B  F0FE         	call	_pad	;wreg free
 30996  011974  EFAD  F094         	goto	l2531
 30997  011978                     l15630:
 30998                           
 30999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 31000                           ;stkvar	_g @ sp[(-56)+16]
 31001  011978  0ED8               	movlw	-40
 31002  01197A  006F FF8F FFE6     	movff	plusw1,postinc1
 31003  011980  006F FF8F FFE6     	movff	plusw1,postinc1
 31004  011986  006F FF8F FFE6     	movff	plusw1,postinc1
 31005  01198C  006F FF8F FFE6     	movff	plusw1,postinc1
 31006  011992  EC31  F0F0         	call	___fpclassifyf	;wreg free
 31007  011996  502A               	movf	btemp^0,w,c
 31008  011998  102B               	iorwf	(btemp+1)^0,w,c
 31009  01199A  A4D8               	btfss	status,2,c
 31010  01199C  D056               	goto	l15648
 31011  01199E  0EBF               	movlw	191
 31012  0119A0  6E34               	movwf	(btemp+10)^0,c
 31013  0119A2  0EFF               	movlw	255
 31014  0119A4  6E35               	movwf	(btemp+11)^0,c
 31015                           
 31016                           ;stkvar	_c @ sp[(-56)+-7]
 31017  0119A6  0EC1               	movlw	-63
 31018  0119A8  50E3               	movf	plusw1,w,c
 31019  0119AA  6E32               	movwf	(btemp+8)^0,c
 31020  0119AC  6A33               	clrf	(btemp+9)^0,c
 31021  0119AE  5034               	movf	(btemp+10)^0,w,c
 31022  0119B0  2632               	addwf	(btemp+8)^0,f,c
 31023  0119B2  5035               	movf	(btemp+11)^0,w,c
 31024  0119B4  2233               	addwfc	(btemp+9)^0,f,c
 31025  0119B6  5033               	movf	(btemp+9)^0,w,c
 31026  0119B8  E106               	bnz	u14680
 31027  0119BA  0E1A               	movlw	26
 31028  0119BC  5C32               	subwf	(btemp+8)^0,w,c
 31029  0119BE  B0D8               	btfsc	status,0,c
 31030  0119C0  D002               	goto	u14680
 31031  0119C2  0E01               	movlw	1
 31032  0119C4  D001               	goto	u14690
 31033  0119C6                     u14680:
 31034  0119C6  0E00               	movlw	0
 31035  0119C8                     u14690:
 31036  0119C8  6E34               	movwf	(btemp+10)^0,c
 31037  0119CA  6A35               	clrf	(btemp+11)^0,c
 31038                           
 31039                           ;stkvar	_efgtoa$6643 @ sp[(-56)+6]
 31040  0119CC  0ECE               	movlw	-50
 31041  0119CE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31042  0119D4  0ECF               	movlw	-49
 31043  0119D6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31044                           
 31045                           ;stkvar	_efgtoa$6643 @ sp[(-56)+6]
 31046  0119DC  0ECE               	movlw	-50
 31047  0119DE  006F FF8C  F02A    	movff	plusw1,btemp
 31048  0119E4  0ECF               	movlw	-49
 31049  0119E6  50E3               	movf	plusw1,w,c
 31050  0119E8  102A               	iorwf	btemp^0,w,c
 31051  0119EA  B4D8               	btfsc	status,2,c
 31052  0119EC  D017               	goto	l15640
 31053                           
 31054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 31055  0119EE  0EDE               	movlw	low STR_100
 31056  0119F0  6EE6               	movwf	postinc1,c
 31057  0119F2  0EFF               	movlw	high STR_100
 31058  0119F4  6EE6               	movwf	postinc1,c
 31059                           
 31060                           ;stkvar	_n @ sp[(-58)+32]
 31061  0119F6  0E54               	movlw	low _dbuf
 31062  0119F8  6E34               	movwf	(btemp+10)^0,c
 31063  0119FA  0E03               	movlw	high _dbuf
 31064  0119FC  6E35               	movwf	(btemp+11)^0,c
 31065  0119FE  0EE6               	movlw	-26
 31066  011A00  50E3               	movf	plusw1,w,c
 31067  011A02  2634               	addwf	(btemp+10)^0,f,c
 31068  011A04  0EE7               	movlw	-25
 31069  011A06  50E3               	movf	plusw1,w,c
 31070  011A08  2235               	addwfc	(btemp+11)^0,f,c
 31071  011A0A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31072  011A10  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31073  011A16  EC17  F003         	call	_strcpy	;wreg free
 31074                           
 31075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 31076  011A1A  D78D               	goto	l15624
 31077  011A1C                     l15640:
 31078                           
 31079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 31080  011A1C  0EE6               	movlw	low STR_101
 31081  011A1E  6EE6               	movwf	postinc1,c
 31082  011A20  0EFF               	movlw	high STR_101
 31083  011A22  6EE6               	movwf	postinc1,c
 31084                           
 31085                           ;stkvar	_n @ sp[(-58)+32]
 31086  011A24  0E54               	movlw	low _dbuf
 31087  011A26  6E34               	movwf	(btemp+10)^0,c
 31088  011A28  0E03               	movlw	high _dbuf
 31089  011A2A  6E35               	movwf	(btemp+11)^0,c
 31090  011A2C  0EE6               	movlw	-26
 31091  011A2E  50E3               	movf	plusw1,w,c
 31092  011A30  2634               	addwf	(btemp+10)^0,f,c
 31093  011A32  0EE7               	movlw	-25
 31094  011A34  50E3               	movf	plusw1,w,c
 31095  011A36  2235               	addwfc	(btemp+11)^0,f,c
 31096  011A38  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31097  011A3E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31098  011A44  EC17  F003         	call	_strcpy	;wreg free
 31099  011A48  D776               	goto	l15624
 31100  011A4A                     l15648:
 31101                           
 31102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 31103  011A4A  0E00               	movlw	0
 31104  011A4C  6E32               	movwf	(btemp+8)^0,c
 31105  011A4E  0E00               	movlw	0
 31106  011A50  6E33               	movwf	(btemp+9)^0,c
 31107  011A52  0E80               	movlw	128
 31108  011A54  6E34               	movwf	(btemp+10)^0,c
 31109  011A56  0E3F               	movlw	63
 31110  011A58  6E35               	movwf	(btemp+11)^0,c
 31111                           
 31112                           ;stkvar	_u @ sp[(-56)+12]
 31113  011A5A  0ED4               	movlw	-44
 31114  011A5C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31115  011A62  0ED5               	movlw	-43
 31116  011A64  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31117  011A6A  0ED6               	movlw	-42
 31118  011A6C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31119  011A72  0ED7               	movlw	-41
 31120  011A74  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31121                           
 31122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 31123                           ;stkvar	_e @ sp[(-56)+34]
 31124  011A7A  0EEA               	movlw	-22
 31125  011A7C  6AE3               	clrf	plusw1,c
 31126  011A7E  0EEB               	movlw	-21
 31127  011A80  6AE3               	clrf	plusw1,c
 31128                           
 31129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 31130  011A82  0E00               	movlw	0
 31131  011A84  6EE6               	movwf	postinc1,c
 31132  011A86  0E00               	movlw	0
 31133  011A88  6EE6               	movwf	postinc1,c
 31134  011A8A  0E00               	movlw	0
 31135  011A8C  6EE6               	movwf	postinc1,c
 31136  011A8E  0E00               	movlw	0
 31137  011A90  6EE6               	movwf	postinc1,c
 31138                           
 31139                           ;stkvar	_g @ sp[(-60)+16]
 31140  011A92  0ED4               	movlw	-44
 31141  011A94  006F FF8F FFE6     	movff	plusw1,postinc1
 31142  011A9A  006F FF8F FFE6     	movff	plusw1,postinc1
 31143  011AA0  006F FF8F FFE6     	movff	plusw1,postinc1
 31144  011AA6  006F FF8F FFE6     	movff	plusw1,postinc1
 31145  011AAC  ECE8  F003         	call	___fleq	;wreg free
 31146  011AB0  A02A               	btfss	btemp& (0+255),0,c
 31147  011AB2  D039               	goto	l15660
 31148  011AB4  D0BC               	goto	u14730
 31149  011AB6                     l15656:
 31150                           
 31151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 31152  011AB6  0E00               	movlw	0
 31153  011AB8  6EE6               	movwf	postinc1,c
 31154  011ABA  0E00               	movlw	0
 31155  011ABC  6EE6               	movwf	postinc1,c
 31156  011ABE  0E20               	movlw	32
 31157  011AC0  6EE6               	movwf	postinc1,c
 31158  011AC2  0E41               	movlw	65
 31159  011AC4  6EE6               	movwf	postinc1,c
 31160                           
 31161                           ;stkvar	_u @ sp[(-60)+12]
 31162  011AC6  0ED0               	movlw	-48
 31163  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 31164  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 31165  011AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 31166  011ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 31167  011AE0  EC32  F0B3         	call	___flmul	;wreg free
 31168                           
 31169                           ;stkvar	_u @ sp[(-56)+12]
 31170  011AE4  0ED4               	movlw	-44
 31171  011AE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31172  011AEC  0ED5               	movlw	-43
 31173  011AEE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31174  011AF4  0ED6               	movlw	-42
 31175  011AF6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31176  011AFC  0ED7               	movlw	-41
 31177  011AFE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31178                           
 31179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 31180                           ;stkvar	_e @ sp[(-56)+34]
 31181  011B04  0EEA               	movlw	-22
 31182  011B06  50E3               	movf	plusw1,w,c
 31183  011B08  0F01               	addlw	1
 31184  011B0A  6E2A               	movwf	btemp^0,c
 31185  011B0C  0EEA               	movlw	-22
 31186  011B0E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31187  011B14  6A2A               	clrf	btemp^0,c
 31188  011B16  0EEB               	movlw	-21
 31189  011B18  50E3               	movf	plusw1,w,c
 31190  011B1A  202A               	addwfc	btemp^0,w,c
 31191  011B1C  6E2A               	movwf	btemp^0,c
 31192  011B1E  0EEB               	movlw	-21
 31193  011B20  0060  F0AB  FFE3   	movff	btemp,plusw1
 31194  011B26                     l15660:
 31195                           
 31196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 31197  011B26  0E00               	movlw	0
 31198  011B28  6EE6               	movwf	postinc1,c
 31199  011B2A  0E00               	movlw	0
 31200  011B2C  6EE6               	movwf	postinc1,c
 31201  011B2E  0E20               	movlw	32
 31202  011B30  6EE6               	movwf	postinc1,c
 31203  011B32  0E41               	movlw	65
 31204  011B34  6EE6               	movwf	postinc1,c
 31205                           
 31206                           ;stkvar	_u @ sp[(-60)+12]
 31207  011B36  0ED0               	movlw	-48
 31208  011B38  006F FF8F FFE6     	movff	plusw1,postinc1
 31209  011B3E  006F FF8F FFE6     	movff	plusw1,postinc1
 31210  011B44  006F FF8F FFE6     	movff	plusw1,postinc1
 31211  011B4A  006F FF8F FFE6     	movff	plusw1,postinc1
 31212  011B50  EC32  F0B3         	call	___flmul	;wreg free
 31213  011B54  0060  F0AB  FFE6   	movff	btemp,postinc1
 31214  011B5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31215  011B60  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31216  011B66  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31217                           
 31218                           ;stkvar	_g @ sp[(-60)+16]
 31219  011B6C  0ED4               	movlw	-44
 31220  011B6E  006F FF8F FFE6     	movff	plusw1,postinc1
 31221  011B74  006F FF8F FFE6     	movff	plusw1,postinc1
 31222  011B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 31223  011B80  006F FF8F FFE6     	movff	plusw1,postinc1
 31224  011B86  EC35  F0F6         	call	___flge	;wreg free
 31225  011B8A  A02A               	btfss	btemp& (0+255),0,c
 31226  011B8C  D032               	goto	l15666
 31227  011B8E  D793               	goto	l15656
 31228  011B90                     l15662:
 31229                           
 31230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 31231  011B90  0E00               	movlw	0
 31232  011B92  6EE6               	movwf	postinc1,c
 31233  011B94  0E00               	movlw	0
 31234  011B96  6EE6               	movwf	postinc1,c
 31235  011B98  0E20               	movlw	32
 31236  011B9A  6EE6               	movwf	postinc1,c
 31237  011B9C  0E41               	movlw	65
 31238  011B9E  6EE6               	movwf	postinc1,c
 31239                           
 31240                           ;stkvar	_u @ sp[(-60)+12]
 31241  011BA0  0ED0               	movlw	-48
 31242  011BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 31243  011BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 31244  011BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 31245  011BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 31246  011BBA  EC64  F0C1         	call	___fldiv	;wreg free
 31247                           
 31248                           ;stkvar	_u @ sp[(-56)+12]
 31249  011BBE  0ED4               	movlw	-44
 31250  011BC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31251  011BC6  0ED5               	movlw	-43
 31252  011BC8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31253  011BCE  0ED6               	movlw	-42
 31254  011BD0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31255  011BD6  0ED7               	movlw	-41
 31256  011BD8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31257                           
 31258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 31259                           ;stkvar	_e @ sp[(-56)+34]
 31260  011BDE  50E1               	movf	fsr1l,w,c
 31261  011BE0  0FEA               	addlw	-22
 31262  011BE2  6ED9               	movwf	fsr2l,c
 31263  011BE4  50E2               	movf	fsr1h,w,c
 31264  011BE6  6EDA               	movwf	fsr2h,c
 31265  011BE8  0EFF               	movlw	255
 31266  011BEA  22DA               	addwfc	fsr2h,f,c
 31267  011BEC  06DE               	decf	postinc2,f,c
 31268  011BEE  0E00               	movlw	0
 31269  011BF0  5ADD               	subwfb	postdec2,f,c
 31270  011BF2                     l15666:
 31271                           
 31272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 31273                           ;stkvar	_u @ sp[(-56)+12]
 31274  011BF2  0ED4               	movlw	-44
 31275  011BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 31276  011BFA  006F FF8F FFE6     	movff	plusw1,postinc1
 31277  011C00  006F FF8F FFE6     	movff	plusw1,postinc1
 31278  011C06  006F FF8F FFE6     	movff	plusw1,postinc1
 31279                           
 31280                           ;stkvar	_g @ sp[(-60)+16]
 31281  011C0C  0ED4               	movlw	-44
 31282  011C0E  006F FF8F FFE6     	movff	plusw1,postinc1
 31283  011C14  006F FF8F FFE6     	movff	plusw1,postinc1
 31284  011C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 31285  011C20  006F FF8F FFE6     	movff	plusw1,postinc1
 31286  011C26  EC35  F0F6         	call	___flge	;wreg free
 31287  011C2A  A02A               	btfss	btemp& (0+255),0,c
 31288  011C2C  D7B1               	goto	l15662
 31289  011C2E                     u14730:
 31290                           
 31291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 31292                           ;stkvar	_c @ sp[(-56)+-7]
 31293  011C2E  0EC1               	movlw	-63
 31294  011C30  50E3               	movf	plusw1,w,c
 31295  011C32  6EE6               	movwf	postinc1,c
 31296  011C34  0E00               	movlw	0
 31297  011C36  6EE6               	movwf	postinc1,c
 31298  011C38  EC40  F00A         	call	_tolower	;wreg free
 31299                           
 31300                           ;stkvar	_mode @ sp[(-56)+54]
 31301  011C3C  0EFE               	movlw	-2
 31302  011C3E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31303                           
 31304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 31305                           ;stkvar	_mode @ sp[(-56)+54]
 31306                           ;stkvar	_nmode @ sp[(-56)+55]
 31307  011C44  0EFE               	movlw	-2
 31308  011C46  006F FF8C  F02A    	movff	plusw1,btemp
 31309  011C4C  0EFF               	movlw	-1
 31310  011C4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31311                           
 31312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 31313                           ;stkvar	_mode @ sp[(-56)+54]
 31314  011C54  0EFE               	movlw	-2
 31315  011C56  006F FF8C  F02A    	movff	plusw1,btemp
 31316  011C5C  0E67               	movlw	103
 31317  011C5E  182A               	xorwf	btemp^0,w,c
 31318  011C60  A4D8               	btfss	status,2,c
 31319  011C62  D025               	goto	l15684
 31320                           
 31321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 31322  011C64  504C               	movf	_prec^0,w,c
 31323  011C66  104D               	iorwf	(_prec+1)^0,w,c
 31324  011C68  A4D8               	btfss	status,2,c
 31325  011C6A  D004               	goto	l15678
 31326                           
 31327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 31328  011C6C  0E00               	movlw	0
 31329  011C6E  6E4D               	movwf	(_prec+1)^0,c
 31330  011C70  0E01               	movlw	1
 31331  011C72  6E4C               	movwf	_prec^0,c
 31332  011C74                     l15678:
 31333                           
 31334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 31335  011C74  BE4D               	btfsc	(_prec+1)^0,7,c
 31336  011C76  D005               	goto	u14760
 31337  011C78  504D               	movf	(_prec+1)^0,w,c
 31338  011C7A  E110               	bnz	l15682
 31339  011C7C  044C               	decf	_prec^0,w,c
 31340  011C7E  B0D8               	btfsc	status,0,c
 31341  011C80  D00D               	goto	l15682
 31342  011C82                     u14760:
 31343  011C82  0E06               	movlw	6
 31344  011C84  6E34               	movwf	(btemp+10)^0,c
 31345  011C86  0E00               	movlw	0
 31346  011C88  6E35               	movwf	(btemp+11)^0,c
 31347                           
 31348                           ;stkvar	_p @ sp[(-56)+40]
 31349  011C8A  0EF0               	movlw	-16
 31350  011C8C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31351  011C92  0EF1               	movlw	-15
 31352  011C94  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31353  011C9A  D00C               	goto	l15690
 31354  011C9C                     l15682:
 31355                           
 31356                           ;stkvar	_p @ sp[(-56)+40]
 31357  011C9C  0EF0               	movlw	-16
 31358  011C9E  0060  F133  FFE3   	movff	_prec,plusw1
 31359  011CA4  0EF1               	movlw	-15
 31360  011CA6  0060  F137  FFE3   	movff	_prec+1,plusw1
 31361  011CAC  D003               	goto	l15690
 31362  011CAE                     l15684:
 31363                           
 31364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 31365  011CAE  AE4D               	btfss	(_prec+1)^0,7,c
 31366  011CB0  D7F5               	goto	l15682
 31367  011CB2  D7E7               	goto	u14760
 31368  011CB4                     l15690:
 31369                           
 31370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 31371                           ;stkvar	_mode @ sp[(-56)+54]
 31372  011CB4  0EFE               	movlw	-2
 31373  011CB6  006F FF8C  F02A    	movff	plusw1,btemp
 31374  011CBC  0E67               	movlw	103
 31375  011CBE  182A               	xorwf	btemp^0,w,c
 31376  011CC0  A4D8               	btfss	status,2,c
 31377  011CC2  D02F               	goto	l15700
 31378                           
 31379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 31380                           ;stkvar	_e @ sp[(-56)+34]
 31381  011CC4  0EEB               	movlw	-21
 31382  011CC6  AEE3               	btfss	plusw1,7,c
 31383  011CC8  D00E               	goto	u14790
 31384  011CCA  0EEA               	movlw	-22
 31385  011CCC  006F FF8C  F02A    	movff	plusw1,btemp
 31386  011CD2  0EFC               	movlw	252
 31387  011CD4  5E2A               	subwf	btemp^0,f,c
 31388  011CD6  0EEB               	movlw	-21
 31389  011CD8  006F FF8C  F02A    	movff	plusw1,btemp
 31390  011CDE  0EFF               	movlw	255
 31391  011CE0  5A2A               	subwfb	btemp^0,f,c
 31392  011CE2  A0D8               	btfss	status,0,c
 31393  011CE4  D018               	goto	l15698
 31394  011CE6                     u14790:
 31395                           
 31396                           ;stkvar	_e @ sp[(-56)+34]
 31397                           ;stkvar	_p @ sp[(-56)+40]
 31398  011CE6  0EF0               	movlw	-16
 31399  011CE8  50E3               	movf	plusw1,w,c
 31400  011CEA  0FFF               	addlw	255
 31401  011CEC  6E34               	movwf	(btemp+10)^0,c
 31402  011CEE  0EF1               	movlw	-15
 31403  011CF0  006F FF8C  F035    	movff	plusw1,btemp+11
 31404  011CF6  0EFF               	movlw	255
 31405  011CF8  2235               	addwfc	(btemp+11)^0,f,c
 31406  011CFA  0EEA               	movlw	-22
 31407  011CFC  50E3               	movf	plusw1,w,c
 31408  011CFE  5C34               	subwf	(btemp+10)^0,w,c
 31409  011D00  5035               	movf	(btemp+11)^0,w,c
 31410  011D02  0A80               	xorlw	128
 31411  011D04  6E2A               	movwf	btemp^0,c
 31412  011D06  0EEB               	movlw	-21
 31413  011D08  50E3               	movf	plusw1,w,c
 31414  011D0A  0A80               	xorlw	128
 31415  011D0C  582A               	subwfb	btemp^0,w,c
 31416  011D0E  A0D8               	btfss	status,0,c
 31417  011D10  D002               	goto	l15698
 31418                           
 31419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 31420  011D12  0E66               	movlw	102
 31421  011D14  D001               	goto	L32
 31422  011D16                     l15698:
 31423                           
 31424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 31425  011D16  0E65               	movlw	101
 31426  011D18                     L32:
 31427  011D18  6E35               	movwf	(btemp+11)^0,c
 31428                           
 31429                           ;stkvar	_nmode @ sp[(-56)+55]
 31430  011D1A  0EFF               	movlw	-1
 31431  011D1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31432  011D22                     l15700:
 31433                           
 31434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 31435                           ;stkvar	_p @ sp[(-56)+40]
 31436                           ;stkvar	_m @ sp[(-56)+48]
 31437  011D22  0EF0               	movlw	-16
 31438  011D24  006F FF8C  F02A    	movff	plusw1,btemp
 31439  011D2A  0EF8               	movlw	-8
 31440  011D2C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31441  011D32  0EF1               	movlw	-15
 31442  011D34  006F FF8C  F02A    	movff	plusw1,btemp
 31443  011D3A  0EF9               	movlw	-7
 31444  011D3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31445                           
 31446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 31447                           ;stkvar	_mode @ sp[(-56)+54]
 31448  011D42  0EFE               	movlw	-2
 31449  011D44  006F FF8C  F02A    	movff	plusw1,btemp
 31450  011D4A  0E67               	movlw	103
 31451  011D4C  182A               	xorwf	btemp^0,w,c
 31452  011D4E  A4D8               	btfss	status,2,c
 31453  011D50  D00B               	goto	u14830
 31454                           
 31455                           ;stkvar	_nmode @ sp[(-56)+55]
 31456  011D52  0EFF               	movlw	-1
 31457  011D54  006F FF8C  F02A    	movff	plusw1,btemp
 31458  011D5A  0E66               	movlw	102
 31459  011D5C  182A               	xorwf	btemp^0,w,c
 31460  011D5E  A4D8               	btfss	status,2,c
 31461  011D60  D014               	goto	l2560
 31462                           
 31463                           ;stkvar	_e @ sp[(-56)+34]
 31464  011D62  0EEB               	movlw	-21
 31465  011D64  AEE3               	btfss	plusw1,7,c
 31466  011D66  D011               	goto	l2560
 31467  011D68                     u14830:
 31468                           
 31469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 31470                           ;stkvar	_m @ sp[(-56)+48]
 31471  011D68  0EF8               	movlw	-8
 31472  011D6A  50E3               	movf	plusw1,w,c
 31473  011D6C  0F01               	addlw	1
 31474  011D6E  6E2A               	movwf	btemp^0,c
 31475  011D70  0EF8               	movlw	-8
 31476  011D72  0060  F0AB  FFE3   	movff	btemp,plusw1
 31477  011D78  6A2A               	clrf	btemp^0,c
 31478  011D7A  0EF9               	movlw	-7
 31479  011D7C  50E3               	movf	plusw1,w,c
 31480  011D7E  202A               	addwfc	btemp^0,w,c
 31481  011D80  6E2A               	movwf	btemp^0,c
 31482  011D82  0EF9               	movlw	-7
 31483  011D84  0060  F0AB  FFE3   	movff	btemp,plusw1
 31484  011D8A                     l2560:
 31485                           
 31486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 31487                           ;stkvar	_nmode @ sp[(-56)+55]
 31488  011D8A  0EFF               	movlw	-1
 31489  011D8C  006F FF8C  F02A    	movff	plusw1,btemp
 31490  011D92  0E66               	movlw	102
 31491  011D94  182A               	xorwf	btemp^0,w,c
 31492  011D96  A4D8               	btfss	status,2,c
 31493  011D98  D03B               	goto	l15720
 31494                           
 31495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 31496                           ;stkvar	_e @ sp[(-56)+34]
 31497  011D9A  0EEB               	movlw	-21
 31498  011D9C  AEE3               	btfss	plusw1,7,c
 31499  011D9E  D01C               	goto	l15716
 31500                           
 31501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 31502  011DA0  0E00               	movlw	0
 31503  011DA2  6E32               	movwf	(btemp+8)^0,c
 31504  011DA4  0E00               	movlw	0
 31505  011DA6  6E33               	movwf	(btemp+9)^0,c
 31506  011DA8  0E80               	movlw	128
 31507  011DAA  6E34               	movwf	(btemp+10)^0,c
 31508  011DAC  0E3F               	movlw	63
 31509  011DAE  6E35               	movwf	(btemp+11)^0,c
 31510                           
 31511                           ;stkvar	_u @ sp[(-56)+12]
 31512  011DB0  0ED4               	movlw	-44
 31513  011DB2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31514  011DB8  0ED5               	movlw	-43
 31515  011DBA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31516  011DC0  0ED6               	movlw	-42
 31517  011DC2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31518  011DC8  0ED7               	movlw	-41
 31519  011DCA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31520                           
 31521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 31522                           ;stkvar	_e @ sp[(-56)+34]
 31523  011DD0  0EEA               	movlw	-22
 31524  011DD2  6AE3               	clrf	plusw1,c
 31525  011DD4  0EEB               	movlw	-21
 31526  011DD6  6AE3               	clrf	plusw1,c
 31527  011DD8                     l15716:
 31528                           
 31529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 31530                           ;stkvar	_mode @ sp[(-56)+54]
 31531  011DD8  0EFE               	movlw	-2
 31532  011DDA  006F FF8C  F02A    	movff	plusw1,btemp
 31533  011DE0  0E67               	movlw	103
 31534  011DE2  182A               	xorwf	btemp^0,w,c
 31535  011DE4  B4D8               	btfsc	status,2,c
 31536  011DE6  D014               	goto	l15720
 31537                           
 31538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 31539                           ;stkvar	_e @ sp[(-56)+34]
 31540                           ;stkvar	_m @ sp[(-56)+48]
 31541  011DE8  0EF8               	movlw	-8
 31542  011DEA  50E3               	movf	plusw1,w,c
 31543  011DEC  6E2A               	movwf	btemp^0,c
 31544  011DEE  0EEA               	movlw	-22
 31545  011DF0  50E3               	movf	plusw1,w,c
 31546  011DF2  262A               	addwf	btemp^0,f,c
 31547  011DF4  0EF8               	movlw	-8
 31548  011DF6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31549  011DFC  0EF9               	movlw	-7
 31550  011DFE  50E3               	movf	plusw1,w,c
 31551  011E00  6E2A               	movwf	btemp^0,c
 31552  011E02  0EEB               	movlw	-21
 31553  011E04  50E3               	movf	plusw1,w,c
 31554  011E06  222A               	addwfc	btemp^0,f,c
 31555  011E08  0EF9               	movlw	-7
 31556  011E0A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31557  011E10                     l15720:
 31558                           
 31559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 31560                           ;stkvar	_i @ sp[(-56)+36]
 31561  011E10  0EEC               	movlw	-20
 31562  011E12  6AE3               	clrf	plusw1,c
 31563  011E14  0EED               	movlw	-19
 31564  011E16  6AE3               	clrf	plusw1,c
 31565                           
 31566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 31567                           ;stkvar	_g @ sp[(-56)+16]
 31568  011E18  0ED8               	movlw	-40
 31569  011E1A  006F FF8C  F032    	movff	plusw1,btemp+8
 31570  011E20  0ED9               	movlw	-39
 31571  011E22  006F FF8C  F033    	movff	plusw1,btemp+9
 31572  011E28  0EDA               	movlw	-38
 31573  011E2A  006F FF8C  F034    	movff	plusw1,btemp+10
 31574  011E30  0EDB               	movlw	-37
 31575  011E32  006F FF8C  F035    	movff	plusw1,btemp+11
 31576                           
 31577                           ;stkvar	_h @ sp[(-56)+24]
 31578  011E38  0EE0               	movlw	-32
 31579  011E3A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31580  011E40  0EE1               	movlw	-31
 31581  011E42  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31582  011E48  0EE2               	movlw	-30
 31583  011E4A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31584  011E50  0EE3               	movlw	-29
 31585  011E52  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31586                           
 31587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 31588                           ;stkvar	_u @ sp[(-56)+12]
 31589  011E58  0ED4               	movlw	-44
 31590  011E5A  006F FF8C  F032    	movff	plusw1,btemp+8
 31591  011E60  0ED5               	movlw	-43
 31592  011E62  006F FF8C  F033    	movff	plusw1,btemp+9
 31593  011E68  0ED6               	movlw	-42
 31594  011E6A  006F FF8C  F034    	movff	plusw1,btemp+10
 31595  011E70  0ED7               	movlw	-41
 31596  011E72  006F FF8C  F035    	movff	plusw1,btemp+11
 31597                           
 31598                           ;stkvar	_ou @ sp[(-56)+28]
 31599  011E78  0EE4               	movlw	-28
 31600  011E7A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31601  011E80  0EE5               	movlw	-27
 31602  011E82  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31603  011E88  0EE6               	movlw	-26
 31604  011E8A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31605  011E90  0EE7               	movlw	-25
 31606  011E92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31607                           
 31608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31609  011E98  D0D6               	goto	l15736
 31610  011E9A                     l15726:
 31611                           
 31612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 31613                           ;stkvar	_u @ sp[(-56)+12]
 31614  011E9A  0ED4               	movlw	-44
 31615  011E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 31616  011EA2  006F FF8F FFE6     	movff	plusw1,postinc1
 31617  011EA8  006F FF8F FFE6     	movff	plusw1,postinc1
 31618  011EAE  006F FF8F FFE6     	movff	plusw1,postinc1
 31619                           
 31620                           ;stkvar	_h @ sp[(-60)+24]
 31621  011EB4  0EDC               	movlw	-36
 31622  011EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 31623  011EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 31624  011EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 31625  011EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 31626  011ECE  EC64  F0C1         	call	___fldiv	;wreg free
 31627  011ED2  0060  F0AB  FFE6   	movff	btemp,postinc1
 31628  011ED8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31629  011EDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31630  011EE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31631  011EEA  EC7B  F0D5         	call	_floorf	;wreg free
 31632                           
 31633                           ;stkvar	_l @ sp[(-56)+20]
 31634  011EEE  0EDC               	movlw	-36
 31635  011EF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31636  011EF6  0EDD               	movlw	-35
 31637  011EF8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31638  011EFE  0EDE               	movlw	-34
 31639  011F00  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31640  011F06  0EDF               	movlw	-33
 31641  011F08  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31642                           
 31643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 31644                           ;stkvar	_l @ sp[(-56)+20]
 31645  011F0E  0EDC               	movlw	-36
 31646  011F10  006F FF8F FFE6     	movff	plusw1,postinc1
 31647  011F16  006F FF8F FFE6     	movff	plusw1,postinc1
 31648  011F1C  006F FF8F FFE6     	movff	plusw1,postinc1
 31649  011F22  006F FF8F FFE6     	movff	plusw1,postinc1
 31650  011F28  ECC9  F0F4         	call	___fltol	;wreg free
 31651  011F2C  0060  F0A8  F034   	movff	btemp,btemp+10
 31652  011F32  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31653                           
 31654                           ;stkvar	_d @ sp[(-56)+44]
 31655  011F38  0EF4               	movlw	-12
 31656  011F3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31657  011F40  0EF5               	movlw	-11
 31658  011F42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31659                           
 31660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 31661                           ;stkvar	_u @ sp[(-56)+12]
 31662  011F48  0ED4               	movlw	-44
 31663  011F4A  006F FF8F FFE6     	movff	plusw1,postinc1
 31664  011F50  006F FF8F FFE6     	movff	plusw1,postinc1
 31665  011F56  006F FF8F FFE6     	movff	plusw1,postinc1
 31666  011F5C  006F FF8F FFE6     	movff	plusw1,postinc1
 31667                           
 31668                           ;stkvar	_l @ sp[(-60)+20]
 31669  011F62  0ED8               	movlw	-40
 31670  011F64  006F FF8F FFE6     	movff	plusw1,postinc1
 31671  011F6A  006F FF8F FFE6     	movff	plusw1,postinc1
 31672  011F70  006F FF8F FFE6     	movff	plusw1,postinc1
 31673  011F76  006F FF8F FFE6     	movff	plusw1,postinc1
 31674  011F7C  EC32  F0B3         	call	___flmul	;wreg free
 31675  011F80  0060  F0AB  FFE6   	movff	btemp,postinc1
 31676  011F86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31677  011F8C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31678  011F92  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31679                           
 31680                           ;stkvar	_h @ sp[(-60)+24]
 31681  011F98  0EDC               	movlw	-36
 31682  011F9A  006F FF8F FFE6     	movff	plusw1,postinc1
 31683  011FA0  006F FF8F FFE6     	movff	plusw1,postinc1
 31684  011FA6  006F FF8F FFE6     	movff	plusw1,postinc1
 31685  011FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 31686  011FB2  EC7A  F010         	call	___flsub	;wreg free
 31687                           
 31688                           ;stkvar	_h @ sp[(-56)+24]
 31689  011FB6  0EE0               	movlw	-32
 31690  011FB8  0060  F0AB  FFE3   	movff	btemp,plusw1
 31691  011FBE  0EE1               	movlw	-31
 31692  011FC0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31693  011FC6  0EE2               	movlw	-30
 31694  011FC8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31695  011FCE  0EE3               	movlw	-29
 31696  011FD0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31697                           
 31698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 31699  011FD6  0E00               	movlw	0
 31700  011FD8  6EE6               	movwf	postinc1,c
 31701  011FDA  0E00               	movlw	0
 31702  011FDC  6EE6               	movwf	postinc1,c
 31703  011FDE  0E20               	movlw	32
 31704  011FE0  6EE6               	movwf	postinc1,c
 31705  011FE2  0E41               	movlw	65
 31706  011FE4  6EE6               	movwf	postinc1,c
 31707                           
 31708                           ;stkvar	_u @ sp[(-60)+12]
 31709  011FE6  0ED0               	movlw	-48
 31710  011FE8  006F FF8F FFE6     	movff	plusw1,postinc1
 31711  011FEE  006F FF8F FFE6     	movff	plusw1,postinc1
 31712  011FF4  006F FF8F FFE6     	movff	plusw1,postinc1
 31713  011FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 31714  012000  EC64  F0C1         	call	___fldiv	;wreg free
 31715                           
 31716                           ;stkvar	_u @ sp[(-56)+12]
 31717  012004  0ED4               	movlw	-44
 31718  012006  0060  F0AB  FFE3   	movff	btemp,plusw1
 31719  01200C  0ED5               	movlw	-43
 31720  01200E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31721  012014  0ED6               	movlw	-42
 31722  012016  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31723  01201C  0ED7               	movlw	-41
 31724  01201E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31725                           
 31726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 31727                           ;stkvar	_i @ sp[(-56)+36]
 31728  012024  0EEC               	movlw	-20
 31729  012026  50E3               	movf	plusw1,w,c
 31730  012028  0F01               	addlw	1
 31731  01202A  6E2A               	movwf	btemp^0,c
 31732  01202C  0EEC               	movlw	-20
 31733  01202E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31734  012034  6A2A               	clrf	btemp^0,c
 31735  012036  0EED               	movlw	-19
 31736  012038  50E3               	movf	plusw1,w,c
 31737  01203A  202A               	addwfc	btemp^0,w,c
 31738  01203C  6E2A               	movwf	btemp^0,c
 31739  01203E  0EED               	movlw	-19
 31740  012040  0060  F0AB  FFE3   	movff	btemp,plusw1
 31741  012046                     l15736:
 31742                           
 31743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31744                           ;stkvar	_m @ sp[(-56)+48]
 31745                           ;stkvar	_i @ sp[(-56)+36]
 31746  012046  50E1               	movf	fsr1l,w,c
 31747  012048  0FEC               	addlw	-20
 31748  01204A  6ED9               	movwf	fsr2l,c
 31749  01204C  50E2               	movf	fsr1h,w,c
 31750  01204E  6EDA               	movwf	fsr2h,c
 31751  012050  0EFF               	movlw	255
 31752  012052  22DA               	addwfc	fsr2h,f,c
 31753  012054  0EF8               	movlw	-8
 31754  012056  50E3               	movf	plusw1,w,c
 31755  012058  5CDE               	subwf	postinc2,w,c
 31756  01205A  50DE               	movf	postinc2,w,c
 31757  01205C  0A80               	xorlw	128
 31758  01205E  6E2A               	movwf	btemp^0,c
 31759  012060  0EF9               	movlw	-7
 31760  012062  50E3               	movf	plusw1,w,c
 31761  012064  0A80               	xorlw	128
 31762  012066  582A               	subwfb	btemp^0,w,c
 31763  012068  A0D8               	btfss	status,0,c
 31764  01206A  D717               	goto	l15726
 31765                           
 31766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 31767  01206C  0E00               	movlw	0
 31768  01206E  6EE6               	movwf	postinc1,c
 31769  012070  0E00               	movlw	0
 31770  012072  6EE6               	movwf	postinc1,c
 31771  012074  0EA0               	movlw	160
 31772  012076  6EE6               	movwf	postinc1,c
 31773  012078  0E40               	movlw	64
 31774  01207A  6EE6               	movwf	postinc1,c
 31775                           
 31776                           ;stkvar	_u @ sp[(-60)+12]
 31777  01207C  0ED0               	movlw	-48
 31778  01207E  006F FF8F FFE6     	movff	plusw1,postinc1
 31779  012084  006F FF8F FFE6     	movff	plusw1,postinc1
 31780  01208A  006F FF8F FFE6     	movff	plusw1,postinc1
 31781  012090  006F FF8F FFE6     	movff	plusw1,postinc1
 31782  012096  EC32  F0B3         	call	___flmul	;wreg free
 31783                           
 31784                           ;stkvar	_l @ sp[(-56)+20]
 31785  01209A  0EDC               	movlw	-36
 31786  01209C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31787  0120A2  0EDD               	movlw	-35
 31788  0120A4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31789  0120AA  0EDE               	movlw	-34
 31790  0120AC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31791  0120B2  0EDF               	movlw	-33
 31792  0120B4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31793                           
 31794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 31795                           ;stkvar	_l @ sp[(-56)+20]
 31796  0120BA  0EDC               	movlw	-36
 31797  0120BC  006F FF8F FFE6     	movff	plusw1,postinc1
 31798  0120C2  006F FF8F FFE6     	movff	plusw1,postinc1
 31799  0120C8  006F FF8F FFE6     	movff	plusw1,postinc1
 31800  0120CE  006F FF8F FFE6     	movff	plusw1,postinc1
 31801                           
 31802                           ;stkvar	_h @ sp[(-60)+24]
 31803  0120D4  0EDC               	movlw	-36
 31804  0120D6  006F FF8F FFE6     	movff	plusw1,postinc1
 31805  0120DC  006F FF8F FFE6     	movff	plusw1,postinc1
 31806  0120E2  006F FF8F FFE6     	movff	plusw1,postinc1
 31807  0120E8  006F FF8F FFE6     	movff	plusw1,postinc1
 31808  0120EE  EC35  F0F6         	call	___flge	;wreg free
 31809  0120F2  A02A               	btfss	btemp& (0+255),0,c
 31810  0120F4  D021               	goto	u14900
 31811                           
 31812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 31813                           ;stkvar	_l @ sp[(-56)+20]
 31814                           
 31815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 31816                           
 31817                           ;stkvar	_l @ sp[(-56)+20]
 31818                           
 31819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 31820  0120F6  0EDC               	movlw	-36
 31821  0120F8  006F FF8F FFE6     	movff	plusw1,postinc1
 31822  0120FE  006F FF8F FFE6     	movff	plusw1,postinc1
 31823  012104  006F FF8F FFE6     	movff	plusw1,postinc1
 31824  01210A  006F FF8F FFE6     	movff	plusw1,postinc1
 31825                           
 31826                           ;stkvar	_h @ sp[(-60)+24]
 31827  012110  0EDC               	movlw	-36
 31828  012112  006F FF8F FFE6     	movff	plusw1,postinc1
 31829  012118  006F FF8F FFE6     	movff	plusw1,postinc1
 31830  01211E  006F FF8F FFE6     	movff	plusw1,postinc1
 31831  012124  006F FF8F FFE6     	movff	plusw1,postinc1
 31832  01212A  ECE8  F003         	call	___fleq	;wreg free
 31833  01212E  A02A               	btfss	btemp& (0+255),0,c
 31834  012130  D01B               	goto	l15750
 31835                           
 31836                           ;stkvar	_d @ sp[(-56)+44]
 31837  012132  0EF4               	movlw	-12
 31838  012134  B0E3               	btfsc	plusw1,0,c
 31839  012136  D018               	goto	l15750
 31840  012138                     u14900:
 31841                           
 31842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 31843  012138  0E00               	movlw	0
 31844  01213A  6E32               	movwf	(btemp+8)^0,c
 31845  01213C  0E00               	movlw	0
 31846  01213E  6E33               	movwf	(btemp+9)^0,c
 31847  012140  0E00               	movlw	0
 31848  012142  6E34               	movwf	(btemp+10)^0,c
 31849  012144  0E00               	movlw	0
 31850  012146  6E35               	movwf	(btemp+11)^0,c
 31851                           
 31852                           ;stkvar	_l @ sp[(-56)+20]
 31853  012148  0EDC               	movlw	-36
 31854  01214A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31855  012150  0EDD               	movlw	-35
 31856  012152  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31857  012158  0EDE               	movlw	-34
 31858  01215A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31859  012160  0EDF               	movlw	-33
 31860  012162  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31861  012168                     l15750:
 31862                           
 31863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 31864                           ;stkvar	_l @ sp[(-56)+20]
 31865  012168  0EDC               	movlw	-36
 31866  01216A  006F FF8F FFE6     	movff	plusw1,postinc1
 31867  012170  006F FF8F FFE6     	movff	plusw1,postinc1
 31868  012176  006F FF8F FFE6     	movff	plusw1,postinc1
 31869  01217C  006F FF8F FFE6     	movff	plusw1,postinc1
 31870                           
 31871                           ;stkvar	_g @ sp[(-60)+16]
 31872  012182  0ED4               	movlw	-44
 31873  012184  006F FF8F FFE6     	movff	plusw1,postinc1
 31874  01218A  006F FF8F FFE6     	movff	plusw1,postinc1
 31875  012190  006F FF8F FFE6     	movff	plusw1,postinc1
 31876  012196  006F FF8F FFE6     	movff	plusw1,postinc1
 31877  01219C  EC47  F0B7         	call	___fladd	;wreg free
 31878                           
 31879                           ;stkvar	_h @ sp[(-56)+24]
 31880  0121A0  0EE0               	movlw	-32
 31881  0121A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31882  0121A8  0EE1               	movlw	-31
 31883  0121AA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31884  0121B0  0EE2               	movlw	-30
 31885  0121B2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31886  0121B8  0EE3               	movlw	-29
 31887  0121BA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31888                           
 31889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 31890                           ;stkvar	_ou @ sp[(-56)+28]
 31891  0121C0  0EE4               	movlw	-28
 31892  0121C2  006F FF8C  F032    	movff	plusw1,btemp+8
 31893  0121C8  0EE5               	movlw	-27
 31894  0121CA  006F FF8C  F033    	movff	plusw1,btemp+9
 31895  0121D0  0EE6               	movlw	-26
 31896  0121D2  006F FF8C  F034    	movff	plusw1,btemp+10
 31897  0121D8  0EE7               	movlw	-25
 31898  0121DA  006F FF8C  F035    	movff	plusw1,btemp+11
 31899                           
 31900                           ;stkvar	_u @ sp[(-56)+12]
 31901  0121E0  0ED4               	movlw	-44
 31902  0121E2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31903  0121E8  0ED5               	movlw	-43
 31904  0121EA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31905  0121F0  0ED6               	movlw	-42
 31906  0121F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31907  0121F8  0ED7               	movlw	-41
 31908  0121FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31909                           
 31910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 31911                           ;stkvar	_nmode @ sp[(-56)+55]
 31912  012200  0EFF               	movlw	-1
 31913  012202  006F FF8C  F02A    	movff	plusw1,btemp
 31914  012208  0E65               	movlw	101
 31915  01220A  182A               	xorwf	btemp^0,w,c
 31916  01220C  B4D8               	btfsc	status,2,c
 31917  01220E  D011               	goto	l15758
 31918                           
 31919                           ;stkvar	_e @ sp[(-56)+34]
 31920                           ;stkvar	_ne @ sp[(-56)+46]
 31921  012210  0EEA               	movlw	-22
 31922  012212  006F FF8C  F02A    	movff	plusw1,btemp
 31923  012218  0EF6               	movlw	-10
 31924  01221A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31925  012220  0EEB               	movlw	-21
 31926  012222  006F FF8C  F02A    	movff	plusw1,btemp
 31927  012228  0EF7               	movlw	-9
 31928  01222A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31929  012230  D004               	goto	l2575
 31930  012232                     l15758:
 31931                           
 31932                           ;stkvar	_ne @ sp[(-56)+46]
 31933  012232  0EF6               	movlw	-10
 31934  012234  6AE3               	clrf	plusw1,c
 31935  012236  0EF7               	movlw	-9
 31936  012238  6AE3               	clrf	plusw1,c
 31937  01223A                     l2575:
 31938                           
 31939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 31940                           ;stkvar	_pp @ sp[(-56)+50]
 31941  01223A  0EFA               	movlw	-6
 31942  01223C  6AE3               	clrf	plusw1,c
 31943  01223E  0EFB               	movlw	-5
 31944  012240  6AE3               	clrf	plusw1,c
 31945                           
 31946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 31947                           ;stkvar	_t @ sp[(-56)+52]
 31948  012242  0EFC               	movlw	-4
 31949  012244  6AE3               	clrf	plusw1,c
 31950  012246  0EFD               	movlw	-3
 31951  012248  6AE3               	clrf	plusw1,c
 31952                           
 31953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 31954                           ;stkvar	_i @ sp[(-56)+36]
 31955  01224A  0EEC               	movlw	-20
 31956  01224C  6AE3               	clrf	plusw1,c
 31957  01224E  0EED               	movlw	-19
 31958  012250  6AE3               	clrf	plusw1,c
 31959                           
 31960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31961  012252  D1B7               	goto	l15810
 31962  012254                     l15760:
 31963                           
 31964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 31965                           ;stkvar	_u @ sp[(-56)+12]
 31966  012254  0ED4               	movlw	-44
 31967  012256  006F FF8F FFE6     	movff	plusw1,postinc1
 31968  01225C  006F FF8F FFE6     	movff	plusw1,postinc1
 31969  012262  006F FF8F FFE6     	movff	plusw1,postinc1
 31970  012268  006F FF8F FFE6     	movff	plusw1,postinc1
 31971                           
 31972                           ;stkvar	_h @ sp[(-60)+24]
 31973  01226E  0EDC               	movlw	-36
 31974  012270  006F FF8F FFE6     	movff	plusw1,postinc1
 31975  012276  006F FF8F FFE6     	movff	plusw1,postinc1
 31976  01227C  006F FF8F FFE6     	movff	plusw1,postinc1
 31977  012282  006F FF8F FFE6     	movff	plusw1,postinc1
 31978  012288  EC64  F0C1         	call	___fldiv	;wreg free
 31979  01228C  0060  F0AB  FFE6   	movff	btemp,postinc1
 31980  012292  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31981  012298  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31982  01229E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31983  0122A4  EC7B  F0D5         	call	_floorf	;wreg free
 31984                           
 31985                           ;stkvar	_l @ sp[(-56)+20]
 31986  0122A8  0EDC               	movlw	-36
 31987  0122AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31988  0122B0  0EDD               	movlw	-35
 31989  0122B2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31990  0122B8  0EDE               	movlw	-34
 31991  0122BA  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31992  0122C0  0EDF               	movlw	-33
 31993  0122C2  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31994                           
 31995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 31996                           ;stkvar	_l @ sp[(-56)+20]
 31997  0122C8  0EDC               	movlw	-36
 31998  0122CA  006F FF8F FFE6     	movff	plusw1,postinc1
 31999  0122D0  006F FF8F FFE6     	movff	plusw1,postinc1
 32000  0122D6  006F FF8F FFE6     	movff	plusw1,postinc1
 32001  0122DC  006F FF8F FFE6     	movff	plusw1,postinc1
 32002  0122E2  ECC9  F0F4         	call	___fltol	;wreg free
 32003  0122E6  0060  F0A8  F034   	movff	btemp,btemp+10
 32004  0122EC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 32005                           
 32006                           ;stkvar	_d @ sp[(-56)+44]
 32007  0122F2  0EF4               	movlw	-12
 32008  0122F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32009  0122FA  0EF5               	movlw	-11
 32010  0122FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32011                           
 32012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 32013  012302  B84E               	btfsc	_flags^0,4,c
 32014  012304  D026               	goto	l15774
 32015                           
 32016                           ;stkvar	_d @ sp[(-56)+44]
 32017  012306  0EF4               	movlw	-12
 32018  012308  006F FF8C  F02A    	movff	plusw1,btemp
 32019  01230E  0EF5               	movlw	-11
 32020  012310  50E3               	movf	plusw1,w,c
 32021  012312  102A               	iorwf	btemp^0,w,c
 32022  012314  A4D8               	btfss	status,2,c
 32023  012316  D01D               	goto	l15774
 32024                           
 32025                           ;stkvar	_mode @ sp[(-56)+54]
 32026  012318  0EFE               	movlw	-2
 32027  01231A  006F FF8C  F02A    	movff	plusw1,btemp
 32028  012320  0E67               	movlw	103
 32029  012322  182A               	xorwf	btemp^0,w,c
 32030  012324  A4D8               	btfss	status,2,c
 32031  012326  D015               	goto	l15774
 32032                           
 32033                           ;stkvar	_ne @ sp[(-56)+46]
 32034  012328  0EF7               	movlw	-9
 32035  01232A  AEE3               	btfss	plusw1,7,c
 32036  01232C  D012               	goto	l15774
 32037                           
 32038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 32039                           ;stkvar	_t @ sp[(-56)+52]
 32040  01232E  0EFC               	movlw	-4
 32041  012330  50E3               	movf	plusw1,w,c
 32042  012332  0F01               	addlw	1
 32043  012334  6E2A               	movwf	btemp^0,c
 32044  012336  0EFC               	movlw	-4
 32045  012338  0060  F0AB  FFE3   	movff	btemp,plusw1
 32046  01233E  6A2A               	clrf	btemp^0,c
 32047  012340  0EFD               	movlw	-3
 32048  012342  50E3               	movf	plusw1,w,c
 32049  012344  202A               	addwfc	btemp^0,w,c
 32050  012346  6E2A               	movwf	btemp^0,c
 32051  012348  0EFD               	movlw	-3
 32052  01234A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32053                           
 32054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 32055  012350  D0AF               	goto	l15802
 32056  012352                     l15774:
 32057                           
 32058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 32059                           ;stkvar	_pp @ sp[(-56)+50]
 32060  012352  0EFA               	movlw	-6
 32061  012354  006F FF8C  F02A    	movff	plusw1,btemp
 32062  01235A  0EFB               	movlw	-5
 32063  01235C  50E3               	movf	plusw1,w,c
 32064  01235E  102A               	iorwf	btemp^0,w,c
 32065  012360  A4D8               	btfss	status,2,c
 32066  012362  D070               	goto	l15794
 32067                           
 32068                           ;stkvar	_ne @ sp[(-56)+46]
 32069  012364  0EF7               	movlw	-9
 32070  012366  AEE3               	btfss	plusw1,7,c
 32071  012368  D06D               	goto	l15794
 32072                           
 32073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 32074                           ;stkvar	_n @ sp[(-56)+32]
 32075  01236A  0EE8               	movlw	-24
 32076  01236C  006F FF8C  F034    	movff	plusw1,btemp+10
 32077  012372  0EE9               	movlw	-23
 32078  012374  006F FF8C  F035    	movff	plusw1,btemp+11
 32079  01237A  0E54               	movlw	low _dbuf
 32080  01237C  2434               	addwf	(btemp+10)^0,w,c
 32081  01237E  6ED9               	movwf	fsr2l,c
 32082  012380  0E03               	movlw	high _dbuf
 32083  012382  2035               	addwfc	(btemp+11)^0,w,c
 32084  012384  6EDA               	movwf	fsr2h,c
 32085  012386  0E2E               	movlw	46
 32086  012388  6EDF               	movwf	indf2,c
 32087                           
 32088                           ;stkvar	_n @ sp[(-56)+32]
 32089  01238A  0EE8               	movlw	-24
 32090  01238C  50E3               	movf	plusw1,w,c
 32091  01238E  0F01               	addlw	1
 32092  012390  6E2A               	movwf	btemp^0,c
 32093  012392  0EE8               	movlw	-24
 32094  012394  0060  F0AB  FFE3   	movff	btemp,plusw1
 32095  01239A  6A2A               	clrf	btemp^0,c
 32096  01239C  0EE9               	movlw	-23
 32097  01239E  50E3               	movf	plusw1,w,c
 32098  0123A0  202A               	addwfc	btemp^0,w,c
 32099  0123A2  6E2A               	movwf	btemp^0,c
 32100  0123A4  0EE9               	movlw	-23
 32101  0123A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 32102                           
 32103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 32104                           ;stkvar	_w @ sp[(-56)+38]
 32105  0123AC  50E1               	movf	fsr1l,w,c
 32106  0123AE  0FEE               	addlw	-18
 32107  0123B0  6ED9               	movwf	fsr2l,c
 32108  0123B2  50E2               	movf	fsr1h,w,c
 32109  0123B4  6EDA               	movwf	fsr2h,c
 32110  0123B6  0EFF               	movlw	255
 32111  0123B8  22DA               	addwfc	fsr2h,f,c
 32112  0123BA  06DE               	decf	postinc2,f,c
 32113  0123BC  0E00               	movlw	0
 32114  0123BE  5ADD               	subwfb	postdec2,f,c
 32115                           
 32116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 32117  0123C0  0E01               	movlw	1
 32118  0123C2  6E34               	movwf	(btemp+10)^0,c
 32119  0123C4  0E00               	movlw	0
 32120  0123C6  6E35               	movwf	(btemp+11)^0,c
 32121                           
 32122                           ;stkvar	_pp @ sp[(-56)+50]
 32123  0123C8  0EFA               	movlw	-6
 32124  0123CA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32125  0123D0  0EFB               	movlw	-5
 32126  0123D2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32127  0123D8  D035               	goto	l15794
 32128  0123DA                     l15786:
 32129                           
 32130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 32131                           ;stkvar	_n @ sp[(-56)+32]
 32132  0123DA  0EE8               	movlw	-24
 32133  0123DC  006F FF8C  F034    	movff	plusw1,btemp+10
 32134  0123E2  0EE9               	movlw	-23
 32135  0123E4  006F FF8C  F035    	movff	plusw1,btemp+11
 32136  0123EA  0E54               	movlw	low _dbuf
 32137  0123EC  2434               	addwf	(btemp+10)^0,w,c
 32138  0123EE  6ED9               	movwf	fsr2l,c
 32139  0123F0  0E03               	movlw	high _dbuf
 32140  0123F2  2035               	addwfc	(btemp+11)^0,w,c
 32141  0123F4  6EDA               	movwf	fsr2h,c
 32142  0123F6  0E30               	movlw	48
 32143  0123F8  6EDF               	movwf	indf2,c
 32144                           
 32145                           ;stkvar	_n @ sp[(-56)+32]
 32146  0123FA  0EE8               	movlw	-24
 32147  0123FC  50E3               	movf	plusw1,w,c
 32148  0123FE  0F01               	addlw	1
 32149  012400  6E2A               	movwf	btemp^0,c
 32150  012402  0EE8               	movlw	-24
 32151  012404  0060  F0AB  FFE3   	movff	btemp,plusw1
 32152  01240A  6A2A               	clrf	btemp^0,c
 32153  01240C  0EE9               	movlw	-23
 32154  01240E  50E3               	movf	plusw1,w,c
 32155  012410  202A               	addwfc	btemp^0,w,c
 32156  012412  6E2A               	movwf	btemp^0,c
 32157  012414  0EE9               	movlw	-23
 32158  012416  0060  F0AB  FFE3   	movff	btemp,plusw1
 32159                           
 32160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 32161                           ;stkvar	_w @ sp[(-56)+38]
 32162  01241C  50E1               	movf	fsr1l,w,c
 32163  01241E  0FEE               	addlw	-18
 32164  012420  6ED9               	movwf	fsr2l,c
 32165  012422  50E2               	movf	fsr1h,w,c
 32166  012424  6EDA               	movwf	fsr2h,c
 32167  012426  0EFF               	movlw	255
 32168  012428  22DA               	addwfc	fsr2h,f,c
 32169  01242A  06DE               	decf	postinc2,f,c
 32170  01242C  0E00               	movlw	0
 32171  01242E  5ADD               	subwfb	postdec2,f,c
 32172                           
 32173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 32174                           ;stkvar	_t @ sp[(-56)+52]
 32175  012430  50E1               	movf	fsr1l,w,c
 32176  012432  0FFC               	addlw	-4
 32177  012434  6ED9               	movwf	fsr2l,c
 32178  012436  50E2               	movf	fsr1h,w,c
 32179  012438  6EDA               	movwf	fsr2h,c
 32180  01243A  0EFF               	movlw	255
 32181  01243C  22DA               	addwfc	fsr2h,f,c
 32182  01243E  06DE               	decf	postinc2,f,c
 32183  012440  0E00               	movlw	0
 32184  012442  5ADD               	subwfb	postdec2,f,c
 32185  012444                     l15794:
 32186                           
 32187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 32188                           ;stkvar	_t @ sp[(-56)+52]
 32189  012444  0EFC               	movlw	-4
 32190  012446  006F FF8C  F02A    	movff	plusw1,btemp
 32191  01244C  0EFD               	movlw	-3
 32192  01244E  50E3               	movf	plusw1,w,c
 32193  012450  102A               	iorwf	btemp^0,w,c
 32194  012452  A4D8               	btfss	status,2,c
 32195  012454  D7C2               	goto	l15786
 32196                           
 32197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 32198                           ;stkvar	_n @ sp[(-56)+32]
 32199  012456  0EE8               	movlw	-24
 32200  012458  006F FF8C  F034    	movff	plusw1,btemp+10
 32201  01245E  0EE9               	movlw	-23
 32202  012460  006F FF8C  F035    	movff	plusw1,btemp+11
 32203  012466  0E54               	movlw	low _dbuf
 32204  012468  2434               	addwf	(btemp+10)^0,w,c
 32205  01246A  6ED9               	movwf	fsr2l,c
 32206  01246C  0E03               	movlw	high _dbuf
 32207  01246E  2035               	addwfc	(btemp+11)^0,w,c
 32208  012470  6EDA               	movwf	fsr2h,c
 32209                           
 32210                           ;stkvar	_d @ sp[(-56)+44]
 32211  012472  0EF4               	movlw	-12
 32212  012474  50E3               	movf	plusw1,w,c
 32213  012476  0F30               	addlw	48
 32214  012478  6EDF               	movwf	indf2,c
 32215                           
 32216                           ;stkvar	_n @ sp[(-56)+32]
 32217  01247A  0EE8               	movlw	-24
 32218  01247C  50E3               	movf	plusw1,w,c
 32219  01247E  0F01               	addlw	1
 32220  012480  6E2A               	movwf	btemp^0,c
 32221  012482  0EE8               	movlw	-24
 32222  012484  0060  F0AB  FFE3   	movff	btemp,plusw1
 32223  01248A  6A2A               	clrf	btemp^0,c
 32224  01248C  0EE9               	movlw	-23
 32225  01248E  50E3               	movf	plusw1,w,c
 32226  012490  202A               	addwfc	btemp^0,w,c
 32227  012492  6E2A               	movwf	btemp^0,c
 32228  012494  0EE9               	movlw	-23
 32229  012496  0060  F0AB  FFE3   	movff	btemp,plusw1
 32230                           
 32231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 32232                           ;stkvar	_w @ sp[(-56)+38]
 32233  01249C  50E1               	movf	fsr1l,w,c
 32234  01249E  0FEE               	addlw	-18
 32235  0124A0  6ED9               	movwf	fsr2l,c
 32236  0124A2  50E2               	movf	fsr1h,w,c
 32237  0124A4  6EDA               	movwf	fsr2h,c
 32238  0124A6  0EFF               	movlw	255
 32239  0124A8  22DA               	addwfc	fsr2h,f,c
 32240  0124AA  06DE               	decf	postinc2,f,c
 32241  0124AC  0E00               	movlw	0
 32242  0124AE  5ADD               	subwfb	postdec2,f,c
 32243  0124B0                     l15802:
 32244                           
 32245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 32246                           ;stkvar	_u @ sp[(-56)+12]
 32247  0124B0  0ED4               	movlw	-44
 32248  0124B2  006F FF8F FFE6     	movff	plusw1,postinc1
 32249  0124B8  006F FF8F FFE6     	movff	plusw1,postinc1
 32250  0124BE  006F FF8F FFE6     	movff	plusw1,postinc1
 32251  0124C4  006F FF8F FFE6     	movff	plusw1,postinc1
 32252                           
 32253                           ;stkvar	_l @ sp[(-60)+20]
 32254  0124CA  0ED8               	movlw	-40
 32255  0124CC  006F FF8F FFE6     	movff	plusw1,postinc1
 32256  0124D2  006F FF8F FFE6     	movff	plusw1,postinc1
 32257  0124D8  006F FF8F FFE6     	movff	plusw1,postinc1
 32258  0124DE  006F FF8F FFE6     	movff	plusw1,postinc1
 32259  0124E4  EC32  F0B3         	call	___flmul	;wreg free
 32260  0124E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 32261  0124EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 32262  0124F4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 32263  0124FA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32264                           
 32265                           ;stkvar	_h @ sp[(-60)+24]
 32266  012500  0EDC               	movlw	-36
 32267  012502  006F FF8F FFE6     	movff	plusw1,postinc1
 32268  012508  006F FF8F FFE6     	movff	plusw1,postinc1
 32269  01250E  006F FF8F FFE6     	movff	plusw1,postinc1
 32270  012514  006F FF8F FFE6     	movff	plusw1,postinc1
 32271  01251A  EC7A  F010         	call	___flsub	;wreg free
 32272                           
 32273                           ;stkvar	_h @ sp[(-56)+24]
 32274  01251E  0EE0               	movlw	-32
 32275  012520  0060  F0AB  FFE3   	movff	btemp,plusw1
 32276  012526  0EE1               	movlw	-31
 32277  012528  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32278  01252E  0EE2               	movlw	-30
 32279  012530  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32280  012536  0EE3               	movlw	-29
 32281  012538  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32282                           
 32283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 32284  01253E  0E00               	movlw	0
 32285  012540  6EE6               	movwf	postinc1,c
 32286  012542  0E00               	movlw	0
 32287  012544  6EE6               	movwf	postinc1,c
 32288  012546  0E20               	movlw	32
 32289  012548  6EE6               	movwf	postinc1,c
 32290  01254A  0E41               	movlw	65
 32291  01254C  6EE6               	movwf	postinc1,c
 32292                           
 32293                           ;stkvar	_u @ sp[(-60)+12]
 32294  01254E  0ED0               	movlw	-48
 32295  012550  006F FF8F FFE6     	movff	plusw1,postinc1
 32296  012556  006F FF8F FFE6     	movff	plusw1,postinc1
 32297  01255C  006F FF8F FFE6     	movff	plusw1,postinc1
 32298  012562  006F FF8F FFE6     	movff	plusw1,postinc1
 32299  012568  EC64  F0C1         	call	___fldiv	;wreg free
 32300                           
 32301                           ;stkvar	_u @ sp[(-56)+12]
 32302  01256C  0ED4               	movlw	-44
 32303  01256E  0060  F0AB  FFE3   	movff	btemp,plusw1
 32304  012574  0ED5               	movlw	-43
 32305  012576  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32306  01257C  0ED6               	movlw	-42
 32307  01257E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32308  012584  0ED7               	movlw	-41
 32309  012586  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32310                           
 32311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 32312                           ;stkvar	_ne @ sp[(-56)+46]
 32313  01258C  50E1               	movf	fsr1l,w,c
 32314  01258E  0FF6               	addlw	-10
 32315  012590  6ED9               	movwf	fsr2l,c
 32316  012592  50E2               	movf	fsr1h,w,c
 32317  012594  6EDA               	movwf	fsr2h,c
 32318  012596  0EFF               	movlw	255
 32319  012598  22DA               	addwfc	fsr2h,f,c
 32320  01259A  06DE               	decf	postinc2,f,c
 32321  01259C  0E00               	movlw	0
 32322  01259E  5ADD               	subwfb	postdec2,f,c
 32323                           
 32324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 32325                           ;stkvar	_i @ sp[(-56)+36]
 32326  0125A0  0EEC               	movlw	-20
 32327  0125A2  50E3               	movf	plusw1,w,c
 32328  0125A4  0F01               	addlw	1
 32329  0125A6  6E2A               	movwf	btemp^0,c
 32330  0125A8  0EEC               	movlw	-20
 32331  0125AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 32332  0125B0  6A2A               	clrf	btemp^0,c
 32333  0125B2  0EED               	movlw	-19
 32334  0125B4  50E3               	movf	plusw1,w,c
 32335  0125B6  202A               	addwfc	btemp^0,w,c
 32336  0125B8  6E2A               	movwf	btemp^0,c
 32337  0125BA  0EED               	movlw	-19
 32338  0125BC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32339  0125C2                     l15810:
 32340                           
 32341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 32342                           ;stkvar	_m @ sp[(-56)+48]
 32343                           ;stkvar	_i @ sp[(-56)+36]
 32344  0125C2  50E1               	movf	fsr1l,w,c
 32345  0125C4  0FEC               	addlw	-20
 32346  0125C6  6ED9               	movwf	fsr2l,c
 32347  0125C8  50E2               	movf	fsr1h,w,c
 32348  0125CA  6EDA               	movwf	fsr2h,c
 32349  0125CC  0EFF               	movlw	255
 32350  0125CE  22DA               	addwfc	fsr2h,f,c
 32351  0125D0  0EF8               	movlw	-8
 32352  0125D2  50E3               	movf	plusw1,w,c
 32353  0125D4  5CDE               	subwf	postinc2,w,c
 32354  0125D6  50DE               	movf	postinc2,w,c
 32355  0125D8  0A80               	xorlw	128
 32356  0125DA  6E2A               	movwf	btemp^0,c
 32357  0125DC  0EF9               	movlw	-7
 32358  0125DE  50E3               	movf	plusw1,w,c
 32359  0125E0  0A80               	xorlw	128
 32360  0125E2  582A               	subwfb	btemp^0,w,c
 32361  0125E4  B0D8               	btfsc	status,0,c
 32362  0125E6  D00E               	goto	u15000
 32363                           
 32364                           ;stkvar	_n @ sp[(-56)+32]
 32365  0125E8  0EE9               	movlw	-23
 32366  0125EA  BEE3               	btfsc	plusw1,7,c
 32367  0125EC  D633               	goto	l15760
 32368  0125EE  0EE9               	movlw	-23
 32369  0125F0  50E3               	movf	plusw1,w,c
 32370  0125F2  E108               	bnz	u15000
 32371  0125F4  0EE8               	movlw	-24
 32372  0125F6  006F FF8C  F02A    	movff	plusw1,btemp
 32373  0125FC  0E4B               	movlw	75
 32374  0125FE  5E2A               	subwf	btemp^0,f,c
 32375  012600  A0D8               	btfss	status,0,c
 32376  012602  D628               	goto	l15760
 32377  012604                     u15000:
 32378                           
 32379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 32380                           ;stkvar	_pp @ sp[(-56)+50]
 32381  012604  0EFA               	movlw	-6
 32382  012606  006F FF8C  F02A    	movff	plusw1,btemp
 32383  01260C  0EFB               	movlw	-5
 32384  01260E  50E3               	movf	plusw1,w,c
 32385  012610  102A               	iorwf	btemp^0,w,c
 32386  012612  B4D8               	btfsc	status,2,c
 32387  012614  A84E               	btfss	_flags^0,4,c
 32388  012616  D021               	goto	l15822
 32389                           
 32390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 32391                           ;stkvar	_n @ sp[(-56)+32]
 32392  012618  0EE8               	movlw	-24
 32393  01261A  006F FF8C  F034    	movff	plusw1,btemp+10
 32394  012620  0EE9               	movlw	-23
 32395  012622  006F FF8C  F035    	movff	plusw1,btemp+11
 32396  012628  0E54               	movlw	low _dbuf
 32397  01262A  2434               	addwf	(btemp+10)^0,w,c
 32398  01262C  6ED9               	movwf	fsr2l,c
 32399  01262E  0E03               	movlw	high _dbuf
 32400  012630  2035               	addwfc	(btemp+11)^0,w,c
 32401  012632  6EDA               	movwf	fsr2h,c
 32402  012634  0E2E               	movlw	46
 32403  012636  6EDF               	movwf	indf2,c
 32404                           
 32405                           ;stkvar	_n @ sp[(-56)+32]
 32406  012638  0EE8               	movlw	-24
 32407  01263A  50E3               	movf	plusw1,w,c
 32408  01263C  0F01               	addlw	1
 32409  01263E  6E2A               	movwf	btemp^0,c
 32410  012640  0EE8               	movlw	-24
 32411  012642  0060  F0AB  FFE3   	movff	btemp,plusw1
 32412  012648  6A2A               	clrf	btemp^0,c
 32413  01264A  0EE9               	movlw	-23
 32414  01264C  50E3               	movf	plusw1,w,c
 32415  01264E  202A               	addwfc	btemp^0,w,c
 32416  012650  6E2A               	movwf	btemp^0,c
 32417  012652  0EE9               	movlw	-23
 32418  012654  0060  F0AB  FFE3   	movff	btemp,plusw1
 32419  01265A                     l15822:
 32420                           
 32421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 32422                           ;stkvar	_n @ sp[(-56)+32]
 32423  01265A  0EE8               	movlw	-24
 32424  01265C  006F FF8C  F034    	movff	plusw1,btemp+10
 32425  012662  0EE9               	movlw	-23
 32426  012664  006F FF8C  F035    	movff	plusw1,btemp+11
 32427  01266A  0E54               	movlw	low _dbuf
 32428  01266C  2434               	addwf	(btemp+10)^0,w,c
 32429  01266E  6ED9               	movwf	fsr2l,c
 32430  012670  0E03               	movlw	high _dbuf
 32431  012672  2035               	addwfc	(btemp+11)^0,w,c
 32432  012674  6EDA               	movwf	fsr2h,c
 32433  012676  0E00               	movlw	0
 32434  012678  6EDF               	movwf	indf2,c
 32435                           
 32436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 32437                           ;stkvar	_nmode @ sp[(-56)+55]
 32438  01267A  0EFF               	movlw	-1
 32439  01267C  006F FF8C  F02A    	movff	plusw1,btemp
 32440  012682  0E65               	movlw	101
 32441  012684  182A               	xorwf	btemp^0,w,c
 32442  012686  A4D8               	btfss	status,2,c
 32443  012688  EFA6  F08C         	goto	l15626
 32444                           
 32445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 32446  01268C  0E4F               	movlw	79
 32447  01268E  6E34               	movwf	(btemp+10)^0,c
 32448  012690  0E00               	movlw	0
 32449  012692  6E35               	movwf	(btemp+11)^0,c
 32450                           
 32451                           ;stkvar	_i @ sp[(-56)+36]
 32452  012694  0EEC               	movlw	-20
 32453  012696  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32454  01269C  0EED               	movlw	-19
 32455  01269E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32456                           
 32457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 32458                           ;stkvar	_i @ sp[(-56)+36]
 32459  0126A4  0EEC               	movlw	-20
 32460  0126A6  006F FF8C  F034    	movff	plusw1,btemp+10
 32461  0126AC  0EED               	movlw	-19
 32462  0126AE  006F FF8C  F035    	movff	plusw1,btemp+11
 32463  0126B4  0E54               	movlw	low _dbuf
 32464  0126B6  2434               	addwf	(btemp+10)^0,w,c
 32465  0126B8  6ED9               	movwf	fsr2l,c
 32466  0126BA  0E03               	movlw	high _dbuf
 32467  0126BC  2035               	addwfc	(btemp+11)^0,w,c
 32468  0126BE  6EDA               	movwf	fsr2h,c
 32469  0126C0  0E00               	movlw	0
 32470  0126C2  6EDF               	movwf	indf2,c
 32471                           
 32472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 32473                           ;stkvar	_sign @ sp[(-56)+42]
 32474  0126C4  0EF2               	movlw	-14
 32475  0126C6  6AE3               	clrf	plusw1,c
 32476  0126C8  0EF3               	movlw	-13
 32477  0126CA  6AE3               	clrf	plusw1,c
 32478                           
 32479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 32480                           ;stkvar	_e @ sp[(-56)+34]
 32481  0126CC  0EEB               	movlw	-21
 32482  0126CE  AEE3               	btfss	plusw1,7,c
 32483  0126D0  D012               	goto	l15836
 32484                           
 32485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 32486  0126D2  0E01               	movlw	1
 32487  0126D4  6E34               	movwf	(btemp+10)^0,c
 32488  0126D6  0E00               	movlw	0
 32489  0126D8  6E35               	movwf	(btemp+11)^0,c
 32490                           
 32491                           ;stkvar	_sign @ sp[(-56)+42]
 32492  0126DA  0EF2               	movlw	-14
 32493  0126DC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32494  0126E2  0EF3               	movlw	-13
 32495  0126E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32496                           
 32497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 32498                           ;stkvar	_e @ sp[(-56)+34]
 32499                           ;stkvar	_e @ sp[(-56)+34]
 32500  0126EA  0EEA               	movlw	-22
 32501  0126EC  6CE3               	negf	plusw1,c
 32502  0126EE  0EEB               	movlw	-21
 32503  0126F0  1EE3               	comf	plusw1,f,c
 32504  0126F2  B0D8               	btfsc	status,0,c
 32505  0126F4  2AE3               	incf	plusw1,f,c
 32506  0126F6                     l15836:
 32507                           
 32508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 32509  0126F6  0E02               	movlw	2
 32510  0126F8  6E34               	movwf	(btemp+10)^0,c
 32511  0126FA  0E00               	movlw	0
 32512  0126FC  6E35               	movwf	(btemp+11)^0,c
 32513                           
 32514                           ;stkvar	_p @ sp[(-56)+40]
 32515  0126FE  0EF0               	movlw	-16
 32516  012700  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32517  012706  0EF1               	movlw	-15
 32518  012708  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32519                           
 32520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32521  01270E  D051               	goto	l15848
 32522  012710                     l15838:
 32523                           
 32524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 32525                           ;stkvar	_i @ sp[(-56)+36]
 32526  012710  50E1               	movf	fsr1l,w,c
 32527  012712  0FEC               	addlw	-20
 32528  012714  6ED9               	movwf	fsr2l,c
 32529  012716  50E2               	movf	fsr1h,w,c
 32530  012718  6EDA               	movwf	fsr2h,c
 32531  01271A  0EFF               	movlw	255
 32532  01271C  22DA               	addwfc	fsr2h,f,c
 32533  01271E  06DE               	decf	postinc2,f,c
 32534  012720  0E00               	movlw	0
 32535  012722  5ADD               	subwfb	postdec2,f,c
 32536                           
 32537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 32538                           ;stkvar	_i @ sp[(-56)+36]
 32539  012724  0EEC               	movlw	-20
 32540  012726  006F FF8C  F034    	movff	plusw1,btemp+10
 32541  01272C  0EED               	movlw	-19
 32542  01272E  006F FF8C  F035    	movff	plusw1,btemp+11
 32543  012734  0E54               	movlw	low _dbuf
 32544  012736  2434               	addwf	(btemp+10)^0,w,c
 32545  012738  6ED9               	movwf	fsr2l,c
 32546  01273A  0E03               	movlw	high _dbuf
 32547  01273C  2035               	addwfc	(btemp+11)^0,w,c
 32548  01273E  6EDA               	movwf	fsr2h,c
 32549  012740  0E0A               	movlw	10
 32550  012742  6EE6               	movwf	postinc1,c
 32551  012744  0E00               	movlw	0
 32552  012746  6EE6               	movwf	postinc1,c
 32553                           
 32554                           ;stkvar	_e @ sp[(-58)+34]
 32555  012748  0EE8               	movlw	-24
 32556  01274A  006F FF8F FFE6     	movff	plusw1,postinc1
 32557  012750  006F FF8F FFE6     	movff	plusw1,postinc1
 32558  012756  ECCF  F0FD         	call	___awmod	;wreg free
 32559  01275A  502A               	movf	btemp^0,w,c
 32560  01275C  0F30               	addlw	48
 32561  01275E  6EDF               	movwf	indf2,c
 32562                           
 32563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 32564  012760  0E0A               	movlw	10
 32565  012762  6EE6               	movwf	postinc1,c
 32566  012764  0E00               	movlw	0
 32567  012766  6EE6               	movwf	postinc1,c
 32568                           
 32569                           ;stkvar	_e @ sp[(-58)+34]
 32570  012768  0EE8               	movlw	-24
 32571  01276A  006F FF8F FFE6     	movff	plusw1,postinc1
 32572  012770  006F FF8F FFE6     	movff	plusw1,postinc1
 32573  012776  ECA0  F0F9         	call	___awdiv	;wreg free
 32574                           
 32575                           ;stkvar	_e @ sp[(-56)+34]
 32576  01277A  0EEA               	movlw	-22
 32577  01277C  0060  F0AB  FFE3   	movff	btemp,plusw1
 32578  012782  0EEB               	movlw	-21
 32579  012784  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32580                           
 32581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 32582                           ;stkvar	_p @ sp[(-56)+40]
 32583  01278A  50E1               	movf	fsr1l,w,c
 32584  01278C  0FF0               	addlw	-16
 32585  01278E  6ED9               	movwf	fsr2l,c
 32586  012790  50E2               	movf	fsr1h,w,c
 32587  012792  6EDA               	movwf	fsr2h,c
 32588  012794  0EFF               	movlw	255
 32589  012796  22DA               	addwfc	fsr2h,f,c
 32590  012798  06DE               	decf	postinc2,f,c
 32591  01279A  0E00               	movlw	0
 32592  01279C  5ADD               	subwfb	postdec2,f,c
 32593                           
 32594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 32595                           ;stkvar	_w @ sp[(-56)+38]
 32596  01279E  50E1               	movf	fsr1l,w,c
 32597  0127A0  0FEE               	addlw	-18
 32598  0127A2  6ED9               	movwf	fsr2l,c
 32599  0127A4  50E2               	movf	fsr1h,w,c
 32600  0127A6  6EDA               	movwf	fsr2h,c
 32601  0127A8  0EFF               	movlw	255
 32602  0127AA  22DA               	addwfc	fsr2h,f,c
 32603  0127AC  06DE               	decf	postinc2,f,c
 32604  0127AE  0E00               	movlw	0
 32605  0127B0  5ADD               	subwfb	postdec2,f,c
 32606  0127B2                     l15848:
 32607                           
 32608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32609                           ;stkvar	_e @ sp[(-56)+34]
 32610  0127B2  0EEA               	movlw	-22
 32611  0127B4  006F FF8C  F02A    	movff	plusw1,btemp
 32612  0127BA  0EEB               	movlw	-21
 32613  0127BC  50E3               	movf	plusw1,w,c
 32614  0127BE  102A               	iorwf	btemp^0,w,c
 32615  0127C0  A4D8               	btfss	status,2,c
 32616  0127C2  D7A6               	goto	l15838
 32617                           
 32618                           ;stkvar	_p @ sp[(-56)+40]
 32619  0127C4  0EF1               	movlw	-15
 32620  0127C6  BEE3               	btfsc	plusw1,7,c
 32621  0127C8  D007               	goto	u15060
 32622  0127CA  0EF1               	movlw	-15
 32623  0127CC  50E3               	movf	plusw1,w,c
 32624  0127CE  E1A0               	bnz	l15838
 32625  0127D0  0EF0               	movlw	-16
 32626  0127D2  04E3               	decf	plusw1,w,c
 32627  0127D4  B0D8               	btfsc	status,0,c
 32628  0127D6  D79C               	goto	l15838
 32629  0127D8                     u15060:
 32630                           
 32631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 32632                           ;stkvar	_i @ sp[(-56)+36]
 32633  0127D8  50E1               	movf	fsr1l,w,c
 32634  0127DA  0FEC               	addlw	-20
 32635  0127DC  6ED9               	movwf	fsr2l,c
 32636  0127DE  50E2               	movf	fsr1h,w,c
 32637  0127E0  6EDA               	movwf	fsr2h,c
 32638  0127E2  0EFF               	movlw	255
 32639  0127E4  22DA               	addwfc	fsr2h,f,c
 32640  0127E6  06DE               	decf	postinc2,f,c
 32641  0127E8  0E00               	movlw	0
 32642  0127EA  5ADD               	subwfb	postdec2,f,c
 32643                           
 32644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 32645                           ;stkvar	_sign @ sp[(-56)+42]
 32646  0127EC  0EF2               	movlw	-14
 32647  0127EE  006F FF8C  F02A    	movff	plusw1,btemp
 32648  0127F4  0EF3               	movlw	-13
 32649  0127F6  50E3               	movf	plusw1,w,c
 32650  0127F8  102A               	iorwf	btemp^0,w,c
 32651  0127FA  A4D8               	btfss	status,2,c
 32652  0127FC  D002               	goto	l15858
 32653  0127FE  0E2B               	movlw	43
 32654  012800  D001               	goto	L33
 32655  012802                     l15858:
 32656  012802  0E2D               	movlw	45
 32657  012804                     L33:
 32658  012804  6E34               	movwf	(btemp+10)^0,c
 32659  012806  0E00               	movlw	0
 32660  012808  6E35               	movwf	(btemp+11)^0,c
 32661                           
 32662                           ;stkvar	_efgtoa$6647 @ sp[(-56)+4]
 32663  01280A  0ECC               	movlw	-52
 32664  01280C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32665  012812  0ECD               	movlw	-51
 32666  012814  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32667                           
 32668                           ;stkvar	_efgtoa$6647 @ sp[(-56)+4]
 32669                           ;stkvar	_i @ sp[(-56)+36]
 32670  01281A  0EEC               	movlw	-20
 32671  01281C  006F FF8C  F034    	movff	plusw1,btemp+10
 32672  012822  0EED               	movlw	-19
 32673  012824  006F FF8C  F035    	movff	plusw1,btemp+11
 32674  01282A  0E54               	movlw	low _dbuf
 32675  01282C  2434               	addwf	(btemp+10)^0,w,c
 32676  01282E  6ED9               	movwf	fsr2l,c
 32677  012830  0E03               	movlw	high _dbuf
 32678  012832  2035               	addwfc	(btemp+11)^0,w,c
 32679  012834  6EDA               	movwf	fsr2h,c
 32680  012836  0ECC               	movlw	-52
 32681  012838  006F FF8F FFDF     	movff	plusw1,indf2
 32682                           
 32683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 32684                           ;stkvar	_w @ sp[(-56)+38]
 32685  01283E  50E1               	movf	fsr1l,w,c
 32686  012840  0FEE               	addlw	-18
 32687  012842  6ED9               	movwf	fsr2l,c
 32688  012844  50E2               	movf	fsr1h,w,c
 32689  012846  6EDA               	movwf	fsr2h,c
 32690  012848  0EFF               	movlw	255
 32691  01284A  22DA               	addwfc	fsr2h,f,c
 32692  01284C  06DE               	decf	postinc2,f,c
 32693  01284E  0E00               	movlw	0
 32694  012850  5ADD               	subwfb	postdec2,f,c
 32695                           
 32696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 32697                           ;stkvar	_i @ sp[(-56)+36]
 32698  012852  50E1               	movf	fsr1l,w,c
 32699  012854  0FEC               	addlw	-20
 32700  012856  6ED9               	movwf	fsr2l,c
 32701  012858  50E2               	movf	fsr1h,w,c
 32702  01285A  6EDA               	movwf	fsr2h,c
 32703  01285C  0EFF               	movlw	255
 32704  01285E  22DA               	addwfc	fsr2h,f,c
 32705  012860  06DE               	decf	postinc2,f,c
 32706  012862  0E00               	movlw	0
 32707  012864  5ADD               	subwfb	postdec2,f,c
 32708  012866  0EBF               	movlw	191
 32709  012868  6E34               	movwf	(btemp+10)^0,c
 32710  01286A  0EFF               	movlw	255
 32711  01286C  6E35               	movwf	(btemp+11)^0,c
 32712                           
 32713                           ;stkvar	_c @ sp[(-56)+-7]
 32714  01286E  0EC1               	movlw	-63
 32715  012870  50E3               	movf	plusw1,w,c
 32716  012872  6E32               	movwf	(btemp+8)^0,c
 32717  012874  6A33               	clrf	(btemp+9)^0,c
 32718  012876  5034               	movf	(btemp+10)^0,w,c
 32719  012878  2632               	addwf	(btemp+8)^0,f,c
 32720  01287A  5035               	movf	(btemp+11)^0,w,c
 32721  01287C  2233               	addwfc	(btemp+9)^0,f,c
 32722  01287E  5033               	movf	(btemp+9)^0,w,c
 32723  012880  E106               	bnz	u15080
 32724  012882  0E1A               	movlw	26
 32725  012884  5C32               	subwf	(btemp+8)^0,w,c
 32726  012886  B0D8               	btfsc	status,0,c
 32727  012888  D002               	goto	u15080
 32728  01288A  0E01               	movlw	1
 32729  01288C  D001               	goto	u15090
 32730  01288E                     u15080:
 32731  01288E  0E00               	movlw	0
 32732  012890                     u15090:
 32733  012890  6E34               	movwf	(btemp+10)^0,c
 32734  012892  6A35               	clrf	(btemp+11)^0,c
 32735                           
 32736                           ;stkvar	_efgtoa$6649 @ sp[(-56)+0]
 32737  012894  0EC8               	movlw	-56
 32738  012896  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32739  01289C  0EC9               	movlw	-55
 32740  01289E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32741                           
 32742                           ;stkvar	_efgtoa$6649 @ sp[(-56)+0]
 32743  0128A4  0EC8               	movlw	-56
 32744  0128A6  006F FF8C  F02A    	movff	plusw1,btemp
 32745  0128AC  0EC9               	movlw	-55
 32746  0128AE  50E3               	movf	plusw1,w,c
 32747  0128B0  102A               	iorwf	btemp^0,w,c
 32748  0128B2  A4D8               	btfss	status,2,c
 32749  0128B4  D002               	goto	l15874
 32750  0128B6  0E65               	movlw	101
 32751  0128B8  D001               	goto	L34
 32752  0128BA                     l15874:
 32753  0128BA  0E45               	movlw	69
 32754  0128BC                     L34:
 32755  0128BC  6E34               	movwf	(btemp+10)^0,c
 32756  0128BE  0E00               	movlw	0
 32757  0128C0  6E35               	movwf	(btemp+11)^0,c
 32758                           
 32759                           ;stkvar	_efgtoa$6648 @ sp[(-56)+2]
 32760  0128C2  0ECA               	movlw	-54
 32761  0128C4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32762  0128CA  0ECB               	movlw	-53
 32763  0128CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32764                           
 32765                           ;stkvar	_efgtoa$6648 @ sp[(-56)+2]
 32766                           ;stkvar	_i @ sp[(-56)+36]
 32767  0128D2  0EEC               	movlw	-20
 32768  0128D4  006F FF8C  F034    	movff	plusw1,btemp+10
 32769  0128DA  0EED               	movlw	-19
 32770  0128DC  006F FF8C  F035    	movff	plusw1,btemp+11
 32771  0128E2  0E54               	movlw	low _dbuf
 32772  0128E4  2434               	addwf	(btemp+10)^0,w,c
 32773  0128E6  6ED9               	movwf	fsr2l,c
 32774  0128E8  0E03               	movlw	high _dbuf
 32775  0128EA  2035               	addwfc	(btemp+11)^0,w,c
 32776  0128EC  6EDA               	movwf	fsr2h,c
 32777  0128EE  0ECA               	movlw	-54
 32778  0128F0  006F FF8F FFDF     	movff	plusw1,indf2
 32779                           
 32780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 32781                           ;stkvar	_w @ sp[(-56)+38]
 32782  0128F6  50E1               	movf	fsr1l,w,c
 32783  0128F8  0FEE               	addlw	-18
 32784  0128FA  6ED9               	movwf	fsr2l,c
 32785  0128FC  50E2               	movf	fsr1h,w,c
 32786  0128FE  6EDA               	movwf	fsr2h,c
 32787  012900  0EFF               	movlw	255
 32788  012902  22DA               	addwfc	fsr2h,f,c
 32789  012904  06DE               	decf	postinc2,f,c
 32790  012906  0E00               	movlw	0
 32791  012908  5ADD               	subwfb	postdec2,f,c
 32792                           
 32793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 32794                           ;stkvar	_i @ sp[(-56)+36]
 32795  01290A  0EEC               	movlw	-20
 32796  01290C  006F FF8C  F034    	movff	plusw1,btemp+10
 32797  012912  0EED               	movlw	-19
 32798  012914  006F FF8C  F035    	movff	plusw1,btemp+11
 32799  01291A  0E54               	movlw	low _dbuf
 32800  01291C  2434               	addwf	(btemp+10)^0,w,c
 32801  01291E  6E32               	movwf	(btemp+8)^0,c
 32802  012920  0E03               	movlw	high _dbuf
 32803  012922  2035               	addwfc	(btemp+11)^0,w,c
 32804  012924  6E33               	movwf	(btemp+9)^0,c
 32805  012926  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 32806  01292C  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 32807                           
 32808                           ;stkvar	_n @ sp[(-58)+32]
 32809  012932  0E54               	movlw	low _dbuf
 32810  012934  6E34               	movwf	(btemp+10)^0,c
 32811  012936  0E03               	movlw	high _dbuf
 32812  012938  6E35               	movwf	(btemp+11)^0,c
 32813  01293A  0EE6               	movlw	-26
 32814  01293C  50E3               	movf	plusw1,w,c
 32815  01293E  2634               	addwf	(btemp+10)^0,f,c
 32816  012940  0EE7               	movlw	-25
 32817  012942  50E3               	movf	plusw1,w,c
 32818  012944  2235               	addwfc	(btemp+11)^0,f,c
 32819  012946  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 32820  01294C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 32821  012952  EC17  F003         	call	_strcpy	;wreg free
 32822  012956  EFA6  F08C         	goto	l15626
 32823  01295A                     l2531:
 32824                           
 32825                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 32826  01295A  0EC1               	movlw	193
 32827  01295C  26E1               	addwf	fsr1l,f,c
 32828  01295E  0EFF               	movlw	255
 32829  012960  22E2               	addwfc	fsr1h,f,c
 32830  012962  0012               	return		;funcret
 32831  012964                     __end_of_efgtoa:
 32832                           	opt callstack 0
 32833                           
 32834 ;; *************** function _tolower *****************
 32835 ;; Defined at:
 32836 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 32837 ;; Parameters:    Size  Location     Type
 32838 ;;  c               2  [STACK] int 
 32839 ;; Auto vars:     Size  Location     Type
 32840 ;;		None
 32841 ;; Return value:  Size  Location     Type
 32842 ;;                  2  [STACK] int 
 32843 ;; Registers used:
 32844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 32845 ;; Tracked objects:
 32846 ;;		On entry : 0/0
 32847 ;;		On exit  : 0/0
 32848 ;;		Unchanged: 0/0
 32849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32854 ;;Total ram usage:        0 bytes
 32855 ;; Hardware stack levels used:    1
 32856 ;; Hardware stack levels required when called:   16
 32857 ;; This function calls:
 32858 ;;		_isupper
 32859 ;; This function is called by:
 32860 ;;		_efgtoa
 32861 ;;		_vfpfcnvrt
 32862 ;; This function uses a reentrant model
 32863 ;;
 32864                           
 32865                           	psect	text104
 32866  001480                     __ptext104:
 32867                           	opt callstack 0
 32868  001480                     _tolower:
 32869                           	opt callstack 0
 32870                           
 32871                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32872  001480  52E6               	movf	postinc1,f,c
 32873  001482  52E6               	movf	postinc1,f,c
 32874                           
 32875                           ;stkvar	_c @ sp[(-2)+-2]
 32876                           
 32877                           ;incstack = 0
 32878 ;; hardware stack exceeded
 32879  001484  0EFC               	movlw	-4
 32880  001486  50E3               	movf	plusw1,w,c
 32881  001488  0FBF               	addlw	191
 32882  00148A  6E34               	movwf	(btemp+10)^0,c
 32883  00148C  0EFD               	movlw	-3
 32884  00148E  006F FF8C  F035    	movff	plusw1,btemp+11
 32885  001494  0EFF               	movlw	255
 32886  001496  2235               	addwfc	(btemp+11)^0,f,c
 32887  001498  5035               	movf	(btemp+11)^0,w,c
 32888  00149A  E106               	bnz	u7860
 32889  00149C  0E1A               	movlw	26
 32890  00149E  5C34               	subwf	(btemp+10)^0,w,c
 32891  0014A0  B0D8               	btfsc	status,0,c
 32892  0014A2  D002               	goto	u7860
 32893  0014A4  0E01               	movlw	1
 32894  0014A6  D001               	goto	u7870
 32895  0014A8                     u7860:
 32896  0014A8  0E00               	movlw	0
 32897  0014AA                     u7870:
 32898  0014AA  6E34               	movwf	(btemp+10)^0,c
 32899  0014AC  6A35               	clrf	(btemp+11)^0,c
 32900                           
 32901                           ;stkvar	_tolower$7603 @ sp[(-2)+0]
 32902  0014AE  0EFE               	movlw	-2
 32903  0014B0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32904  0014B6  0EFF               	movlw	-1
 32905  0014B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32906                           
 32907                           ;stkvar	_tolower$7603 @ sp[(-2)+0]
 32908  0014BE  0EFE               	movlw	-2
 32909  0014C0  006F FF8C  F02A    	movff	plusw1,btemp
 32910  0014C6  0EFF               	movlw	-1
 32911  0014C8  50E3               	movf	plusw1,w,c
 32912  0014CA  102A               	iorwf	btemp^0,w,c
 32913  0014CC  B4D8               	btfsc	status,2,c
 32914  0014CE  D00D               	goto	l10162
 32915                           
 32916                           ;stkvar	_c @ sp[(-2)+-2]
 32917  0014D0  0EFC               	movlw	-4
 32918  0014D2  006F FF8C  F02A    	movff	plusw1,btemp
 32919  0014D8  0EFD               	movlw	-3
 32920  0014DA  006F FF8C  F02B    	movff	plusw1,btemp+1
 32921  0014E0  0E20               	movlw	32
 32922  0014E2  122A               	iorwf	btemp^0,f,c
 32923  0014E4  0E00               	movlw	0
 32924  0014E6  122B               	iorwf	(btemp+1)^0,f,c
 32925  0014E8  D008               	goto	l3833
 32926  0014EA                     l10162:
 32927                           
 32928                           ;stkvar	_c @ sp[(-2)+-2]
 32929  0014EA  0EFC               	movlw	-4
 32930  0014EC  006F FF8C  F02A    	movff	plusw1,btemp
 32931  0014F2  0EFD               	movlw	-3
 32932  0014F4  006F FF8C  F02B    	movff	plusw1,btemp+1
 32933  0014FA                     l3833:
 32934                           
 32935                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32936  0014FA  52E5               	movf	postdec1,f,c
 32937  0014FC  52E5               	movf	postdec1,f,c
 32938  0014FE  52E5               	movf	postdec1,f,c
 32939  001500  52E5               	movf	postdec1,f,c
 32940  001502  0012               	return		;funcret
 32941  001504                     __end_of_tolower:
 32942                           	opt callstack 0
 32943                           
 32944 ;; *************** function _isupper *****************
 32945 ;; Defined at:
 32946 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 32947 ;; Parameters:    Size  Location     Type
 32948 ;;  c               2  [STACK] int 
 32949 ;; Auto vars:     Size  Location     Type
 32950 ;;		None
 32951 ;; Return value:  Size  Location     Type
 32952 ;;                  2  [STACK] int 
 32953 ;; Registers used:
 32954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32955 ;; Tracked objects:
 32956 ;;		On entry : 0/0
 32957 ;;		On exit  : 0/0
 32958 ;;		Unchanged: 0/0
 32959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32964 ;;Total ram usage:        0 bytes
 32965 ;; Hardware stack levels used:    1
 32966 ;; Hardware stack levels required when called:   15
 32967 ;; This function calls:
 32968 ;;		Nothing
 32969 ;; This function is called by:
 32970 ;;		_efgtoa
 32971 ;;		_xtoa
 32972 ;;		_vfpfcnvrt
 32973 ;;		_tolower
 32974 ;; This function uses a reentrant model
 32975 ;;
 32976                           
 32977                           	psect	text105
 32978  0025F4                     __ptext105:
 32979                           	opt callstack 0
 32980  0025F4                     _isupper:
 32981                           	opt callstack 0
 32982                           
 32983                           ;stkvar	_c @ sp[(0)+-2]
 32984                           
 32985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32986                           ;incstack = 0
 32987 ;; hardware stack exceeded
 32988  0025F4  0EFE               	movlw	-2
 32989  0025F6  50E3               	movf	plusw1,w,c
 32990  0025F8  0FBF               	addlw	191
 32991  0025FA  6E34               	movwf	(btemp+10)^0,c
 32992  0025FC  0EFF               	movlw	-1
 32993  0025FE  006F FF8C  F035    	movff	plusw1,btemp+11
 32994  002604  0EFF               	movlw	255
 32995  002606  2235               	addwfc	(btemp+11)^0,f,c
 32996  002608  5035               	movf	(btemp+11)^0,w,c
 32997  00260A  E106               	bnz	u7200
 32998  00260C  0E1A               	movlw	26
 32999  00260E  5C34               	subwf	(btemp+10)^0,w,c
 33000  002610  B0D8               	btfsc	status,0,c
 33001  002612  D002               	goto	u7200
 33002  002614  0E01               	movlw	1
 33003  002616  D001               	goto	u7210
 33004  002618                     u7200:
 33005  002618  0E00               	movlw	0
 33006  00261A                     u7210:
 33007  00261A  6E2A               	movwf	btemp^0,c
 33008  00261C  6A2B               	clrf	(btemp+1)^0,c
 33009                           
 33010                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 33011  00261E  52E5               	movf	postdec1,f,c
 33012  002620  52E5               	movf	postdec1,f,c
 33013  002622  0012               	return		;funcret
 33014  002624                     __end_of_isupper:
 33015                           	opt callstack 0
 33016                           
 33017 ;; *************** function _strcpy *****************
 33018 ;; Defined at:
 33019 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 33020 ;; Parameters:    Size  Location     Type
 33021 ;;  dest            2  [STACK] PTR unsigned char 
 33022 ;;		 -> dbuf(80), 
 33023 ;;  src             2  [STACK] PTR const unsigned char 
 33024 ;;		 -> STR_101(4), STR_100(4), STR_97(4), STR_96(4), 
 33025 ;;		 -> dbuf(80), 
 33026 ;; Auto vars:     Size  Location     Type
 33027 ;;  d               2  [STACK] PTR unsigned char 
 33028 ;;		 -> dbuf(80), 
 33029 ;;  s               2  [STACK] PTR const unsigned char 
 33030 ;;		 -> STR_101(4), STR_100(4), STR_97(4), STR_96(4), 
 33031 ;;		 -> dbuf(80), 
 33032 ;; Return value:  Size  Location     Type
 33033 ;;                  2  [STACK] PTR unsigned char 
 33034 ;; Registers used:
 33035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 33036 ;; Tracked objects:
 33037 ;;		On entry : 0/0
 33038 ;;		On exit  : 0/0
 33039 ;;		Unchanged: 0/0
 33040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33045 ;;Total ram usage:        0 bytes
 33046 ;; Hardware stack levels used:    1
 33047 ;; Hardware stack levels required when called:   15
 33048 ;; This function calls:
 33049 ;;		Nothing
 33050 ;; This function is called by:
 33051 ;;		_efgtoa
 33052 ;; This function uses a reentrant model
 33053 ;;
 33054                           
 33055                           	psect	text106
 33056  00062E                     __ptext106:
 33057                           	opt callstack 0
 33058  00062E                     _strcpy:
 33059                           	opt callstack 0
 33060                           
 33061                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33062  00062E  52E6               	movf	postinc1,f,c
 33063  000630  52E6               	movf	postinc1,f,c
 33064  000632  52E6               	movf	postinc1,f,c
 33065  000634  52E6               	movf	postinc1,f,c
 33066                           
 33067                           ;stkvar	_src @ sp[(-4)+-4]
 33068                           
 33069                           ;incstack = 0
 33070 ;; hardware stack exceeded
 33071  000636  0EF8               	movlw	-8
 33072  000638  006F FF8C  F034    	movff	plusw1,btemp+10
 33073  00063E  0EF9               	movlw	-7
 33074  000640  006F FF8C  F035    	movff	plusw1,btemp+11
 33075                           
 33076                           ;stkvar	_s @ sp[(-4)+2]
 33077  000646  0EFF               	movlw	-1
 33078  000648  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33079  00064E  0EFE               	movlw	-2
 33080  000650  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33081                           
 33082                           ;stkvar	_dest @ sp[(-4)+-2]
 33083  000656  0EFA               	movlw	-6
 33084  000658  006F FF8C  F034    	movff	plusw1,btemp+10
 33085  00065E  0EFB               	movlw	-5
 33086  000660  006F FF8C  F035    	movff	plusw1,btemp+11
 33087                           
 33088                           ;stkvar	_d @ sp[(-4)+0]
 33089  000666  0EFD               	movlw	-3
 33090  000668  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33091  00066E  0EFC               	movlw	-4
 33092  000670  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33093  000676                     l15494:
 33094                           
 33095                           ;stkvar	_s @ sp[(-4)+2]
 33096  000676  50E1               	movf	fsr1l,w,c
 33097  000678  0FFE               	addlw	-2
 33098  00067A  6ED9               	movwf	fsr2l,c
 33099  00067C  50E2               	movf	fsr1h,w,c
 33100  00067E  6EDA               	movwf	fsr2h,c
 33101  000680  0EFF               	movlw	255
 33102  000682  22DA               	addwfc	fsr2h,f,c
 33103  000684  006F FF7C  F034    	movff	indf2,btemp+10
 33104  00068A  0E01               	movlw	1
 33105  00068C  26DE               	addwf	postinc2,f,c
 33106  00068E  006F FF7C  F035    	movff	indf2,btemp+11
 33107  000694  0E00               	movlw	0
 33108  000696  22DD               	addwfc	postdec2,f,c
 33109  000698  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 33110  00069E  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 33111  0006A4  0E00               	movlw	low (__mediumconst shr (0+16))
 33112  0006A6  6EF8               	movwf	tblptru,c
 33113                           
 33114                           ;stkvar	_d @ sp[(-4)+0]
 33115  0006A8  50E1               	movf	fsr1l,w,c
 33116  0006AA  0FFC               	addlw	-4
 33117  0006AC  6ED9               	movwf	fsr2l,c
 33118  0006AE  50E2               	movf	fsr1h,w,c
 33119  0006B0  6EDA               	movwf	fsr2h,c
 33120  0006B2  0EFF               	movlw	255
 33121  0006B4  22DA               	addwfc	fsr2h,f,c
 33122  0006B6  006F FF7C  F034    	movff	indf2,btemp+10
 33123  0006BC  0E01               	movlw	1
 33124  0006BE  26DE               	addwf	postinc2,f,c
 33125  0006C0  006F FF7C  F035    	movff	indf2,btemp+11
 33126  0006C6  0E00               	movlw	0
 33127  0006C8  22DD               	addwfc	postdec2,f,c
 33128  0006CA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 33129  0006D0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 33130  0006D6  0E1F               	movlw	(high __ramtop+-1)
 33131  0006D8  64F7               	cpfsgt	tblptrh,c
 33132  0006DA  D003               	bra	u14387
 33133  0006DC  0008               	tblrd		*
 33134  0006DE  50F5               	movf	tablat,w,c
 33135  0006E0  D007               	bra	u14380
 33136  0006E2                     u14387:
 33137  0006E2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 33138  0006E8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 33139  0006EE  50EF               	movf	indf0,w,c
 33140  0006F0                     u14380:
 33141  0006F0  6EDF               	movwf	indf2,c
 33142  0006F2  50DF               	movf	indf2,w,c
 33143  0006F4  A4D8               	btfss	status,2,c
 33144  0006F6  D7BF               	goto	l15494
 33145                           
 33146                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 33147  0006F8  0EF8               	movlw	248
 33148  0006FA  26E1               	addwf	fsr1l,f,c
 33149  0006FC  0EFF               	movlw	255
 33150  0006FE  22E2               	addwfc	fsr1h,f,c
 33151  000700  0012               	return		;funcret
 33152  000702                     __end_of_strcpy:
 33153                           	opt callstack 0
 33154                           
 33155 ;; *************** function _floorf *****************
 33156 ;; Defined at:
 33157 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 33158 ;; Parameters:    Size  Location     Type
 33159 ;;  x               4  [STACK] float 
 33160 ;; Auto vars:     Size  Location     Type
 33161 ;;  u               4  [STACK] struct .
 33162 ;;  m               4  [STACK] unsigned long 
 33163 ;;  e               2  [STACK] int 
 33164 ;; Return value:  Size  Location     Type
 33165 ;;                  4  [STACK] float 
 33166 ;; Registers used:
 33167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33168 ;; Tracked objects:
 33169 ;;		On entry : 0/0
 33170 ;;		On exit  : 0/0
 33171 ;;		Unchanged: 0/0
 33172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33177 ;;Total ram usage:        0 bytes
 33178 ;; Hardware stack levels used:    1
 33179 ;; Hardware stack levels required when called:   15
 33180 ;; This function calls:
 33181 ;;		Nothing
 33182 ;; This function is called by:
 33183 ;;		_efgtoa
 33184 ;; This function uses a reentrant model
 33185 ;;
 33186                           
 33187                           	psect	text107
 33188  01AAF6                     __ptext107:
 33189                           	opt callstack 0
 33190  01AAF6                     _floorf:
 33191                           	opt callstack 0
 33192                           
 33193                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 33194  01AAF6  0E0A               	movlw	10
 33195  01AAF8  26E1               	addwf	fsr1l,f,c
 33196  01AAFA  0E00               	movlw	0
 33197  01AAFC  22E2               	addwfc	fsr1h,f,c
 33198                           
 33199                           ;incstack = 0
 33200 ;; hardware stack exceeded
 33201  01AAFE  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 33202  01AB04  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 33203  01AB0A  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 33204  01AB10  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 33205                           
 33206                           ;stkvar	_u @ sp[(-10)+0]
 33207  01AB16  0EF6               	movlw	-10
 33208  01AB18  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33209  01AB1E  0EF7               	movlw	-9
 33210  01AB20  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33211  01AB26  0EF8               	movlw	-8
 33212  01AB28  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33213  01AB2E  0EF9               	movlw	-7
 33214  01AB30  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33215                           
 33216                           ;stkvar	_x @ sp[(-10)+-4]
 33217  01AB36  0EF2               	movlw	-14
 33218  01AB38  006F FF8C  F032    	movff	plusw1,btemp+8
 33219  01AB3E  0EF3               	movlw	-13
 33220  01AB40  006F FF8C  F033    	movff	plusw1,btemp+9
 33221  01AB46  0EF4               	movlw	-12
 33222  01AB48  006F FF8C  F034    	movff	plusw1,btemp+10
 33223  01AB4E  0EF5               	movlw	-11
 33224  01AB50  006F FF8C  F035    	movff	plusw1,btemp+11
 33225                           
 33226                           ;stkvar	_u @ sp[(-10)+0]
 33227  01AB56  0EF6               	movlw	-10
 33228  01AB58  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33229  01AB5E  0EF7               	movlw	-9
 33230  01AB60  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33231  01AB66  0EF8               	movlw	-8
 33232  01AB68  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33233  01AB6E  0EF9               	movlw	-7
 33234  01AB70  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33235  01AB76  0E81               	movlw	129
 33236  01AB78  6E34               	movwf	(btemp+10)^0,c
 33237  01AB7A  0EFF               	movlw	255
 33238  01AB7C  6E35               	movwf	(btemp+11)^0,c
 33239                           
 33240                           ;stkvar	_u @ sp[(-10)+0]
 33241  01AB7E  0EF6               	movlw	-10
 33242  01AB80  006F FF8C  F02E    	movff	plusw1,btemp+4
 33243  01AB86  0EF7               	movlw	-9
 33244  01AB88  006F FF8C  F02F    	movff	plusw1,btemp+5
 33245  01AB8E  0EF8               	movlw	-8
 33246  01AB90  006F FF8C  F030    	movff	plusw1,btemp+6
 33247  01AB96  0EF9               	movlw	-7
 33248  01AB98  006F FF8C  F031    	movff	plusw1,btemp+7
 33249  01AB9E  0E18               	movlw	24
 33250  01ABA0  D005               	goto	u7890
 33251  01ABA2                     u7895:
 33252  01ABA2  90D8               	bcf	status,0,c
 33253  01ABA4  3231               	rrcf	(btemp+7)^0,f,c
 33254  01ABA6  3230               	rrcf	(btemp+6)^0,f,c
 33255  01ABA8  322F               	rrcf	(btemp+5)^0,f,c
 33256  01ABAA  322E               	rrcf	(btemp+4)^0,f,c
 33257  01ABAC                     u7890:
 33258  01ABAC  2EE8               	decfsz	wreg,f,c
 33259  01ABAE  D7F9               	goto	u7895
 33260  01ABB0  0060  F0B8  F032   	movff	btemp+4,btemp+8
 33261  01ABB6  0060  F0BC  F033   	movff	btemp+5,btemp+9
 33262  01ABBC  0EFF               	movlw	255
 33263  01ABBE  1632               	andwf	(btemp+8)^0,f,c
 33264  01ABC0  0E00               	movlw	0
 33265  01ABC2  1633               	andwf	(btemp+9)^0,f,c
 33266  01ABC4  5034               	movf	(btemp+10)^0,w,c
 33267  01ABC6  2632               	addwf	(btemp+8)^0,f,c
 33268  01ABC8  5035               	movf	(btemp+11)^0,w,c
 33269  01ABCA  2233               	addwfc	(btemp+9)^0,f,c
 33270                           
 33271                           ;stkvar	_e @ sp[(-10)+8]
 33272  01ABCC  0EFE               	movlw	-2
 33273  01ABCE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33274  01ABD4  0EFF               	movlw	-1
 33275  01ABD6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33276                           
 33277                           ;stkvar	_e @ sp[(-10)+8]
 33278  01ABDC  0EFF               	movlw	-1
 33279  01ABDE  BEE3               	btfsc	plusw1,7,c
 33280  01ABE0  D019               	goto	l10176
 33281  01ABE2  0EFF               	movlw	-1
 33282  01ABE4  50E3               	movf	plusw1,w,c
 33283  01ABE6  E108               	bnz	u7900
 33284  01ABE8  0EFE               	movlw	-2
 33285  01ABEA  006F FF8C  F02A    	movff	plusw1,btemp
 33286  01ABF0  0E17               	movlw	23
 33287  01ABF2  5E2A               	subwf	btemp^0,f,c
 33288  01ABF4  A0D8               	btfss	status,0,c
 33289  01ABF6  D00E               	goto	l10176
 33290  01ABF8                     u7900:
 33291                           
 33292                           ;stkvar	_x @ sp[(-10)+-4]
 33293  01ABF8  0EF2               	movlw	-14
 33294  01ABFA  006F FF8C  F02A    	movff	plusw1,btemp
 33295  01AC00  0EF3               	movlw	-13
 33296  01AC02  006F FF8C  F02B    	movff	plusw1,btemp+1
 33297  01AC08  0EF4               	movlw	-12
 33298  01AC0A  006F FF8C  F02C    	movff	plusw1,btemp+2
 33299  01AC10  0EF5               	movlw	-11
 33300  01AC12  D11F               	goto	L35
 33301  01AC14                     l10176:
 33302                           
 33303                           ;stkvar	_e @ sp[(-10)+8]
 33304  01AC14  0EFF               	movlw	-1
 33305  01AC16  BEE3               	btfsc	plusw1,7,c
 33306  01AC18  D0B4               	goto	l10192
 33307                           
 33308                           ;stkvar	_e @ sp[(-10)+8]
 33309  01AC1A  0EFE               	movlw	-2
 33310  01AC1C  006F FF8C  F035    	movff	plusw1,btemp+11
 33311  01AC22  0EFF               	movlw	255
 33312  01AC24  6E2E               	movwf	(btemp+4)^0,c
 33313  01AC26  0EFF               	movlw	255
 33314  01AC28  6E2F               	movwf	(btemp+5)^0,c
 33315  01AC2A  0E7F               	movlw	127
 33316  01AC2C  6E30               	movwf	(btemp+6)^0,c
 33317  01AC2E  0E00               	movlw	0
 33318  01AC30  6E31               	movwf	(btemp+7)^0,c
 33319  01AC32                     u7925:
 33320  01AC32  6635               	tstfsz	(btemp+11)^0,c
 33321  01AC34  D001               	goto	u7926
 33322  01AC36  D007               	goto	u7927
 33323  01AC38                     u7926:
 33324  01AC38  3431               	rlcf	(btemp+7)^0,w,c
 33325  01AC3A  3231               	rrcf	(btemp+7)^0,f,c
 33326  01AC3C  3230               	rrcf	(btemp+6)^0,f,c
 33327  01AC3E  322F               	rrcf	(btemp+5)^0,f,c
 33328  01AC40  322E               	rrcf	(btemp+4)^0,f,c
 33329  01AC42  2E35               	decfsz	(btemp+11)^0,f,c
 33330  01AC44  D7F6               	goto	u7925
 33331  01AC46                     u7927:
 33332                           
 33333                           ;stkvar	_m @ sp[(-10)+4]
 33334  01AC46  0EFA               	movlw	-6
 33335  01AC48  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 33336  01AC4E  0EFB               	movlw	-5
 33337  01AC50  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 33338  01AC56  0EFC               	movlw	-4
 33339  01AC58  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33340  01AC5E  0EFD               	movlw	-3
 33341  01AC60  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33342                           
 33343                           ;stkvar	_m @ sp[(-10)+4]
 33344                           ;stkvar	_u @ sp[(-10)+0]
 33345  01AC66  0EF6               	movlw	-10
 33346  01AC68  006F FF8C  F032    	movff	plusw1,btemp+8
 33347  01AC6E  0EF7               	movlw	-9
 33348  01AC70  006F FF8C  F033    	movff	plusw1,btemp+9
 33349  01AC76  0EF8               	movlw	-8
 33350  01AC78  006F FF8C  F034    	movff	plusw1,btemp+10
 33351  01AC7E  0EF9               	movlw	-7
 33352  01AC80  006F FF8C  F035    	movff	plusw1,btemp+11
 33353  01AC86  0EFA               	movlw	-6
 33354  01AC88  50E3               	movf	plusw1,w,c
 33355  01AC8A  1632               	andwf	(btemp+8)^0,f,c
 33356  01AC8C  0EFB               	movlw	-5
 33357  01AC8E  50E3               	movf	plusw1,w,c
 33358  01AC90  1633               	andwf	(btemp+9)^0,f,c
 33359  01AC92  0EFC               	movlw	-4
 33360  01AC94  50E3               	movf	plusw1,w,c
 33361  01AC96  1634               	andwf	(btemp+10)^0,f,c
 33362  01AC98  0EFD               	movlw	-3
 33363  01AC9A  50E3               	movf	plusw1,w,c
 33364  01AC9C  1635               	andwf	(btemp+11)^0,f,c
 33365  01AC9E  5032               	movf	(btemp+8)^0,w,c
 33366  01ACA0  1033               	iorwf	(btemp+9)^0,w,c
 33367  01ACA2  1034               	iorwf	(btemp+10)^0,w,c
 33368  01ACA4  1035               	iorwf	(btemp+11)^0,w,c
 33369  01ACA6  B4D8               	btfsc	status,2,c
 33370  01ACA8  D7A7               	goto	u7900
 33371                           
 33372                           ;stkvar	_u @ sp[(-10)+0]
 33373  01ACAA  0EF6               	movlw	-10
 33374  01ACAC  006F FF8C  F032    	movff	plusw1,btemp+8
 33375  01ACB2  0EF7               	movlw	-9
 33376  01ACB4  006F FF8C  F033    	movff	plusw1,btemp+9
 33377  01ACBA  0EF8               	movlw	-8
 33378  01ACBC  006F FF8C  F034    	movff	plusw1,btemp+10
 33379  01ACC2  0EF9               	movlw	-7
 33380  01ACC4  006F FF8C  F035    	movff	plusw1,btemp+11
 33381  01ACCA  0E20               	movlw	32
 33382  01ACCC  D005               	goto	u7940
 33383  01ACCE                     u7945:
 33384  01ACCE  90D8               	bcf	status,0,c
 33385  01ACD0  3235               	rrcf	(btemp+11)^0,f,c
 33386  01ACD2  3234               	rrcf	(btemp+10)^0,f,c
 33387  01ACD4  3233               	rrcf	(btemp+9)^0,f,c
 33388  01ACD6  3232               	rrcf	(btemp+8)^0,f,c
 33389  01ACD8                     u7940:
 33390  01ACD8  2EE8               	decfsz	wreg,f,c
 33391  01ACDA  D7F9               	goto	u7945
 33392  01ACDC  5032               	movf	(btemp+8)^0,w,c
 33393  01ACDE  B4D8               	btfsc	status,2,c
 33394  01ACE0  D028               	goto	l10190
 33395                           
 33396                           ;stkvar	_m @ sp[(-10)+4]
 33397                           ;stkvar	_u @ sp[(-10)+0]
 33398  01ACE2  0EF6               	movlw	-10
 33399  01ACE4  50E3               	movf	plusw1,w,c
 33400  01ACE6  6E2A               	movwf	btemp^0,c
 33401  01ACE8  0EFA               	movlw	-6
 33402  01ACEA  50E3               	movf	plusw1,w,c
 33403  01ACEC  262A               	addwf	btemp^0,f,c
 33404  01ACEE  0EF6               	movlw	-10
 33405  01ACF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 33406  01ACF6  0EF7               	movlw	-9
 33407  01ACF8  50E3               	movf	plusw1,w,c
 33408  01ACFA  6E2A               	movwf	btemp^0,c
 33409  01ACFC  0EFB               	movlw	-5
 33410  01ACFE  50E3               	movf	plusw1,w,c
 33411  01AD00  222A               	addwfc	btemp^0,f,c
 33412  01AD02  0EF7               	movlw	-9
 33413  01AD04  0060  F0AB  FFE3   	movff	btemp,plusw1
 33414  01AD0A  0EF8               	movlw	-8
 33415  01AD0C  50E3               	movf	plusw1,w,c
 33416  01AD0E  6E2A               	movwf	btemp^0,c
 33417  01AD10  0EFC               	movlw	-4
 33418  01AD12  50E3               	movf	plusw1,w,c
 33419  01AD14  222A               	addwfc	btemp^0,f,c
 33420  01AD16  0EF8               	movlw	-8
 33421  01AD18  0060  F0AB  FFE3   	movff	btemp,plusw1
 33422  01AD1E  0EF9               	movlw	-7
 33423  01AD20  50E3               	movf	plusw1,w,c
 33424  01AD22  6E2A               	movwf	btemp^0,c
 33425  01AD24  0EFD               	movlw	-3
 33426  01AD26  50E3               	movf	plusw1,w,c
 33427  01AD28  222A               	addwfc	btemp^0,f,c
 33428  01AD2A  0EF9               	movlw	-7
 33429  01AD2C  0060  F0AB  FFE3   	movff	btemp,plusw1
 33430  01AD32                     l10190:
 33431                           
 33432                           ;stkvar	_m @ sp[(-10)+4]
 33433  01AD32  0EFA               	movlw	-6
 33434  01AD34  006F FF8C  F032    	movff	plusw1,btemp+8
 33435  01AD3A  0EFB               	movlw	-5
 33436  01AD3C  006F FF8C  F033    	movff	plusw1,btemp+9
 33437  01AD42  0EFC               	movlw	-4
 33438  01AD44  006F FF8C  F034    	movff	plusw1,btemp+10
 33439  01AD4A  0EFD               	movlw	-3
 33440  01AD4C  006F FF8C  F035    	movff	plusw1,btemp+11
 33441  01AD52  1C32               	comf	(btemp+8)^0,w,c
 33442  01AD54  6E2E               	movwf	(btemp+4)^0,c
 33443  01AD56  1C33               	comf	(btemp+9)^0,w,c
 33444  01AD58  6E2F               	movwf	(btemp+5)^0,c
 33445  01AD5A  1C34               	comf	(btemp+10)^0,w,c
 33446  01AD5C  6E30               	movwf	(btemp+6)^0,c
 33447  01AD5E  1C35               	comf	(btemp+11)^0,w,c
 33448  01AD60  6E31               	movwf	(btemp+7)^0,c
 33449                           
 33450                           ;stkvar	_u @ sp[(-10)+0]
 33451  01AD62  50E1               	movf	fsr1l,w,c
 33452  01AD64  0FF6               	addlw	-10
 33453  01AD66  6ED9               	movwf	fsr2l,c
 33454  01AD68  50E2               	movf	fsr1h,w,c
 33455  01AD6A  6EDA               	movwf	fsr2h,c
 33456  01AD6C  0EFF               	movlw	255
 33457  01AD6E  22DA               	addwfc	fsr2h,f,c
 33458  01AD70  502E               	movf	(btemp+4)^0,w,c
 33459  01AD72  16DE               	andwf	postinc2,f,c
 33460  01AD74  502F               	movf	(btemp+5)^0,w,c
 33461  01AD76  16DE               	andwf	postinc2,f,c
 33462  01AD78  5030               	movf	(btemp+6)^0,w,c
 33463  01AD7A  16DE               	andwf	postinc2,f,c
 33464  01AD7C  5031               	movf	(btemp+7)^0,w,c
 33465  01AD7E  16DE               	andwf	postinc2,f,c
 33466  01AD80  D05B               	goto	l10200
 33467  01AD82                     l10192:
 33468                           
 33469                           ;stkvar	_u @ sp[(-10)+0]
 33470  01AD82  0EF6               	movlw	-10
 33471  01AD84  006F FF8C  F032    	movff	plusw1,btemp+8
 33472  01AD8A  0EF7               	movlw	-9
 33473  01AD8C  006F FF8C  F033    	movff	plusw1,btemp+9
 33474  01AD92  0EF8               	movlw	-8
 33475  01AD94  006F FF8C  F034    	movff	plusw1,btemp+10
 33476  01AD9A  0EF9               	movlw	-7
 33477  01AD9C  006F FF8C  F035    	movff	plusw1,btemp+11
 33478  01ADA2  0E20               	movlw	32
 33479  01ADA4  D005               	goto	u7960
 33480  01ADA6                     u7965:
 33481  01ADA6  90D8               	bcf	status,0,c
 33482  01ADA8  3235               	rrcf	(btemp+11)^0,f,c
 33483  01ADAA  3234               	rrcf	(btemp+10)^0,f,c
 33484  01ADAC  3233               	rrcf	(btemp+9)^0,f,c
 33485  01ADAE  3232               	rrcf	(btemp+8)^0,f,c
 33486  01ADB0                     u7960:
 33487  01ADB0  2EE8               	decfsz	wreg,f,c
 33488  01ADB2  D7F9               	goto	u7965
 33489  01ADB4  6632               	tstfsz	(btemp+8)^0,c
 33490  01ADB6  D009               	goto	l10196
 33491                           
 33492                           ;stkvar	_u @ sp[(-10)+0]
 33493  01ADB8  0EF6               	movlw	-10
 33494  01ADBA  6AE3               	clrf	plusw1,c
 33495  01ADBC  0EF7               	movlw	-9
 33496  01ADBE  6AE3               	clrf	plusw1,c
 33497  01ADC0  0EF8               	movlw	-8
 33498  01ADC2  6AE3               	clrf	plusw1,c
 33499  01ADC4  0EF9               	movlw	-7
 33500  01ADC6  6AE3               	clrf	plusw1,c
 33501  01ADC8  D037               	goto	l10200
 33502  01ADCA                     l10196:
 33503                           
 33504                           ;stkvar	_u @ sp[(-10)+0]
 33505  01ADCA  0EF6               	movlw	-10
 33506  01ADCC  006F FF8C  F032    	movff	plusw1,btemp+8
 33507  01ADD2  0EF7               	movlw	-9
 33508  01ADD4  006F FF8C  F033    	movff	plusw1,btemp+9
 33509  01ADDA  0EF8               	movlw	-8
 33510  01ADDC  006F FF8C  F034    	movff	plusw1,btemp+10
 33511  01ADE2  0EF9               	movlw	-7
 33512  01ADE4  006F FF8C  F035    	movff	plusw1,btemp+11
 33513  01ADEA  90D8               	bcf	status,0,c
 33514  01ADEC  3432               	rlcf	(btemp+8)^0,w,c
 33515  01ADEE  6E2E               	movwf	(btemp+4)^0,c
 33516  01ADF0  3433               	rlcf	(btemp+9)^0,w,c
 33517  01ADF2  6E2F               	movwf	(btemp+5)^0,c
 33518  01ADF4  3434               	rlcf	(btemp+10)^0,w,c
 33519  01ADF6  6E30               	movwf	(btemp+6)^0,c
 33520  01ADF8  3435               	rlcf	(btemp+11)^0,w,c
 33521  01ADFA  6E31               	movwf	(btemp+7)^0,c
 33522  01ADFC  502E               	movf	(btemp+4)^0,w,c
 33523  01ADFE  102F               	iorwf	(btemp+5)^0,w,c
 33524  01AE00  1030               	iorwf	(btemp+6)^0,w,c
 33525  01AE02  1031               	iorwf	(btemp+7)^0,w,c
 33526  01AE04  B4D8               	btfsc	status,2,c
 33527  01AE06  D018               	goto	l10200
 33528  01AE08  0E00               	movlw	0
 33529  01AE0A  6E32               	movwf	(btemp+8)^0,c
 33530  01AE0C  0E00               	movlw	0
 33531  01AE0E  6E33               	movwf	(btemp+9)^0,c
 33532  01AE10  0E80               	movlw	128
 33533  01AE12  6E34               	movwf	(btemp+10)^0,c
 33534  01AE14  0EBF               	movlw	191
 33535  01AE16  6E35               	movwf	(btemp+11)^0,c
 33536                           
 33537                           ;stkvar	_u @ sp[(-10)+0]
 33538  01AE18  0EF6               	movlw	-10
 33539  01AE1A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33540  01AE20  0EF7               	movlw	-9
 33541  01AE22  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33542  01AE28  0EF8               	movlw	-8
 33543  01AE2A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33544  01AE30  0EF9               	movlw	-7
 33545  01AE32  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33546  01AE38                     l10200:
 33547                           
 33548                           ;stkvar	_u @ sp[(-10)+0]
 33549  01AE38  0EF6               	movlw	-10
 33550  01AE3A  006F FF8C  F02A    	movff	plusw1,btemp
 33551  01AE40  0EF7               	movlw	-9
 33552  01AE42  006F FF8C  F02B    	movff	plusw1,btemp+1
 33553  01AE48  0EF8               	movlw	-8
 33554  01AE4A  006F FF8C  F02C    	movff	plusw1,btemp+2
 33555  01AE50  0EF9               	movlw	-7
 33556  01AE52                     L35:
 33557  01AE52  006F FF8C  F02D    	movff	plusw1,btemp+3
 33558                           
 33559                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33560  01AE58  0EF2               	movlw	242
 33561  01AE5A  26E1               	addwf	fsr1l,f,c
 33562  01AE5C  0EFF               	movlw	255
 33563  01AE5E  22E2               	addwfc	fsr1h,f,c
 33564  01AE60  0012               	return		;funcret
 33565  01AE62                     __end_of_floorf:
 33566                           	opt callstack 0
 33567                           
 33568 ;; *************** function ___fpclassifyf *****************
 33569 ;; Defined at:
 33570 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 33571 ;; Parameters:    Size  Location     Type
 33572 ;;  x               4  [STACK] float 
 33573 ;; Auto vars:     Size  Location     Type
 33574 ;;  u               4  [STACK] struct .
 33575 ;;  e               2  [STACK] int 
 33576 ;; Return value:  Size  Location     Type
 33577 ;;                  2  [STACK] int 
 33578 ;; Registers used:
 33579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 33580 ;; Tracked objects:
 33581 ;;		On entry : 0/0
 33582 ;;		On exit  : 0/0
 33583 ;;		Unchanged: 0/0
 33584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33589 ;;Total ram usage:        0 bytes
 33590 ;; Hardware stack levels used:    1
 33591 ;; Hardware stack levels required when called:   15
 33592 ;; This function calls:
 33593 ;;		Nothing
 33594 ;; This function is called by:
 33595 ;;		_efgtoa
 33596 ;; This function uses a reentrant model
 33597 ;;
 33598                           
 33599                           	psect	text108
 33600  01E062                     __ptext108:
 33601                           	opt callstack 0
 33602  01E062                     ___fpclassifyf:
 33603                           	opt callstack 0
 33604                           
 33605                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33606  01E062  0E06               	movlw	6
 33607  01E064  26E1               	addwf	fsr1l,f,c
 33608  01E066  0E00               	movlw	0
 33609  01E068  22E2               	addwfc	fsr1h,f,c
 33610                           
 33611                           ;incstack = 0
 33612 ;; hardware stack exceeded
 33613  01E06A  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 33614  01E070  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 33615  01E076  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 33616  01E07C  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 33617                           
 33618                           ;stkvar	_u @ sp[(-6)+0]
 33619  01E082  0EFA               	movlw	-6
 33620  01E084  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33621  01E08A  0EFB               	movlw	-5
 33622  01E08C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33623  01E092  0EFC               	movlw	-4
 33624  01E094  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33625  01E09A  0EFD               	movlw	-3
 33626  01E09C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33627                           
 33628                           ;stkvar	_x @ sp[(-6)+-4]
 33629  01E0A2  0EF6               	movlw	-10
 33630  01E0A4  006F FF8C  F032    	movff	plusw1,btemp+8
 33631  01E0AA  0EF7               	movlw	-9
 33632  01E0AC  006F FF8C  F033    	movff	plusw1,btemp+9
 33633  01E0B2  0EF8               	movlw	-8
 33634  01E0B4  006F FF8C  F034    	movff	plusw1,btemp+10
 33635  01E0BA  0EF9               	movlw	-7
 33636  01E0BC  006F FF8C  F035    	movff	plusw1,btemp+11
 33637                           
 33638                           ;stkvar	_u @ sp[(-6)+0]
 33639  01E0C2  0EFA               	movlw	-6
 33640  01E0C4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33641  01E0CA  0EFB               	movlw	-5
 33642  01E0CC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33643  01E0D2  0EFC               	movlw	-4
 33644  01E0D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33645  01E0DA  0EFD               	movlw	-3
 33646  01E0DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33647                           
 33648                           ;stkvar	_u @ sp[(-6)+0]
 33649  01E0E2  0EFA               	movlw	-6
 33650  01E0E4  006F FF8C  F032    	movff	plusw1,btemp+8
 33651  01E0EA  0EFB               	movlw	-5
 33652  01E0EC  006F FF8C  F033    	movff	plusw1,btemp+9
 33653  01E0F2  0EFC               	movlw	-4
 33654  01E0F4  006F FF8C  F034    	movff	plusw1,btemp+10
 33655  01E0FA  0EFD               	movlw	-3
 33656  01E0FC  006F FF8C  F035    	movff	plusw1,btemp+11
 33657  01E102  0E18               	movlw	24
 33658  01E104  D005               	goto	u7770
 33659  01E106                     u7775:
 33660  01E106  90D8               	bcf	status,0,c
 33661  01E108  3235               	rrcf	(btemp+11)^0,f,c
 33662  01E10A  3234               	rrcf	(btemp+10)^0,f,c
 33663  01E10C  3233               	rrcf	(btemp+9)^0,f,c
 33664  01E10E  3232               	rrcf	(btemp+8)^0,f,c
 33665  01E110                     u7770:
 33666  01E110  2EE8               	decfsz	wreg,f,c
 33667  01E112  D7F9               	goto	u7775
 33668  01E114  0060  F0C8  F030   	movff	btemp+8,btemp+6
 33669  01E11A  0060  F0CC  F031   	movff	btemp+9,btemp+7
 33670  01E120  0EFF               	movlw	255
 33671  01E122  1630               	andwf	(btemp+6)^0,f,c
 33672  01E124  0E00               	movlw	0
 33673  01E126  1631               	andwf	(btemp+7)^0,f,c
 33674                           
 33675                           ;stkvar	_e @ sp[(-6)+4]
 33676  01E128  0EFE               	movlw	-2
 33677  01E12A  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33678  01E130  0EFF               	movlw	-1
 33679  01E132  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33680                           
 33681                           ;stkvar	_e @ sp[(-6)+4]
 33682  01E138  0EFE               	movlw	-2
 33683  01E13A  006F FF8C  F02A    	movff	plusw1,btemp
 33684  01E140  0EFF               	movlw	-1
 33685  01E142  50E3               	movf	plusw1,w,c
 33686  01E144  102A               	iorwf	btemp^0,w,c
 33687  01E146  A4D8               	btfss	status,2,c
 33688  01E148  D023               	goto	l10138
 33689                           
 33690                           ;stkvar	_u @ sp[(-6)+0]
 33691  01E14A  0EFA               	movlw	-6
 33692  01E14C  006F FF8C  F032    	movff	plusw1,btemp+8
 33693  01E152  0EFB               	movlw	-5
 33694  01E154  006F FF8C  F033    	movff	plusw1,btemp+9
 33695  01E15A  0EFC               	movlw	-4
 33696  01E15C  006F FF8C  F034    	movff	plusw1,btemp+10
 33697  01E162  0EFD               	movlw	-3
 33698  01E164  006F FF8C  F035    	movff	plusw1,btemp+11
 33699  01E16A  90D8               	bcf	status,0,c
 33700  01E16C  3432               	rlcf	(btemp+8)^0,w,c
 33701  01E16E  6E2E               	movwf	(btemp+4)^0,c
 33702  01E170  3433               	rlcf	(btemp+9)^0,w,c
 33703  01E172  6E2F               	movwf	(btemp+5)^0,c
 33704  01E174  3434               	rlcf	(btemp+10)^0,w,c
 33705  01E176  6E30               	movwf	(btemp+6)^0,c
 33706  01E178  3435               	rlcf	(btemp+11)^0,w,c
 33707  01E17A  6E31               	movwf	(btemp+7)^0,c
 33708  01E17C  502E               	movf	(btemp+4)^0,w,c
 33709  01E17E  102F               	iorwf	(btemp+5)^0,w,c
 33710  01E180  1030               	iorwf	(btemp+6)^0,w,c
 33711  01E182  1031               	iorwf	(btemp+7)^0,w,c
 33712  01E184  A4D8               	btfss	status,2,c
 33713  01E186  D002               	goto	l10134
 33714  01E188  0E02               	movlw	2
 33715  01E18A  D02E               	goto	L36
 33716  01E18C                     l10134:
 33717  01E18C  0E03               	movlw	3
 33718  01E18E  D02C               	goto	L36
 33719  01E190                     l10138:
 33720                           
 33721                           ;stkvar	_e @ sp[(-6)+4]
 33722  01E190  0EFE               	movlw	-2
 33723  01E192  28E3               	incf	plusw1,w,c
 33724  01E194  E128               	bnz	l10144
 33725  01E196  0EFF               	movlw	-1
 33726  01E198  50E3               	movf	plusw1,w,c
 33727  01E19A  A4D8               	btfss	status,2,c
 33728  01E19C  D024               	goto	l10144
 33729                           
 33730                           ;stkvar	_u @ sp[(-6)+0]
 33731  01E19E  0EFA               	movlw	-6
 33732  01E1A0  006F FF8C  F032    	movff	plusw1,btemp+8
 33733  01E1A6  0EFB               	movlw	-5
 33734  01E1A8  006F FF8C  F033    	movff	plusw1,btemp+9
 33735  01E1AE  0EFC               	movlw	-4
 33736  01E1B0  006F FF8C  F034    	movff	plusw1,btemp+10
 33737  01E1B6  0EFD               	movlw	-3
 33738  01E1B8  006F FF8C  F035    	movff	plusw1,btemp+11
 33739  01E1BE  0E09               	movlw	9
 33740  01E1C0                     u7815:
 33741  01E1C0  90D8               	bcf	status,0,c
 33742  01E1C2  3632               	rlcf	(btemp+8)^0,f,c
 33743  01E1C4  3633               	rlcf	(btemp+9)^0,f,c
 33744  01E1C6  3634               	rlcf	(btemp+10)^0,f,c
 33745  01E1C8  3635               	rlcf	(btemp+11)^0,f,c
 33746  01E1CA  2EE8               	decfsz	wreg,f,c
 33747  01E1CC  D7F9               	goto	u7815
 33748  01E1CE  5032               	movf	(btemp+8)^0,w,c
 33749  01E1D0  1033               	iorwf	(btemp+9)^0,w,c
 33750  01E1D2  1034               	iorwf	(btemp+10)^0,w,c
 33751  01E1D4  1035               	iorwf	(btemp+11)^0,w,c
 33752  01E1D6  A4D8               	btfss	status,2,c
 33753  01E1D8  D002               	goto	u7820
 33754  01E1DA  0E01               	movlw	1
 33755  01E1DC  D001               	goto	u7830
 33756  01E1DE                     u7820:
 33757  01E1DE  0E00               	movlw	0
 33758  01E1E0                     u7830:
 33759  01E1E0  6E2A               	movwf	btemp^0,c
 33760  01E1E2  6A2B               	clrf	(btemp+1)^0,c
 33761  01E1E4  D004               	goto	l3413
 33762  01E1E6                     l10144:
 33763  01E1E6  0E04               	movlw	4
 33764  01E1E8                     L36:
 33765  01E1E8  6E2A               	movwf	btemp^0,c
 33766  01E1EA  0E00               	movlw	0
 33767  01E1EC  6E2B               	movwf	(btemp+1)^0,c
 33768  01E1EE                     l3413:
 33769                           
 33770                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 33771  01E1EE  0EF6               	movlw	246
 33772  01E1F0  26E1               	addwf	fsr1l,f,c
 33773  01E1F2  0EFF               	movlw	255
 33774  01E1F4  22E2               	addwfc	fsr1h,f,c
 33775  01E1F6  0012               	return		;funcret
 33776  01E1F8                     __end_of___fpclassifyf:
 33777                           	opt callstack 0
 33778                           
 33779 ;; *************** function ___fltol *****************
 33780 ;; Defined at:
 33781 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 33782 ;; Parameters:    Size  Location     Type
 33783 ;;  f1              4  [STACK] int 
 33784 ;; Auto vars:     Size  Location     Type
 33785 ;;  exp1            1  [STACK] unsigned char 
 33786 ;;  sign1           1  [STACK] unsigned char 
 33787 ;; Return value:  Size  Location     Type
 33788 ;;                  4  [STACK] long 
 33789 ;; Registers used:
 33790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 33791 ;; Tracked objects:
 33792 ;;		On entry : 0/0
 33793 ;;		On exit  : 0/0
 33794 ;;		Unchanged: 0/0
 33795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33800 ;;Total ram usage:        0 bytes
 33801 ;; Hardware stack levels used:    1
 33802 ;; Hardware stack levels required when called:   15
 33803 ;; This function calls:
 33804 ;;		Nothing
 33805 ;; This function is called by:
 33806 ;;		_main
 33807 ;;		_convert_dac_raw
 33808 ;;		_load_hist_data
 33809 ;;		_calc_bsoc
 33810 ;;		_init_bsoc
 33811 ;;		_efgtoa
 33812 ;; This function uses a reentrant model
 33813 ;;
 33814                           
 33815                           	psect	text109
 33816  01E992                     __ptext109:
 33817                           	opt callstack 0
 33818  01E992                     ___fltol:
 33819                           	opt callstack 0
 33820                           
 33821                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33822  01E992  52E6               	movf	postinc1,f,c
 33823  01E994  52E6               	movf	postinc1,f,c
 33824                           
 33825                           ;stkvar	_f1 @ sp[(-2)+-4]
 33826                           
 33827                           ;incstack = 0
 33828 ;; hardware stack exceeded
 33829  01E996  0EFA               	movlw	-6
 33830  01E998  006F FF8C  F032    	movff	plusw1,btemp+8
 33831  01E99E  0EFB               	movlw	-5
 33832  01E9A0  006F FF8C  F033    	movff	plusw1,btemp+9
 33833  01E9A6  0EFC               	movlw	-4
 33834  01E9A8  006F FF8C  F034    	movff	plusw1,btemp+10
 33835  01E9AE  0EFD               	movlw	-3
 33836  01E9B0  006F FF8C  F035    	movff	plusw1,btemp+11
 33837  01E9B6  0E18               	movlw	24
 33838  01E9B8  D005               	goto	u9040
 33839  01E9BA                     u9045:
 33840  01E9BA  90D8               	bcf	status,0,c
 33841  01E9BC  3235               	rrcf	(btemp+11)^0,f,c
 33842  01E9BE  3234               	rrcf	(btemp+10)^0,f,c
 33843  01E9C0  3233               	rrcf	(btemp+9)^0,f,c
 33844  01E9C2  3232               	rrcf	(btemp+8)^0,f,c
 33845  01E9C4                     u9040:
 33846  01E9C4  2EE8               	decfsz	wreg,f,c
 33847  01E9C6  D7F9               	goto	u9045
 33848                           
 33849                           ;stkvar	_exp1 @ sp[(-2)+0]
 33850  01E9C8  0EFE               	movlw	-2
 33851  01E9CA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33852  01E9D0  0EFE               	movlw	-2
 33853  01E9D2  50E3               	movf	plusw1,w,c
 33854  01E9D4  A4D8               	btfss	status,2,c
 33855  01E9D6  D006               	goto	l10790
 33856  01E9D8                     u9050:
 33857  01E9D8  0E00               	movlw	0
 33858  01E9DA  6E2A               	movwf	btemp^0,c
 33859  01E9DC  6A2B               	clrf	(btemp+1)^0,c
 33860  01E9DE  6A2C               	clrf	(btemp+2)^0,c
 33861  01E9E0  6A2D               	clrf	(btemp+3)^0,c
 33862  01E9E2  D08B               	goto	l3029
 33863  01E9E4                     l10790:
 33864                           
 33865                           ;stkvar	_f1 @ sp[(-2)+-4]
 33866  01E9E4  0EFA               	movlw	-6
 33867  01E9E6  006F FF8C  F032    	movff	plusw1,btemp+8
 33868  01E9EC  0EFB               	movlw	-5
 33869  01E9EE  006F FF8C  F033    	movff	plusw1,btemp+9
 33870  01E9F4  0EFC               	movlw	-4
 33871  01E9F6  006F FF8C  F034    	movff	plusw1,btemp+10
 33872  01E9FC  0EFD               	movlw	-3
 33873  01E9FE  006F FF8C  F035    	movff	plusw1,btemp+11
 33874  01EA04  0E20               	movlw	32
 33875  01EA06  D005               	goto	u9060
 33876  01EA08                     u9065:
 33877  01EA08  90D8               	bcf	status,0,c
 33878  01EA0A  3235               	rrcf	(btemp+11)^0,f,c
 33879  01EA0C  3234               	rrcf	(btemp+10)^0,f,c
 33880  01EA0E  3233               	rrcf	(btemp+9)^0,f,c
 33881  01EA10  3232               	rrcf	(btemp+8)^0,f,c
 33882  01EA12                     u9060:
 33883  01EA12  2EE8               	decfsz	wreg,f,c
 33884  01EA14  D7F9               	goto	u9065
 33885                           
 33886                           ;stkvar	_sign1 @ sp[(-2)+1]
 33887  01EA16  0EFF               	movlw	-1
 33888  01EA18  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33889                           
 33890                           ;stkvar	_f1 @ sp[(-2)+-4]
 33891  01EA1E  0EFC               	movlw	-4
 33892  01EA20  8EE3               	bsf	plusw1,7,c
 33893                           
 33894                           ;stkvar	_f1 @ sp[(-2)+-4]
 33895  01EA22  50E1               	movf	fsr1l,w,c
 33896  01EA24  0FFA               	addlw	-6
 33897  01EA26  6ED9               	movwf	fsr2l,c
 33898  01EA28  50E2               	movf	fsr1h,w,c
 33899  01EA2A  6EDA               	movwf	fsr2h,c
 33900  01EA2C  0EFF               	movlw	255
 33901  01EA2E  22DA               	addwfc	fsr2h,f,c
 33902  01EA30  0EFF               	movlw	255
 33903  01EA32  16DE               	andwf	postinc2,f,c
 33904  01EA34  0EFF               	movlw	255
 33905  01EA36  16DE               	andwf	postinc2,f,c
 33906  01EA38  0EFF               	movlw	255
 33907  01EA3A  16DE               	andwf	postinc2,f,c
 33908  01EA3C  0E00               	movlw	0
 33909  01EA3E  16DE               	andwf	postinc2,f,c
 33910                           
 33911                           ;stkvar	_exp1 @ sp[(-2)+0]
 33912  01EA40  0EFE               	movlw	-2
 33913  01EA42  006F FF8C  F02A    	movff	plusw1,btemp
 33914  01EA48  0E96               	movlw	150
 33915  01EA4A  5E2A               	subwf	btemp^0,f,c
 33916  01EA4C  0EFE               	movlw	-2
 33917  01EA4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33918                           
 33919                           ;stkvar	_exp1 @ sp[(-2)+0]
 33920  01EA54  0EFE               	movlw	-2
 33921  01EA56  AEE3               	btfss	plusw1,7,c
 33922  01EA58  D014               	goto	l10808
 33923                           
 33924                           ;stkvar	_exp1 @ sp[(-2)+0]
 33925  01EA5A  0EFE               	movlw	-2
 33926  01EA5C  50E3               	movf	plusw1,w,c
 33927  01EA5E  0A80               	xorlw	128
 33928  01EA60  0F97               	addlw	151
 33929  01EA62  A0D8               	btfss	status,0,c
 33930  01EA64  D7B9               	goto	u9050
 33931  01EA66                     l10806:
 33932                           
 33933                           ;stkvar	_f1 @ sp[(-2)+-4]
 33934  01EA66  90D8               	bcf	status,0,c
 33935  01EA68  0EFD               	movlw	-3
 33936  01EA6A  32E3               	rrcf	plusw1,f,c
 33937  01EA6C  0EFC               	movlw	-4
 33938  01EA6E  32E3               	rrcf	plusw1,f,c
 33939  01EA70  0EFB               	movlw	-5
 33940  01EA72  32E3               	rrcf	plusw1,f,c
 33941  01EA74  0EFA               	movlw	-6
 33942  01EA76  32E3               	rrcf	plusw1,f,c
 33943                           
 33944                           ;stkvar	_exp1 @ sp[(-2)+0]
 33945  01EA78  0EFE               	movlw	-2
 33946  01EA7A  2AE3               	incf	plusw1,f,c
 33947  01EA7C  B4D8               	btfsc	status,2,c
 33948  01EA7E  D018               	goto	u9110
 33949  01EA80  D7F2               	goto	l10806
 33950  01EA82                     l10808:
 33951                           
 33952                           ;stkvar	_exp1 @ sp[(-2)+0]
 33953  01EA82  0EFE               	movlw	-2
 33954  01EA84  006F FF8C  F02A    	movff	plusw1,btemp
 33955  01EA8A  0E1F               	movlw	31
 33956  01EA8C  642A               	cpfsgt	btemp^0,c
 33957  01EA8E  D00C               	goto	l10816
 33958  01EA90  D7A3               	goto	u9050
 33959  01EA92                     l10814:
 33960                           
 33961                           ;stkvar	_f1 @ sp[(-2)+-4]
 33962  01EA92  90D8               	bcf	status,0,c
 33963  01EA94  0EFA               	movlw	-6
 33964  01EA96  36E3               	rlcf	plusw1,f,c
 33965  01EA98  0EFB               	movlw	-5
 33966  01EA9A  36E3               	rlcf	plusw1,f,c
 33967  01EA9C  0EFC               	movlw	-4
 33968  01EA9E  36E3               	rlcf	plusw1,f,c
 33969  01EAA0  0EFD               	movlw	-3
 33970  01EAA2  36E3               	rlcf	plusw1,f,c
 33971                           
 33972                           ;stkvar	_exp1 @ sp[(-2)+0]
 33973  01EAA4  0EFE               	movlw	-2
 33974  01EAA6  06E3               	decf	plusw1,f,c
 33975  01EAA8                     l10816:
 33976                           
 33977                           ;stkvar	_exp1 @ sp[(-2)+0]
 33978  01EAA8  0EFE               	movlw	-2
 33979  01EAAA  50E3               	movf	plusw1,w,c
 33980  01EAAC  A4D8               	btfss	status,2,c
 33981  01EAAE  D7F1               	goto	l10814
 33982  01EAB0                     u9110:
 33983                           
 33984                           ;stkvar	_sign1 @ sp[(-2)+1]
 33985  01EAB0  0EFF               	movlw	-1
 33986  01EAB2  50E3               	movf	plusw1,w,c
 33987  01EAB4  B4D8               	btfsc	status,2,c
 33988  01EAB6  D011               	goto	u9130
 33989                           
 33990                           ;stkvar	_f1 @ sp[(-2)+-4]
 33991                           ;stkvar	_f1 @ sp[(-2)+-4]
 33992  01EAB8  0EFA               	movlw	-6
 33993  01EABA  6CE3               	negf	plusw1,c
 33994  01EABC  0EFB               	movlw	-5
 33995  01EABE  1EE3               	comf	plusw1,f,c
 33996  01EAC0  0EFC               	movlw	-4
 33997  01EAC2  1EE3               	comf	plusw1,f,c
 33998  01EAC4  0EFD               	movlw	-3
 33999  01EAC6  1EE3               	comf	plusw1,f,c
 34000  01EAC8  E308               	bnc	u9130
 34001  01EACA  0EFB               	movlw	-5
 34002  01EACC  2AE3               	incf	plusw1,f,c
 34003  01EACE  E305               	bnc	u9130
 34004  01EAD0  0EFC               	movlw	-4
 34005  01EAD2  2AE3               	incf	plusw1,f,c
 34006  01EAD4  E302               	bnc	u9130
 34007  01EAD6  0EFD               	movlw	-3
 34008  01EAD8  2AE3               	incf	plusw1,f,c
 34009  01EADA                     u9130:
 34010                           
 34011                           ;stkvar	_f1 @ sp[(-2)+-4]
 34012  01EADA  0EFA               	movlw	-6
 34013  01EADC  006F FF8C  F02A    	movff	plusw1,btemp
 34014  01EAE2  0EFB               	movlw	-5
 34015  01EAE4  006F FF8C  F02B    	movff	plusw1,btemp+1
 34016  01EAEA  0EFC               	movlw	-4
 34017  01EAEC  006F FF8C  F02C    	movff	plusw1,btemp+2
 34018  01EAF2  0EFD               	movlw	-3
 34019  01EAF4  006F FF8C  F02D    	movff	plusw1,btemp+3
 34020  01EAFA                     l3029:
 34021                           
 34022                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34023  01EAFA  0EFA               	movlw	250
 34024  01EAFC  26E1               	addwf	fsr1l,f,c
 34025  01EAFE  0EFF               	movlw	255
 34026  01EB00  22E2               	addwfc	fsr1h,f,c
 34027  01EB02  0012               	return		;funcret
 34028  01EB04                     __end_of___fltol:
 34029                           	opt callstack 0
 34030                           
 34031 ;; *************** function ___flneg *****************
 34032 ;; Defined at:
 34033 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 34034 ;; Parameters:    Size  Location     Type
 34035 ;;  f1              4  [STACK] long 
 34036 ;; Auto vars:     Size  Location     Type
 34037 ;;		None
 34038 ;; Return value:  Size  Location     Type
 34039 ;;                  4  [STACK] long 
 34040 ;; Registers used:
 34041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 34042 ;; Tracked objects:
 34043 ;;		On entry : 0/0
 34044 ;;		On exit  : 0/0
 34045 ;;		Unchanged: 0/0
 34046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34051 ;;Total ram usage:        0 bytes
 34052 ;; Hardware stack levels used:    1
 34053 ;; Hardware stack levels required when called:   15
 34054 ;; This function calls:
 34055 ;;		Nothing
 34056 ;; This function is called by:
 34057 ;;		_calc_bsoc
 34058 ;;		_efgtoa
 34059 ;; This function uses a reentrant model
 34060 ;;
 34061                           
 34062                           	psect	text110
 34063  001F48                     __ptext110:
 34064                           	opt callstack 0
 34065  001F48                     ___flneg:
 34066                           	opt callstack 0
 34067                           
 34068                           ;stkvar	_f1 @ sp[(0)+-4]
 34069                           
 34070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34071                           ;incstack = 0
 34072 ;; hardware stack exceeded
 34073  001F48  0EFC               	movlw	-4
 34074  001F4A  50E3               	movf	plusw1,w,c
 34075  001F4C  E10A               	bnz	u9030
 34076  001F4E  0EFD               	movlw	-3
 34077  001F50  50E3               	movf	plusw1,w,c
 34078  001F52  E107               	bnz	u9030
 34079  001F54  0EFE               	movlw	-2
 34080  001F56  50E3               	movf	plusw1,w,c
 34081  001F58  E104               	bnz	u9030
 34082  001F5A  0EFF               	movlw	-1
 34083  001F5C  50E3               	movf	plusw1,w,c
 34084  001F5E  B4D8               	btfsc	status,2,c
 34085  001F60  D002               	goto	l10780
 34086  001F62                     u9030:
 34087                           
 34088                           ;stkvar	_f1 @ sp[(0)+-4]
 34089  001F62  0EFF               	movlw	-1
 34090  001F64  7EE3               	btg	plusw1,7,c
 34091  001F66                     l10780:
 34092                           
 34093                           ;stkvar	_f1 @ sp[(0)+-4]
 34094  001F66  0EFC               	movlw	-4
 34095  001F68  006F FF8C  F02A    	movff	plusw1,btemp
 34096  001F6E  0EFD               	movlw	-3
 34097  001F70  006F FF8C  F02B    	movff	plusw1,btemp+1
 34098  001F76  0EFE               	movlw	-2
 34099  001F78  006F FF8C  F02C    	movff	plusw1,btemp+2
 34100  001F7E  0EFF               	movlw	-1
 34101  001F80  006F FF8C  F02D    	movff	plusw1,btemp+3
 34102                           
 34103                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34104  001F86  52E5               	movf	postdec1,f,c
 34105  001F88  52E5               	movf	postdec1,f,c
 34106  001F8A  52E5               	movf	postdec1,f,c
 34107  001F8C  52E5               	movf	postdec1,f,c
 34108  001F8E  0012               	return		;funcret
 34109  001F90                     __end_of___flneg:
 34110                           	opt callstack 0
 34111                           
 34112 ;; *************** function ___fleq *****************
 34113 ;; Defined at:
 34114 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 34115 ;; Parameters:    Size  Location     Type
 34116 ;;  ff1             4  [STACK] long 
 34117 ;;  ff2             4  [STACK] long 
 34118 ;; Auto vars:     Size  Location     Type
 34119 ;;		None
 34120 ;; Return value:  Size  Location     Type
 34121 ;;		None               void
 34122 ;; Registers used:
 34123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 34124 ;; Tracked objects:
 34125 ;;		On entry : 0/0
 34126 ;;		On exit  : 0/0
 34127 ;;		Unchanged: 0/0
 34128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34133 ;;Total ram usage:        0 bytes
 34134 ;; Hardware stack levels used:    1
 34135 ;; Hardware stack levels required when called:   15
 34136 ;; This function calls:
 34137 ;;		Nothing
 34138 ;; This function is called by:
 34139 ;;		_efgtoa
 34140 ;; This function uses a reentrant model
 34141 ;;
 34142                           
 34143                           	psect	text111
 34144  0007D0                     __ptext111:
 34145                           	opt callstack 0
 34146  0007D0                     ___fleq:
 34147                           	opt callstack 0
 34148                           
 34149                           ;stkvar	_ff1 @ sp[(0)+-4]
 34150                           
 34151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34152                           ;incstack = 0
 34153 ;; hardware stack exceeded
 34154  0007D0  50E1               	movf	fsr1l,w,c
 34155  0007D2  0FFC               	addlw	-4
 34156  0007D4  6ED9               	movwf	fsr2l,c
 34157  0007D6  50E2               	movf	fsr1h,w,c
 34158  0007D8  6EDA               	movwf	fsr2h,c
 34159  0007DA  0EFF               	movlw	255
 34160  0007DC  22DA               	addwfc	fsr2h,f,c
 34161  0007DE  0E00               	movlw	0
 34162  0007E0  14DE               	andwf	postinc2,w,c
 34163  0007E2  6E32               	movwf	(btemp+8)^0,c
 34164  0007E4  0E00               	movlw	0
 34165  0007E6  14DE               	andwf	postinc2,w,c
 34166  0007E8  6E33               	movwf	(btemp+9)^0,c
 34167  0007EA  0E80               	movlw	128
 34168  0007EC  14DE               	andwf	postinc2,w,c
 34169  0007EE  6E34               	movwf	(btemp+10)^0,c
 34170  0007F0  0E7F               	movlw	127
 34171  0007F2  14DE               	andwf	postinc2,w,c
 34172  0007F4  6E35               	movwf	(btemp+11)^0,c
 34173  0007F6  5032               	movf	(btemp+8)^0,w,c
 34174  0007F8  1033               	iorwf	(btemp+9)^0,w,c
 34175  0007FA  1034               	iorwf	(btemp+10)^0,w,c
 34176  0007FC  1035               	iorwf	(btemp+11)^0,w,c
 34177  0007FE  A4D8               	btfss	status,2,c
 34178  000800  D008               	goto	l10738
 34179                           
 34180                           ;stkvar	_ff1 @ sp[(0)+-4]
 34181  000802  0EFC               	movlw	-4
 34182  000804  6AE3               	clrf	plusw1,c
 34183  000806  0EFD               	movlw	-3
 34184  000808  6AE3               	clrf	plusw1,c
 34185  00080A  0EFE               	movlw	-2
 34186  00080C  6AE3               	clrf	plusw1,c
 34187  00080E  0EFF               	movlw	-1
 34188  000810  6AE3               	clrf	plusw1,c
 34189  000812                     l10738:
 34190                           
 34191                           ;stkvar	_ff2 @ sp[(0)+-8]
 34192  000812  50E1               	movf	fsr1l,w,c
 34193  000814  0FF8               	addlw	-8
 34194  000816  6ED9               	movwf	fsr2l,c
 34195  000818  50E2               	movf	fsr1h,w,c
 34196  00081A  6EDA               	movwf	fsr2h,c
 34197  00081C  0EFF               	movlw	255
 34198  00081E  22DA               	addwfc	fsr2h,f,c
 34199  000820  0E00               	movlw	0
 34200  000822  14DE               	andwf	postinc2,w,c
 34201  000824  6E32               	movwf	(btemp+8)^0,c
 34202  000826  0E00               	movlw	0
 34203  000828  14DE               	andwf	postinc2,w,c
 34204  00082A  6E33               	movwf	(btemp+9)^0,c
 34205  00082C  0E80               	movlw	128
 34206  00082E  14DE               	andwf	postinc2,w,c
 34207  000830  6E34               	movwf	(btemp+10)^0,c
 34208  000832  0E7F               	movlw	127
 34209  000834  14DE               	andwf	postinc2,w,c
 34210  000836  6E35               	movwf	(btemp+11)^0,c
 34211  000838  5032               	movf	(btemp+8)^0,w,c
 34212  00083A  1033               	iorwf	(btemp+9)^0,w,c
 34213  00083C  1034               	iorwf	(btemp+10)^0,w,c
 34214  00083E  1035               	iorwf	(btemp+11)^0,w,c
 34215  000840  A4D8               	btfss	status,2,c
 34216  000842  D008               	goto	l10742
 34217                           
 34218                           ;stkvar	_ff2 @ sp[(0)+-8]
 34219  000844  0EF8               	movlw	-8
 34220  000846  6AE3               	clrf	plusw1,c
 34221  000848  0EF9               	movlw	-7
 34222  00084A  6AE3               	clrf	plusw1,c
 34223  00084C  0EFA               	movlw	-6
 34224  00084E  6AE3               	clrf	plusw1,c
 34225  000850  0EFB               	movlw	-5
 34226  000852  6AE3               	clrf	plusw1,c
 34227  000854                     l10742:
 34228                           
 34229                           ;stkvar	_ff2 @ sp[(0)+-8]
 34230                           ;stkvar	_ff1 @ sp[(0)+-4]
 34231  000854  50E1               	movf	fsr1l,w,c
 34232  000856  0FFC               	addlw	-4
 34233  000858  6ED9               	movwf	fsr2l,c
 34234  00085A  50E2               	movf	fsr1h,w,c
 34235  00085C  6EDA               	movwf	fsr2h,c
 34236  00085E  0EFF               	movlw	255
 34237  000860  22DA               	addwfc	fsr2h,f,c
 34238  000862  0EF8               	movlw	-8
 34239  000864  50E3               	movf	plusw1,w,c
 34240  000866  18DE               	xorwf	postinc2,w,c
 34241  000868  E10D               	bnz	u8970
 34242  00086A  0EF9               	movlw	-7
 34243  00086C  50E3               	movf	plusw1,w,c
 34244  00086E  18DE               	xorwf	postinc2,w,c
 34245  000870  E109               	bnz	u8970
 34246  000872  0EFA               	movlw	-6
 34247  000874  50E3               	movf	plusw1,w,c
 34248  000876  18DE               	xorwf	postinc2,w,c
 34249  000878  E105               	bnz	u8970
 34250  00087A  0EFB               	movlw	-5
 34251  00087C  50E3               	movf	plusw1,w,c
 34252  00087E  18DE               	xorwf	postinc2,w,c
 34253  000880  B4D8               	btfsc	status,2,c
 34254  000882  D002               	goto	l10746
 34255  000884                     u8970:
 34256  000884  902A               	bcf	btemp& (0+255),0,c
 34257  000886  D001               	goto	l2991
 34258  000888                     l10746:
 34259  000888  802A               	bsf	btemp& (0+255),0,c
 34260  00088A                     l2991:
 34261                           
 34262                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 34263  00088A  0EF8               	movlw	248
 34264  00088C  26E1               	addwf	fsr1l,f,c
 34265  00088E  0EFF               	movlw	255
 34266  000890  22E2               	addwfc	fsr1h,f,c
 34267  000892  0012               	return		;funcret
 34268  000894                     __end_of___fleq:
 34269                           	opt callstack 0
 34270                           
 34271 ;; *************** function ___awmod *****************
 34272 ;; Defined at:
 34273 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 34274 ;; Parameters:    Size  Location     Type
 34275 ;;  dividend        2  [STACK] int 
 34276 ;;  divisor         2  [STACK] int 
 34277 ;; Auto vars:     Size  Location     Type
 34278 ;;  sign            1  [STACK] unsigned char 
 34279 ;;  counter         1  [STACK] unsigned char 
 34280 ;; Return value:  Size  Location     Type
 34281 ;;                  2  [STACK] int 
 34282 ;; Registers used:
 34283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34284 ;; Tracked objects:
 34285 ;;		On entry : 0/3
 34286 ;;		On exit  : 0/0
 34287 ;;		Unchanged: 0/0
 34288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34293 ;;Total ram usage:        0 bytes
 34294 ;; Hardware stack levels used:    1
 34295 ;; Hardware stack levels required when called:   15
 34296 ;; This function calls:
 34297 ;;		Nothing
 34298 ;; This function is called by:
 34299 ;;		_efgtoa
 34300 ;;		_asctime
 34301 ;; This function uses a reentrant model
 34302 ;;
 34303                           
 34304                           	psect	text112
 34305  01FB9E                     __ptext112:
 34306                           	opt callstack 0
 34307  01FB9E                     ___awmod:
 34308                           	opt callstack 0
 34309                           
 34310                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34311  01FB9E  52E6               	movf	postinc1,f,c
 34312  01FBA0  52E6               	movf	postinc1,f,c
 34313                           
 34314                           ;stkvar	_sign @ sp[(-2)+0]
 34315                           
 34316                           ;incstack = 0
 34317 ;; hardware stack exceeded
 34318  01FBA2  0EFE               	movlw	-2
 34319  01FBA4  6AE3               	clrf	plusw1,c
 34320                           
 34321                           ;stkvar	_dividend @ sp[(-2)+-2]
 34322  01FBA6  0EFD               	movlw	-3
 34323  01FBA8  AEE3               	btfss	plusw1,7,c
 34324  01FBAA  D009               	goto	l10704
 34325                           
 34326                           ;stkvar	_dividend @ sp[(-2)+-2]
 34327                           ;stkvar	_dividend @ sp[(-2)+-2]
 34328  01FBAC  0EFC               	movlw	-4
 34329  01FBAE  6CE3               	negf	plusw1,c
 34330  01FBB0  0EFD               	movlw	-3
 34331  01FBB2  1EE3               	comf	plusw1,f,c
 34332  01FBB4  B0D8               	btfsc	status,0,c
 34333  01FBB6  2AE3               	incf	plusw1,f,c
 34334                           
 34335                           ;stkvar	_sign @ sp[(-2)+0]
 34336  01FBB8  0EFE               	movlw	-2
 34337  01FBBA  6AE3               	clrf	plusw1,c
 34338  01FBBC  2AE3               	incf	plusw1,f,c
 34339  01FBBE                     l10704:
 34340                           
 34341                           ;stkvar	_divisor @ sp[(-2)+-4]
 34342  01FBBE  0EFB               	movlw	-5
 34343  01FBC0  AEE3               	btfss	plusw1,7,c
 34344  01FBC2  D006               	goto	l10708
 34345                           
 34346                           ;stkvar	_divisor @ sp[(-2)+-4]
 34347                           ;stkvar	_divisor @ sp[(-2)+-4]
 34348  01FBC4  0EFA               	movlw	-6
 34349  01FBC6  6CE3               	negf	plusw1,c
 34350  01FBC8  0EFB               	movlw	-5
 34351  01FBCA  1EE3               	comf	plusw1,f,c
 34352  01FBCC  B0D8               	btfsc	status,0,c
 34353  01FBCE  2AE3               	incf	plusw1,f,c
 34354  01FBD0                     l10708:
 34355                           
 34356                           ;stkvar	_divisor @ sp[(-2)+-4]
 34357  01FBD0  0EFA               	movlw	-6
 34358  01FBD2  006F FF8C  F02A    	movff	plusw1,btemp
 34359  01FBD8  0EFB               	movlw	-5
 34360  01FBDA  50E3               	movf	plusw1,w,c
 34361  01FBDC  102A               	iorwf	btemp^0,w,c
 34362  01FBDE  B4D8               	btfsc	status,2,c
 34363  01FBE0  D053               	goto	u8930
 34364                           
 34365                           ;stkvar	_counter @ sp[(-2)+1]
 34366  01FBE2  0EFF               	movlw	-1
 34367  01FBE4  6AE3               	clrf	plusw1,c
 34368  01FBE6  D012               	goto	L37
 34369  01FBE8                     l10712:
 34370                           
 34371                           ;stkvar	_divisor @ sp[(-2)+-4]
 34372  01FBE8  0EFA               	movlw	-6
 34373  01FBEA  50E3               	movf	plusw1,w,c
 34374  01FBEC  90D8               	bcf	status,0,c
 34375  01FBEE  34E8               	rlcf	wreg,w,c
 34376  01FBF0  6E2A               	movwf	btemp^0,c
 34377  01FBF2  0EFA               	movlw	-6
 34378  01FBF4  0060  F0AB  FFE3   	movff	btemp,plusw1
 34379  01FBFA  0EFB               	movlw	-5
 34380  01FBFC  50E3               	movf	plusw1,w,c
 34381  01FBFE  34E8               	rlcf	wreg,w,c
 34382  01FC00  6E2A               	movwf	btemp^0,c
 34383  01FC02  0EFB               	movlw	-5
 34384  01FC04  0060  F0AB  FFE3   	movff	btemp,plusw1
 34385                           
 34386                           ;stkvar	_counter @ sp[(-2)+1]
 34387  01FC0A  0EFF               	movlw	-1
 34388  01FC0C                     L37:
 34389  01FC0C  2AE3               	incf	plusw1,f,c
 34390                           
 34391                           ;stkvar	_divisor @ sp[(-2)+-4]
 34392  01FC0E  0EFB               	movlw	-5
 34393  01FC10  AEE3               	btfss	plusw1,7,c
 34394  01FC12  D7EA               	goto	l10712
 34395  01FC14                     u8910:
 34396                           
 34397                           ;stkvar	_divisor @ sp[(-2)+-4]
 34398  01FC14  0EFA               	movlw	-6
 34399  01FC16  006F FF8C  F034    	movff	plusw1,btemp+10
 34400  01FC1C  0EFB               	movlw	-5
 34401  01FC1E  006F FF8C  F035    	movff	plusw1,btemp+11
 34402                           
 34403                           ;stkvar	_dividend @ sp[(-2)+-2]
 34404  01FC24  0EFC               	movlw	-4
 34405  01FC26  006F FF8C  F032    	movff	plusw1,btemp+8
 34406  01FC2C  0EFD               	movlw	-3
 34407  01FC2E  006F FF8C  F033    	movff	plusw1,btemp+9
 34408  01FC34  5034               	movf	(btemp+10)^0,w,c
 34409  01FC36  5C32               	subwf	(btemp+8)^0,w,c
 34410  01FC38  5035               	movf	(btemp+11)^0,w,c
 34411  01FC3A  5833               	subwfb	(btemp+9)^0,w,c
 34412  01FC3C  A0D8               	btfss	status,0,c
 34413  01FC3E  D014               	goto	l10722
 34414                           
 34415                           ;stkvar	_divisor @ sp[(-2)+-4]
 34416                           ;stkvar	_dividend @ sp[(-2)+-2]
 34417  01FC40  0EFC               	movlw	-4
 34418  01FC42  50E3               	movf	plusw1,w,c
 34419  01FC44  6E2A               	movwf	btemp^0,c
 34420  01FC46  0EFA               	movlw	-6
 34421  01FC48  50E3               	movf	plusw1,w,c
 34422  01FC4A  5E2A               	subwf	btemp^0,f,c
 34423  01FC4C  0EFC               	movlw	-4
 34424  01FC4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34425  01FC54  0EFD               	movlw	-3
 34426  01FC56  50E3               	movf	plusw1,w,c
 34427  01FC58  6E2A               	movwf	btemp^0,c
 34428  01FC5A  0EFB               	movlw	-5
 34429  01FC5C  50E3               	movf	plusw1,w,c
 34430  01FC5E  5A2A               	subwfb	btemp^0,f,c
 34431  01FC60  0EFD               	movlw	-3
 34432  01FC62  0060  F0AB  FFE3   	movff	btemp,plusw1
 34433  01FC68                     l10722:
 34434                           
 34435                           ;stkvar	_divisor @ sp[(-2)+-4]
 34436  01FC68  90D8               	bcf	status,0,c
 34437  01FC6A  0EFB               	movlw	-5
 34438  01FC6C  32E3               	rrcf	plusw1,f,c
 34439  01FC6E  0EFA               	movlw	-6
 34440  01FC70  32E3               	rrcf	plusw1,f,c
 34441                           
 34442                           ;stkvar	_counter @ sp[(-2)+1]
 34443  01FC72  0EFF               	movlw	-1
 34444  01FC74  50E3               	movf	plusw1,w,c
 34445  01FC76  6E2A               	movwf	btemp^0,c
 34446  01FC78  0E01               	movlw	1
 34447  01FC7A  5E2A               	subwf	btemp^0,f,c
 34448  01FC7C  0EFF               	movlw	-1
 34449  01FC7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34450  01FC84  A4D8               	btfss	status,2,c
 34451  01FC86  D7C6               	goto	u8910
 34452  01FC88                     u8930:
 34453                           
 34454                           ;stkvar	_sign @ sp[(-2)+0]
 34455  01FC88  0EFE               	movlw	-2
 34456  01FC8A  50E3               	movf	plusw1,w,c
 34457  01FC8C  B4D8               	btfsc	status,2,c
 34458  01FC8E  D006               	goto	l10730
 34459                           
 34460                           ;stkvar	_dividend @ sp[(-2)+-2]
 34461                           ;stkvar	_dividend @ sp[(-2)+-2]
 34462  01FC90  0EFC               	movlw	-4
 34463  01FC92  6CE3               	negf	plusw1,c
 34464  01FC94  0EFD               	movlw	-3
 34465  01FC96  1EE3               	comf	plusw1,f,c
 34466  01FC98  B0D8               	btfsc	status,0,c
 34467  01FC9A  2AE3               	incf	plusw1,f,c
 34468  01FC9C                     l10730:
 34469                           
 34470                           ;stkvar	_dividend @ sp[(-2)+-2]
 34471  01FC9C  0EFC               	movlw	-4
 34472  01FC9E  006F FF8C  F02A    	movff	plusw1,btemp
 34473  01FCA4  0EFD               	movlw	-3
 34474  01FCA6  006F FF8C  F02B    	movff	plusw1,btemp+1
 34475                           
 34476                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34477  01FCAC  0EFA               	movlw	250
 34478  01FCAE  26E1               	addwf	fsr1l,f,c
 34479  01FCB0  0EFF               	movlw	255
 34480  01FCB2  22E2               	addwfc	fsr1h,f,c
 34481  01FCB4  0012               	return		;funcret
 34482  01FCB6                     __end_of___awmod:
 34483                           	opt callstack 0
 34484                           
 34485 ;; *************** function ___awdiv *****************
 34486 ;; Defined at:
 34487 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 34488 ;; Parameters:    Size  Location     Type
 34489 ;;  dividend        2  [STACK] int 
 34490 ;;  divisor         2  [STACK] int 
 34491 ;; Auto vars:     Size  Location     Type
 34492 ;;  quotient        2  [STACK] int 
 34493 ;;  sign            1  [STACK] unsigned char 
 34494 ;;  counter         1  [STACK] unsigned char 
 34495 ;; Return value:  Size  Location     Type
 34496 ;;                  2  [STACK] int 
 34497 ;; Registers used:
 34498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34499 ;; Tracked objects:
 34500 ;;		On entry : 0/3
 34501 ;;		On exit  : 0/0
 34502 ;;		Unchanged: 0/0
 34503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34508 ;;Total ram usage:        0 bytes
 34509 ;; Hardware stack levels used:    1
 34510 ;; Hardware stack levels required when called:   15
 34511 ;; This function calls:
 34512 ;;		Nothing
 34513 ;; This function is called by:
 34514 ;;		_efgtoa
 34515 ;;		_put2d
 34516 ;;		_asctime
 34517 ;;		_scan_trans
 34518 ;; This function uses a reentrant model
 34519 ;;
 34520                           
 34521                           	psect	text113
 34522  01F340                     __ptext113:
 34523                           	opt callstack 0
 34524  01F340                     ___awdiv:
 34525                           	opt callstack 0
 34526                           
 34527                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34528  01F340  52E6               	movf	postinc1,f,c
 34529  01F342  52E6               	movf	postinc1,f,c
 34530  01F344  52E6               	movf	postinc1,f,c
 34531  01F346  52E6               	movf	postinc1,f,c
 34532                           
 34533                           ;stkvar	_sign @ sp[(-4)+2]
 34534                           
 34535                           ;incstack = 0
 34536 ;; hardware stack exceeded
 34537  01F348  0EFE               	movlw	-2
 34538  01F34A  6AE3               	clrf	plusw1,c
 34539                           
 34540                           ;stkvar	_divisor @ sp[(-4)+-4]
 34541  01F34C  0EF9               	movlw	-7
 34542  01F34E  AEE3               	btfss	plusw1,7,c
 34543  01F350  D009               	goto	l10658
 34544                           
 34545                           ;stkvar	_divisor @ sp[(-4)+-4]
 34546                           ;stkvar	_divisor @ sp[(-4)+-4]
 34547  01F352  0EF8               	movlw	-8
 34548  01F354  6CE3               	negf	plusw1,c
 34549  01F356  0EF9               	movlw	-7
 34550  01F358  1EE3               	comf	plusw1,f,c
 34551  01F35A  B0D8               	btfsc	status,0,c
 34552  01F35C  2AE3               	incf	plusw1,f,c
 34553                           
 34554                           ;stkvar	_sign @ sp[(-4)+2]
 34555  01F35E  0EFE               	movlw	-2
 34556  01F360  6AE3               	clrf	plusw1,c
 34557  01F362  2AE3               	incf	plusw1,f,c
 34558  01F364                     l10658:
 34559                           
 34560                           ;stkvar	_dividend @ sp[(-4)+-2]
 34561  01F364  0EFB               	movlw	-5
 34562  01F366  AEE3               	btfss	plusw1,7,c
 34563  01F368  D008               	goto	l10664
 34564                           
 34565                           ;stkvar	_dividend @ sp[(-4)+-2]
 34566                           ;stkvar	_dividend @ sp[(-4)+-2]
 34567  01F36A  0EFA               	movlw	-6
 34568  01F36C  6CE3               	negf	plusw1,c
 34569  01F36E  0EFB               	movlw	-5
 34570  01F370  1EE3               	comf	plusw1,f,c
 34571  01F372  B0D8               	btfsc	status,0,c
 34572  01F374  2AE3               	incf	plusw1,f,c
 34573                           
 34574                           ;stkvar	_sign @ sp[(-4)+2]
 34575  01F376  0EFE               	movlw	-2
 34576  01F378  70E3               	btg	plusw1,0,c
 34577  01F37A                     l10664:
 34578                           
 34579                           ;stkvar	_quotient @ sp[(-4)+0]
 34580  01F37A  0EFC               	movlw	-4
 34581  01F37C  6AE3               	clrf	plusw1,c
 34582  01F37E  0EFD               	movlw	-3
 34583  01F380  6AE3               	clrf	plusw1,c
 34584                           
 34585                           ;stkvar	_divisor @ sp[(-4)+-4]
 34586  01F382  0EF8               	movlw	-8
 34587  01F384  006F FF8C  F02A    	movff	plusw1,btemp
 34588  01F38A  0EF9               	movlw	-7
 34589  01F38C  50E3               	movf	plusw1,w,c
 34590  01F38E  102A               	iorwf	btemp^0,w,c
 34591  01F390  B4D8               	btfsc	status,2,c
 34592  01F392  D066               	goto	u8860
 34593                           
 34594                           ;stkvar	_counter @ sp[(-4)+3]
 34595  01F394  0EFF               	movlw	-1
 34596  01F396  6AE3               	clrf	plusw1,c
 34597  01F398  D012               	goto	L38
 34598  01F39A                     l10670:
 34599                           
 34600                           ;stkvar	_divisor @ sp[(-4)+-4]
 34601  01F39A  0EF8               	movlw	-8
 34602  01F39C  50E3               	movf	plusw1,w,c
 34603  01F39E  90D8               	bcf	status,0,c
 34604  01F3A0  34E8               	rlcf	wreg,w,c
 34605  01F3A2  6E2A               	movwf	btemp^0,c
 34606  01F3A4  0EF8               	movlw	-8
 34607  01F3A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34608  01F3AC  0EF9               	movlw	-7
 34609  01F3AE  50E3               	movf	plusw1,w,c
 34610  01F3B0  34E8               	rlcf	wreg,w,c
 34611  01F3B2  6E2A               	movwf	btemp^0,c
 34612  01F3B4  0EF9               	movlw	-7
 34613  01F3B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34614                           
 34615                           ;stkvar	_counter @ sp[(-4)+3]
 34616  01F3BC  0EFF               	movlw	-1
 34617  01F3BE                     L38:
 34618  01F3BE  2AE3               	incf	plusw1,f,c
 34619                           
 34620                           ;stkvar	_divisor @ sp[(-4)+-4]
 34621  01F3C0  0EF9               	movlw	-7
 34622  01F3C2  AEE3               	btfss	plusw1,7,c
 34623  01F3C4  D7EA               	goto	l10670
 34624  01F3C6                     u8840:
 34625                           
 34626                           ;stkvar	_quotient @ sp[(-4)+0]
 34627  01F3C6  0EFC               	movlw	-4
 34628  01F3C8  50E3               	movf	plusw1,w,c
 34629  01F3CA  90D8               	bcf	status,0,c
 34630  01F3CC  34E8               	rlcf	wreg,w,c
 34631  01F3CE  6E2A               	movwf	btemp^0,c
 34632  01F3D0  0EFC               	movlw	-4
 34633  01F3D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 34634  01F3D8  0EFD               	movlw	-3
 34635  01F3DA  50E3               	movf	plusw1,w,c
 34636  01F3DC  34E8               	rlcf	wreg,w,c
 34637  01F3DE  6E2A               	movwf	btemp^0,c
 34638  01F3E0  0EFD               	movlw	-3
 34639  01F3E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 34640                           
 34641                           ;stkvar	_divisor @ sp[(-4)+-4]
 34642  01F3E8  0EF8               	movlw	-8
 34643  01F3EA  006F FF8C  F034    	movff	plusw1,btemp+10
 34644  01F3F0  0EF9               	movlw	-7
 34645  01F3F2  006F FF8C  F035    	movff	plusw1,btemp+11
 34646                           
 34647                           ;stkvar	_dividend @ sp[(-4)+-2]
 34648  01F3F8  0EFA               	movlw	-6
 34649  01F3FA  006F FF8C  F032    	movff	plusw1,btemp+8
 34650  01F400  0EFB               	movlw	-5
 34651  01F402  006F FF8C  F033    	movff	plusw1,btemp+9
 34652  01F408  5034               	movf	(btemp+10)^0,w,c
 34653  01F40A  5C32               	subwf	(btemp+8)^0,w,c
 34654  01F40C  5035               	movf	(btemp+11)^0,w,c
 34655  01F40E  5833               	subwfb	(btemp+9)^0,w,c
 34656  01F410  A0D8               	btfss	status,0,c
 34657  01F412  D016               	goto	l10684
 34658                           
 34659                           ;stkvar	_divisor @ sp[(-4)+-4]
 34660                           ;stkvar	_dividend @ sp[(-4)+-2]
 34661  01F414  0EFA               	movlw	-6
 34662  01F416  50E3               	movf	plusw1,w,c
 34663  01F418  6E2A               	movwf	btemp^0,c
 34664  01F41A  0EF8               	movlw	-8
 34665  01F41C  50E3               	movf	plusw1,w,c
 34666  01F41E  5E2A               	subwf	btemp^0,f,c
 34667  01F420  0EFA               	movlw	-6
 34668  01F422  0060  F0AB  FFE3   	movff	btemp,plusw1
 34669  01F428  0EFB               	movlw	-5
 34670  01F42A  50E3               	movf	plusw1,w,c
 34671  01F42C  6E2A               	movwf	btemp^0,c
 34672  01F42E  0EF9               	movlw	-7
 34673  01F430  50E3               	movf	plusw1,w,c
 34674  01F432  5A2A               	subwfb	btemp^0,f,c
 34675  01F434  0EFB               	movlw	-5
 34676  01F436  0060  F0AB  FFE3   	movff	btemp,plusw1
 34677                           
 34678                           ;stkvar	_quotient @ sp[(-4)+0]
 34679  01F43C  0EFC               	movlw	-4
 34680  01F43E  80E3               	bsf	plusw1,0,c
 34681  01F440                     l10684:
 34682                           
 34683                           ;stkvar	_divisor @ sp[(-4)+-4]
 34684  01F440  90D8               	bcf	status,0,c
 34685  01F442  0EF9               	movlw	-7
 34686  01F444  32E3               	rrcf	plusw1,f,c
 34687  01F446  0EF8               	movlw	-8
 34688  01F448  32E3               	rrcf	plusw1,f,c
 34689                           
 34690                           ;stkvar	_counter @ sp[(-4)+3]
 34691  01F44A  0EFF               	movlw	-1
 34692  01F44C  50E3               	movf	plusw1,w,c
 34693  01F44E  6E2A               	movwf	btemp^0,c
 34694  01F450  0E01               	movlw	1
 34695  01F452  5E2A               	subwf	btemp^0,f,c
 34696  01F454  0EFF               	movlw	-1
 34697  01F456  0060  F0AB  FFE3   	movff	btemp,plusw1
 34698  01F45C  A4D8               	btfss	status,2,c
 34699  01F45E  D7B3               	goto	u8840
 34700  01F460                     u8860:
 34701                           
 34702                           ;stkvar	_sign @ sp[(-4)+2]
 34703  01F460  0EFE               	movlw	-2
 34704  01F462  50E3               	movf	plusw1,w,c
 34705  01F464  B4D8               	btfsc	status,2,c
 34706  01F466  D006               	goto	l10692
 34707                           
 34708                           ;stkvar	_quotient @ sp[(-4)+0]
 34709                           ;stkvar	_quotient @ sp[(-4)+0]
 34710  01F468  0EFC               	movlw	-4
 34711  01F46A  6CE3               	negf	plusw1,c
 34712  01F46C  0EFD               	movlw	-3
 34713  01F46E  1EE3               	comf	plusw1,f,c
 34714  01F470  B0D8               	btfsc	status,0,c
 34715  01F472  2AE3               	incf	plusw1,f,c
 34716  01F474                     l10692:
 34717                           
 34718                           ;stkvar	_quotient @ sp[(-4)+0]
 34719  01F474  0EFC               	movlw	-4
 34720  01F476  006F FF8C  F02A    	movff	plusw1,btemp
 34721  01F47C  0EFD               	movlw	-3
 34722  01F47E  006F FF8C  F02B    	movff	plusw1,btemp+1
 34723                           
 34724                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34725  01F484  0EF8               	movlw	248
 34726  01F486  26E1               	addwf	fsr1l,f,c
 34727  01F488  0EFF               	movlw	255
 34728  01F48A  22E2               	addwfc	fsr1h,f,c
 34729  01F48C  0012               	return		;funcret
 34730  01F48E                     __end_of___awdiv:
 34731                           	opt callstack 0
 34732                           
 34733 ;; *************** function _dtoa *****************
 34734 ;; Defined at:
 34735 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34736 ;; Parameters:    Size  Location     Type
 34737 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34738 ;;		 -> f(6), NULL(0), 
 34739 ;;  d               8  [STACK] long long 
 34740 ;; Auto vars:     Size  Location     Type
 34741 ;;  n               8  [STACK] long long 
 34742 ;;  i               2  [STACK] int 
 34743 ;;  s               2  [STACK] int 
 34744 ;;  w               2  [STACK] int 
 34745 ;;  p               2  [STACK] int 
 34746 ;; Return value:  Size  Location     Type
 34747 ;;                  2  [STACK] int 
 34748 ;; Registers used:
 34749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 34750 ;; Tracked objects:
 34751 ;;		On entry : 0/0
 34752 ;;		On exit  : 0/0
 34753 ;;		Unchanged: 0/0
 34754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34759 ;;Total ram usage:        0 bytes
 34760 ;; Hardware stack levels used:    1
 34761 ;; Hardware stack levels required when called:   20
 34762 ;; This function calls:
 34763 ;;		___aodiv
 34764 ;;		___aomod
 34765 ;;		_abs
 34766 ;;		_pad
 34767 ;; This function is called by:
 34768 ;;		_vfpfcnvrt
 34769 ;; This function uses a reentrant model
 34770 ;;
 34771                           
 34772                           	psect	text114
 34773  019214                     __ptext114:
 34774                           	opt callstack 0
 34775  019214                     _dtoa:
 34776                           	opt callstack 0
 34777                           
 34778                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 34779  019214  0E12               	movlw	18
 34780  019216  26E1               	addwf	fsr1l,f,c
 34781  019218  0E00               	movlw	0
 34782  01921A  22E2               	addwfc	fsr1h,f,c
 34783                           
 34784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 34785                           ;stkvar	_d @ sp[(-18)+-10]
 34786                           
 34787                           ;incstack = 0
 34788 ;; hardware stack exceeded
 34789  01921C  0EE4               	movlw	228
 34790  01921E  24E1               	addwf	fsr1l,w,c
 34791  019220  6ED9               	movwf	fsr2l,c
 34792  019222  0EFF               	movlw	255
 34793  019224  20E2               	addwfc	fsr1h,w,c
 34794  019226  6EDA               	movwf	fsr2h,c
 34795                           
 34796                           ;stkvar	_n @ sp[(-18)+2]
 34797  019228  0E08               	movlw	8
 34798  01922A  6E2A               	movwf	btemp^0,c
 34799  01922C  0EF0               	movlw	-16
 34800  01922E                     us1442999:
 34801  01922E  006F FF7B FFE3     	movff	postinc2,plusw1
 34802  019234  28E8               	incf	wreg,w,c
 34803  019236  2E2A               	decfsz	btemp^0,f,c
 34804  019238  D7FA               	bra	us1442999
 34805                           
 34806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 34807                           ;stkvar	_n @ sp[(-18)+2]
 34808  01923A  0EF7               	movlw	-9
 34809  01923C  AEE3               	btfss	plusw1,7,c
 34810  01923E  D002               	goto	u14430
 34811  019240  0E01               	movlw	1
 34812  019242  D001               	goto	u14440
 34813  019244                     u14430:
 34814  019244  0E00               	movlw	0
 34815  019246                     u14440:
 34816  019246  6E34               	movwf	(btemp+10)^0,c
 34817  019248  6A35               	clrf	(btemp+11)^0,c
 34818                           
 34819                           ;stkvar	_s @ sp[(-18)+12]
 34820  01924A  0EFA               	movlw	-6
 34821  01924C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34822  019252  0EFB               	movlw	-5
 34823  019254  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34824                           
 34825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 34826                           ;stkvar	_s @ sp[(-18)+12]
 34827  01925A  0EFA               	movlw	-6
 34828  01925C  006F FF8C  F02A    	movff	plusw1,btemp
 34829  019262  0EFB               	movlw	-5
 34830  019264  50E3               	movf	plusw1,w,c
 34831  019266  102A               	iorwf	btemp^0,w,c
 34832  019268  B4D8               	btfsc	status,2,c
 34833  01926A  D025               	goto	u14460
 34834                           
 34835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 34836                           ;stkvar	_n @ sp[(-18)+2]
 34837                           ;stkvar	_n @ sp[(-18)+2]
 34838  01926C  0EF0               	movlw	-16
 34839  01926E  6CE3               	negf	plusw1,c
 34840  019270  0EF1               	movlw	-15
 34841  019272  1EE3               	comf	plusw1,f,c
 34842  019274  0EF2               	movlw	-14
 34843  019276  1EE3               	comf	plusw1,f,c
 34844  019278  0EF3               	movlw	-13
 34845  01927A  1EE3               	comf	plusw1,f,c
 34846  01927C  0EF4               	movlw	-12
 34847  01927E  1EE3               	comf	plusw1,f,c
 34848  019280  0EF5               	movlw	-11
 34849  019282  1EE3               	comf	plusw1,f,c
 34850  019284  0EF6               	movlw	-10
 34851  019286  1EE3               	comf	plusw1,f,c
 34852  019288  0EF7               	movlw	-9
 34853  01928A  1EE3               	comf	plusw1,f,c
 34854  01928C  E314               	bnc	u14460
 34855  01928E  0EF1               	movlw	-15
 34856  019290  2AE3               	incf	plusw1,f,c
 34857  019292  E311               	bnc	u14460
 34858  019294  0EF2               	movlw	-14
 34859  019296  2AE3               	incf	plusw1,f,c
 34860  019298  E30E               	bnc	u14460
 34861  01929A  0EF3               	movlw	-13
 34862  01929C  2AE3               	incf	plusw1,f,c
 34863  01929E  E30B               	bnc	u14460
 34864  0192A0  0EF4               	movlw	-12
 34865  0192A2  2AE3               	incf	plusw1,f,c
 34866  0192A4  E308               	bnc	u14460
 34867  0192A6  0EF5               	movlw	-11
 34868  0192A8  2AE3               	incf	plusw1,f,c
 34869  0192AA  E305               	bnc	u14460
 34870  0192AC  0EF6               	movlw	-10
 34871  0192AE  2AE3               	incf	plusw1,f,c
 34872  0192B0  E302               	bnc	u14460
 34873  0192B2  0EF7               	movlw	-9
 34874  0192B4  2AE3               	incf	plusw1,f,c
 34875  0192B6                     u14460:
 34876                           
 34877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 34878  0192B6  AE4D               	btfss	(_prec+1)^0,7,c
 34879                           
 34880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 34881  0192B8  924E               	bcf	_flags^0,1,c
 34882                           
 34883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 34884  0192BA  BE4D               	btfsc	(_prec+1)^0,7,c
 34885  0192BC  D005               	goto	u14480
 34886  0192BE  504D               	movf	(_prec+1)^0,w,c
 34887  0192C0  E110               	bnz	l15532
 34888  0192C2  044C               	decf	_prec^0,w,c
 34889  0192C4  B0D8               	btfsc	status,0,c
 34890  0192C6  D00D               	goto	l15532
 34891  0192C8                     u14480:
 34892  0192C8  0E01               	movlw	1
 34893  0192CA  6E34               	movwf	(btemp+10)^0,c
 34894  0192CC  0E00               	movlw	0
 34895  0192CE  6E35               	movwf	(btemp+11)^0,c
 34896                           
 34897                           ;stkvar	_p @ sp[(-18)+16]
 34898  0192D0  0EFE               	movlw	-2
 34899  0192D2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34900  0192D8  0EFF               	movlw	-1
 34901  0192DA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34902  0192E0  D008               	goto	l2495
 34903  0192E2                     l15532:
 34904                           
 34905                           ;stkvar	_p @ sp[(-18)+16]
 34906  0192E2  0EFE               	movlw	-2
 34907  0192E4  0060  F133  FFE3   	movff	_prec,plusw1
 34908  0192EA  0EFF               	movlw	-1
 34909  0192EC  0060  F137  FFE3   	movff	_prec+1,plusw1
 34910  0192F2                     l2495:
 34911                           
 34912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 34913                           ;stkvar	_w @ sp[(-18)+14]
 34914  0192F2  0EFC               	movlw	-4
 34915  0192F4  0060  F12B  FFE3   	movff	_width,plusw1
 34916  0192FA  0EFD               	movlw	-3
 34917  0192FC  0060  F12F  FFE3   	movff	_width+1,plusw1
 34918                           
 34919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 34920                           ;stkvar	_s @ sp[(-18)+12]
 34921  019302  0EFA               	movlw	-6
 34922  019304  006F FF8C  F02A    	movff	plusw1,btemp
 34923  01930A  0EFB               	movlw	-5
 34924  01930C  50E3               	movf	plusw1,w,c
 34925  01930E  102A               	iorwf	btemp^0,w,c
 34926  019310  A4D8               	btfss	status,2,c
 34927  019312  D002               	goto	u14500
 34928  019314  A44E               	btfss	_flags^0,2,c
 34929  019316  D00A               	goto	l15540
 34930  019318                     u14500:
 34931                           
 34932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 34933                           ;stkvar	_w @ sp[(-18)+14]
 34934  019318  50E1               	movf	fsr1l,w,c
 34935  01931A  0FFC               	addlw	-4
 34936  01931C  6ED9               	movwf	fsr2l,c
 34937  01931E  50E2               	movf	fsr1h,w,c
 34938  019320  6EDA               	movwf	fsr2h,c
 34939  019322  0EFF               	movlw	255
 34940  019324  22DA               	addwfc	fsr2h,f,c
 34941  019326  06DE               	decf	postinc2,f,c
 34942  019328  0E00               	movlw	0
 34943  01932A  5ADD               	subwfb	postdec2,f,c
 34944  01932C                     l15540:
 34945                           
 34946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 34947  01932C  0E4F               	movlw	79
 34948  01932E  6E34               	movwf	(btemp+10)^0,c
 34949  019330  0E00               	movlw	0
 34950  019332  6E35               	movwf	(btemp+11)^0,c
 34951                           
 34952                           ;stkvar	_i @ sp[(-18)+10]
 34953  019334  0EF8               	movlw	-8
 34954  019336  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34955  01933C  0EF9               	movlw	-7
 34956  01933E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34957                           
 34958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 34959  019344  0103               	movlb	3	; () banked
 34960  019346  6BA3               	clrf	(_dbuf+79)& (0+255),b
 34961                           
 34962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34963  019348  D109               	goto	l15554
 34964  01934A                     l15544:
 34965                           
 34966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 34967                           ;stkvar	_i @ sp[(-18)+10]
 34968  01934A  50E1               	movf	fsr1l,w,c
 34969  01934C  0FF8               	addlw	-8
 34970  01934E  6ED9               	movwf	fsr2l,c
 34971  019350  50E2               	movf	fsr1h,w,c
 34972  019352  6EDA               	movwf	fsr2h,c
 34973  019354  0EFF               	movlw	255
 34974  019356  22DA               	addwfc	fsr2h,f,c
 34975  019358  06DE               	decf	postinc2,f,c
 34976  01935A  0E00               	movlw	0
 34977  01935C  5ADD               	subwfb	postdec2,f,c
 34978                           
 34979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 34980  01935E  0E0A               	movlw	10
 34981  019360  6EE6               	movwf	postinc1,c
 34982  019362  0E00               	movlw	0
 34983  019364  6EE6               	movwf	postinc1,c
 34984  019366  0E00               	movlw	0
 34985  019368  6EE6               	movwf	postinc1,c
 34986  01936A  0E00               	movlw	0
 34987  01936C  6EE6               	movwf	postinc1,c
 34988  01936E  0E00               	movlw	0
 34989  019370  6EE6               	movwf	postinc1,c
 34990  019372  0E00               	movlw	0
 34991  019374  6EE6               	movwf	postinc1,c
 34992  019376  0E00               	movlw	0
 34993  019378  6EE6               	movwf	postinc1,c
 34994  01937A  0E00               	movlw	0
 34995  01937C  6EE6               	movwf	postinc1,c
 34996                           
 34997                           ;stkvar	_n @ sp[(-26)+2]
 34998  01937E  50E1               	movf	fsr1l,w,c
 34999  019380  0FE8               	addlw	-24
 35000  019382  6ED9               	movwf	fsr2l,c
 35001  019384  50E2               	movf	fsr1h,w,c
 35002  019386  6EDA               	movwf	fsr2h,c
 35003  019388  0EFF               	movlw	255
 35004  01938A  22DA               	addwfc	fsr2h,f,c
 35005  01938C  006F FF7B FFE6     	movff	postinc2,postinc1
 35006  019392  006F FF7B FFE6     	movff	postinc2,postinc1
 35007  019398  006F FF7B FFE6     	movff	postinc2,postinc1
 35008  01939E  006F FF7B FFE6     	movff	postinc2,postinc1
 35009  0193A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35010  0193AA  006F FF7B FFE6     	movff	postinc2,postinc1
 35011  0193B0  006F FF7B FFE6     	movff	postinc2,postinc1
 35012  0193B6  006F FF7B FFE6     	movff	postinc2,postinc1
 35013  0193BC  EC3C  F0E7         	call	___aomod	;wreg free
 35014  0193C0  52E5               	movf	postdec1,f,c
 35015  0193C2  006F FF9C  F041    	movff	indf1,btemp+23
 35016  0193C8  52E5               	movf	postdec1,f,c
 35017  0193CA  006F FF9C  F040    	movff	indf1,btemp+22
 35018  0193D0  52E5               	movf	postdec1,f,c
 35019  0193D2  006F FF9C  F03F    	movff	indf1,btemp+21
 35020  0193D8  52E5               	movf	postdec1,f,c
 35021  0193DA  006F FF9C  F03E    	movff	indf1,btemp+20
 35022  0193E0  52E5               	movf	postdec1,f,c
 35023  0193E2  006F FF9C  F03D    	movff	indf1,btemp+19
 35024  0193E8  52E5               	movf	postdec1,f,c
 35025  0193EA  006F FF9C  F03C    	movff	indf1,btemp+18
 35026  0193F0  52E5               	movf	postdec1,f,c
 35027  0193F2  006F FF9C  F03B    	movff	indf1,btemp+17
 35028  0193F8  52E5               	movf	postdec1,f,c
 35029  0193FA  006F FF9C  F03A    	movff	indf1,btemp+16
 35030  019400  0EF8               	movlw	248
 35031  019402  26E1               	addwf	fsr1l,f,c
 35032  019404  0EFF               	movlw	255
 35033  019406  22E2               	addwfc	fsr1h,f,c
 35034  019408  0060  F0E8  F034   	movff	btemp+16,btemp+10
 35035  01940E  0060  F0EC  F035   	movff	btemp+17,btemp+11
 35036  019414  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35037  01941A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35038  019420  EC57  F010         	call	_abs	;wreg free
 35039  019424  0E30               	movlw	48
 35040  019426  262A               	addwf	btemp^0,f,c
 35041                           
 35042                           ;stkvar	_i @ sp[(-18)+10]
 35043  019428  0EF8               	movlw	-8
 35044  01942A  006F FF8C  F034    	movff	plusw1,btemp+10
 35045  019430  0EF9               	movlw	-7
 35046  019432  006F FF8C  F035    	movff	plusw1,btemp+11
 35047  019438  0E54               	movlw	low _dbuf
 35048  01943A  2434               	addwf	(btemp+10)^0,w,c
 35049  01943C  6ED9               	movwf	fsr2l,c
 35050  01943E  0E03               	movlw	high _dbuf
 35051  019440  2035               	addwfc	(btemp+11)^0,w,c
 35052  019442  6EDA               	movwf	fsr2h,c
 35053  019444  0060  F0AB  FFDF   	movff	btemp,indf2
 35054                           
 35055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 35056                           ;stkvar	_p @ sp[(-18)+16]
 35057  01944A  50E1               	movf	fsr1l,w,c
 35058  01944C  0FFE               	addlw	-2
 35059  01944E  6ED9               	movwf	fsr2l,c
 35060  019450  50E2               	movf	fsr1h,w,c
 35061  019452  6EDA               	movwf	fsr2h,c
 35062  019454  0EFF               	movlw	255
 35063  019456  22DA               	addwfc	fsr2h,f,c
 35064  019458  06DE               	decf	postinc2,f,c
 35065  01945A  0E00               	movlw	0
 35066  01945C  5ADD               	subwfb	postdec2,f,c
 35067                           
 35068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 35069                           ;stkvar	_w @ sp[(-18)+14]
 35070  01945E  50E1               	movf	fsr1l,w,c
 35071  019460  0FFC               	addlw	-4
 35072  019462  6ED9               	movwf	fsr2l,c
 35073  019464  50E2               	movf	fsr1h,w,c
 35074  019466  6EDA               	movwf	fsr2h,c
 35075  019468  0EFF               	movlw	255
 35076  01946A  22DA               	addwfc	fsr2h,f,c
 35077  01946C  06DE               	decf	postinc2,f,c
 35078  01946E  0E00               	movlw	0
 35079  019470  5ADD               	subwfb	postdec2,f,c
 35080                           
 35081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 35082  019472  0E0A               	movlw	10
 35083  019474  6EE6               	movwf	postinc1,c
 35084  019476  0E00               	movlw	0
 35085  019478  6EE6               	movwf	postinc1,c
 35086  01947A  0E00               	movlw	0
 35087  01947C  6EE6               	movwf	postinc1,c
 35088  01947E  0E00               	movlw	0
 35089  019480  6EE6               	movwf	postinc1,c
 35090  019482  0E00               	movlw	0
 35091  019484  6EE6               	movwf	postinc1,c
 35092  019486  0E00               	movlw	0
 35093  019488  6EE6               	movwf	postinc1,c
 35094  01948A  0E00               	movlw	0
 35095  01948C  6EE6               	movwf	postinc1,c
 35096  01948E  0E00               	movlw	0
 35097  019490  6EE6               	movwf	postinc1,c
 35098                           
 35099                           ;stkvar	_n @ sp[(-26)+2]
 35100  019492  50E1               	movf	fsr1l,w,c
 35101  019494  0FE8               	addlw	-24
 35102  019496  6ED9               	movwf	fsr2l,c
 35103  019498  50E2               	movf	fsr1h,w,c
 35104  01949A  6EDA               	movwf	fsr2h,c
 35105  01949C  0EFF               	movlw	255
 35106  01949E  22DA               	addwfc	fsr2h,f,c
 35107  0194A0  006F FF7B FFE6     	movff	postinc2,postinc1
 35108  0194A6  006F FF7B FFE6     	movff	postinc2,postinc1
 35109  0194AC  006F FF7B FFE6     	movff	postinc2,postinc1
 35110  0194B2  006F FF7B FFE6     	movff	postinc2,postinc1
 35111  0194B8  006F FF7B FFE6     	movff	postinc2,postinc1
 35112  0194BE  006F FF7B FFE6     	movff	postinc2,postinc1
 35113  0194C4  006F FF7B FFE6     	movff	postinc2,postinc1
 35114  0194CA  006F FF7B FFE6     	movff	postinc2,postinc1
 35115  0194D0  EC7D  F0E2         	call	___aodiv	;wreg free
 35116  0194D4  52E5               	movf	postdec1,f,c
 35117  0194D6  006F FF9C  F041    	movff	indf1,btemp+23
 35118  0194DC  52E5               	movf	postdec1,f,c
 35119  0194DE  006F FF9C  F040    	movff	indf1,btemp+22
 35120  0194E4  52E5               	movf	postdec1,f,c
 35121  0194E6  006F FF9C  F03F    	movff	indf1,btemp+21
 35122  0194EC  52E5               	movf	postdec1,f,c
 35123  0194EE  006F FF9C  F03E    	movff	indf1,btemp+20
 35124  0194F4  52E5               	movf	postdec1,f,c
 35125  0194F6  006F FF9C  F03D    	movff	indf1,btemp+19
 35126  0194FC  52E5               	movf	postdec1,f,c
 35127  0194FE  006F FF9C  F03C    	movff	indf1,btemp+18
 35128  019504  52E5               	movf	postdec1,f,c
 35129  019506  006F FF9C  F03B    	movff	indf1,btemp+17
 35130  01950C  52E5               	movf	postdec1,f,c
 35131  01950E  006F FF9C  F03A    	movff	indf1,btemp+16
 35132  019514  0EF8               	movlw	248
 35133  019516  26E1               	addwf	fsr1l,f,c
 35134  019518  0EFF               	movlw	255
 35135  01951A  22E2               	addwfc	fsr1h,f,c
 35136                           
 35137                           ;stkvar	_n @ sp[(-18)+2]
 35138  01951C  0EF0               	movlw	-16
 35139  01951E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 35140  019524  0EF1               	movlw	-15
 35141  019526  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 35142  01952C  0EF2               	movlw	-14
 35143  01952E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 35144  019534  0EF3               	movlw	-13
 35145  019536  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 35146  01953C  0EF4               	movlw	-12
 35147  01953E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 35148  019544  0EF5               	movlw	-11
 35149  019546  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 35150  01954C  0EF6               	movlw	-10
 35151  01954E  0060  F103  FFE3   	movff	btemp+22,plusw1
 35152  019554  0EF7               	movlw	-9
 35153  019556  0060  F107  FFE3   	movff	btemp+23,plusw1
 35154  01955C                     l15554:
 35155                           
 35156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 35157                           ;stkvar	_i @ sp[(-18)+10]
 35158  01955C  0EF9               	movlw	-7
 35159  01955E  BEE3               	btfsc	plusw1,7,c
 35160  019560  D036               	goto	u14550
 35161  019562  0EF9               	movlw	-7
 35162  019564  50E3               	movf	plusw1,w,c
 35163  019566  E104               	bnz	u14510
 35164  019568  0EF8               	movlw	-8
 35165  01956A  04E3               	decf	plusw1,w,c
 35166  01956C  A0D8               	btfss	status,0,c
 35167  01956E  D02F               	goto	u14550
 35168  019570                     u14510:
 35169                           
 35170                           ;stkvar	_n @ sp[(-18)+2]
 35171  019570  0EF0               	movlw	-16
 35172  019572  50E3               	movf	plusw1,w,c
 35173  019574  E115               	bnz	u14521
 35174  019576  0EF1               	movlw	-15
 35175  019578  50E3               	movf	plusw1,w,c
 35176  01957A  E112               	bnz	u14521
 35177  01957C  0EF2               	movlw	-14
 35178  01957E  50E3               	movf	plusw1,w,c
 35179  019580  E10F               	bnz	u14521
 35180  019582  0EF3               	movlw	-13
 35181  019584  50E3               	movf	plusw1,w,c
 35182  019586  E10C               	bnz	u14521
 35183  019588  0EF4               	movlw	-12
 35184  01958A  50E3               	movf	plusw1,w,c
 35185  01958C  E109               	bnz	u14521
 35186  01958E  0EF5               	movlw	-11
 35187  019590  50E3               	movf	plusw1,w,c
 35188  019592  E106               	bnz	u14521
 35189  019594  0EF6               	movlw	-10
 35190  019596  50E3               	movf	plusw1,w,c
 35191  019598  E103               	bnz	u14521
 35192  01959A  0EF7               	movlw	-9
 35193  01959C  50E3               	movf	plusw1,w,c
 35194  01959E  A4D8               	btfss	status,2,c
 35195  0195A0                     u14521:
 35196  0195A0  D6D4               	goto	l15544
 35197                           
 35198                           ;stkvar	_p @ sp[(-18)+16]
 35199  0195A2  0EFF               	movlw	-1
 35200  0195A4  BEE3               	btfsc	plusw1,7,c
 35201  0195A6  D007               	goto	u14530
 35202  0195A8  0EFF               	movlw	-1
 35203  0195AA  50E3               	movf	plusw1,w,c
 35204  0195AC  E103               	bnz	u14531
 35205  0195AE  0EFE               	movlw	-2
 35206  0195B0  04E3               	decf	plusw1,w,c
 35207  0195B2  B0D8               	btfsc	status,0,c
 35208  0195B4                     u14531:
 35209  0195B4  D6CA               	goto	l15544
 35210  0195B6                     u14530:
 35211                           
 35212                           ;stkvar	_w @ sp[(-18)+14]
 35213  0195B6  0EFD               	movlw	-3
 35214  0195B8  BEE3               	btfsc	plusw1,7,c
 35215  0195BA  D009               	goto	u14550
 35216  0195BC  0EFD               	movlw	-3
 35217  0195BE  50E3               	movf	plusw1,w,c
 35218  0195C0  E104               	bnz	u14540
 35219  0195C2  0EFC               	movlw	-4
 35220  0195C4  04E3               	decf	plusw1,w,c
 35221  0195C6  A0D8               	btfss	status,0,c
 35222  0195C8  D002               	goto	u14550
 35223  0195CA                     u14540:
 35224  0195CA  B24E               	btfsc	_flags^0,1,c
 35225  0195CC  D6BE               	goto	l15544
 35226  0195CE                     u14550:
 35227                           
 35228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 35229                           ;stkvar	_s @ sp[(-18)+12]
 35230  0195CE  0EFA               	movlw	-6
 35231  0195D0  006F FF8C  F02A    	movff	plusw1,btemp
 35232  0195D6  0EFB               	movlw	-5
 35233  0195D8  50E3               	movf	plusw1,w,c
 35234  0195DA  102A               	iorwf	btemp^0,w,c
 35235  0195DC  A4D8               	btfss	status,2,c
 35236  0195DE  D002               	goto	u14570
 35237  0195E0  A44E               	btfss	_flags^0,2,c
 35238  0195E2  D033               	goto	l15578
 35239  0195E4                     u14570:
 35240                           
 35241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 35242                           ;stkvar	_i @ sp[(-18)+10]
 35243  0195E4  50E1               	movf	fsr1l,w,c
 35244  0195E6  0FF8               	addlw	-8
 35245  0195E8  6ED9               	movwf	fsr2l,c
 35246  0195EA  50E2               	movf	fsr1h,w,c
 35247  0195EC  6EDA               	movwf	fsr2h,c
 35248  0195EE  0EFF               	movlw	255
 35249  0195F0  22DA               	addwfc	fsr2h,f,c
 35250  0195F2  06DE               	decf	postinc2,f,c
 35251  0195F4  0E00               	movlw	0
 35252  0195F6  5ADD               	subwfb	postdec2,f,c
 35253                           
 35254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 35255                           ;stkvar	_s @ sp[(-18)+12]
 35256  0195F8  0EFA               	movlw	-6
 35257  0195FA  006F FF8C  F02A    	movff	plusw1,btemp
 35258  019600  0EFB               	movlw	-5
 35259  019602  50E3               	movf	plusw1,w,c
 35260  019604  102A               	iorwf	btemp^0,w,c
 35261  019606  A4D8               	btfss	status,2,c
 35262  019608  D002               	goto	l15574
 35263  01960A  0E2B               	movlw	43
 35264  01960C  D001               	goto	L39
 35265  01960E                     l15574:
 35266  01960E  0E2D               	movlw	45
 35267  019610                     L39:
 35268  019610  6E34               	movwf	(btemp+10)^0,c
 35269  019612  0E00               	movlw	0
 35270  019614  6E35               	movwf	(btemp+11)^0,c
 35271                           
 35272                           ;stkvar	_dtoa$6615 @ sp[(-18)+0]
 35273  019616  0EEE               	movlw	-18
 35274  019618  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35275  01961E  0EEF               	movlw	-17
 35276  019620  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35277                           
 35278                           ;stkvar	_dtoa$6615 @ sp[(-18)+0]
 35279                           ;stkvar	_i @ sp[(-18)+10]
 35280  019626  0EF8               	movlw	-8
 35281  019628  006F FF8C  F034    	movff	plusw1,btemp+10
 35282  01962E  0EF9               	movlw	-7
 35283  019630  006F FF8C  F035    	movff	plusw1,btemp+11
 35284  019636  0E54               	movlw	low _dbuf
 35285  019638  2434               	addwf	(btemp+10)^0,w,c
 35286  01963A  6ED9               	movwf	fsr2l,c
 35287  01963C  0E03               	movlw	high _dbuf
 35288  01963E  2035               	addwfc	(btemp+11)^0,w,c
 35289  019640  6EDA               	movwf	fsr2h,c
 35290  019642  0EEE               	movlw	-18
 35291  019644  006F FF8F FFDF     	movff	plusw1,indf2
 35292  01964A                     l15578:
 35293                           
 35294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 35295                           ;stkvar	_w @ sp[(-18)+14]
 35296  01964A  0EFC               	movlw	-4
 35297  01964C  006F FF8F FFE6     	movff	plusw1,postinc1
 35298  019652  006F FF8F FFE6     	movff	plusw1,postinc1
 35299                           
 35300                           ;stkvar	_i @ sp[(-20)+10]
 35301  019658  0E54               	movlw	low _dbuf
 35302  01965A  6E34               	movwf	(btemp+10)^0,c
 35303  01965C  0E03               	movlw	high _dbuf
 35304  01965E  6E35               	movwf	(btemp+11)^0,c
 35305  019660  0EF6               	movlw	-10
 35306  019662  50E3               	movf	plusw1,w,c
 35307  019664  2634               	addwf	(btemp+10)^0,f,c
 35308  019666  0EF7               	movlw	-9
 35309  019668  50E3               	movf	plusw1,w,c
 35310  01966A  2235               	addwfc	(btemp+11)^0,f,c
 35311  01966C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35312  019672  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35313                           
 35314                           ;stkvar	_fp @ sp[(-22)+-2]
 35315  019678  0EE8               	movlw	-24
 35316  01967A  006F FF8F FFE6     	movff	plusw1,postinc1
 35317  019680  006F FF8F FFE6     	movff	plusw1,postinc1
 35318  019686  EC5B  F0FE         	call	_pad	;wreg free
 35319                           
 35320                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 35321  01968A  0EE4               	movlw	228
 35322  01968C  26E1               	addwf	fsr1l,f,c
 35323  01968E  0EFF               	movlw	255
 35324  019690  22E2               	addwfc	fsr1h,f,c
 35325  019692  0012               	return		;funcret
 35326  019694                     __end_of_dtoa:
 35327                           	opt callstack 0
 35328                           
 35329 ;; *************** function _abs *****************
 35330 ;; Defined at:
 35331 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 35332 ;; Parameters:    Size  Location     Type
 35333 ;;  a               2  [STACK] int 
 35334 ;; Auto vars:     Size  Location     Type
 35335 ;;		None
 35336 ;; Return value:  Size  Location     Type
 35337 ;;                  2  [STACK] int 
 35338 ;; Registers used:
 35339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 35340 ;; Tracked objects:
 35341 ;;		On entry : 0/3
 35342 ;;		On exit  : 0/0
 35343 ;;		Unchanged: 0/0
 35344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35349 ;;Total ram usage:        0 bytes
 35350 ;; Hardware stack levels used:    1
 35351 ;; Hardware stack levels required when called:   15
 35352 ;; This function calls:
 35353 ;;		Nothing
 35354 ;; This function is called by:
 35355 ;;		_dtoa
 35356 ;; This function uses a reentrant model
 35357 ;;
 35358                           
 35359                           	psect	text115
 35360  0020AE                     __ptext115:
 35361                           	opt callstack 0
 35362  0020AE                     _abs:
 35363                           	opt callstack 0
 35364                           
 35365                           ;stkvar	_a @ sp[(0)+-2]
 35366                           
 35367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35368                           ;incstack = 0
 35369 ;; hardware stack exceeded
 35370  0020AE  0EFF               	movlw	-1
 35371  0020B0  BEE3               	btfsc	plusw1,7,c
 35372  0020B2  D007               	goto	u7760
 35373  0020B4  0EFF               	movlw	-1
 35374  0020B6  50E3               	movf	plusw1,w,c
 35375  0020B8  E112               	bnz	l10120
 35376  0020BA  0EFE               	movlw	-2
 35377  0020BC  04E3               	decf	plusw1,w,c
 35378  0020BE  B0D8               	btfsc	status,0,c
 35379  0020C0  D00E               	goto	l10120
 35380  0020C2                     u7760:
 35381                           
 35382                           ;stkvar	_a @ sp[(0)+-2]
 35383  0020C2  0EFE               	movlw	-2
 35384  0020C4  006F FF8C  F02A    	movff	plusw1,btemp
 35385  0020CA  1E2A               	comf	btemp^0,f,c
 35386  0020CC  0EFF               	movlw	-1
 35387  0020CE  006F FF8C  F02B    	movff	plusw1,btemp+1
 35388  0020D4  1E2B               	comf	(btemp+1)^0,f,c
 35389  0020D6  2A2A               	incf	btemp^0,f,c
 35390  0020D8  B4D8               	btfsc	status,2,c
 35391  0020DA  2A2B               	incf	(btemp+1)^0,f,c
 35392  0020DC  D008               	goto	l3421
 35393  0020DE                     l10120:
 35394                           
 35395                           ;stkvar	_a @ sp[(0)+-2]
 35396  0020DE  0EFE               	movlw	-2
 35397  0020E0  006F FF8C  F02A    	movff	plusw1,btemp
 35398  0020E6  0EFF               	movlw	-1
 35399  0020E8  006F FF8C  F02B    	movff	plusw1,btemp+1
 35400  0020EE                     l3421:
 35401                           
 35402                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 35403  0020EE  52E5               	movf	postdec1,f,c
 35404  0020F0  52E5               	movf	postdec1,f,c
 35405  0020F2  0012               	return		;funcret
 35406  0020F4                     __end_of_abs:
 35407                           	opt callstack 0
 35408                           
 35409 ;; *************** function ___aomod *****************
 35410 ;; Defined at:
 35411 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 35412 ;; Parameters:    Size  Location     Type
 35413 ;;  dividend        8  [STACK] long long 
 35414 ;;  divisor         8  [STACK] long long 
 35415 ;; Auto vars:     Size  Location     Type
 35416 ;;  sign            1  [STACK] unsigned char 
 35417 ;;  counter         1  [STACK] unsigned char 
 35418 ;; Return value:  Size  Location     Type
 35419 ;;                  8  [STACK] long long 
 35420 ;; Registers used:
 35421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35422 ;; Tracked objects:
 35423 ;;		On entry : 0/0
 35424 ;;		On exit  : 0/0
 35425 ;;		Unchanged: 0/0
 35426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35431 ;;Total ram usage:        0 bytes
 35432 ;; Hardware stack levels used:    1
 35433 ;; Hardware stack levels required when called:   15
 35434 ;; This function calls:
 35435 ;;		Nothing
 35436 ;; This function is called by:
 35437 ;;		_dtoa
 35438 ;;		___secs_to_tm
 35439 ;;		_rule_to_secs
 35440 ;;		___year_to_secs
 35441 ;; This function uses a reentrant model
 35442 ;;
 35443                           
 35444                           	psect	text116
 35445  01CE78                     __ptext116:
 35446                           	opt callstack 0
 35447  01CE78                     ___aomod:
 35448                           	opt callstack 0
 35449                           
 35450                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 35451  01CE78  52E6               	movf	postinc1,f,c
 35452  01CE7A  52E6               	movf	postinc1,f,c
 35453                           
 35454                           ;stkvar	_sign @ sp[(-2)+0]
 35455                           
 35456                           ;incstack = 0
 35457 ;; hardware stack exceeded
 35458  01CE7C  0EFE               	movlw	-2
 35459  01CE7E  6AE3               	clrf	plusw1,c
 35460                           
 35461                           ;stkvar	_dividend @ sp[(-2)+-8]
 35462  01CE80  0EFD               	movlw	-3
 35463  01CE82  AEE3               	btfss	plusw1,7,c
 35464  01CE84  D028               	goto	l10304
 35465                           
 35466                           ;stkvar	_dividend @ sp[(-2)+-8]
 35467                           ;stkvar	_dividend @ sp[(-2)+-8]
 35468  01CE86  0EF6               	movlw	-10
 35469  01CE88  6CE3               	negf	plusw1,c
 35470  01CE8A  0EF7               	movlw	-9
 35471  01CE8C  1EE3               	comf	plusw1,f,c
 35472  01CE8E  0EF8               	movlw	-8
 35473  01CE90  1EE3               	comf	plusw1,f,c
 35474  01CE92  0EF9               	movlw	-7
 35475  01CE94  1EE3               	comf	plusw1,f,c
 35476  01CE96  0EFA               	movlw	-6
 35477  01CE98  1EE3               	comf	plusw1,f,c
 35478  01CE9A  0EFB               	movlw	-5
 35479  01CE9C  1EE3               	comf	plusw1,f,c
 35480  01CE9E  0EFC               	movlw	-4
 35481  01CEA0  1EE3               	comf	plusw1,f,c
 35482  01CEA2  0EFD               	movlw	-3
 35483  01CEA4  1EE3               	comf	plusw1,f,c
 35484  01CEA6  E314               	bnc	u8250
 35485  01CEA8  0EF7               	movlw	-9
 35486  01CEAA  2AE3               	incf	plusw1,f,c
 35487  01CEAC  E311               	bnc	u8250
 35488  01CEAE  0EF8               	movlw	-8
 35489  01CEB0  2AE3               	incf	plusw1,f,c
 35490  01CEB2  E30E               	bnc	u8250
 35491  01CEB4  0EF9               	movlw	-7
 35492  01CEB6  2AE3               	incf	plusw1,f,c
 35493  01CEB8  E30B               	bnc	u8250
 35494  01CEBA  0EFA               	movlw	-6
 35495  01CEBC  2AE3               	incf	plusw1,f,c
 35496  01CEBE  E308               	bnc	u8250
 35497  01CEC0  0EFB               	movlw	-5
 35498  01CEC2  2AE3               	incf	plusw1,f,c
 35499  01CEC4  E305               	bnc	u8250
 35500  01CEC6  0EFC               	movlw	-4
 35501  01CEC8  2AE3               	incf	plusw1,f,c
 35502  01CECA  E302               	bnc	u8250
 35503  01CECC  0EFD               	movlw	-3
 35504  01CECE  2AE3               	incf	plusw1,f,c
 35505  01CED0                     u8250:
 35506                           
 35507                           ;stkvar	_sign @ sp[(-2)+0]
 35508  01CED0  0EFE               	movlw	-2
 35509  01CED2  6AE3               	clrf	plusw1,c
 35510  01CED4  2AE3               	incf	plusw1,f,c
 35511  01CED6                     l10304:
 35512                           
 35513                           ;stkvar	_divisor @ sp[(-2)+-16]
 35514  01CED6  0EF5               	movlw	-11
 35515  01CED8  AEE3               	btfss	plusw1,7,c
 35516  01CEDA  D025               	goto	u8270
 35517                           
 35518                           ;stkvar	_divisor @ sp[(-2)+-16]
 35519                           ;stkvar	_divisor @ sp[(-2)+-16]
 35520  01CEDC  0EEE               	movlw	-18
 35521  01CEDE  6CE3               	negf	plusw1,c
 35522  01CEE0  0EEF               	movlw	-17
 35523  01CEE2  1EE3               	comf	plusw1,f,c
 35524  01CEE4  0EF0               	movlw	-16
 35525  01CEE6  1EE3               	comf	plusw1,f,c
 35526  01CEE8  0EF1               	movlw	-15
 35527  01CEEA  1EE3               	comf	plusw1,f,c
 35528  01CEEC  0EF2               	movlw	-14
 35529  01CEEE  1EE3               	comf	plusw1,f,c
 35530  01CEF0  0EF3               	movlw	-13
 35531  01CEF2  1EE3               	comf	plusw1,f,c
 35532  01CEF4  0EF4               	movlw	-12
 35533  01CEF6  1EE3               	comf	plusw1,f,c
 35534  01CEF8  0EF5               	movlw	-11
 35535  01CEFA  1EE3               	comf	plusw1,f,c
 35536  01CEFC  E314               	bnc	u8270
 35537  01CEFE  0EEF               	movlw	-17
 35538  01CF00  2AE3               	incf	plusw1,f,c
 35539  01CF02  E311               	bnc	u8270
 35540  01CF04  0EF0               	movlw	-16
 35541  01CF06  2AE3               	incf	plusw1,f,c
 35542  01CF08  E30E               	bnc	u8270
 35543  01CF0A  0EF1               	movlw	-15
 35544  01CF0C  2AE3               	incf	plusw1,f,c
 35545  01CF0E  E30B               	bnc	u8270
 35546  01CF10  0EF2               	movlw	-14
 35547  01CF12  2AE3               	incf	plusw1,f,c
 35548  01CF14  E308               	bnc	u8270
 35549  01CF16  0EF3               	movlw	-13
 35550  01CF18  2AE3               	incf	plusw1,f,c
 35551  01CF1A  E305               	bnc	u8270
 35552  01CF1C  0EF4               	movlw	-12
 35553  01CF1E  2AE3               	incf	plusw1,f,c
 35554  01CF20  E302               	bnc	u8270
 35555  01CF22  0EF5               	movlw	-11
 35556  01CF24  2AE3               	incf	plusw1,f,c
 35557  01CF26                     u8270:
 35558                           
 35559                           ;stkvar	_divisor @ sp[(-2)+-16]
 35560  01CF26  0EEE               	movlw	-18
 35561  01CF28  50E3               	movf	plusw1,w,c
 35562  01CF2A  E116               	bnz	u8280
 35563  01CF2C  0EEF               	movlw	-17
 35564  01CF2E  50E3               	movf	plusw1,w,c
 35565  01CF30  E113               	bnz	u8280
 35566  01CF32  0EF0               	movlw	-16
 35567  01CF34  50E3               	movf	plusw1,w,c
 35568  01CF36  E110               	bnz	u8280
 35569  01CF38  0EF1               	movlw	-15
 35570  01CF3A  50E3               	movf	plusw1,w,c
 35571  01CF3C  E10D               	bnz	u8280
 35572  01CF3E  0EF2               	movlw	-14
 35573  01CF40  50E3               	movf	plusw1,w,c
 35574  01CF42  E10A               	bnz	u8280
 35575  01CF44  0EF3               	movlw	-13
 35576  01CF46  50E3               	movf	plusw1,w,c
 35577  01CF48  E107               	bnz	u8280
 35578  01CF4A  0EF4               	movlw	-12
 35579  01CF4C  50E3               	movf	plusw1,w,c
 35580  01CF4E  E104               	bnz	u8280
 35581  01CF50  0EF5               	movlw	-11
 35582  01CF52  50E3               	movf	plusw1,w,c
 35583  01CF54  B4D8               	btfsc	status,2,c
 35584  01CF56  D075               	goto	u8310
 35585  01CF58                     u8280:
 35586                           
 35587                           ;stkvar	_counter @ sp[(-2)+1]
 35588  01CF58  0EFF               	movlw	-1
 35589  01CF5A  6AE3               	clrf	plusw1,c
 35590  01CF5C  D012               	goto	L40
 35591  01CF5E                     l10312:
 35592                           
 35593                           ;stkvar	_divisor @ sp[(-2)+-16]
 35594  01CF5E  90D8               	bcf	status,0,c
 35595  01CF60  0EEE               	movlw	-18
 35596  01CF62  36E3               	rlcf	plusw1,f,c
 35597  01CF64  0EEF               	movlw	-17
 35598  01CF66  36E3               	rlcf	plusw1,f,c
 35599  01CF68  0EF0               	movlw	-16
 35600  01CF6A  36E3               	rlcf	plusw1,f,c
 35601  01CF6C  0EF1               	movlw	-15
 35602  01CF6E  36E3               	rlcf	plusw1,f,c
 35603  01CF70  0EF2               	movlw	-14
 35604  01CF72  36E3               	rlcf	plusw1,f,c
 35605  01CF74  0EF3               	movlw	-13
 35606  01CF76  36E3               	rlcf	plusw1,f,c
 35607  01CF78  0EF4               	movlw	-12
 35608  01CF7A  36E3               	rlcf	plusw1,f,c
 35609  01CF7C  0EF5               	movlw	-11
 35610  01CF7E  36E3               	rlcf	plusw1,f,c
 35611                           
 35612                           ;stkvar	_counter @ sp[(-2)+1]
 35613  01CF80  0EFF               	movlw	-1
 35614  01CF82                     L40:
 35615  01CF82  2AE3               	incf	plusw1,f,c
 35616                           
 35617                           ;stkvar	_divisor @ sp[(-2)+-16]
 35618  01CF84  0EF5               	movlw	-11
 35619  01CF86  AEE3               	btfss	plusw1,7,c
 35620  01CF88  D7EA               	goto	l10312
 35621  01CF8A                     u8290:
 35622                           
 35623                           ;stkvar	_divisor @ sp[(-2)+-16]
 35624                           ;stkvar	_dividend @ sp[(-2)+-8]
 35625  01CF8A  50E1               	movf	fsr1l,w,c
 35626  01CF8C  0FF6               	addlw	-10
 35627  01CF8E  6ED9               	movwf	fsr2l,c
 35628  01CF90  50E2               	movf	fsr1h,w,c
 35629  01CF92  6EDA               	movwf	fsr2h,c
 35630  01CF94  0EFF               	movlw	255
 35631  01CF96  22DA               	addwfc	fsr2h,f,c
 35632  01CF98  0EEE               	movlw	-18
 35633  01CF9A  50E3               	movf	plusw1,w,c
 35634  01CF9C  5CDE               	subwf	postinc2,w,c
 35635  01CF9E  0EEF               	movlw	-17
 35636  01CFA0  50E3               	movf	plusw1,w,c
 35637  01CFA2  58DE               	subwfb	postinc2,w,c
 35638  01CFA4  0EF0               	movlw	-16
 35639  01CFA6  50E3               	movf	plusw1,w,c
 35640  01CFA8  58DE               	subwfb	postinc2,w,c
 35641  01CFAA  0EF1               	movlw	-15
 35642  01CFAC  50E3               	movf	plusw1,w,c
 35643  01CFAE  58DE               	subwfb	postinc2,w,c
 35644  01CFB0  0EF2               	movlw	-14
 35645  01CFB2  50E3               	movf	plusw1,w,c
 35646  01CFB4  58DE               	subwfb	postinc2,w,c
 35647  01CFB6  0EF3               	movlw	-13
 35648  01CFB8  50E3               	movf	plusw1,w,c
 35649  01CFBA  58DE               	subwfb	postinc2,w,c
 35650  01CFBC  0EF4               	movlw	-12
 35651  01CFBE  50E3               	movf	plusw1,w,c
 35652  01CFC0  58DE               	subwfb	postinc2,w,c
 35653  01CFC2  0EF5               	movlw	-11
 35654  01CFC4  50E3               	movf	plusw1,w,c
 35655  01CFC6  58DE               	subwfb	postinc2,w,c
 35656  01CFC8  A0D8               	btfss	status,0,c
 35657  01CFCA  D01F               	goto	l10320
 35658                           
 35659                           ;stkvar	_divisor @ sp[(-2)+-16]
 35660                           ;stkvar	_dividend @ sp[(-2)+-8]
 35661  01CFCC  50E1               	movf	fsr1l,w,c
 35662  01CFCE  0FF6               	addlw	-10
 35663  01CFD0  6ED9               	movwf	fsr2l,c
 35664  01CFD2  50E2               	movf	fsr1h,w,c
 35665  01CFD4  6EDA               	movwf	fsr2h,c
 35666  01CFD6  0EFF               	movlw	255
 35667  01CFD8  22DA               	addwfc	fsr2h,f,c
 35668  01CFDA  0EEE               	movlw	-18
 35669  01CFDC  50E3               	movf	plusw1,w,c
 35670  01CFDE  5EDE               	subwf	postinc2,f,c
 35671  01CFE0  0EEF               	movlw	-17
 35672  01CFE2  50E3               	movf	plusw1,w,c
 35673  01CFE4  5ADE               	subwfb	postinc2,f,c
 35674  01CFE6  0EF0               	movlw	-16
 35675  01CFE8  50E3               	movf	plusw1,w,c
 35676  01CFEA  5ADE               	subwfb	postinc2,f,c
 35677  01CFEC  0EF1               	movlw	-15
 35678  01CFEE  50E3               	movf	plusw1,w,c
 35679  01CFF0  5ADE               	subwfb	postinc2,f,c
 35680  01CFF2  0EF2               	movlw	-14
 35681  01CFF4  50E3               	movf	plusw1,w,c
 35682  01CFF6  5ADE               	subwfb	postinc2,f,c
 35683  01CFF8  0EF3               	movlw	-13
 35684  01CFFA  50E3               	movf	plusw1,w,c
 35685  01CFFC  5ADE               	subwfb	postinc2,f,c
 35686  01CFFE  0EF4               	movlw	-12
 35687  01D000  50E3               	movf	plusw1,w,c
 35688  01D002  5ADE               	subwfb	postinc2,f,c
 35689  01D004  0EF5               	movlw	-11
 35690  01D006  50E3               	movf	plusw1,w,c
 35691  01D008  5ADE               	subwfb	postinc2,f,c
 35692  01D00A                     l10320:
 35693                           
 35694                           ;stkvar	_divisor @ sp[(-2)+-16]
 35695  01D00A  90D8               	bcf	status,0,c
 35696  01D00C  0EF5               	movlw	-11
 35697  01D00E  32E3               	rrcf	plusw1,f,c
 35698  01D010  0EF4               	movlw	-12
 35699  01D012  32E3               	rrcf	plusw1,f,c
 35700  01D014  0EF3               	movlw	-13
 35701  01D016  32E3               	rrcf	plusw1,f,c
 35702  01D018  0EF2               	movlw	-14
 35703  01D01A  32E3               	rrcf	plusw1,f,c
 35704  01D01C  0EF1               	movlw	-15
 35705  01D01E  32E3               	rrcf	plusw1,f,c
 35706  01D020  0EF0               	movlw	-16
 35707  01D022  32E3               	rrcf	plusw1,f,c
 35708  01D024  0EEF               	movlw	-17
 35709  01D026  32E3               	rrcf	plusw1,f,c
 35710  01D028  0EEE               	movlw	-18
 35711  01D02A  32E3               	rrcf	plusw1,f,c
 35712                           
 35713                           ;stkvar	_counter @ sp[(-2)+1]
 35714  01D02C  0EFF               	movlw	-1
 35715  01D02E  50E3               	movf	plusw1,w,c
 35716  01D030  6E2A               	movwf	btemp^0,c
 35717  01D032  0E01               	movlw	1
 35718  01D034  5E2A               	subwf	btemp^0,f,c
 35719  01D036  0EFF               	movlw	-1
 35720  01D038  0060  F0AB  FFE3   	movff	btemp,plusw1
 35721  01D03E  A4D8               	btfss	status,2,c
 35722  01D040  D7A4               	goto	u8290
 35723  01D042                     u8310:
 35724                           
 35725                           ;stkvar	_sign @ sp[(-2)+0]
 35726  01D042  0EFE               	movlw	-2
 35727  01D044  50E3               	movf	plusw1,w,c
 35728  01D046  B4D8               	btfsc	status,2,c
 35729  01D048  D025               	goto	u8330
 35730                           
 35731                           ;stkvar	_dividend @ sp[(-2)+-8]
 35732                           ;stkvar	_dividend @ sp[(-2)+-8]
 35733  01D04A  0EF6               	movlw	-10
 35734  01D04C  6CE3               	negf	plusw1,c
 35735  01D04E  0EF7               	movlw	-9
 35736  01D050  1EE3               	comf	plusw1,f,c
 35737  01D052  0EF8               	movlw	-8
 35738  01D054  1EE3               	comf	plusw1,f,c
 35739  01D056  0EF9               	movlw	-7
 35740  01D058  1EE3               	comf	plusw1,f,c
 35741  01D05A  0EFA               	movlw	-6
 35742  01D05C  1EE3               	comf	plusw1,f,c
 35743  01D05E  0EFB               	movlw	-5
 35744  01D060  1EE3               	comf	plusw1,f,c
 35745  01D062  0EFC               	movlw	-4
 35746  01D064  1EE3               	comf	plusw1,f,c
 35747  01D066  0EFD               	movlw	-3
 35748  01D068  1EE3               	comf	plusw1,f,c
 35749  01D06A  E314               	bnc	u8330
 35750  01D06C  0EF7               	movlw	-9
 35751  01D06E  2AE3               	incf	plusw1,f,c
 35752  01D070  E311               	bnc	u8330
 35753  01D072  0EF8               	movlw	-8
 35754  01D074  2AE3               	incf	plusw1,f,c
 35755  01D076  E30E               	bnc	u8330
 35756  01D078  0EF9               	movlw	-7
 35757  01D07A  2AE3               	incf	plusw1,f,c
 35758  01D07C  E30B               	bnc	u8330
 35759  01D07E  0EFA               	movlw	-6
 35760  01D080  2AE3               	incf	plusw1,f,c
 35761  01D082  E308               	bnc	u8330
 35762  01D084  0EFB               	movlw	-5
 35763  01D086  2AE3               	incf	plusw1,f,c
 35764  01D088  E305               	bnc	u8330
 35765  01D08A  0EFC               	movlw	-4
 35766  01D08C  2AE3               	incf	plusw1,f,c
 35767  01D08E  E302               	bnc	u8330
 35768  01D090  0EFD               	movlw	-3
 35769  01D092  2AE3               	incf	plusw1,f,c
 35770  01D094                     u8330:
 35771                           
 35772                           ;stkvar	_dividend @ sp[(-2)+-8]
 35773  01D094  0EF6               	movlw	246
 35774  01D096  24E1               	addwf	fsr1l,w,c
 35775  01D098  6ED9               	movwf	fsr2l,c
 35776  01D09A  0EFF               	movlw	255
 35777  01D09C  20E2               	addwfc	fsr1h,w,c
 35778  01D09E  6EDA               	movwf	fsr2h,c
 35779                           
 35780                           ;stkvar	?___aomod @ sp[(-2)+-8]
 35781  01D0A0  0E08               	movlw	8
 35782  01D0A2  6E2A               	movwf	btemp^0,c
 35783  01D0A4  0EF6               	movlw	-10
 35784  01D0A6                     us834999:
 35785  01D0A6  006F FF7B FFE3     	movff	postinc2,plusw1
 35786  01D0AC  28E8               	incf	wreg,w,c
 35787  01D0AE  2E2A               	decfsz	btemp^0,f,c
 35788  01D0B0  D7FA               	bra	us834999
 35789                           
 35790                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 35791  01D0B2  52E5               	movf	postdec1,f,c
 35792  01D0B4  52E5               	movf	postdec1,f,c
 35793  01D0B6  0012               	return		;funcret
 35794  01D0B8                     __end_of___aomod:
 35795                           	opt callstack 0
 35796                           
 35797 ;; *************** function ___aodiv *****************
 35798 ;; Defined at:
 35799 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 35800 ;; Parameters:    Size  Location     Type
 35801 ;;  dividend        8  [STACK] long long 
 35802 ;;  divisor         8  [STACK] long long 
 35803 ;; Auto vars:     Size  Location     Type
 35804 ;;  quotient        8  [STACK] long long 
 35805 ;;  sign            1  [STACK] unsigned char 
 35806 ;;  counter         1  [STACK] unsigned char 
 35807 ;; Return value:  Size  Location     Type
 35808 ;;                  8  [STACK] long long 
 35809 ;; Registers used:
 35810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35811 ;; Tracked objects:
 35812 ;;		On entry : 0/0
 35813 ;;		On exit  : 0/0
 35814 ;;		Unchanged: 0/0
 35815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35820 ;;Total ram usage:        0 bytes
 35821 ;; Hardware stack levels used:    1
 35822 ;; Hardware stack levels required when called:   15
 35823 ;; This function calls:
 35824 ;;		Nothing
 35825 ;; This function is called by:
 35826 ;;		_dtoa
 35827 ;;		___secs_to_tm
 35828 ;;		___secs_to_zone
 35829 ;;		___year_to_secs
 35830 ;; This function uses a reentrant model
 35831 ;;
 35832                           
 35833                           	psect	text117
 35834  01C4FA                     __ptext117:
 35835                           	opt callstack 0
 35836  01C4FA                     ___aodiv:
 35837                           	opt callstack 0
 35838                           
 35839                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 35840  01C4FA  0E0A               	movlw	10
 35841  01C4FC  26E1               	addwf	fsr1l,f,c
 35842  01C4FE  0E00               	movlw	0
 35843  01C500  22E2               	addwfc	fsr1h,f,c
 35844                           
 35845                           ;stkvar	_sign @ sp[(-10)+8]
 35846                           
 35847                           ;incstack = 0
 35848 ;; hardware stack exceeded
 35849  01C502  0EFE               	movlw	-2
 35850  01C504  6AE3               	clrf	plusw1,c
 35851                           
 35852                           ;stkvar	_divisor @ sp[(-10)+-16]
 35853  01C506  0EED               	movlw	-19
 35854  01C508  AEE3               	btfss	plusw1,7,c
 35855  01C50A  D028               	goto	l10260
 35856                           
 35857                           ;stkvar	_divisor @ sp[(-10)+-16]
 35858                           ;stkvar	_divisor @ sp[(-10)+-16]
 35859  01C50C  0EE6               	movlw	-26
 35860  01C50E  6CE3               	negf	plusw1,c
 35861  01C510  0EE7               	movlw	-25
 35862  01C512  1EE3               	comf	plusw1,f,c
 35863  01C514  0EE8               	movlw	-24
 35864  01C516  1EE3               	comf	plusw1,f,c
 35865  01C518  0EE9               	movlw	-23
 35866  01C51A  1EE3               	comf	plusw1,f,c
 35867  01C51C  0EEA               	movlw	-22
 35868  01C51E  1EE3               	comf	plusw1,f,c
 35869  01C520  0EEB               	movlw	-21
 35870  01C522  1EE3               	comf	plusw1,f,c
 35871  01C524  0EEC               	movlw	-20
 35872  01C526  1EE3               	comf	plusw1,f,c
 35873  01C528  0EED               	movlw	-19
 35874  01C52A  1EE3               	comf	plusw1,f,c
 35875  01C52C  E314               	bnc	u8130
 35876  01C52E  0EE7               	movlw	-25
 35877  01C530  2AE3               	incf	plusw1,f,c
 35878  01C532  E311               	bnc	u8130
 35879  01C534  0EE8               	movlw	-24
 35880  01C536  2AE3               	incf	plusw1,f,c
 35881  01C538  E30E               	bnc	u8130
 35882  01C53A  0EE9               	movlw	-23
 35883  01C53C  2AE3               	incf	plusw1,f,c
 35884  01C53E  E30B               	bnc	u8130
 35885  01C540  0EEA               	movlw	-22
 35886  01C542  2AE3               	incf	plusw1,f,c
 35887  01C544  E308               	bnc	u8130
 35888  01C546  0EEB               	movlw	-21
 35889  01C548  2AE3               	incf	plusw1,f,c
 35890  01C54A  E305               	bnc	u8130
 35891  01C54C  0EEC               	movlw	-20
 35892  01C54E  2AE3               	incf	plusw1,f,c
 35893  01C550  E302               	bnc	u8130
 35894  01C552  0EED               	movlw	-19
 35895  01C554  2AE3               	incf	plusw1,f,c
 35896  01C556                     u8130:
 35897                           
 35898                           ;stkvar	_sign @ sp[(-10)+8]
 35899  01C556  0EFE               	movlw	-2
 35900  01C558  6AE3               	clrf	plusw1,c
 35901  01C55A  2AE3               	incf	plusw1,f,c
 35902  01C55C                     l10260:
 35903                           
 35904                           ;stkvar	_dividend @ sp[(-10)+-8]
 35905  01C55C  0EF5               	movlw	-11
 35906  01C55E  AEE3               	btfss	plusw1,7,c
 35907  01C560  D027               	goto	l10266
 35908                           
 35909                           ;stkvar	_dividend @ sp[(-10)+-8]
 35910                           ;stkvar	_dividend @ sp[(-10)+-8]
 35911  01C562  0EEE               	movlw	-18
 35912  01C564  6CE3               	negf	plusw1,c
 35913  01C566  0EEF               	movlw	-17
 35914  01C568  1EE3               	comf	plusw1,f,c
 35915  01C56A  0EF0               	movlw	-16
 35916  01C56C  1EE3               	comf	plusw1,f,c
 35917  01C56E  0EF1               	movlw	-15
 35918  01C570  1EE3               	comf	plusw1,f,c
 35919  01C572  0EF2               	movlw	-14
 35920  01C574  1EE3               	comf	plusw1,f,c
 35921  01C576  0EF3               	movlw	-13
 35922  01C578  1EE3               	comf	plusw1,f,c
 35923  01C57A  0EF4               	movlw	-12
 35924  01C57C  1EE3               	comf	plusw1,f,c
 35925  01C57E  0EF5               	movlw	-11
 35926  01C580  1EE3               	comf	plusw1,f,c
 35927  01C582  E314               	bnc	u8150
 35928  01C584  0EEF               	movlw	-17
 35929  01C586  2AE3               	incf	plusw1,f,c
 35930  01C588  E311               	bnc	u8150
 35931  01C58A  0EF0               	movlw	-16
 35932  01C58C  2AE3               	incf	plusw1,f,c
 35933  01C58E  E30E               	bnc	u8150
 35934  01C590  0EF1               	movlw	-15
 35935  01C592  2AE3               	incf	plusw1,f,c
 35936  01C594  E30B               	bnc	u8150
 35937  01C596  0EF2               	movlw	-14
 35938  01C598  2AE3               	incf	plusw1,f,c
 35939  01C59A  E308               	bnc	u8150
 35940  01C59C  0EF3               	movlw	-13
 35941  01C59E  2AE3               	incf	plusw1,f,c
 35942  01C5A0  E305               	bnc	u8150
 35943  01C5A2  0EF4               	movlw	-12
 35944  01C5A4  2AE3               	incf	plusw1,f,c
 35945  01C5A6  E302               	bnc	u8150
 35946  01C5A8  0EF5               	movlw	-11
 35947  01C5AA  2AE3               	incf	plusw1,f,c
 35948  01C5AC                     u8150:
 35949                           
 35950                           ;stkvar	_sign @ sp[(-10)+8]
 35951  01C5AC  0EFE               	movlw	-2
 35952  01C5AE  70E3               	btg	plusw1,0,c
 35953  01C5B0                     l10266:
 35954                           
 35955                           ;stkvar	_quotient @ sp[(-10)+0]
 35956  01C5B0  0E07               	movlw	7
 35957  01C5B2  6E2A               	movwf	btemp^0,c
 35958  01C5B4  0EF6               	movlw	-10
 35959  01C5B6                     u8161:
 35960  01C5B6  6AE3               	clrf	plusw1,c
 35961  01C5B8  2AE8               	incf	wreg,f,c
 35962  01C5BA  062A               	decf	btemp^0,f,c
 35963  01C5BC  E2FC               	bc	u8161
 35964                           
 35965                           ;stkvar	_divisor @ sp[(-10)+-16]
 35966  01C5BE  0EE6               	movlw	-26
 35967  01C5C0  50E3               	movf	plusw1,w,c
 35968  01C5C2  E116               	bnz	u8170
 35969  01C5C4  0EE7               	movlw	-25
 35970  01C5C6  50E3               	movf	plusw1,w,c
 35971  01C5C8  E113               	bnz	u8170
 35972  01C5CA  0EE8               	movlw	-24
 35973  01C5CC  50E3               	movf	plusw1,w,c
 35974  01C5CE  E110               	bnz	u8170
 35975  01C5D0  0EE9               	movlw	-23
 35976  01C5D2  50E3               	movf	plusw1,w,c
 35977  01C5D4  E10D               	bnz	u8170
 35978  01C5D6  0EEA               	movlw	-22
 35979  01C5D8  50E3               	movf	plusw1,w,c
 35980  01C5DA  E10A               	bnz	u8170
 35981  01C5DC  0EEB               	movlw	-21
 35982  01C5DE  50E3               	movf	plusw1,w,c
 35983  01C5E0  E107               	bnz	u8170
 35984  01C5E2  0EEC               	movlw	-20
 35985  01C5E4  50E3               	movf	plusw1,w,c
 35986  01C5E6  E104               	bnz	u8170
 35987  01C5E8  0EED               	movlw	-19
 35988  01C5EA  50E3               	movf	plusw1,w,c
 35989  01C5EC  B4D8               	btfsc	status,2,c
 35990  01C5EE  D088               	goto	u8200
 35991  01C5F0                     u8170:
 35992                           
 35993                           ;stkvar	_counter @ sp[(-10)+9]
 35994  01C5F0  0EFF               	movlw	-1
 35995  01C5F2  6AE3               	clrf	plusw1,c
 35996  01C5F4  D012               	goto	L41
 35997  01C5F6                     l10272:
 35998                           
 35999                           ;stkvar	_divisor @ sp[(-10)+-16]
 36000  01C5F6  90D8               	bcf	status,0,c
 36001  01C5F8  0EE6               	movlw	-26
 36002  01C5FA  36E3               	rlcf	plusw1,f,c
 36003  01C5FC  0EE7               	movlw	-25
 36004  01C5FE  36E3               	rlcf	plusw1,f,c
 36005  01C600  0EE8               	movlw	-24
 36006  01C602  36E3               	rlcf	plusw1,f,c
 36007  01C604  0EE9               	movlw	-23
 36008  01C606  36E3               	rlcf	plusw1,f,c
 36009  01C608  0EEA               	movlw	-22
 36010  01C60A  36E3               	rlcf	plusw1,f,c
 36011  01C60C  0EEB               	movlw	-21
 36012  01C60E  36E3               	rlcf	plusw1,f,c
 36013  01C610  0EEC               	movlw	-20
 36014  01C612  36E3               	rlcf	plusw1,f,c
 36015  01C614  0EED               	movlw	-19
 36016  01C616  36E3               	rlcf	plusw1,f,c
 36017                           
 36018                           ;stkvar	_counter @ sp[(-10)+9]
 36019  01C618  0EFF               	movlw	-1
 36020  01C61A                     L41:
 36021  01C61A  2AE3               	incf	plusw1,f,c
 36022                           
 36023                           ;stkvar	_divisor @ sp[(-10)+-16]
 36024  01C61C  0EED               	movlw	-19
 36025  01C61E  AEE3               	btfss	plusw1,7,c
 36026  01C620  D7EA               	goto	l10272
 36027  01C622                     u8180:
 36028                           
 36029                           ;stkvar	_quotient @ sp[(-10)+0]
 36030  01C622  90D8               	bcf	status,0,c
 36031  01C624  0EF6               	movlw	-10
 36032  01C626  36E3               	rlcf	plusw1,f,c
 36033  01C628  0EF7               	movlw	-9
 36034  01C62A  36E3               	rlcf	plusw1,f,c
 36035  01C62C  0EF8               	movlw	-8
 36036  01C62E  36E3               	rlcf	plusw1,f,c
 36037  01C630  0EF9               	movlw	-7
 36038  01C632  36E3               	rlcf	plusw1,f,c
 36039  01C634  0EFA               	movlw	-6
 36040  01C636  36E3               	rlcf	plusw1,f,c
 36041  01C638  0EFB               	movlw	-5
 36042  01C63A  36E3               	rlcf	plusw1,f,c
 36043  01C63C  0EFC               	movlw	-4
 36044  01C63E  36E3               	rlcf	plusw1,f,c
 36045  01C640  0EFD               	movlw	-3
 36046  01C642  36E3               	rlcf	plusw1,f,c
 36047                           
 36048                           ;stkvar	_divisor @ sp[(-10)+-16]
 36049                           ;stkvar	_dividend @ sp[(-10)+-8]
 36050  01C644  50E1               	movf	fsr1l,w,c
 36051  01C646  0FEE               	addlw	-18
 36052  01C648  6ED9               	movwf	fsr2l,c
 36053  01C64A  50E2               	movf	fsr1h,w,c
 36054  01C64C  6EDA               	movwf	fsr2h,c
 36055  01C64E  0EFF               	movlw	255
 36056  01C650  22DA               	addwfc	fsr2h,f,c
 36057  01C652  0EE6               	movlw	-26
 36058  01C654  50E3               	movf	plusw1,w,c
 36059  01C656  5CDE               	subwf	postinc2,w,c
 36060  01C658  0EE7               	movlw	-25
 36061  01C65A  50E3               	movf	plusw1,w,c
 36062  01C65C  58DE               	subwfb	postinc2,w,c
 36063  01C65E  0EE8               	movlw	-24
 36064  01C660  50E3               	movf	plusw1,w,c
 36065  01C662  58DE               	subwfb	postinc2,w,c
 36066  01C664  0EE9               	movlw	-23
 36067  01C666  50E3               	movf	plusw1,w,c
 36068  01C668  58DE               	subwfb	postinc2,w,c
 36069  01C66A  0EEA               	movlw	-22
 36070  01C66C  50E3               	movf	plusw1,w,c
 36071  01C66E  58DE               	subwfb	postinc2,w,c
 36072  01C670  0EEB               	movlw	-21
 36073  01C672  50E3               	movf	plusw1,w,c
 36074  01C674  58DE               	subwfb	postinc2,w,c
 36075  01C676  0EEC               	movlw	-20
 36076  01C678  50E3               	movf	plusw1,w,c
 36077  01C67A  58DE               	subwfb	postinc2,w,c
 36078  01C67C  0EED               	movlw	-19
 36079  01C67E  50E3               	movf	plusw1,w,c
 36080  01C680  58DE               	subwfb	postinc2,w,c
 36081  01C682  A0D8               	btfss	status,0,c
 36082  01C684  D021               	goto	l10284
 36083                           
 36084                           ;stkvar	_divisor @ sp[(-10)+-16]
 36085                           ;stkvar	_dividend @ sp[(-10)+-8]
 36086  01C686  50E1               	movf	fsr1l,w,c
 36087  01C688  0FEE               	addlw	-18
 36088  01C68A  6ED9               	movwf	fsr2l,c
 36089  01C68C  50E2               	movf	fsr1h,w,c
 36090  01C68E  6EDA               	movwf	fsr2h,c
 36091  01C690  0EFF               	movlw	255
 36092  01C692  22DA               	addwfc	fsr2h,f,c
 36093  01C694  0EE6               	movlw	-26
 36094  01C696  50E3               	movf	plusw1,w,c
 36095  01C698  5EDE               	subwf	postinc2,f,c
 36096  01C69A  0EE7               	movlw	-25
 36097  01C69C  50E3               	movf	plusw1,w,c
 36098  01C69E  5ADE               	subwfb	postinc2,f,c
 36099  01C6A0  0EE8               	movlw	-24
 36100  01C6A2  50E3               	movf	plusw1,w,c
 36101  01C6A4  5ADE               	subwfb	postinc2,f,c
 36102  01C6A6  0EE9               	movlw	-23
 36103  01C6A8  50E3               	movf	plusw1,w,c
 36104  01C6AA  5ADE               	subwfb	postinc2,f,c
 36105  01C6AC  0EEA               	movlw	-22
 36106  01C6AE  50E3               	movf	plusw1,w,c
 36107  01C6B0  5ADE               	subwfb	postinc2,f,c
 36108  01C6B2  0EEB               	movlw	-21
 36109  01C6B4  50E3               	movf	plusw1,w,c
 36110  01C6B6  5ADE               	subwfb	postinc2,f,c
 36111  01C6B8  0EEC               	movlw	-20
 36112  01C6BA  50E3               	movf	plusw1,w,c
 36113  01C6BC  5ADE               	subwfb	postinc2,f,c
 36114  01C6BE  0EED               	movlw	-19
 36115  01C6C0  50E3               	movf	plusw1,w,c
 36116  01C6C2  5ADE               	subwfb	postinc2,f,c
 36117                           
 36118                           ;stkvar	_quotient @ sp[(-10)+0]
 36119  01C6C4  0EF6               	movlw	-10
 36120  01C6C6  80E3               	bsf	plusw1,0,c
 36121  01C6C8                     l10284:
 36122                           
 36123                           ;stkvar	_divisor @ sp[(-10)+-16]
 36124  01C6C8  90D8               	bcf	status,0,c
 36125  01C6CA  0EED               	movlw	-19
 36126  01C6CC  32E3               	rrcf	plusw1,f,c
 36127  01C6CE  0EEC               	movlw	-20
 36128  01C6D0  32E3               	rrcf	plusw1,f,c
 36129  01C6D2  0EEB               	movlw	-21
 36130  01C6D4  32E3               	rrcf	plusw1,f,c
 36131  01C6D6  0EEA               	movlw	-22
 36132  01C6D8  32E3               	rrcf	plusw1,f,c
 36133  01C6DA  0EE9               	movlw	-23
 36134  01C6DC  32E3               	rrcf	plusw1,f,c
 36135  01C6DE  0EE8               	movlw	-24
 36136  01C6E0  32E3               	rrcf	plusw1,f,c
 36137  01C6E2  0EE7               	movlw	-25
 36138  01C6E4  32E3               	rrcf	plusw1,f,c
 36139  01C6E6  0EE6               	movlw	-26
 36140  01C6E8  32E3               	rrcf	plusw1,f,c
 36141                           
 36142                           ;stkvar	_counter @ sp[(-10)+9]
 36143  01C6EA  0EFF               	movlw	-1
 36144  01C6EC  50E3               	movf	plusw1,w,c
 36145  01C6EE  6E2A               	movwf	btemp^0,c
 36146  01C6F0  0E01               	movlw	1
 36147  01C6F2  5E2A               	subwf	btemp^0,f,c
 36148  01C6F4  0EFF               	movlw	-1
 36149  01C6F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 36150  01C6FC  A4D8               	btfss	status,2,c
 36151  01C6FE  D791               	goto	u8180
 36152  01C700                     u8200:
 36153                           
 36154                           ;stkvar	_sign @ sp[(-10)+8]
 36155  01C700  0EFE               	movlw	-2
 36156  01C702  50E3               	movf	plusw1,w,c
 36157  01C704  B4D8               	btfsc	status,2,c
 36158  01C706  D025               	goto	u8220
 36159                           
 36160                           ;stkvar	_quotient @ sp[(-10)+0]
 36161                           ;stkvar	_quotient @ sp[(-10)+0]
 36162  01C708  0EF6               	movlw	-10
 36163  01C70A  6CE3               	negf	plusw1,c
 36164  01C70C  0EF7               	movlw	-9
 36165  01C70E  1EE3               	comf	plusw1,f,c
 36166  01C710  0EF8               	movlw	-8
 36167  01C712  1EE3               	comf	plusw1,f,c
 36168  01C714  0EF9               	movlw	-7
 36169  01C716  1EE3               	comf	plusw1,f,c
 36170  01C718  0EFA               	movlw	-6
 36171  01C71A  1EE3               	comf	plusw1,f,c
 36172  01C71C  0EFB               	movlw	-5
 36173  01C71E  1EE3               	comf	plusw1,f,c
 36174  01C720  0EFC               	movlw	-4
 36175  01C722  1EE3               	comf	plusw1,f,c
 36176  01C724  0EFD               	movlw	-3
 36177  01C726  1EE3               	comf	plusw1,f,c
 36178  01C728  E314               	bnc	u8220
 36179  01C72A  0EF7               	movlw	-9
 36180  01C72C  2AE3               	incf	plusw1,f,c
 36181  01C72E  E311               	bnc	u8220
 36182  01C730  0EF8               	movlw	-8
 36183  01C732  2AE3               	incf	plusw1,f,c
 36184  01C734  E30E               	bnc	u8220
 36185  01C736  0EF9               	movlw	-7
 36186  01C738  2AE3               	incf	plusw1,f,c
 36187  01C73A  E30B               	bnc	u8220
 36188  01C73C  0EFA               	movlw	-6
 36189  01C73E  2AE3               	incf	plusw1,f,c
 36190  01C740  E308               	bnc	u8220
 36191  01C742  0EFB               	movlw	-5
 36192  01C744  2AE3               	incf	plusw1,f,c
 36193  01C746  E305               	bnc	u8220
 36194  01C748  0EFC               	movlw	-4
 36195  01C74A  2AE3               	incf	plusw1,f,c
 36196  01C74C  E302               	bnc	u8220
 36197  01C74E  0EFD               	movlw	-3
 36198  01C750  2AE3               	incf	plusw1,f,c
 36199  01C752                     u8220:
 36200                           
 36201                           ;stkvar	_quotient @ sp[(-10)+0]
 36202  01C752  0EF6               	movlw	246
 36203  01C754  24E1               	addwf	fsr1l,w,c
 36204  01C756  6ED9               	movwf	fsr2l,c
 36205  01C758  0EFF               	movlw	255
 36206  01C75A  20E2               	addwfc	fsr1h,w,c
 36207  01C75C  6EDA               	movwf	fsr2h,c
 36208                           
 36209                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 36210  01C75E  0E08               	movlw	8
 36211  01C760  6E2A               	movwf	btemp^0,c
 36212  01C762  0EEE               	movlw	-18
 36213  01C764                     us823999:
 36214  01C764  006F FF7B FFE3     	movff	postinc2,plusw1
 36215  01C76A  28E8               	incf	wreg,w,c
 36216  01C76C  2E2A               	decfsz	btemp^0,f,c
 36217  01C76E  D7FA               	bra	us823999
 36218                           
 36219                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 36220  01C770  0EF6               	movlw	246
 36221  01C772  26E1               	addwf	fsr1l,f,c
 36222  01C774  0EFF               	movlw	255
 36223  01C776  22E2               	addwfc	fsr1h,f,c
 36224  01C778  0012               	return		;funcret
 36225  01C77A                     __end_of___aodiv:
 36226                           	opt callstack 0
 36227                           
 36228 ;; *************** function _ctoa *****************
 36229 ;; Defined at:
 36230 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36231 ;; Parameters:    Size  Location     Type
 36232 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36233 ;;		 -> f(6), NULL(0), 
 36234 ;;  c               1  [STACK] unsigned char 
 36235 ;; Auto vars:     Size  Location     Type
 36236 ;;  w               2  [STACK] int 
 36237 ;;  l               2    0        int 
 36238 ;; Return value:  Size  Location     Type
 36239 ;;                  2  [STACK] int 
 36240 ;; Registers used:
 36241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36242 ;; Tracked objects:
 36243 ;;		On entry : 0/0
 36244 ;;		On exit  : 0/0
 36245 ;;		Unchanged: 0/0
 36246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36251 ;;Total ram usage:        0 bytes
 36252 ;; Hardware stack levels used:    1
 36253 ;; Hardware stack levels required when called:   20
 36254 ;; This function calls:
 36255 ;;		_pad
 36256 ;; This function is called by:
 36257 ;;		_vfpfcnvrt
 36258 ;; This function uses a reentrant model
 36259 ;;
 36260                           
 36261                           	psect	text118
 36262  001374                     __ptext118:
 36263                           	opt callstack 0
 36264  001374                     _ctoa:
 36265                           	opt callstack 0
 36266                           
 36267                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36268  001374  52E6               	movf	postinc1,f,c
 36269  001376  52E6               	movf	postinc1,f,c
 36270                           
 36271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 36272                           
 36273                           ;incstack = 0
 36274 ;; hardware stack exceeded
 36275  001378  504A               	movf	_width^0,w,c
 36276  00137A  104B               	iorwf	(_width+1)^0,w,c
 36277  00137C  A4D8               	btfss	status,2,c
 36278  00137E  D009               	goto	l15506
 36279                           
 36280                           ;stkvar	_w @ sp[(-2)+0]
 36281  001380  0EFE               	movlw	-2
 36282  001382  0060  F12B  FFE3   	movff	_width,plusw1
 36283  001388  0EFF               	movlw	-1
 36284  00138A  0060  F12F  FFE3   	movff	_width+1,plusw1
 36285  001390  D016               	goto	l15508
 36286  001392                     l15506:
 36287  001392  0EFF               	movlw	255
 36288  001394  6E34               	movwf	(btemp+10)^0,c
 36289  001396  0EFF               	movlw	255
 36290  001398  6E35               	movwf	(btemp+11)^0,c
 36291  00139A  0060  F128  F032   	movff	_width,btemp+8
 36292  0013A0  0060  F12C  F033   	movff	_width+1,btemp+9
 36293  0013A6  5034               	movf	(btemp+10)^0,w,c
 36294  0013A8  2632               	addwf	(btemp+8)^0,f,c
 36295  0013AA  5035               	movf	(btemp+11)^0,w,c
 36296  0013AC  2233               	addwfc	(btemp+9)^0,f,c
 36297                           
 36298                           ;stkvar	_w @ sp[(-2)+0]
 36299  0013AE  0EFE               	movlw	-2
 36300  0013B0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36301  0013B6  0EFF               	movlw	-1
 36302  0013B8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36303  0013BE                     l15508:
 36304                           
 36305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 36306                           ;stkvar	_c @ sp[(-2)+-3]
 36307  0013BE  0EFB               	movlw	-5
 36308  0013C0  006F FF8C  F354    	movff	plusw1,_dbuf
 36309                           
 36310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 36311  0013C6  0103               	movlb	3	; () banked
 36312  0013C8  6B55               	clrf	(_dbuf+1)& (0+255),b
 36313                           
 36314                           ; BSR set to: 3
 36315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 36316                           ;stkvar	_w @ sp[(-2)+0]
 36317  0013CA  0EFE               	movlw	-2
 36318  0013CC  006F FF8F FFE6     	movff	plusw1,postinc1
 36319  0013D2  006F FF8F FFE6     	movff	plusw1,postinc1
 36320  0013D8  0E54               	movlw	low _dbuf
 36321  0013DA  6EE6               	movwf	postinc1,c
 36322  0013DC  0E03               	movlw	high _dbuf
 36323  0013DE  6EE6               	movwf	postinc1,c
 36324                           
 36325                           ;stkvar	_fp @ sp[(-6)+-2]
 36326  0013E0  0EF8               	movlw	-8
 36327  0013E2  006F FF8F FFE6     	movff	plusw1,postinc1
 36328  0013E8  006F FF8F FFE6     	movff	plusw1,postinc1
 36329  0013EE  EC5B  F0FE         	call	_pad	;wreg free
 36330                           
 36331                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 36332  0013F2  0EFB               	movlw	251
 36333  0013F4  26E1               	addwf	fsr1l,f,c
 36334  0013F6  0EFF               	movlw	255
 36335  0013F8  22E2               	addwfc	fsr1h,f,c
 36336  0013FA  0012               	return		;funcret
 36337  0013FC                     __end_of_ctoa:
 36338                           	opt callstack 0
 36339                           
 36340 ;; *************** function _pad *****************
 36341 ;; Defined at:
 36342 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36343 ;; Parameters:    Size  Location     Type
 36344 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36345 ;;		 -> f(6), NULL(0), 
 36346 ;;  buf             2  [STACK] PTR unsigned char 
 36347 ;;		 -> dbuf(80), 
 36348 ;;  p               2  [STACK] int 
 36349 ;; Auto vars:     Size  Location     Type
 36350 ;;  w               2  [STACK] int 
 36351 ;;  i               2  [STACK] int 
 36352 ;; Return value:  Size  Location     Type
 36353 ;;                  2  [STACK] int 
 36354 ;; Registers used:
 36355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36356 ;; Tracked objects:
 36357 ;;		On entry : 0/3
 36358 ;;		On exit  : 0/0
 36359 ;;		Unchanged: 0/0
 36360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36365 ;;Total ram usage:        0 bytes
 36366 ;; Hardware stack levels used:    1
 36367 ;; Hardware stack levels required when called:   19
 36368 ;; This function calls:
 36369 ;;		_fputc
 36370 ;;		_fputs
 36371 ;;		_strlen
 36372 ;; This function is called by:
 36373 ;;		_ctoa
 36374 ;;		_dtoa
 36375 ;;		_efgtoa
 36376 ;;		_utoa
 36377 ;;		_xtoa
 36378 ;; This function uses a reentrant model
 36379 ;;
 36380                           
 36381                           	psect	text119
 36382  01FCB6                     __ptext119:
 36383                           	opt callstack 0
 36384  01FCB6                     _pad:
 36385                           	opt callstack 0
 36386                           
 36387                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36388  01FCB6  52E6               	movf	postinc1,f,c
 36389  01FCB8  52E6               	movf	postinc1,f,c
 36390  01FCBA  52E6               	movf	postinc1,f,c
 36391  01FCBC  52E6               	movf	postinc1,f,c
 36392                           
 36393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 36394                           
 36395                           ;incstack = 0
 36396 ;; hardware stack exceeded
 36397  01FCBE  A04E               	btfss	_flags^0,0,c
 36398  01FCC0  D010               	goto	l15474
 36399                           
 36400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 36401                           ;stkvar	_fp @ sp[(-4)+-2]
 36402  01FCC2  0EFA               	movlw	-6
 36403  01FCC4  006F FF8F FFE6     	movff	plusw1,postinc1
 36404  01FCCA  006F FF8F FFE6     	movff	plusw1,postinc1
 36405                           
 36406                           ;stkvar	_buf @ sp[(-6)+-4]
 36407  01FCD0  0EF6               	movlw	-10
 36408  01FCD2  006F FF8F FFE6     	movff	plusw1,postinc1
 36409  01FCD8  006F FF8F FFE6     	movff	plusw1,postinc1
 36410  01FCDE  EC01  F008         	call	_fputs	;wreg free
 36411  01FCE2                     l15474:
 36412                           
 36413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 36414                           ;stkvar	_p @ sp[(-4)+-6]
 36415  01FCE2  0EF7               	movlw	-9
 36416  01FCE4  BEE3               	btfsc	plusw1,7,c
 36417  01FCE6  D011               	goto	l15478
 36418                           
 36419                           ;stkvar	_p @ sp[(-4)+-6]
 36420                           ;stkvar	_w @ sp[(-4)+0]
 36421  01FCE8  0EF6               	movlw	-10
 36422  01FCEA  006F FF8C  F02A    	movff	plusw1,btemp
 36423  01FCF0  0EFC               	movlw	-4
 36424  01FCF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 36425  01FCF8  0EF7               	movlw	-9
 36426  01FCFA  006F FF8C  F02A    	movff	plusw1,btemp
 36427  01FD00  0EFD               	movlw	-3
 36428  01FD02  0060  F0AB  FFE3   	movff	btemp,plusw1
 36429  01FD08  D004               	goto	l2475
 36430  01FD0A                     l15478:
 36431                           
 36432                           ;stkvar	_w @ sp[(-4)+0]
 36433  01FD0A  0EFC               	movlw	-4
 36434  01FD0C  6AE3               	clrf	plusw1,c
 36435  01FD0E  0EFD               	movlw	-3
 36436  01FD10  6AE3               	clrf	plusw1,c
 36437  01FD12                     l2475:
 36438                           
 36439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 36440                           ;stkvar	_i @ sp[(-4)+2]
 36441  01FD12  0EFE               	movlw	-2
 36442  01FD14  6AE3               	clrf	plusw1,c
 36443  01FD16  0EFF               	movlw	-1
 36444  01FD18  6AE3               	clrf	plusw1,c
 36445                           
 36446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36447  01FD1A  D01E               	goto	l15484
 36448  01FD1C                     l15480:
 36449                           
 36450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 36451                           ;stkvar	_fp @ sp[(-4)+-2]
 36452  01FD1C  0EFA               	movlw	-6
 36453  01FD1E  006F FF8F FFE6     	movff	plusw1,postinc1
 36454  01FD24  006F FF8F FFE6     	movff	plusw1,postinc1
 36455  01FD2A  0E20               	movlw	32
 36456  01FD2C  6EE6               	movwf	postinc1,c
 36457  01FD2E  0E00               	movlw	0
 36458  01FD30  6EE6               	movwf	postinc1,c
 36459  01FD32  EC24  F0FC         	call	_fputc	;wreg free
 36460                           
 36461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 36462                           ;stkvar	_i @ sp[(-4)+2]
 36463  01FD36  0EFE               	movlw	-2
 36464  01FD38  50E3               	movf	plusw1,w,c
 36465  01FD3A  0F01               	addlw	1
 36466  01FD3C  6E2A               	movwf	btemp^0,c
 36467  01FD3E  0EFE               	movlw	-2
 36468  01FD40  0060  F0AB  FFE3   	movff	btemp,plusw1
 36469  01FD46  6A2A               	clrf	btemp^0,c
 36470  01FD48  0EFF               	movlw	-1
 36471  01FD4A  50E3               	movf	plusw1,w,c
 36472  01FD4C  202A               	addwfc	btemp^0,w,c
 36473  01FD4E  6E2A               	movwf	btemp^0,c
 36474  01FD50  0EFF               	movlw	-1
 36475  01FD52  0060  F0AB  FFE3   	movff	btemp,plusw1
 36476  01FD58                     l15484:
 36477                           
 36478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36479                           ;stkvar	_w @ sp[(-4)+0]
 36480                           ;stkvar	_i @ sp[(-4)+2]
 36481  01FD58  50E1               	movf	fsr1l,w,c
 36482  01FD5A  0FFE               	addlw	-2
 36483  01FD5C  6ED9               	movwf	fsr2l,c
 36484  01FD5E  50E2               	movf	fsr1h,w,c
 36485  01FD60  6EDA               	movwf	fsr2h,c
 36486  01FD62  0EFF               	movlw	255
 36487  01FD64  22DA               	addwfc	fsr2h,f,c
 36488  01FD66  0EFC               	movlw	-4
 36489  01FD68  50E3               	movf	plusw1,w,c
 36490  01FD6A  5CDE               	subwf	postinc2,w,c
 36491  01FD6C  50DE               	movf	postinc2,w,c
 36492  01FD6E  0A80               	xorlw	128
 36493  01FD70  6E2A               	movwf	btemp^0,c
 36494  01FD72  0EFD               	movlw	-3
 36495  01FD74  50E3               	movf	plusw1,w,c
 36496  01FD76  0A80               	xorlw	128
 36497  01FD78  582A               	subwfb	btemp^0,w,c
 36498  01FD7A  A0D8               	btfss	status,0,c
 36499  01FD7C  D7CF               	goto	l15480
 36500                           
 36501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 36502  01FD7E  B04E               	btfsc	_flags^0,0,c
 36503  01FD80  D010               	goto	l15488
 36504                           
 36505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 36506                           ;stkvar	_fp @ sp[(-4)+-2]
 36507  01FD82  0EFA               	movlw	-6
 36508  01FD84  006F FF8F FFE6     	movff	plusw1,postinc1
 36509  01FD8A  006F FF8F FFE6     	movff	plusw1,postinc1
 36510                           
 36511                           ;stkvar	_buf @ sp[(-6)+-4]
 36512  01FD90  0EF6               	movlw	-10
 36513  01FD92  006F FF8F FFE6     	movff	plusw1,postinc1
 36514  01FD98  006F FF8F FFE6     	movff	plusw1,postinc1
 36515  01FD9E  EC01  F008         	call	_fputs	;wreg free
 36516  01FDA2                     l15488:
 36517                           
 36518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 36519                           ;stkvar	_w @ sp[(-4)+0]
 36520                           ;stkvar	_buf @ sp[(-4)+-4]
 36521  01FDA2  0EF8               	movlw	-8
 36522  01FDA4  006F FF8F FFE6     	movff	plusw1,postinc1
 36523  01FDAA  006F FF8F FFE6     	movff	plusw1,postinc1
 36524  01FDB0  EC63  F007         	call	_strlen	;wreg free
 36525  01FDB4  0EFC               	movlw	-4
 36526  01FDB6  50E3               	movf	plusw1,w,c
 36527  01FDB8  262A               	addwf	btemp^0,f,c
 36528  01FDBA  0EFD               	movlw	-3
 36529  01FDBC  50E3               	movf	plusw1,w,c
 36530  01FDBE  222B               	addwfc	(btemp+1)^0,f,c
 36531                           
 36532                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 36533  01FDC0  0EF6               	movlw	246
 36534  01FDC2  26E1               	addwf	fsr1l,f,c
 36535  01FDC4  0EFF               	movlw	255
 36536  01FDC6  22E2               	addwfc	fsr1h,f,c
 36537  01FDC8  0012               	return		;funcret
 36538  01FDCA                     __end_of_pad:
 36539                           	opt callstack 0
 36540                           
 36541 ;; *************** function _strlen *****************
 36542 ;; Defined at:
 36543 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 36544 ;; Parameters:    Size  Location     Type
 36545 ;;  s               2  [STACK] PTR const unsigned char 
 36546 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36547 ;;		 -> dbuf(80), spin(120), STR_76(9), STR_75(12), 
 36548 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36549 ;;		 -> STR_3(5), V(181), 
 36550 ;; Auto vars:     Size  Location     Type
 36551 ;;  a               2  [STACK] PTR const unsigned char 
 36552 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36553 ;;		 -> dbuf(80), spin(120), STR_76(9), STR_75(12), 
 36554 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36555 ;;		 -> STR_3(5), V(181), 
 36556 ;; Return value:  Size  Location     Type
 36557 ;;                  2  [STACK] unsigned int 
 36558 ;; Registers used:
 36559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 36560 ;; Tracked objects:
 36561 ;;		On entry : 0/0
 36562 ;;		On exit  : 0/0
 36563 ;;		Unchanged: 0/0
 36564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36569 ;;Total ram usage:        0 bytes
 36570 ;; Hardware stack levels used:    1
 36571 ;; Hardware stack levels required when called:   15
 36572 ;; This function calls:
 36573 ;;		Nothing
 36574 ;; This function is called by:
 36575 ;;		_eaDogM_WriteString
 36576 ;;		_spinners
 36577 ;;		_calc_bsoc
 36578 ;;		_pad
 36579 ;;		_stoa
 36580 ;; This function uses a reentrant model
 36581 ;;
 36582                           
 36583                           	psect	text120
 36584  000EC6                     __ptext120:
 36585                           	opt callstack 0
 36586  000EC6                     _strlen:
 36587                           	opt callstack 0
 36588                           
 36589                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36590  000EC6  52E6               	movf	postinc1,f,c
 36591  000EC8  52E6               	movf	postinc1,f,c
 36592                           
 36593                           ;stkvar	_s @ sp[(-2)+-2]
 36594                           
 36595                           ;incstack = 0
 36596 ;; hardware stack exceeded
 36597  000ECA  0EFC               	movlw	-4
 36598  000ECC  006F FF8C  F034    	movff	plusw1,btemp+10
 36599  000ED2  0EFD               	movlw	-3
 36600  000ED4  006F FF8C  F035    	movff	plusw1,btemp+11
 36601                           
 36602                           ;stkvar	_a @ sp[(-2)+0]
 36603  000EDA  0EFF               	movlw	-1
 36604  000EDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36605  000EE2  0EFE               	movlw	-2
 36606  000EE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36607  000EEA  D011               	goto	l9798
 36608  000EEC                     l9796:
 36609                           
 36610                           ;stkvar	_s @ sp[(-2)+-2]
 36611  000EEC  0EFC               	movlw	-4
 36612  000EEE  50E3               	movf	plusw1,w,c
 36613  000EF0  0F01               	addlw	1
 36614  000EF2  6E2A               	movwf	btemp^0,c
 36615  000EF4  0EFC               	movlw	-4
 36616  000EF6  0060  F0AB  FFE3   	movff	btemp,plusw1
 36617  000EFC  6A2A               	clrf	btemp^0,c
 36618  000EFE  0EFD               	movlw	-3
 36619  000F00  50E3               	movf	plusw1,w,c
 36620  000F02  202A               	addwfc	btemp^0,w,c
 36621  000F04  6E2A               	movwf	btemp^0,c
 36622  000F06  0EFD               	movlw	-3
 36623  000F08  0060  F0AB  FFE3   	movff	btemp,plusw1
 36624  000F0E                     l9798:
 36625                           
 36626                           ;stkvar	_s @ sp[(-2)+-2]
 36627  000F0E  0EFC               	movlw	-4
 36628  000F10  006F FF8F FFF6     	movff	plusw1,tblptrl
 36629  000F16  0EFD               	movlw	-3
 36630  000F18  006F FF8F FFF7     	movff	plusw1,tblptrh
 36631  000F1E  0E00               	movlw	low (__mediumconst shr (0+16))
 36632  000F20  6EF8               	movwf	tblptru,c
 36633  000F22  0E1F               	movlw	(high __ramtop+-1)
 36634  000F24  64F7               	cpfsgt	tblptrh,c
 36635  000F26  D003               	bra	u7177
 36636  000F28  0008               	tblrd		*
 36637  000F2A  50F5               	movf	tablat,w,c
 36638  000F2C  D007               	bra	u7170
 36639  000F2E                     u7177:
 36640  000F2E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 36641  000F34  006F FFDF FFEA     	movff	tblptrh,fsr0h
 36642  000F3A  50EF               	movf	indf0,w,c
 36643  000F3C                     u7170:
 36644  000F3C  0900               	iorlw	0
 36645  000F3E  A4D8               	btfss	status,2,c
 36646  000F40  D7D5               	goto	l9796
 36647                           
 36648                           ;stkvar	_a @ sp[(-2)+0]
 36649                           ;stkvar	_s @ sp[(-2)+-2]
 36650  000F42  0EFC               	movlw	-4
 36651  000F44  006F FF8C  F02A    	movff	plusw1,btemp
 36652  000F4A  0EFD               	movlw	-3
 36653  000F4C  006F FF8C  F02B    	movff	plusw1,btemp+1
 36654  000F52  0EFE               	movlw	-2
 36655  000F54  50E3               	movf	plusw1,w,c
 36656  000F56  5E2A               	subwf	btemp^0,f,c
 36657  000F58  0EFF               	movlw	-1
 36658  000F5A  50E3               	movf	plusw1,w,c
 36659  000F5C  5A2B               	subwfb	(btemp+1)^0,f,c
 36660                           
 36661                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 36662  000F5E  52E5               	movf	postdec1,f,c
 36663  000F60  52E5               	movf	postdec1,f,c
 36664  000F62  52E5               	movf	postdec1,f,c
 36665  000F64  52E5               	movf	postdec1,f,c
 36666  000F66  0012               	return		;funcret
 36667  000F68                     __end_of_strlen:
 36668                           	opt callstack 0
 36669                           
 36670 ;; *************** function _fputs *****************
 36671 ;; Defined at:
 36672 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 36673 ;; Parameters:    Size  Location     Type
 36674 ;;  s               2  [STACK] PTR const unsigned char 
 36675 ;;		 -> dbuf(80), 
 36676 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36677 ;;		 -> f(6), NULL(0), 
 36678 ;; Auto vars:     Size  Location     Type
 36679 ;;  i               2  [STACK] int 
 36680 ;;  c               1  [STACK] unsigned char 
 36681 ;; Return value:  Size  Location     Type
 36682 ;;                  2  [STACK] int 
 36683 ;; Registers used:
 36684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36685 ;; Tracked objects:
 36686 ;;		On entry : 0/3
 36687 ;;		On exit  : 0/0
 36688 ;;		Unchanged: 0/0
 36689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36694 ;;Total ram usage:        0 bytes
 36695 ;; Hardware stack levels used:    1
 36696 ;; Hardware stack levels required when called:   18
 36697 ;; This function calls:
 36698 ;;		_fputc
 36699 ;; This function is called by:
 36700 ;;		_pad
 36701 ;; This function uses a reentrant model
 36702 ;;
 36703                           
 36704                           	psect	text121
 36705  001002                     __ptext121:
 36706                           	opt callstack 0
 36707  001002                     _fputs:
 36708                           	opt callstack 0
 36709                           
 36710                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36711  001002  52E6               	movf	postinc1,f,c
 36712  001004  52E6               	movf	postinc1,f,c
 36713  001006  52E6               	movf	postinc1,f,c
 36714                           
 36715                           ;stkvar	_i @ sp[(-3)+0]
 36716                           
 36717                           ;incstack = 0
 36718 ;; hardware stack exceeded
 36719  001008  0EFD               	movlw	-3
 36720  00100A  6AE3               	clrf	plusw1,c
 36721  00100C  0EFE               	movlw	-2
 36722  00100E  6AE3               	clrf	plusw1,c
 36723  001010  D01F               	goto	l15426
 36724  001012                     l15422:
 36725                           
 36726                           ;stkvar	_fp @ sp[(-3)+-4]
 36727  001012  0EF9               	movlw	-7
 36728  001014  006F FF8F FFE6     	movff	plusw1,postinc1
 36729  00101A  006F FF8F FFE6     	movff	plusw1,postinc1
 36730                           
 36731                           ;stkvar	_c @ sp[(-5)+2]
 36732  001020  0EFD               	movlw	-3
 36733  001022  50E3               	movf	plusw1,w,c
 36734  001024  6EE6               	movwf	postinc1,c
 36735  001026  0E00               	movlw	0
 36736  001028  6EE6               	movwf	postinc1,c
 36737  00102A  EC24  F0FC         	call	_fputc	;wreg free
 36738                           
 36739                           ;stkvar	_i @ sp[(-3)+0]
 36740  00102E  0EFD               	movlw	-3
 36741  001030  50E3               	movf	plusw1,w,c
 36742  001032  0F01               	addlw	1
 36743  001034  6E2A               	movwf	btemp^0,c
 36744  001036  0EFD               	movlw	-3
 36745  001038  0060  F0AB  FFE3   	movff	btemp,plusw1
 36746  00103E  6A2A               	clrf	btemp^0,c
 36747  001040  0EFE               	movlw	-2
 36748  001042  50E3               	movf	plusw1,w,c
 36749  001044  202A               	addwfc	btemp^0,w,c
 36750  001046  6E2A               	movwf	btemp^0,c
 36751  001048  0EFE               	movlw	-2
 36752  00104A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36753  001050                     l15426:
 36754                           
 36755                           ;stkvar	_i @ sp[(-3)+0]
 36756  001050  0EFD               	movlw	-3
 36757  001052  006F FF8C  F034    	movff	plusw1,btemp+10
 36758  001058  0EFE               	movlw	-2
 36759  00105A  006F FF8C  F035    	movff	plusw1,btemp+11
 36760                           
 36761                           ;stkvar	_s @ sp[(-3)+-2]
 36762  001060  0EFB               	movlw	-5
 36763  001062  006F FF8C  F032    	movff	plusw1,btemp+8
 36764  001068  0EFC               	movlw	-4
 36765  00106A  006F FF8C  F033    	movff	plusw1,btemp+9
 36766  001070  5034               	movf	(btemp+10)^0,w,c
 36767  001072  2432               	addwf	(btemp+8)^0,w,c
 36768  001074  6ED9               	movwf	fsr2l,c
 36769  001076  5035               	movf	(btemp+11)^0,w,c
 36770  001078  2033               	addwfc	(btemp+9)^0,w,c
 36771  00107A  6EDA               	movwf	fsr2h,c
 36772  00107C  50DF               	movf	indf2,w,c
 36773  00107E  6E35               	movwf	(btemp+11)^0,c
 36774                           
 36775                           ;stkvar	_c @ sp[(-3)+2]
 36776  001080  0EFF               	movlw	-1
 36777  001082  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36778  001088  0EFF               	movlw	-1
 36779  00108A  50E3               	movf	plusw1,w,c
 36780  00108C  A4D8               	btfss	status,2,c
 36781  00108E  D7C1               	goto	l15422
 36782                           
 36783                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36784  001090  0EF9               	movlw	249
 36785  001092  26E1               	addwf	fsr1l,f,c
 36786  001094  0EFF               	movlw	255
 36787  001096  22E2               	addwfc	fsr1h,f,c
 36788  001098  0012               	return		;funcret
 36789  00109A                     __end_of_fputs:
 36790                           	opt callstack 0
 36791                           
 36792 ;; *************** function _fputc *****************
 36793 ;; Defined at:
 36794 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 36795 ;; Parameters:    Size  Location     Type
 36796 ;;  c               2  [STACK] int 
 36797 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36798 ;;		 -> f(6), NULL(0), 
 36799 ;; Auto vars:     Size  Location     Type
 36800 ;;		None
 36801 ;; Return value:  Size  Location     Type
 36802 ;;                  2  [STACK] int 
 36803 ;; Registers used:
 36804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36805 ;; Tracked objects:
 36806 ;;		On entry : 0/0
 36807 ;;		On exit  : 0/0
 36808 ;;		Unchanged: 0/0
 36809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36814 ;;Total ram usage:        0 bytes
 36815 ;; Hardware stack levels used:    1
 36816 ;; Hardware stack levels required when called:   17
 36817 ;; This function calls:
 36818 ;;		_putch
 36819 ;; This function is called by:
 36820 ;;		_pad
 36821 ;;		_stoa
 36822 ;;		_vfpfcnvrt
 36823 ;;		_fputs
 36824 ;; This function uses a reentrant model
 36825 ;;
 36826                           
 36827                           	psect	text122
 36828  01F848                     __ptext122:
 36829                           	opt callstack 0
 36830  01F848                     _fputc:
 36831                           	opt callstack 0
 36832                           
 36833                           ;stkvar	_fp @ sp[(0)+-4]
 36834                           
 36835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36836                           ;incstack = 0
 36837 ;; hardware stack exceeded
 36838  01F848  0EFC               	movlw	-4
 36839  01F84A  006F FF8C  F02A    	movff	plusw1,btemp
 36840  01F850  0EFD               	movlw	-3
 36841  01F852  50E3               	movf	plusw1,w,c
 36842  01F854  102A               	iorwf	btemp^0,w,c
 36843  01F856  B4D8               	btfsc	status,2,c
 36844  01F858  D009               	goto	u14250
 36845                           
 36846                           ;stkvar	_fp @ sp[(0)+-4]
 36847  01F85A  0EFC               	movlw	-4
 36848  01F85C  006F FF8C  F02A    	movff	plusw1,btemp
 36849  01F862  0EFD               	movlw	-3
 36850  01F864  50E3               	movf	plusw1,w,c
 36851  01F866  102A               	iorwf	btemp^0,w,c
 36852  01F868  A4D8               	btfss	status,2,c
 36853  01F86A  D006               	goto	l15410
 36854  01F86C                     u14250:
 36855                           
 36856                           ;stkvar	_c @ sp[(0)+-2]
 36857  01F86C  0EFE               	movlw	-2
 36858  01F86E  50E3               	movf	plusw1,w,c
 36859  01F870  6EE6               	movwf	postinc1,c
 36860  01F872  ECB0  F015         	call	_putch	;wreg free
 36861  01F876  D075               	goto	l3551
 36862  01F878                     l15410:
 36863                           
 36864                           ;stkvar	_fp @ sp[(0)+-4]
 36865  01F878  0EFC               	movlw	-4
 36866  01F87A  006F FF8C  F034    	movff	plusw1,btemp+10
 36867  01F880  0EFD               	movlw	-3
 36868  01F882  006F FF8C  F035    	movff	plusw1,btemp+11
 36869  01F888  0E04               	movlw	4
 36870  01F88A  2434               	addwf	(btemp+10)^0,w,c
 36871  01F88C  6ED9               	movwf	fsr2l,c
 36872  01F88E  0E00               	movlw	0
 36873  01F890  2035               	addwfc	(btemp+11)^0,w,c
 36874  01F892  6EDA               	movwf	fsr2h,c
 36875  01F894  50DE               	movf	postinc2,w,c
 36876  01F896  10DE               	iorwf	postinc2,w,c
 36877  01F898  B4D8               	btfsc	status,2,c
 36878  01F89A  D026               	goto	u14270
 36879                           
 36880                           ;stkvar	_fp @ sp[(0)+-4]
 36881  01F89C  0EFC               	movlw	-4
 36882  01F89E  006F FF8C  F034    	movff	plusw1,btemp+10
 36883  01F8A4  0EFD               	movlw	-3
 36884  01F8A6  006F FF8C  F035    	movff	plusw1,btemp+11
 36885  01F8AC  0E04               	movlw	4
 36886  01F8AE  2434               	addwf	(btemp+10)^0,w,c
 36887  01F8B0  6ED9               	movwf	fsr2l,c
 36888  01F8B2  0E00               	movlw	0
 36889  01F8B4  2035               	addwfc	(btemp+11)^0,w,c
 36890  01F8B6  6EDA               	movwf	fsr2h,c
 36891                           
 36892                           ;stkvar	_fp @ sp[(0)+-4]
 36893  01F8B8  0EFC               	movlw	-4
 36894  01F8BA  006F FF8C  F034    	movff	plusw1,btemp+10
 36895  01F8C0  0EFD               	movlw	-3
 36896  01F8C2  006F FF8C  F035    	movff	plusw1,btemp+11
 36897  01F8C8  0E02               	movlw	2
 36898  01F8CA  2434               	addwf	(btemp+10)^0,w,c
 36899  01F8CC  6EE9               	movwf	fsr0l,c
 36900  01F8CE  0E00               	movlw	0
 36901  01F8D0  2035               	addwfc	(btemp+11)^0,w,c
 36902  01F8D2  6EEA               	movwf	fsr0h,c
 36903  01F8D4  50DE               	movf	postinc2,w,c
 36904  01F8D6  5CEE               	subwf	postinc0,w,c
 36905  01F8D8  50EE               	movf	postinc0,w,c
 36906  01F8DA  0A80               	xorlw	128
 36907  01F8DC  6E2A               	movwf	btemp^0,c
 36908  01F8DE  50DE               	movf	postinc2,w,c
 36909  01F8E0  0A80               	xorlw	128
 36910  01F8E2  582A               	subwfb	btemp^0,w,c
 36911  01F8E4  B0D8               	btfsc	status,0,c
 36912  01F8E6  D03D               	goto	l3551
 36913  01F8E8                     u14270:
 36914                           
 36915                           ;stkvar	_c @ sp[(0)+-2]
 36916                           ;stkvar	_fp @ sp[(0)+-4]
 36917  01F8E8  0EFC               	movlw	-4
 36918  01F8EA  006F FF8C  F034    	movff	plusw1,btemp+10
 36919  01F8F0  0EFD               	movlw	-3
 36920  01F8F2  006F FF8C  F035    	movff	plusw1,btemp+11
 36921  01F8F8  0E02               	movlw	2
 36922  01F8FA  2434               	addwf	(btemp+10)^0,w,c
 36923  01F8FC  6ED9               	movwf	fsr2l,c
 36924  01F8FE  0E00               	movlw	0
 36925  01F900  2035               	addwfc	(btemp+11)^0,w,c
 36926  01F902  6EDA               	movwf	fsr2h,c
 36927  01F904  006F FF78  F034    	movff	postinc2,btemp+10
 36928  01F90A  006F FF74  F035    	movff	postdec2,btemp+11
 36929                           
 36930                           ;stkvar	_fp @ sp[(0)+-4]
 36931  01F910  0EFC               	movlw	-4
 36932  01F912  006F FF8F FFD9     	movff	plusw1,fsr2l
 36933  01F918  0EFD               	movlw	-3
 36934  01F91A  006F FF8F FFDA     	movff	plusw1,fsr2h
 36935  01F920  006F FF78  F032    	movff	postinc2,btemp+8
 36936  01F926  006F FF74  F033    	movff	postdec2,btemp+9
 36937  01F92C  5034               	movf	(btemp+10)^0,w,c
 36938  01F92E  2432               	addwf	(btemp+8)^0,w,c
 36939  01F930  6ED9               	movwf	fsr2l,c
 36940  01F932  5035               	movf	(btemp+11)^0,w,c
 36941  01F934  2033               	addwfc	(btemp+9)^0,w,c
 36942  01F936  6EDA               	movwf	fsr2h,c
 36943  01F938  0EFE               	movlw	-2
 36944  01F93A  006F FF8F FFDF     	movff	plusw1,indf2
 36945                           
 36946                           ;stkvar	_fp @ sp[(0)+-4]
 36947  01F940  0EFC               	movlw	-4
 36948  01F942  006F FF8C  F034    	movff	plusw1,btemp+10
 36949  01F948  0EFD               	movlw	-3
 36950  01F94A  006F FF8C  F035    	movff	plusw1,btemp+11
 36951  01F950  0E02               	movlw	2
 36952  01F952  2434               	addwf	(btemp+10)^0,w,c
 36953  01F954  6ED9               	movwf	fsr2l,c
 36954  01F956  0E00               	movlw	0
 36955  01F958  2035               	addwfc	(btemp+11)^0,w,c
 36956  01F95A  6EDA               	movwf	fsr2h,c
 36957  01F95C  2ADE               	incf	postinc2,f,c
 36958  01F95E  0E00               	movlw	0
 36959  01F960  22DD               	addwfc	postdec2,f,c
 36960  01F962                     l3551:
 36961                           
 36962                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36963  01F962  52E5               	movf	postdec1,f,c
 36964  01F964  52E5               	movf	postdec1,f,c
 36965  01F966  52E5               	movf	postdec1,f,c
 36966  01F968  52E5               	movf	postdec1,f,c
 36967  01F96A  0012               	return		;funcret
 36968  01F96C                     __end_of_fputc:
 36969                           	opt callstack 0
 36970                           
 36971 ;; *************** function _putch *****************
 36972 ;; Defined at:
 36973 ;;		line 420 in file "eadog.c"
 36974 ;; Parameters:    Size  Location     Type
 36975 ;;  c               1  [STACK] unsigned char 
 36976 ;; Auto vars:     Size  Location     Type
 36977 ;;		None
 36978 ;; Return value:  Size  Location     Type
 36979 ;;                  1  [STACK] void 
 36980 ;; Registers used:
 36981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36982 ;; Tracked objects:
 36983 ;;		On entry : 0/0
 36984 ;;		On exit  : 0/0
 36985 ;;		Unchanged: 0/0
 36986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36991 ;;Total ram usage:        0 bytes
 36992 ;; Hardware stack levels used:    1
 36993 ;; Hardware stack levels required when called:   16
 36994 ;; This function calls:
 36995 ;;		_ringBufS_put_dma
 36996 ;; This function is called by:
 36997 ;;		_fputc
 36998 ;; This function uses a reentrant model
 36999 ;;
 37000                           
 37001                           	psect	text123
 37002  002B60                     __ptext123:
 37003                           	opt callstack 0
 37004  002B60                     _putch:
 37005                           	opt callstack 0
 37006                           
 37007                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 37008                           ;stkvar	_c @ sp[(0)+-1]
 37009                           
 37010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37011                           ;incstack = 0
 37012 ;; hardware stack exceeded
 37013  002B60  0EFF               	movlw	-1
 37014  002B62  50E3               	movf	plusw1,w,c
 37015  002B64  6EE6               	movwf	postinc1,c
 37016  002B66  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 37017  002B6C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 37018  002B72  EC69  F006         	call	_ringBufS_put_dma	;wreg free
 37019                           
 37020                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 37021  002B76  52E5               	movf	postdec1,f,c
 37022  002B78  0012               	return		;funcret
 37023  002B7A                     __end_of_putch:
 37024                           	opt callstack 0
 37025                           
 37026 ;; *************** function _ringBufS_put_dma *****************
 37027 ;; Defined at:
 37028 ;;		line 67 in file "ringbufs.c"
 37029 ;; Parameters:    Size  Location     Type
 37030 ;;  _this           2  [STACK] PTR struct ringBufS_t
 37031 ;;		 -> ring_buf1(67), 
 37032 ;;  c               1  [STACK] const unsigned char 
 37033 ;; Auto vars:     Size  Location     Type
 37034 ;;		None
 37035 ;; Return value:  Size  Location     Type
 37036 ;;                  1  [STACK] void 
 37037 ;; Registers used:
 37038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 37039 ;; Tracked objects:
 37040 ;;		On entry : 0/3B
 37041 ;;		On exit  : 0/0
 37042 ;;		Unchanged: 0/0
 37043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37048 ;;Total ram usage:        0 bytes
 37049 ;; Hardware stack levels used:    1
 37050 ;; Hardware stack levels required when called:   15
 37051 ;; This function calls:
 37052 ;;		Nothing
 37053 ;; This function is called by:
 37054 ;;		_send_lcd_data_dma
 37055 ;;		_putch
 37056 ;; This function uses a reentrant model
 37057 ;;
 37058                           
 37059                           	psect	text124
 37060  000CD2                     __ptext124:
 37061                           	opt callstack 0
 37062  000CD2                     _ringBufS_put_dma:
 37063                           	opt callstack 0
 37064                           
 37065                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 37066                           ;stkvar	__this @ sp[(0)+-2]
 37067                           
 37068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37069                           ;incstack = 0
 37070 ;; hardware stack exceeded
 37071  000CD2  0EFE               	movlw	-2
 37072  000CD4  006F FF8C  F034    	movff	plusw1,btemp+10
 37073  000CDA  0EFF               	movlw	-1
 37074  000CDC  006F FF8C  F035    	movff	plusw1,btemp+11
 37075  000CE2  0E42               	movlw	66
 37076  000CE4  2434               	addwf	(btemp+10)^0,w,c
 37077  000CE6  6ED9               	movwf	fsr2l,c
 37078  000CE8  0E00               	movlw	0
 37079  000CEA  2035               	addwfc	(btemp+11)^0,w,c
 37080  000CEC  6EDA               	movwf	fsr2h,c
 37081  000CEE  0E40               	movlw	64
 37082  000CF0  60DF               	cpfslt	indf2,c
 37083  000CF2  D040               	goto	l1746
 37084                           
 37085                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 37086                           ;stkvar	_c @ sp[(0)+-3]
 37087                           ;stkvar	__this @ sp[(0)+-2]
 37088  000CF4  0EFE               	movlw	-2
 37089  000CF6  006F FF8C  F034    	movff	plusw1,btemp+10
 37090  000CFC  0EFF               	movlw	-1
 37091  000CFE  006F FF8C  F035    	movff	plusw1,btemp+11
 37092  000D04  0E40               	movlw	64
 37093  000D06  2434               	addwf	(btemp+10)^0,w,c
 37094  000D08  6ED9               	movwf	fsr2l,c
 37095  000D0A  0E00               	movlw	0
 37096  000D0C  2035               	addwfc	(btemp+11)^0,w,c
 37097  000D0E  6EDA               	movwf	fsr2h,c
 37098  000D10  50DF               	movf	indf2,w,c
 37099  000D12  6E35               	movwf	(btemp+11)^0,c
 37100                           
 37101                           ;stkvar	__this @ sp[(0)+-2]
 37102  000D14  0EFE               	movlw	-2
 37103  000D16  006F FF8C  F032    	movff	plusw1,btemp+8
 37104  000D1C  0EFF               	movlw	-1
 37105  000D1E  006F FF8C  F033    	movff	plusw1,btemp+9
 37106  000D24  5035               	movf	(btemp+11)^0,w,c
 37107  000D26  2432               	addwf	(btemp+8)^0,w,c
 37108  000D28  6ED9               	movwf	fsr2l,c
 37109  000D2A  0E00               	movlw	0
 37110  000D2C  2033               	addwfc	(btemp+9)^0,w,c
 37111  000D2E  6EDA               	movwf	fsr2h,c
 37112  000D30  0EFD               	movlw	-3
 37113  000D32  006F FF8F FFDF     	movff	plusw1,indf2
 37114                           
 37115                           ;ringbufs.c: 71:   ++_this->head;
 37116                           ;stkvar	__this @ sp[(0)+-2]
 37117  000D38  0EFE               	movlw	-2
 37118  000D3A  006F FF8C  F034    	movff	plusw1,btemp+10
 37119  000D40  0EFF               	movlw	-1
 37120  000D42  006F FF8C  F035    	movff	plusw1,btemp+11
 37121  000D48  0E40               	movlw	64
 37122  000D4A  2434               	addwf	(btemp+10)^0,w,c
 37123  000D4C  6ED9               	movwf	fsr2l,c
 37124  000D4E  0E00               	movlw	0
 37125  000D50  2035               	addwfc	(btemp+11)^0,w,c
 37126  000D52  6EDA               	movwf	fsr2h,c
 37127  000D54  2ADF               	incf	indf2,f,c
 37128                           
 37129                           ;ringbufs.c: 72:   ++_this->count;
 37130                           ;stkvar	__this @ sp[(0)+-2]
 37131  000D56  0EFE               	movlw	-2
 37132  000D58  006F FF8C  F034    	movff	plusw1,btemp+10
 37133  000D5E  0EFF               	movlw	-1
 37134  000D60  006F FF8C  F035    	movff	plusw1,btemp+11
 37135  000D66  0E42               	movlw	66
 37136  000D68  2434               	addwf	(btemp+10)^0,w,c
 37137  000D6A  6ED9               	movwf	fsr2l,c
 37138  000D6C  0E00               	movlw	0
 37139  000D6E  2035               	addwfc	(btemp+11)^0,w,c
 37140  000D70  6EDA               	movwf	fsr2h,c
 37141  000D72  2ADF               	incf	indf2,f,c
 37142  000D74                     l1746:
 37143                           
 37144                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 37145  000D74  52E5               	movf	postdec1,f,c
 37146  000D76  52E5               	movf	postdec1,f,c
 37147  000D78  52E5               	movf	postdec1,f,c
 37148  000D7A  0012               	return		;funcret
 37149  000D7C                     __end_of_ringBufS_put_dma:
 37150                           	opt callstack 0
 37151                           
 37152 ;; *************** function _atoi *****************
 37153 ;; Defined at:
 37154 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 37155 ;; Parameters:    Size  Location     Type
 37156 ;;  s               2  [STACK] PTR const unsigned char 
 37157 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 37158 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 37159 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 37160 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 37161 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 37162 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 37163 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 37164 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 37165 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 37166 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 37167 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 37168 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 37169 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 37170 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 37171 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 37172 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 37173 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 37174 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 37175 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 37176 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 37177 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 37178 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 37179 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 37180 ;; Auto vars:     Size  Location     Type
 37181 ;;  n               2  [STACK] int 
 37182 ;;  neg             2  [STACK] int 
 37183 ;; Return value:  Size  Location     Type
 37184 ;;                  2  [STACK] int 
 37185 ;; Registers used:
 37186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 37187 ;; Tracked objects:
 37188 ;;		On entry : 0/0
 37189 ;;		On exit  : 0/0
 37190 ;;		Unchanged: 0/0
 37191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37196 ;;Total ram usage:        0 bytes
 37197 ;; Hardware stack levels used:    1
 37198 ;; Hardware stack levels required when called:   16
 37199 ;; This function calls:
 37200 ;;		_isdigit
 37201 ;;		_isspace
 37202 ;; This function is called by:
 37203 ;;		_vfpfcnvrt
 37204 ;; This function uses a reentrant model
 37205 ;;
 37206                           
 37207                           	psect	text125
 37208  01C77A                     __ptext125:
 37209                           	opt callstack 0
 37210  01C77A                     _atoi:
 37211                           	opt callstack 0
 37212                           
 37213                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37214  01C77A  0E09               	movlw	9
 37215  01C77C  26E1               	addwf	fsr1l,f,c
 37216  01C77E  0E00               	movlw	0
 37217  01C780  22E2               	addwfc	fsr1h,f,c
 37218                           
 37219                           ;stkvar	_n @ sp[(-9)+5]
 37220                           
 37221                           ;incstack = 0
 37222 ;; hardware stack exceeded
 37223  01C782  0EFC               	movlw	-4
 37224  01C784  6AE3               	clrf	plusw1,c
 37225  01C786  0EFD               	movlw	-3
 37226  01C788  6AE3               	clrf	plusw1,c
 37227                           
 37228                           ;stkvar	_neg @ sp[(-9)+7]
 37229  01C78A  0EFE               	movlw	-2
 37230  01C78C  6AE3               	clrf	plusw1,c
 37231  01C78E  0EFF               	movlw	-1
 37232  01C790  6AE3               	clrf	plusw1,c
 37233  01C792  D011               	goto	l11478
 37234  01C794                     l11476:
 37235                           
 37236                           ;stkvar	_s @ sp[(-9)+-2]
 37237  01C794  0EF5               	movlw	-11
 37238  01C796  50E3               	movf	plusw1,w,c
 37239  01C798  0F01               	addlw	1
 37240  01C79A  6E2A               	movwf	btemp^0,c
 37241  01C79C  0EF5               	movlw	-11
 37242  01C79E  0060  F0AB  FFE3   	movff	btemp,plusw1
 37243  01C7A4  6A2A               	clrf	btemp^0,c
 37244  01C7A6  0EF6               	movlw	-10
 37245  01C7A8  50E3               	movf	plusw1,w,c
 37246  01C7AA  202A               	addwfc	btemp^0,w,c
 37247  01C7AC  6E2A               	movwf	btemp^0,c
 37248  01C7AE  0EF6               	movlw	-10
 37249  01C7B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 37250  01C7B6                     l11478:
 37251                           
 37252                           ;stkvar	_atoi$7234 @ sp[(-9)+4]
 37253  01C7B6  0EFB               	movlw	-5
 37254  01C7B8  6AE3               	clrf	plusw1,c
 37255  01C7BA  2AE3               	incf	plusw1,f,c
 37256                           
 37257                           ;stkvar	_s @ sp[(-9)+-2]
 37258  01C7BC  50E1               	movf	fsr1l,w,c
 37259  01C7BE  0FF5               	addlw	-11
 37260  01C7C0  6ED9               	movwf	fsr2l,c
 37261  01C7C2  50E2               	movf	fsr1h,w,c
 37262  01C7C4  6EDA               	movwf	fsr2h,c
 37263  01C7C6  0EFF               	movlw	255
 37264  01C7C8  22DA               	addwfc	fsr2h,f,c
 37265  01C7CA  006F FF7B FFF6     	movff	postinc2,tblptrl
 37266  01C7D0  006F FF77 FFF7     	movff	postdec2,tblptrh
 37267  01C7D6                     	if	0	;tblptru may be non-zero
 37268  01C7D6                     	endif
 37269  01C7D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37270  01C7D6  0E00               	movlw	low (__mediumconst shr (0+16))
 37271  01C7D8  6EF8               	movwf	tblptru,c
 37272  01C7DA                     	endif
 37273  01C7DA  0008               	tblrd		*
 37274  01C7DC  50F5               	movf	tablat,w,c
 37275  01C7DE  0A20               	xorlw	32
 37276  01C7E0  B4D8               	btfsc	status,2,c
 37277  01C7E2  D023               	goto	l11486
 37278  01C7E4  0EF7               	movlw	247
 37279  01C7E6  6E34               	movwf	(btemp+10)^0,c
 37280  01C7E8  0EFF               	movlw	255
 37281  01C7EA  6E35               	movwf	(btemp+11)^0,c
 37282                           
 37283                           ;stkvar	_s @ sp[(-9)+-2]
 37284  01C7EC  50E1               	movf	fsr1l,w,c
 37285  01C7EE  0FF5               	addlw	-11
 37286  01C7F0  6ED9               	movwf	fsr2l,c
 37287  01C7F2  50E2               	movf	fsr1h,w,c
 37288  01C7F4  6EDA               	movwf	fsr2h,c
 37289  01C7F6  0EFF               	movlw	255
 37290  01C7F8  22DA               	addwfc	fsr2h,f,c
 37291  01C7FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 37292  01C800  006F FF77 FFF7     	movff	postdec2,tblptrh
 37293  01C806                     	if	0	;tblptru may be non-zero
 37294  01C806                     	endif
 37295  01C806                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37296  01C806  0E00               	movlw	low (__mediumconst shr (0+16))
 37297  01C808  6EF8               	movwf	tblptru,c
 37298  01C80A                     	endif
 37299  01C80A  0008               	tblrd		*
 37300  01C80C  50F5               	movf	tablat,w,c
 37301  01C80E  6E32               	movwf	(btemp+8)^0,c
 37302  01C810  6A33               	clrf	(btemp+9)^0,c
 37303  01C812  5034               	movf	(btemp+10)^0,w,c
 37304  01C814  2632               	addwf	(btemp+8)^0,f,c
 37305  01C816  5035               	movf	(btemp+11)^0,w,c
 37306  01C818  2233               	addwfc	(btemp+9)^0,f,c
 37307  01C81A  5033               	movf	(btemp+9)^0,w,c
 37308  01C81C  E104               	bnz	u10400
 37309  01C81E  0E05               	movlw	5
 37310  01C820  5C32               	subwf	(btemp+8)^0,w,c
 37311  01C822  A0D8               	btfss	status,0,c
 37312  01C824  D002               	goto	l11486
 37313  01C826                     u10400:
 37314                           
 37315                           ;stkvar	_atoi$7234 @ sp[(-9)+4]
 37316  01C826  0EFB               	movlw	-5
 37317  01C828  6AE3               	clrf	plusw1,c
 37318  01C82A                     l11486:
 37319                           
 37320                           ;stkvar	_atoi$7234 @ sp[(-9)+4]
 37321  01C82A  0EFB               	movlw	-5
 37322  01C82C  50E3               	movf	plusw1,w,c
 37323  01C82E  6E34               	movwf	(btemp+10)^0,c
 37324  01C830  6A35               	clrf	(btemp+11)^0,c
 37325                           
 37326                           ;stkvar	_atoi$7233 @ sp[(-9)+2]
 37327  01C832  0EF9               	movlw	-7
 37328  01C834  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37329  01C83A  0EFA               	movlw	-6
 37330  01C83C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37331                           
 37332                           ;stkvar	_atoi$7233 @ sp[(-9)+2]
 37333  01C842  0EF9               	movlw	-7
 37334  01C844  006F FF8C  F02A    	movff	plusw1,btemp
 37335  01C84A  0EFA               	movlw	-6
 37336  01C84C  50E3               	movf	plusw1,w,c
 37337  01C84E  102A               	iorwf	btemp^0,w,c
 37338  01C850  B4D8               	btfsc	status,2,c
 37339  01C852  D01F               	goto	l11496
 37340  01C854  D79F               	goto	l11476
 37341  01C856                     l11492:
 37342  01C856  0E01               	movlw	1
 37343  01C858  6E34               	movwf	(btemp+10)^0,c
 37344  01C85A  0E00               	movlw	0
 37345  01C85C  6E35               	movwf	(btemp+11)^0,c
 37346                           
 37347                           ;stkvar	_neg @ sp[(-9)+7]
 37348  01C85E  0EFE               	movlw	-2
 37349  01C860  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37350  01C866  0EFF               	movlw	-1
 37351  01C868  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37352  01C86E                     l11494:
 37353                           
 37354                           ;stkvar	_s @ sp[(-9)+-2]
 37355  01C86E  0EF5               	movlw	-11
 37356  01C870  50E3               	movf	plusw1,w,c
 37357  01C872  0F01               	addlw	1
 37358  01C874  6E2A               	movwf	btemp^0,c
 37359  01C876  0EF5               	movlw	-11
 37360  01C878  0060  F0AB  FFE3   	movff	btemp,plusw1
 37361  01C87E  6A2A               	clrf	btemp^0,c
 37362  01C880  0EF6               	movlw	-10
 37363  01C882  50E3               	movf	plusw1,w,c
 37364  01C884  202A               	addwfc	btemp^0,w,c
 37365  01C886  6E2A               	movwf	btemp^0,c
 37366  01C888  0EF6               	movlw	-10
 37367  01C88A  0060  F0AB  FFE3   	movff	btemp,plusw1
 37368  01C890  D053               	goto	l11502
 37369  01C892                     l11496:
 37370                           
 37371                           ;stkvar	_s @ sp[(-9)+-2]
 37372  01C892  50E1               	movf	fsr1l,w,c
 37373  01C894  0FF5               	addlw	-11
 37374  01C896  6ED9               	movwf	fsr2l,c
 37375  01C898  50E2               	movf	fsr1h,w,c
 37376  01C89A  6EDA               	movwf	fsr2h,c
 37377  01C89C  0EFF               	movlw	255
 37378  01C89E  22DA               	addwfc	fsr2h,f,c
 37379  01C8A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 37380  01C8A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 37381  01C8AC                     	if	0	;tblptru may be non-zero
 37382  01C8AC                     	endif
 37383  01C8AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37384  01C8AC  0E00               	movlw	low (__mediumconst shr (0+16))
 37385  01C8AE  6EF8               	movwf	tblptru,c
 37386  01C8B0                     	endif
 37387  01C8B0  0008               	tblrd		*
 37388  01C8B2  50F5               	movf	tablat,w,c
 37389  01C8B4  6E34               	movwf	(btemp+10)^0,c
 37390  01C8B6  6A35               	clrf	(btemp+11)^0,c
 37391                           
 37392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37393                           ; Switch size 1, requested type "simple"
 37394                           ; Number of cases is 1, Range of values is 0 to 0
 37395                           ; switch strategies available:
 37396                           ; Name         Instructions Cycles
 37397                           ; simple_byte            4     3 (average)
 37398                           ;	Chosen strategy is simple_byte
 37399  01C8B8  5035               	movf	(btemp+11)^0,w,c
 37400  01C8BA  0A00               	xorlw	0	; case 0
 37401  01C8BC  A4D8               	btfss	status,2,c
 37402  01C8BE  D03C               	goto	l11502
 37403                           
 37404                           ; Switch size 1, requested type "simple"
 37405                           ; Number of cases is 2, Range of values is 43 to 45
 37406                           ; switch strategies available:
 37407                           ; Name         Instructions Cycles
 37408                           ; simple_byte            7     4 (average)
 37409                           ;	Chosen strategy is simple_byte
 37410  01C8C0  5034               	movf	(btemp+10)^0,w,c
 37411  01C8C2  0A2B               	xorlw	43	; case 43
 37412  01C8C4  B4D8               	btfsc	status,2,c
 37413  01C8C6  D7D3               	goto	l11494
 37414  01C8C8  0A06               	xorlw	6	; case 45
 37415  01C8CA  B4D8               	btfsc	status,2,c
 37416  01C8CC  D7C4               	goto	l11492
 37417  01C8CE  D034               	goto	l11502
 37418  01C8D0                     l11498:
 37419                           
 37420                           ;stkvar	_n @ sp[(-9)+5]
 37421  01C8D0  0EFC               	movlw	-4
 37422  01C8D2  006F FF8C  F034    	movff	plusw1,btemp+10
 37423  01C8D8  0EFD               	movlw	-3
 37424  01C8DA  006F FF8C  F035    	movff	plusw1,btemp+11
 37425  01C8E0  0E0A               	movlw	10
 37426  01C8E2  0234               	mulwf	(btemp+10)^0,c
 37427  01C8E4  006F FFCC  F032    	movff	prodl,btemp+8
 37428  01C8EA  006F FFD0  F033    	movff	prodh,btemp+9
 37429  01C8F0  0235               	mulwf	(btemp+11)^0,c
 37430  01C8F2  50F3               	movf	prodl,w,c
 37431  01C8F4  2633               	addwf	(btemp+9)^0,f,c
 37432                           
 37433                           ;stkvar	_s @ sp[(-9)+-2]
 37434  01C8F6  50E1               	movf	fsr1l,w,c
 37435  01C8F8  0FF5               	addlw	-11
 37436  01C8FA  6ED9               	movwf	fsr2l,c
 37437  01C8FC  50E2               	movf	fsr1h,w,c
 37438  01C8FE  6EDA               	movwf	fsr2h,c
 37439  01C900  0EFF               	movlw	255
 37440  01C902  22DA               	addwfc	fsr2h,f,c
 37441  01C904  006F FF7B FFF6     	movff	postinc2,tblptrl
 37442  01C90A  006F FF77 FFF7     	movff	postdec2,tblptrh
 37443  01C910                     	if	0	;tblptru may be non-zero
 37444  01C910                     	endif
 37445  01C910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37446  01C910  0E00               	movlw	low (__mediumconst shr (0+16))
 37447  01C912  6EF8               	movwf	tblptru,c
 37448  01C914                     	endif
 37449  01C914  0008               	tblrd		*
 37450  01C916  50F5               	movf	tablat,w,c
 37451  01C918  5E32               	subwf	(btemp+8)^0,f,c
 37452  01C91A  0E00               	movlw	0
 37453  01C91C  5A33               	subwfb	(btemp+9)^0,f,c
 37454  01C91E  0E30               	movlw	48
 37455  01C920  2632               	addwf	(btemp+8)^0,f,c
 37456  01C922  0E00               	movlw	0
 37457  01C924  2233               	addwfc	(btemp+9)^0,f,c
 37458                           
 37459                           ;stkvar	_n @ sp[(-9)+5]
 37460  01C926  0EFC               	movlw	-4
 37461  01C928  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37462  01C92E  0EFD               	movlw	-3
 37463  01C930  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37464  01C936  D79B               	goto	l11494
 37465  01C938                     l11502:
 37466  01C938  0ED0               	movlw	208
 37467  01C93A  6E34               	movwf	(btemp+10)^0,c
 37468  01C93C  0EFF               	movlw	255
 37469  01C93E  6E35               	movwf	(btemp+11)^0,c
 37470                           
 37471                           ;stkvar	_s @ sp[(-9)+-2]
 37472  01C940  50E1               	movf	fsr1l,w,c
 37473  01C942  0FF5               	addlw	-11
 37474  01C944  6ED9               	movwf	fsr2l,c
 37475  01C946  50E2               	movf	fsr1h,w,c
 37476  01C948  6EDA               	movwf	fsr2h,c
 37477  01C94A  0EFF               	movlw	255
 37478  01C94C  22DA               	addwfc	fsr2h,f,c
 37479  01C94E  006F FF7B FFF6     	movff	postinc2,tblptrl
 37480  01C954  006F FF77 FFF7     	movff	postdec2,tblptrh
 37481  01C95A                     	if	0	;tblptru may be non-zero
 37482  01C95A                     	endif
 37483  01C95A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37484  01C95A  0E00               	movlw	low (__mediumconst shr (0+16))
 37485  01C95C  6EF8               	movwf	tblptru,c
 37486  01C95E                     	endif
 37487  01C95E  0008               	tblrd		*
 37488  01C960  50F5               	movf	tablat,w,c
 37489  01C962  6E32               	movwf	(btemp+8)^0,c
 37490  01C964  6A33               	clrf	(btemp+9)^0,c
 37491  01C966  5034               	movf	(btemp+10)^0,w,c
 37492  01C968  2632               	addwf	(btemp+8)^0,f,c
 37493  01C96A  5035               	movf	(btemp+11)^0,w,c
 37494  01C96C  2233               	addwfc	(btemp+9)^0,f,c
 37495  01C96E  5033               	movf	(btemp+9)^0,w,c
 37496  01C970  E106               	bnz	u10420
 37497  01C972  0E0A               	movlw	10
 37498  01C974  5C32               	subwf	(btemp+8)^0,w,c
 37499  01C976  B0D8               	btfsc	status,0,c
 37500  01C978  D002               	goto	u10420
 37501  01C97A  0E01               	movlw	1
 37502  01C97C  D001               	goto	u10430
 37503  01C97E                     u10420:
 37504  01C97E  0E00               	movlw	0
 37505  01C980                     u10430:
 37506  01C980  6E34               	movwf	(btemp+10)^0,c
 37507  01C982  6A35               	clrf	(btemp+11)^0,c
 37508                           
 37509                           ;stkvar	_atoi$7235 @ sp[(-9)+0]
 37510  01C984  0EF7               	movlw	-9
 37511  01C986  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37512  01C98C  0EF8               	movlw	-8
 37513  01C98E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37514                           
 37515                           ;stkvar	_atoi$7235 @ sp[(-9)+0]
 37516  01C994  0EF7               	movlw	-9
 37517  01C996  006F FF8C  F02A    	movff	plusw1,btemp
 37518  01C99C  0EF8               	movlw	-8
 37519  01C99E  50E3               	movf	plusw1,w,c
 37520  01C9A0  102A               	iorwf	btemp^0,w,c
 37521  01C9A2  A4D8               	btfss	status,2,c
 37522  01C9A4  D795               	goto	l11498
 37523                           
 37524                           ;stkvar	_neg @ sp[(-9)+7]
 37525  01C9A6  0EFE               	movlw	-2
 37526  01C9A8  006F FF8C  F02A    	movff	plusw1,btemp
 37527  01C9AE  0EFF               	movlw	-1
 37528  01C9B0  50E3               	movf	plusw1,w,c
 37529  01C9B2  102A               	iorwf	btemp^0,w,c
 37530  01C9B4  A4D8               	btfss	status,2,c
 37531  01C9B6  D00E               	goto	l11512
 37532                           
 37533                           ;stkvar	_n @ sp[(-9)+5]
 37534  01C9B8  0EFC               	movlw	-4
 37535  01C9BA  006F FF8C  F02A    	movff	plusw1,btemp
 37536  01C9C0  1E2A               	comf	btemp^0,f,c
 37537  01C9C2  0EFD               	movlw	-3
 37538  01C9C4  006F FF8C  F02B    	movff	plusw1,btemp+1
 37539  01C9CA  1E2B               	comf	(btemp+1)^0,f,c
 37540  01C9CC  2A2A               	incf	btemp^0,f,c
 37541  01C9CE  B4D8               	btfsc	status,2,c
 37542  01C9D0  2A2B               	incf	(btemp+1)^0,f,c
 37543  01C9D2  D008               	goto	l3462
 37544  01C9D4                     l11512:
 37545                           
 37546                           ;stkvar	_n @ sp[(-9)+5]
 37547  01C9D4  0EFC               	movlw	-4
 37548  01C9D6  006F FF8C  F02A    	movff	plusw1,btemp
 37549  01C9DC  0EFD               	movlw	-3
 37550  01C9DE  006F FF8C  F02B    	movff	plusw1,btemp+1
 37551  01C9E4                     l3462:
 37552                           
 37553                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 37554  01C9E4  0EF5               	movlw	245
 37555  01C9E6  26E1               	addwf	fsr1l,f,c
 37556  01C9E8  0EFF               	movlw	255
 37557  01C9EA  22E2               	addwfc	fsr1h,f,c
 37558  01C9EC  0012               	return		;funcret
 37559  01C9EE                     __end_of_atoi:
 37560                           	opt callstack 0
 37561                           
 37562 ;; *************** function _isspace *****************
 37563 ;; Defined at:
 37564 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 37565 ;; Parameters:    Size  Location     Type
 37566 ;;  c               2  [STACK] int 
 37567 ;; Auto vars:     Size  Location     Type
 37568 ;;		None
 37569 ;; Return value:  Size  Location     Type
 37570 ;;                  2  [STACK] int 
 37571 ;; Registers used:
 37572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37573 ;; Tracked objects:
 37574 ;;		On entry : 0/0
 37575 ;;		On exit  : 0/0
 37576 ;;		Unchanged: 0/0
 37577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37582 ;;Total ram usage:        0 bytes
 37583 ;; Hardware stack levels used:    1
 37584 ;; Hardware stack levels required when called:   15
 37585 ;; This function calls:
 37586 ;;		Nothing
 37587 ;; This function is called by:
 37588 ;;		_atoi
 37589 ;; This function uses a reentrant model
 37590 ;;
 37591                           
 37592                           	psect	text126
 37593  001E08                     __ptext126:
 37594                           	opt callstack 0
 37595  001E08                     _isspace:
 37596                           	opt callstack 0
 37597                           
 37598                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37599  001E08  52E6               	movf	postinc1,f,c
 37600                           
 37601                           ;stkvar	_isspace$7284 @ sp[(-1)+0]
 37602                           
 37603                           ;incstack = 0
 37604 ;; hardware stack exceeded
 37605  001E0A  0EFF               	movlw	-1
 37606  001E0C  6AE3               	clrf	plusw1,c
 37607  001E0E  2AE3               	incf	plusw1,f,c
 37608                           
 37609                           ;stkvar	_c @ sp[(-1)+-2]
 37610  001E10  0EFD               	movlw	-3
 37611  001E12  006F FF8C  F02A    	movff	plusw1,btemp
 37612  001E18  0E20               	movlw	32
 37613  001E1A  182A               	xorwf	btemp^0,w,c
 37614  001E1C  E104               	bnz	u9250
 37615  001E1E  0EFE               	movlw	-2
 37616  001E20  50E3               	movf	plusw1,w,c
 37617  001E22  B4D8               	btfsc	status,2,c
 37618  001E24  D012               	goto	l10878
 37619  001E26                     u9250:
 37620                           
 37621                           ;stkvar	_c @ sp[(-1)+-2]
 37622  001E26  0EFD               	movlw	-3
 37623  001E28  50E3               	movf	plusw1,w,c
 37624  001E2A  0FF7               	addlw	247
 37625  001E2C  6E34               	movwf	(btemp+10)^0,c
 37626  001E2E  0EFE               	movlw	-2
 37627  001E30  006F FF8C  F035    	movff	plusw1,btemp+11
 37628  001E36  0EFF               	movlw	255
 37629  001E38  2235               	addwfc	(btemp+11)^0,f,c
 37630  001E3A  5035               	movf	(btemp+11)^0,w,c
 37631  001E3C  E104               	bnz	u9260
 37632  001E3E  0E05               	movlw	5
 37633  001E40  5C34               	subwf	(btemp+10)^0,w,c
 37634  001E42  A0D8               	btfss	status,0,c
 37635  001E44  D002               	goto	l10878
 37636  001E46                     u9260:
 37637                           
 37638                           ;stkvar	_isspace$7284 @ sp[(-1)+0]
 37639  001E46  0EFF               	movlw	-1
 37640  001E48  6AE3               	clrf	plusw1,c
 37641  001E4A                     l10878:
 37642                           
 37643                           ;stkvar	_isspace$7284 @ sp[(-1)+0]
 37644  001E4A  0EFF               	movlw	-1
 37645  001E4C  50E3               	movf	plusw1,w,c
 37646  001E4E  6E2A               	movwf	btemp^0,c
 37647  001E50  6A2B               	clrf	(btemp+1)^0,c
 37648                           
 37649                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37650  001E52  52E5               	movf	postdec1,f,c
 37651  001E54  52E5               	movf	postdec1,f,c
 37652  001E56  52E5               	movf	postdec1,f,c
 37653  001E58  0012               	return		;funcret
 37654  001E5A                     __end_of_isspace:
 37655                           	opt callstack 0
 37656                           
 37657 ;; *************** function _isdigit *****************
 37658 ;; Defined at:
 37659 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 37660 ;; Parameters:    Size  Location     Type
 37661 ;;  c               2  [STACK] int 
 37662 ;; Auto vars:     Size  Location     Type
 37663 ;;		None
 37664 ;; Return value:  Size  Location     Type
 37665 ;;                  2  [STACK] int 
 37666 ;; Registers used:
 37667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37668 ;; Tracked objects:
 37669 ;;		On entry : 0/0
 37670 ;;		On exit  : 0/0
 37671 ;;		Unchanged: 0/0
 37672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37677 ;;Total ram usage:        0 bytes
 37678 ;; Hardware stack levels used:    1
 37679 ;; Hardware stack levels required when called:   15
 37680 ;; This function calls:
 37681 ;;		Nothing
 37682 ;; This function is called by:
 37683 ;;		_vfpfcnvrt
 37684 ;;		_atoi
 37685 ;; This function uses a reentrant model
 37686 ;;
 37687                           
 37688                           	psect	text127
 37689  002624                     __ptext127:
 37690                           	opt callstack 0
 37691  002624                     _isdigit:
 37692                           	opt callstack 0
 37693                           
 37694                           ;stkvar	_c @ sp[(0)+-2]
 37695                           
 37696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37697                           ;incstack = 0
 37698 ;; hardware stack exceeded
 37699  002624  0EFE               	movlw	-2
 37700  002626  50E3               	movf	plusw1,w,c
 37701  002628  0FD0               	addlw	208
 37702  00262A  6E34               	movwf	(btemp+10)^0,c
 37703  00262C  0EFF               	movlw	-1
 37704  00262E  006F FF8C  F035    	movff	plusw1,btemp+11
 37705  002634  0EFF               	movlw	255
 37706  002636  2235               	addwfc	(btemp+11)^0,f,c
 37707  002638  5035               	movf	(btemp+11)^0,w,c
 37708  00263A  E106               	bnz	u8040
 37709  00263C  0E0A               	movlw	10
 37710  00263E  5C34               	subwf	(btemp+10)^0,w,c
 37711  002640  B0D8               	btfsc	status,0,c
 37712  002642  D002               	goto	u8040
 37713  002644  0E01               	movlw	1
 37714  002646  D001               	goto	u8050
 37715  002648                     u8040:
 37716  002648  0E00               	movlw	0
 37717  00264A                     u8050:
 37718  00264A  6E2A               	movwf	btemp^0,c
 37719  00264C  6A2B               	clrf	(btemp+1)^0,c
 37720                           
 37721                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37722  00264E  52E5               	movf	postdec1,f,c
 37723  002650  52E5               	movf	postdec1,f,c
 37724  002652  0012               	return		;funcret
 37725  002654                     __end_of_isdigit:
 37726                           	opt callstack 0
 37727                           
 37728 ;; *************** function _set_vterm *****************
 37729 ;; Defined at:
 37730 ;;		line 110 in file "mconfig.c"
 37731 ;; Parameters:    Size  Location     Type
 37732 ;;  vterm           1  [STACK] const unsigned char 
 37733 ;; Auto vars:     Size  Location     Type
 37734 ;;		None
 37735 ;; Return value:  Size  Location     Type
 37736 ;;                  1  [STACK] unsigned char 
 37737 ;; Registers used:
 37738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 37739 ;; Tracked objects:
 37740 ;;		On entry : 0/2
 37741 ;;		On exit  : 0/0
 37742 ;;		Unchanged: 0/0
 37743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37748 ;;Total ram usage:        0 bytes
 37749 ;; Hardware stack levels used:    1
 37750 ;; Hardware stack levels required when called:   15
 37751 ;; This function calls:
 37752 ;;		Nothing
 37753 ;; This function is called by:
 37754 ;;		_main
 37755 ;;		_check_help
 37756 ;; This function uses a reentrant model
 37757 ;;
 37758                           
 37759                           	psect	text128
 37760  002B24                     __ptext128:
 37761                           	opt callstack 0
 37762  002B24                     _set_vterm:
 37763                           	opt callstack 15
 37764                           
 37765                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 37766                           ;stkvar	_vterm @ sp[(0)+-1]
 37767                           
 37768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37769                           ;incstack = 0
 37770  002B24  0EFF               	movlw	-1
 37771  002B26  006F FF8C  F035    	movff	plusw1,btemp+11
 37772  002B2C  0E03               	movlw	3
 37773  002B2E  1635               	andwf	(btemp+11)^0,f,c
 37774  002B30  EE22  F17F         	lfsr	2,_D+640
 37775  002B34  50DF               	movf	223,w,c
 37776  002B36  1835               	xorwf	(btemp+11)^0,w,c
 37777  002B38  0BFE               	andlw	-2
 37778  002B3A  1835               	xorwf	(btemp+11)^0,w,c
 37779  002B3C  6EDF               	movwf	223,c
 37780                           
 37781                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37782  002B3E  52E5               	movf	postdec1,f,c
 37783  002B40  0012               	return		;funcret
 37784  002B42                     __end_of_set_vterm:
 37785                           	opt callstack 0
 37786                           
 37787 ;; *************** function _set_temp_display_help *****************
 37788 ;; Defined at:
 37789 ;;		line 217 in file "mconfig.c"
 37790 ;; Parameters:    Size  Location     Type
 37791 ;;  new_response    1  [STACK] const enum E16677
 37792 ;; Auto vars:     Size  Location     Type
 37793 ;;		None
 37794 ;; Return value:  Size  Location     Type
 37795 ;;                  1  [STACK] enum E16677
 37796 ;; Registers used:
 37797 ;;		wreg, fsr1l, fsr1h
 37798 ;; Tracked objects:
 37799 ;;		On entry : 0/2
 37800 ;;		On exit  : 3F/2
 37801 ;;		Unchanged: 0/0
 37802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37807 ;;Total ram usage:        0 bytes
 37808 ;; Hardware stack levels used:    1
 37809 ;; Hardware stack levels required when called:   15
 37810 ;; This function calls:
 37811 ;;		Nothing
 37812 ;; This function is called by:
 37813 ;;		_check_help
 37814 ;; This function uses a reentrant model
 37815 ;;
 37816                           
 37817                           	psect	text129
 37818  002C86                     __ptext129:
 37819                           	opt callstack 0
 37820  002C86                     _set_temp_display_help:
 37821                           	opt callstack 14
 37822                           
 37823                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 37824                           
 37825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37826                           ;incstack = 0
 37827  002C86  0102               	movlb	2	; () banked
 37828  002C88  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 37829                           
 37830                           ; BSR set to: 2
 37831                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 37832                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37833  002C8A  0EFF               	movlw	-1
 37834  002C8C  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 37835                           
 37836                           ; BSR set to: 2
 37837                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 37838  002C92  52E5               	movf	postdec1,f,c
 37839  002C94  0012               	return		;funcret
 37840  002C96                     __end_of_set_temp_display_help:
 37841                           	opt callstack 0
 37842                           
 37843 ;; *************** function _set_display_info *****************
 37844 ;; Defined at:
 37845 ;;		line 206 in file "mconfig.c"
 37846 ;; Parameters:    Size  Location     Type
 37847 ;;  new_response    1  [STACK] const enum E16677
 37848 ;; Auto vars:     Size  Location     Type
 37849 ;;		None
 37850 ;; Return value:  Size  Location     Type
 37851 ;;                  1  [STACK] enum E17160
 37852 ;; Registers used:
 37853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37854 ;; Tracked objects:
 37855 ;;		On entry : 0/2
 37856 ;;		On exit  : 0/0
 37857 ;;		Unchanged: 0/0
 37858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37863 ;;Total ram usage:        0 bytes
 37864 ;; Hardware stack levels used:    1
 37865 ;; Hardware stack levels required when called:   16
 37866 ;; This function calls:
 37867 ;;		_TimerDone
 37868 ;; This function is called by:
 37869 ;;		_main
 37870 ;;		_check_help
 37871 ;; This function uses a reentrant model
 37872 ;;
 37873                           
 37874                           	psect	text130
 37875  002B42                     __ptext130:
 37876                           	opt callstack 0
 37877  002B42                     _set_display_info:
 37878                           	opt callstack 14
 37879                           
 37880                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 37881                           
 37882                           ; BSR set to: 2
 37883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37884                           ;incstack = 0
 37885  002B42  0E07               	movlw	7
 37886  002B44  6EE6               	movwf	postinc1,c
 37887  002B46  ECAD  F013         	call	_TimerDone	;wreg free
 37888  002B4A  502A               	movf	btemp^0,w,c
 37889  002B4C  B4D8               	btfsc	status,2,c
 37890  002B4E  D006               	goto	l1881
 37891                           
 37892                           ;mconfig.c: 211:   old_info = V.response.info;
 37893  002B50  0102               	movlb	2	; () banked
 37894  002B52  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 37895                           
 37896                           ; BSR set to: 2
 37897                           ;mconfig.c: 212:   V.response.info = new_response_info;
 37898                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37899  002B54  0EFF               	movlw	-1
 37900  002B56  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 37901  002B5C                     l1881:
 37902                           
 37903                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 37904  002B5C  52E5               	movf	postdec1,f,c
 37905  002B5E  0012               	return		;funcret
 37906  002B60                     __end_of_set_display_info:
 37907                           	opt callstack 0
 37908                           
 37909 ;; *************** function _mode_lamp_dim *****************
 37910 ;; Defined at:
 37911 ;;		line 13 in file "mconfig.c"
 37912 ;; Parameters:    Size  Location     Type
 37913 ;;  level           2  [STACK] const unsigned short 
 37914 ;; Auto vars:     Size  Location     Type
 37915 ;;		None
 37916 ;; Return value:  Size  Location     Type
 37917 ;;                  1  [STACK] void 
 37918 ;; Registers used:
 37919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37920 ;; Tracked objects:
 37921 ;;		On entry : 0/2
 37922 ;;		On exit  : 0/0
 37923 ;;		Unchanged: 0/0
 37924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37929 ;;Total ram usage:        0 bytes
 37930 ;; Hardware stack levels used:    1
 37931 ;; Hardware stack levels required when called:   16
 37932 ;; This function calls:
 37933 ;;		_PWM8_LoadDutyValue
 37934 ;; This function is called by:
 37935 ;;		_main
 37936 ;;		_check_help
 37937 ;; This function uses a reentrant model
 37938 ;;
 37939                           
 37940                           	psect	text131
 37941  002B96                     __ptext131:
 37942                           	opt callstack 0
 37943  002B96                     _mode_lamp_dim:
 37944                           	opt callstack 14
 37945                           
 37946                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 37947                           ;stkvar	_level @ sp[(0)+-2]
 37948                           
 37949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37950                           ;incstack = 0
 37951  002B96  0EFE               	movlw	-2
 37952  002B98  006F FF8F FFE6     	movff	plusw1,postinc1
 37953  002B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 37954  002BA4  ECBF  F010         	call	_PWM8_LoadDutyValue	;wreg free
 37955                           
 37956                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 37957  002BA8  52E5               	movf	postdec1,f,c
 37958  002BAA  52E5               	movf	postdec1,f,c
 37959  002BAC  0012               	return		;funcret
 37960  002BAE                     __end_of_mode_lamp_dim:
 37961                           	opt callstack 0
 37962                           
 37963 ;; *************** function _mode_lamp_bright *****************
 37964 ;; Defined at:
 37965 ;;		line 18 in file "mconfig.c"
 37966 ;; Parameters:    Size  Location     Type
 37967 ;;		None
 37968 ;; Auto vars:     Size  Location     Type
 37969 ;;		None
 37970 ;; Return value:  Size  Location     Type
 37971 ;;                  1  [STACK] void 
 37972 ;; Registers used:
 37973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37974 ;; Tracked objects:
 37975 ;;		On entry : 0/0
 37976 ;;		On exit  : 0/0
 37977 ;;		Unchanged: 0/0
 37978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37983 ;;Total ram usage:        0 bytes
 37984 ;; Hardware stack levels used:    1
 37985 ;; Hardware stack levels required when called:   16
 37986 ;; This function calls:
 37987 ;;		_PWM8_LoadDutyValue
 37988 ;; This function is called by:
 37989 ;;		_check_help
 37990 ;; This function uses a reentrant model
 37991 ;;
 37992                           
 37993                           	psect	text132
 37994  002CC2                     __ptext132:
 37995                           	opt callstack 0
 37996  002CC2                     _mode_lamp_bright:
 37997                           	opt callstack 13
 37998                           
 37999                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 38000                           
 38001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38002                           ;incstack = 0
 38003  002CC2  0E2C               	movlw	44
 38004  002CC4  6EE6               	movwf	postinc1,c
 38005  002CC6  0E01               	movlw	1
 38006  002CC8  6EE6               	movwf	postinc1,c
 38007  002CCA  ECBF  F010         	call	_PWM8_LoadDutyValue	;wreg free
 38008                           
 38009                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 38010  002CCE  0012               	return		;funcret
 38011  002CD0                     __end_of_mode_lamp_bright:
 38012                           	opt callstack 0
 38013                           
 38014 ;; *************** function _PWM8_LoadDutyValue *****************
 38015 ;; Defined at:
 38016 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 38017 ;; Parameters:    Size  Location     Type
 38018 ;;  dutyValue       2  [STACK] unsigned short 
 38019 ;; Auto vars:     Size  Location     Type
 38020 ;;		None
 38021 ;; Return value:  Size  Location     Type
 38022 ;;                  1  [STACK] void 
 38023 ;; Registers used:
 38024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38025 ;; Tracked objects:
 38026 ;;		On entry : 0/2
 38027 ;;		On exit  : 0/0
 38028 ;;		Unchanged: 0/0
 38029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38034 ;;Total ram usage:        0 bytes
 38035 ;; Hardware stack levels used:    1
 38036 ;; Hardware stack levels required when called:   15
 38037 ;; This function calls:
 38038 ;;		Nothing
 38039 ;; This function is called by:
 38040 ;;		_mode_lamp_dim
 38041 ;;		_mode_lamp_bright
 38042 ;; This function uses a reentrant model
 38043 ;;
 38044                           
 38045                           	psect	text133
 38046  00217E                     __ptext133:
 38047                           	opt callstack 0
 38048  00217E                     _PWM8_LoadDutyValue:
 38049                           	opt callstack 14
 38050                           
 38051                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 38052                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38053                           
 38054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38055                           ;incstack = 0
 38056  00217E  0EFE               	movlw	-2
 38057  002180  006F FF8C  F034    	movff	plusw1,btemp+10
 38058  002186  0EFF               	movlw	-1
 38059  002188  006F FF8C  F035    	movff	plusw1,btemp+11
 38060  00218E  90D8               	bcf	status,0,c
 38061  002190  3235               	rrcf	(btemp+11)^0,f,c
 38062  002192  3234               	rrcf	(btemp+10)^0,f,c
 38063  002194  90D8               	bcf	status,0,c
 38064  002196  3235               	rrcf	(btemp+11)^0,f,c
 38065  002198  3234               	rrcf	(btemp+10)^0,f,c
 38066  00219A  5034               	movf	(btemp+10)^0,w,c
 38067  00219C  6E61               	movwf	97,c	;volatile
 38068                           
 38069                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 38070                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38071  00219E  0EFE               	movlw	-2
 38072  0021A0  006F FF8C  F035    	movff	plusw1,btemp+11
 38073  0021A6  0E03               	movlw	3
 38074  0021A8  1635               	andwf	(btemp+11)^0,f,c
 38075  0021AA  0E06               	movlw	6
 38076  0021AC  6E2A               	movwf	btemp^0,c
 38077  0021AE                     u12245:
 38078  0021AE  90D8               	bcf	status,0,c
 38079  0021B0  3635               	rlcf	(btemp+11)^0,f,c
 38080  0021B2  2E2A               	decfsz	btemp^0,f,c
 38081  0021B4  D7FC               	goto	u12245
 38082  0021B6  5035               	movf	(btemp+11)^0,w,c
 38083  0021B8  6E60               	movwf	96,c	;volatile
 38084                           
 38085                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38086  0021BA  52E5               	movf	postdec1,f,c
 38087  0021BC  52E5               	movf	postdec1,f,c
 38088  0021BE  0012               	return		;funcret
 38089  0021C0                     __end_of_PWM8_LoadDutyValue:
 38090                           	opt callstack 0
 38091                           
 38092 ;; *************** function _help_button *****************
 38093 ;; Defined at:
 38094 ;;		line 26 in file "mconfig.c"
 38095 ;; Parameters:    Size  Location     Type
 38096 ;;		None
 38097 ;; Auto vars:     Size  Location     Type
 38098 ;;		None
 38099 ;; Return value:  Size  Location     Type
 38100 ;;                  1  [STACK] _Bool 
 38101 ;; Registers used:
 38102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38103 ;; Tracked objects:
 38104 ;;		On entry : 0/2
 38105 ;;		On exit  : 0/0
 38106 ;;		Unchanged: 0/0
 38107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38112 ;;Total ram usage:        0 bytes
 38113 ;; Hardware stack levels used:    1
 38114 ;; Hardware stack levels required when called:   16
 38115 ;; This function calls:
 38116 ;;		_StartTimer
 38117 ;;		_TimerDone
 38118 ;; This function is called by:
 38119 ;;		_check_help
 38120 ;; This function uses a reentrant model
 38121 ;;
 38122                           
 38123                           	psect	text134
 38124  0023B4                     __ptext134:
 38125                           	opt callstack 0
 38126  0023B4                     _help_button:
 38127                           	opt callstack 13
 38128                           
 38129                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 38130                           
 38131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38132                           ;incstack = 0
 38133  0023B4  B0CB               	btfsc	203,0,c	;volatile
 38134  0023B6  D00C               	goto	l1824
 38135                           
 38136                           ;mconfig.c: 29:   V.help = 1;
 38137  0023B8  0102               	movlb	2	; () banked
 38138  0023BA  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 38139                           
 38140                           ; BSR set to: 2
 38141                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 38142  0023BC  0E08               	movlw	8
 38143  0023BE  6EE6               	movwf	postinc1,c
 38144  0023C0  ECAD  F013         	call	_TimerDone	;wreg free
 38145  0023C4  502A               	movf	btemp^0,w,c
 38146  0023C6  B4D8               	btfsc	status,2,c
 38147  0023C8  D003               	goto	l1824
 38148                           
 38149                           ;mconfig.c: 31:    return 1;
 38150  0023CA  0E01               	movlw	1
 38151  0023CC  6E2A               	movwf	btemp^0,c
 38152  0023CE  0012               	return	
 38153  0023D0                     l1824:
 38154                           
 38155                           ;mconfig.c: 34:  if (!V.help)
 38156  0023D0  0102               	movlb	2	; () banked
 38157  0023D2  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 38158  0023D4  D008               	goto	l13644
 38159                           
 38160                           ; BSR set to: 2
 38161                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 38162  0023D6  0E2C               	movlw	44
 38163  0023D8  6EE6               	movwf	postinc1,c
 38164  0023DA  0E01               	movlw	1
 38165  0023DC  6EE6               	movwf	postinc1,c
 38166  0023DE  0E08               	movlw	8
 38167  0023E0  6EE6               	movwf	postinc1,c
 38168  0023E2  EC20  F011         	call	_StartTimer	;wreg free
 38169  0023E6                     l13644:
 38170                           
 38171                           ;mconfig.c: 37:  return 0;
 38172  0023E6  0E00               	movlw	0
 38173  0023E8  6E2A               	movwf	btemp^0,c
 38174                           
 38175                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 38176  0023EA  0012               	return		;funcret
 38177  0023EC                     __end_of_help_button:
 38178                           	opt callstack 0
 38179                           
 38180 ;; *************** function _TimerDone *****************
 38181 ;; Defined at:
 38182 ;;		line 20 in file "timers.c"
 38183 ;; Parameters:    Size  Location     Type
 38184 ;;  timer           1  [STACK] const unsigned char 
 38185 ;; Auto vars:     Size  Location     Type
 38186 ;;		None
 38187 ;; Return value:  Size  Location     Type
 38188 ;;                  1  [STACK] _Bool 
 38189 ;; Registers used:
 38190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38191 ;; Tracked objects:
 38192 ;;		On entry : 0/2
 38193 ;;		On exit  : 0/0
 38194 ;;		Unchanged: 0/0
 38195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38200 ;;Total ram usage:        0 bytes
 38201 ;; Hardware stack levels used:    1
 38202 ;; Hardware stack levels required when called:   15
 38203 ;; This function calls:
 38204 ;;		Nothing
 38205 ;; This function is called by:
 38206 ;;		_main
 38207 ;;		_WaitMs
 38208 ;;		_help_button
 38209 ;;		_check_help
 38210 ;;		_set_display_info
 38211 ;;		_update_adc_result
 38212 ;;		_esr_check
 38213 ;; This function uses a reentrant model
 38214 ;;
 38215                           
 38216                           	psect	text135
 38217  00275A                     __ptext135:
 38218                           	opt callstack 0
 38219  00275A                     _TimerDone:
 38220                           	opt callstack 14
 38221                           
 38222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38223                           ;incstack = 0
 38224  00275A  0004               	clrwdt		;# 
 38225                           
 38226                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 38227                           ;stkvar	_timer @ sp[(0)+-1]
 38228  00275C  0EFF               	movlw	-1
 38229  00275E  50E3               	movf	plusw1,w,c
 38230  002760  0D02               	mullw	2
 38231  002762  0EBC               	movlw	low _tickCount
 38232  002764  24F3               	addwf	243,w,c
 38233  002766  6ED9               	movwf	fsr2l,c
 38234  002768  0E02               	movlw	high _tickCount
 38235  00276A  20F4               	addwfc	prodh,w,c
 38236  00276C  6EDA               	movwf	fsr2h,c
 38237  00276E  50DE               	movf	postinc2,w,c
 38238  002770  10DE               	iorwf	postinc2,w,c
 38239  002772  A4D8               	btfss	status,2,c
 38240  002774  D002               	goto	l12400
 38241                           
 38242                           ;timers.c: 24:   return 1;
 38243  002776  0E01               	movlw	1
 38244  002778  D001               	goto	L42
 38245  00277A                     l12400:
 38246                           
 38247                           ;timers.c: 26:  return 0;
 38248  00277A  0E00               	movlw	0
 38249  00277C                     L42:
 38250  00277C  6E2A               	movwf	btemp^0,c
 38251                           
 38252                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 38253  00277E  52E5               	movf	postdec1,f,c
 38254  002780  0012               	return		;funcret
 38255  002782                     __end_of_TimerDone:
 38256                           	opt callstack 0
 38257                           
 38258 ;; *************** function _StartTimer *****************
 38259 ;; Defined at:
 38260 ;;		line 12 in file "timers.c"
 38261 ;; Parameters:    Size  Location     Type
 38262 ;;  timer           1  [STACK] const unsigned char 
 38263 ;;  count           2  [STACK] const unsigned short 
 38264 ;; Auto vars:     Size  Location     Type
 38265 ;;		None
 38266 ;; Return value:  Size  Location     Type
 38267 ;;                  1  [STACK] void 
 38268 ;; Registers used:
 38269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38270 ;; Tracked objects:
 38271 ;;		On entry : 0/0
 38272 ;;		On exit  : 0/0
 38273 ;;		Unchanged: 0/0
 38274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38279 ;;Total ram usage:        0 bytes
 38280 ;; Hardware stack levels used:    1
 38281 ;; Hardware stack levels required when called:   15
 38282 ;; This function calls:
 38283 ;;		Nothing
 38284 ;; This function is called by:
 38285 ;;		_main
 38286 ;;		_WaitMs
 38287 ;;		_help_button
 38288 ;;		_check_help
 38289 ;;		_update_adc_result
 38290 ;;		_calc_bsoc
 38291 ;;		_esr_check
 38292 ;; This function uses a reentrant model
 38293 ;;
 38294                           
 38295                           	psect	text136
 38296  002240                     __ptext136:
 38297                           	opt callstack 0
 38298  002240                     _StartTimer:
 38299                           	opt callstack 0
 38300                           
 38301                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 38302                           ;stkvar	_count @ sp[(0)+-3]
 38303                           
 38304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38305                           ;incstack = 0
 38306 ;; hardware stack exceeded
 38307  002240  0EFD               	movlw	-3
 38308  002242  006F FF8C  F034    	movff	plusw1,btemp+10
 38309  002248  0EFE               	movlw	-2
 38310  00224A  006F FF8C  F035    	movff	plusw1,btemp+11
 38311  002250  90D8               	bcf	status,0,c
 38312  002252  3434               	rlcf	(btemp+10)^0,w,c
 38313  002254  6E32               	movwf	(btemp+8)^0,c
 38314  002256  3435               	rlcf	(btemp+11)^0,w,c
 38315  002258  6E33               	movwf	(btemp+9)^0,c
 38316                           
 38317                           ;stkvar	_timer @ sp[(0)+-1]
 38318  00225A  0EFF               	movlw	-1
 38319  00225C  50E3               	movf	plusw1,w,c
 38320  00225E  0D02               	mullw	2
 38321  002260  0EBC               	movlw	low _tickCount
 38322  002262  24F3               	addwf	243,w,c
 38323  002264  6ED9               	movwf	fsr2l,c
 38324  002266  0E02               	movlw	high _tickCount
 38325  002268  20F4               	addwfc	prodh,w,c
 38326  00226A  6EDA               	movwf	fsr2h,c
 38327  00226C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 38328  002272  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 38329                           
 38330                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 38331  002278  52E5               	movf	postdec1,f,c
 38332  00227A  52E5               	movf	postdec1,f,c
 38333  00227C  52E5               	movf	postdec1,f,c
 38334  00227E  0012               	return		;funcret
 38335  002280                     __end_of_StartTimer:
 38336                           	opt callstack 0
 38337                           
 38338 ;; *************** function _display_info *****************
 38339 ;; Defined at:
 38340 ;;		line 196 in file "mconfig.c"
 38341 ;; Parameters:    Size  Location     Type
 38342 ;;		None
 38343 ;; Auto vars:     Size  Location     Type
 38344 ;;		None
 38345 ;; Return value:  Size  Location     Type
 38346 ;;                  1  [STACK] enum E16677
 38347 ;; Registers used:
 38348 ;;		btemp
 38349 ;; Tracked objects:
 38350 ;;		On entry : 0/2
 38351 ;;		On exit  : 0/0
 38352 ;;		Unchanged: 0/0
 38353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38358 ;;Total ram usage:        0 bytes
 38359 ;; Hardware stack levels used:    1
 38360 ;; Hardware stack levels required when called:   15
 38361 ;; This function calls:
 38362 ;;		Nothing
 38363 ;; This function is called by:
 38364 ;;		_check_help
 38365 ;; This function uses a reentrant model
 38366 ;;
 38367                           
 38368                           	psect	text137
 38369  002D46                     __ptext137:
 38370                           	opt callstack 0
 38371  002D46                     _display_info:
 38372                           	opt callstack 14
 38373                           
 38374                           ;mconfig.c: 198:  return V.response.info;
 38375                           
 38376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38377                           ;incstack = 0
 38378  002D46  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 38379                           
 38380                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38381  002D4C  0012               	return		;funcret
 38382  002D4E                     __end_of_display_info:
 38383                           	opt callstack 0
 38384                           
 38385 ;; *************** function _display_help *****************
 38386 ;; Defined at:
 38387 ;;		line 201 in file "mconfig.c"
 38388 ;; Parameters:    Size  Location     Type
 38389 ;;		None
 38390 ;; Auto vars:     Size  Location     Type
 38391 ;;		None
 38392 ;; Return value:  Size  Location     Type
 38393 ;;                  1  [STACK] enum E16677
 38394 ;; Registers used:
 38395 ;;		btemp
 38396 ;; Tracked objects:
 38397 ;;		On entry : 3F/2
 38398 ;;		On exit  : 0/0
 38399 ;;		Unchanged: 0/0
 38400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38405 ;;Total ram usage:        0 bytes
 38406 ;; Hardware stack levels used:    1
 38407 ;; Hardware stack levels required when called:   15
 38408 ;; This function calls:
 38409 ;;		Nothing
 38410 ;; This function is called by:
 38411 ;;		_check_help
 38412 ;; This function uses a reentrant model
 38413 ;;
 38414                           
 38415                           	psect	text138
 38416  002D4E                     __ptext138:
 38417                           	opt callstack 0
 38418  002D4E                     _display_help:
 38419                           	opt callstack 14
 38420                           
 38421                           ;mconfig.c: 203:  return V.response.help_temp;
 38422                           
 38423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38424                           ;incstack = 0
 38425  002D4E  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 38426                           
 38427                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38428  002D54  0012               	return		;funcret
 38429  002D56                     __end_of_display_help:
 38430                           	opt callstack 0
 38431                           
 38432 ;; *************** function _check_enter_button *****************
 38433 ;; Defined at:
 38434 ;;		line 49 in file "hid.c"
 38435 ;; Parameters:    Size  Location     Type
 38436 ;;  h               2  [STACK] PTR struct H_data
 38437 ;;		 -> H(9), 
 38438 ;; Auto vars:     Size  Location     Type
 38439 ;;		None
 38440 ;; Return value:  Size  Location     Type
 38441 ;;                  1  [STACK] _Bool 
 38442 ;; Registers used:
 38443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 38444 ;; Tracked objects:
 38445 ;;		On entry : 0/0
 38446 ;;		On exit  : 0/0
 38447 ;;		Unchanged: 0/0
 38448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38453 ;;Total ram usage:        0 bytes
 38454 ;; Hardware stack levels used:    1
 38455 ;; Hardware stack levels required when called:   15
 38456 ;; This function calls:
 38457 ;;		Nothing
 38458 ;; This function is called by:
 38459 ;;		_main
 38460 ;; This function uses a reentrant model
 38461 ;;
 38462                           
 38463                           	psect	text139
 38464  001774                     __ptext139:
 38465                           	opt callstack 0
 38466  001774                     _check_enter_button:
 38467                           	opt callstack 15
 38468                           
 38469                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 38470                           ;stkvar	_h @ sp[(0)+-2]
 38471                           
 38472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38473                           ;incstack = 0
 38474  001774  0EFE               	movlw	-2
 38475  001776  006F FF8C  F034    	movff	plusw1,btemp+10
 38476  00177C  0EFF               	movlw	-1
 38477  00177E  006F FF8C  F035    	movff	plusw1,btemp+11
 38478  001784  0E04               	movlw	4
 38479  001786  2434               	addwf	(btemp+10)^0,w,c
 38480  001788  6ED9               	movwf	fsr2l,c
 38481  00178A  0E00               	movlw	0
 38482  00178C  2035               	addwfc	(btemp+11)^0,w,c
 38483  00178E  6EDA               	movwf	fsr2h,c
 38484  001790  50DF               	movf	indf2,w,c
 38485  001792  A4D8               	btfss	status,2,c
 38486  001794  D023               	goto	l17116
 38487                           
 38488                           ;stkvar	_h @ sp[(0)+-2]
 38489  001796  0EFE               	movlw	-2
 38490  001798  006F FF8C  F034    	movff	plusw1,btemp+10
 38491  00179E  0EFF               	movlw	-1
 38492  0017A0  006F FF8C  F035    	movff	plusw1,btemp+11
 38493  0017A6  0E05               	movlw	5
 38494  0017A8  2434               	addwf	(btemp+10)^0,w,c
 38495  0017AA  6ED9               	movwf	fsr2l,c
 38496  0017AC  0E00               	movlw	0
 38497  0017AE  2035               	addwfc	(btemp+11)^0,w,c
 38498  0017B0  6EDA               	movwf	fsr2h,c
 38499  0017B2  50DF               	movf	indf2,w,c
 38500  0017B4  A4D8               	btfss	status,2,c
 38501  0017B6  D012               	goto	l17116
 38502                           
 38503                           ;hid.c: 52:   h->wait_enter = 1;
 38504                           ;stkvar	_h @ sp[(0)+-2]
 38505  0017B8  0EFE               	movlw	-2
 38506  0017BA  006F FF8C  F034    	movff	plusw1,btemp+10
 38507  0017C0  0EFF               	movlw	-1
 38508  0017C2  006F FF8C  F035    	movff	plusw1,btemp+11
 38509  0017C8  0E04               	movlw	4
 38510  0017CA  2434               	addwf	(btemp+10)^0,w,c
 38511  0017CC  6ED9               	movwf	fsr2l,c
 38512  0017CE  0E00               	movlw	0
 38513  0017D0  2035               	addwfc	(btemp+11)^0,w,c
 38514  0017D2  6EDA               	movwf	fsr2h,c
 38515  0017D4  0E01               	movlw	1
 38516  0017D6  6EDF               	movwf	indf2,c
 38517                           
 38518                           ;hid.c: 53:   return 1;
 38519  0017D8  0E01               	movlw	1
 38520  0017DA  D001               	goto	L43
 38521  0017DC                     l17116:
 38522                           
 38523                           ;hid.c: 55:  return 0;
 38524  0017DC  0E00               	movlw	0
 38525  0017DE                     L43:
 38526  0017DE  6E2A               	movwf	btemp^0,c
 38527                           
 38528                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38529  0017E0  52E5               	movf	postdec1,f,c
 38530  0017E2  52E5               	movf	postdec1,f,c
 38531  0017E4  0012               	return		;funcret
 38532  0017E6                     __end_of_check_enter_button:
 38533                           	opt callstack 0
 38534                           
 38535 ;; *************** function _calc_ror_data *****************
 38536 ;; Defined at:
 38537 ;;		line 103 in file "mbmc.c"
 38538 ;; Parameters:    Size  Location     Type
 38539 ;;		None
 38540 ;; Auto vars:     Size  Location     Type
 38541 ;;		None
 38542 ;; Return value:  Size  Location     Type
 38543 ;;                  1  [STACK] void 
 38544 ;; Registers used:
 38545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38546 ;; Tracked objects:
 38547 ;;		On entry : 0/0
 38548 ;;		On exit  : 0/0
 38549 ;;		Unchanged: 0/0
 38550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38555 ;;Total ram usage:        0 bytes
 38556 ;; Hardware stack levels used:    1
 38557 ;; Hardware stack levels required when called:   18
 38558 ;; This function calls:
 38559 ;;		___flge
 38560 ;;		___flsub
 38561 ;;		_conv_raw_result
 38562 ;;		_fabsf
 38563 ;; This function is called by:
 38564 ;;		_main
 38565 ;; This function uses a reentrant model
 38566 ;;
 38567                           
 38568                           	psect	text140
 38569  01E51A                     __ptext140:
 38570                           	opt callstack 0
 38571  01E51A                     _calc_ror_data:
 38572                           	opt callstack 12
 38573                           
 38574                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 38575                           
 38576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38577                           ;incstack = 0
 38578  01E51A  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 38579  01E520  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 38580  01E526  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 38581  01E52C  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 38582  01E532  0E00               	movlw	0
 38583  01E534  6EE6               	movwf	postinc1,c
 38584  01E536  0E00               	movlw	0
 38585  01E538  6EE6               	movwf	postinc1,c
 38586  01E53A  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 38587  01E53E  0060  F0AB  FFE6   	movff	btemp,postinc1
 38588  01E544  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38589  01E54A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38590  01E550  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38591  01E556  EC7A  F010         	call	___flsub	;wreg free
 38592  01E55A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38593  01E560  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38594  01E566  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38595  01E56C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38596  01E572  ECBC  F005         	call	_fabsf	;wreg free
 38597  01E576  0060  F0A8  FBF1   	movff	btemp,_C+112	;volatile
 38598  01E57C  0060  F0AC  FBF2   	movff	btemp+1,_C+113	;volatile
 38599  01E582  0060  F0B0  FBF3   	movff	btemp+2,_C+114	;volatile
 38600  01E588  0060  F0B4  FBF4   	movff	btemp+3,_C+115	;volatile
 38601                           
 38602                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 38603  01E58E  0E00               	movlw	0
 38604  01E590  6EE6               	movwf	postinc1,c
 38605  01E592  0E00               	movlw	0
 38606  01E594  6EE6               	movwf	postinc1,c
 38607  01E596  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 38608  01E59A  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 38609  01E5A0  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 38610  01E5A6  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 38611  01E5AC  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 38612                           
 38613                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 38614  01E5B2  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 38615  01E5B8  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 38616  01E5BE  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 38617  01E5C4  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 38618  01E5CA  0E00               	movlw	0
 38619  01E5CC  6EE6               	movwf	postinc1,c
 38620  01E5CE  0E04               	movlw	4
 38621  01E5D0  6EE6               	movwf	postinc1,c
 38622  01E5D2  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 38623  01E5D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 38624  01E5DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38625  01E5E2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38626  01E5E8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38627  01E5EE  EC7A  F010         	call	___flsub	;wreg free
 38628  01E5F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 38629  01E5F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38630  01E5FE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38631  01E604  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38632  01E60A  ECBC  F005         	call	_fabsf	;wreg free
 38633  01E60E  0060  F0A8  FBED   	movff	btemp,_C+108	;volatile
 38634  01E614  0060  F0AC  FBEE   	movff	btemp+1,_C+109	;volatile
 38635  01E61A  0060  F0B0  FBEF   	movff	btemp+2,_C+110	;volatile
 38636  01E620  0060  F0B4  FBF0   	movff	btemp+3,_C+111	;volatile
 38637                           
 38638                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 38639  01E626  0EE7               	movlw	231
 38640  01E628  6EE6               	movwf	postinc1,c
 38641  01E62A  0E1D               	movlw	29
 38642  01E62C  6EE6               	movwf	postinc1,c
 38643  01E62E  0EA7               	movlw	167
 38644  01E630  6EE6               	movwf	postinc1,c
 38645  01E632  0E3B               	movlw	59
 38646  01E634  6EE6               	movwf	postinc1,c
 38647  01E636  EE22  F3ED         	lfsr	2,_C+108	;volatile
 38648  01E63A  006F FF7B FFE6     	movff	postinc2,postinc1
 38649  01E640  006F FF7B FFE6     	movff	postinc2,postinc1
 38650  01E646  006F FF7B FFE6     	movff	postinc2,postinc1
 38651  01E64C  006F FF7B FFE6     	movff	postinc2,postinc1
 38652  01E652  EC35  F0F6         	call	___flge	;wreg free
 38653  01E656  B02A               	btfsc	btemp& (0+255),0,c
 38654  01E658  D010               	goto	l14234
 38655                           
 38656                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 38657  01E65A  0EB0               	movlw	176
 38658  01E65C  006F FFA0  FBED    	movff	wreg,_C+108	;volatile
 38659  01E662  0E03               	movlw	3
 38660  01E664  006F FFA0  FBEE    	movff	wreg,_C+109	;volatile
 38661  01E66A  0E67               	movlw	103
 38662  01E66C  006F FFA0  FBEF    	movff	wreg,_C+110	;volatile
 38663  01E672  0E3C               	movlw	60
 38664  01E674  006F FFA0  FBF0    	movff	wreg,_C+111	;volatile
 38665  01E67A                     l14234:
 38666                           
 38667                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 38668  01E67A  0E00               	movlw	0
 38669  01E67C  6EE6               	movwf	postinc1,c
 38670  01E67E  0E04               	movlw	4
 38671  01E680  6EE6               	movwf	postinc1,c
 38672  01E682  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 38673  01E686  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 38674  01E68C  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 38675  01E692  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 38676  01E698  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 38677                           
 38678                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 38679  01E69E  0012               	return		;funcret
 38680  01E6A0                     __end_of_calc_ror_data:
 38681                           	opt callstack 0
 38682                           
 38683 ;; *************** function _fabsf *****************
 38684 ;; Defined at:
 38685 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 38686 ;; Parameters:    Size  Location     Type
 38687 ;;  x               4  [STACK] float 
 38688 ;; Auto vars:     Size  Location     Type
 38689 ;;  u               4  [STACK] struct .
 38690 ;; Return value:  Size  Location     Type
 38691 ;;                  4  [STACK] float 
 38692 ;; Registers used:
 38693 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38694 ;; Tracked objects:
 38695 ;;		On entry : 0/0
 38696 ;;		On exit  : 0/0
 38697 ;;		Unchanged: 0/0
 38698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38703 ;;Total ram usage:        0 bytes
 38704 ;; Hardware stack levels used:    1
 38705 ;; Hardware stack levels required when called:   15
 38706 ;; This function calls:
 38707 ;;		Nothing
 38708 ;; This function is called by:
 38709 ;;		_main
 38710 ;;		_calc_ror_data
 38711 ;;		_calc_bsoc
 38712 ;;		_esr_check
 38713 ;; This function uses a reentrant model
 38714 ;;
 38715                           
 38716                           	psect	text141
 38717  000B78                     __ptext141:
 38718                           	opt callstack 0
 38719  000B78                     _fabsf:
 38720                           	opt callstack 0
 38721                           
 38722                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38723  000B78  52E6               	movf	postinc1,f,c
 38724  000B7A  52E6               	movf	postinc1,f,c
 38725  000B7C  52E6               	movf	postinc1,f,c
 38726  000B7E  52E6               	movf	postinc1,f,c
 38727                           
 38728                           ;incstack = 0
 38729 ;; hardware stack exceeded
 38730  000B80  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 38731  000B86  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 38732  000B8C  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 38733  000B92  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 38734                           
 38735                           ;stkvar	_u @ sp[(-4)+0]
 38736  000B98  0EFC               	movlw	-4
 38737  000B9A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38738  000BA0  0EFD               	movlw	-3
 38739  000BA2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38740  000BA8  0EFE               	movlw	-2
 38741  000BAA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38742  000BB0  0EFF               	movlw	-1
 38743  000BB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38744                           
 38745                           ;stkvar	_x @ sp[(-4)+-4]
 38746  000BB8  0EF8               	movlw	-8
 38747  000BBA  006F FF8C  F032    	movff	plusw1,btemp+8
 38748  000BC0  0EF9               	movlw	-7
 38749  000BC2  006F FF8C  F033    	movff	plusw1,btemp+9
 38750  000BC8  0EFA               	movlw	-6
 38751  000BCA  006F FF8C  F034    	movff	plusw1,btemp+10
 38752  000BD0  0EFB               	movlw	-5
 38753  000BD2  006F FF8C  F035    	movff	plusw1,btemp+11
 38754                           
 38755                           ;stkvar	_u @ sp[(-4)+0]
 38756  000BD8  0EFC               	movlw	-4
 38757  000BDA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38758  000BE0  0EFD               	movlw	-3
 38759  000BE2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38760  000BE8  0EFE               	movlw	-2
 38761  000BEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38762  000BF0  0EFF               	movlw	-1
 38763  000BF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38764                           
 38765                           ;stkvar	_u @ sp[(-4)+0]
 38766  000BF8  0EFF               	movlw	-1
 38767  000BFA  9EE3               	bcf	plusw1,7,c
 38768                           
 38769                           ;stkvar	_u @ sp[(-4)+0]
 38770  000BFC  0EFC               	movlw	-4
 38771  000BFE  006F FF8C  F02A    	movff	plusw1,btemp
 38772  000C04  0EFD               	movlw	-3
 38773  000C06  006F FF8C  F02B    	movff	plusw1,btemp+1
 38774  000C0C  0EFE               	movlw	-2
 38775  000C0E  006F FF8C  F02C    	movff	plusw1,btemp+2
 38776  000C14  0EFF               	movlw	-1
 38777  000C16  006F FF8C  F02D    	movff	plusw1,btemp+3
 38778                           
 38779                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 38780  000C1C  0EF8               	movlw	248
 38781  000C1E  26E1               	addwf	fsr1l,f,c
 38782  000C20  0EFF               	movlw	255
 38783  000C22  22E2               	addwfc	fsr1h,f,c
 38784  000C24  0012               	return		;funcret
 38785  000C26                     __end_of_fabsf:
 38786                           	opt callstack 0
 38787                           
 38788 ;; *************** function _conv_raw_result *****************
 38789 ;; Defined at:
 38790 ;;		line 145 in file "daq.c"
 38791 ;; Parameters:    Size  Location     Type
 38792 ;;  chan            1  [STACK] const enum E16605
 38793 ;;  to_what         1  [STACK] const enum E16996
 38794 ;; Auto vars:     Size  Location     Type
 38795 ;;		None
 38796 ;; Return value:  Size  Location     Type
 38797 ;;                  4  [STACK] float 
 38798 ;; Registers used:
 38799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38800 ;; Tracked objects:
 38801 ;;		On entry : 0/0
 38802 ;;		On exit  : 0/0
 38803 ;;		Unchanged: 0/0
 38804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38809 ;;Total ram usage:        0 bytes
 38810 ;; Hardware stack levels used:    1
 38811 ;; Hardware stack levels required when called:   17
 38812 ;; This function calls:
 38813 ;;		___fldiv
 38814 ;;		___flmul
 38815 ;;		___flsub
 38816 ;;		___xxtofl
 38817 ;;		_get_raw_result
 38818 ;;		_nanf
 38819 ;; This function is called by:
 38820 ;;		_main
 38821 ;;		_convert_adc_data
 38822 ;;		_calc_ror_data
 38823 ;;		_check_day_time
 38824 ;;		_init_bsoc
 38825 ;;		_esr_check
 38826 ;; This function uses a reentrant model
 38827 ;;
 38828                           
 38829                           	psect	text142
 38830  018D58                     __ptext142:
 38831                           	opt callstack 0
 38832  018D58                     _conv_raw_result:
 38833                           	opt callstack 0
 38834                           
 38835                           ;daq.c: 145: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 146: {;daq.c: 148:  switch (to_what) {
 38836                           
 38837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38838                           ;incstack = 0
 38839 ;; hardware stack exceeded
 38840  018D58  D24A               	goto	l12382
 38841  018D5A                     l12328:
 38842                           
 38843                           ;daq.c: 150:   if (!(0b0011110001110111 >> chan & 0x1))
 38844                           ;stkvar	_chan @ sp[(0)+-1]
 38845  018D5A  0EFF               	movlw	-1
 38846  018D5C  006F FF8C  F035    	movff	plusw1,btemp+11
 38847  018D62  0E77               	movlw	119
 38848  018D64  6E32               	movwf	(btemp+8)^0,c
 38849  018D66  0E3C               	movlw	60
 38850  018D68  6E33               	movwf	(btemp+9)^0,c
 38851  018D6A  2A35               	incf	(btemp+11)^0,f,c
 38852  018D6C  D003               	goto	u11614
 38853  018D6E                     u11615:
 38854  018D6E  3433               	rlcf	(btemp+9)^0,w,c
 38855  018D70  3233               	rrcf	(btemp+9)^0,f,c
 38856  018D72  3232               	rrcf	(btemp+8)^0,f,c
 38857  018D74                     u11614:
 38858  018D74  2E35               	decfsz	(btemp+11)^0,f,c
 38859  018D76  D7FB               	goto	u11615
 38860  018D78  B032               	btfsc	(btemp+8)^0,0,c
 38861  018D7A  D007               	goto	l12334
 38862                           
 38863                           ;daq.c: 151:    return nanf("");
 38864  018D7C  0E75               	movlw	low (STR_95+126)
 38865  018D7E  6EE6               	movwf	postinc1,c
 38866  018D80  0EFA               	movlw	high (STR_95+126)
 38867  018D82  6EE6               	movwf	postinc1,c
 38868  018D84  ECC2  F00D         	call	_nanf	;wreg free
 38869  018D88  D242               	goto	l1985
 38870  018D8A                     l12334:
 38871                           
 38872                           ;daq.c: 153:   if (0b0000000000000011 >> chan & 0x1) {
 38873                           ;stkvar	_chan @ sp[(0)+-1]
 38874  018D8A  0EFF               	movlw	-1
 38875  018D8C  006F FF8C  F035    	movff	plusw1,btemp+11
 38876  018D92  0E03               	movlw	3
 38877  018D94  6E32               	movwf	(btemp+8)^0,c
 38878  018D96  0E00               	movlw	0
 38879  018D98  6E33               	movwf	(btemp+9)^0,c
 38880  018D9A  2A35               	incf	(btemp+11)^0,f,c
 38881  018D9C  D003               	goto	u11634
 38882  018D9E                     u11635:
 38883  018D9E  3433               	rlcf	(btemp+9)^0,w,c
 38884  018DA0  3233               	rrcf	(btemp+9)^0,f,c
 38885  018DA2  3232               	rrcf	(btemp+8)^0,f,c
 38886  018DA4                     u11634:
 38887  018DA4  2E35               	decfsz	(btemp+11)^0,f,c
 38888  018DA6  D7FB               	goto	u11635
 38889  018DA8  A032               	btfss	(btemp+8)^0,0,c
 38890  018DAA  D0F3               	goto	l12348
 38891                           
 38892                           ;daq.c: 154:    if (0b0000000000000001 >> chan & 0x1) {
 38893                           ;stkvar	_chan @ sp[(0)+-1]
 38894  018DAC  0EFF               	movlw	-1
 38895  018DAE  006F FF8C  F035    	movff	plusw1,btemp+11
 38896  018DB4  0E01               	movlw	1
 38897  018DB6  6E32               	movwf	(btemp+8)^0,c
 38898  018DB8  0E00               	movlw	0
 38899  018DBA  6E33               	movwf	(btemp+9)^0,c
 38900  018DBC  2A35               	incf	(btemp+11)^0,f,c
 38901  018DBE  D003               	goto	u11654
 38902  018DC0                     u11655:
 38903  018DC0  3433               	rlcf	(btemp+9)^0,w,c
 38904  018DC2  3233               	rrcf	(btemp+9)^0,f,c
 38905  018DC4  3232               	rrcf	(btemp+8)^0,f,c
 38906  018DC6                     u11654:
 38907  018DC6  2E35               	decfsz	(btemp+11)^0,f,c
 38908  018DC8  D7FB               	goto	u11655
 38909  018DCA  A032               	btfss	(btemp+8)^0,0,c
 38910  018DCC  D071               	goto	l12344
 38911                           
 38912                           ;daq.c: 155:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 38913  018DCE  0060  F4AB  FFE6   	movff	_R+42,postinc1
 38914  018DD4  0060  F4AF  FFE6   	movff	_R+43,postinc1
 38915  018DDA  0060  F4B3  FFE6   	movff	_R+44,postinc1
 38916  018DE0  0060  F4B7  FFE6   	movff	_R+45,postinc1
 38917  018DE6  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 38918  018DEC  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 38919  018DF2  0E00               	movlw	0
 38920  018DF4  BE33               	btfsc	(btemp+9)^0,7,c
 38921  018DF6  0EFF               	movlw	255
 38922  018DF8  6E34               	movwf	(btemp+10)^0,c
 38923  018DFA  6E35               	movwf	(btemp+11)^0,c
 38924  018DFC  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38925  018E02  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38926  018E08  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38927  018E0E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38928  018E14  0E01               	movlw	1
 38929  018E16  6EE6               	movwf	postinc1,c
 38930  018E18  EC9B  F0EC         	call	___xxtofl	;wreg free
 38931  018E1C  0060  F0AB  FFE6   	movff	btemp,postinc1
 38932  018E22  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38933  018E28  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38934  018E2E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38935                           
 38936                           ;stkvar	_chan @ sp[(-8)+-1]
 38937  018E34  0EF7               	movlw	-9
 38938  018E36  50E3               	movf	plusw1,w,c
 38939  018E38  6EE6               	movwf	postinc1,c
 38940  018E3A  ECF6  F011         	call	_get_raw_result	;wreg free
 38941  018E3E  0060  F0A8  F034   	movff	btemp,btemp+10
 38942  018E44  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38943  018E4A  5034               	movf	(btemp+10)^0,w,c
 38944  018E4C  6E2E               	movwf	(btemp+4)^0,c
 38945  018E4E  5035               	movf	(btemp+11)^0,w,c
 38946  018E50  6E2F               	movwf	(btemp+5)^0,c
 38947  018E52  6A30               	clrf	(btemp+6)^0,c
 38948  018E54  6A31               	clrf	(btemp+7)^0,c
 38949  018E56  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38950  018E5C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38951  018E62  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38952  018E68  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38953  018E6E  0E00               	movlw	0
 38954  018E70  6EE6               	movwf	postinc1,c
 38955  018E72  EC9B  F0EC         	call	___xxtofl	;wreg free
 38956  018E76  0060  F0AB  FFE6   	movff	btemp,postinc1
 38957  018E7C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38958  018E82  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38959  018E88  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38960  018E8E  EC7A  F010         	call	___flsub	;wreg free
 38961  018E92  0060  F0AB  FFE6   	movff	btemp,postinc1
 38962  018E98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38963  018E9E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38964  018EA4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38965  018EAA  EC32  F0B3         	call	___flmul	;wreg free
 38966  018EAE  D1AF               	goto	l1985
 38967  018EB0                     l12344:
 38968                           
 38969                           ;daq.c: 157:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 38970  018EB0  0060  F4BB  FFE6   	movff	_R+46,postinc1
 38971  018EB6  0060  F4BF  FFE6   	movff	_R+47,postinc1
 38972  018EBC  0060  F4C3  FFE6   	movff	_R+48,postinc1
 38973  018EC2  0060  F4C7  FFE6   	movff	_R+49,postinc1
 38974  018EC8  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 38975  018ECE  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 38976  018ED4  0E00               	movlw	0
 38977  018ED6  BE33               	btfsc	(btemp+9)^0,7,c
 38978  018ED8  0EFF               	movlw	255
 38979  018EDA  6E34               	movwf	(btemp+10)^0,c
 38980  018EDC  6E35               	movwf	(btemp+11)^0,c
 38981  018EDE  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38982  018EE4  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38983  018EEA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38984  018EF0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38985  018EF6  0E01               	movlw	1
 38986  018EF8  6EE6               	movwf	postinc1,c
 38987  018EFA  EC9B  F0EC         	call	___xxtofl	;wreg free
 38988  018EFE  0060  F0AB  FFE6   	movff	btemp,postinc1
 38989  018F04  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38990  018F0A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38991  018F10  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38992                           
 38993                           ;stkvar	_chan @ sp[(-8)+-1]
 38994  018F16  0EF7               	movlw	-9
 38995  018F18  50E3               	movf	plusw1,w,c
 38996  018F1A  6EE6               	movwf	postinc1,c
 38997  018F1C  ECF6  F011         	call	_get_raw_result	;wreg free
 38998  018F20  0060  F0A8  F034   	movff	btemp,btemp+10
 38999  018F26  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39000  018F2C  5034               	movf	(btemp+10)^0,w,c
 39001  018F2E  6E2E               	movwf	(btemp+4)^0,c
 39002  018F30  5035               	movf	(btemp+11)^0,w,c
 39003  018F32  6E2F               	movwf	(btemp+5)^0,c
 39004  018F34  6A30               	clrf	(btemp+6)^0,c
 39005  018F36  6A31               	clrf	(btemp+7)^0,c
 39006  018F38  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39007  018F3E  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39008  018F44  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39009  018F4A  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39010  018F50  0E00               	movlw	0
 39011  018F52  6EE6               	movwf	postinc1,c
 39012  018F54  EC9B  F0EC         	call	___xxtofl	;wreg free
 39013  018F58  0060  F0AB  FFE6   	movff	btemp,postinc1
 39014  018F5E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39015  018F64  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39016  018F6A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39017  018F70  EC7A  F010         	call	___flsub	;wreg free
 39018  018F74  0060  F0AB  FFE6   	movff	btemp,postinc1
 39019  018F7A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39020  018F80  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39021  018F86  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39022  018F8C  EC32  F0B3         	call	___flmul	;wreg free
 39023  018F90  D13E               	goto	l1985
 39024  018F92                     l12348:
 39025                           
 39026                           ;daq.c: 160:    if (0b0000100000000000 >> chan & 0x1) {
 39027                           ;stkvar	_chan @ sp[(0)+-1]
 39028  018F92  0EFF               	movlw	-1
 39029  018F94  006F FF8C  F035    	movff	plusw1,btemp+11
 39030  018F9A  0E00               	movlw	0
 39031  018F9C  6E32               	movwf	(btemp+8)^0,c
 39032  018F9E  0E08               	movlw	8
 39033  018FA0  6E33               	movwf	(btemp+9)^0,c
 39034  018FA2  2A35               	incf	(btemp+11)^0,f,c
 39035  018FA4  D003               	goto	u11674
 39036  018FA6                     u11675:
 39037  018FA6  3433               	rlcf	(btemp+9)^0,w,c
 39038  018FA8  3233               	rrcf	(btemp+9)^0,f,c
 39039  018FAA  3232               	rrcf	(btemp+8)^0,f,c
 39040  018FAC                     u11674:
 39041  018FAC  2E35               	decfsz	(btemp+11)^0,f,c
 39042  018FAE  D7FB               	goto	u11675
 39043  018FB0  A032               	btfss	(btemp+8)^0,0,c
 39044  018FB2  D008               	goto	l12356
 39045                           
 39046                           ;daq.c: 161:     return 25.0;
 39047  018FB4  0E00               	movlw	0
 39048  018FB6  6E2A               	movwf	btemp^0,c
 39049  018FB8  0E00               	movlw	0
 39050  018FBA  6E2B               	movwf	(btemp+1)^0,c
 39051  018FBC  0EC8               	movlw	200
 39052  018FBE  6E2C               	movwf	(btemp+2)^0,c
 39053  018FC0  0E41               	movlw	65
 39054  018FC2  D113               	goto	L44
 39055  018FC4                     l12356:
 39056                           
 39057                           ;daq.c: 163:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39058  018FC4  0E00               	movlw	0
 39059  018FC6  6EE6               	movwf	postinc1,c
 39060  018FC8  0E00               	movlw	0
 39061  018FCA  6EE6               	movwf	postinc1,c
 39062  018FCC  0E7A               	movlw	122
 39063  018FCE  6EE6               	movwf	postinc1,c
 39064  018FD0  0E44               	movlw	68
 39065  018FD2  6EE6               	movwf	postinc1,c
 39066  018FD4  0E61               	movlw	97
 39067  018FD6  6EE6               	movwf	postinc1,c
 39068  018FD8  0E03               	movlw	3
 39069  018FDA  6EE6               	movwf	postinc1,c
 39070  018FDC  0E84               	movlw	132
 39071  018FDE  6EE6               	movwf	postinc1,c
 39072  018FE0  0E40               	movlw	64
 39073  018FE2  6EE6               	movwf	postinc1,c
 39074                           
 39075                           ;stkvar	_chan @ sp[(-8)+-1]
 39076  018FE4  0EF7               	movlw	-9
 39077  018FE6  50E3               	movf	plusw1,w,c
 39078  018FE8  6EE6               	movwf	postinc1,c
 39079  018FEA  ECF6  F011         	call	_get_raw_result	;wreg free
 39080  018FEE  0060  F0A8  F034   	movff	btemp,btemp+10
 39081  018FF4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39082  018FFA  5034               	movf	(btemp+10)^0,w,c
 39083  018FFC  6E2E               	movwf	(btemp+4)^0,c
 39084  018FFE  5035               	movf	(btemp+11)^0,w,c
 39085  019000  6E2F               	movwf	(btemp+5)^0,c
 39086  019002  6A30               	clrf	(btemp+6)^0,c
 39087  019004  6A31               	clrf	(btemp+7)^0,c
 39088  019006  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39089  01900C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39090  019012  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39091  019018  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39092  01901E  0E00               	movlw	0
 39093  019020  6EE6               	movwf	postinc1,c
 39094  019022  EC9B  F0EC         	call	___xxtofl	;wreg free
 39095  019026  0060  F0AB  FFE6   	movff	btemp,postinc1
 39096  01902C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39097  019032  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39098  019038  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39099  01903E  EC32  F0B3         	call	___flmul	;wreg free
 39100  019042  0060  F0AB  FFE6   	movff	btemp,postinc1
 39101  019048  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39102  01904E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39103  019054  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39104  01905A  EC64  F0C1         	call	___fldiv	;wreg free
 39105  01905E  D0D7               	goto	l1985
 39106  019060                     l12360:
 39107                           
 39108                           ;daq.c: 168:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 39109                           ;stkvar	_chan @ sp[(0)+-1]
 39110  019060  0EFF               	movlw	-1
 39111  019062  006F FF8C  F035    	movff	plusw1,btemp+11
 39112  019068  0E03               	movlw	3
 39113  01906A  6E32               	movwf	(btemp+8)^0,c
 39114  01906C  0E00               	movlw	0
 39115  01906E  6E33               	movwf	(btemp+9)^0,c
 39116  019070  2A35               	incf	(btemp+11)^0,f,c
 39117  019072  D003               	goto	u11694
 39118  019074                     u11695:
 39119  019074  3433               	rlcf	(btemp+9)^0,w,c
 39120  019076  3233               	rrcf	(btemp+9)^0,f,c
 39121  019078  3232               	rrcf	(btemp+8)^0,f,c
 39122  01907A                     u11694:
 39123  01907A  2E35               	decfsz	(btemp+11)^0,f,c
 39124  01907C  D7FB               	goto	u11695
 39125  01907E  B032               	btfsc	(btemp+8)^0,0,c
 39126  019080  D011               	goto	u11720
 39127                           
 39128                           ;stkvar	_chan @ sp[(0)+-1]
 39129  019082  0EFF               	movlw	-1
 39130  019084  006F FF8C  F035    	movff	plusw1,btemp+11
 39131  01908A  0E00               	movlw	0
 39132  01908C  6E32               	movwf	(btemp+8)^0,c
 39133  01908E  0E08               	movlw	8
 39134  019090  6E33               	movwf	(btemp+9)^0,c
 39135  019092  2A35               	incf	(btemp+11)^0,f,c
 39136  019094  D003               	goto	u11714
 39137  019096                     u11715:
 39138  019096  3433               	rlcf	(btemp+9)^0,w,c
 39139  019098  3233               	rrcf	(btemp+9)^0,f,c
 39140  01909A  3232               	rrcf	(btemp+8)^0,f,c
 39141  01909C                     u11714:
 39142  01909C  2E35               	decfsz	(btemp+11)^0,f,c
 39143  01909E  D7FB               	goto	u11715
 39144  0190A0  A032               	btfss	(btemp+8)^0,0,c
 39145  0190A2  D04E               	goto	l12368
 39146  0190A4                     u11720:
 39147                           
 39148                           ;daq.c: 169:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 39149  0190A4  0E00               	movlw	0
 39150  0190A6  6EE6               	movwf	postinc1,c
 39151  0190A8  0E00               	movlw	0
 39152  0190AA  6EE6               	movwf	postinc1,c
 39153  0190AC  0E7A               	movlw	122
 39154  0190AE  6EE6               	movwf	postinc1,c
 39155  0190B0  0E44               	movlw	68
 39156  0190B2  6EE6               	movwf	postinc1,c
 39157  0190B4  0E00               	movlw	0
 39158  0190B6  6EE6               	movwf	postinc1,c
 39159  0190B8  0E00               	movlw	0
 39160  0190BA  6EE6               	movwf	postinc1,c
 39161  0190BC  0E20               	movlw	32
 39162  0190BE  6EE6               	movwf	postinc1,c
 39163  0190C0  0E3F               	movlw	63
 39164  0190C2  6EE6               	movwf	postinc1,c
 39165                           
 39166                           ;stkvar	_chan @ sp[(-8)+-1]
 39167  0190C4  0EF7               	movlw	-9
 39168  0190C6  50E3               	movf	plusw1,w,c
 39169  0190C8  6EE6               	movwf	postinc1,c
 39170  0190CA  ECF6  F011         	call	_get_raw_result	;wreg free
 39171  0190CE  0060  F0A8  F034   	movff	btemp,btemp+10
 39172  0190D4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39173  0190DA  5034               	movf	(btemp+10)^0,w,c
 39174  0190DC  6E2E               	movwf	(btemp+4)^0,c
 39175  0190DE  5035               	movf	(btemp+11)^0,w,c
 39176  0190E0  6E2F               	movwf	(btemp+5)^0,c
 39177  0190E2  6A30               	clrf	(btemp+6)^0,c
 39178  0190E4  6A31               	clrf	(btemp+7)^0,c
 39179  0190E6  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39180  0190EC  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39181  0190F2  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39182  0190F8  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39183  0190FE  0E00               	movlw	0
 39184  019100  6EE6               	movwf	postinc1,c
 39185  019102  EC9B  F0EC         	call	___xxtofl	;wreg free
 39186  019106  0060  F0AB  FFE6   	movff	btemp,postinc1
 39187  01910C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39188  019112  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39189  019118  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39190  01911E  EC32  F0B3         	call	___flmul	;wreg free
 39191  019122  0060  F0AB  FFE6   	movff	btemp,postinc1
 39192  019128  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39193  01912E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39194  019134  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39195  01913A  EC64  F0C1         	call	___fldiv	;wreg free
 39196  01913E  D067               	goto	l1985
 39197  019140                     l12368:
 39198                           
 39199                           ;daq.c: 171:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39200  019140  0E00               	movlw	0
 39201  019142  6EE6               	movwf	postinc1,c
 39202  019144  0E00               	movlw	0
 39203  019146  6EE6               	movwf	postinc1,c
 39204  019148  0E7A               	movlw	122
 39205  01914A  6EE6               	movwf	postinc1,c
 39206  01914C  0E44               	movlw	68
 39207  01914E  6EE6               	movwf	postinc1,c
 39208  019150  0E61               	movlw	97
 39209  019152  6EE6               	movwf	postinc1,c
 39210  019154  0E03               	movlw	3
 39211  019156  6EE6               	movwf	postinc1,c
 39212  019158  0E84               	movlw	132
 39213  01915A  6EE6               	movwf	postinc1,c
 39214  01915C  0E40               	movlw	64
 39215  01915E  6EE6               	movwf	postinc1,c
 39216                           
 39217                           ;stkvar	_chan @ sp[(-8)+-1]
 39218  019160  0EF7               	movlw	-9
 39219  019162  50E3               	movf	plusw1,w,c
 39220  019164  6EE6               	movwf	postinc1,c
 39221  019166  ECF6  F011         	call	_get_raw_result	;wreg free
 39222  01916A  0060  F0A8  F034   	movff	btemp,btemp+10
 39223  019170  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39224  019176  5034               	movf	(btemp+10)^0,w,c
 39225  019178  6E2E               	movwf	(btemp+4)^0,c
 39226  01917A  5035               	movf	(btemp+11)^0,w,c
 39227  01917C  6E2F               	movwf	(btemp+5)^0,c
 39228  01917E  6A30               	clrf	(btemp+6)^0,c
 39229  019180  6A31               	clrf	(btemp+7)^0,c
 39230  019182  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39231  019188  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39232  01918E  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39233  019194  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39234  01919A  0E00               	movlw	0
 39235  01919C  6EE6               	movwf	postinc1,c
 39236  01919E  EC9B  F0EC         	call	___xxtofl	;wreg free
 39237  0191A2  0060  F0AB  FFE6   	movff	btemp,postinc1
 39238  0191A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39239  0191AE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39240  0191B4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39241  0191BA  EC32  F0B3         	call	___flmul	;wreg free
 39242  0191BE  0060  F0AB  FFE6   	movff	btemp,postinc1
 39243  0191C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39244  0191CA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39245  0191D0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39246  0191D6  EC64  F0C1         	call	___fldiv	;wreg free
 39247  0191DA  D019               	goto	l1985
 39248  0191DC                     l12374:
 39249                           
 39250                           ;daq.c: 174:   return 0.0;
 39251  0191DC  0E00               	movlw	0
 39252  0191DE  6E2A               	movwf	btemp^0,c
 39253  0191E0  0E00               	movlw	0
 39254  0191E2  6E2B               	movwf	(btemp+1)^0,c
 39255  0191E4  0E00               	movlw	0
 39256  0191E6  6E2C               	movwf	(btemp+2)^0,c
 39257  0191E8  0E00               	movlw	0
 39258  0191EA                     L44:
 39259  0191EA  6E2D               	movwf	(btemp+3)^0,c
 39260  0191EC  D010               	goto	l1985
 39261  0191EE                     l12382:
 39262                           
 39263                           ;stkvar	_to_what @ sp[(0)+-2]
 39264  0191EE  0EFE               	movlw	-2
 39265  0191F0  50E3               	movf	plusw1,w,c
 39266  0191F2  6E34               	movwf	(btemp+10)^0,c
 39267  0191F4  6A35               	clrf	(btemp+11)^0,c
 39268                           
 39269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39270                           ; Switch size 1, requested type "simple"
 39271                           ; Number of cases is 1, Range of values is 0 to 0
 39272                           ; switch strategies available:
 39273                           ; Name         Instructions Cycles
 39274                           ; simple_byte            4     3 (average)
 39275                           ;	Chosen strategy is simple_byte
 39276  0191F6  5035               	movf	(btemp+11)^0,w,c
 39277  0191F8  0A00               	xorlw	0	; case 0
 39278  0191FA  A4D8               	btfss	status,2,c
 39279  0191FC  D7EF               	goto	l12374
 39280                           
 39281                           ; Switch size 1, requested type "simple"
 39282                           ; Number of cases is 2, Range of values is 0 to 1
 39283                           ; switch strategies available:
 39284                           ; Name         Instructions Cycles
 39285                           ; simple_byte            7     4 (average)
 39286                           ;	Chosen strategy is simple_byte
 39287  0191FE  5034               	movf	(btemp+10)^0,w,c
 39288  019200  0A00               	xorlw	0	; case 0
 39289  019202  B4D8               	btfsc	status,2,c
 39290  019204  D5AA               	goto	l12328
 39291  019206  0A01               	xorlw	1	; case 1
 39292  019208  B4D8               	btfsc	status,2,c
 39293  01920A  D72A               	goto	l12360
 39294  01920C  D7E7               	goto	l12374
 39295  01920E                     l1985:
 39296                           
 39297                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 39298  01920E  52E5               	movf	postdec1,f,c
 39299  019210  52E5               	movf	postdec1,f,c
 39300  019212  0012               	return		;funcret
 39301  019214                     __end_of_conv_raw_result:
 39302                           	opt callstack 0
 39303                           
 39304 ;; *************** function _nanf *****************
 39305 ;; Defined at:
 39306 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 39307 ;; Parameters:    Size  Location     Type
 39308 ;;  s               2  [STACK] PTR const unsigned char 
 39309 ;;		 -> STR_134(1), STR_94(1), 
 39310 ;; Auto vars:     Size  Location     Type
 39311 ;;  u               4  [STACK] struct .
 39312 ;; Return value:  Size  Location     Type
 39313 ;;                  4  [STACK] float 
 39314 ;; Registers used:
 39315 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 39316 ;; Tracked objects:
 39317 ;;		On entry : 0/0
 39318 ;;		On exit  : 0/0
 39319 ;;		Unchanged: 0/0
 39320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39325 ;;Total ram usage:        0 bytes
 39326 ;; Hardware stack levels used:    1
 39327 ;; Hardware stack levels required when called:   15
 39328 ;; This function calls:
 39329 ;;		Nothing
 39330 ;; This function is called by:
 39331 ;;		_conv_raw_result
 39332 ;; This function uses a reentrant model
 39333 ;;
 39334                           
 39335                           	psect	text143
 39336  001B84                     __ptext143:
 39337                           	opt callstack 0
 39338  001B84                     _nanf:
 39339                           	opt callstack 0
 39340                           
 39341                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39342  001B84  52E6               	movf	postinc1,f,c
 39343  001B86  52E6               	movf	postinc1,f,c
 39344  001B88  52E6               	movf	postinc1,f,c
 39345  001B8A  52E6               	movf	postinc1,f,c
 39346                           
 39347                           ;incstack = 0
 39348 ;; hardware stack exceeded
 39349  001B8C  0EFF               	movlw	255
 39350  001B8E  6E32               	movwf	(btemp+8)^0,c
 39351  001B90  0EFF               	movlw	255
 39352  001B92  6E33               	movwf	(btemp+9)^0,c
 39353  001B94  0EFF               	movlw	255
 39354  001B96  6E34               	movwf	(btemp+10)^0,c
 39355  001B98  0E7F               	movlw	127
 39356  001B9A  6E35               	movwf	(btemp+11)^0,c
 39357                           
 39358                           ;stkvar	_u @ sp[(-4)+0]
 39359  001B9C  0EFC               	movlw	-4
 39360  001B9E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39361  001BA4  0EFD               	movlw	-3
 39362  001BA6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39363  001BAC  0EFE               	movlw	-2
 39364  001BAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39365  001BB4  0EFF               	movlw	-1
 39366  001BB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39367                           
 39368                           ;stkvar	_u @ sp[(-4)+0]
 39369  001BBC  0EFC               	movlw	-4
 39370  001BBE  006F FF8C  F02A    	movff	plusw1,btemp
 39371  001BC4  0EFD               	movlw	-3
 39372  001BC6  006F FF8C  F02B    	movff	plusw1,btemp+1
 39373  001BCC  0EFE               	movlw	-2
 39374  001BCE  006F FF8C  F02C    	movff	plusw1,btemp+2
 39375  001BD4  0EFF               	movlw	-1
 39376  001BD6  006F FF8C  F02D    	movff	plusw1,btemp+3
 39377                           
 39378                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 39379  001BDC  0EFA               	movlw	250
 39380  001BDE  26E1               	addwf	fsr1l,f,c
 39381  001BE0  0EFF               	movlw	255
 39382  001BE2  22E2               	addwfc	fsr1h,f,c
 39383  001BE4  0012               	return		;funcret
 39384  001BE6                     __end_of_nanf:
 39385                           	opt callstack 0
 39386                           
 39387 ;; *************** function _get_raw_result *****************
 39388 ;; Defined at:
 39389 ;;		line 129 in file "daq.c"
 39390 ;; Parameters:    Size  Location     Type
 39391 ;;  index           1  [STACK] const enum E16605
 39392 ;; Auto vars:     Size  Location     Type
 39393 ;;		None
 39394 ;; Return value:  Size  Location     Type
 39395 ;;                  2  [STACK] unsigned short 
 39396 ;; Registers used:
 39397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 39398 ;; Tracked objects:
 39399 ;;		On entry : 0/2
 39400 ;;		On exit  : 3F/39
 39401 ;;		Unchanged: 0/0
 39402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39407 ;;Total ram usage:        0 bytes
 39408 ;; Hardware stack levels used:    1
 39409 ;; Hardware stack levels required when called:   15
 39410 ;; This function calls:
 39411 ;;		Nothing
 39412 ;; This function is called by:
 39413 ;;		_main
 39414 ;;		_current_sensor_cal
 39415 ;;		_conv_raw_result
 39416 ;; This function uses a reentrant model
 39417 ;;
 39418                           
 39419                           	psect	text144
 39420  0023EC                     __ptext144:
 39421                           	opt callstack 0
 39422  0023EC                     _get_raw_result:
 39423                           	opt callstack 0
 39424                           
 39425                           ;daq.c: 129: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 130: {;daq.c
      +                          : 131:  static adc_result_t raw_result;;daq.c: 133:  PIE1bits.ADIE = 0;
 39426                           
 39427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39428                           ;incstack = 0
 39429 ;; hardware stack exceeded
 39430  0023EC  0139               	movlb	57	; () banked
 39431  0023EE  9591               	bcf	145,2,b	;volatile
 39432                           
 39433                           ;daq.c: 134:  PIE1bits.ADTIE = 0;
 39434  0023F0  9791               	bcf	145,3,b	;volatile
 39435                           
 39436                           ; BSR set to: 57
 39437                           ;daq.c: 135:  raw_result = R.raw_adc[index];
 39438                           ;stkvar	_index @ sp[(0)+-1]
 39439  0023F2  0EFF               	movlw	-1
 39440  0023F4  50E3               	movf	plusw1,w,c
 39441  0023F6  0D02               	mullw	2
 39442  0023F8  0E00               	movlw	low _R
 39443  0023FA  24F3               	addwf	243,w,c
 39444  0023FC  6ED9               	movwf	fsr2l,c
 39445  0023FE  0E01               	movlw	high _R
 39446  002400  20F4               	addwfc	prodh,w,c
 39447  002402  6EDA               	movwf	fsr2h,c
 39448  002404  006F FF78  F0BC    	movff	postinc2,get_raw_result@raw_result
 39449  00240A  006F FF74  F0BD    	movff	postdec2,get_raw_result@raw_result+1
 39450                           
 39451                           ; BSR set to: 57
 39452                           ;daq.c: 136:  PIE1bits.ADIE = 1;
 39453  002410  8591               	bsf	145,2,b	;volatile
 39454                           
 39455                           ; BSR set to: 57
 39456                           ;daq.c: 137:  PIE1bits.ADTIE = 1;
 39457  002412  8791               	bsf	145,3,b	;volatile
 39458                           
 39459                           ; BSR set to: 57
 39460                           ;daq.c: 139:  return raw_result;
 39461  002414  0060  F2F0  F02A   	movff	get_raw_result@raw_result,btemp
 39462  00241A  0060  F2F4  F02B   	movff	get_raw_result@raw_result+1,btemp+1
 39463                           
 39464                           ; BSR set to: 57
 39465                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 39466  002420  52E5               	movf	postdec1,f,c
 39467  002422  0012               	return		;funcret
 39468  002424                     __end_of_get_raw_result:
 39469                           	opt callstack 0
 39470                           
 39471 ;; *************** function ___xxtofl *****************
 39472 ;; Defined at:
 39473 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 39474 ;; Parameters:    Size  Location     Type
 39475 ;;  sign            1  [STACK] unsigned char 
 39476 ;;  val             4  [STACK] long 
 39477 ;; Auto vars:     Size  Location     Type
 39478 ;;  arg             4  [STACK] unsigned long 
 39479 ;;  exp             1  [STACK] unsigned char 
 39480 ;; Return value:  Size  Location     Type
 39481 ;;                  4  [STACK] unsigned char 
 39482 ;; Registers used:
 39483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39484 ;; Tracked objects:
 39485 ;;		On entry : 0/39
 39486 ;;		On exit  : 0/0
 39487 ;;		Unchanged: 0/0
 39488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39493 ;;Total ram usage:        0 bytes
 39494 ;; Hardware stack levels used:    1
 39495 ;; Hardware stack levels required when called:   15
 39496 ;; This function calls:
 39497 ;;		Nothing
 39498 ;; This function is called by:
 39499 ;;		_conv_raw_result
 39500 ;;		_load_hist_data
 39501 ;;		_init_bsoc
 39502 ;; This function uses a reentrant model
 39503 ;;
 39504                           
 39505                           	psect	text145
 39506  01D936                     __ptext145:
 39507                           	opt callstack 0
 39508  01D936                     ___xxtofl:
 39509                           	opt callstack 0
 39510                           
 39511                           ; BSR set to: 57
 39512                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39513  01D936  0E05               	movlw	5
 39514  01D938  26E1               	addwf	fsr1l,f,c
 39515  01D93A  0E00               	movlw	0
 39516  01D93C  22E2               	addwfc	fsr1h,f,c
 39517                           
 39518                           ;stkvar	_sign @ sp[(-5)+-1]
 39519                           
 39520                           ;incstack = 0
 39521 ;; hardware stack exceeded
 39522  01D93E  0EFA               	movlw	-6
 39523  01D940  50E3               	movf	plusw1,w,c
 39524  01D942  B4D8               	btfsc	status,2,c
 39525  01D944  D01D               	goto	l12050
 39526                           
 39527                           ;stkvar	_val @ sp[(-5)+-5]
 39528  01D946  0EF9               	movlw	-7
 39529  01D948  AEE3               	btfss	plusw1,7,c
 39530  01D94A  D01A               	goto	l12050
 39531                           
 39532                           ;stkvar	_val @ sp[(-5)+-5]
 39533  01D94C  0EF6               	movlw	-10
 39534  01D94E  006F FF8C  F032    	movff	plusw1,btemp+8
 39535  01D954  0EF7               	movlw	-9
 39536  01D956  006F FF8C  F033    	movff	plusw1,btemp+9
 39537  01D95C  0EF8               	movlw	-8
 39538  01D95E  006F FF8C  F034    	movff	plusw1,btemp+10
 39539  01D964  0EF9               	movlw	-7
 39540  01D966  006F FF8C  F035    	movff	plusw1,btemp+11
 39541  01D96C  1E32               	comf	(btemp+8)^0,f,c
 39542  01D96E  1E33               	comf	(btemp+9)^0,f,c
 39543  01D970  1E34               	comf	(btemp+10)^0,f,c
 39544  01D972  1E35               	comf	(btemp+11)^0,f,c
 39545  01D974  2A32               	incf	(btemp+8)^0,f,c
 39546  01D976  0E00               	movlw	0
 39547  01D978  2233               	addwfc	(btemp+9)^0,f,c
 39548  01D97A  2234               	addwfc	(btemp+10)^0,f,c
 39549  01D97C  2235               	addwfc	(btemp+11)^0,f,c
 39550  01D97E  D010               	goto	L45
 39551  01D980                     l12050:
 39552                           
 39553                           ;stkvar	_val @ sp[(-5)+-5]
 39554  01D980  0EF6               	movlw	-10
 39555  01D982  006F FF8C  F032    	movff	plusw1,btemp+8
 39556  01D988  0EF7               	movlw	-9
 39557  01D98A  006F FF8C  F033    	movff	plusw1,btemp+9
 39558  01D990  0EF8               	movlw	-8
 39559  01D992  006F FF8C  F034    	movff	plusw1,btemp+10
 39560  01D998  0EF9               	movlw	-7
 39561  01D99A  006F FF8C  F035    	movff	plusw1,btemp+11
 39562  01D9A0                     L45:
 39563                           
 39564                           ;stkvar	_arg @ sp[(-5)+0]
 39565  01D9A0  0EFB               	movlw	-5
 39566  01D9A2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39567  01D9A8  0EFC               	movlw	-4
 39568  01D9AA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39569  01D9B0  0EFD               	movlw	-3
 39570  01D9B2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39571  01D9B8  0EFE               	movlw	-2
 39572  01D9BA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39573                           
 39574                           ;stkvar	_val @ sp[(-5)+-5]
 39575  01D9C0  0EF6               	movlw	-10
 39576  01D9C2  50E3               	movf	plusw1,w,c
 39577  01D9C4  E113               	bnz	l12058
 39578  01D9C6  0EF7               	movlw	-9
 39579  01D9C8  50E3               	movf	plusw1,w,c
 39580  01D9CA  E110               	bnz	l12058
 39581  01D9CC  0EF8               	movlw	-8
 39582  01D9CE  50E3               	movf	plusw1,w,c
 39583  01D9D0  E10D               	bnz	l12058
 39584  01D9D2  0EF9               	movlw	-7
 39585  01D9D4  50E3               	movf	plusw1,w,c
 39586  01D9D6  A4D8               	btfss	status,2,c
 39587  01D9D8  D009               	goto	l12058
 39588  01D9DA  0E00               	movlw	0
 39589  01D9DC  6E2A               	movwf	btemp^0,c
 39590  01D9DE  0E00               	movlw	0
 39591  01D9E0  6E2B               	movwf	(btemp+1)^0,c
 39592  01D9E2  0E00               	movlw	0
 39593  01D9E4  6E2C               	movwf	(btemp+2)^0,c
 39594  01D9E6  0E00               	movlw	0
 39595  01D9E8  6E2D               	movwf	(btemp+3)^0,c
 39596  01D9EA  D0A2               	goto	l3390
 39597  01D9EC                     l12058:
 39598  01D9EC  0E96               	movlw	150
 39599  01D9EE  6E35               	movwf	(btemp+11)^0,c
 39600                           
 39601                           ;stkvar	_exp @ sp[(-5)+4]
 39602  01D9F0  0EFF               	movlw	-1
 39603  01D9F2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39604  01D9F8  D00B               	goto	l12062
 39605  01D9FA                     l12060:
 39606                           
 39607                           ;stkvar	_exp @ sp[(-5)+4]
 39608  01D9FA  0EFF               	movlw	-1
 39609  01D9FC  2AE3               	incf	plusw1,f,c
 39610                           
 39611                           ;stkvar	_arg @ sp[(-5)+0]
 39612  01D9FE  90D8               	bcf	status,0,c
 39613  01DA00  0EFE               	movlw	-2
 39614  01DA02  32E3               	rrcf	plusw1,f,c
 39615  01DA04  0EFD               	movlw	-3
 39616  01DA06  32E3               	rrcf	plusw1,f,c
 39617  01DA08  0EFC               	movlw	-4
 39618  01DA0A  32E3               	rrcf	plusw1,f,c
 39619  01DA0C  0EFB               	movlw	-5
 39620  01DA0E  32E3               	rrcf	plusw1,f,c
 39621  01DA10                     l12062:
 39622                           
 39623                           ;stkvar	_arg @ sp[(-5)+0]
 39624  01DA10  50E1               	movf	fsr1l,w,c
 39625  01DA12  0FFB               	addlw	-5
 39626  01DA14  6ED9               	movwf	fsr2l,c
 39627  01DA16  50E2               	movf	fsr1h,w,c
 39628  01DA18  6EDA               	movwf	fsr2h,c
 39629  01DA1A  0EFF               	movlw	255
 39630  01DA1C  22DA               	addwfc	fsr2h,f,c
 39631  01DA1E  52DE               	movf	postinc2,f,c
 39632  01DA20  52DE               	movf	postinc2,f,c
 39633  01DA22  52DE               	movf	postinc2,f,c
 39634  01DA24  0EFE               	movlw	254
 39635  01DA26  14DD               	andwf	postdec2,w,c
 39636  01DA28  B4D8               	btfsc	status,2,c
 39637  01DA2A  D018               	goto	l12070
 39638  01DA2C  D7E6               	goto	l12060
 39639  01DA2E                     l12064:
 39640                           
 39641                           ;stkvar	_exp @ sp[(-5)+4]
 39642  01DA2E  0EFF               	movlw	-1
 39643  01DA30  2AE3               	incf	plusw1,f,c
 39644                           
 39645                           ;stkvar	_arg @ sp[(-5)+0]
 39646  01DA32  50E1               	movf	fsr1l,w,c
 39647  01DA34  0FFB               	addlw	-5
 39648  01DA36  6ED9               	movwf	fsr2l,c
 39649  01DA38  50E2               	movf	fsr1h,w,c
 39650  01DA3A  6EDA               	movwf	fsr2h,c
 39651  01DA3C  0EFF               	movlw	255
 39652  01DA3E  22DA               	addwfc	fsr2h,f,c
 39653  01DA40  2ADE               	incf	postinc2,f,c
 39654  01DA42  0E00               	movlw	0
 39655  01DA44  22DE               	addwfc	postinc2,f,c
 39656  01DA46  22DE               	addwfc	postinc2,f,c
 39657  01DA48  22DE               	addwfc	postinc2,f,c
 39658                           
 39659                           ;stkvar	_arg @ sp[(-5)+0]
 39660  01DA4A  90D8               	bcf	status,0,c
 39661  01DA4C  0EFE               	movlw	-2
 39662  01DA4E  32E3               	rrcf	plusw1,f,c
 39663  01DA50  0EFD               	movlw	-3
 39664  01DA52  32E3               	rrcf	plusw1,f,c
 39665  01DA54  0EFC               	movlw	-4
 39666  01DA56  32E3               	rrcf	plusw1,f,c
 39667  01DA58  0EFB               	movlw	-5
 39668  01DA5A  32E3               	rrcf	plusw1,f,c
 39669  01DA5C                     l12070:
 39670                           
 39671                           ;stkvar	_arg @ sp[(-5)+0]
 39672  01DA5C  50E1               	movf	fsr1l,w,c
 39673  01DA5E  0FFB               	addlw	-5
 39674  01DA60  6ED9               	movwf	fsr2l,c
 39675  01DA62  50E2               	movf	fsr1h,w,c
 39676  01DA64  6EDA               	movwf	fsr2h,c
 39677  01DA66  0EFF               	movlw	255
 39678  01DA68  22DA               	addwfc	fsr2h,f,c
 39679  01DA6A  52DE               	movf	postinc2,f,c
 39680  01DA6C  52DE               	movf	postinc2,f,c
 39681  01DA6E  52DE               	movf	postinc2,f,c
 39682  01DA70  0EFF               	movlw	255
 39683  01DA72  14DD               	andwf	postdec2,w,c
 39684  01DA74  B4D8               	btfsc	status,2,c
 39685  01DA76  D00C               	goto	l12074
 39686  01DA78  D7DA               	goto	l12064
 39687  01DA7A                     l12072:
 39688                           
 39689                           ;stkvar	_exp @ sp[(-5)+4]
 39690  01DA7A  0EFF               	movlw	-1
 39691  01DA7C  06E3               	decf	plusw1,f,c
 39692                           
 39693                           ;stkvar	_arg @ sp[(-5)+0]
 39694  01DA7E  90D8               	bcf	status,0,c
 39695  01DA80  0EFB               	movlw	-5
 39696  01DA82  36E3               	rlcf	plusw1,f,c
 39697  01DA84  0EFC               	movlw	-4
 39698  01DA86  36E3               	rlcf	plusw1,f,c
 39699  01DA88  0EFD               	movlw	-3
 39700  01DA8A  36E3               	rlcf	plusw1,f,c
 39701  01DA8C  0EFE               	movlw	-2
 39702  01DA8E  36E3               	rlcf	plusw1,f,c
 39703  01DA90                     l12074:
 39704                           
 39705                           ;stkvar	_arg @ sp[(-5)+0]
 39706  01DA90  0EFD               	movlw	-3
 39707  01DA92  BEE3               	btfsc	plusw1,7,c
 39708  01DA94  D007               	goto	u11370
 39709                           
 39710                           ;stkvar	_exp @ sp[(-5)+4]
 39711  01DA96  0EFF               	movlw	-1
 39712  01DA98  006F FF8C  F02A    	movff	plusw1,btemp
 39713  01DA9E  0E02               	movlw	2
 39714  01DAA0  602A               	cpfslt	btemp^0,c
 39715  01DAA2  D7EB               	goto	l12072
 39716  01DAA4                     u11370:
 39717                           
 39718                           ;stkvar	_exp @ sp[(-5)+4]
 39719  01DAA4  0EFF               	movlw	-1
 39720  01DAA6  B0E3               	btfsc	plusw1,0,c
 39721  01DAA8  D002               	goto	l12082
 39722                           
 39723                           ;stkvar	_arg @ sp[(-5)+0]
 39724  01DAAA  0EFD               	movlw	-3
 39725  01DAAC  9EE3               	bcf	plusw1,7,c
 39726  01DAAE                     l12082:
 39727                           
 39728                           ;stkvar	_exp @ sp[(-5)+4]
 39729  01DAAE  50E1               	movf	fsr1l,w,c
 39730  01DAB0  0FFF               	addlw	-1
 39731  01DAB2  6ED9               	movwf	fsr2l,c
 39732  01DAB4  50E2               	movf	fsr1h,w,c
 39733  01DAB6  6EDA               	movwf	fsr2h,c
 39734  01DAB8  0EFF               	movlw	255
 39735  01DABA  22DA               	addwfc	fsr2h,f,c
 39736  01DABC  90D8               	bcf	status,0,c
 39737  01DABE  32DF               	rrcf	indf2,f,c
 39738                           
 39739                           ;stkvar	_exp @ sp[(-5)+4]
 39740  01DAC0  0EFF               	movlw	-1
 39741  01DAC2  006F FF8C  F035    	movff	plusw1,btemp+11
 39742  01DAC8  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 39743  01DACE  6A2F               	clrf	(btemp+5)^0,c
 39744  01DAD0  6A30               	clrf	(btemp+6)^0,c
 39745  01DAD2  6A31               	clrf	(btemp+7)^0,c
 39746  01DAD4  0060  F0B8  F031   	movff	btemp+4,btemp+7
 39747  01DADA  6A30               	clrf	(btemp+6)^0,c
 39748  01DADC  6A2F               	clrf	(btemp+5)^0,c
 39749  01DADE  6A2E               	clrf	(btemp+4)^0,c
 39750                           
 39751                           ;stkvar	_arg @ sp[(-5)+0]
 39752  01DAE0  50E1               	movf	fsr1l,w,c
 39753  01DAE2  0FFB               	addlw	-5
 39754  01DAE4  6ED9               	movwf	fsr2l,c
 39755  01DAE6  50E2               	movf	fsr1h,w,c
 39756  01DAE8  6EDA               	movwf	fsr2h,c
 39757  01DAEA  0EFF               	movlw	255
 39758  01DAEC  22DA               	addwfc	fsr2h,f,c
 39759  01DAEE  502E               	movf	(btemp+4)^0,w,c
 39760  01DAF0  12DE               	iorwf	postinc2,f,c
 39761  01DAF2  502F               	movf	(btemp+5)^0,w,c
 39762  01DAF4  12DE               	iorwf	postinc2,f,c
 39763  01DAF6  5030               	movf	(btemp+6)^0,w,c
 39764  01DAF8  12DE               	iorwf	postinc2,f,c
 39765  01DAFA  5031               	movf	(btemp+7)^0,w,c
 39766  01DAFC  12DE               	iorwf	postinc2,f,c
 39767                           
 39768                           ;stkvar	_sign @ sp[(-5)+-1]
 39769  01DAFE  0EFA               	movlw	-6
 39770  01DB00  50E3               	movf	plusw1,w,c
 39771  01DB02  B4D8               	btfsc	status,2,c
 39772  01DB04  D005               	goto	l12092
 39773                           
 39774                           ;stkvar	_val @ sp[(-5)+-5]
 39775  01DB06  0EF9               	movlw	-7
 39776  01DB08  AEE3               	btfss	plusw1,7,c
 39777  01DB0A  D002               	goto	l12092
 39778                           
 39779                           ;stkvar	_arg @ sp[(-5)+0]
 39780  01DB0C  0EFE               	movlw	-2
 39781  01DB0E  8EE3               	bsf	plusw1,7,c
 39782  01DB10                     l12092:
 39783                           
 39784                           ;stkvar	_arg @ sp[(-5)+0]
 39785  01DB10  0EFB               	movlw	-5
 39786  01DB12  006F FF8C  F02A    	movff	plusw1,btemp
 39787  01DB18  0EFC               	movlw	-4
 39788  01DB1A  006F FF8C  F02B    	movff	plusw1,btemp+1
 39789  01DB20  0EFD               	movlw	-3
 39790  01DB22  006F FF8C  F02C    	movff	plusw1,btemp+2
 39791  01DB28  0EFE               	movlw	-2
 39792  01DB2A  006F FF8C  F02D    	movff	plusw1,btemp+3
 39793  01DB30                     l3390:
 39794                           
 39795                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 39796  01DB30  0EF6               	movlw	246
 39797  01DB32  26E1               	addwf	fsr1l,f,c
 39798  01DB34  0EFF               	movlw	255
 39799  01DB36  22E2               	addwfc	fsr1h,f,c
 39800  01DB38  0012               	return		;funcret
 39801  01DB3A                     __end_of___xxtofl:
 39802                           	opt callstack 0
 39803                           
 39804 ;; *************** function ___fldiv *****************
 39805 ;; Defined at:
 39806 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 39807 ;; Parameters:    Size  Location     Type
 39808 ;;  b               4  [STACK] unsigned char 
 39809 ;;  a               4  [STACK] unsigned char 
 39810 ;; Auto vars:     Size  Location     Type
 39811 ;;  grs             4  [STACK] unsigned long 
 39812 ;;  rem             4  [STACK] unsigned long 
 39813 ;;  new_exp         2  [STACK] short 
 39814 ;;  aexp            1  [STACK] unsigned char 
 39815 ;;  bexp            1  [STACK] unsigned char 
 39816 ;;  sign            1  [STACK] unsigned char 
 39817 ;; Return value:  Size  Location     Type
 39818 ;;                  4  [STACK] unsigned char 
 39819 ;; Registers used:
 39820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 39821 ;; Tracked objects:
 39822 ;;		On entry : 0/3D
 39823 ;;		On exit  : 0/0
 39824 ;;		Unchanged: 0/0
 39825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39830 ;;Total ram usage:        0 bytes
 39831 ;; Hardware stack levels used:    1
 39832 ;; Hardware stack levels required when called:   15
 39833 ;; This function calls:
 39834 ;;		Nothing
 39835 ;; This function is called by:
 39836 ;;		_conv_raw_result
 39837 ;;		_convert_dac_raw
 39838 ;;		_calc_bsoc
 39839 ;;		_init_bsoc
 39840 ;;		_esr_check
 39841 ;;		_efgtoa
 39842 ;; This function uses a reentrant model
 39843 ;;
 39844                           
 39845                           	psect	text146
 39846  0182C8                     __ptext146:
 39847                           	opt callstack 0
 39848  0182C8                     ___fldiv:
 39849                           	opt callstack 0
 39850                           
 39851                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 39852  0182C8  0E0D               	movlw	13
 39853  0182CA  26E1               	addwf	fsr1l,f,c
 39854  0182CC  0E00               	movlw	0
 39855  0182CE  22E2               	addwfc	fsr1h,f,c
 39856                           
 39857                           ;stkvar	_b @ sp[(-13)+-4]
 39858                           
 39859                           ;incstack = 0
 39860 ;; hardware stack exceeded
 39861  0182D0  0EF2               	movlw	242
 39862  0182D2  24E1               	addwf	fsr1l,w,c
 39863  0182D4  6ED9               	movwf	fsr2l,c
 39864  0182D6  0EFF               	movlw	255
 39865  0182D8  20E2               	addwfc	fsr1h,w,c
 39866  0182DA  6EDA               	movwf	fsr2h,c
 39867  0182DC  50DF               	movf	indf2,w,c
 39868  0182DE  6E35               	movwf	(btemp+11)^0,c
 39869  0182E0  0E80               	movlw	128
 39870  0182E2  1635               	andwf	(btemp+11)^0,f,c
 39871                           
 39872                           ;stkvar	_sign @ sp[(-13)+12]
 39873  0182E4  0EFF               	movlw	-1
 39874  0182E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39875                           
 39876                           ;stkvar	_b @ sp[(-13)+-4]
 39877  0182EC  0EF2               	movlw	242
 39878  0182EE  24E1               	addwf	fsr1l,w,c
 39879  0182F0  6ED9               	movwf	fsr2l,c
 39880  0182F2  0EFF               	movlw	255
 39881  0182F4  20E2               	addwfc	fsr1h,w,c
 39882  0182F6  6EDA               	movwf	fsr2h,c
 39883  0182F8  50DF               	movf	indf2,w,c
 39884  0182FA  6E35               	movwf	(btemp+11)^0,c
 39885  0182FC  90D8               	bcf	status,0,c
 39886  0182FE  3435               	rlcf	(btemp+11)^0,w,c
 39887  018300  6E34               	movwf	(btemp+10)^0,c
 39888                           
 39889                           ;stkvar	_bexp @ sp[(-13)+11]
 39890  018302  0EFE               	movlw	-2
 39891  018304  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39892                           
 39893                           ;stkvar	_b @ sp[(-13)+-4]
 39894  01830A  0EF1               	movlw	241
 39895  01830C  24E1               	addwf	fsr1l,w,c
 39896  01830E  6ED9               	movwf	fsr2l,c
 39897  018310  0EFF               	movlw	255
 39898  018312  20E2               	addwfc	fsr1h,w,c
 39899  018314  6EDA               	movwf	fsr2h,c
 39900  018316  AEDF               	btfss	indf2,7,c
 39901  018318  D002               	goto	l10340
 39902                           
 39903                           ;stkvar	_bexp @ sp[(-13)+11]
 39904  01831A  0EFE               	movlw	-2
 39905  01831C  80E3               	bsf	plusw1,0,c
 39906  01831E                     l10340:
 39907                           
 39908                           ;stkvar	_bexp @ sp[(-13)+11]
 39909  01831E  0EFE               	movlw	-2
 39910  018320  50E3               	movf	plusw1,w,c
 39911  018322  B4D8               	btfsc	status,2,c
 39912  018324  D027               	goto	l10350
 39913                           
 39914                           ;stkvar	_bexp @ sp[(-13)+11]
 39915  018326  0EFE               	movlw	-2
 39916  018328  28E3               	incf	plusw1,w,c
 39917  01832A  A4D8               	btfss	status,2,c
 39918  01832C  D018               	goto	l10346
 39919  01832E  0E00               	movlw	0
 39920  018330  6E32               	movwf	(btemp+8)^0,c
 39921  018332  0E00               	movlw	0
 39922  018334  6E33               	movwf	(btemp+9)^0,c
 39923  018336  0E00               	movlw	0
 39924  018338  6E34               	movwf	(btemp+10)^0,c
 39925  01833A  0E00               	movlw	0
 39926  01833C  6E35               	movwf	(btemp+11)^0,c
 39927                           
 39928                           ;stkvar	_b @ sp[(-13)+-4]
 39929  01833E  0EEF               	movlw	-17
 39930  018340  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39931  018346  0EF0               	movlw	-16
 39932  018348  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39933  01834E  0EF1               	movlw	-15
 39934  018350  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39935  018356  0EF2               	movlw	-14
 39936  018358  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39937  01835E                     l10346:
 39938                           
 39939                           ;stkvar	_b @ sp[(-13)+-4]
 39940  01835E  0EF1               	movlw	-15
 39941  018360  8EE3               	bsf	plusw1,7,c
 39942                           
 39943                           ;stkvar	_b @ sp[(-13)+-4]
 39944  018362  0EF2               	movlw	242
 39945  018364  24E1               	addwf	fsr1l,w,c
 39946  018366  6ED9               	movwf	fsr2l,c
 39947  018368  0EFF               	movlw	255
 39948  01836A  20E2               	addwfc	fsr1h,w,c
 39949  01836C  6EDA               	movwf	fsr2h,c
 39950  01836E  0E00               	movlw	0
 39951  018370  6EDF               	movwf	indf2,c
 39952  018372  D018               	goto	l10352
 39953  018374                     l10350:
 39954  018374  0E00               	movlw	0
 39955  018376  6E32               	movwf	(btemp+8)^0,c
 39956  018378  0E00               	movlw	0
 39957  01837A  6E33               	movwf	(btemp+9)^0,c
 39958  01837C  0E00               	movlw	0
 39959  01837E  6E34               	movwf	(btemp+10)^0,c
 39960  018380  0E00               	movlw	0
 39961  018382  6E35               	movwf	(btemp+11)^0,c
 39962                           
 39963                           ;stkvar	_b @ sp[(-13)+-4]
 39964  018384  0EEF               	movlw	-17
 39965  018386  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39966  01838C  0EF0               	movlw	-16
 39967  01838E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39968  018394  0EF1               	movlw	-15
 39969  018396  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39970  01839C  0EF2               	movlw	-14
 39971  01839E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39972  0183A4                     l10352:
 39973                           
 39974                           ;stkvar	_a @ sp[(-13)+-8]
 39975  0183A4  0EEE               	movlw	238
 39976  0183A6  24E1               	addwf	fsr1l,w,c
 39977  0183A8  6ED9               	movwf	fsr2l,c
 39978  0183AA  0EFF               	movlw	255
 39979  0183AC  20E2               	addwfc	fsr1h,w,c
 39980  0183AE  6EDA               	movwf	fsr2h,c
 39981  0183B0  50DF               	movf	indf2,w,c
 39982  0183B2  6E35               	movwf	(btemp+11)^0,c
 39983  0183B4  0E80               	movlw	128
 39984  0183B6  1635               	andwf	(btemp+11)^0,f,c
 39985                           
 39986                           ;stkvar	_sign @ sp[(-13)+12]
 39987  0183B8  50E1               	movf	fsr1l,w,c
 39988  0183BA  0FFF               	addlw	-1
 39989  0183BC  6ED9               	movwf	fsr2l,c
 39990  0183BE  50E2               	movf	fsr1h,w,c
 39991  0183C0  6EDA               	movwf	fsr2h,c
 39992  0183C2  0EFF               	movlw	255
 39993  0183C4  22DA               	addwfc	fsr2h,f,c
 39994  0183C6  5035               	movf	(btemp+11)^0,w,c
 39995  0183C8  1ADF               	xorwf	indf2,f,c
 39996                           
 39997                           ;stkvar	_a @ sp[(-13)+-8]
 39998  0183CA  0EEE               	movlw	238
 39999  0183CC  24E1               	addwf	fsr1l,w,c
 40000  0183CE  6ED9               	movwf	fsr2l,c
 40001  0183D0  0EFF               	movlw	255
 40002  0183D2  20E2               	addwfc	fsr1h,w,c
 40003  0183D4  6EDA               	movwf	fsr2h,c
 40004  0183D6  50DF               	movf	indf2,w,c
 40005  0183D8  6E35               	movwf	(btemp+11)^0,c
 40006  0183DA  90D8               	bcf	status,0,c
 40007  0183DC  3435               	rlcf	(btemp+11)^0,w,c
 40008  0183DE  6E34               	movwf	(btemp+10)^0,c
 40009                           
 40010                           ;stkvar	_aexp @ sp[(-13)+10]
 40011  0183E0  0EFD               	movlw	-3
 40012  0183E2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40013                           
 40014                           ;stkvar	_a @ sp[(-13)+-8]
 40015  0183E8  0EED               	movlw	237
 40016  0183EA  24E1               	addwf	fsr1l,w,c
 40017  0183EC  6ED9               	movwf	fsr2l,c
 40018  0183EE  0EFF               	movlw	255
 40019  0183F0  20E2               	addwfc	fsr1h,w,c
 40020  0183F2  6EDA               	movwf	fsr2h,c
 40021  0183F4  AEDF               	btfss	indf2,7,c
 40022  0183F6  D002               	goto	l10360
 40023                           
 40024                           ;stkvar	_aexp @ sp[(-13)+10]
 40025  0183F8  0EFD               	movlw	-3
 40026  0183FA  80E3               	bsf	plusw1,0,c
 40027  0183FC                     l10360:
 40028                           
 40029                           ;stkvar	_aexp @ sp[(-13)+10]
 40030  0183FC  0EFD               	movlw	-3
 40031  0183FE  50E3               	movf	plusw1,w,c
 40032  018400  B4D8               	btfsc	status,2,c
 40033  018402  D027               	goto	l10370
 40034                           
 40035                           ;stkvar	_aexp @ sp[(-13)+10]
 40036  018404  0EFD               	movlw	-3
 40037  018406  28E3               	incf	plusw1,w,c
 40038  018408  A4D8               	btfss	status,2,c
 40039  01840A  D018               	goto	l10366
 40040  01840C  0E00               	movlw	0
 40041  01840E  6E32               	movwf	(btemp+8)^0,c
 40042  018410  0E00               	movlw	0
 40043  018412  6E33               	movwf	(btemp+9)^0,c
 40044  018414  0E00               	movlw	0
 40045  018416  6E34               	movwf	(btemp+10)^0,c
 40046  018418  0E00               	movlw	0
 40047  01841A  6E35               	movwf	(btemp+11)^0,c
 40048                           
 40049                           ;stkvar	_a @ sp[(-13)+-8]
 40050  01841C  0EEB               	movlw	-21
 40051  01841E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40052  018424  0EEC               	movlw	-20
 40053  018426  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40054  01842C  0EED               	movlw	-19
 40055  01842E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40056  018434  0EEE               	movlw	-18
 40057  018436  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40058  01843C                     l10366:
 40059                           
 40060                           ;stkvar	_a @ sp[(-13)+-8]
 40061  01843C  0EED               	movlw	-19
 40062  01843E  8EE3               	bsf	plusw1,7,c
 40063                           
 40064                           ;stkvar	_a @ sp[(-13)+-8]
 40065  018440  0EEE               	movlw	238
 40066  018442  24E1               	addwf	fsr1l,w,c
 40067  018444  6ED9               	movwf	fsr2l,c
 40068  018446  0EFF               	movlw	255
 40069  018448  20E2               	addwfc	fsr1h,w,c
 40070  01844A  6EDA               	movwf	fsr2h,c
 40071  01844C  0E00               	movlw	0
 40072  01844E  6EDF               	movwf	indf2,c
 40073  018450  D018               	goto	l10372
 40074  018452                     l10370:
 40075  018452  0E00               	movlw	0
 40076  018454  6E32               	movwf	(btemp+8)^0,c
 40077  018456  0E00               	movlw	0
 40078  018458  6E33               	movwf	(btemp+9)^0,c
 40079  01845A  0E00               	movlw	0
 40080  01845C  6E34               	movwf	(btemp+10)^0,c
 40081  01845E  0E00               	movlw	0
 40082  018460  6E35               	movwf	(btemp+11)^0,c
 40083                           
 40084                           ;stkvar	_a @ sp[(-13)+-8]
 40085  018462  0EEB               	movlw	-21
 40086  018464  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40087  01846A  0EEC               	movlw	-20
 40088  01846C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40089  018472  0EED               	movlw	-19
 40090  018474  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40091  01847A  0EEE               	movlw	-18
 40092  01847C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40093  018482                     l10372:
 40094                           
 40095                           ;stkvar	_a @ sp[(-13)+-8]
 40096  018482  0EEB               	movlw	-21
 40097  018484  50E3               	movf	plusw1,w,c
 40098  018486  E139               	bnz	l10384
 40099  018488  0EEC               	movlw	-20
 40100  01848A  50E3               	movf	plusw1,w,c
 40101  01848C  E136               	bnz	l10384
 40102  01848E  0EED               	movlw	-19
 40103  018490  50E3               	movf	plusw1,w,c
 40104  018492  E133               	bnz	l10384
 40105  018494  0EEE               	movlw	-18
 40106  018496  50E3               	movf	plusw1,w,c
 40107  018498  A4D8               	btfss	status,2,c
 40108  01849A  D02F               	goto	l10384
 40109                           
 40110                           ;stkvar	_b @ sp[(-13)+-4]
 40111  01849C  0EEF               	movlw	-17
 40112  01849E  6AE3               	clrf	plusw1,c
 40113  0184A0  0EF0               	movlw	-16
 40114  0184A2  6AE3               	clrf	plusw1,c
 40115  0184A4  0EF1               	movlw	-15
 40116  0184A6  6AE3               	clrf	plusw1,c
 40117  0184A8  0EF2               	movlw	-14
 40118  0184AA  6AE3               	clrf	plusw1,c
 40119                           
 40120                           ;stkvar	_b @ sp[(-13)+-4]
 40121  0184AC  0EF1               	movlw	241
 40122  0184AE  24E1               	addwf	fsr1l,w,c
 40123  0184B0  6ED9               	movwf	fsr2l,c
 40124  0184B2  0EFF               	movlw	255
 40125  0184B4  20E2               	addwfc	fsr1h,w,c
 40126  0184B6  6EDA               	movwf	fsr2h,c
 40127  0184B8  0E80               	movlw	128
 40128  0184BA  12DE               	iorwf	postinc2,f,c
 40129  0184BC  0E7F               	movlw	127
 40130  0184BE  12DD               	iorwf	postdec2,f,c
 40131  0184C0                     l10378:
 40132                           
 40133                           ;stkvar	_sign @ sp[(-13)+12]
 40134  0184C0  0EFF               	movlw	-1
 40135  0184C2  006F FF8C  F035    	movff	plusw1,btemp+11
 40136                           
 40137                           ;stkvar	_b @ sp[(-13)+-4]
 40138  0184C8  0EF2               	movlw	242
 40139  0184CA  24E1               	addwf	fsr1l,w,c
 40140  0184CC  6ED9               	movwf	fsr2l,c
 40141  0184CE  0EFF               	movlw	255
 40142  0184D0  20E2               	addwfc	fsr1h,w,c
 40143  0184D2  6EDA               	movwf	fsr2h,c
 40144  0184D4  5035               	movf	(btemp+11)^0,w,c
 40145  0184D6  12DF               	iorwf	indf2,f,c
 40146                           
 40147                           ;stkvar	_b @ sp[(-13)+-4]
 40148  0184D8  0EEF               	movlw	-17
 40149  0184DA  006F FF8C  F02A    	movff	plusw1,btemp
 40150  0184E0  0EF0               	movlw	-16
 40151  0184E2  006F FF8C  F02B    	movff	plusw1,btemp+1
 40152  0184E8  0EF1               	movlw	-15
 40153  0184EA  006F FF8C  F02C    	movff	plusw1,btemp+2
 40154  0184F0  0EF2               	movlw	-14
 40155  0184F2  006F FF8C  F02D    	movff	plusw1,btemp+3
 40156  0184F8  D19F               	goto	l3314
 40157  0184FA                     l10384:
 40158                           
 40159                           ;stkvar	_bexp @ sp[(-13)+11]
 40160  0184FA  0EFE               	movlw	-2
 40161  0184FC  50E3               	movf	plusw1,w,c
 40162  0184FE  A4D8               	btfss	status,2,c
 40163  018500  D009               	goto	l10392
 40164  018502  0E00               	movlw	0
 40165  018504  6E2A               	movwf	btemp^0,c
 40166  018506  0E00               	movlw	0
 40167  018508  6E2B               	movwf	(btemp+1)^0,c
 40168  01850A  0E00               	movlw	0
 40169  01850C  6E2C               	movwf	(btemp+2)^0,c
 40170  01850E  0E00               	movlw	0
 40171  018510  6E2D               	movwf	(btemp+3)^0,c
 40172  018512  D192               	goto	l3314
 40173  018514                     l10392:
 40174                           
 40175                           ;stkvar	_bexp @ sp[(-13)+11]
 40176  018514  0EFE               	movlw	-2
 40177  018516  50E3               	movf	plusw1,w,c
 40178  018518  6E34               	movwf	(btemp+10)^0,c
 40179  01851A  6A35               	clrf	(btemp+11)^0,c
 40180                           
 40181                           ;stkvar	_aexp @ sp[(-13)+10]
 40182  01851C  0EFD               	movlw	-3
 40183  01851E  50E3               	movf	plusw1,w,c
 40184  018520  5E34               	subwf	(btemp+10)^0,f,c
 40185  018522  0E00               	movlw	0
 40186  018524  5A35               	subwfb	(btemp+11)^0,f,c
 40187  018526  0E7F               	movlw	127
 40188  018528  2634               	addwf	(btemp+10)^0,f,c
 40189  01852A  0E00               	movlw	0
 40190  01852C  2235               	addwfc	(btemp+11)^0,f,c
 40191                           
 40192                           ;stkvar	_new_exp @ sp[(-13)+8]
 40193  01852E  0EFB               	movlw	-5
 40194  018530  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40195  018536  0EFC               	movlw	-4
 40196  018538  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40197                           
 40198                           ;stkvar	_b @ sp[(-13)+-4]
 40199  01853E  0EEF               	movlw	-17
 40200  018540  006F FF8C  F032    	movff	plusw1,btemp+8
 40201  018546  0EF0               	movlw	-16
 40202  018548  006F FF8C  F033    	movff	plusw1,btemp+9
 40203  01854E  0EF1               	movlw	-15
 40204  018550  006F FF8C  F034    	movff	plusw1,btemp+10
 40205  018556  0EF2               	movlw	-14
 40206  018558  006F FF8C  F035    	movff	plusw1,btemp+11
 40207                           
 40208                           ;stkvar	_rem @ sp[(-13)+4]
 40209  01855E  0EF7               	movlw	-9
 40210  018560  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40211  018566  0EF8               	movlw	-8
 40212  018568  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40213  01856E  0EF9               	movlw	-7
 40214  018570  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40215  018576  0EFA               	movlw	-6
 40216  018578  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40217                           
 40218                           ;stkvar	_b @ sp[(-13)+-4]
 40219  01857E  0EEF               	movlw	-17
 40220  018580  6AE3               	clrf	plusw1,c
 40221  018582  0EF0               	movlw	-16
 40222  018584  6AE3               	clrf	plusw1,c
 40223  018586  0EF1               	movlw	-15
 40224  018588  6AE3               	clrf	plusw1,c
 40225  01858A  0EF2               	movlw	-14
 40226  01858C  6AE3               	clrf	plusw1,c
 40227                           
 40228                           ;stkvar	_grs @ sp[(-13)+0]
 40229  01858E  0EF3               	movlw	-13
 40230  018590  6AE3               	clrf	plusw1,c
 40231  018592  0EF4               	movlw	-12
 40232  018594  6AE3               	clrf	plusw1,c
 40233  018596  0EF5               	movlw	-11
 40234  018598  6AE3               	clrf	plusw1,c
 40235  01859A  0EF6               	movlw	-10
 40236  01859C  6AE3               	clrf	plusw1,c
 40237                           
 40238                           ;stkvar	_aexp @ sp[(-13)+10]
 40239  01859E  0EFD               	movlw	-3
 40240  0185A0  6AE3               	clrf	plusw1,c
 40241  0185A2  D050               	goto	l10420
 40242  0185A4                     l10402:
 40243                           
 40244                           ;stkvar	_aexp @ sp[(-13)+10]
 40245  0185A4  0EFD               	movlw	-3
 40246  0185A6  50E3               	movf	plusw1,w,c
 40247  0185A8  B4D8               	btfsc	status,2,c
 40248  0185AA  D020               	goto	l10412
 40249                           
 40250                           ;stkvar	_rem @ sp[(-13)+4]
 40251  0185AC  90D8               	bcf	status,0,c
 40252  0185AE  0EF7               	movlw	-9
 40253  0185B0  36E3               	rlcf	plusw1,f,c
 40254  0185B2  0EF8               	movlw	-8
 40255  0185B4  36E3               	rlcf	plusw1,f,c
 40256  0185B6  0EF9               	movlw	-7
 40257  0185B8  36E3               	rlcf	plusw1,f,c
 40258  0185BA  0EFA               	movlw	-6
 40259  0185BC  36E3               	rlcf	plusw1,f,c
 40260                           
 40261                           ;stkvar	_b @ sp[(-13)+-4]
 40262  0185BE  90D8               	bcf	status,0,c
 40263  0185C0  0EEF               	movlw	-17
 40264  0185C2  36E3               	rlcf	plusw1,f,c
 40265  0185C4  0EF0               	movlw	-16
 40266  0185C6  36E3               	rlcf	plusw1,f,c
 40267  0185C8  0EF1               	movlw	-15
 40268  0185CA  36E3               	rlcf	plusw1,f,c
 40269  0185CC  0EF2               	movlw	-14
 40270  0185CE  36E3               	rlcf	plusw1,f,c
 40271                           
 40272                           ;stkvar	_grs @ sp[(-13)+0]
 40273  0185D0  0EF6               	movlw	-10
 40274  0185D2  AEE3               	btfss	plusw1,7,c
 40275  0185D4  D002               	goto	l10410
 40276                           
 40277                           ;stkvar	_b @ sp[(-13)+-4]
 40278  0185D6  0EEF               	movlw	-17
 40279  0185D8  80E3               	bsf	plusw1,0,c
 40280  0185DA                     l10410:
 40281                           
 40282                           ;stkvar	_grs @ sp[(-13)+0]
 40283  0185DA  90D8               	bcf	status,0,c
 40284  0185DC  0EF3               	movlw	-13
 40285  0185DE  36E3               	rlcf	plusw1,f,c
 40286  0185E0  0EF4               	movlw	-12
 40287  0185E2  36E3               	rlcf	plusw1,f,c
 40288  0185E4  0EF5               	movlw	-11
 40289  0185E6  36E3               	rlcf	plusw1,f,c
 40290  0185E8  0EF6               	movlw	-10
 40291  0185EA  36E3               	rlcf	plusw1,f,c
 40292  0185EC                     l10412:
 40293                           
 40294                           ;stkvar	_a @ sp[(-13)+-8]
 40295                           ;stkvar	_rem @ sp[(-13)+4]
 40296  0185EC  50E1               	movf	fsr1l,w,c
 40297  0185EE  0FF7               	addlw	-9
 40298  0185F0  6ED9               	movwf	fsr2l,c
 40299  0185F2  50E2               	movf	fsr1h,w,c
 40300  0185F4  6EDA               	movwf	fsr2h,c
 40301  0185F6  0EFF               	movlw	255
 40302  0185F8  22DA               	addwfc	fsr2h,f,c
 40303  0185FA  0EEB               	movlw	-21
 40304  0185FC  50E3               	movf	plusw1,w,c
 40305  0185FE  5CDE               	subwf	postinc2,w,c
 40306  018600  0EEC               	movlw	-20
 40307  018602  50E3               	movf	plusw1,w,c
 40308  018604  58DE               	subwfb	postinc2,w,c
 40309  018606  0EED               	movlw	-19
 40310  018608  50E3               	movf	plusw1,w,c
 40311  01860A  58DE               	subwfb	postinc2,w,c
 40312  01860C  0EEE               	movlw	-18
 40313  01860E  50E3               	movf	plusw1,w,c
 40314  018610  58DE               	subwfb	postinc2,w,c
 40315  018612  A0D8               	btfss	status,0,c
 40316  018614  D015               	goto	l10418
 40317                           
 40318                           ;stkvar	_grs @ sp[(-13)+0]
 40319  018616  0EF6               	movlw	-10
 40320  018618  8CE3               	bsf	plusw1,6,c
 40321                           
 40322                           ;stkvar	_a @ sp[(-13)+-8]
 40323                           ;stkvar	_rem @ sp[(-13)+4]
 40324  01861A  50E1               	movf	fsr1l,w,c
 40325  01861C  0FF7               	addlw	-9
 40326  01861E  6ED9               	movwf	fsr2l,c
 40327  018620  50E2               	movf	fsr1h,w,c
 40328  018622  6EDA               	movwf	fsr2h,c
 40329  018624  0EFF               	movlw	255
 40330  018626  22DA               	addwfc	fsr2h,f,c
 40331  018628  0EEB               	movlw	-21
 40332  01862A  50E3               	movf	plusw1,w,c
 40333  01862C  5EDE               	subwf	postinc2,f,c
 40334  01862E  0EEC               	movlw	-20
 40335  018630  50E3               	movf	plusw1,w,c
 40336  018632  5ADE               	subwfb	postinc2,f,c
 40337  018634  0EED               	movlw	-19
 40338  018636  50E3               	movf	plusw1,w,c
 40339  018638  5ADE               	subwfb	postinc2,f,c
 40340  01863A  0EEE               	movlw	-18
 40341  01863C  50E3               	movf	plusw1,w,c
 40342  01863E  5ADE               	subwfb	postinc2,f,c
 40343  018640                     l10418:
 40344                           
 40345                           ;stkvar	_aexp @ sp[(-13)+10]
 40346  018640  0EFD               	movlw	-3
 40347  018642  2AE3               	incf	plusw1,f,c
 40348  018644                     l10420:
 40349                           
 40350                           ;stkvar	_aexp @ sp[(-13)+10]
 40351  018644  0EFD               	movlw	-3
 40352  018646  006F FF8C  F02A    	movff	plusw1,btemp
 40353  01864C  0E19               	movlw	25
 40354  01864E  642A               	cpfsgt	btemp^0,c
 40355  018650  D7A9               	goto	l10402
 40356                           
 40357                           ;stkvar	_rem @ sp[(-13)+4]
 40358  018652  0EF7               	movlw	-9
 40359  018654  50E3               	movf	plusw1,w,c
 40360  018656  E10A               	bnz	u8470
 40361  018658  0EF8               	movlw	-8
 40362  01865A  50E3               	movf	plusw1,w,c
 40363  01865C  E107               	bnz	u8470
 40364  01865E  0EF9               	movlw	-7
 40365  018660  50E3               	movf	plusw1,w,c
 40366  018662  E104               	bnz	u8470
 40367  018664  0EFA               	movlw	-6
 40368  018666  50E3               	movf	plusw1,w,c
 40369  018668  B4D8               	btfsc	status,2,c
 40370  01866A  D024               	goto	l10436
 40371  01866C                     u8470:
 40372                           
 40373                           ;stkvar	_grs @ sp[(-13)+0]
 40374  01866C  0EF3               	movlw	-13
 40375  01866E  80E3               	bsf	plusw1,0,c
 40376  018670  D021               	goto	l10436
 40377  018672                     l10426:
 40378                           
 40379                           ;stkvar	_b @ sp[(-13)+-4]
 40380  018672  90D8               	bcf	status,0,c
 40381  018674  0EEF               	movlw	-17
 40382  018676  36E3               	rlcf	plusw1,f,c
 40383  018678  0EF0               	movlw	-16
 40384  01867A  36E3               	rlcf	plusw1,f,c
 40385  01867C  0EF1               	movlw	-15
 40386  01867E  36E3               	rlcf	plusw1,f,c
 40387  018680  0EF2               	movlw	-14
 40388  018682  36E3               	rlcf	plusw1,f,c
 40389                           
 40390                           ;stkvar	_grs @ sp[(-13)+0]
 40391  018684  0EF6               	movlw	-10
 40392  018686  AEE3               	btfss	plusw1,7,c
 40393  018688  D002               	goto	l10432
 40394                           
 40395                           ;stkvar	_b @ sp[(-13)+-4]
 40396  01868A  0EEF               	movlw	-17
 40397  01868C  80E3               	bsf	plusw1,0,c
 40398  01868E                     l10432:
 40399                           
 40400                           ;stkvar	_grs @ sp[(-13)+0]
 40401  01868E  90D8               	bcf	status,0,c
 40402  018690  0EF3               	movlw	-13
 40403  018692  36E3               	rlcf	plusw1,f,c
 40404  018694  0EF4               	movlw	-12
 40405  018696  36E3               	rlcf	plusw1,f,c
 40406  018698  0EF5               	movlw	-11
 40407  01869A  36E3               	rlcf	plusw1,f,c
 40408  01869C  0EF6               	movlw	-10
 40409  01869E  36E3               	rlcf	plusw1,f,c
 40410                           
 40411                           ;stkvar	_new_exp @ sp[(-13)+8]
 40412  0186A0  50E1               	movf	fsr1l,w,c
 40413  0186A2  0FFB               	addlw	-5
 40414  0186A4  6ED9               	movwf	fsr2l,c
 40415  0186A6  50E2               	movf	fsr1h,w,c
 40416  0186A8  6EDA               	movwf	fsr2h,c
 40417  0186AA  0EFF               	movlw	255
 40418  0186AC  22DA               	addwfc	fsr2h,f,c
 40419  0186AE  06DE               	decf	postinc2,f,c
 40420  0186B0  0E00               	movlw	0
 40421  0186B2  5ADD               	subwfb	postdec2,f,c
 40422  0186B4                     l10436:
 40423                           
 40424                           ;stkvar	_b @ sp[(-13)+-4]
 40425  0186B4  0EF1               	movlw	-15
 40426  0186B6  AEE3               	btfss	plusw1,7,c
 40427  0186B8  D7DC               	goto	l10426
 40428                           
 40429                           ;stkvar	_aexp @ sp[(-13)+10]
 40430  0186BA  0EFD               	movlw	-3
 40431  0186BC  6AE3               	clrf	plusw1,c
 40432                           
 40433                           ;stkvar	_grs @ sp[(-13)+0]
 40434  0186BE  0EF6               	movlw	-10
 40435  0186C0  AEE3               	btfss	plusw1,7,c
 40436  0186C2  D020               	goto	l10450
 40437                           
 40438                           ;stkvar	_grs @ sp[(-13)+0]
 40439  0186C4  50E1               	movf	fsr1l,w,c
 40440  0186C6  0FF3               	addlw	-13
 40441  0186C8  6ED9               	movwf	fsr2l,c
 40442  0186CA  50E2               	movf	fsr1h,w,c
 40443  0186CC  6EDA               	movwf	fsr2h,c
 40444  0186CE  0EFF               	movlw	255
 40445  0186D0  22DA               	addwfc	fsr2h,f,c
 40446  0186D2  0EFF               	movlw	255
 40447  0186D4  14DE               	andwf	postinc2,w,c
 40448  0186D6  6E32               	movwf	(btemp+8)^0,c
 40449  0186D8  0EFF               	movlw	255
 40450  0186DA  14DE               	andwf	postinc2,w,c
 40451  0186DC  6E33               	movwf	(btemp+9)^0,c
 40452  0186DE  0EFF               	movlw	255
 40453  0186E0  14DE               	andwf	postinc2,w,c
 40454  0186E2  6E34               	movwf	(btemp+10)^0,c
 40455  0186E4  0E7F               	movlw	127
 40456  0186E6  14DE               	andwf	postinc2,w,c
 40457  0186E8  6E35               	movwf	(btemp+11)^0,c
 40458  0186EA  5032               	movf	(btemp+8)^0,w,c
 40459  0186EC  1033               	iorwf	(btemp+9)^0,w,c
 40460  0186EE  1034               	iorwf	(btemp+10)^0,w,c
 40461  0186F0  1035               	iorwf	(btemp+11)^0,w,c
 40462  0186F2  B4D8               	btfsc	status,2,c
 40463  0186F4  D004               	goto	l10446
 40464  0186F6                     u8510:
 40465                           
 40466                           ;stkvar	_aexp @ sp[(-13)+10]
 40467  0186F6  0EFD               	movlw	-3
 40468  0186F8  6AE3               	clrf	plusw1,c
 40469  0186FA  2AE3               	incf	plusw1,f,c
 40470  0186FC  D003               	goto	l10450
 40471  0186FE                     l10446:
 40472                           
 40473                           ;stkvar	_b @ sp[(-13)+-4]
 40474  0186FE  0EEF               	movlw	-17
 40475  018700  B0E3               	btfsc	plusw1,0,c
 40476  018702  D7F9               	goto	u8510
 40477  018704                     l10450:
 40478                           
 40479                           ;stkvar	_aexp @ sp[(-13)+10]
 40480  018704  0EFD               	movlw	-3
 40481  018706  50E3               	movf	plusw1,w,c
 40482  018708  B4D8               	btfsc	status,2,c
 40483  01870A  D036               	goto	l10460
 40484                           
 40485                           ;stkvar	_b @ sp[(-13)+-4]
 40486  01870C  50E1               	movf	fsr1l,w,c
 40487  01870E  0FEF               	addlw	-17
 40488  018710  6ED9               	movwf	fsr2l,c
 40489  018712  50E2               	movf	fsr1h,w,c
 40490  018714  6EDA               	movwf	fsr2h,c
 40491  018716  0EFF               	movlw	255
 40492  018718  22DA               	addwfc	fsr2h,f,c
 40493  01871A  2ADE               	incf	postinc2,f,c
 40494  01871C  0E00               	movlw	0
 40495  01871E  22DE               	addwfc	postinc2,f,c
 40496  018720  22DE               	addwfc	postinc2,f,c
 40497  018722  22DE               	addwfc	postinc2,f,c
 40498                           
 40499                           ;stkvar	_b @ sp[(-13)+-4]
 40500  018724  0EF2               	movlw	-14
 40501  018726  A0E3               	btfss	plusw1,0,c
 40502  018728  D027               	goto	l10460
 40503  01872A  0E01               	movlw	1
 40504  01872C  6E35               	movwf	(btemp+11)^0,c
 40505                           
 40506                           ;stkvar	_b @ sp[(-13)+-4]
 40507  01872E  50E1               	movf	fsr1l,w,c
 40508  018730  0FEF               	addlw	-17
 40509  018732  6ED9               	movwf	fsr2l,c
 40510  018734  50E2               	movf	fsr1h,w,c
 40511  018736  6EDA               	movwf	fsr2h,c
 40512  018738  0EFF               	movlw	255
 40513  01873A  22DA               	addwfc	fsr2h,f,c
 40514  01873C  2835               	incf	(btemp+11)^0,w,c
 40515  01873E  52DE               	movf	postinc2,f,c
 40516  018740  D008               	goto	u8550
 40517  018742                     u8555:
 40518  018742  52DE               	movf	postinc2,f,c
 40519  018744  90D8               	bcf	status,0,c
 40520  018746  BEDC               	btfsc	preinc2,7,c
 40521  018748  80D8               	bsf	status,0,c
 40522  01874A  32DD               	rrcf	postdec2,f,c
 40523  01874C  32DD               	rrcf	postdec2,f,c
 40524  01874E  32DD               	rrcf	postdec2,f,c
 40525  018750  32DE               	rrcf	postinc2,f,c
 40526  018752                     u8550:
 40527  018752  2EE8               	decfsz	wreg,f,c
 40528  018754  D7F6               	goto	u8555
 40529                           
 40530                           ;stkvar	_new_exp @ sp[(-13)+8]
 40531  018756  0EFB               	movlw	-5
 40532  018758  50E3               	movf	plusw1,w,c
 40533  01875A  0F01               	addlw	1
 40534  01875C  6E2A               	movwf	btemp^0,c
 40535  01875E  0EFB               	movlw	-5
 40536  018760  0060  F0AB  FFE3   	movff	btemp,plusw1
 40537  018766  6A2A               	clrf	btemp^0,c
 40538  018768  0EFC               	movlw	-4
 40539  01876A  50E3               	movf	plusw1,w,c
 40540  01876C  202A               	addwfc	btemp^0,w,c
 40541  01876E  6E2A               	movwf	btemp^0,c
 40542  018770  0EFC               	movlw	-4
 40543  018772  0060  F0AB  FFE3   	movff	btemp,plusw1
 40544  018778                     l10460:
 40545                           
 40546                           ;stkvar	_new_exp @ sp[(-13)+8]
 40547  018778  0EFC               	movlw	-4
 40548  01877A  BEE3               	btfsc	plusw1,7,c
 40549  01877C  D01B               	goto	l10466
 40550  01877E  0EFC               	movlw	-4
 40551  018780  50E3               	movf	plusw1,w,c
 40552  018782  E104               	bnz	u8560
 40553  018784  0EFB               	movlw	-5
 40554  018786  28E3               	incf	plusw1,w,c
 40555  018788  A0D8               	btfss	status,0,c
 40556  01878A  D014               	goto	l10466
 40557  01878C                     u8560:
 40558  01878C  0EFF               	movlw	255
 40559  01878E  6E34               	movwf	(btemp+10)^0,c
 40560  018790  0E00               	movlw	0
 40561  018792  6E35               	movwf	(btemp+11)^0,c
 40562                           
 40563                           ;stkvar	_new_exp @ sp[(-13)+8]
 40564  018794  0EFB               	movlw	-5
 40565  018796  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40566  01879C  0EFC               	movlw	-4
 40567  01879E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40568                           
 40569                           ;stkvar	_b @ sp[(-13)+-4]
 40570  0187A4  0EEF               	movlw	-17
 40571  0187A6  6AE3               	clrf	plusw1,c
 40572  0187A8  0EF0               	movlw	-16
 40573  0187AA  6AE3               	clrf	plusw1,c
 40574  0187AC  0EF1               	movlw	-15
 40575  0187AE  6AE3               	clrf	plusw1,c
 40576  0187B0  0EF2               	movlw	-14
 40577  0187B2  6AE3               	clrf	plusw1,c
 40578  0187B4                     l10466:
 40579                           
 40580                           ;stkvar	_new_exp @ sp[(-13)+8]
 40581  0187B4  0EFC               	movlw	-4
 40582  0187B6  BEE3               	btfsc	plusw1,7,c
 40583  0187B8  D007               	goto	u8570
 40584  0187BA  0EFC               	movlw	-4
 40585  0187BC  50E3               	movf	plusw1,w,c
 40586  0187BE  E112               	bnz	l10472
 40587  0187C0  0EFB               	movlw	-5
 40588  0187C2  04E3               	decf	plusw1,w,c
 40589  0187C4  B0D8               	btfsc	status,0,c
 40590  0187C6  D00E               	goto	l10472
 40591  0187C8                     u8570:
 40592                           
 40593                           ;stkvar	_new_exp @ sp[(-13)+8]
 40594  0187C8  0EFB               	movlw	-5
 40595  0187CA  6AE3               	clrf	plusw1,c
 40596  0187CC  0EFC               	movlw	-4
 40597  0187CE  6AE3               	clrf	plusw1,c
 40598                           
 40599                           ;stkvar	_b @ sp[(-13)+-4]
 40600  0187D0  0EEF               	movlw	-17
 40601  0187D2  6AE3               	clrf	plusw1,c
 40602  0187D4  0EF0               	movlw	-16
 40603  0187D6  6AE3               	clrf	plusw1,c
 40604  0187D8  0EF1               	movlw	-15
 40605  0187DA  6AE3               	clrf	plusw1,c
 40606  0187DC  0EF2               	movlw	-14
 40607  0187DE  6AE3               	clrf	plusw1,c
 40608                           
 40609                           ;stkvar	_sign @ sp[(-13)+12]
 40610  0187E0  0EFF               	movlw	-1
 40611  0187E2  6AE3               	clrf	plusw1,c
 40612  0187E4                     l10472:
 40613                           
 40614                           ;stkvar	_new_exp @ sp[(-13)+8]
 40615                           ;stkvar	_bexp @ sp[(-13)+11]
 40616  0187E4  0EFB               	movlw	-5
 40617  0187E6  006F FF8C  F02A    	movff	plusw1,btemp
 40618  0187EC  0EFE               	movlw	-2
 40619  0187EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 40620                           
 40621                           ;stkvar	_bexp @ sp[(-13)+11]
 40622  0187F4  0EFE               	movlw	-2
 40623  0187F6  A0E3               	btfss	plusw1,0,c
 40624  0187F8  D009               	goto	l10478
 40625                           
 40626                           ;stkvar	_b @ sp[(-13)+-4]
 40627  0187FA  0EF1               	movlw	241
 40628  0187FC  24E1               	addwf	fsr1l,w,c
 40629  0187FE  6ED9               	movwf	fsr2l,c
 40630  018800  0EFF               	movlw	255
 40631  018802  20E2               	addwfc	fsr1h,w,c
 40632  018804  6EDA               	movwf	fsr2h,c
 40633  018806  0E00               	movlw	0
 40634  018808  8EDB               	bsf	plusw2,7,c
 40635  01880A  D008               	goto	l10480
 40636  01880C                     l10478:
 40637                           
 40638                           ;stkvar	_b @ sp[(-13)+-4]
 40639  01880C  0EF1               	movlw	241
 40640  01880E  24E1               	addwf	fsr1l,w,c
 40641  018810  6ED9               	movwf	fsr2l,c
 40642  018812  0EFF               	movlw	255
 40643  018814  20E2               	addwfc	fsr1h,w,c
 40644  018816  6EDA               	movwf	fsr2h,c
 40645  018818  0E7F               	movlw	127
 40646  01881A  16DF               	andwf	indf2,f,c
 40647  01881C                     l10480:
 40648                           
 40649                           ;stkvar	_b @ sp[(-13)+-4]
 40650  01881C  0EF2               	movlw	242
 40651  01881E  24E1               	addwf	fsr1l,w,c
 40652  018820  6ED9               	movwf	fsr2l,c
 40653  018822  0EFF               	movlw	255
 40654  018824  20E2               	addwfc	fsr1h,w,c
 40655  018826  6EDA               	movwf	fsr2h,c
 40656                           
 40657                           ;stkvar	_bexp @ sp[(-13)+11]
 40658  018828  0EFE               	movlw	-2
 40659  01882A  006F FF8C  F035    	movff	plusw1,btemp+11
 40660  018830  90D8               	bcf	status,0,c
 40661  018832  3035               	rrcf	(btemp+11)^0,w,c
 40662  018834  6EDF               	movwf	indf2,c
 40663  018836  D644               	goto	l10378
 40664  018838                     l3314:
 40665                           
 40666                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 40667  018838  0EEB               	movlw	235
 40668  01883A  26E1               	addwf	fsr1l,f,c
 40669  01883C  0EFF               	movlw	255
 40670  01883E  22E2               	addwfc	fsr1h,f,c
 40671  018840  0012               	return		;funcret
 40672  018842                     __end_of___fldiv:
 40673                           	opt callstack 0
 40674                           
 40675 ;; *************** function ___flge *****************
 40676 ;; Defined at:
 40677 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 40678 ;; Parameters:    Size  Location     Type
 40679 ;;  ff1             4  [STACK] unsigned char 
 40680 ;;  ff2             4  [STACK] unsigned char 
 40681 ;; Auto vars:     Size  Location     Type
 40682 ;;		None
 40683 ;; Return value:  Size  Location     Type
 40684 ;;		None               void
 40685 ;; Registers used:
 40686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 40687 ;; Tracked objects:
 40688 ;;		On entry : 0/1
 40689 ;;		On exit  : 0/0
 40690 ;;		Unchanged: 0/0
 40691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40696 ;;Total ram usage:        0 bytes
 40697 ;; Hardware stack levels used:    1
 40698 ;; Hardware stack levels required when called:   15
 40699 ;; This function calls:
 40700 ;;		Nothing
 40701 ;; This function is called by:
 40702 ;;		_main
 40703 ;;		_convert_dac_raw
 40704 ;;		_calc_ror_data
 40705 ;;		_check_day_time
 40706 ;;		_calc_bsoc
 40707 ;;		_efgtoa
 40708 ;; This function uses a reentrant model
 40709 ;;
 40710                           
 40711                           	psect	text147
 40712  01EC6A                     __ptext147:
 40713                           	opt callstack 0
 40714  01EC6A                     ___flge:
 40715                           	opt callstack 0
 40716                           
 40717                           ;stkvar	_ff1 @ sp[(0)+-4]
 40718                           
 40719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40720                           ;incstack = 0
 40721 ;; hardware stack exceeded
 40722  01EC6A  50E1               	movf	fsr1l,w,c
 40723  01EC6C  0FFC               	addlw	-4
 40724  01EC6E  6ED9               	movwf	fsr2l,c
 40725  01EC70  50E2               	movf	fsr1h,w,c
 40726  01EC72  6EDA               	movwf	fsr2h,c
 40727  01EC74  0EFF               	movlw	255
 40728  01EC76  22DA               	addwfc	fsr2h,f,c
 40729  01EC78  0E00               	movlw	0
 40730  01EC7A  14DE               	andwf	postinc2,w,c
 40731  01EC7C  6E32               	movwf	(btemp+8)^0,c
 40732  01EC7E  0E00               	movlw	0
 40733  01EC80  14DE               	andwf	postinc2,w,c
 40734  01EC82  6E33               	movwf	(btemp+9)^0,c
 40735  01EC84  0E80               	movlw	128
 40736  01EC86  14DE               	andwf	postinc2,w,c
 40737  01EC88  6E34               	movwf	(btemp+10)^0,c
 40738  01EC8A  0E7F               	movlw	127
 40739  01EC8C  14DE               	andwf	postinc2,w,c
 40740  01EC8E  6E35               	movwf	(btemp+11)^0,c
 40741  01EC90  5032               	movf	(btemp+8)^0,w,c
 40742  01EC92  1033               	iorwf	(btemp+9)^0,w,c
 40743  01EC94  1034               	iorwf	(btemp+10)^0,w,c
 40744  01EC96  1035               	iorwf	(btemp+11)^0,w,c
 40745  01EC98  A4D8               	btfss	status,2,c
 40746  01EC9A  D008               	goto	l10754
 40747                           
 40748                           ;stkvar	_ff1 @ sp[(0)+-4]
 40749  01EC9C  0EFC               	movlw	-4
 40750  01EC9E  6AE3               	clrf	plusw1,c
 40751  01ECA0  0EFD               	movlw	-3
 40752  01ECA2  6AE3               	clrf	plusw1,c
 40753  01ECA4  0EFE               	movlw	-2
 40754  01ECA6  6AE3               	clrf	plusw1,c
 40755  01ECA8  0EFF               	movlw	-1
 40756  01ECAA  6AE3               	clrf	plusw1,c
 40757  01ECAC                     l10754:
 40758                           
 40759                           ;stkvar	_ff2 @ sp[(0)+-8]
 40760  01ECAC  50E1               	movf	fsr1l,w,c
 40761  01ECAE  0FF8               	addlw	-8
 40762  01ECB0  6ED9               	movwf	fsr2l,c
 40763  01ECB2  50E2               	movf	fsr1h,w,c
 40764  01ECB4  6EDA               	movwf	fsr2h,c
 40765  01ECB6  0EFF               	movlw	255
 40766  01ECB8  22DA               	addwfc	fsr2h,f,c
 40767  01ECBA  0E00               	movlw	0
 40768  01ECBC  14DE               	andwf	postinc2,w,c
 40769  01ECBE  6E32               	movwf	(btemp+8)^0,c
 40770  01ECC0  0E00               	movlw	0
 40771  01ECC2  14DE               	andwf	postinc2,w,c
 40772  01ECC4  6E33               	movwf	(btemp+9)^0,c
 40773  01ECC6  0E80               	movlw	128
 40774  01ECC8  14DE               	andwf	postinc2,w,c
 40775  01ECCA  6E34               	movwf	(btemp+10)^0,c
 40776  01ECCC  0E7F               	movlw	127
 40777  01ECCE  14DE               	andwf	postinc2,w,c
 40778  01ECD0  6E35               	movwf	(btemp+11)^0,c
 40779  01ECD2  5032               	movf	(btemp+8)^0,w,c
 40780  01ECD4  1033               	iorwf	(btemp+9)^0,w,c
 40781  01ECD6  1034               	iorwf	(btemp+10)^0,w,c
 40782  01ECD8  1035               	iorwf	(btemp+11)^0,w,c
 40783  01ECDA  A4D8               	btfss	status,2,c
 40784  01ECDC  D008               	goto	l2995
 40785                           
 40786                           ;stkvar	_ff2 @ sp[(0)+-8]
 40787  01ECDE  0EF8               	movlw	-8
 40788  01ECE0  6AE3               	clrf	plusw1,c
 40789  01ECE2  0EF9               	movlw	-7
 40790  01ECE4  6AE3               	clrf	plusw1,c
 40791  01ECE6  0EFA               	movlw	-6
 40792  01ECE8  6AE3               	clrf	plusw1,c
 40793  01ECEA  0EFB               	movlw	-5
 40794  01ECEC  6AE3               	clrf	plusw1,c
 40795  01ECEE                     l2995:
 40796                           
 40797                           ;stkvar	_ff1 @ sp[(0)+-4]
 40798  01ECEE  0EFF               	movlw	-1
 40799  01ECF0  AEE3               	btfss	plusw1,7,c
 40800  01ECF2  D024               	goto	l10760
 40801                           
 40802                           ;stkvar	_ff1 @ sp[(0)+-4]
 40803  01ECF4  0E00               	movlw	0
 40804  01ECF6  6E32               	movwf	(btemp+8)^0,c
 40805  01ECF8  0E00               	movlw	0
 40806  01ECFA  6E33               	movwf	(btemp+9)^0,c
 40807  01ECFC  0E00               	movlw	0
 40808  01ECFE  6E34               	movwf	(btemp+10)^0,c
 40809  01ED00  0E80               	movlw	128
 40810  01ED02  6E35               	movwf	(btemp+11)^0,c
 40811  01ED04  0EFC               	movlw	-4
 40812  01ED06  50E3               	movf	plusw1,w,c
 40813  01ED08  5E32               	subwf	(btemp+8)^0,f,c
 40814  01ED0A  0EFD               	movlw	-3
 40815  01ED0C  50E3               	movf	plusw1,w,c
 40816  01ED0E  5A33               	subwfb	(btemp+9)^0,f,c
 40817  01ED10  0EFE               	movlw	-2
 40818  01ED12  50E3               	movf	plusw1,w,c
 40819  01ED14  5A34               	subwfb	(btemp+10)^0,f,c
 40820  01ED16  0EFF               	movlw	-1
 40821  01ED18  50E3               	movf	plusw1,w,c
 40822  01ED1A  5A35               	subwfb	(btemp+11)^0,f,c
 40823                           
 40824                           ;stkvar	_ff1 @ sp[(0)+-4]
 40825  01ED1C  0EFC               	movlw	-4
 40826  01ED1E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40827  01ED24  0EFD               	movlw	-3
 40828  01ED26  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40829  01ED2C  0EFE               	movlw	-2
 40830  01ED2E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40831  01ED34  0EFF               	movlw	-1
 40832  01ED36  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40833  01ED3C                     l10760:
 40834                           
 40835                           ;stkvar	_ff2 @ sp[(0)+-8]
 40836  01ED3C  0EFB               	movlw	-5
 40837  01ED3E  AEE3               	btfss	plusw1,7,c
 40838  01ED40  D024               	goto	l10764
 40839                           
 40840                           ;stkvar	_ff2 @ sp[(0)+-8]
 40841  01ED42  0E00               	movlw	0
 40842  01ED44  6E32               	movwf	(btemp+8)^0,c
 40843  01ED46  0E00               	movlw	0
 40844  01ED48  6E33               	movwf	(btemp+9)^0,c
 40845  01ED4A  0E00               	movlw	0
 40846  01ED4C  6E34               	movwf	(btemp+10)^0,c
 40847  01ED4E  0E80               	movlw	128
 40848  01ED50  6E35               	movwf	(btemp+11)^0,c
 40849  01ED52  0EF8               	movlw	-8
 40850  01ED54  50E3               	movf	plusw1,w,c
 40851  01ED56  5E32               	subwf	(btemp+8)^0,f,c
 40852  01ED58  0EF9               	movlw	-7
 40853  01ED5A  50E3               	movf	plusw1,w,c
 40854  01ED5C  5A33               	subwfb	(btemp+9)^0,f,c
 40855  01ED5E  0EFA               	movlw	-6
 40856  01ED60  50E3               	movf	plusw1,w,c
 40857  01ED62  5A34               	subwfb	(btemp+10)^0,f,c
 40858  01ED64  0EFB               	movlw	-5
 40859  01ED66  50E3               	movf	plusw1,w,c
 40860  01ED68  5A35               	subwfb	(btemp+11)^0,f,c
 40861                           
 40862                           ;stkvar	_ff2 @ sp[(0)+-8]
 40863  01ED6A  0EF8               	movlw	-8
 40864  01ED6C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40865  01ED72  0EF9               	movlw	-7
 40866  01ED74  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40867  01ED7A  0EFA               	movlw	-6
 40868  01ED7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40869  01ED82  0EFB               	movlw	-5
 40870  01ED84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40871  01ED8A                     l10764:
 40872                           
 40873                           ;stkvar	_ff1 @ sp[(0)+-4]
 40874  01ED8A  0EFF               	movlw	-1
 40875  01ED8C  7EE3               	btg	plusw1,7,c
 40876                           
 40877                           ;stkvar	_ff2 @ sp[(0)+-8]
 40878  01ED8E  0EFB               	movlw	-5
 40879  01ED90  7EE3               	btg	plusw1,7,c
 40880                           
 40881                           ;stkvar	_ff2 @ sp[(0)+-8]
 40882                           ;stkvar	_ff1 @ sp[(0)+-4]
 40883  01ED92  50E1               	movf	fsr1l,w,c
 40884  01ED94  0FFC               	addlw	-4
 40885  01ED96  6ED9               	movwf	fsr2l,c
 40886  01ED98  50E2               	movf	fsr1h,w,c
 40887  01ED9A  6EDA               	movwf	fsr2h,c
 40888  01ED9C  0EFF               	movlw	255
 40889  01ED9E  22DA               	addwfc	fsr2h,f,c
 40890  01EDA0  0EF8               	movlw	-8
 40891  01EDA2  50E3               	movf	plusw1,w,c
 40892  01EDA4  5CDE               	subwf	postinc2,w,c
 40893  01EDA6  0EF9               	movlw	-7
 40894  01EDA8  50E3               	movf	plusw1,w,c
 40895  01EDAA  58DE               	subwfb	postinc2,w,c
 40896  01EDAC  0EFA               	movlw	-6
 40897  01EDAE  50E3               	movf	plusw1,w,c
 40898  01EDB0  58DE               	subwfb	postinc2,w,c
 40899  01EDB2  0EFB               	movlw	-5
 40900  01EDB4  50E3               	movf	plusw1,w,c
 40901  01EDB6  58DE               	subwfb	postinc2,w,c
 40902  01EDB8  B0D8               	btfsc	status,0,c
 40903  01EDBA  D002               	goto	l10772
 40904  01EDBC  902A               	bcf	btemp& (0+255),0,c
 40905  01EDBE  D001               	goto	l3002
 40906  01EDC0                     l10772:
 40907  01EDC0  802A               	bsf	btemp& (0+255),0,c
 40908  01EDC2                     l3002:
 40909                           
 40910                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 40911  01EDC2  0EF8               	movlw	248
 40912  01EDC4  26E1               	addwf	fsr1l,f,c
 40913  01EDC6  0EFF               	movlw	255
 40914  01EDC8  22E2               	addwfc	fsr1h,f,c
 40915  01EDCA  0012               	return		;funcret
 40916  01EDCC                     __end_of___flge:
 40917                           	opt callstack 0
 40918                           
 40919 ;; *************** function _calc_model_data *****************
 40920 ;; Defined at:
 40921 ;;		line 67 in file "mbmc.c"
 40922 ;; Parameters:    Size  Location     Type
 40923 ;;		None
 40924 ;; Auto vars:     Size  Location     Type
 40925 ;;		None
 40926 ;; Return value:  Size  Location     Type
 40927 ;;                  1  [STACK] void 
 40928 ;; Registers used:
 40929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40930 ;; Tracked objects:
 40931 ;;		On entry : 3F/0
 40932 ;;		On exit  : 3F/39
 40933 ;;		Unchanged: 0/0
 40934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40939 ;;Total ram usage:        0 bytes
 40940 ;; Hardware stack levels used:    1
 40941 ;; Hardware stack levels required when called:   18
 40942 ;; This function calls:
 40943 ;;		___fladd
 40944 ;;		___flmul
 40945 ;;		___flsub
 40946 ;;		_lp_filter
 40947 ;;		_start_bsoc
 40948 ;;		_stop_bsoc
 40949 ;; This function is called by:
 40950 ;;		_main
 40951 ;; This function uses a reentrant model
 40952 ;;
 40953                           
 40954                           	psect	text148
 40955  019F6E                     __ptext148:
 40956                           	opt callstack 0
 40957  019F6E                     _calc_model_data:
 40958                           	opt callstack 12
 40959                           
 40960                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 40961                           
 40962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40963                           ;incstack = 0
 40964  019F6E  ECBE  F016         	call	_stop_bsoc	;wreg free
 40965                           
 40966                           ; BSR set to: 57
 40967                           ;mbmc.c: 72:  if (!V.calib) {
 40968  019F72  0102               	movlb	2	; () banked
 40969  019F74  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 40970  019F76  A4D8               	btfss	status,2,c
 40971  019F78  D220               	goto	l14456
 40972                           
 40973                           ; BSR set to: 2
 40974                           ;mbmc.c: 73:   C.updates++;
 40975  019F7A  EE23  F0BD         	lfsr	2,_C+316	;volatile
 40976  019F7E  2ADE               	incf	postinc2,f,c
 40977  019F80  0E00               	movlw	0
 40978  019F82  22DE               	addwfc	postinc2,f,c
 40979  019F84  22DE               	addwfc	postinc2,f,c
 40980  019F86  22DE               	addwfc	postinc2,f,c
 40981                           
 40982                           ; BSR set to: 2
 40983                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 40984  019F88  EE22  F381         	lfsr	2,_C
 40985  019F8C  006F FF78  FBC5    	movff	postinc2,_C+68	;volatile
 40986  019F92  006F FF78  FBC6    	movff	postinc2,_C+69	;volatile
 40987  019F98  006F FF78  FBC7    	movff	postinc2,_C+70	;volatile
 40988  019F9E  006F FF74  FBC8    	movff	postdec2,_C+71	;volatile
 40989                           
 40990                           ; BSR set to: 2
 40991                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 40992  019FA4  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 40993  019FAA  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 40994  019FB0  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 40995  019FB6  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 40996  019FBC  EE22  F3C5         	lfsr	2,_C+68	;volatile
 40997  019FC0  006F FF7B FFE6     	movff	postinc2,postinc1
 40998  019FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 40999  019FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 41000  019FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 41001  019FD8  EC7A  F010         	call	___flsub	;wreg free
 41002  019FDC  0060  F0A8  FBF1   	movff	btemp,_C+112	;volatile
 41003  019FE2  0060  F0AC  FBF2   	movff	btemp+1,_C+113	;volatile
 41004  019FE8  0060  F0B0  FBF3   	movff	btemp+2,_C+114	;volatile
 41005  019FEE  0060  F0B4  FBF4   	movff	btemp+3,_C+115	;volatile
 41006                           
 41007                           ;mbmc.c: 76:   bcror = C.c_bat;
 41008  019FF4  CBC5  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 41009  019FF8  CBC6  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 41010  019FFC  CBC7  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 41011  01A000  CBC8  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 41012                           
 41013                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 41014  01A004  EE22  F385         	lfsr	2,_C+4	;volatile
 41015  01A008  006F FF78  FBC9    	movff	postinc2,_C+72	;volatile
 41016  01A00E  006F FF78  FBCA    	movff	postinc2,_C+73	;volatile
 41017  01A014  006F FF78  FBCB    	movff	postinc2,_C+74	;volatile
 41018  01A01A  006F FF74  FBCC    	movff	postdec2,_C+75	;volatile
 41019                           
 41020                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 41021  01A020  EE22  F391         	lfsr	2,_C+16	;volatile
 41022  01A024  006F FF78  FBD5    	movff	postinc2,_C+84	;volatile
 41023  01A02A  006F FF78  FBD6    	movff	postinc2,_C+85	;volatile
 41024  01A030  006F FF78  FBD7    	movff	postinc2,_C+86	;volatile
 41025  01A036  006F FF74  FBD8    	movff	postdec2,_C+87	;volatile
 41026                           
 41027                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 41028  01A03C  EE22  F3B5         	lfsr	2,_C+52	;volatile
 41029  01A040  006F FF78  FBE9    	movff	postinc2,_C+104	;volatile
 41030  01A046  006F FF78  FBEA    	movff	postinc2,_C+105	;volatile
 41031  01A04C  006F FF78  FBEB    	movff	postinc2,_C+106	;volatile
 41032  01A052  006F FF74  FBEC    	movff	postdec2,_C+107	;volatile
 41033                           
 41034                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 41035  01A058  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 41036  01A05E  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 41037  01A064  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 41038  01A06A  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 41039  01A070  EE22  F3D5         	lfsr	2,_C+84	;volatile
 41040  01A074  006F FF7B FFE6     	movff	postinc2,postinc1
 41041  01A07A  006F FF7B FFE6     	movff	postinc2,postinc1
 41042  01A080  006F FF7B FFE6     	movff	postinc2,postinc1
 41043  01A086  006F FF7B FFE6     	movff	postinc2,postinc1
 41044  01A08C  EC7A  F010         	call	___flsub	;wreg free
 41045  01A090  0060  F0A8  FBED   	movff	btemp,_C+108	;volatile
 41046  01A096  0060  F0AC  FBEE   	movff	btemp+1,_C+109	;volatile
 41047  01A09C  0060  F0B0  FBEF   	movff	btemp+2,_C+110	;volatile
 41048  01A0A2  0060  F0B4  FBF0   	movff	btemp+3,_C+111	;volatile
 41049                           
 41050                           ;mbmc.c: 81:   bvror = C.v_bat;
 41051  01A0A8  CBD5  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 41052  01A0AC  CBD6  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 41053  01A0B0  CBD7  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 41054  01A0B4  CBD8  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 41055                           
 41056                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 41057  01A0B8  EE22  F395         	lfsr	2,_C+20	;volatile
 41058  01A0BC  006F FF78  FBD1    	movff	postinc2,_C+80	;volatile
 41059  01A0C2  006F FF78  FBD2    	movff	postinc2,_C+81	;volatile
 41060  01A0C8  006F FF78  FBD3    	movff	postinc2,_C+82	;volatile
 41061  01A0CE  006F FF74  FBD4    	movff	postdec2,_C+83	;volatile
 41062                           
 41063                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 41064  01A0D4  EE22  F389         	lfsr	2,_C+8	;volatile
 41065  01A0D8  006F FF78  FBCD    	movff	postinc2,_C+76	;volatile
 41066  01A0DE  006F FF78  FBCE    	movff	postinc2,_C+77	;volatile
 41067  01A0E4  006F FF78  FBCF    	movff	postinc2,_C+78	;volatile
 41068  01A0EA  006F FF74  FBD0    	movff	postdec2,_C+79	;volatile
 41069                           
 41070                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 41071  01A0F0  EE22  F3B1         	lfsr	2,_C+48	;volatile
 41072  01A0F4  006F FF78  FBE5    	movff	postinc2,_C+100	;volatile
 41073  01A0FA  006F FF78  FBE6    	movff	postinc2,_C+101	;volatile
 41074  01A100  006F FF78  FBE7    	movff	postinc2,_C+102	;volatile
 41075  01A106  006F FF74  FBE8    	movff	postdec2,_C+103	;volatile
 41076                           
 41077                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 41078  01A10C  0E01               	movlw	1
 41079  01A10E  6EE6               	movwf	postinc1,c
 41080  01A110  0E10               	movlw	16
 41081  01A112  6EE6               	movwf	postinc1,c
 41082  01A114  EE22  F381         	lfsr	2,_C
 41083  01A118  006F FF7B FFE6     	movff	postinc2,postinc1
 41084  01A11E  006F FF7B FFE6     	movff	postinc2,postinc1
 41085  01A124  006F FF7B FFE6     	movff	postinc2,postinc1
 41086  01A12A  006F FF7B FFE6     	movff	postinc2,postinc1
 41087  01A130  EE22  F385         	lfsr	2,_C+4	;volatile
 41088  01A134  006F FF7B FFE6     	movff	postinc2,postinc1
 41089  01A13A  006F FF7B FFE6     	movff	postinc2,postinc1
 41090  01A140  006F FF7B FFE6     	movff	postinc2,postinc1
 41091  01A146  006F FF7B FFE6     	movff	postinc2,postinc1
 41092  01A14C  EC7A  F010         	call	___flsub	;wreg free
 41093  01A150  0060  F0AB  FFE6   	movff	btemp,postinc1
 41094  01A156  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41095  01A15C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41096  01A162  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41097  01A168  EC82  F0EE         	call	_lp_filter	;wreg free
 41098  01A16C  0060  F0A8  FBC1   	movff	btemp,_C+64	;volatile
 41099  01A172  0060  F0AC  FBC2   	movff	btemp+1,_C+65	;volatile
 41100  01A178  0060  F0B0  FBC3   	movff	btemp+2,_C+66	;volatile
 41101  01A17E  0060  F0B4  FBC4   	movff	btemp+3,_C+67	;volatile
 41102                           
 41103                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 41104  01A184  0E01               	movlw	1
 41105  01A186  6EE6               	movwf	postinc1,c
 41106  01A188  0E11               	movlw	17
 41107  01A18A  6EE6               	movwf	postinc1,c
 41108  01A18C  EE22  F3D5         	lfsr	2,_C+84	;volatile
 41109  01A190  006F FF7B FFE6     	movff	postinc2,postinc1
 41110  01A196  006F FF7B FFE6     	movff	postinc2,postinc1
 41111  01A19C  006F FF7B FFE6     	movff	postinc2,postinc1
 41112  01A1A2  006F FF7B FFE6     	movff	postinc2,postinc1
 41113  01A1A8  EE22  F3C1         	lfsr	2,_C+64	;volatile
 41114  01A1AC  006F FF7B FFE6     	movff	postinc2,postinc1
 41115  01A1B2  006F FF7B FFE6     	movff	postinc2,postinc1
 41116  01A1B8  006F FF7B FFE6     	movff	postinc2,postinc1
 41117  01A1BE  006F FF7B FFE6     	movff	postinc2,postinc1
 41118  01A1C4  EC32  F0B3         	call	___flmul	;wreg free
 41119  01A1C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 41120  01A1CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41121  01A1D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41122  01A1DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41123  01A1E0  EC82  F0EE         	call	_lp_filter	;wreg free
 41124  01A1E4  0060  F0A8  FBF5   	movff	btemp,_C+116	;volatile
 41125  01A1EA  0060  F0AC  FBF6   	movff	btemp+1,_C+117	;volatile
 41126  01A1F0  0060  F0B0  FBF7   	movff	btemp+2,_C+118	;volatile
 41127  01A1F6  0060  F0B4  FBF8   	movff	btemp+3,_C+119	;volatile
 41128                           
 41129                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 41130  01A1FC  0E01               	movlw	1
 41131  01A1FE  6EE6               	movwf	postinc1,c
 41132  01A200  0E12               	movlw	18
 41133  01A202  6EE6               	movwf	postinc1,c
 41134  01A204  EE22  F3D1         	lfsr	2,_C+80	;volatile
 41135  01A208  006F FF7B FFE6     	movff	postinc2,postinc1
 41136  01A20E  006F FF7B FFE6     	movff	postinc2,postinc1
 41137  01A214  006F FF7B FFE6     	movff	postinc2,postinc1
 41138  01A21A  006F FF7B FFE6     	movff	postinc2,postinc1
 41139  01A220  EE22  F3C9         	lfsr	2,_C+72	;volatile
 41140  01A224  006F FF7B FFE6     	movff	postinc2,postinc1
 41141  01A22A  006F FF7B FFE6     	movff	postinc2,postinc1
 41142  01A230  006F FF7B FFE6     	movff	postinc2,postinc1
 41143  01A236  006F FF7B FFE6     	movff	postinc2,postinc1
 41144  01A23C  EC32  F0B3         	call	___flmul	;wreg free
 41145  01A240  0060  F0AB  FFE6   	movff	btemp,postinc1
 41146  01A246  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41147  01A24C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41148  01A252  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41149  01A258  EC82  F0EE         	call	_lp_filter	;wreg free
 41150  01A25C  0060  F0A8  FBFD   	movff	btemp,_C+124	;volatile
 41151  01A262  0060  F0AC  FBFE   	movff	btemp+1,_C+125	;volatile
 41152  01A268  0060  F0B0  FBFF   	movff	btemp+2,_C+126	;volatile
 41153  01A26E  0060  F0B4  FC00   	movff	btemp+3,_C+127	;volatile
 41154                           
 41155                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 41156  01A274  0E01               	movlw	1
 41157  01A276  6EE6               	movwf	postinc1,c
 41158  01A278  0E13               	movlw	19
 41159  01A27A  6EE6               	movwf	postinc1,c
 41160  01A27C  0E00               	movlw	0
 41161  01A27E  6EE6               	movwf	postinc1,c
 41162  01A280  0E00               	movlw	0
 41163  01A282  6EE6               	movwf	postinc1,c
 41164  01A284  0E60               	movlw	96
 41165  01A286  6EE6               	movwf	postinc1,c
 41166  01A288  0EC1               	movlw	193
 41167  01A28A  6EE6               	movwf	postinc1,c
 41168  01A28C  EE22  F3E5         	lfsr	2,_C+100	;volatile
 41169  01A290  006F FF7B FFE6     	movff	postinc2,postinc1
 41170  01A296  006F FF7B FFE6     	movff	postinc2,postinc1
 41171  01A29C  006F FF7B FFE6     	movff	postinc2,postinc1
 41172  01A2A2  006F FF7B FFE6     	movff	postinc2,postinc1
 41173  01A2A8  EE22  F3C1         	lfsr	2,_C+64	;volatile
 41174  01A2AC  006F FF7B FFE6     	movff	postinc2,postinc1
 41175  01A2B2  006F FF7B FFE6     	movff	postinc2,postinc1
 41176  01A2B8  006F FF7B FFE6     	movff	postinc2,postinc1
 41177  01A2BE  006F FF7B FFE6     	movff	postinc2,postinc1
 41178  01A2C4  EC32  F0B3         	call	___flmul	;wreg free
 41179  01A2C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 41180  01A2CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41181  01A2D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41182  01A2DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41183  01A2E0  EC47  F0B7         	call	___fladd	;wreg free
 41184  01A2E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 41185  01A2EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41186  01A2F0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41187  01A2F6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41188  01A2FC  EC82  F0EE         	call	_lp_filter	;wreg free
 41189  01A300  0060  F0A8  FBF9   	movff	btemp,_C+120	;volatile
 41190  01A306  0060  F0AC  FBFA   	movff	btemp+1,_C+121	;volatile
 41191  01A30C  0060  F0B0  FBFB   	movff	btemp+2,_C+122	;volatile
 41192  01A312  0060  F0B4  FBFC   	movff	btemp+3,_C+123	;volatile
 41193                           
 41194                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 41195  01A318  0E01               	movlw	1
 41196  01A31A  6EE6               	movwf	postinc1,c
 41197  01A31C  0E14               	movlw	20
 41198  01A31E  6EE6               	movwf	postinc1,c
 41199  01A320  EE22  F3D5         	lfsr	2,_C+84	;volatile
 41200  01A324  006F FF7B FFE6     	movff	postinc2,postinc1
 41201  01A32A  006F FF7B FFE6     	movff	postinc2,postinc1
 41202  01A330  006F FF7B FFE6     	movff	postinc2,postinc1
 41203  01A336  006F FF7B FFE6     	movff	postinc2,postinc1
 41204  01A33C  EE22  F3C5         	lfsr	2,_C+68	;volatile
 41205  01A340  006F FF7B FFE6     	movff	postinc2,postinc1
 41206  01A346  006F FF7B FFE6     	movff	postinc2,postinc1
 41207  01A34C  006F FF7B FFE6     	movff	postinc2,postinc1
 41208  01A352  006F FF7B FFE6     	movff	postinc2,postinc1
 41209  01A358  EC32  F0B3         	call	___flmul	;wreg free
 41210  01A35C  0060  F0AB  FFE6   	movff	btemp,postinc1
 41211  01A362  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41212  01A368  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41213  01A36E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41214  01A374  EC82  F0EE         	call	_lp_filter	;wreg free
 41215  01A378  0060  F0A8  FC01   	movff	btemp,_C+128	;volatile
 41216  01A37E  0060  F0AC  FC02   	movff	btemp+1,_C+129	;volatile
 41217  01A384  0060  F0B0  FC03   	movff	btemp+2,_C+130	;volatile
 41218  01A38A  0060  F0B4  FC04   	movff	btemp+3,_C+131	;volatile
 41219                           
 41220                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 41221  01A390  EE22  F3F9         	lfsr	2,_C+120	;volatile
 41222  01A394  0E03               	movlw	3
 41223  01A396  AEDB               	btfss	plusw2,7,c
 41224  01A398  D010               	goto	l14456
 41225                           
 41226                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 41227  01A39A  0E17               	movlw	23
 41228  01A39C  006F FFA0  FBF9    	movff	wreg,_C+120	;volatile
 41229  01A3A2  0EB7               	movlw	183
 41230  01A3A4  006F FFA0  FBFA    	movff	wreg,_C+121	;volatile
 41231  01A3AA  0ED1               	movlw	209
 41232  01A3AC  006F FFA0  FBFB    	movff	wreg,_C+122	;volatile
 41233  01A3B2  0E38               	movlw	56
 41234  01A3B4  006F FFA0  FBFC    	movff	wreg,_C+123	;volatile
 41235  01A3BA                     l14456:
 41236                           
 41237                           ;mbmc.c: 96:  start_bsoc();
 41238  01A3BA  EC32  F015         	call	_start_bsoc	;wreg free
 41239                           
 41240                           ; BSR set to: 57
 41241                           ;mbmc.c: 97:  C.update = 1;
 41242  01A3BE  0E01               	movlw	1
 41243  01A3C0  006F FFA0  FC39    	movff	wreg,_C+184	;volatile
 41244                           
 41245                           ; BSR set to: 57
 41246                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 41247  01A3C6  0012               	return		;funcret
 41248  01A3C8                     __end_of_calc_model_data:
 41249                           	opt callstack 0
 41250                           
 41251 ;; *************** function _stop_bsoc *****************
 41252 ;; Defined at:
 41253 ;;		line 130 in file "bsoc.c"
 41254 ;; Parameters:    Size  Location     Type
 41255 ;;		None
 41256 ;; Auto vars:     Size  Location     Type
 41257 ;;		None
 41258 ;; Return value:  Size  Location     Type
 41259 ;;                  1  [STACK] void 
 41260 ;; Registers used:
 41261 ;;		None
 41262 ;; Tracked objects:
 41263 ;;		On entry : 0/1
 41264 ;;		On exit  : 3F/39
 41265 ;;		Unchanged: 0/0
 41266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41271 ;;Total ram usage:        0 bytes
 41272 ;; Hardware stack levels used:    1
 41273 ;; Hardware stack levels required when called:   15
 41274 ;; This function calls:
 41275 ;;		Nothing
 41276 ;; This function is called by:
 41277 ;;		_calc_model_data
 41278 ;;		_load_hist_data
 41279 ;; This function uses a reentrant model
 41280 ;;
 41281                           
 41282                           	psect	text149
 41283  002D7C                     __ptext149:
 41284                           	opt callstack 0
 41285  002D7C                     _stop_bsoc:
 41286                           	opt callstack 14
 41287                           
 41288                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 41289                           
 41290                           ; BSR set to: 57
 41291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41292                           ;incstack = 0
 41293  002D7C  0139               	movlb	57	; () banked
 41294  002D7E  9D96               	bcf	150,6,b	;volatile
 41295                           
 41296                           ; BSR set to: 57
 41297                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 41298  002D80  0012               	return		;funcret
 41299  002D82                     __end_of_stop_bsoc:
 41300                           	opt callstack 0
 41301                           
 41302 ;; *************** function _start_bsoc *****************
 41303 ;; Defined at:
 41304 ;;		line 121 in file "bsoc.c"
 41305 ;; Parameters:    Size  Location     Type
 41306 ;;		None
 41307 ;; Auto vars:     Size  Location     Type
 41308 ;;		None
 41309 ;; Return value:  Size  Location     Type
 41310 ;;                  1  [STACK] void 
 41311 ;; Registers used:
 41312 ;;		wreg, status,2, status,0, btemp+11
 41313 ;; Tracked objects:
 41314 ;;		On entry : 0/39
 41315 ;;		On exit  : 3F/39
 41316 ;;		Unchanged: 0/0
 41317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41322 ;;Total ram usage:        0 bytes
 41323 ;; Hardware stack levels used:    1
 41324 ;; Hardware stack levels required when called:   15
 41325 ;; This function calls:
 41326 ;;		Nothing
 41327 ;; This function is called by:
 41328 ;;		_calc_model_data
 41329 ;;		_load_hist_data
 41330 ;; This function uses a reentrant model
 41331 ;;
 41332                           
 41333                           	psect	text150
 41334  002A64                     __ptext150:
 41335                           	opt callstack 0
 41336  002A64                     _start_bsoc:
 41337                           	opt callstack 14
 41338                           
 41339                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 41340                           
 41341                           ; BSR set to: 57
 41342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41343                           ;incstack = 0
 41344  002A64  0139               	movlb	57	; () banked
 41345  002A66  8D96               	bsf	150,6,b	;volatile
 41346                           
 41347                           ; BSR set to: 57
 41348  002A68  A4BE               	btfss	190,2,c	;volatile
 41349  002A6A  D002               	goto	u12780
 41350  002A6C  0E01               	movlw	1
 41351  002A6E  D001               	goto	u12786
 41352  002A70                     u12780:
 41353  002A70  0E00               	movlw	0
 41354  002A72                     u12786:
 41355  002A72  0AFF               	xorlw	255
 41356  002A74  6E35               	movwf	(btemp+11)^0,c
 41357  002A76  4635               	rlncf	(btemp+11)^0,f,c
 41358  002A78  4635               	rlncf	(btemp+11)^0,f,c
 41359  002A7A  50BE               	movf	190,w,c	;volatile
 41360  002A7C  1835               	xorwf	(btemp+11)^0,w,c
 41361  002A7E  0BFB               	andlw	-5
 41362  002A80  1835               	xorwf	(btemp+11)^0,w,c
 41363  002A82  6EBE               	movwf	190,c	;volatile
 41364                           
 41365                           ; BSR set to: 57
 41366                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 41367  002A84  0012               	return		;funcret
 41368  002A86                     __end_of_start_bsoc:
 41369                           	opt callstack 0
 41370                           
 41371 ;; *************** function _lp_filter *****************
 41372 ;; Defined at:
 41373 ;;		line 29 in file "mbmc.c"
 41374 ;; Parameters:    Size  Location     Type
 41375 ;;  new             4  [STACK] const float 
 41376 ;;  bn              1  [STACK] const unsigned char 
 41377 ;;  slow            1  [STACK] const char 
 41378 ;; Auto vars:     Size  Location     Type
 41379 ;;  lp_speed        4  [STACK] float 
 41380 ;; Return value:  Size  Location     Type
 41381 ;;                  4  [STACK] float 
 41382 ;; Registers used:
 41383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41384 ;; Tracked objects:
 41385 ;;		On entry : 0/2
 41386 ;;		On exit  : 0/0
 41387 ;;		Unchanged: 0/0
 41388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41393 ;;Total ram usage:        0 bytes
 41394 ;; Hardware stack levels used:    1
 41395 ;; Hardware stack levels required when called:   17
 41396 ;; This function calls:
 41397 ;;		___fladd
 41398 ;;		___flmul
 41399 ;;		___flsub
 41400 ;; This function is called by:
 41401 ;;		_main
 41402 ;;		_convert_adc_data
 41403 ;;		_calc_model_data
 41404 ;; This function uses a reentrant model
 41405 ;;
 41406                           
 41407                           	psect	text151
 41408  01DD04                     __ptext151:
 41409                           	opt callstack 0
 41410  01DD04                     _lp_filter:
 41411                           	opt callstack 0
 41412                           
 41413                           ; BSR set to: 57
 41414                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41415  01DD04  52E6               	movf	postinc1,f,c
 41416  01DD06  52E6               	movf	postinc1,f,c
 41417  01DD08  52E6               	movf	postinc1,f,c
 41418  01DD0A  52E6               	movf	postinc1,f,c
 41419                           
 41420                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 41421                           ;stkvar	_bn @ sp[(-4)+-5]
 41422                           
 41423                           ;incstack = 0
 41424  01DD0C  0EF7               	movlw	-9
 41425  01DD0E  006F FF8C  F02A    	movff	plusw1,btemp
 41426  01DD14  0E14               	movlw	20
 41427  01DD16  642A               	cpfsgt	btemp^0,c
 41428  01DD18  D011               	goto	l13568
 41429  01DD1A                     u12610:
 41430                           
 41431                           ;mbmc.c: 35:   return new;
 41432                           ;stkvar	_new @ sp[(-4)+-4]
 41433  01DD1A  0EF8               	movlw	-8
 41434  01DD1C  006F FF8C  F02A    	movff	plusw1,btemp
 41435  01DD22  0EF9               	movlw	-7
 41436  01DD24  006F FF8C  F02B    	movff	plusw1,btemp+1
 41437  01DD2A  0EFA               	movlw	-6
 41438  01DD2C  006F FF8C  F02C    	movff	plusw1,btemp+2
 41439  01DD32  0EFB               	movlw	-5
 41440  01DD34  006F FF8C  F02D    	movff	plusw1,btemp+3
 41441  01DD3A  D0BD               	goto	l2145
 41442  01DD3C                     l13568:
 41443                           
 41444                           ;mbmc.c: 37:  if (slow == (-1)) {
 41445                           ;stkvar	_slow @ sp[(-4)+-6]
 41446  01DD3C  0EF6               	movlw	-10
 41447  01DD3E  28E3               	incf	plusw1,w,c
 41448  01DD40  A4D8               	btfss	status,2,c
 41449  01DD42  D012               	goto	l13576
 41450                           
 41451                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 41452                           ;stkvar	_bn @ sp[(-4)+-5]
 41453  01DD44  0EF7               	movlw	-9
 41454  01DD46  50E3               	movf	plusw1,w,c
 41455  01DD48  0D04               	mullw	4
 41456  01DD4A  0E00               	movlw	low lp_filter@smooth
 41457  01DD4C  24F3               	addwf	243,w,c
 41458  01DD4E  6ED9               	movwf	fsr2l,c
 41459  01DD50  0E03               	movlw	high lp_filter@smooth
 41460  01DD52  20F4               	addwfc	prodh,w,c
 41461  01DD54  6EDA               	movwf	fsr2h,c
 41462  01DD56  0E00               	movlw	0
 41463  01DD58  6EDE               	movwf	postinc2,c
 41464  01DD5A  0E00               	movlw	0
 41465  01DD5C  6EDE               	movwf	postinc2,c
 41466  01DD5E  0E00               	movlw	0
 41467  01DD60  6EDE               	movwf	postinc2,c
 41468  01DD62  0E00               	movlw	0
 41469  01DD64  6EDD               	movwf	postdec2,c
 41470  01DD66  D7D9               	goto	u12610
 41471  01DD68                     l13576:
 41472                           
 41473                           ;mbmc.c: 42:  if (slow) {
 41474                           ;stkvar	_slow @ sp[(-4)+-6]
 41475  01DD68  0EF6               	movlw	-10
 41476  01DD6A  50E3               	movf	plusw1,w,c
 41477  01DD6C  B4D8               	btfsc	status,2,c
 41478  01DD6E  D006               	goto	l13580
 41479                           
 41480                           ;mbmc.c: 43:   lp_speed = 0.06;
 41481  01DD70  0E8F               	movlw	143
 41482  01DD72  6E32               	movwf	(btemp+8)^0,c
 41483  01DD74  0EC2               	movlw	194
 41484  01DD76  6E33               	movwf	(btemp+9)^0,c
 41485  01DD78  0E75               	movlw	117
 41486  01DD7A  D005               	goto	L46
 41487  01DD7C                     l13580:
 41488                           
 41489                           ;mbmc.c: 45:   lp_speed = 0.1;
 41490  01DD7C  0ECD               	movlw	205
 41491  01DD7E  6E32               	movwf	(btemp+8)^0,c
 41492  01DD80  0ECC               	movlw	204
 41493  01DD82  6E33               	movwf	(btemp+9)^0,c
 41494  01DD84  0ECC               	movlw	204
 41495  01DD86                     L46:
 41496  01DD86  6E34               	movwf	(btemp+10)^0,c
 41497  01DD88  0E3D               	movlw	61
 41498  01DD8A  6E35               	movwf	(btemp+11)^0,c
 41499                           
 41500                           ;stkvar	_lp_speed @ sp[(-4)+0]
 41501  01DD8C  0EFC               	movlw	-4
 41502  01DD8E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41503  01DD94  0EFD               	movlw	-3
 41504  01DD96  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41505  01DD9C  0EFE               	movlw	-2
 41506  01DD9E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41507  01DDA4  0EFF               	movlw	-1
 41508  01DDA6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41509                           
 41510                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 41511                           ;stkvar	_bn @ sp[(-4)+-5]
 41512  01DDAC  0EF7               	movlw	-9
 41513  01DDAE  50E3               	movf	plusw1,w,c
 41514  01DDB0  0D04               	mullw	4
 41515  01DDB2  0E00               	movlw	low lp_filter@smooth
 41516  01DDB4  24F3               	addwf	243,w,c
 41517  01DDB6  6ED9               	movwf	fsr2l,c
 41518  01DDB8  0E03               	movlw	high lp_filter@smooth
 41519  01DDBA  20F4               	addwfc	prodh,w,c
 41520  01DDBC  6EDA               	movwf	fsr2h,c
 41521  01DDBE  006F FF7B FFE6     	movff	postinc2,postinc1
 41522  01DDC4  006F FF7B FFE6     	movff	postinc2,postinc1
 41523  01DDCA  006F FF7B FFE6     	movff	postinc2,postinc1
 41524  01DDD0  006F FF7B FFE6     	movff	postinc2,postinc1
 41525                           
 41526                           ;stkvar	_lp_speed @ sp[(-8)+0]
 41527  01DDD6  0EF8               	movlw	-8
 41528  01DDD8  006F FF8F FFE6     	movff	plusw1,postinc1
 41529  01DDDE  006F FF8F FFE6     	movff	plusw1,postinc1
 41530  01DDE4  006F FF8F FFE6     	movff	plusw1,postinc1
 41531  01DDEA  006F FF8F FFE6     	movff	plusw1,postinc1
 41532                           
 41533                           ;stkvar	_bn @ sp[(-12)+-5]
 41534  01DDF0  0EEF               	movlw	-17
 41535  01DDF2  50E3               	movf	plusw1,w,c
 41536  01DDF4  0D04               	mullw	4
 41537  01DDF6  0E00               	movlw	low lp_filter@smooth
 41538  01DDF8  24F3               	addwf	243,w,c
 41539  01DDFA  6ED9               	movwf	fsr2l,c
 41540  01DDFC  0E03               	movlw	high lp_filter@smooth
 41541  01DDFE  20F4               	addwfc	prodh,w,c
 41542  01DE00  6EDA               	movwf	fsr2h,c
 41543  01DE02  006F FF7B FFE6     	movff	postinc2,postinc1
 41544  01DE08  006F FF7B FFE6     	movff	postinc2,postinc1
 41545  01DE0E  006F FF7B FFE6     	movff	postinc2,postinc1
 41546  01DE14  006F FF7B FFE6     	movff	postinc2,postinc1
 41547                           
 41548                           ;stkvar	_new @ sp[(-16)+-4]
 41549  01DE1A  0EEC               	movlw	-20
 41550  01DE1C  006F FF8F FFE6     	movff	plusw1,postinc1
 41551  01DE22  006F FF8F FFE6     	movff	plusw1,postinc1
 41552  01DE28  006F FF8F FFE6     	movff	plusw1,postinc1
 41553  01DE2E  006F FF8F FFE6     	movff	plusw1,postinc1
 41554  01DE34  EC7A  F010         	call	___flsub	;wreg free
 41555  01DE38  0060  F0AB  FFE6   	movff	btemp,postinc1
 41556  01DE3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41557  01DE44  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41558  01DE4A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41559  01DE50  EC32  F0B3         	call	___flmul	;wreg free
 41560  01DE54  0060  F0AB  FFE6   	movff	btemp,postinc1
 41561  01DE5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41562  01DE60  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41563  01DE66  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41564  01DE6C  EC47  F0B7         	call	___fladd	;wreg free
 41565                           
 41566                           ;stkvar	_bn @ sp[(-4)+-5]
 41567  01DE70  0EF7               	movlw	-9
 41568  01DE72  50E3               	movf	plusw1,w,c
 41569  01DE74  0D04               	mullw	4
 41570  01DE76  0E00               	movlw	low lp_filter@smooth
 41571  01DE78  24F3               	addwf	243,w,c
 41572  01DE7A  6ED9               	movwf	fsr2l,c
 41573  01DE7C  0E03               	movlw	high lp_filter@smooth
 41574  01DE7E  20F4               	addwfc	prodh,w,c
 41575  01DE80  6EDA               	movwf	fsr2h,c
 41576  01DE82  0060  F0AB  FFDE   	movff	btemp,postinc2
 41577  01DE88  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 41578  01DE8E  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 41579  01DE94  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 41580  01DE9A  52DD               	movf	postdec2,f,c
 41581  01DE9C  52DD               	movf	postdec2,f,c
 41582  01DE9E  006F FF78  F02A    	movff	postinc2,btemp
 41583  01DEA4  006F FF78  F02B    	movff	postinc2,btemp+1
 41584  01DEAA  006F FF78  F02C    	movff	postinc2,btemp+2
 41585  01DEB0  006F FF78  F02D    	movff	postinc2,btemp+3
 41586  01DEB6                     l2145:
 41587                           
 41588                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 41589  01DEB6  0EF6               	movlw	246
 41590  01DEB8  26E1               	addwf	fsr1l,f,c
 41591  01DEBA  0EFF               	movlw	255
 41592  01DEBC  22E2               	addwfc	fsr1h,f,c
 41593  01DEBE  0012               	return		;funcret
 41594  01DEC0                     __end_of_lp_filter:
 41595                           	opt callstack 0
 41596                           
 41597 ;; *************** function ___flsub *****************
 41598 ;; Defined at:
 41599 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41600 ;; Parameters:    Size  Location     Type
 41601 ;;  b               4  [STACK] float 
 41602 ;;  a               4  [STACK] float 
 41603 ;; Auto vars:     Size  Location     Type
 41604 ;;		None
 41605 ;; Return value:  Size  Location     Type
 41606 ;;                  4  [STACK] float 
 41607 ;; Registers used:
 41608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41609 ;; Tracked objects:
 41610 ;;		On entry : 0/0
 41611 ;;		On exit  : 0/0
 41612 ;;		Unchanged: 0/0
 41613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41618 ;;Total ram usage:        0 bytes
 41619 ;; Hardware stack levels used:    1
 41620 ;; Hardware stack levels required when called:   16
 41621 ;; This function calls:
 41622 ;;		___fladd
 41623 ;; This function is called by:
 41624 ;;		_conv_raw_result
 41625 ;;		_lp_filter
 41626 ;;		_calc_model_data
 41627 ;;		_calc_ror_data
 41628 ;;		_esr_check
 41629 ;;		_efgtoa
 41630 ;; This function uses a reentrant model
 41631 ;;
 41632                           
 41633                           	psect	text152
 41634  0020F4                     __ptext152:
 41635                           	opt callstack 0
 41636  0020F4                     ___flsub:
 41637                           	opt callstack 0
 41638                           
 41639                           ;stkvar	_a @ sp[(0)+-8]
 41640                           
 41641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41642                           ;incstack = 0
 41643 ;; hardware stack exceeded
 41644  0020F4  0EFB               	movlw	-5
 41645  0020F6  7EE3               	btg	plusw1,7,c
 41646                           
 41647                           ;stkvar	_a @ sp[(0)+-8]
 41648  0020F8  0EF8               	movlw	-8
 41649  0020FA  006F FF8F FFE6     	movff	plusw1,postinc1
 41650  002100  006F FF8F FFE6     	movff	plusw1,postinc1
 41651  002106  006F FF8F FFE6     	movff	plusw1,postinc1
 41652  00210C  006F FF8F FFE6     	movff	plusw1,postinc1
 41653                           
 41654                           ;stkvar	_b @ sp[(-4)+-4]
 41655  002112  0EF8               	movlw	-8
 41656  002114  006F FF8F FFE6     	movff	plusw1,postinc1
 41657  00211A  006F FF8F FFE6     	movff	plusw1,postinc1
 41658  002120  006F FF8F FFE6     	movff	plusw1,postinc1
 41659  002126  006F FF8F FFE6     	movff	plusw1,postinc1
 41660  00212C  EC47  F0B7         	call	___fladd	;wreg free
 41661                           
 41662                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41663  002130  0EF8               	movlw	248
 41664  002132  26E1               	addwf	fsr1l,f,c
 41665  002134  0EFF               	movlw	255
 41666  002136  22E2               	addwfc	fsr1h,f,c
 41667  002138  0012               	return		;funcret
 41668  00213A                     __end_of___flsub:
 41669                           	opt callstack 0
 41670                           
 41671 ;; *************** function ___fladd *****************
 41672 ;; Defined at:
 41673 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41674 ;; Parameters:    Size  Location     Type
 41675 ;;  b               4  [STACK] float 
 41676 ;;  a               4  [STACK] float 
 41677 ;; Auto vars:     Size  Location     Type
 41678 ;;  grs             1  [STACK] unsigned char 
 41679 ;;  bexp            1  [STACK] unsigned char 
 41680 ;;  aexp            1  [STACK] unsigned char 
 41681 ;;  signs           1  [STACK] unsigned char 
 41682 ;; Return value:  Size  Location     Type
 41683 ;;                  4  [STACK] unsigned char 
 41684 ;; Registers used:
 41685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41686 ;; Tracked objects:
 41687 ;;		On entry : 0/0
 41688 ;;		On exit  : 0/0
 41689 ;;		Unchanged: 0/0
 41690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41695 ;;Total ram usage:        0 bytes
 41696 ;; Hardware stack levels used:    1
 41697 ;; Hardware stack levels required when called:   15
 41698 ;; This function calls:
 41699 ;;		Nothing
 41700 ;; This function is called by:
 41701 ;;		_main
 41702 ;;		_lp_filter
 41703 ;;		_calc_model_data
 41704 ;;		_load_hist_data
 41705 ;;		_efgtoa
 41706 ;;		___asfladd
 41707 ;;		___flsub
 41708 ;; This function uses a reentrant model
 41709 ;;
 41710                           
 41711                           	psect	text153
 41712  016E8E                     __ptext153:
 41713                           	opt callstack 0
 41714  016E8E                     ___fladd:
 41715                           	opt callstack 0
 41716                           
 41717                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41718  016E8E  52E6               	movf	postinc1,f,c
 41719  016E90  52E6               	movf	postinc1,f,c
 41720  016E92  52E6               	movf	postinc1,f,c
 41721  016E94  52E6               	movf	postinc1,f,c
 41722                           
 41723                           ;stkvar	_b @ sp[(-4)+-4]
 41724                           
 41725                           ;incstack = 0
 41726 ;; hardware stack exceeded
 41727  016E96  0EFB               	movlw	251
 41728  016E98  24E1               	addwf	fsr1l,w,c
 41729  016E9A  6ED9               	movwf	fsr2l,c
 41730  016E9C  0EFF               	movlw	255
 41731  016E9E  20E2               	addwfc	fsr1h,w,c
 41732  016EA0  6EDA               	movwf	fsr2h,c
 41733  016EA2  50DF               	movf	indf2,w,c
 41734  016EA4  6E35               	movwf	(btemp+11)^0,c
 41735  016EA6  0E80               	movlw	128
 41736  016EA8  1635               	andwf	(btemp+11)^0,f,c
 41737                           
 41738                           ;stkvar	_signs @ sp[(-4)+3]
 41739  016EAA  0EFF               	movlw	-1
 41740  016EAC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41741                           
 41742                           ;stkvar	_b @ sp[(-4)+-4]
 41743  016EB2  0EFB               	movlw	251
 41744  016EB4  24E1               	addwf	fsr1l,w,c
 41745  016EB6  6ED9               	movwf	fsr2l,c
 41746  016EB8  0EFF               	movlw	255
 41747  016EBA  20E2               	addwfc	fsr1h,w,c
 41748  016EBC  6EDA               	movwf	fsr2h,c
 41749  016EBE  50DF               	movf	indf2,w,c
 41750  016EC0  6E35               	movwf	(btemp+11)^0,c
 41751  016EC2  90D8               	bcf	status,0,c
 41752  016EC4  3435               	rlcf	(btemp+11)^0,w,c
 41753  016EC6  6E34               	movwf	(btemp+10)^0,c
 41754                           
 41755                           ;stkvar	_bexp @ sp[(-4)+1]
 41756  016EC8  0EFD               	movlw	-3
 41757  016ECA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41758                           
 41759                           ;stkvar	_b @ sp[(-4)+-4]
 41760  016ED0  0EFA               	movlw	250
 41761  016ED2  24E1               	addwf	fsr1l,w,c
 41762  016ED4  6ED9               	movwf	fsr2l,c
 41763  016ED6  0EFF               	movlw	255
 41764  016ED8  20E2               	addwfc	fsr1h,w,c
 41765  016EDA  6EDA               	movwf	fsr2h,c
 41766  016EDC  AEDF               	btfss	indf2,7,c
 41767  016EDE  D002               	goto	l9824
 41768                           
 41769                           ;stkvar	_bexp @ sp[(-4)+1]
 41770  016EE0  0EFD               	movlw	-3
 41771  016EE2  80E3               	bsf	plusw1,0,c
 41772  016EE4                     l9824:
 41773                           
 41774                           ;stkvar	_bexp @ sp[(-4)+1]
 41775  016EE4  0EFD               	movlw	-3
 41776  016EE6  50E3               	movf	plusw1,w,c
 41777  016EE8  B4D8               	btfsc	status,2,c
 41778  016EEA  D027               	goto	l9834
 41779                           
 41780                           ;stkvar	_bexp @ sp[(-4)+1]
 41781  016EEC  0EFD               	movlw	-3
 41782  016EEE  28E3               	incf	plusw1,w,c
 41783  016EF0  A4D8               	btfss	status,2,c
 41784  016EF2  D018               	goto	l9830
 41785  016EF4  0E00               	movlw	0
 41786  016EF6  6E32               	movwf	(btemp+8)^0,c
 41787  016EF8  0E00               	movlw	0
 41788  016EFA  6E33               	movwf	(btemp+9)^0,c
 41789  016EFC  0E00               	movlw	0
 41790  016EFE  6E34               	movwf	(btemp+10)^0,c
 41791  016F00  0E00               	movlw	0
 41792  016F02  6E35               	movwf	(btemp+11)^0,c
 41793                           
 41794                           ;stkvar	_b @ sp[(-4)+-4]
 41795  016F04  0EF8               	movlw	-8
 41796  016F06  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41797  016F0C  0EF9               	movlw	-7
 41798  016F0E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41799  016F14  0EFA               	movlw	-6
 41800  016F16  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41801  016F1C  0EFB               	movlw	-5
 41802  016F1E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41803  016F24                     l9830:
 41804                           
 41805                           ;stkvar	_b @ sp[(-4)+-4]
 41806  016F24  0EFA               	movlw	-6
 41807  016F26  8EE3               	bsf	plusw1,7,c
 41808                           
 41809                           ;stkvar	_b @ sp[(-4)+-4]
 41810  016F28  0EFB               	movlw	251
 41811  016F2A  24E1               	addwf	fsr1l,w,c
 41812  016F2C  6ED9               	movwf	fsr2l,c
 41813  016F2E  0EFF               	movlw	255
 41814  016F30  20E2               	addwfc	fsr1h,w,c
 41815  016F32  6EDA               	movwf	fsr2h,c
 41816  016F34  0E00               	movlw	0
 41817  016F36  6EDF               	movwf	indf2,c
 41818  016F38  D018               	goto	l9836
 41819  016F3A                     l9834:
 41820  016F3A  0E00               	movlw	0
 41821  016F3C  6E32               	movwf	(btemp+8)^0,c
 41822  016F3E  0E00               	movlw	0
 41823  016F40  6E33               	movwf	(btemp+9)^0,c
 41824  016F42  0E00               	movlw	0
 41825  016F44  6E34               	movwf	(btemp+10)^0,c
 41826  016F46  0E00               	movlw	0
 41827  016F48  6E35               	movwf	(btemp+11)^0,c
 41828                           
 41829                           ;stkvar	_b @ sp[(-4)+-4]
 41830  016F4A  0EF8               	movlw	-8
 41831  016F4C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41832  016F52  0EF9               	movlw	-7
 41833  016F54  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41834  016F5A  0EFA               	movlw	-6
 41835  016F5C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41836  016F62  0EFB               	movlw	-5
 41837  016F64  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41838  016F6A                     l9836:
 41839                           
 41840                           ;stkvar	_a @ sp[(-4)+-8]
 41841  016F6A  0EF7               	movlw	247
 41842  016F6C  24E1               	addwf	fsr1l,w,c
 41843  016F6E  6ED9               	movwf	fsr2l,c
 41844  016F70  0EFF               	movlw	255
 41845  016F72  20E2               	addwfc	fsr1h,w,c
 41846  016F74  6EDA               	movwf	fsr2h,c
 41847  016F76  50DF               	movf	indf2,w,c
 41848  016F78  6E35               	movwf	(btemp+11)^0,c
 41849  016F7A  0E80               	movlw	128
 41850  016F7C  1635               	andwf	(btemp+11)^0,f,c
 41851                           
 41852                           ;stkvar	_aexp @ sp[(-4)+2]
 41853  016F7E  0EFE               	movlw	-2
 41854  016F80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41855                           
 41856                           ;stkvar	_signs @ sp[(-4)+3]
 41857                           ;stkvar	_aexp @ sp[(-4)+2]
 41858  016F86  50E1               	movf	fsr1l,w,c
 41859  016F88  0FFE               	addlw	-2
 41860  016F8A  6ED9               	movwf	fsr2l,c
 41861  016F8C  50E2               	movf	fsr1h,w,c
 41862  016F8E  6EDA               	movwf	fsr2h,c
 41863  016F90  0EFF               	movlw	255
 41864  016F92  22DA               	addwfc	fsr2h,f,c
 41865  016F94  0EFF               	movlw	-1
 41866  016F96  50E3               	movf	plusw1,w,c
 41867  016F98  18DE               	xorwf	postinc2,w,c
 41868  016F9A  B4D8               	btfsc	status,2,c
 41869  016F9C  D002               	goto	l9842
 41870                           
 41871                           ;stkvar	_signs @ sp[(-4)+3]
 41872  016F9E  0EFF               	movlw	-1
 41873  016FA0  8CE3               	bsf	plusw1,6,c
 41874  016FA2                     l9842:
 41875                           
 41876                           ;stkvar	_a @ sp[(-4)+-8]
 41877  016FA2  0EF7               	movlw	247
 41878  016FA4  24E1               	addwf	fsr1l,w,c
 41879  016FA6  6ED9               	movwf	fsr2l,c
 41880  016FA8  0EFF               	movlw	255
 41881  016FAA  20E2               	addwfc	fsr1h,w,c
 41882  016FAC  6EDA               	movwf	fsr2h,c
 41883  016FAE  50DF               	movf	indf2,w,c
 41884  016FB0  6E35               	movwf	(btemp+11)^0,c
 41885  016FB2  90D8               	bcf	status,0,c
 41886  016FB4  3435               	rlcf	(btemp+11)^0,w,c
 41887  016FB6  6E34               	movwf	(btemp+10)^0,c
 41888                           
 41889                           ;stkvar	_aexp @ sp[(-4)+2]
 41890  016FB8  0EFE               	movlw	-2
 41891  016FBA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41892                           
 41893                           ;stkvar	_a @ sp[(-4)+-8]
 41894  016FC0  0EF6               	movlw	246
 41895  016FC2  24E1               	addwf	fsr1l,w,c
 41896  016FC4  6ED9               	movwf	fsr2l,c
 41897  016FC6  0EFF               	movlw	255
 41898  016FC8  20E2               	addwfc	fsr1h,w,c
 41899  016FCA  6EDA               	movwf	fsr2h,c
 41900  016FCC  AEDF               	btfss	indf2,7,c
 41901  016FCE  D002               	goto	l9848
 41902                           
 41903                           ;stkvar	_aexp @ sp[(-4)+2]
 41904  016FD0  0EFE               	movlw	-2
 41905  016FD2  80E3               	bsf	plusw1,0,c
 41906  016FD4                     l9848:
 41907                           
 41908                           ;stkvar	_aexp @ sp[(-4)+2]
 41909  016FD4  0EFE               	movlw	-2
 41910  016FD6  50E3               	movf	plusw1,w,c
 41911  016FD8  B4D8               	btfsc	status,2,c
 41912  016FDA  D027               	goto	l9858
 41913                           
 41914                           ;stkvar	_aexp @ sp[(-4)+2]
 41915  016FDC  0EFE               	movlw	-2
 41916  016FDE  28E3               	incf	plusw1,w,c
 41917  016FE0  A4D8               	btfss	status,2,c
 41918  016FE2  D018               	goto	l9854
 41919  016FE4  0E00               	movlw	0
 41920  016FE6  6E32               	movwf	(btemp+8)^0,c
 41921  016FE8  0E00               	movlw	0
 41922  016FEA  6E33               	movwf	(btemp+9)^0,c
 41923  016FEC  0E00               	movlw	0
 41924  016FEE  6E34               	movwf	(btemp+10)^0,c
 41925  016FF0  0E00               	movlw	0
 41926  016FF2  6E35               	movwf	(btemp+11)^0,c
 41927                           
 41928                           ;stkvar	_a @ sp[(-4)+-8]
 41929  016FF4  0EF4               	movlw	-12
 41930  016FF6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41931  016FFC  0EF5               	movlw	-11
 41932  016FFE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41933  017004  0EF6               	movlw	-10
 41934  017006  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41935  01700C  0EF7               	movlw	-9
 41936  01700E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41937  017014                     l9854:
 41938                           
 41939                           ;stkvar	_a @ sp[(-4)+-8]
 41940  017014  0EF6               	movlw	-10
 41941  017016  8EE3               	bsf	plusw1,7,c
 41942                           
 41943                           ;stkvar	_a @ sp[(-4)+-8]
 41944  017018  0EF7               	movlw	247
 41945  01701A  24E1               	addwf	fsr1l,w,c
 41946  01701C  6ED9               	movwf	fsr2l,c
 41947  01701E  0EFF               	movlw	255
 41948  017020  20E2               	addwfc	fsr1h,w,c
 41949  017022  6EDA               	movwf	fsr2h,c
 41950  017024  0E00               	movlw	0
 41951  017026  6EDF               	movwf	indf2,c
 41952  017028  D018               	goto	l9860
 41953  01702A                     l9858:
 41954  01702A  0E00               	movlw	0
 41955  01702C  6E32               	movwf	(btemp+8)^0,c
 41956  01702E  0E00               	movlw	0
 41957  017030  6E33               	movwf	(btemp+9)^0,c
 41958  017032  0E00               	movlw	0
 41959  017034  6E34               	movwf	(btemp+10)^0,c
 41960  017036  0E00               	movlw	0
 41961  017038  6E35               	movwf	(btemp+11)^0,c
 41962                           
 41963                           ;stkvar	_a @ sp[(-4)+-8]
 41964  01703A  0EF4               	movlw	-12
 41965  01703C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41966  017042  0EF5               	movlw	-11
 41967  017044  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41968  01704A  0EF6               	movlw	-10
 41969  01704C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41970  017052  0EF7               	movlw	-9
 41971  017054  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41972  01705A                     l9860:
 41973                           
 41974                           ;stkvar	_bexp @ sp[(-4)+1]
 41975                           ;stkvar	_aexp @ sp[(-4)+2]
 41976  01705A  50E1               	movf	fsr1l,w,c
 41977  01705C  0FFE               	addlw	-2
 41978  01705E  6ED9               	movwf	fsr2l,c
 41979  017060  50E2               	movf	fsr1h,w,c
 41980  017062  6EDA               	movwf	fsr2h,c
 41981  017064  0EFF               	movlw	255
 41982  017066  22DA               	addwfc	fsr2h,f,c
 41983  017068  0EFD               	movlw	-3
 41984  01706A  50E3               	movf	plusw1,w,c
 41985  01706C  5CDE               	subwf	postinc2,w,c
 41986  01706E  B0D8               	btfsc	status,0,c
 41987  017070  D0A4               	goto	l9896
 41988                           
 41989                           ;stkvar	_signs @ sp[(-4)+3]
 41990  017072  0EFF               	movlw	-1
 41991  017074  ACE3               	btfss	plusw1,6,c
 41992  017076  D002               	goto	l9866
 41993                           
 41994                           ;stkvar	_signs @ sp[(-4)+3]
 41995  017078  0EFF               	movlw	-1
 41996  01707A  7EE3               	btg	plusw1,7,c
 41997  01707C                     l9866:
 41998                           
 41999                           ;stkvar	_bexp @ sp[(-4)+1]
 42000                           ;stkvar	_grs @ sp[(-4)+0]
 42001  01707C  0EFD               	movlw	-3
 42002  01707E  006F FF8C  F02A    	movff	plusw1,btemp
 42003  017084  0EFC               	movlw	-4
 42004  017086  0060  F0AB  FFE3   	movff	btemp,plusw1
 42005                           
 42006                           ;stkvar	_aexp @ sp[(-4)+2]
 42007                           ;stkvar	_bexp @ sp[(-4)+1]
 42008  01708C  0EFE               	movlw	-2
 42009  01708E  006F FF8C  F02A    	movff	plusw1,btemp
 42010  017094  0EFD               	movlw	-3
 42011  017096  0060  F0AB  FFE3   	movff	btemp,plusw1
 42012                           
 42013                           ;stkvar	_grs @ sp[(-4)+0]
 42014                           ;stkvar	_aexp @ sp[(-4)+2]
 42015  01709C  0EFC               	movlw	-4
 42016  01709E  006F FF8C  F02A    	movff	plusw1,btemp
 42017  0170A4  0EFE               	movlw	-2
 42018  0170A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 42019                           
 42020                           ;stkvar	_b @ sp[(-4)+-4]
 42021                           ;stkvar	_grs @ sp[(-4)+0]
 42022  0170AC  0EF8               	movlw	-8
 42023  0170AE  006F FF8C  F02A    	movff	plusw1,btemp
 42024  0170B4  0EFC               	movlw	-4
 42025  0170B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 42026                           
 42027                           ;stkvar	_a @ sp[(-4)+-8]
 42028                           ;stkvar	_b @ sp[(-4)+-4]
 42029  0170BC  0EF4               	movlw	-12
 42030  0170BE  006F FF8C  F02A    	movff	plusw1,btemp
 42031  0170C4  0EF8               	movlw	-8
 42032  0170C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 42033                           
 42034                           ;stkvar	_grs @ sp[(-4)+0]
 42035                           ;stkvar	_a @ sp[(-4)+-8]
 42036  0170CC  0EFC               	movlw	-4
 42037  0170CE  006F FF8C  F02A    	movff	plusw1,btemp
 42038  0170D4  0EF4               	movlw	-12
 42039  0170D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 42040                           
 42041                           ;stkvar	_b @ sp[(-4)+-4]
 42042  0170DC  0EF9               	movlw	249
 42043  0170DE  24E1               	addwf	fsr1l,w,c
 42044  0170E0  6ED9               	movwf	fsr2l,c
 42045  0170E2  0EFF               	movlw	255
 42046  0170E4  20E2               	addwfc	fsr1h,w,c
 42047  0170E6  6EDA               	movwf	fsr2h,c
 42048  0170E8  50DF               	movf	indf2,w,c
 42049  0170EA  6E35               	movwf	(btemp+11)^0,c
 42050                           
 42051                           ;stkvar	_grs @ sp[(-4)+0]
 42052  0170EC  0EFC               	movlw	-4
 42053  0170EE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42054                           
 42055                           ;stkvar	_a @ sp[(-4)+-8]
 42056  0170F4  0EF5               	movlw	245
 42057  0170F6  24E1               	addwf	fsr1l,w,c
 42058  0170F8  6ED9               	movwf	fsr2l,c
 42059  0170FA  0EFF               	movlw	255
 42060  0170FC  20E2               	addwfc	fsr1h,w,c
 42061  0170FE  6EDA               	movwf	fsr2h,c
 42062                           
 42063                           ;stkvar	_b @ sp[(-4)+-4]
 42064  017100  0EF9               	movlw	249
 42065  017102  24E1               	addwf	fsr1l,w,c
 42066  017104  6EE9               	movwf	fsr0l,c
 42067  017106  0EFF               	movlw	255
 42068  017108  20E2               	addwfc	fsr1h,w,c
 42069  01710A  6EEA               	movwf	fsr0h,c
 42070  01710C  006F FF7F FFEF     	movff	indf2,indf0
 42071                           
 42072                           ;stkvar	_grs @ sp[(-4)+0]
 42073                           ;stkvar	_a @ sp[(-4)+-8]
 42074  017112  0EF5               	movlw	245
 42075  017114  24E1               	addwf	fsr1l,w,c
 42076  017116  6ED9               	movwf	fsr2l,c
 42077  017118  0EFF               	movlw	255
 42078  01711A  20E2               	addwfc	fsr1h,w,c
 42079  01711C  6EDA               	movwf	fsr2h,c
 42080  01711E  0EFC               	movlw	-4
 42081  017120  006F FF8F FFDF     	movff	plusw1,indf2
 42082                           
 42083                           ;stkvar	_b @ sp[(-4)+-4]
 42084  017126  0EFA               	movlw	250
 42085  017128  24E1               	addwf	fsr1l,w,c
 42086  01712A  6ED9               	movwf	fsr2l,c
 42087  01712C  0EFF               	movlw	255
 42088  01712E  20E2               	addwfc	fsr1h,w,c
 42089  017130  6EDA               	movwf	fsr2h,c
 42090  017132  50DF               	movf	indf2,w,c
 42091  017134  6E35               	movwf	(btemp+11)^0,c
 42092                           
 42093                           ;stkvar	_grs @ sp[(-4)+0]
 42094  017136  0EFC               	movlw	-4
 42095  017138  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42096                           
 42097                           ;stkvar	_a @ sp[(-4)+-8]
 42098  01713E  0EF6               	movlw	246
 42099  017140  24E1               	addwf	fsr1l,w,c
 42100  017142  6ED9               	movwf	fsr2l,c
 42101  017144  0EFF               	movlw	255
 42102  017146  20E2               	addwfc	fsr1h,w,c
 42103  017148  6EDA               	movwf	fsr2h,c
 42104                           
 42105                           ;stkvar	_b @ sp[(-4)+-4]
 42106  01714A  0EFA               	movlw	250
 42107  01714C  24E1               	addwf	fsr1l,w,c
 42108  01714E  6EE9               	movwf	fsr0l,c
 42109  017150  0EFF               	movlw	255
 42110  017152  20E2               	addwfc	fsr1h,w,c
 42111  017154  6EEA               	movwf	fsr0h,c
 42112  017156  006F FF7F FFEF     	movff	indf2,indf0
 42113                           
 42114                           ;stkvar	_grs @ sp[(-4)+0]
 42115                           ;stkvar	_a @ sp[(-4)+-8]
 42116  01715C  0EF6               	movlw	246
 42117  01715E  24E1               	addwf	fsr1l,w,c
 42118  017160  6ED9               	movwf	fsr2l,c
 42119  017162  0EFF               	movlw	255
 42120  017164  20E2               	addwfc	fsr1h,w,c
 42121  017166  6EDA               	movwf	fsr2h,c
 42122  017168  0EFC               	movlw	-4
 42123  01716A  006F FF8F FFDF     	movff	plusw1,indf2
 42124                           
 42125                           ;stkvar	_b @ sp[(-4)+-4]
 42126  017170  0EFB               	movlw	251
 42127  017172  24E1               	addwf	fsr1l,w,c
 42128  017174  6ED9               	movwf	fsr2l,c
 42129  017176  0EFF               	movlw	255
 42130  017178  20E2               	addwfc	fsr1h,w,c
 42131  01717A  6EDA               	movwf	fsr2h,c
 42132  01717C  50DF               	movf	indf2,w,c
 42133  01717E  6E35               	movwf	(btemp+11)^0,c
 42134                           
 42135                           ;stkvar	_grs @ sp[(-4)+0]
 42136  017180  0EFC               	movlw	-4
 42137  017182  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42138                           
 42139                           ;stkvar	_a @ sp[(-4)+-8]
 42140  017188  0EF7               	movlw	247
 42141  01718A  24E1               	addwf	fsr1l,w,c
 42142  01718C  6ED9               	movwf	fsr2l,c
 42143  01718E  0EFF               	movlw	255
 42144  017190  20E2               	addwfc	fsr1h,w,c
 42145  017192  6EDA               	movwf	fsr2h,c
 42146                           
 42147                           ;stkvar	_b @ sp[(-4)+-4]
 42148  017194  0EFB               	movlw	251
 42149  017196  24E1               	addwf	fsr1l,w,c
 42150  017198  6EE9               	movwf	fsr0l,c
 42151  01719A  0EFF               	movlw	255
 42152  01719C  20E2               	addwfc	fsr1h,w,c
 42153  01719E  6EEA               	movwf	fsr0h,c
 42154  0171A0  006F FF7F FFEF     	movff	indf2,indf0
 42155                           
 42156                           ;stkvar	_grs @ sp[(-4)+0]
 42157                           ;stkvar	_a @ sp[(-4)+-8]
 42158  0171A6  0EF7               	movlw	247
 42159  0171A8  24E1               	addwf	fsr1l,w,c
 42160  0171AA  6ED9               	movwf	fsr2l,c
 42161  0171AC  0EFF               	movlw	255
 42162  0171AE  20E2               	addwfc	fsr1h,w,c
 42163  0171B0  6EDA               	movwf	fsr2h,c
 42164  0171B2  0EFC               	movlw	-4
 42165  0171B4  006F FF8F FFDF     	movff	plusw1,indf2
 42166  0171BA                     l9896:
 42167                           
 42168                           ;stkvar	_grs @ sp[(-4)+0]
 42169  0171BA  0EFC               	movlw	-4
 42170  0171BC  6AE3               	clrf	plusw1,c
 42171                           
 42172                           ;stkvar	_aexp @ sp[(-4)+2]
 42173  0171BE  0EFE               	movlw	-2
 42174  0171C0  50E3               	movf	plusw1,w,c
 42175  0171C2  6E34               	movwf	(btemp+10)^0,c
 42176  0171C4  6A35               	clrf	(btemp+11)^0,c
 42177                           
 42178                           ;stkvar	_bexp @ sp[(-4)+1]
 42179  0171C6  0EFD               	movlw	-3
 42180  0171C8  50E3               	movf	plusw1,w,c
 42181  0171CA  5E34               	subwf	(btemp+10)^0,f,c
 42182  0171CC  0E00               	movlw	0
 42183  0171CE  5A35               	subwfb	(btemp+11)^0,f,c
 42184  0171D0  BE35               	btfsc	(btemp+11)^0,7,c
 42185  0171D2  D062               	goto	l9920
 42186  0171D4  5035               	movf	(btemp+11)^0,w,c
 42187  0171D6  E104               	bnz	u7310
 42188  0171D8  0E1A               	movlw	26
 42189  0171DA  5C34               	subwf	(btemp+10)^0,w,c
 42190  0171DC  A0D8               	btfss	status,0,c
 42191  0171DE  D05C               	goto	l9920
 42192  0171E0                     u7310:
 42193                           
 42194                           ;stkvar	_b @ sp[(-4)+-4]
 42195  0171E0  0EF8               	movlw	-8
 42196  0171E2  50E3               	movf	plusw1,w,c
 42197  0171E4  E10A               	bnz	u7321
 42198  0171E6  0EF9               	movlw	-7
 42199  0171E8  50E3               	movf	plusw1,w,c
 42200  0171EA  E107               	bnz	u7321
 42201  0171EC  0EFA               	movlw	-6
 42202  0171EE  50E3               	movf	plusw1,w,c
 42203  0171F0  E104               	bnz	u7321
 42204  0171F2  0EFB               	movlw	-5
 42205  0171F4  50E3               	movf	plusw1,w,c
 42206  0171F6  B4D8               	btfsc	status,2,c
 42207  0171F8  D003               	goto	u7320
 42208  0171FA                     u7321:
 42209  0171FA  6A35               	clrf	(btemp+11)^0,c
 42210  0171FC  2A35               	incf	(btemp+11)^0,f,c
 42211  0171FE  D001               	goto	u7338
 42212  017200                     u7320:
 42213  017200  6A35               	clrf	(btemp+11)^0,c
 42214  017202                     u7338:
 42215                           
 42216                           ;stkvar	_grs @ sp[(-4)+0]
 42217  017202  0EFC               	movlw	-4
 42218  017204  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42219                           
 42220                           ;stkvar	_b @ sp[(-4)+-4]
 42221  01720A  0EF8               	movlw	-8
 42222  01720C  6AE3               	clrf	plusw1,c
 42223  01720E  0EF9               	movlw	-7
 42224  017210  6AE3               	clrf	plusw1,c
 42225  017212  0EFA               	movlw	-6
 42226  017214  6AE3               	clrf	plusw1,c
 42227  017216  0EFB               	movlw	-5
 42228  017218  6AE3               	clrf	plusw1,c
 42229                           
 42230                           ;stkvar	_aexp @ sp[(-4)+2]
 42231                           ;stkvar	_bexp @ sp[(-4)+1]
 42232  01721A  0EFE               	movlw	-2
 42233  01721C  006F FF8C  F02A    	movff	plusw1,btemp
 42234  017222  0EFD               	movlw	-3
 42235  017224  0060  F0AB  FFE3   	movff	btemp,plusw1
 42236  01722A  D042               	goto	u7370
 42237  01722C                     l9906:
 42238                           
 42239                           ;stkvar	_grs @ sp[(-4)+0]
 42240  01722C  0EFC               	movlw	-4
 42241  01722E  A0E3               	btfss	plusw1,0,c
 42242  017230  D00D               	goto	l9910
 42243                           
 42244                           ;stkvar	_grs @ sp[(-4)+0]
 42245  017232  0EFC               	movlw	-4
 42246  017234  006F FF8C  F035    	movff	plusw1,btemp+11
 42247  01723A  90D8               	bcf	status,0,c
 42248  01723C  3235               	rrcf	(btemp+11)^0,f,c
 42249  01723E  0E01               	movlw	1
 42250  017240  1235               	iorwf	(btemp+11)^0,f,c
 42251                           
 42252                           ;stkvar	_grs @ sp[(-4)+0]
 42253  017242  0EFC               	movlw	-4
 42254  017244  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42255  01724A  D009               	goto	l9912
 42256  01724C                     l9910:
 42257                           
 42258                           ;stkvar	_grs @ sp[(-4)+0]
 42259  01724C  50E1               	movf	fsr1l,w,c
 42260  01724E  0FFC               	addlw	-4
 42261  017250  6ED9               	movwf	fsr2l,c
 42262  017252  50E2               	movf	fsr1h,w,c
 42263  017254  6EDA               	movwf	fsr2h,c
 42264  017256  0EFF               	movlw	255
 42265  017258  22DA               	addwfc	fsr2h,f,c
 42266  01725A  90D8               	bcf	status,0,c
 42267  01725C  32DF               	rrcf	indf2,f,c
 42268  01725E                     l9912:
 42269                           
 42270                           ;stkvar	_b @ sp[(-4)+-4]
 42271  01725E  0EF8               	movlw	-8
 42272  017260  A0E3               	btfss	plusw1,0,c
 42273  017262  D002               	goto	l9916
 42274                           
 42275                           ;stkvar	_grs @ sp[(-4)+0]
 42276  017264  0EFC               	movlw	-4
 42277  017266  8EE3               	bsf	plusw1,7,c
 42278  017268                     l9916:
 42279  017268  0E01               	movlw	1
 42280  01726A  6E35               	movwf	(btemp+11)^0,c
 42281                           
 42282                           ;stkvar	_b @ sp[(-4)+-4]
 42283  01726C  50E1               	movf	fsr1l,w,c
 42284  01726E  0FF8               	addlw	-8
 42285  017270  6ED9               	movwf	fsr2l,c
 42286  017272  50E2               	movf	fsr1h,w,c
 42287  017274  6EDA               	movwf	fsr2h,c
 42288  017276  0EFF               	movlw	255
 42289  017278  22DA               	addwfc	fsr2h,f,c
 42290  01727A  2835               	incf	(btemp+11)^0,w,c
 42291  01727C  52DE               	movf	postinc2,f,c
 42292  01727E  D008               	goto	u7360
 42293  017280                     u7365:
 42294  017280  52DE               	movf	postinc2,f,c
 42295  017282  90D8               	bcf	status,0,c
 42296  017284  BEDC               	btfsc	preinc2,7,c
 42297  017286  80D8               	bsf	status,0,c
 42298  017288  32DD               	rrcf	postdec2,f,c
 42299  01728A  32DD               	rrcf	postdec2,f,c
 42300  01728C  32DD               	rrcf	postdec2,f,c
 42301  01728E  32DE               	rrcf	postinc2,f,c
 42302  017290                     u7360:
 42303  017290  2EE8               	decfsz	wreg,f,c
 42304  017292  D7F6               	goto	u7365
 42305                           
 42306                           ;stkvar	_bexp @ sp[(-4)+1]
 42307  017294  0EFD               	movlw	-3
 42308  017296  2AE3               	incf	plusw1,f,c
 42309  017298                     l9920:
 42310                           
 42311                           ;stkvar	_aexp @ sp[(-4)+2]
 42312                           ;stkvar	_bexp @ sp[(-4)+1]
 42313  017298  50E1               	movf	fsr1l,w,c
 42314  01729A  0FFD               	addlw	-3
 42315  01729C  6ED9               	movwf	fsr2l,c
 42316  01729E  50E2               	movf	fsr1h,w,c
 42317  0172A0  6EDA               	movwf	fsr2h,c
 42318  0172A2  0EFF               	movlw	255
 42319  0172A4  22DA               	addwfc	fsr2h,f,c
 42320  0172A6  0EFE               	movlw	-2
 42321  0172A8  50E3               	movf	plusw1,w,c
 42322  0172AA  5CDE               	subwf	postinc2,w,c
 42323  0172AC  A0D8               	btfss	status,0,c
 42324  0172AE  D7BE               	goto	l9906
 42325  0172B0                     u7370:
 42326                           
 42327                           ;stkvar	_signs @ sp[(-4)+3]
 42328  0172B0  0EFF               	movlw	-1
 42329  0172B2  BCE3               	btfsc	plusw1,6,c
 42330  0172B4  D066               	goto	l9948
 42331                           
 42332                           ;stkvar	_bexp @ sp[(-4)+1]
 42333  0172B6  0EFD               	movlw	-3
 42334  0172B8  50E3               	movf	plusw1,w,c
 42335  0172BA  B4D8               	btfsc	status,2,c
 42336  0172BC  D0F2               	goto	u7470
 42337                           
 42338                           ;stkvar	_a @ sp[(-4)+-8]
 42339                           ;stkvar	_b @ sp[(-4)+-4]
 42340  0172BE  0EF8               	movlw	-8
 42341  0172C0  50E3               	movf	plusw1,w,c
 42342  0172C2  6E2A               	movwf	btemp^0,c
 42343  0172C4  0EF4               	movlw	-12
 42344  0172C6  50E3               	movf	plusw1,w,c
 42345  0172C8  262A               	addwf	btemp^0,f,c
 42346  0172CA  0EF8               	movlw	-8
 42347  0172CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 42348  0172D2  0EF9               	movlw	-7
 42349  0172D4  50E3               	movf	plusw1,w,c
 42350  0172D6  6E2A               	movwf	btemp^0,c
 42351  0172D8  0EF5               	movlw	-11
 42352  0172DA  50E3               	movf	plusw1,w,c
 42353  0172DC  222A               	addwfc	btemp^0,f,c
 42354  0172DE  0EF9               	movlw	-7
 42355  0172E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 42356  0172E6  0EFA               	movlw	-6
 42357  0172E8  50E3               	movf	plusw1,w,c
 42358  0172EA  6E2A               	movwf	btemp^0,c
 42359  0172EC  0EF6               	movlw	-10
 42360  0172EE  50E3               	movf	plusw1,w,c
 42361  0172F0  222A               	addwfc	btemp^0,f,c
 42362  0172F2  0EFA               	movlw	-6
 42363  0172F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 42364  0172FA  0EFB               	movlw	-5
 42365  0172FC  50E3               	movf	plusw1,w,c
 42366  0172FE  6E2A               	movwf	btemp^0,c
 42367  017300  0EF7               	movlw	-9
 42368  017302  50E3               	movf	plusw1,w,c
 42369  017304  222A               	addwfc	btemp^0,f,c
 42370  017306  0EFB               	movlw	-5
 42371  017308  0060  F0AB  FFE3   	movff	btemp,plusw1
 42372                           
 42373                           ;stkvar	_b @ sp[(-4)+-4]
 42374  01730E  0EFB               	movlw	-5
 42375  017310  A0E3               	btfss	plusw1,0,c
 42376  017312  D101               	goto	u7510
 42377                           
 42378                           ;stkvar	_grs @ sp[(-4)+0]
 42379  017314  0EFC               	movlw	-4
 42380  017316  A0E3               	btfss	plusw1,0,c
 42381  017318  D00D               	goto	l9938
 42382                           
 42383                           ;stkvar	_grs @ sp[(-4)+0]
 42384  01731A  0EFC               	movlw	-4
 42385  01731C  006F FF8C  F035    	movff	plusw1,btemp+11
 42386  017322  90D8               	bcf	status,0,c
 42387  017324  3235               	rrcf	(btemp+11)^0,f,c
 42388  017326  0E01               	movlw	1
 42389  017328  1235               	iorwf	(btemp+11)^0,f,c
 42390                           
 42391                           ;stkvar	_grs @ sp[(-4)+0]
 42392  01732A  0EFC               	movlw	-4
 42393  01732C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42394  017332  D009               	goto	l9940
 42395  017334                     l9938:
 42396                           
 42397                           ;stkvar	_grs @ sp[(-4)+0]
 42398  017334  50E1               	movf	fsr1l,w,c
 42399  017336  0FFC               	addlw	-4
 42400  017338  6ED9               	movwf	fsr2l,c
 42401  01733A  50E2               	movf	fsr1h,w,c
 42402  01733C  6EDA               	movwf	fsr2h,c
 42403  01733E  0EFF               	movlw	255
 42404  017340  22DA               	addwfc	fsr2h,f,c
 42405  017342  90D8               	bcf	status,0,c
 42406  017344  32DF               	rrcf	indf2,f,c
 42407  017346                     l9940:
 42408                           
 42409                           ;stkvar	_b @ sp[(-4)+-4]
 42410  017346  0EF8               	movlw	-8
 42411  017348  A0E3               	btfss	plusw1,0,c
 42412  01734A  D002               	goto	l9944
 42413                           
 42414                           ;stkvar	_grs @ sp[(-4)+0]
 42415  01734C  0EFC               	movlw	-4
 42416  01734E  8EE3               	bsf	plusw1,7,c
 42417  017350                     l9944:
 42418  017350  0E01               	movlw	1
 42419  017352  6E35               	movwf	(btemp+11)^0,c
 42420                           
 42421                           ;stkvar	_b @ sp[(-4)+-4]
 42422  017354  50E1               	movf	fsr1l,w,c
 42423  017356  0FF8               	addlw	-8
 42424  017358  6ED9               	movwf	fsr2l,c
 42425  01735A  50E2               	movf	fsr1h,w,c
 42426  01735C  6EDA               	movwf	fsr2h,c
 42427  01735E  0EFF               	movlw	255
 42428  017360  22DA               	addwfc	fsr2h,f,c
 42429  017362  2835               	incf	(btemp+11)^0,w,c
 42430  017364  52DE               	movf	postinc2,f,c
 42431  017366  D008               	goto	u7430
 42432  017368                     u7435:
 42433  017368  52DE               	movf	postinc2,f,c
 42434  01736A  90D8               	bcf	status,0,c
 42435  01736C  BEDC               	btfsc	preinc2,7,c
 42436  01736E  80D8               	bsf	status,0,c
 42437  017370  32DD               	rrcf	postdec2,f,c
 42438  017372  32DD               	rrcf	postdec2,f,c
 42439  017374  32DD               	rrcf	postdec2,f,c
 42440  017376  32DE               	rrcf	postinc2,f,c
 42441  017378                     u7430:
 42442  017378  2EE8               	decfsz	wreg,f,c
 42443  01737A  D7F6               	goto	u7435
 42444                           
 42445                           ;stkvar	_bexp @ sp[(-4)+1]
 42446  01737C  0EFD               	movlw	-3
 42447  01737E  2AE3               	incf	plusw1,f,c
 42448  017380  D0CA               	goto	u7510
 42449  017382                     l9948:
 42450                           
 42451                           ;stkvar	_a @ sp[(-4)+-8]
 42452                           ;stkvar	_b @ sp[(-4)+-4]
 42453  017382  50E1               	movf	fsr1l,w,c
 42454  017384  0FF8               	addlw	-8
 42455  017386  6ED9               	movwf	fsr2l,c
 42456  017388  50E2               	movf	fsr1h,w,c
 42457  01738A  6EDA               	movwf	fsr2h,c
 42458  01738C  0EFF               	movlw	255
 42459  01738E  22DA               	addwfc	fsr2h,f,c
 42460  017390  0EF4               	movlw	-12
 42461  017392  50E3               	movf	plusw1,w,c
 42462  017394  5CDE               	subwf	postinc2,w,c
 42463  017396  0EF5               	movlw	-11
 42464  017398  50E3               	movf	plusw1,w,c
 42465  01739A  58DE               	subwfb	postinc2,w,c
 42466  01739C  0EF6               	movlw	-10
 42467  01739E  50E3               	movf	plusw1,w,c
 42468  0173A0  58DE               	subwfb	postinc2,w,c
 42469  0173A2  50DE               	movf	postinc2,w,c
 42470  0173A4  0A80               	xorlw	128
 42471  0173A6  6E2A               	movwf	btemp^0,c
 42472  0173A8  0EF7               	movlw	-9
 42473  0173AA  50E3               	movf	plusw1,w,c
 42474  0173AC  0A80               	xorlw	128
 42475  0173AE  582A               	subwfb	btemp^0,w,c
 42476  0173B0  B0D8               	btfsc	status,0,c
 42477  0173B2  D053               	goto	l9960
 42478                           
 42479                           ;stkvar	_b @ sp[(-4)+-4]
 42480                           ;stkvar	_a @ sp[(-4)+-8]
 42481  0173B4  0EF4               	movlw	-12
 42482  0173B6  006F FF8C  F032    	movff	plusw1,btemp+8
 42483  0173BC  0EF5               	movlw	-11
 42484  0173BE  006F FF8C  F033    	movff	plusw1,btemp+9
 42485  0173C4  0EF6               	movlw	-10
 42486  0173C6  006F FF8C  F034    	movff	plusw1,btemp+10
 42487  0173CC  0EF7               	movlw	-9
 42488  0173CE  006F FF8C  F035    	movff	plusw1,btemp+11
 42489  0173D4  0EF8               	movlw	-8
 42490  0173D6  50E3               	movf	plusw1,w,c
 42491  0173D8  5E32               	subwf	(btemp+8)^0,f,c
 42492  0173DA  0EF9               	movlw	-7
 42493  0173DC  50E3               	movf	plusw1,w,c
 42494  0173DE  5A33               	subwfb	(btemp+9)^0,f,c
 42495  0173E0  0EFA               	movlw	-6
 42496  0173E2  50E3               	movf	plusw1,w,c
 42497  0173E4  5A34               	subwfb	(btemp+10)^0,f,c
 42498  0173E6  0EFB               	movlw	-5
 42499  0173E8  50E3               	movf	plusw1,w,c
 42500  0173EA  5A35               	subwfb	(btemp+11)^0,f,c
 42501  0173EC  0EFF               	movlw	255
 42502  0173EE  2432               	addwf	(btemp+8)^0,w,c
 42503  0173F0  6E2E               	movwf	(btemp+4)^0,c
 42504  0173F2  0EFF               	movlw	255
 42505  0173F4  2033               	addwfc	(btemp+9)^0,w,c
 42506  0173F6  6E2F               	movwf	(btemp+5)^0,c
 42507  0173F8  0EFF               	movlw	255
 42508  0173FA  2034               	addwfc	(btemp+10)^0,w,c
 42509  0173FC  6E30               	movwf	(btemp+6)^0,c
 42510  0173FE  0EFF               	movlw	255
 42511  017400  2035               	addwfc	(btemp+11)^0,w,c
 42512  017402  6E31               	movwf	(btemp+7)^0,c
 42513                           
 42514                           ;stkvar	_b @ sp[(-4)+-4]
 42515  017404  0EF8               	movlw	-8
 42516  017406  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42517  01740C  0EF9               	movlw	-7
 42518  01740E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42519  017414  0EFA               	movlw	-6
 42520  017416  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42521  01741C  0EFB               	movlw	-5
 42522  01741E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42523                           
 42524                           ;stkvar	_signs @ sp[(-4)+3]
 42525  017424  0EFF               	movlw	-1
 42526  017426  7EE3               	btg	plusw1,7,c
 42527                           
 42528                           ;stkvar	_grs @ sp[(-4)+0]
 42529  017428  0EFC               	movlw	-4
 42530  01742A  50E3               	movf	plusw1,w,c
 42531  01742C  0800               	sublw	0
 42532  01742E  6E35               	movwf	(btemp+11)^0,c
 42533                           
 42534                           ;stkvar	_grs @ sp[(-4)+0]
 42535  017430  0EFC               	movlw	-4
 42536  017432  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42537                           
 42538                           ;stkvar	_grs @ sp[(-4)+0]
 42539  017438  0EFC               	movlw	-4
 42540  01743A  50E3               	movf	plusw1,w,c
 42541  01743C  A4D8               	btfss	status,2,c
 42542  01743E  D020               	goto	l9962
 42543                           
 42544                           ;stkvar	_b @ sp[(-4)+-4]
 42545  017440  50E1               	movf	fsr1l,w,c
 42546  017442  0FF8               	addlw	-8
 42547  017444  6ED9               	movwf	fsr2l,c
 42548  017446  50E2               	movf	fsr1h,w,c
 42549  017448  6EDA               	movwf	fsr2h,c
 42550  01744A  0EFF               	movlw	255
 42551  01744C  22DA               	addwfc	fsr2h,f,c
 42552  01744E  2ADE               	incf	postinc2,f,c
 42553  017450  0E00               	movlw	0
 42554  017452  22DE               	addwfc	postinc2,f,c
 42555  017454  22DE               	addwfc	postinc2,f,c
 42556  017456  22DE               	addwfc	postinc2,f,c
 42557  017458  D013               	goto	l9962
 42558  01745A                     l9960:
 42559                           
 42560                           ;stkvar	_a @ sp[(-4)+-8]
 42561                           ;stkvar	_b @ sp[(-4)+-4]
 42562  01745A  50E1               	movf	fsr1l,w,c
 42563  01745C  0FF8               	addlw	-8
 42564  01745E  6ED9               	movwf	fsr2l,c
 42565  017460  50E2               	movf	fsr1h,w,c
 42566  017462  6EDA               	movwf	fsr2h,c
 42567  017464  0EFF               	movlw	255
 42568  017466  22DA               	addwfc	fsr2h,f,c
 42569  017468  0EF4               	movlw	-12
 42570  01746A  50E3               	movf	plusw1,w,c
 42571  01746C  5EDE               	subwf	postinc2,f,c
 42572  01746E  0EF5               	movlw	-11
 42573  017470  50E3               	movf	plusw1,w,c
 42574  017472  5ADE               	subwfb	postinc2,f,c
 42575  017474  0EF6               	movlw	-10
 42576  017476  50E3               	movf	plusw1,w,c
 42577  017478  5ADE               	subwfb	postinc2,f,c
 42578  01747A  0EF7               	movlw	-9
 42579  01747C  50E3               	movf	plusw1,w,c
 42580  01747E  5ADE               	subwfb	postinc2,f,c
 42581  017480                     l9962:
 42582                           
 42583                           ;stkvar	_b @ sp[(-4)+-4]
 42584  017480  0EF8               	movlw	-8
 42585  017482  50E3               	movf	plusw1,w,c
 42586  017484  E145               	bnz	l9984
 42587  017486  0EF9               	movlw	-7
 42588  017488  50E3               	movf	plusw1,w,c
 42589  01748A  E142               	bnz	l9984
 42590  01748C  0EFA               	movlw	-6
 42591  01748E  50E3               	movf	plusw1,w,c
 42592  017490  E13F               	bnz	l9984
 42593  017492  0EFB               	movlw	-5
 42594  017494  50E3               	movf	plusw1,w,c
 42595  017496  A4D8               	btfss	status,2,c
 42596  017498  D03B               	goto	l9984
 42597                           
 42598                           ;stkvar	_grs @ sp[(-4)+0]
 42599  01749A  0EFC               	movlw	-4
 42600  01749C  50E3               	movf	plusw1,w,c
 42601  01749E  A4D8               	btfss	status,2,c
 42602  0174A0  D037               	goto	l9984
 42603  0174A2                     u7470:
 42604  0174A2  0E00               	movlw	0
 42605  0174A4  6E2A               	movwf	btemp^0,c
 42606  0174A6  0E00               	movlw	0
 42607  0174A8  6E2B               	movwf	(btemp+1)^0,c
 42608  0174AA  0E00               	movlw	0
 42609  0174AC  6E2C               	movwf	(btemp+2)^0,c
 42610  0174AE  0E00               	movlw	0
 42611  0174B0  6E2D               	movwf	(btemp+3)^0,c
 42612  0174B2  D0C6               	goto	l3269
 42613  0174B4                     l9970:
 42614                           
 42615                           ;stkvar	_b @ sp[(-4)+-4]
 42616  0174B4  90D8               	bcf	status,0,c
 42617  0174B6  0EF8               	movlw	-8
 42618  0174B8  36E3               	rlcf	plusw1,f,c
 42619  0174BA  0EF9               	movlw	-7
 42620  0174BC  36E3               	rlcf	plusw1,f,c
 42621  0174BE  0EFA               	movlw	-6
 42622  0174C0  36E3               	rlcf	plusw1,f,c
 42623  0174C2  0EFB               	movlw	-5
 42624  0174C4  36E3               	rlcf	plusw1,f,c
 42625                           
 42626                           ;stkvar	_grs @ sp[(-4)+0]
 42627  0174C6  0EFC               	movlw	-4
 42628  0174C8  AEE3               	btfss	plusw1,7,c
 42629  0174CA  D002               	goto	l3281
 42630                           
 42631                           ;stkvar	_b @ sp[(-4)+-4]
 42632  0174CC  0EF8               	movlw	-8
 42633  0174CE  80E3               	bsf	plusw1,0,c
 42634  0174D0                     l3281:
 42635                           
 42636                           ;stkvar	_grs @ sp[(-4)+0]
 42637  0174D0  0EFC               	movlw	-4
 42638  0174D2  A0E3               	btfss	plusw1,0,c
 42639  0174D4  D00E               	goto	l9978
 42640                           
 42641                           ;stkvar	_grs @ sp[(-4)+0]
 42642  0174D6  0EFC               	movlw	-4
 42643  0174D8  006F FF8C  F035    	movff	plusw1,btemp+11
 42644  0174DE  90D8               	bcf	status,0,c
 42645  0174E0  3435               	rlcf	(btemp+11)^0,w,c
 42646  0174E2  6E34               	movwf	(btemp+10)^0,c
 42647  0174E4  0E01               	movlw	1
 42648  0174E6  1234               	iorwf	(btemp+10)^0,f,c
 42649                           
 42650                           ;stkvar	_grs @ sp[(-4)+0]
 42651  0174E8  0EFC               	movlw	-4
 42652  0174EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42653  0174F0  D009               	goto	l9980
 42654  0174F2                     l9978:
 42655                           
 42656                           ;stkvar	_grs @ sp[(-4)+0]
 42657  0174F2  50E1               	movf	fsr1l,w,c
 42658  0174F4  0FFC               	addlw	-4
 42659  0174F6  6ED9               	movwf	fsr2l,c
 42660  0174F8  50E2               	movf	fsr1h,w,c
 42661  0174FA  6EDA               	movwf	fsr2h,c
 42662  0174FC  0EFF               	movlw	255
 42663  0174FE  22DA               	addwfc	fsr2h,f,c
 42664  017500  90D8               	bcf	status,0,c
 42665  017502  36DF               	rlcf	indf2,f,c
 42666  017504                     l9980:
 42667                           
 42668                           ;stkvar	_bexp @ sp[(-4)+1]
 42669  017504  0EFD               	movlw	-3
 42670  017506  50E3               	movf	plusw1,w,c
 42671  017508  B4D8               	btfsc	status,2,c
 42672  01750A  D002               	goto	l9984
 42673                           
 42674                           ;stkvar	_bexp @ sp[(-4)+1]
 42675  01750C  0EFD               	movlw	-3
 42676  01750E  06E3               	decf	plusw1,f,c
 42677  017510                     l9984:
 42678                           
 42679                           ;stkvar	_b @ sp[(-4)+-4]
 42680  017510  0EFA               	movlw	-6
 42681  017512  AEE3               	btfss	plusw1,7,c
 42682  017514  D7CF               	goto	l9970
 42683  017516                     u7510:
 42684                           
 42685                           ;stkvar	_aexp @ sp[(-4)+2]
 42686  017516  0EFE               	movlw	-2
 42687  017518  6AE3               	clrf	plusw1,c
 42688                           
 42689                           ;stkvar	_grs @ sp[(-4)+0]
 42690  01751A  0EFC               	movlw	-4
 42691  01751C  AEE3               	btfss	plusw1,7,c
 42692  01751E  D00F               	goto	l9998
 42693                           
 42694                           ;stkvar	_grs @ sp[(-4)+0]
 42695  017520  0EFC               	movlw	-4
 42696  017522  006F FF8C  F035    	movff	plusw1,btemp+11
 42697  017528  0E7F               	movlw	127
 42698  01752A  1635               	andwf	(btemp+11)^0,f,c
 42699  01752C  B4D8               	btfsc	status,2,c
 42700  01752E  D004               	goto	l9994
 42701  017530                     u7530:
 42702                           
 42703                           ;stkvar	_aexp @ sp[(-4)+2]
 42704  017530  0EFE               	movlw	-2
 42705  017532  6AE3               	clrf	plusw1,c
 42706  017534  2AE3               	incf	plusw1,f,c
 42707  017536  D003               	goto	l9998
 42708  017538                     l9994:
 42709                           
 42710                           ;stkvar	_b @ sp[(-4)+-4]
 42711  017538  0EF8               	movlw	-8
 42712  01753A  B0E3               	btfsc	plusw1,0,c
 42713  01753C  D7F9               	goto	u7530
 42714  01753E                     l9998:
 42715                           
 42716                           ;stkvar	_aexp @ sp[(-4)+2]
 42717  01753E  0EFE               	movlw	-2
 42718  017540  50E3               	movf	plusw1,w,c
 42719  017542  B4D8               	btfsc	status,2,c
 42720  017544  D02B               	goto	l10010
 42721                           
 42722                           ;stkvar	_b @ sp[(-4)+-4]
 42723  017546  50E1               	movf	fsr1l,w,c
 42724  017548  0FF8               	addlw	-8
 42725  01754A  6ED9               	movwf	fsr2l,c
 42726  01754C  50E2               	movf	fsr1h,w,c
 42727  01754E  6EDA               	movwf	fsr2h,c
 42728  017550  0EFF               	movlw	255
 42729  017552  22DA               	addwfc	fsr2h,f,c
 42730  017554  2ADE               	incf	postinc2,f,c
 42731  017556  0E00               	movlw	0
 42732  017558  22DE               	addwfc	postinc2,f,c
 42733  01755A  22DE               	addwfc	postinc2,f,c
 42734  01755C  22DE               	addwfc	postinc2,f,c
 42735                           
 42736                           ;stkvar	_b @ sp[(-4)+-4]
 42737  01755E  0EFB               	movlw	-5
 42738  017560  A0E3               	btfss	plusw1,0,c
 42739  017562  D01C               	goto	l10010
 42740  017564  0E01               	movlw	1
 42741  017566  6E35               	movwf	(btemp+11)^0,c
 42742                           
 42743                           ;stkvar	_b @ sp[(-4)+-4]
 42744  017568  50E1               	movf	fsr1l,w,c
 42745  01756A  0FF8               	addlw	-8
 42746  01756C  6ED9               	movwf	fsr2l,c
 42747  01756E  50E2               	movf	fsr1h,w,c
 42748  017570  6EDA               	movwf	fsr2h,c
 42749  017572  0EFF               	movlw	255
 42750  017574  22DA               	addwfc	fsr2h,f,c
 42751  017576  2835               	incf	(btemp+11)^0,w,c
 42752  017578  52DE               	movf	postinc2,f,c
 42753  01757A  D008               	goto	u7570
 42754  01757C                     u7575:
 42755  01757C  52DE               	movf	postinc2,f,c
 42756  01757E  90D8               	bcf	status,0,c
 42757  017580  BEDC               	btfsc	preinc2,7,c
 42758  017582  80D8               	bsf	status,0,c
 42759  017584  32DD               	rrcf	postdec2,f,c
 42760  017586  32DD               	rrcf	postdec2,f,c
 42761  017588  32DD               	rrcf	postdec2,f,c
 42762  01758A  32DE               	rrcf	postinc2,f,c
 42763  01758C                     u7570:
 42764  01758C  2EE8               	decfsz	wreg,f,c
 42765  01758E  D7F6               	goto	u7575
 42766                           
 42767                           ;stkvar	_bexp @ sp[(-4)+1]
 42768  017590  0EFD               	movlw	-3
 42769  017592  28E3               	incf	plusw1,w,c
 42770  017594  B4D8               	btfsc	status,2,c
 42771  017596  D002               	goto	l10010
 42772                           
 42773                           ;stkvar	_bexp @ sp[(-4)+1]
 42774  017598  0EFD               	movlw	-3
 42775  01759A  2AE3               	incf	plusw1,f,c
 42776  01759C                     l10010:
 42777                           
 42778                           ;stkvar	_bexp @ sp[(-4)+1]
 42779  01759C  0EFD               	movlw	-3
 42780  01759E  28E3               	incf	plusw1,w,c
 42781  0175A0  B4D8               	btfsc	status,2,c
 42782  0175A2  D004               	goto	u7600
 42783                           
 42784                           ;stkvar	_bexp @ sp[(-4)+1]
 42785  0175A4  0EFD               	movlw	-3
 42786  0175A6  50E3               	movf	plusw1,w,c
 42787  0175A8  A4D8               	btfss	status,2,c
 42788  0175AA  D00E               	goto	l10020
 42789  0175AC                     u7600:
 42790                           
 42791                           ;stkvar	_b @ sp[(-4)+-4]
 42792  0175AC  0EF8               	movlw	-8
 42793  0175AE  6AE3               	clrf	plusw1,c
 42794  0175B0  0EF9               	movlw	-7
 42795  0175B2  6AE3               	clrf	plusw1,c
 42796  0175B4  0EFA               	movlw	-6
 42797  0175B6  6AE3               	clrf	plusw1,c
 42798  0175B8  0EFB               	movlw	-5
 42799  0175BA  6AE3               	clrf	plusw1,c
 42800                           
 42801                           ;stkvar	_bexp @ sp[(-4)+1]
 42802  0175BC  0EFD               	movlw	-3
 42803  0175BE  50E3               	movf	plusw1,w,c
 42804  0175C0  A4D8               	btfss	status,2,c
 42805  0175C2  D002               	goto	l10020
 42806                           
 42807                           ;stkvar	_signs @ sp[(-4)+3]
 42808  0175C4  0EFF               	movlw	-1
 42809  0175C6  6AE3               	clrf	plusw1,c
 42810  0175C8                     l10020:
 42811                           
 42812                           ;stkvar	_bexp @ sp[(-4)+1]
 42813  0175C8  0EFD               	movlw	-3
 42814  0175CA  A0E3               	btfss	plusw1,0,c
 42815  0175CC  D009               	goto	l10024
 42816                           
 42817                           ;stkvar	_b @ sp[(-4)+-4]
 42818  0175CE  0EFA               	movlw	250
 42819  0175D0  24E1               	addwf	fsr1l,w,c
 42820  0175D2  6ED9               	movwf	fsr2l,c
 42821  0175D4  0EFF               	movlw	255
 42822  0175D6  20E2               	addwfc	fsr1h,w,c
 42823  0175D8  6EDA               	movwf	fsr2h,c
 42824  0175DA  0E00               	movlw	0
 42825  0175DC  8EDB               	bsf	plusw2,7,c
 42826  0175DE  D008               	goto	l10026
 42827  0175E0                     l10024:
 42828                           
 42829                           ;stkvar	_b @ sp[(-4)+-4]
 42830  0175E0  0EFA               	movlw	250
 42831  0175E2  24E1               	addwf	fsr1l,w,c
 42832  0175E4  6ED9               	movwf	fsr2l,c
 42833  0175E6  0EFF               	movlw	255
 42834  0175E8  20E2               	addwfc	fsr1h,w,c
 42835  0175EA  6EDA               	movwf	fsr2h,c
 42836  0175EC  0E7F               	movlw	127
 42837  0175EE  16DF               	andwf	indf2,f,c
 42838  0175F0                     l10026:
 42839                           
 42840                           ;stkvar	_b @ sp[(-4)+-4]
 42841  0175F0  0EFB               	movlw	251
 42842  0175F2  24E1               	addwf	fsr1l,w,c
 42843  0175F4  6ED9               	movwf	fsr2l,c
 42844  0175F6  0EFF               	movlw	255
 42845  0175F8  20E2               	addwfc	fsr1h,w,c
 42846  0175FA  6EDA               	movwf	fsr2h,c
 42847                           
 42848                           ;stkvar	_bexp @ sp[(-4)+1]
 42849  0175FC  0EFD               	movlw	-3
 42850  0175FE  006F FF8C  F035    	movff	plusw1,btemp+11
 42851  017604  90D8               	bcf	status,0,c
 42852  017606  3035               	rrcf	(btemp+11)^0,w,c
 42853  017608  6EDF               	movwf	indf2,c
 42854                           
 42855                           ;stkvar	_signs @ sp[(-4)+3]
 42856  01760A  0EFF               	movlw	-1
 42857  01760C  AEE3               	btfss	plusw1,7,c
 42858  01760E  D008               	goto	l10032
 42859                           
 42860                           ;stkvar	_b @ sp[(-4)+-4]
 42861  017610  0EFB               	movlw	251
 42862  017612  24E1               	addwf	fsr1l,w,c
 42863  017614  6ED9               	movwf	fsr2l,c
 42864  017616  0EFF               	movlw	255
 42865  017618  20E2               	addwfc	fsr1h,w,c
 42866  01761A  6EDA               	movwf	fsr2h,c
 42867  01761C  0E00               	movlw	0
 42868  01761E  8EDB               	bsf	plusw2,7,c
 42869  017620                     l10032:
 42870                           
 42871                           ;stkvar	_b @ sp[(-4)+-4]
 42872  017620  0EF8               	movlw	-8
 42873  017622  006F FF8C  F02A    	movff	plusw1,btemp
 42874  017628  0EF9               	movlw	-7
 42875  01762A  006F FF8C  F02B    	movff	plusw1,btemp+1
 42876  017630  0EFA               	movlw	-6
 42877  017632  006F FF8C  F02C    	movff	plusw1,btemp+2
 42878  017638  0EFB               	movlw	-5
 42879  01763A  006F FF8C  F02D    	movff	plusw1,btemp+3
 42880  017640                     l3269:
 42881                           
 42882                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42883  017640  0EF4               	movlw	244
 42884  017642  26E1               	addwf	fsr1l,f,c
 42885  017644  0EFF               	movlw	255
 42886  017646  22E2               	addwfc	fsr1h,f,c
 42887  017648  0012               	return		;funcret
 42888  01764A                     __end_of___fladd:
 42889                           	opt callstack 0
 42890                           
 42891 ;; *************** function ___flmul *****************
 42892 ;; Defined at:
 42893 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 42894 ;; Parameters:    Size  Location     Type
 42895 ;;  b               4  [STACK] unsigned char 
 42896 ;;  a               4  [STACK] unsigned char 
 42897 ;; Auto vars:     Size  Location     Type
 42898 ;;  prod            4  [STACK] struct .
 42899 ;;  grs             4  [STACK] unsigned long 
 42900 ;;  temp            2  [STACK] struct .
 42901 ;;  bexp            1  [STACK] unsigned char 
 42902 ;;  aexp            1  [STACK] unsigned char 
 42903 ;;  sign            1  [STACK] unsigned char 
 42904 ;; Return value:  Size  Location     Type
 42905 ;;                  4  [STACK] unsigned char 
 42906 ;; Registers used:
 42907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 42908 ;; Tracked objects:
 42909 ;;		On entry : 0/39
 42910 ;;		On exit  : 0/0
 42911 ;;		Unchanged: 0/0
 42912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42917 ;;Total ram usage:        0 bytes
 42918 ;; Hardware stack levels used:    1
 42919 ;; Hardware stack levels required when called:   15
 42920 ;; This function calls:
 42921 ;;		Nothing
 42922 ;; This function is called by:
 42923 ;;		_conv_raw_result
 42924 ;;		_lp_filter
 42925 ;;		_calc_model_data
 42926 ;;		_load_hist_data
 42927 ;;		_calc_bsoc
 42928 ;;		_init_bsoc
 42929 ;;		_efgtoa
 42930 ;; This function uses a reentrant model
 42931 ;;
 42932                           
 42933                           	psect	text154
 42934  016664                     __ptext154:
 42935                           	opt callstack 0
 42936  016664                     ___flmul:
 42937                           	opt callstack 0
 42938                           
 42939                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 42940  016664  0E0D               	movlw	13
 42941  016666  26E1               	addwf	fsr1l,f,c
 42942  016668  0E00               	movlw	0
 42943  01666A  22E2               	addwfc	fsr1h,f,c
 42944                           
 42945                           ;stkvar	_b @ sp[(-13)+-4]
 42946                           
 42947                           ;incstack = 0
 42948 ;; hardware stack exceeded
 42949  01666C  0EF2               	movlw	242
 42950  01666E  24E1               	addwf	fsr1l,w,c
 42951  016670  6ED9               	movwf	fsr2l,c
 42952  016672  0EFF               	movlw	255
 42953  016674  20E2               	addwfc	fsr1h,w,c
 42954  016676  6EDA               	movwf	fsr2h,c
 42955  016678  50DF               	movf	indf2,w,c
 42956  01667A  6E35               	movwf	(btemp+11)^0,c
 42957  01667C  0E80               	movlw	128
 42958  01667E  1635               	andwf	(btemp+11)^0,f,c
 42959                           
 42960                           ;stkvar	_sign @ sp[(-13)+12]
 42961  016680  0EFF               	movlw	-1
 42962  016682  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42963                           
 42964                           ;stkvar	_b @ sp[(-13)+-4]
 42965  016688  0EF2               	movlw	242
 42966  01668A  24E1               	addwf	fsr1l,w,c
 42967  01668C  6ED9               	movwf	fsr2l,c
 42968  01668E  0EFF               	movlw	255
 42969  016690  20E2               	addwfc	fsr1h,w,c
 42970  016692  6EDA               	movwf	fsr2h,c
 42971  016694  50DF               	movf	indf2,w,c
 42972  016696  6E35               	movwf	(btemp+11)^0,c
 42973  016698  90D8               	bcf	status,0,c
 42974  01669A  3435               	rlcf	(btemp+11)^0,w,c
 42975  01669C  6E34               	movwf	(btemp+10)^0,c
 42976                           
 42977                           ;stkvar	_bexp @ sp[(-13)+10]
 42978  01669E  0EFD               	movlw	-3
 42979  0166A0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42980                           
 42981                           ;stkvar	_b @ sp[(-13)+-4]
 42982  0166A6  0EF1               	movlw	241
 42983  0166A8  24E1               	addwf	fsr1l,w,c
 42984  0166AA  6ED9               	movwf	fsr2l,c
 42985  0166AC  0EFF               	movlw	255
 42986  0166AE  20E2               	addwfc	fsr1h,w,c
 42987  0166B0  6EDA               	movwf	fsr2h,c
 42988  0166B2  AEDF               	btfss	indf2,7,c
 42989  0166B4  D002               	goto	l10496
 42990                           
 42991                           ;stkvar	_bexp @ sp[(-13)+10]
 42992  0166B6  0EFD               	movlw	-3
 42993  0166B8  80E3               	bsf	plusw1,0,c
 42994  0166BA                     l10496:
 42995                           
 42996                           ;stkvar	_bexp @ sp[(-13)+10]
 42997  0166BA  0EFD               	movlw	-3
 42998  0166BC  50E3               	movf	plusw1,w,c
 42999  0166BE  B4D8               	btfsc	status,2,c
 43000  0166C0  D01F               	goto	l10504
 43001                           
 43002                           ;stkvar	_bexp @ sp[(-13)+10]
 43003  0166C2  0EFD               	movlw	-3
 43004  0166C4  28E3               	incf	plusw1,w,c
 43005  0166C6  A4D8               	btfss	status,2,c
 43006  0166C8  D018               	goto	l10502
 43007  0166CA  0E00               	movlw	0
 43008  0166CC  6E32               	movwf	(btemp+8)^0,c
 43009  0166CE  0E00               	movlw	0
 43010  0166D0  6E33               	movwf	(btemp+9)^0,c
 43011  0166D2  0E00               	movlw	0
 43012  0166D4  6E34               	movwf	(btemp+10)^0,c
 43013  0166D6  0E00               	movlw	0
 43014  0166D8  6E35               	movwf	(btemp+11)^0,c
 43015                           
 43016                           ;stkvar	_b @ sp[(-13)+-4]
 43017  0166DA  0EEF               	movlw	-17
 43018  0166DC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43019  0166E2  0EF0               	movlw	-16
 43020  0166E4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43021  0166EA  0EF1               	movlw	-15
 43022  0166EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43023  0166F2  0EF2               	movlw	-14
 43024  0166F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43025  0166FA                     l10502:
 43026                           
 43027                           ;stkvar	_b @ sp[(-13)+-4]
 43028  0166FA  0EF1               	movlw	-15
 43029  0166FC  8EE3               	bsf	plusw1,7,c
 43030  0166FE  D018               	goto	l10506
 43031  016700                     l10504:
 43032  016700  0E00               	movlw	0
 43033  016702  6E32               	movwf	(btemp+8)^0,c
 43034  016704  0E00               	movlw	0
 43035  016706  6E33               	movwf	(btemp+9)^0,c
 43036  016708  0E00               	movlw	0
 43037  01670A  6E34               	movwf	(btemp+10)^0,c
 43038  01670C  0E00               	movlw	0
 43039  01670E  6E35               	movwf	(btemp+11)^0,c
 43040                           
 43041                           ;stkvar	_b @ sp[(-13)+-4]
 43042  016710  0EEF               	movlw	-17
 43043  016712  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43044  016718  0EF0               	movlw	-16
 43045  01671A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43046  016720  0EF1               	movlw	-15
 43047  016722  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43048  016728  0EF2               	movlw	-14
 43049  01672A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43050  016730                     l10506:
 43051                           
 43052                           ;stkvar	_a @ sp[(-13)+-8]
 43053  016730  0EEE               	movlw	238
 43054  016732  24E1               	addwf	fsr1l,w,c
 43055  016734  6ED9               	movwf	fsr2l,c
 43056  016736  0EFF               	movlw	255
 43057  016738  20E2               	addwfc	fsr1h,w,c
 43058  01673A  6EDA               	movwf	fsr2h,c
 43059  01673C  50DF               	movf	indf2,w,c
 43060  01673E  6E35               	movwf	(btemp+11)^0,c
 43061  016740  0E80               	movlw	128
 43062  016742  1635               	andwf	(btemp+11)^0,f,c
 43063                           
 43064                           ;stkvar	_sign @ sp[(-13)+12]
 43065  016744  50E1               	movf	fsr1l,w,c
 43066  016746  0FFF               	addlw	-1
 43067  016748  6ED9               	movwf	fsr2l,c
 43068  01674A  50E2               	movf	fsr1h,w,c
 43069  01674C  6EDA               	movwf	fsr2h,c
 43070  01674E  0EFF               	movlw	255
 43071  016750  22DA               	addwfc	fsr2h,f,c
 43072  016752  5035               	movf	(btemp+11)^0,w,c
 43073  016754  1ADF               	xorwf	indf2,f,c
 43074                           
 43075                           ;stkvar	_a @ sp[(-13)+-8]
 43076  016756  0EEE               	movlw	238
 43077  016758  24E1               	addwf	fsr1l,w,c
 43078  01675A  6ED9               	movwf	fsr2l,c
 43079  01675C  0EFF               	movlw	255
 43080  01675E  20E2               	addwfc	fsr1h,w,c
 43081  016760  6EDA               	movwf	fsr2h,c
 43082  016762  50DF               	movf	indf2,w,c
 43083  016764  6E35               	movwf	(btemp+11)^0,c
 43084  016766  90D8               	bcf	status,0,c
 43085  016768  3435               	rlcf	(btemp+11)^0,w,c
 43086  01676A  6E34               	movwf	(btemp+10)^0,c
 43087                           
 43088                           ;stkvar	_aexp @ sp[(-13)+11]
 43089  01676C  0EFE               	movlw	-2
 43090  01676E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43091                           
 43092                           ;stkvar	_a @ sp[(-13)+-8]
 43093  016774  0EED               	movlw	237
 43094  016776  24E1               	addwf	fsr1l,w,c
 43095  016778  6ED9               	movwf	fsr2l,c
 43096  01677A  0EFF               	movlw	255
 43097  01677C  20E2               	addwfc	fsr1h,w,c
 43098  01677E  6EDA               	movwf	fsr2h,c
 43099  016780  AEDF               	btfss	indf2,7,c
 43100  016782  D002               	goto	l10514
 43101                           
 43102                           ;stkvar	_aexp @ sp[(-13)+11]
 43103  016784  0EFE               	movlw	-2
 43104  016786  80E3               	bsf	plusw1,0,c
 43105  016788                     l10514:
 43106                           
 43107                           ;stkvar	_aexp @ sp[(-13)+11]
 43108  016788  0EFE               	movlw	-2
 43109  01678A  50E3               	movf	plusw1,w,c
 43110  01678C  B4D8               	btfsc	status,2,c
 43111  01678E  D01F               	goto	l10522
 43112                           
 43113                           ;stkvar	_aexp @ sp[(-13)+11]
 43114  016790  0EFE               	movlw	-2
 43115  016792  28E3               	incf	plusw1,w,c
 43116  016794  A4D8               	btfss	status,2,c
 43117  016796  D018               	goto	l10520
 43118  016798  0E00               	movlw	0
 43119  01679A  6E32               	movwf	(btemp+8)^0,c
 43120  01679C  0E00               	movlw	0
 43121  01679E  6E33               	movwf	(btemp+9)^0,c
 43122  0167A0  0E00               	movlw	0
 43123  0167A2  6E34               	movwf	(btemp+10)^0,c
 43124  0167A4  0E00               	movlw	0
 43125  0167A6  6E35               	movwf	(btemp+11)^0,c
 43126                           
 43127                           ;stkvar	_a @ sp[(-13)+-8]
 43128  0167A8  0EEB               	movlw	-21
 43129  0167AA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43130  0167B0  0EEC               	movlw	-20
 43131  0167B2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43132  0167B8  0EED               	movlw	-19
 43133  0167BA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43134  0167C0  0EEE               	movlw	-18
 43135  0167C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43136  0167C8                     l10520:
 43137                           
 43138                           ;stkvar	_a @ sp[(-13)+-8]
 43139  0167C8  0EED               	movlw	-19
 43140  0167CA  8EE3               	bsf	plusw1,7,c
 43141  0167CC  D018               	goto	l10524
 43142  0167CE                     l10522:
 43143  0167CE  0E00               	movlw	0
 43144  0167D0  6E32               	movwf	(btemp+8)^0,c
 43145  0167D2  0E00               	movlw	0
 43146  0167D4  6E33               	movwf	(btemp+9)^0,c
 43147  0167D6  0E00               	movlw	0
 43148  0167D8  6E34               	movwf	(btemp+10)^0,c
 43149  0167DA  0E00               	movlw	0
 43150  0167DC  6E35               	movwf	(btemp+11)^0,c
 43151                           
 43152                           ;stkvar	_a @ sp[(-13)+-8]
 43153  0167DE  0EEB               	movlw	-21
 43154  0167E0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43155  0167E6  0EEC               	movlw	-20
 43156  0167E8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43157  0167EE  0EED               	movlw	-19
 43158  0167F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43159  0167F6  0EEE               	movlw	-18
 43160  0167F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43161  0167FE                     l10524:
 43162                           
 43163                           ;stkvar	_aexp @ sp[(-13)+11]
 43164  0167FE  0EFE               	movlw	-2
 43165  016800  50E3               	movf	plusw1,w,c
 43166  016802  B4D8               	btfsc	status,2,c
 43167  016804  D004               	goto	u8660
 43168                           
 43169                           ;stkvar	_bexp @ sp[(-13)+10]
 43170  016806  0EFD               	movlw	-3
 43171  016808  50E3               	movf	plusw1,w,c
 43172  01680A  A4D8               	btfss	status,2,c
 43173  01680C  D009               	goto	l10532
 43174  01680E                     u8660:
 43175  01680E  0E00               	movlw	0
 43176  016810  6E2A               	movwf	btemp^0,c
 43177  016812  0E00               	movlw	0
 43178  016814  6E2B               	movwf	(btemp+1)^0,c
 43179  016816  0E00               	movlw	0
 43180  016818  6E2C               	movwf	(btemp+2)^0,c
 43181  01681A  0E00               	movlw	0
 43182  01681C  6E2D               	movwf	(btemp+3)^0,c
 43183  01681E  D332               	goto	l3350
 43184  016820                     l10532:
 43185                           
 43186                           ;stkvar	_b @ sp[(-13)+-4]
 43187  016820  0EEF               	movlw	-17
 43188  016822  006F FF8C  F035    	movff	plusw1,btemp+11
 43189                           
 43190                           ;stkvar	_a @ sp[(-13)+-8]
 43191  016828  0EED               	movlw	237
 43192  01682A  24E1               	addwf	fsr1l,w,c
 43193  01682C  6ED9               	movwf	fsr2l,c
 43194  01682E  0EFF               	movlw	255
 43195  016830  20E2               	addwfc	fsr1h,w,c
 43196  016832  6EDA               	movwf	fsr2h,c
 43197  016834  50DF               	movf	indf2,w,c
 43198  016836  0235               	mulwf	(btemp+11)^0,c
 43199                           
 43200                           ;stkvar	_temp @ sp[(-13)+8]
 43201  016838  0EFB               	movlw	-5
 43202  01683A  006F FFCF FFE3     	movff	prodl,plusw1
 43203  016840  0EFC               	movlw	-4
 43204  016842  006F FFD3 FFE3     	movff	prodh,plusw1
 43205                           
 43206                           ;stkvar	_temp @ sp[(-13)+8]
 43207  016848  0EFB               	movlw	-5
 43208  01684A  006F FF8C  F035    	movff	plusw1,btemp+11
 43209  016850  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43210  016856  6A2F               	clrf	(btemp+5)^0,c
 43211  016858  6A30               	clrf	(btemp+6)^0,c
 43212  01685A  6A31               	clrf	(btemp+7)^0,c
 43213                           
 43214                           ;stkvar	_grs @ sp[(-13)+4]
 43215  01685C  0EF7               	movlw	-9
 43216  01685E  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43217  016864  0EF8               	movlw	-8
 43218  016866  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43219  01686C  0EF9               	movlw	-7
 43220  01686E  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43221  016874  0EFA               	movlw	-6
 43222  016876  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43223                           
 43224                           ;stkvar	_temp @ sp[(-13)+8]
 43225  01687C  0EFC               	movlw	252
 43226  01687E  24E1               	addwf	fsr1l,w,c
 43227  016880  6ED9               	movwf	fsr2l,c
 43228  016882  0EFF               	movlw	255
 43229  016884  20E2               	addwfc	fsr1h,w,c
 43230  016886  6EDA               	movwf	fsr2h,c
 43231  016888  50DF               	movf	indf2,w,c
 43232  01688A  6E35               	movwf	(btemp+11)^0,c
 43233  01688C  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43234  016892  6A2F               	clrf	(btemp+5)^0,c
 43235  016894  6A30               	clrf	(btemp+6)^0,c
 43236  016896  6A31               	clrf	(btemp+7)^0,c
 43237                           
 43238                           ;stkvar	_prod @ sp[(-13)+0]
 43239  016898  0EF3               	movlw	-13
 43240  01689A  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43241  0168A0  0EF4               	movlw	-12
 43242  0168A2  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43243  0168A8  0EF5               	movlw	-11
 43244  0168AA  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43245  0168B0  0EF6               	movlw	-10
 43246  0168B2  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43247                           
 43248                           ;stkvar	_b @ sp[(-13)+-4]
 43249  0168B8  0EF0               	movlw	240
 43250  0168BA  24E1               	addwf	fsr1l,w,c
 43251  0168BC  6ED9               	movwf	fsr2l,c
 43252  0168BE  0EFF               	movlw	255
 43253  0168C0  20E2               	addwfc	fsr1h,w,c
 43254  0168C2  6EDA               	movwf	fsr2h,c
 43255  0168C4  50DF               	movf	indf2,w,c
 43256  0168C6  6E35               	movwf	(btemp+11)^0,c
 43257                           
 43258                           ;stkvar	_a @ sp[(-13)+-8]
 43259  0168C8  0EEC               	movlw	236
 43260  0168CA  24E1               	addwf	fsr1l,w,c
 43261  0168CC  6ED9               	movwf	fsr2l,c
 43262  0168CE  0EFF               	movlw	255
 43263  0168D0  20E2               	addwfc	fsr1h,w,c
 43264  0168D2  6EDA               	movwf	fsr2h,c
 43265  0168D4  50DF               	movf	indf2,w,c
 43266  0168D6  0235               	mulwf	(btemp+11)^0,c
 43267                           
 43268                           ;stkvar	_temp @ sp[(-13)+8]
 43269  0168D8  0EFB               	movlw	-5
 43270  0168DA  006F FFCF FFE3     	movff	prodl,plusw1
 43271  0168E0  0EFC               	movlw	-4
 43272  0168E2  006F FFD3 FFE3     	movff	prodh,plusw1
 43273                           
 43274                           ;stkvar	_grs @ sp[(-13)+4]
 43275  0168E8  50E1               	movf	fsr1l,w,c
 43276  0168EA  0FF7               	addlw	-9
 43277  0168EC  6ED9               	movwf	fsr2l,c
 43278  0168EE  50E2               	movf	fsr1h,w,c
 43279  0168F0  6EDA               	movwf	fsr2h,c
 43280  0168F2  0EFF               	movlw	255
 43281  0168F4  22DA               	addwfc	fsr2h,f,c
 43282                           
 43283                           ;stkvar	_temp @ sp[(-13)+8]
 43284  0168F6  0EFB               	movlw	-5
 43285  0168F8  50E3               	movf	plusw1,w,c
 43286  0168FA  26DE               	addwf	postinc2,f,c
 43287  0168FC  0E00               	movlw	0
 43288  0168FE  22DE               	addwfc	postinc2,f,c
 43289  016900  22DE               	addwfc	postinc2,f,c
 43290  016902  22DE               	addwfc	postinc2,f,c
 43291                           
 43292                           ;stkvar	_prod @ sp[(-13)+0]
 43293  016904  50E1               	movf	fsr1l,w,c
 43294  016906  0FF3               	addlw	-13
 43295  016908  6ED9               	movwf	fsr2l,c
 43296  01690A  50E2               	movf	fsr1h,w,c
 43297  01690C  6EDA               	movwf	fsr2h,c
 43298  01690E  0EFF               	movlw	255
 43299  016910  22DA               	addwfc	fsr2h,f,c
 43300                           
 43301                           ;stkvar	_temp @ sp[(-13)+8]
 43302  016912  0EFC               	movlw	252
 43303  016914  24E1               	addwf	fsr1l,w,c
 43304  016916  6EE9               	movwf	fsr0l,c
 43305  016918  0EFF               	movlw	255
 43306  01691A  20E2               	addwfc	fsr1h,w,c
 43307  01691C  6EEA               	movwf	fsr0h,c
 43308  01691E  50EF               	movf	indf0,w,c
 43309  016920  26DE               	addwf	postinc2,f,c
 43310  016922  0E00               	movlw	0
 43311  016924  22DE               	addwfc	postinc2,f,c
 43312  016926  22DE               	addwfc	postinc2,f,c
 43313  016928  22DE               	addwfc	postinc2,f,c
 43314                           
 43315                           ;stkvar	_b @ sp[(-13)+-4]
 43316  01692A  0EF1               	movlw	241
 43317  01692C  24E1               	addwf	fsr1l,w,c
 43318  01692E  6ED9               	movwf	fsr2l,c
 43319  016930  0EFF               	movlw	255
 43320  016932  20E2               	addwfc	fsr1h,w,c
 43321  016934  6EDA               	movwf	fsr2h,c
 43322  016936  50DF               	movf	indf2,w,c
 43323  016938  6E35               	movwf	(btemp+11)^0,c
 43324                           
 43325                           ;stkvar	_a @ sp[(-13)+-8]
 43326  01693A  0EEB               	movlw	-21
 43327  01693C  50E3               	movf	plusw1,w,c
 43328  01693E  0235               	mulwf	(btemp+11)^0,c
 43329                           
 43330                           ;stkvar	_temp @ sp[(-13)+8]
 43331  016940  0EFB               	movlw	-5
 43332  016942  006F FFCF FFE3     	movff	prodl,plusw1
 43333  016948  0EFC               	movlw	-4
 43334  01694A  006F FFD3 FFE3     	movff	prodh,plusw1
 43335                           
 43336                           ;stkvar	_grs @ sp[(-13)+4]
 43337  016950  50E1               	movf	fsr1l,w,c
 43338  016952  0FF7               	addlw	-9
 43339  016954  6ED9               	movwf	fsr2l,c
 43340  016956  50E2               	movf	fsr1h,w,c
 43341  016958  6EDA               	movwf	fsr2h,c
 43342  01695A  0EFF               	movlw	255
 43343  01695C  22DA               	addwfc	fsr2h,f,c
 43344                           
 43345                           ;stkvar	_temp @ sp[(-13)+8]
 43346  01695E  0EFB               	movlw	-5
 43347  016960  50E3               	movf	plusw1,w,c
 43348  016962  26DE               	addwf	postinc2,f,c
 43349  016964  0E00               	movlw	0
 43350  016966  22DE               	addwfc	postinc2,f,c
 43351  016968  22DE               	addwfc	postinc2,f,c
 43352  01696A  22DE               	addwfc	postinc2,f,c
 43353                           
 43354                           ;stkvar	_prod @ sp[(-13)+0]
 43355  01696C  50E1               	movf	fsr1l,w,c
 43356  01696E  0FF3               	addlw	-13
 43357  016970  6ED9               	movwf	fsr2l,c
 43358  016972  50E2               	movf	fsr1h,w,c
 43359  016974  6EDA               	movwf	fsr2h,c
 43360  016976  0EFF               	movlw	255
 43361  016978  22DA               	addwfc	fsr2h,f,c
 43362                           
 43363                           ;stkvar	_temp @ sp[(-13)+8]
 43364  01697A  0EFC               	movlw	252
 43365  01697C  24E1               	addwf	fsr1l,w,c
 43366  01697E  6EE9               	movwf	fsr0l,c
 43367  016980  0EFF               	movlw	255
 43368  016982  20E2               	addwfc	fsr1h,w,c
 43369  016984  6EEA               	movwf	fsr0h,c
 43370  016986  50EF               	movf	indf0,w,c
 43371  016988  26DE               	addwf	postinc2,f,c
 43372  01698A  0E00               	movlw	0
 43373  01698C  22DE               	addwfc	postinc2,f,c
 43374  01698E  22DE               	addwfc	postinc2,f,c
 43375  016990  22DE               	addwfc	postinc2,f,c
 43376                           
 43377                           ;stkvar	_grs @ sp[(-13)+4]
 43378  016992  50E1               	movf	fsr1l,w,c
 43379  016994  0FF7               	addlw	-9
 43380  016996  6ED9               	movwf	fsr2l,c
 43381  016998  50E2               	movf	fsr1h,w,c
 43382  01699A  6EDA               	movwf	fsr2h,c
 43383  01699C  0EFF               	movlw	255
 43384  01699E  22DA               	addwfc	fsr2h,f,c
 43385  0169A0  0E08               	movlw	8
 43386  0169A2                     u8675:
 43387  0169A2  90D8               	bcf	status,0,c
 43388  0169A4  36DE               	rlcf	postinc2,f,c
 43389  0169A6  36DE               	rlcf	postinc2,f,c
 43390  0169A8  36DE               	rlcf	postinc2,f,c
 43391  0169AA  36DD               	rlcf	postdec2,f,c
 43392  0169AC  52DD               	movf	postdec2,f,c
 43393  0169AE  52DD               	movf	postdec2,f,c
 43394  0169B0  2EE8               	decfsz	wreg,f,c
 43395  0169B2  D7F7               	goto	u8675
 43396                           
 43397                           ;stkvar	_b @ sp[(-13)+-4]
 43398  0169B4  0EF0               	movlw	240
 43399  0169B6  24E1               	addwf	fsr1l,w,c
 43400  0169B8  6ED9               	movwf	fsr2l,c
 43401  0169BA  0EFF               	movlw	255
 43402  0169BC  20E2               	addwfc	fsr1h,w,c
 43403  0169BE  6EDA               	movwf	fsr2h,c
 43404  0169C0  50DF               	movf	indf2,w,c
 43405  0169C2  6E35               	movwf	(btemp+11)^0,c
 43406                           
 43407                           ;stkvar	_a @ sp[(-13)+-8]
 43408  0169C4  0EEB               	movlw	-21
 43409  0169C6  50E3               	movf	plusw1,w,c
 43410  0169C8  0235               	mulwf	(btemp+11)^0,c
 43411                           
 43412                           ;stkvar	_temp @ sp[(-13)+8]
 43413  0169CA  0EFB               	movlw	-5
 43414  0169CC  006F FFCF FFE3     	movff	prodl,plusw1
 43415  0169D2  0EFC               	movlw	-4
 43416  0169D4  006F FFD3 FFE3     	movff	prodh,plusw1
 43417                           
 43418                           ;stkvar	_temp @ sp[(-13)+8]
 43419  0169DA  0EFB               	movlw	-5
 43420  0169DC  006F FF8C  F034    	movff	plusw1,btemp+10
 43421  0169E2  0EFC               	movlw	-4
 43422  0169E4  006F FF8C  F035    	movff	plusw1,btemp+11
 43423                           
 43424                           ;stkvar	_grs @ sp[(-13)+4]
 43425  0169EA  50E1               	movf	fsr1l,w,c
 43426  0169EC  0FF7               	addlw	-9
 43427  0169EE  6ED9               	movwf	fsr2l,c
 43428  0169F0  50E2               	movf	fsr1h,w,c
 43429  0169F2  6EDA               	movwf	fsr2h,c
 43430  0169F4  0EFF               	movlw	255
 43431  0169F6  22DA               	addwfc	fsr2h,f,c
 43432  0169F8  5034               	movf	(btemp+10)^0,w,c
 43433  0169FA  26DE               	addwf	postinc2,f,c
 43434  0169FC  5035               	movf	(btemp+11)^0,w,c
 43435  0169FE  22DE               	addwfc	postinc2,f,c
 43436  016A00  0E00               	movlw	0
 43437  016A02  22DE               	addwfc	postinc2,f,c
 43438  016A04  22DE               	addwfc	postinc2,f,c
 43439                           
 43440                           ;stkvar	_b @ sp[(-13)+-4]
 43441  016A06  0EEF               	movlw	-17
 43442  016A08  006F FF8C  F035    	movff	plusw1,btemp+11
 43443                           
 43444                           ;stkvar	_a @ sp[(-13)+-8]
 43445  016A0E  0EEC               	movlw	236
 43446  016A10  24E1               	addwf	fsr1l,w,c
 43447  016A12  6ED9               	movwf	fsr2l,c
 43448  016A14  0EFF               	movlw	255
 43449  016A16  20E2               	addwfc	fsr1h,w,c
 43450  016A18  6EDA               	movwf	fsr2h,c
 43451  016A1A  50DF               	movf	indf2,w,c
 43452  016A1C  0235               	mulwf	(btemp+11)^0,c
 43453                           
 43454                           ;stkvar	_temp @ sp[(-13)+8]
 43455  016A1E  0EFB               	movlw	-5
 43456  016A20  006F FFCF FFE3     	movff	prodl,plusw1
 43457  016A26  0EFC               	movlw	-4
 43458  016A28  006F FFD3 FFE3     	movff	prodh,plusw1
 43459                           
 43460                           ;stkvar	_temp @ sp[(-13)+8]
 43461  016A2E  0EFB               	movlw	-5
 43462  016A30  006F FF8C  F034    	movff	plusw1,btemp+10
 43463  016A36  0EFC               	movlw	-4
 43464  016A38  006F FF8C  F035    	movff	plusw1,btemp+11
 43465                           
 43466                           ;stkvar	_grs @ sp[(-13)+4]
 43467  016A3E  50E1               	movf	fsr1l,w,c
 43468  016A40  0FF7               	addlw	-9
 43469  016A42  6ED9               	movwf	fsr2l,c
 43470  016A44  50E2               	movf	fsr1h,w,c
 43471  016A46  6EDA               	movwf	fsr2h,c
 43472  016A48  0EFF               	movlw	255
 43473  016A4A  22DA               	addwfc	fsr2h,f,c
 43474  016A4C  5034               	movf	(btemp+10)^0,w,c
 43475  016A4E  26DE               	addwf	postinc2,f,c
 43476  016A50  5035               	movf	(btemp+11)^0,w,c
 43477  016A52  22DE               	addwfc	postinc2,f,c
 43478  016A54  0E00               	movlw	0
 43479  016A56  22DE               	addwfc	postinc2,f,c
 43480  016A58  22DE               	addwfc	postinc2,f,c
 43481                           
 43482                           ;stkvar	_grs @ sp[(-13)+4]
 43483  016A5A  50E1               	movf	fsr1l,w,c
 43484  016A5C  0FF7               	addlw	-9
 43485  016A5E  6ED9               	movwf	fsr2l,c
 43486  016A60  50E2               	movf	fsr1h,w,c
 43487  016A62  6EDA               	movwf	fsr2h,c
 43488  016A64  0EFF               	movlw	255
 43489  016A66  22DA               	addwfc	fsr2h,f,c
 43490  016A68  0E08               	movlw	8
 43491  016A6A                     u8685:
 43492  016A6A  90D8               	bcf	status,0,c
 43493  016A6C  36DE               	rlcf	postinc2,f,c
 43494  016A6E  36DE               	rlcf	postinc2,f,c
 43495  016A70  36DE               	rlcf	postinc2,f,c
 43496  016A72  36DD               	rlcf	postdec2,f,c
 43497  016A74  52DD               	movf	postdec2,f,c
 43498  016A76  52DD               	movf	postdec2,f,c
 43499  016A78  2EE8               	decfsz	wreg,f,c
 43500  016A7A  D7F7               	goto	u8685
 43501                           
 43502                           ;stkvar	_b @ sp[(-13)+-4]
 43503  016A7C  0EEF               	movlw	-17
 43504  016A7E  006F FF8C  F035    	movff	plusw1,btemp+11
 43505                           
 43506                           ;stkvar	_a @ sp[(-13)+-8]
 43507  016A84  0EEB               	movlw	-21
 43508  016A86  50E3               	movf	plusw1,w,c
 43509  016A88  0235               	mulwf	(btemp+11)^0,c
 43510                           
 43511                           ;stkvar	_temp @ sp[(-13)+8]
 43512  016A8A  0EFB               	movlw	-5
 43513  016A8C  006F FFCF FFE3     	movff	prodl,plusw1
 43514  016A92  0EFC               	movlw	-4
 43515  016A94  006F FFD3 FFE3     	movff	prodh,plusw1
 43516                           
 43517                           ;stkvar	_temp @ sp[(-13)+8]
 43518  016A9A  0EFB               	movlw	-5
 43519  016A9C  006F FF8C  F034    	movff	plusw1,btemp+10
 43520  016AA2  0EFC               	movlw	-4
 43521  016AA4  006F FF8C  F035    	movff	plusw1,btemp+11
 43522                           
 43523                           ;stkvar	_grs @ sp[(-13)+4]
 43524  016AAA  50E1               	movf	fsr1l,w,c
 43525  016AAC  0FF7               	addlw	-9
 43526  016AAE  6ED9               	movwf	fsr2l,c
 43527  016AB0  50E2               	movf	fsr1h,w,c
 43528  016AB2  6EDA               	movwf	fsr2h,c
 43529  016AB4  0EFF               	movlw	255
 43530  016AB6  22DA               	addwfc	fsr2h,f,c
 43531  016AB8  5034               	movf	(btemp+10)^0,w,c
 43532  016ABA  26DE               	addwf	postinc2,f,c
 43533  016ABC  5035               	movf	(btemp+11)^0,w,c
 43534  016ABE  22DE               	addwfc	postinc2,f,c
 43535  016AC0  0E00               	movlw	0
 43536  016AC2  22DE               	addwfc	postinc2,f,c
 43537  016AC4  22DE               	addwfc	postinc2,f,c
 43538                           
 43539                           ;stkvar	_b @ sp[(-13)+-4]
 43540  016AC6  0EF0               	movlw	240
 43541  016AC8  24E1               	addwf	fsr1l,w,c
 43542  016ACA  6ED9               	movwf	fsr2l,c
 43543  016ACC  0EFF               	movlw	255
 43544  016ACE  20E2               	addwfc	fsr1h,w,c
 43545  016AD0  6EDA               	movwf	fsr2h,c
 43546  016AD2  50DF               	movf	indf2,w,c
 43547  016AD4  6E35               	movwf	(btemp+11)^0,c
 43548                           
 43549                           ;stkvar	_a @ sp[(-13)+-8]
 43550  016AD6  0EED               	movlw	237
 43551  016AD8  24E1               	addwf	fsr1l,w,c
 43552  016ADA  6ED9               	movwf	fsr2l,c
 43553  016ADC  0EFF               	movlw	255
 43554  016ADE  20E2               	addwfc	fsr1h,w,c
 43555  016AE0  6EDA               	movwf	fsr2h,c
 43556  016AE2  50DF               	movf	indf2,w,c
 43557  016AE4  0235               	mulwf	(btemp+11)^0,c
 43558                           
 43559                           ;stkvar	_temp @ sp[(-13)+8]
 43560  016AE6  0EFB               	movlw	-5
 43561  016AE8  006F FFCF FFE3     	movff	prodl,plusw1
 43562  016AEE  0EFC               	movlw	-4
 43563  016AF0  006F FFD3 FFE3     	movff	prodh,plusw1
 43564                           
 43565                           ;stkvar	_temp @ sp[(-13)+8]
 43566  016AF6  0EFB               	movlw	-5
 43567  016AF8  006F FF8C  F034    	movff	plusw1,btemp+10
 43568  016AFE  0EFC               	movlw	-4
 43569  016B00  006F FF8C  F035    	movff	plusw1,btemp+11
 43570                           
 43571                           ;stkvar	_prod @ sp[(-13)+0]
 43572  016B06  50E1               	movf	fsr1l,w,c
 43573  016B08  0FF3               	addlw	-13
 43574  016B0A  6ED9               	movwf	fsr2l,c
 43575  016B0C  50E2               	movf	fsr1h,w,c
 43576  016B0E  6EDA               	movwf	fsr2h,c
 43577  016B10  0EFF               	movlw	255
 43578  016B12  22DA               	addwfc	fsr2h,f,c
 43579  016B14  5034               	movf	(btemp+10)^0,w,c
 43580  016B16  26DE               	addwf	postinc2,f,c
 43581  016B18  5035               	movf	(btemp+11)^0,w,c
 43582  016B1A  22DE               	addwfc	postinc2,f,c
 43583  016B1C  0E00               	movlw	0
 43584  016B1E  22DE               	addwfc	postinc2,f,c
 43585  016B20  22DE               	addwfc	postinc2,f,c
 43586                           
 43587                           ;stkvar	_b @ sp[(-13)+-4]
 43588  016B22  0EF1               	movlw	241
 43589  016B24  24E1               	addwf	fsr1l,w,c
 43590  016B26  6ED9               	movwf	fsr2l,c
 43591  016B28  0EFF               	movlw	255
 43592  016B2A  20E2               	addwfc	fsr1h,w,c
 43593  016B2C  6EDA               	movwf	fsr2h,c
 43594  016B2E  50DF               	movf	indf2,w,c
 43595  016B30  6E35               	movwf	(btemp+11)^0,c
 43596                           
 43597                           ;stkvar	_a @ sp[(-13)+-8]
 43598  016B32  0EEC               	movlw	236
 43599  016B34  24E1               	addwf	fsr1l,w,c
 43600  016B36  6ED9               	movwf	fsr2l,c
 43601  016B38  0EFF               	movlw	255
 43602  016B3A  20E2               	addwfc	fsr1h,w,c
 43603  016B3C  6EDA               	movwf	fsr2h,c
 43604  016B3E  50DF               	movf	indf2,w,c
 43605  016B40  0235               	mulwf	(btemp+11)^0,c
 43606                           
 43607                           ;stkvar	_temp @ sp[(-13)+8]
 43608  016B42  0EFB               	movlw	-5
 43609  016B44  006F FFCF FFE3     	movff	prodl,plusw1
 43610  016B4A  0EFC               	movlw	-4
 43611  016B4C  006F FFD3 FFE3     	movff	prodh,plusw1
 43612                           
 43613                           ;stkvar	_temp @ sp[(-13)+8]
 43614  016B52  0EFB               	movlw	-5
 43615  016B54  006F FF8C  F034    	movff	plusw1,btemp+10
 43616  016B5A  0EFC               	movlw	-4
 43617  016B5C  006F FF8C  F035    	movff	plusw1,btemp+11
 43618                           
 43619                           ;stkvar	_prod @ sp[(-13)+0]
 43620  016B62  50E1               	movf	fsr1l,w,c
 43621  016B64  0FF3               	addlw	-13
 43622  016B66  6ED9               	movwf	fsr2l,c
 43623  016B68  50E2               	movf	fsr1h,w,c
 43624  016B6A  6EDA               	movwf	fsr2h,c
 43625  016B6C  0EFF               	movlw	255
 43626  016B6E  22DA               	addwfc	fsr2h,f,c
 43627  016B70  5034               	movf	(btemp+10)^0,w,c
 43628  016B72  26DE               	addwf	postinc2,f,c
 43629  016B74  5035               	movf	(btemp+11)^0,w,c
 43630  016B76  22DE               	addwfc	postinc2,f,c
 43631  016B78  0E00               	movlw	0
 43632  016B7A  22DE               	addwfc	postinc2,f,c
 43633  016B7C  22DE               	addwfc	postinc2,f,c
 43634                           
 43635                           ;stkvar	_b @ sp[(-13)+-4]
 43636  016B7E  0EF1               	movlw	241
 43637  016B80  24E1               	addwf	fsr1l,w,c
 43638  016B82  6ED9               	movwf	fsr2l,c
 43639  016B84  0EFF               	movlw	255
 43640  016B86  20E2               	addwfc	fsr1h,w,c
 43641  016B88  6EDA               	movwf	fsr2h,c
 43642  016B8A  50DF               	movf	indf2,w,c
 43643  016B8C  6E35               	movwf	(btemp+11)^0,c
 43644                           
 43645                           ;stkvar	_a @ sp[(-13)+-8]
 43646  016B8E  0EED               	movlw	237
 43647  016B90  24E1               	addwf	fsr1l,w,c
 43648  016B92  6ED9               	movwf	fsr2l,c
 43649  016B94  0EFF               	movlw	255
 43650  016B96  20E2               	addwfc	fsr1h,w,c
 43651  016B98  6EDA               	movwf	fsr2h,c
 43652  016B9A  50DF               	movf	indf2,w,c
 43653  016B9C  0235               	mulwf	(btemp+11)^0,c
 43654                           
 43655                           ;stkvar	_temp @ sp[(-13)+8]
 43656  016B9E  0EFB               	movlw	-5
 43657  016BA0  006F FFCF FFE3     	movff	prodl,plusw1
 43658  016BA6  0EFC               	movlw	-4
 43659  016BA8  006F FFD3 FFE3     	movff	prodh,plusw1
 43660                           
 43661                           ;stkvar	_temp @ sp[(-13)+8]
 43662  016BAE  0EFB               	movlw	-5
 43663  016BB0  006F FF8C  F034    	movff	plusw1,btemp+10
 43664  016BB6  0EFC               	movlw	-4
 43665  016BB8  006F FF8C  F035    	movff	plusw1,btemp+11
 43666  016BBE  5034               	movf	(btemp+10)^0,w,c
 43667  016BC0  6E2E               	movwf	(btemp+4)^0,c
 43668  016BC2  5035               	movf	(btemp+11)^0,w,c
 43669  016BC4  6E2F               	movwf	(btemp+5)^0,c
 43670  016BC6  6A30               	clrf	(btemp+6)^0,c
 43671  016BC8  6A31               	clrf	(btemp+7)^0,c
 43672  016BCA  0060  F0C0  F031   	movff	btemp+6,btemp+7
 43673  016BD0  0060  F0BC  F030   	movff	btemp+5,btemp+6
 43674  016BD6  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 43675  016BDC  6A2E               	clrf	(btemp+4)^0,c
 43676                           
 43677                           ;stkvar	_prod @ sp[(-13)+0]
 43678  016BDE  50E1               	movf	fsr1l,w,c
 43679  016BE0  0FF3               	addlw	-13
 43680  016BE2  6ED9               	movwf	fsr2l,c
 43681  016BE4  50E2               	movf	fsr1h,w,c
 43682  016BE6  6EDA               	movwf	fsr2h,c
 43683  016BE8  0EFF               	movlw	255
 43684  016BEA  22DA               	addwfc	fsr2h,f,c
 43685  016BEC  502E               	movf	(btemp+4)^0,w,c
 43686  016BEE  26DE               	addwf	postinc2,f,c
 43687  016BF0  502F               	movf	(btemp+5)^0,w,c
 43688  016BF2  22DE               	addwfc	postinc2,f,c
 43689  016BF4  5030               	movf	(btemp+6)^0,w,c
 43690  016BF6  22DE               	addwfc	postinc2,f,c
 43691  016BF8  5031               	movf	(btemp+7)^0,w,c
 43692  016BFA  22DE               	addwfc	postinc2,f,c
 43693                           
 43694                           ;stkvar	_prod @ sp[(-13)+0]
 43695  016BFC  50E1               	movf	fsr1l,w,c
 43696  016BFE  0FF3               	addlw	-13
 43697  016C00  6ED9               	movwf	fsr2l,c
 43698  016C02  50E2               	movf	fsr1h,w,c
 43699  016C04  6EDA               	movwf	fsr2h,c
 43700  016C06  0EFF               	movlw	255
 43701  016C08  22DA               	addwfc	fsr2h,f,c
 43702                           
 43703                           ;stkvar	_grs @ sp[(-13)+4]
 43704  016C0A  0EFA               	movlw	250
 43705  016C0C  24E1               	addwf	fsr1l,w,c
 43706  016C0E  6EE9               	movwf	fsr0l,c
 43707  016C10  0EFF               	movlw	255
 43708  016C12  20E2               	addwfc	fsr1h,w,c
 43709  016C14  6EEA               	movwf	fsr0h,c
 43710  016C16  50EF               	movf	indf0,w,c
 43711  016C18  26DE               	addwf	postinc2,f,c
 43712  016C1A  0E00               	movlw	0
 43713  016C1C  22DE               	addwfc	postinc2,f,c
 43714  016C1E  22DE               	addwfc	postinc2,f,c
 43715  016C20  22DE               	addwfc	postinc2,f,c
 43716                           
 43717                           ;stkvar	_grs @ sp[(-13)+4]
 43718  016C22  50E1               	movf	fsr1l,w,c
 43719  016C24  0FF7               	addlw	-9
 43720  016C26  6ED9               	movwf	fsr2l,c
 43721  016C28  50E2               	movf	fsr1h,w,c
 43722  016C2A  6EDA               	movwf	fsr2h,c
 43723  016C2C  0EFF               	movlw	255
 43724  016C2E  22DA               	addwfc	fsr2h,f,c
 43725  016C30  0E08               	movlw	8
 43726  016C32                     u8695:
 43727  016C32  90D8               	bcf	status,0,c
 43728  016C34  36DE               	rlcf	postinc2,f,c
 43729  016C36  36DE               	rlcf	postinc2,f,c
 43730  016C38  36DE               	rlcf	postinc2,f,c
 43731  016C3A  36DD               	rlcf	postdec2,f,c
 43732  016C3C  52DD               	movf	postdec2,f,c
 43733  016C3E  52DD               	movf	postdec2,f,c
 43734  016C40  2EE8               	decfsz	wreg,f,c
 43735  016C42  D7F7               	goto	u8695
 43736  016C44  0E82               	movlw	130
 43737  016C46  6E34               	movwf	(btemp+10)^0,c
 43738  016C48  0EFF               	movlw	255
 43739  016C4A  6E35               	movwf	(btemp+11)^0,c
 43740                           
 43741                           ;stkvar	_bexp @ sp[(-13)+10]
 43742  016C4C  0EFD               	movlw	-3
 43743  016C4E  50E3               	movf	plusw1,w,c
 43744  016C50  6E32               	movwf	(btemp+8)^0,c
 43745  016C52  6A33               	clrf	(btemp+9)^0,c
 43746                           
 43747                           ;stkvar	_aexp @ sp[(-13)+11]
 43748  016C54  0EFE               	movlw	-2
 43749  016C56  50E3               	movf	plusw1,w,c
 43750  016C58  2632               	addwf	(btemp+8)^0,f,c
 43751  016C5A  0E00               	movlw	0
 43752  016C5C  2233               	addwfc	(btemp+9)^0,f,c
 43753  016C5E  5034               	movf	(btemp+10)^0,w,c
 43754  016C60  2632               	addwf	(btemp+8)^0,f,c
 43755  016C62  5035               	movf	(btemp+11)^0,w,c
 43756  016C64  2233               	addwfc	(btemp+9)^0,f,c
 43757                           
 43758                           ;stkvar	_temp @ sp[(-13)+8]
 43759  016C66  0EFB               	movlw	-5
 43760  016C68  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43761  016C6E  0EFC               	movlw	-4
 43762  016C70  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43763  016C76  D021               	goto	l10594
 43764  016C78                     l10584:
 43765                           
 43766                           ;stkvar	_prod @ sp[(-13)+0]
 43767  016C78  90D8               	bcf	status,0,c
 43768  016C7A  0EF3               	movlw	-13
 43769  016C7C  36E3               	rlcf	plusw1,f,c
 43770  016C7E  0EF4               	movlw	-12
 43771  016C80  36E3               	rlcf	plusw1,f,c
 43772  016C82  0EF5               	movlw	-11
 43773  016C84  36E3               	rlcf	plusw1,f,c
 43774  016C86  0EF6               	movlw	-10
 43775  016C88  36E3               	rlcf	plusw1,f,c
 43776                           
 43777                           ;stkvar	_grs @ sp[(-13)+4]
 43778  016C8A  0EFA               	movlw	-6
 43779  016C8C  AEE3               	btfss	plusw1,7,c
 43780  016C8E  D002               	goto	l10590
 43781                           
 43782                           ;stkvar	_prod @ sp[(-13)+0]
 43783  016C90  0EF3               	movlw	-13
 43784  016C92  80E3               	bsf	plusw1,0,c
 43785  016C94                     l10590:
 43786                           
 43787                           ;stkvar	_grs @ sp[(-13)+4]
 43788  016C94  90D8               	bcf	status,0,c
 43789  016C96  0EF7               	movlw	-9
 43790  016C98  36E3               	rlcf	plusw1,f,c
 43791  016C9A  0EF8               	movlw	-8
 43792  016C9C  36E3               	rlcf	plusw1,f,c
 43793  016C9E  0EF9               	movlw	-7
 43794  016CA0  36E3               	rlcf	plusw1,f,c
 43795  016CA2  0EFA               	movlw	-6
 43796  016CA4  36E3               	rlcf	plusw1,f,c
 43797                           
 43798                           ;stkvar	_temp @ sp[(-13)+8]
 43799  016CA6  50E1               	movf	fsr1l,w,c
 43800  016CA8  0FFB               	addlw	-5
 43801  016CAA  6ED9               	movwf	fsr2l,c
 43802  016CAC  50E2               	movf	fsr1h,w,c
 43803  016CAE  6EDA               	movwf	fsr2h,c
 43804  016CB0  0EFF               	movlw	255
 43805  016CB2  22DA               	addwfc	fsr2h,f,c
 43806  016CB4  06DE               	decf	postinc2,f,c
 43807  016CB6  0E00               	movlw	0
 43808  016CB8  5ADD               	subwfb	postdec2,f,c
 43809  016CBA                     l10594:
 43810                           
 43811                           ;stkvar	_prod @ sp[(-13)+0]
 43812  016CBA  0EF5               	movlw	-11
 43813  016CBC  AEE3               	btfss	plusw1,7,c
 43814  016CBE  D7DC               	goto	l10584
 43815                           
 43816                           ;stkvar	_aexp @ sp[(-13)+11]
 43817  016CC0  0EFE               	movlw	-2
 43818  016CC2  6AE3               	clrf	plusw1,c
 43819                           
 43820                           ;stkvar	_grs @ sp[(-13)+4]
 43821  016CC4  0EFA               	movlw	-6
 43822  016CC6  AEE3               	btfss	plusw1,7,c
 43823  016CC8  D020               	goto	l10608
 43824                           
 43825                           ;stkvar	_grs @ sp[(-13)+4]
 43826  016CCA  50E1               	movf	fsr1l,w,c
 43827  016CCC  0FF7               	addlw	-9
 43828  016CCE  6ED9               	movwf	fsr2l,c
 43829  016CD0  50E2               	movf	fsr1h,w,c
 43830  016CD2  6EDA               	movwf	fsr2h,c
 43831  016CD4  0EFF               	movlw	255
 43832  016CD6  22DA               	addwfc	fsr2h,f,c
 43833  016CD8  0EFF               	movlw	255
 43834  016CDA  14DE               	andwf	postinc2,w,c
 43835  016CDC  6E32               	movwf	(btemp+8)^0,c
 43836  016CDE  0EFF               	movlw	255
 43837  016CE0  14DE               	andwf	postinc2,w,c
 43838  016CE2  6E33               	movwf	(btemp+9)^0,c
 43839  016CE4  0EFF               	movlw	255
 43840  016CE6  14DE               	andwf	postinc2,w,c
 43841  016CE8  6E34               	movwf	(btemp+10)^0,c
 43842  016CEA  0E7F               	movlw	127
 43843  016CEC  14DE               	andwf	postinc2,w,c
 43844  016CEE  6E35               	movwf	(btemp+11)^0,c
 43845  016CF0  5032               	movf	(btemp+8)^0,w,c
 43846  016CF2  1033               	iorwf	(btemp+9)^0,w,c
 43847  016CF4  1034               	iorwf	(btemp+10)^0,w,c
 43848  016CF6  1035               	iorwf	(btemp+11)^0,w,c
 43849  016CF8  B4D8               	btfsc	status,2,c
 43850  016CFA  D004               	goto	l10604
 43851  016CFC                     u8730:
 43852                           
 43853                           ;stkvar	_aexp @ sp[(-13)+11]
 43854  016CFC  0EFE               	movlw	-2
 43855  016CFE  6AE3               	clrf	plusw1,c
 43856  016D00  2AE3               	incf	plusw1,f,c
 43857  016D02  D003               	goto	l10608
 43858  016D04                     l10604:
 43859                           
 43860                           ;stkvar	_prod @ sp[(-13)+0]
 43861  016D04  0EF3               	movlw	-13
 43862  016D06  B0E3               	btfsc	plusw1,0,c
 43863  016D08  D7F9               	goto	u8730
 43864  016D0A                     l10608:
 43865                           
 43866                           ;stkvar	_aexp @ sp[(-13)+11]
 43867  016D0A  0EFE               	movlw	-2
 43868  016D0C  50E3               	movf	plusw1,w,c
 43869  016D0E  B4D8               	btfsc	status,2,c
 43870  016D10  D036               	goto	l10618
 43871                           
 43872                           ;stkvar	_prod @ sp[(-13)+0]
 43873  016D12  50E1               	movf	fsr1l,w,c
 43874  016D14  0FF3               	addlw	-13
 43875  016D16  6ED9               	movwf	fsr2l,c
 43876  016D18  50E2               	movf	fsr1h,w,c
 43877  016D1A  6EDA               	movwf	fsr2h,c
 43878  016D1C  0EFF               	movlw	255
 43879  016D1E  22DA               	addwfc	fsr2h,f,c
 43880  016D20  2ADE               	incf	postinc2,f,c
 43881  016D22  0E00               	movlw	0
 43882  016D24  22DE               	addwfc	postinc2,f,c
 43883  016D26  22DE               	addwfc	postinc2,f,c
 43884  016D28  22DE               	addwfc	postinc2,f,c
 43885                           
 43886                           ;stkvar	_prod @ sp[(-13)+0]
 43887  016D2A  0EF6               	movlw	-10
 43888  016D2C  A0E3               	btfss	plusw1,0,c
 43889  016D2E  D027               	goto	l10618
 43890  016D30  0E01               	movlw	1
 43891  016D32  6E35               	movwf	(btemp+11)^0,c
 43892                           
 43893                           ;stkvar	_prod @ sp[(-13)+0]
 43894  016D34  50E1               	movf	fsr1l,w,c
 43895  016D36  0FF3               	addlw	-13
 43896  016D38  6ED9               	movwf	fsr2l,c
 43897  016D3A  50E2               	movf	fsr1h,w,c
 43898  016D3C  6EDA               	movwf	fsr2h,c
 43899  016D3E  0EFF               	movlw	255
 43900  016D40  22DA               	addwfc	fsr2h,f,c
 43901  016D42  2835               	incf	(btemp+11)^0,w,c
 43902  016D44  52DE               	movf	postinc2,f,c
 43903  016D46  D008               	goto	u8770
 43904  016D48                     u8775:
 43905  016D48  52DE               	movf	postinc2,f,c
 43906  016D4A  90D8               	bcf	status,0,c
 43907  016D4C  BEDC               	btfsc	preinc2,7,c
 43908  016D4E  80D8               	bsf	status,0,c
 43909  016D50  32DD               	rrcf	postdec2,f,c
 43910  016D52  32DD               	rrcf	postdec2,f,c
 43911  016D54  32DD               	rrcf	postdec2,f,c
 43912  016D56  32DE               	rrcf	postinc2,f,c
 43913  016D58                     u8770:
 43914  016D58  2EE8               	decfsz	wreg,f,c
 43915  016D5A  D7F6               	goto	u8775
 43916                           
 43917                           ;stkvar	_temp @ sp[(-13)+8]
 43918  016D5C  0EFB               	movlw	-5
 43919  016D5E  50E3               	movf	plusw1,w,c
 43920  016D60  0F01               	addlw	1
 43921  016D62  6E2A               	movwf	btemp^0,c
 43922  016D64  0EFB               	movlw	-5
 43923  016D66  0060  F0AB  FFE3   	movff	btemp,plusw1
 43924  016D6C  6A2A               	clrf	btemp^0,c
 43925  016D6E  0EFC               	movlw	-4
 43926  016D70  50E3               	movf	plusw1,w,c
 43927  016D72  202A               	addwfc	btemp^0,w,c
 43928  016D74  6E2A               	movwf	btemp^0,c
 43929  016D76  0EFC               	movlw	-4
 43930  016D78  0060  F0AB  FFE3   	movff	btemp,plusw1
 43931  016D7E                     l10618:
 43932                           
 43933                           ;stkvar	_temp @ sp[(-13)+8]
 43934  016D7E  0EFC               	movlw	-4
 43935  016D80  BEE3               	btfsc	plusw1,7,c
 43936  016D82  D020               	goto	l10622
 43937  016D84  0EFC               	movlw	-4
 43938  016D86  50E3               	movf	plusw1,w,c
 43939  016D88  E104               	bnz	u8780
 43940  016D8A  0EFB               	movlw	-5
 43941  016D8C  28E3               	incf	plusw1,w,c
 43942  016D8E  A0D8               	btfss	status,0,c
 43943  016D90  D019               	goto	l10622
 43944  016D92                     u8780:
 43945  016D92  0E00               	movlw	0
 43946  016D94  6E32               	movwf	(btemp+8)^0,c
 43947  016D96  0E00               	movlw	0
 43948  016D98  6E33               	movwf	(btemp+9)^0,c
 43949  016D9A  0E80               	movlw	128
 43950  016D9C  6E34               	movwf	(btemp+10)^0,c
 43951  016D9E  0E7F               	movlw	127
 43952  016DA0  6E35               	movwf	(btemp+11)^0,c
 43953                           
 43954                           ;stkvar	_prod @ sp[(-13)+0]
 43955  016DA2  0EF3               	movlw	-13
 43956  016DA4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43957  016DAA  0EF4               	movlw	-12
 43958  016DAC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43959  016DB2  0EF5               	movlw	-11
 43960  016DB4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43961  016DBA  0EF6               	movlw	-10
 43962  016DBC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43963  016DC2  D044               	goto	l10638
 43964  016DC4                     l10622:
 43965                           
 43966                           ;stkvar	_temp @ sp[(-13)+8]
 43967  016DC4  0EFC               	movlw	-4
 43968  016DC6  BEE3               	btfsc	plusw1,7,c
 43969  016DC8  D007               	goto	u8790
 43970  016DCA  0EFC               	movlw	-4
 43971  016DCC  50E3               	movf	plusw1,w,c
 43972  016DCE  E10F               	bnz	l10628
 43973  016DD0  0EFB               	movlw	-5
 43974  016DD2  04E3               	decf	plusw1,w,c
 43975  016DD4  B0D8               	btfsc	status,0,c
 43976  016DD6  D00B               	goto	l10628
 43977  016DD8                     u8790:
 43978                           
 43979                           ;stkvar	_prod @ sp[(-13)+0]
 43980  016DD8  0EF3               	movlw	-13
 43981  016DDA  6AE3               	clrf	plusw1,c
 43982  016DDC  0EF4               	movlw	-12
 43983  016DDE  6AE3               	clrf	plusw1,c
 43984  016DE0  0EF5               	movlw	-11
 43985  016DE2  6AE3               	clrf	plusw1,c
 43986  016DE4  0EF6               	movlw	-10
 43987  016DE6  6AE3               	clrf	plusw1,c
 43988                           
 43989                           ;stkvar	_sign @ sp[(-13)+12]
 43990  016DE8  0EFF               	movlw	-1
 43991  016DEA  6AE3               	clrf	plusw1,c
 43992  016DEC  D02F               	goto	l10638
 43993  016DEE                     l10628:
 43994                           
 43995                           ;stkvar	_temp @ sp[(-13)+8]
 43996                           ;stkvar	_bexp @ sp[(-13)+10]
 43997  016DEE  0EFB               	movlw	-5
 43998  016DF0  006F FF8C  F02A    	movff	plusw1,btemp
 43999  016DF6  0EFD               	movlw	-3
 44000  016DF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 44001                           
 44002                           ;stkvar	_prod @ sp[(-13)+0]
 44003  016DFE  50E1               	movf	fsr1l,w,c
 44004  016E00  0FF3               	addlw	-13
 44005  016E02  6ED9               	movwf	fsr2l,c
 44006  016E04  50E2               	movf	fsr1h,w,c
 44007  016E06  6EDA               	movwf	fsr2h,c
 44008  016E08  0EFF               	movlw	255
 44009  016E0A  22DA               	addwfc	fsr2h,f,c
 44010  016E0C  0EFF               	movlw	255
 44011  016E0E  16DE               	andwf	postinc2,f,c
 44012  016E10  0EFF               	movlw	255
 44013  016E12  16DE               	andwf	postinc2,f,c
 44014  016E14  0E7F               	movlw	127
 44015  016E16  16DE               	andwf	postinc2,f,c
 44016  016E18  0E00               	movlw	0
 44017  016E1A  16DE               	andwf	postinc2,f,c
 44018                           
 44019                           ;stkvar	_bexp @ sp[(-13)+10]
 44020  016E1C  0EFD               	movlw	-3
 44021  016E1E  A0E3               	btfss	plusw1,0,c
 44022  016E20  D008               	goto	l10636
 44023                           
 44024                           ;stkvar	_prod @ sp[(-13)+0]
 44025  016E22  0EF5               	movlw	245
 44026  016E24  24E1               	addwf	fsr1l,w,c
 44027  016E26  6ED9               	movwf	fsr2l,c
 44028  016E28  0EFF               	movlw	255
 44029  016E2A  20E2               	addwfc	fsr1h,w,c
 44030  016E2C  6EDA               	movwf	fsr2h,c
 44031  016E2E  0E00               	movlw	0
 44032  016E30  8EDB               	bsf	plusw2,7,c
 44033  016E32                     l10636:
 44034                           
 44035                           ;stkvar	_prod @ sp[(-13)+0]
 44036  016E32  0EF6               	movlw	246
 44037  016E34  24E1               	addwf	fsr1l,w,c
 44038  016E36  6ED9               	movwf	fsr2l,c
 44039  016E38  0EFF               	movlw	255
 44040  016E3A  20E2               	addwfc	fsr1h,w,c
 44041  016E3C  6EDA               	movwf	fsr2h,c
 44042                           
 44043                           ;stkvar	_bexp @ sp[(-13)+10]
 44044  016E3E  0EFD               	movlw	-3
 44045  016E40  006F FF8C  F035    	movff	plusw1,btemp+11
 44046  016E46  90D8               	bcf	status,0,c
 44047  016E48  3035               	rrcf	(btemp+11)^0,w,c
 44048  016E4A  6EDF               	movwf	indf2,c
 44049  016E4C                     l10638:
 44050                           
 44051                           ;stkvar	_sign @ sp[(-13)+12]
 44052  016E4C  0EFF               	movlw	-1
 44053  016E4E  006F FF8C  F035    	movff	plusw1,btemp+11
 44054                           
 44055                           ;stkvar	_prod @ sp[(-13)+0]
 44056  016E54  0EF6               	movlw	246
 44057  016E56  24E1               	addwf	fsr1l,w,c
 44058  016E58  6ED9               	movwf	fsr2l,c
 44059  016E5A  0EFF               	movlw	255
 44060  016E5C  20E2               	addwfc	fsr1h,w,c
 44061  016E5E  6EDA               	movwf	fsr2h,c
 44062  016E60  5035               	movf	(btemp+11)^0,w,c
 44063  016E62  12DF               	iorwf	indf2,f,c
 44064                           
 44065                           ;stkvar	_prod @ sp[(-13)+0]
 44066  016E64  0EF3               	movlw	-13
 44067  016E66  006F FF8C  F02A    	movff	plusw1,btemp
 44068  016E6C  0EF4               	movlw	-12
 44069  016E6E  006F FF8C  F02B    	movff	plusw1,btemp+1
 44070  016E74  0EF5               	movlw	-11
 44071  016E76  006F FF8C  F02C    	movff	plusw1,btemp+2
 44072  016E7C  0EF6               	movlw	-10
 44073  016E7E  006F FF8C  F02D    	movff	plusw1,btemp+3
 44074  016E84                     l3350:
 44075                           
 44076                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 44077  016E84  0EEB               	movlw	235
 44078  016E86  26E1               	addwf	fsr1l,f,c
 44079  016E88  0EFF               	movlw	255
 44080  016E8A  22E2               	addwfc	fsr1h,f,c
 44081  016E8C  0012               	return		;funcret
 44082  016E8E                     __end_of___flmul:
 44083                           	opt callstack 0
 44084                           
 44085 ;; *************** function _SYSTEM_Initialize *****************
 44086 ;; Defined at:
 44087 ;;		line 50 in file "mcc_generated_files/mcc.c"
 44088 ;; Parameters:    Size  Location     Type
 44089 ;;		None
 44090 ;; Auto vars:     Size  Location     Type
 44091 ;;		None
 44092 ;; Return value:  Size  Location     Type
 44093 ;;                  1  [STACK] void 
 44094 ;; Registers used:
 44095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 44096 ;; Tracked objects:
 44097 ;;		On entry : 0/0
 44098 ;;		On exit  : 3F/3C
 44099 ;;		Unchanged: 0/0
 44100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44105 ;;Total ram usage:        0 bytes
 44106 ;; Hardware stack levels used:    1
 44107 ;; Hardware stack levels required when called:   17
 44108 ;; This function calls:
 44109 ;;		_ADCC_Initialize
 44110 ;;		_CLKREF_Initialize
 44111 ;;		_CRC_Initialize
 44112 ;;		_DMA1_Initialize
 44113 ;;		_DMA2_Initialize
 44114 ;;		_EXT_INT_Initialize
 44115 ;;		_FVR_Initialize
 44116 ;;		_INTERRUPT_Initialize
 44117 ;;		_OSCILLATOR_Initialize
 44118 ;;		_PIN_MANAGER_Initialize
 44119 ;;		_PMD_Initialize
 44120 ;;		_PWM8_Initialize
 44121 ;;		_SPI1_Initialize
 44122 ;;		_TMR2_Initialize
 44123 ;;		_TMR3_Initialize
 44124 ;;		_TMR5_Initialize
 44125 ;;		_TMR6_Initialize
 44126 ;;		_UART1_Initialize
 44127 ;;		_UART2_Initialize
 44128 ;; This function is called by:
 44129 ;;		_main
 44130 ;; This function uses a reentrant model
 44131 ;;
 44132                           
 44133                           	psect	text155
 44134  001EAC                     __ptext155:
 44135                           	opt callstack 0
 44136  001EAC                     _SYSTEM_Initialize:
 44137                           	opt callstack 13
 44138                           
 44139                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 44140                           
 44141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44142                           ;incstack = 0
 44143  001EAC  ECFA  F00C         	call	_INTERRUPT_Initialize	;wreg free
 44144                           
 44145                           ; BSR set to: 57
 44146                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 44147  001EB0  EC0F  F016         	call	_PMD_Initialize	;wreg free
 44148                           
 44149                           ; BSR set to: 57
 44150                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 44151  001EB4  EC28  F009         	call	_PIN_MANAGER_Initialize	;wreg free
 44152                           
 44153                           ; BSR set to: 58
 44154                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 44155  001EB8  EC04  F016         	call	_OSCILLATOR_Initialize	;wreg free
 44156                           
 44157                           ; BSR set to: 57
 44158                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 44159  001EBC  ECAB  F016         	call	_FVR_Initialize	;wreg free
 44160                           
 44161                           ; BSR set to: 62
 44162                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 44163  001EC0  EC71  F009         	call	_CRC_Initialize	;wreg free
 44164                           
 44165                           ; BSR set to: 0
 44166                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 44167  001EC4  EC28  F00C         	call	_ADCC_Initialize	;wreg free
 44168                           
 44169                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 44170  001EC8  ECD7  F015         	call	_TMR2_Initialize	;wreg free
 44171                           
 44172                           ; BSR set to: 57
 44173                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 44174  001ECC  ECF9  F015         	call	_PWM8_Initialize	;wreg free
 44175                           
 44176                           ; BSR set to: 63
 44177                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 44178  001ED0  EC97  F012         	call	_EXT_INT_Initialize	;wreg free
 44179                           
 44180                           ; BSR set to: 57
 44181                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 44182  001ED4  EC84  F013         	call	_TMR6_Initialize	;wreg free
 44183                           
 44184                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 44185  001ED8  EC10  F010         	call	_TMR3_Initialize	;wreg free
 44186                           
 44187                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 44188  001EDC  ECEC  F00F         	call	_TMR5_Initialize	;wreg free
 44189                           
 44190                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 44191  001EE0  ECC8  F00F         	call	_UART1_Initialize	;wreg free
 44192                           
 44193                           ; BSR set to: 57
 44194                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 44195  001EE4  ECF3  F00D         	call	_UART2_Initialize	;wreg free
 44196                           
 44197                           ; BSR set to: 57
 44198                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 44199  001EE8  ECEE  F015         	call	_SPI1_Initialize	;wreg free
 44200                           
 44201                           ; BSR set to: 61
 44202                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 44203  001EEC  ECAC  F00E         	call	_DMA2_Initialize	;wreg free
 44204                           
 44205                           ; BSR set to: 59
 44206                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 44207  001EF0  ECF3  F00B         	call	_DMA1_Initialize	;wreg free
 44208                           
 44209                           ; BSR set to: 59
 44210                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 44211  001EF4  EC7F  F016         	call	_CLKREF_Initialize	;wreg free
 44212                           
 44213                           ; BSR set to: 60
 44214                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 44215  001EF8  0012               	return		;funcret
 44216  001EFA                     __end_of_SYSTEM_Initialize:
 44217                           	opt callstack 0
 44218                           
 44219 ;; *************** function _UART2_Initialize *****************
 44220 ;; Defined at:
 44221 ;;		line 78 in file "mcc_generated_files/uart2.c"
 44222 ;; Parameters:    Size  Location     Type
 44223 ;;		None
 44224 ;; Auto vars:     Size  Location     Type
 44225 ;;		None
 44226 ;; Return value:  Size  Location     Type
 44227 ;;                  1  [STACK] void 
 44228 ;; Registers used:
 44229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44230 ;; Tracked objects:
 44231 ;;		On entry : 3F/39
 44232 ;;		On exit  : 3F/39
 44233 ;;		Unchanged: 0/0
 44234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44239 ;;Total ram usage:        0 bytes
 44240 ;; Hardware stack levels used:    1
 44241 ;; Hardware stack levels required when called:   16
 44242 ;; This function calls:
 44243 ;;		_UART2_SetRxInterruptHandler
 44244 ;;		_UART2_SetTxInterruptHandler
 44245 ;; This function is called by:
 44246 ;;		_SYSTEM_Initialize
 44247 ;; This function uses a reentrant model
 44248 ;;
 44249                           
 44250                           	psect	text156
 44251  001BE6                     __ptext156:
 44252                           	opt callstack 0
 44253  001BE6                     _UART2_Initialize:
 44254                           	opt callstack 13
 44255                           
 44256                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 44257                           
 44258                           ; BSR set to: 60
 44259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44260                           ;incstack = 0
 44261  001BE6  0139               	movlb	57	; () banked
 44262  001BE8  9596               	bcf	150,2,b	;volatile
 44263                           
 44264                           ; BSR set to: 57
 44265                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 44266  001BEA  0EC8               	movlw	low _UART2_Receive_ISR
 44267  001BEC  6EE6               	movwf	postinc1,c
 44268  001BEE  0E2A               	movlw	high _UART2_Receive_ISR
 44269  001BF0  6EE6               	movwf	postinc1,c
 44270  001BF2  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 44271  001BF4  6EE6               	movwf	postinc1,c
 44272  001BF6  ECD5  F013         	call	_UART2_SetRxInterruptHandler	;wreg free
 44273                           
 44274                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 44275  001BFA  0139               	movlb	57	; () banked
 44276  001BFC  9796               	bcf	150,3,b	;volatile
 44277                           
 44278                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 44279  001BFE  0EDC               	movlw	low _UART2_Transmit_ISR
 44280  001C00  6EE6               	movwf	postinc1,c
 44281  001C02  0E26               	movlw	high _UART2_Transmit_ISR
 44282  001C04  6EE6               	movwf	postinc1,c
 44283  001C06  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 44284  001C08  6EE6               	movwf	postinc1,c
 44285  001C0A  ECC1  F013         	call	_UART2_SetTxInterruptHandler	;wreg free
 44286                           
 44287                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 44288  001C0E  013D               	movlb	61	; () banked
 44289  001C10  6BD4               	clrf	212,b	;volatile
 44290                           
 44291                           ; BSR set to: 61
 44292                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 44293  001C12  6BD6               	clrf	214,b	;volatile
 44294                           
 44295                           ; BSR set to: 61
 44296                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 44297  001C14  6BD8               	clrf	216,b	;volatile
 44298                           
 44299                           ; BSR set to: 61
 44300                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 44301  001C16  0EB0               	movlw	176
 44302  001C18  6FDA               	movwf	218,b	;volatile
 44303                           
 44304                           ; BSR set to: 61
 44305                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 44306  001C1A  0E80               	movlw	128
 44307  001C1C  6FDB               	movwf	219,b	;volatile
 44308                           
 44309                           ; BSR set to: 61
 44310                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 44311  001C1E  6BDC               	clrf	220,b	;volatile
 44312                           
 44313                           ; BSR set to: 61
 44314                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 44315  001C20  0E82               	movlw	130
 44316  001C22  6FDD               	movwf	221,b	;volatile
 44317                           
 44318                           ; BSR set to: 61
 44319                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 44320  001C24  0E06               	movlw	6
 44321  001C26  6FDE               	movwf	222,b	;volatile
 44322                           
 44323                           ; BSR set to: 61
 44324                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 44325  001C28  6BDF               	clrf	223,b	;volatile
 44326                           
 44327                           ; BSR set to: 61
 44328                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 44329  001C2A  6BE0               	clrf	224,b	;volatile
 44330                           
 44331                           ; BSR set to: 61
 44332                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 44333  001C2C  6BE1               	clrf	225,b	;volatile
 44334                           
 44335                           ; BSR set to: 61
 44336                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 44337  001C2E  6BE2               	clrf	226,b	;volatile
 44338                           
 44339                           ; BSR set to: 61
 44340                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 44341  001C30  0100               	movlb	0	; () banked
 44342  001C32  6BD1               	clrf	_uart2TxHead& (0+255),b	;volatile
 44343                           
 44344                           ; BSR set to: 0
 44345                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 44346  001C34  6A56               	clrf	_uart2TxTail^0,c	;volatile
 44347                           
 44348                           ; BSR set to: 0
 44349                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 44350  001C36  0E40               	movlw	64
 44351  001C38  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 44352                           
 44353                           ; BSR set to: 0
 44354                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 44355  001C3A  6A54               	clrf	_uart2RxHead^0,c	;volatile
 44356                           
 44357                           ; BSR set to: 0
 44358                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 44359  001C3C  6BD0               	clrf	_uart2RxTail& (0+255),b	;volatile
 44360                           
 44361                           ; BSR set to: 0
 44362                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 44363  001C3E  6BCF               	clrf	_uart2RxCount& (0+255),b	;volatile
 44364                           
 44365                           ; BSR set to: 0
 44366                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 44367  001C40  0139               	movlb	57	; () banked
 44368  001C42  8596               	bsf	150,2,b	;volatile
 44369                           
 44370                           ; BSR set to: 57
 44371                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44372  001C44  0012               	return		;funcret
 44373  001C46                     __end_of_UART2_Initialize:
 44374                           	opt callstack 0
 44375                           
 44376 ;; *************** function _UART2_SetTxInterruptHandler *****************
 44377 ;; Defined at:
 44378 ;;		line 252 in file "mcc_generated_files/uart2.c"
 44379 ;; Parameters:    Size  Location     Type
 44380 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44381 ;;		 -> UART2_Transmit_ISR(1), 
 44382 ;; Auto vars:     Size  Location     Type
 44383 ;;		None
 44384 ;; Return value:  Size  Location     Type
 44385 ;;                  1  [STACK] void 
 44386 ;; Registers used:
 44387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44388 ;; Tracked objects:
 44389 ;;		On entry : 3F/39
 44390 ;;		On exit  : 0/0
 44391 ;;		Unchanged: 0/0
 44392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44397 ;;Total ram usage:        0 bytes
 44398 ;; Hardware stack levels used:    1
 44399 ;; Hardware stack levels required when called:   15
 44400 ;; This function calls:
 44401 ;;		Nothing
 44402 ;; This function is called by:
 44403 ;;		_UART2_Initialize
 44404 ;; This function uses a reentrant model
 44405 ;;
 44406                           
 44407                           	psect	text157
 44408  002782                     __ptext157:
 44409                           	opt callstack 0
 44410  002782                     _UART2_SetTxInterruptHandler:
 44411                           	opt callstack 13
 44412                           
 44413                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 44414                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44415                           
 44416                           ; BSR set to: 57
 44417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44418                           ;incstack = 0
 44419  002782  50E1               	movf	fsr1l,w,c
 44420  002784  0FFD               	addlw	-3
 44421  002786  6ED9               	movwf	fsr2l,c
 44422  002788  50E2               	movf	fsr1h,w,c
 44423  00278A  6EDA               	movwf	fsr2h,c
 44424  00278C  0EFF               	movlw	255
 44425  00278E  22DA               	addwfc	fsr2h,f,c
 44426  002790  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 44427  002796  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 44428  00279C  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 44429                           
 44430                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44431  0027A2  52E5               	movf	postdec1,f,c
 44432  0027A4  52E5               	movf	postdec1,f,c
 44433  0027A6  52E5               	movf	postdec1,f,c
 44434  0027A8  0012               	return		;funcret
 44435  0027AA                     __end_of_UART2_SetTxInterruptHandler:
 44436                           	opt callstack 0
 44437                           
 44438 ;; *************** function _UART2_SetRxInterruptHandler *****************
 44439 ;; Defined at:
 44440 ;;		line 248 in file "mcc_generated_files/uart2.c"
 44441 ;; Parameters:    Size  Location     Type
 44442 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44443 ;;		 -> UART2_Receive_ISR(1), 
 44444 ;; Auto vars:     Size  Location     Type
 44445 ;;		None
 44446 ;; Return value:  Size  Location     Type
 44447 ;;                  1  [STACK] void 
 44448 ;; Registers used:
 44449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44450 ;; Tracked objects:
 44451 ;;		On entry : 3F/39
 44452 ;;		On exit  : 0/0
 44453 ;;		Unchanged: 0/0
 44454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44459 ;;Total ram usage:        0 bytes
 44460 ;; Hardware stack levels used:    1
 44461 ;; Hardware stack levels required when called:   15
 44462 ;; This function calls:
 44463 ;;		Nothing
 44464 ;; This function is called by:
 44465 ;;		_UART2_Initialize
 44466 ;; This function uses a reentrant model
 44467 ;;
 44468                           
 44469                           	psect	text158
 44470  0027AA                     __ptext158:
 44471                           	opt callstack 0
 44472  0027AA                     _UART2_SetRxInterruptHandler:
 44473                           	opt callstack 13
 44474                           
 44475                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 44476                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44477                           
 44478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44479                           ;incstack = 0
 44480  0027AA  50E1               	movf	fsr1l,w,c
 44481  0027AC  0FFD               	addlw	-3
 44482  0027AE  6ED9               	movwf	fsr2l,c
 44483  0027B0  50E2               	movf	fsr1h,w,c
 44484  0027B2  6EDA               	movwf	fsr2h,c
 44485  0027B4  0EFF               	movlw	255
 44486  0027B6  22DA               	addwfc	fsr2h,f,c
 44487  0027B8  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 44488  0027BE  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 44489  0027C4  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 44490                           
 44491                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44492  0027CA  52E5               	movf	postdec1,f,c
 44493  0027CC  52E5               	movf	postdec1,f,c
 44494  0027CE  52E5               	movf	postdec1,f,c
 44495  0027D0  0012               	return		;funcret
 44496  0027D2                     __end_of_UART2_SetRxInterruptHandler:
 44497                           	opt callstack 0
 44498                           
 44499 ;; *************** function _UART1_Initialize *****************
 44500 ;; Defined at:
 44501 ;;		line 75 in file "mcc_generated_files/uart1.c"
 44502 ;; Parameters:    Size  Location     Type
 44503 ;;		None
 44504 ;; Auto vars:     Size  Location     Type
 44505 ;;		None
 44506 ;; Return value:  Size  Location     Type
 44507 ;;                  1  [STACK] void 
 44508 ;; Registers used:
 44509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44510 ;; Tracked objects:
 44511 ;;		On entry : 0/39
 44512 ;;		On exit  : 3F/39
 44513 ;;		Unchanged: 0/0
 44514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44519 ;;Total ram usage:        0 bytes
 44520 ;; Hardware stack levels used:    1
 44521 ;; Hardware stack levels required when called:   16
 44522 ;; This function calls:
 44523 ;;		_UART1_SetRxInterruptHandler
 44524 ;; This function is called by:
 44525 ;;		_SYSTEM_Initialize
 44526 ;; This function uses a reentrant model
 44527 ;;
 44528                           
 44529                           	psect	text159
 44530  001F90                     __ptext159:
 44531                           	opt callstack 0
 44532  001F90                     _UART1_Initialize:
 44533                           	opt callstack 13
 44534                           
 44535                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 44536                           
 44537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44538                           ;incstack = 0
 44539  001F90  0139               	movlb	57	; () banked
 44540  001F92  9793               	bcf	147,3,b	;volatile
 44541                           
 44542                           ; BSR set to: 57
 44543                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 44544  001F94  0E86               	movlw	low _UART1_Receive_ISR
 44545  001F96  6EE6               	movwf	postinc1,c
 44546  001F98  0E2A               	movlw	high _UART1_Receive_ISR
 44547  001F9A  6EE6               	movwf	postinc1,c
 44548  001F9C  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 44549  001F9E  6EE6               	movwf	postinc1,c
 44550  001FA0  ECE9  F013         	call	_UART1_SetRxInterruptHandler	;wreg free
 44551                           
 44552                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 44553  001FA4  013D               	movlb	61	; () banked
 44554  001FA6  6BEC               	clrf	236,b	;volatile
 44555                           
 44556                           ; BSR set to: 61
 44557                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 44558  001FA8  6BED               	clrf	237,b	;volatile
 44559                           
 44560                           ; BSR set to: 61
 44561                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 44562  001FAA  6BEE               	clrf	238,b	;volatile
 44563                           
 44564                           ; BSR set to: 61
 44565                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 44566  001FAC  6BEF               	clrf	239,b	;volatile
 44567                           
 44568                           ; BSR set to: 61
 44569                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 44570  001FAE  6BF0               	clrf	240,b	;volatile
 44571                           
 44572                           ; BSR set to: 61
 44573                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 44574  001FB0  6BF1               	clrf	241,b	;volatile
 44575                           
 44576                           ; BSR set to: 61
 44577                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 44578  001FB2  0EB0               	movlw	176
 44579  001FB4  6FF2               	movwf	242,b	;volatile
 44580                           
 44581                           ; BSR set to: 61
 44582                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 44583  001FB6  0E80               	movlw	128
 44584  001FB8  6FF3               	movwf	243,b	;volatile
 44585                           
 44586                           ; BSR set to: 61
 44587                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 44588  001FBA  6BF4               	clrf	244,b	;volatile
 44589                           
 44590                           ; BSR set to: 61
 44591                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 44592  001FBC  0E8A               	movlw	138
 44593  001FBE  6FF5               	movwf	245,b	;volatile
 44594                           
 44595                           ; BSR set to: 61
 44596                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 44597  001FC0  6BF6               	clrf	246,b	;volatile
 44598                           
 44599                           ; BSR set to: 61
 44600                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 44601  001FC2  6BF7               	clrf	247,b	;volatile
 44602                           
 44603                           ; BSR set to: 61
 44604                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 44605  001FC4  6BF8               	clrf	248,b	;volatile
 44606                           
 44607                           ; BSR set to: 61
 44608                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 44609  001FC6  6BF9               	clrf	249,b	;volatile
 44610                           
 44611                           ; BSR set to: 61
 44612                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 44613  001FC8  6BFA               	clrf	250,b	;volatile
 44614                           
 44615                           ; BSR set to: 61
 44616                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 44617  001FCA  6A57               	clrf	_uart1RxHead^0,c	;volatile
 44618                           
 44619                           ; BSR set to: 61
 44620                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 44621  001FCC  0100               	movlb	0	; () banked
 44622  001FCE  6BD3               	clrf	_uart1RxTail& (0+255),b	;volatile
 44623                           
 44624                           ; BSR set to: 0
 44625                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 44626  001FD0  6BD2               	clrf	_uart1RxCount& (0+255),b	;volatile
 44627                           
 44628                           ; BSR set to: 0
 44629                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 44630  001FD2  0139               	movlb	57	; () banked
 44631  001FD4  8793               	bsf	147,3,b	;volatile
 44632                           
 44633                           ; BSR set to: 57
 44634                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44635  001FD6  0012               	return		;funcret
 44636  001FD8                     __end_of_UART1_Initialize:
 44637                           	opt callstack 0
 44638                           
 44639 ;; *************** function _UART1_SetRxInterruptHandler *****************
 44640 ;; Defined at:
 44641 ;;		line 207 in file "mcc_generated_files/uart1.c"
 44642 ;; Parameters:    Size  Location     Type
 44643 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44644 ;;		 -> UART1_Receive_ISR(1), 
 44645 ;; Auto vars:     Size  Location     Type
 44646 ;;		None
 44647 ;; Return value:  Size  Location     Type
 44648 ;;                  1  [STACK] void 
 44649 ;; Registers used:
 44650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44651 ;; Tracked objects:
 44652 ;;		On entry : 3F/39
 44653 ;;		On exit  : 0/0
 44654 ;;		Unchanged: 0/0
 44655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44660 ;;Total ram usage:        0 bytes
 44661 ;; Hardware stack levels used:    1
 44662 ;; Hardware stack levels required when called:   15
 44663 ;; This function calls:
 44664 ;;		Nothing
 44665 ;; This function is called by:
 44666 ;;		_UART1_Initialize
 44667 ;; This function uses a reentrant model
 44668 ;;
 44669                           
 44670                           	psect	text160
 44671  0027D2                     __ptext160:
 44672                           	opt callstack 0
 44673  0027D2                     _UART1_SetRxInterruptHandler:
 44674                           	opt callstack 13
 44675                           
 44676                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 44677                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44678                           
 44679                           ; BSR set to: 57
 44680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44681                           ;incstack = 0
 44682  0027D2  50E1               	movf	fsr1l,w,c
 44683  0027D4  0FFD               	addlw	-3
 44684  0027D6  6ED9               	movwf	fsr2l,c
 44685  0027D8  50E2               	movf	fsr1h,w,c
 44686  0027DA  6EDA               	movwf	fsr2h,c
 44687  0027DC  0EFF               	movlw	255
 44688  0027DE  22DA               	addwfc	fsr2h,f,c
 44689  0027E0  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 44690  0027E6  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 44691  0027EC  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 44692                           
 44693                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44694  0027F2  52E5               	movf	postdec1,f,c
 44695  0027F4  52E5               	movf	postdec1,f,c
 44696  0027F6  52E5               	movf	postdec1,f,c
 44697  0027F8  0012               	return		;funcret
 44698  0027FA                     __end_of_UART1_SetRxInterruptHandler:
 44699                           	opt callstack 0
 44700                           
 44701 ;; *************** function _TMR6_Initialize *****************
 44702 ;; Defined at:
 44703 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 44704 ;; Parameters:    Size  Location     Type
 44705 ;;		None
 44706 ;; Auto vars:     Size  Location     Type
 44707 ;;		None
 44708 ;; Return value:  Size  Location     Type
 44709 ;;                  1  [STACK] void 
 44710 ;; Registers used:
 44711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44712 ;; Tracked objects:
 44713 ;;		On entry : 3F/39
 44714 ;;		On exit  : 0/0
 44715 ;;		Unchanged: 0/0
 44716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44721 ;;Total ram usage:        0 bytes
 44722 ;; Hardware stack levels used:    1
 44723 ;; Hardware stack levels required when called:   16
 44724 ;; This function calls:
 44725 ;;		_TMR6_SetInterruptHandler
 44726 ;; This function is called by:
 44727 ;;		_SYSTEM_Initialize
 44728 ;; This function uses a reentrant model
 44729 ;;
 44730                           
 44731                           	psect	text161
 44732  002708                     __ptext161:
 44733                           	opt callstack 0
 44734  002708                     _TMR6_Initialize:
 44735                           	opt callstack 13
 44736                           
 44737                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 44738                           
 44739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44740                           ;incstack = 0
 44741  002708  0E01               	movlw	1
 44742  00270A  6E96               	movwf	150,c	;volatile
 44743                           
 44744                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 44745  00270C  6A95               	clrf	149,c	;volatile
 44746                           
 44747                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 44748  00270E  6A97               	clrf	151,c	;volatile
 44749                           
 44750                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 44751  002710  0E7C               	movlw	124
 44752  002712  6E93               	movwf	147,c	;volatile
 44753                           
 44754                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 44755  002714  6A92               	clrf	146,c	;volatile
 44756                           
 44757                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 44758  002716  0139               	movlb	57	; () banked
 44759  002718  91A9               	bcf	169,0,b	;volatile
 44760                           
 44761                           ; BSR set to: 57
 44762                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 44763  00271A  8199               	bsf	153,0,b	;volatile
 44764                           
 44765                           ; BSR set to: 57
 44766                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 44767  00271C  0EFA               	movlw	low _TMR6_DefaultInterruptHandler
 44768  00271E  6EE6               	movwf	postinc1,c
 44769  002720  0E1E               	movlw	high _TMR6_DefaultInterruptHandler
 44770  002722  6EE6               	movwf	postinc1,c
 44771  002724  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 44772  002726  6EE6               	movwf	postinc1,c
 44773  002728  ECFD  F013         	call	_TMR6_SetInterruptHandler	;wreg free
 44774                           
 44775                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 44776  00272C  0EE0               	movlw	224
 44777  00272E  6E94               	movwf	148,c	;volatile
 44778                           
 44779                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44780  002730  0012               	return		;funcret
 44781  002732                     __end_of_TMR6_Initialize:
 44782                           	opt callstack 0
 44783                           
 44784 ;; *************** function _TMR6_SetInterruptHandler *****************
 44785 ;; Defined at:
 44786 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 44787 ;; Parameters:    Size  Location     Type
 44788 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44789 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 44790 ;; Auto vars:     Size  Location     Type
 44791 ;;		None
 44792 ;; Return value:  Size  Location     Type
 44793 ;;                  1  [STACK] void 
 44794 ;; Registers used:
 44795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44796 ;; Tracked objects:
 44797 ;;		On entry : 3F/39
 44798 ;;		On exit  : 0/0
 44799 ;;		Unchanged: 0/0
 44800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44805 ;;Total ram usage:        0 bytes
 44806 ;; Hardware stack levels used:    1
 44807 ;; Hardware stack levels required when called:   15
 44808 ;; This function calls:
 44809 ;;		Nothing
 44810 ;; This function is called by:
 44811 ;;		_TMR6_Initialize
 44812 ;; This function uses a reentrant model
 44813 ;;
 44814                           
 44815                           	psect	text162
 44816  0027FA                     __ptext162:
 44817                           	opt callstack 0
 44818  0027FA                     _TMR6_SetInterruptHandler:
 44819                           	opt callstack 13
 44820                           
 44821                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 44822                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44823                           
 44824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44825                           ;incstack = 0
 44826  0027FA  50E1               	movf	fsr1l,w,c
 44827  0027FC  0FFD               	addlw	-3
 44828  0027FE  6ED9               	movwf	fsr2l,c
 44829  002800  50E2               	movf	fsr1h,w,c
 44830  002802  6EDA               	movwf	fsr2h,c
 44831  002804  0EFF               	movlw	255
 44832  002806  22DA               	addwfc	fsr2h,f,c
 44833  002808  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 44834  00280E  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 44835  002814  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 44836                           
 44837                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44838  00281A  52E5               	movf	postdec1,f,c
 44839  00281C  52E5               	movf	postdec1,f,c
 44840  00281E  52E5               	movf	postdec1,f,c
 44841  002820  0012               	return		;funcret
 44842  002822                     __end_of_TMR6_SetInterruptHandler:
 44843                           	opt callstack 0
 44844                           
 44845 ;; *************** function _TMR5_Initialize *****************
 44846 ;; Defined at:
 44847 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 44848 ;; Parameters:    Size  Location     Type
 44849 ;;		None
 44850 ;; Auto vars:     Size  Location     Type
 44851 ;;		None
 44852 ;; Return value:  Size  Location     Type
 44853 ;;                  1  [STACK] void 
 44854 ;; Registers used:
 44855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44856 ;; Tracked objects:
 44857 ;;		On entry : 0/39
 44858 ;;		On exit  : 0/0
 44859 ;;		Unchanged: 0/0
 44860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44865 ;;Total ram usage:        0 bytes
 44866 ;; Hardware stack levels used:    1
 44867 ;; Hardware stack levels required when called:   16
 44868 ;; This function calls:
 44869 ;;		_TMR5_SetInterruptHandler
 44870 ;; This function is called by:
 44871 ;;		_SYSTEM_Initialize
 44872 ;; This function uses a reentrant model
 44873 ;;
 44874                           
 44875                           	psect	text163
 44876  001FD8                     __ptext163:
 44877                           	opt callstack 0
 44878  001FD8                     _TMR5_Initialize:
 44879                           	opt callstack 13
 44880                           
 44881                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 44882                           
 44883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44884                           ;incstack = 0
 44885  001FD8  6A9B               	clrf	155,c	;volatile
 44886                           
 44887                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 44888  001FDA  6A9C               	clrf	156,c	;volatile
 44889                           
 44890                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 44891  001FDC  0E01               	movlw	1
 44892  001FDE  6E9D               	movwf	157,c	;volatile
 44893                           
 44894                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 44895  001FE0  0E63               	movlw	99
 44896  001FE2  6E99               	movwf	153,c	;volatile
 44897                           
 44898                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 44899  001FE4  0EC0               	movlw	192
 44900  001FE6  6E98               	movwf	152,c	;volatile
 44901                           
 44902                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 44903  001FE8  5098               	movf	152,w,c	;volatile
 44904  001FEA  006F FE64  F02A    	movff	16281,btemp	;volatile
 44905  001FF0  6A2B               	clrf	(btemp+1)^0,c
 44906  001FF2  0060  F0A8  F02B   	movff	btemp,btemp+1
 44907  001FF8  6A2A               	clrf	btemp^0,c
 44908  001FFA  102A               	iorwf	btemp^0,w,c
 44909  001FFC  0100               	movlb	0	; () banked
 44910  001FFE  6FC6               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 44911  002000  502B               	movf	(btemp+1)^0,w,c
 44912  002002  6FC7               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 44913                           
 44914                           ; BSR set to: 0
 44915                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 44916  002004  0139               	movlb	57	; () banked
 44917  002006  9DA8               	bcf	168,6,b	;volatile
 44918                           
 44919                           ; BSR set to: 57
 44920                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 44921  002008  8D98               	bsf	152,6,b	;volatile
 44922                           
 44923                           ; BSR set to: 57
 44924                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 44925  00200A  0E24               	movlw	low _TMR5_DefaultInterruptHandler
 44926  00200C  6EE6               	movwf	postinc1,c
 44927  00200E  0E24               	movlw	high _TMR5_DefaultInterruptHandler
 44928  002010  6EE6               	movwf	postinc1,c
 44929  002012  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 44930  002014  6EE6               	movwf	postinc1,c
 44931  002016  EC11  F014         	call	_TMR5_SetInterruptHandler	;wreg free
 44932                           
 44933                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 44934  00201A  0E31               	movlw	49
 44935  00201C  6E9A               	movwf	154,c	;volatile
 44936                           
 44937                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44938  00201E  0012               	return		;funcret
 44939  002020                     __end_of_TMR5_Initialize:
 44940                           	opt callstack 0
 44941                           
 44942 ;; *************** function _TMR5_SetInterruptHandler *****************
 44943 ;; Defined at:
 44944 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 44945 ;; Parameters:    Size  Location     Type
 44946 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44947 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 44948 ;; Auto vars:     Size  Location     Type
 44949 ;;		None
 44950 ;; Return value:  Size  Location     Type
 44951 ;;                  1  [STACK] void 
 44952 ;; Registers used:
 44953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44954 ;; Tracked objects:
 44955 ;;		On entry : 3F/39
 44956 ;;		On exit  : 0/0
 44957 ;;		Unchanged: 0/0
 44958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44963 ;;Total ram usage:        0 bytes
 44964 ;; Hardware stack levels used:    1
 44965 ;; Hardware stack levels required when called:   15
 44966 ;; This function calls:
 44967 ;;		Nothing
 44968 ;; This function is called by:
 44969 ;;		_TMR5_Initialize
 44970 ;; This function uses a reentrant model
 44971 ;;
 44972                           
 44973                           	psect	text164
 44974  002822                     __ptext164:
 44975                           	opt callstack 0
 44976  002822                     _TMR5_SetInterruptHandler:
 44977                           	opt callstack 13
 44978                           
 44979                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 44980                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44981                           
 44982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44983                           ;incstack = 0
 44984  002822  50E1               	movf	fsr1l,w,c
 44985  002824  0FFD               	addlw	-3
 44986  002826  6ED9               	movwf	fsr2l,c
 44987  002828  50E2               	movf	fsr1h,w,c
 44988  00282A  6EDA               	movwf	fsr2h,c
 44989  00282C  0EFF               	movlw	255
 44990  00282E  22DA               	addwfc	fsr2h,f,c
 44991  002830  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 44992  002836  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 44993  00283C  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 44994                           
 44995                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44996  002842  52E5               	movf	postdec1,f,c
 44997  002844  52E5               	movf	postdec1,f,c
 44998  002846  52E5               	movf	postdec1,f,c
 44999  002848  0012               	return		;funcret
 45000  00284A                     __end_of_TMR5_SetInterruptHandler:
 45001                           	opt callstack 0
 45002                           
 45003 ;; *************** function _TMR3_Initialize *****************
 45004 ;; Defined at:
 45005 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 45006 ;; Parameters:    Size  Location     Type
 45007 ;;		None
 45008 ;; Auto vars:     Size  Location     Type
 45009 ;;		None
 45010 ;; Return value:  Size  Location     Type
 45011 ;;                  1  [STACK] void 
 45012 ;; Registers used:
 45013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 45014 ;; Tracked objects:
 45015 ;;		On entry : 0/39
 45016 ;;		On exit  : 0/0
 45017 ;;		Unchanged: 0/0
 45018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45023 ;;Total ram usage:        0 bytes
 45024 ;; Hardware stack levels used:    1
 45025 ;; Hardware stack levels required when called:   16
 45026 ;; This function calls:
 45027 ;;		_TMR3_SetInterruptHandler
 45028 ;; This function is called by:
 45029 ;;		_SYSTEM_Initialize
 45030 ;; This function uses a reentrant model
 45031 ;;
 45032                           
 45033                           	psect	text165
 45034  002020                     __ptext165:
 45035                           	opt callstack 0
 45036  002020                     _TMR3_Initialize:
 45037                           	opt callstack 13
 45038                           
 45039                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 45040                           
 45041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45042                           ;incstack = 0
 45043  002020  6AA7               	clrf	167,c	;volatile
 45044                           
 45045                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 45046  002022  6AA8               	clrf	168,c	;volatile
 45047                           
 45048                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 45049  002024  0E01               	movlw	1
 45050  002026  6EA9               	movwf	169,c	;volatile
 45051                           
 45052                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 45053  002028  0E3C               	movlw	60
 45054  00202A  6EA5               	movwf	165,c	;volatile
 45055                           
 45056                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 45057  00202C  0EB0               	movlw	176
 45058  00202E  6EA4               	movwf	164,c	;volatile
 45059                           
 45060                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 45061  002030  50A4               	movf	164,w,c	;volatile
 45062  002032  006F FE94  F02A    	movff	16293,btemp	;volatile
 45063  002038  6A2B               	clrf	(btemp+1)^0,c
 45064  00203A  0060  F0A8  F02B   	movff	btemp,btemp+1
 45065  002040  6A2A               	clrf	btemp^0,c
 45066  002042  102A               	iorwf	btemp^0,w,c
 45067  002044  0100               	movlb	0	; () banked
 45068  002046  6FC2               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 45069  002048  502B               	movf	(btemp+1)^0,w,c
 45070  00204A  6FC3               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 45071                           
 45072                           ; BSR set to: 0
 45073                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 45074  00204C  0139               	movlb	57	; () banked
 45075  00204E  9DA6               	bcf	166,6,b	;volatile
 45076                           
 45077                           ; BSR set to: 57
 45078                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 45079  002050  8D96               	bsf	150,6,b	;volatile
 45080                           
 45081                           ; BSR set to: 57
 45082                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 45083  002052  0E8C               	movlw	low _TMR3_DefaultInterruptHandler
 45084  002054  6EE6               	movwf	postinc1,c
 45085  002056  0E2D               	movlw	high _TMR3_DefaultInterruptHandler
 45086  002058  6EE6               	movwf	postinc1,c
 45087  00205A  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 45088  00205C  6EE6               	movwf	postinc1,c
 45089  00205E  EC25  F014         	call	_TMR3_SetInterruptHandler	;wreg free
 45090                           
 45091                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 45092  002062  0E31               	movlw	49
 45093  002064  6EA6               	movwf	166,c	;volatile
 45094                           
 45095                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45096  002066  0012               	return		;funcret
 45097  002068                     __end_of_TMR3_Initialize:
 45098                           	opt callstack 0
 45099                           
 45100 ;; *************** function _TMR3_SetInterruptHandler *****************
 45101 ;; Defined at:
 45102 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 45103 ;; Parameters:    Size  Location     Type
 45104 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45105 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 45106 ;; Auto vars:     Size  Location     Type
 45107 ;;		None
 45108 ;; Return value:  Size  Location     Type
 45109 ;;                  1  [STACK] void 
 45110 ;; Registers used:
 45111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45112 ;; Tracked objects:
 45113 ;;		On entry : 0/1
 45114 ;;		On exit  : 0/0
 45115 ;;		Unchanged: 0/0
 45116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45121 ;;Total ram usage:        0 bytes
 45122 ;; Hardware stack levels used:    1
 45123 ;; Hardware stack levels required when called:   15
 45124 ;; This function calls:
 45125 ;;		Nothing
 45126 ;; This function is called by:
 45127 ;;		_TMR3_Initialize
 45128 ;;		_init_bsoc
 45129 ;; This function uses a reentrant model
 45130 ;;
 45131                           
 45132                           	psect	text166
 45133  00284A                     __ptext166:
 45134                           	opt callstack 0
 45135  00284A                     _TMR3_SetInterruptHandler:
 45136                           	opt callstack 14
 45137                           
 45138                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 45139                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45140                           
 45141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45142                           ;incstack = 0
 45143  00284A  50E1               	movf	fsr1l,w,c
 45144  00284C  0FFD               	addlw	-3
 45145  00284E  6ED9               	movwf	fsr2l,c
 45146  002850  50E2               	movf	fsr1h,w,c
 45147  002852  6EDA               	movwf	fsr2h,c
 45148  002854  0EFF               	movlw	255
 45149  002856  22DA               	addwfc	fsr2h,f,c
 45150  002858  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 45151  00285E  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 45152  002864  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 45153                           
 45154                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45155  00286A  52E5               	movf	postdec1,f,c
 45156  00286C  52E5               	movf	postdec1,f,c
 45157  00286E  52E5               	movf	postdec1,f,c
 45158  002870  0012               	return		;funcret
 45159  002872                     __end_of_TMR3_SetInterruptHandler:
 45160                           	opt callstack 0
 45161                           
 45162 ;; *************** function _TMR2_Initialize *****************
 45163 ;; Defined at:
 45164 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 45165 ;; Parameters:    Size  Location     Type
 45166 ;;		None
 45167 ;; Auto vars:     Size  Location     Type
 45168 ;;		None
 45169 ;; Return value:  Size  Location     Type
 45170 ;;                  1  [STACK] void 
 45171 ;; Registers used:
 45172 ;;		wreg, status,2
 45173 ;; Tracked objects:
 45174 ;;		On entry : 0/0
 45175 ;;		On exit  : 3F/39
 45176 ;;		Unchanged: 0/0
 45177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45182 ;;Total ram usage:        0 bytes
 45183 ;; Hardware stack levels used:    1
 45184 ;; Hardware stack levels required when called:   15
 45185 ;; This function calls:
 45186 ;;		Nothing
 45187 ;; This function is called by:
 45188 ;;		_SYSTEM_Initialize
 45189 ;; This function uses a reentrant model
 45190 ;;
 45191                           
 45192                           	psect	text167
 45193  002BAE                     __ptext167:
 45194                           	opt callstack 0
 45195  002BAE                     _TMR2_Initialize:
 45196                           	opt callstack 14
 45197                           
 45198                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 45199                           
 45200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45201                           ;incstack = 0
 45202  002BAE  0E01               	movlw	1
 45203  002BB0  6EAE               	movwf	174,c	;volatile
 45204                           
 45205                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 45206  002BB2  6AAD               	clrf	173,c	;volatile
 45207                           
 45208                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 45209  002BB4  6AAF               	clrf	175,c	;volatile
 45210                           
 45211                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 45212  002BB6  0E63               	movlw	99
 45213  002BB8  6EAB               	movwf	171,c	;volatile
 45214                           
 45215                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 45216  002BBA  6AAA               	clrf	170,c	;volatile
 45217                           
 45218                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 45219  002BBC  0139               	movlb	57	; () banked
 45220  002BBE  95A4               	bcf	164,2,b	;volatile
 45221                           
 45222                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 45223  002BC0  0EC0               	movlw	192
 45224  002BC2  6EAC               	movwf	172,c	;volatile
 45225                           
 45226                           ; BSR set to: 57
 45227                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45228  002BC4  0012               	return		;funcret
 45229  002BC6                     __end_of_TMR2_Initialize:
 45230                           	opt callstack 0
 45231                           
 45232 ;; *************** function _SPI1_Initialize *****************
 45233 ;; Defined at:
 45234 ;;		line 64 in file "mcc_generated_files/spi1.c"
 45235 ;; Parameters:    Size  Location     Type
 45236 ;;		None
 45237 ;; Auto vars:     Size  Location     Type
 45238 ;;		None
 45239 ;; Return value:  Size  Location     Type
 45240 ;;                  1  [STACK] void 
 45241 ;; Registers used:
 45242 ;;		wreg, status,2
 45243 ;; Tracked objects:
 45244 ;;		On entry : 3F/39
 45245 ;;		On exit  : 3F/3D
 45246 ;;		Unchanged: 0/0
 45247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45252 ;;Total ram usage:        0 bytes
 45253 ;; Hardware stack levels used:    1
 45254 ;; Hardware stack levels required when called:   15
 45255 ;; This function calls:
 45256 ;;		Nothing
 45257 ;; This function is called by:
 45258 ;;		_SYSTEM_Initialize
 45259 ;; This function uses a reentrant model
 45260 ;;
 45261                           
 45262                           	psect	text168
 45263  002BDC                     __ptext168:
 45264                           	opt callstack 0
 45265  002BDC                     _SPI1_Initialize:
 45266                           	opt callstack 14
 45267                           
 45268                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 45269                           
 45270                           ; BSR set to: 57
 45271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45272                           ;incstack = 0
 45273  002BDC  0E40               	movlw	64
 45274  002BDE  013D               	movlb	61	; () banked
 45275  002BE0  6F15               	movwf	21,b	;volatile
 45276                           
 45277                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 45278  002BE2  0E03               	movlw	3
 45279  002BE4  6F16               	movwf	22,b	;volatile
 45280                           
 45281                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 45282  002BE6  0E4F               	movlw	79
 45283  002BE8  6F19               	movwf	25,b	;volatile
 45284                           
 45285                           ; BSR set to: 61
 45286                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 45287  002BEA  6B1C               	clrf	28,b	;volatile
 45288                           
 45289                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 45290  002BEC  0E83               	movlw	131
 45291  002BEE  6F14               	movwf	20,b	;volatile
 45292                           
 45293                           ; BSR set to: 61
 45294                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45295  002BF0  0012               	return		;funcret
 45296  002BF2                     __end_of_SPI1_Initialize:
 45297                           	opt callstack 0
 45298                           
 45299 ;; *************** function _PWM8_Initialize *****************
 45300 ;; Defined at:
 45301 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 45302 ;; Parameters:    Size  Location     Type
 45303 ;;		None
 45304 ;; Auto vars:     Size  Location     Type
 45305 ;;		None
 45306 ;; Return value:  Size  Location     Type
 45307 ;;                  1  [STACK] void 
 45308 ;; Registers used:
 45309 ;;		wreg, status,2
 45310 ;; Tracked objects:
 45311 ;;		On entry : 3F/39
 45312 ;;		On exit  : 3F/3F
 45313 ;;		Unchanged: 0/0
 45314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45319 ;;Total ram usage:        0 bytes
 45320 ;; Hardware stack levels used:    1
 45321 ;; Hardware stack levels required when called:   15
 45322 ;; This function calls:
 45323 ;;		Nothing
 45324 ;; This function is called by:
 45325 ;;		_SYSTEM_Initialize
 45326 ;; This function uses a reentrant model
 45327 ;;
 45328                           
 45329                           	psect	text169
 45330  002BF2                     __ptext169:
 45331                           	opt callstack 0
 45332  002BF2                     _PWM8_Initialize:
 45333                           	opt callstack 14
 45334                           
 45335                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 45336                           
 45337                           ; BSR set to: 61
 45338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45339                           ;incstack = 0
 45340  002BF2  0E80               	movlw	128
 45341  002BF4  6E62               	movwf	98,c	;volatile
 45342                           
 45343                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 45344  002BF6  6A61               	clrf	97,c	;volatile
 45345                           
 45346                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 45347  002BF8  0E40               	movlw	64
 45348  002BFA  6E60               	movwf	96,c	;volatile
 45349                           
 45350                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 45351  002BFC  013F               	movlb	63	; () banked
 45352  002BFE  515F               	movf	95,w,b	;volatile
 45353  002C00  0B3F               	andlw	-193
 45354  002C02  0940               	iorlw	64
 45355  002C04  6F5F               	movwf	95,b	;volatile
 45356                           
 45357                           ; BSR set to: 63
 45358                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45359  002C06  0012               	return		;funcret
 45360  002C08                     __end_of_PWM8_Initialize:
 45361                           	opt callstack 0
 45362                           
 45363 ;; *************** function _PMD_Initialize *****************
 45364 ;; Defined at:
 45365 ;;		line 91 in file "mcc_generated_files/mcc.c"
 45366 ;; Parameters:    Size  Location     Type
 45367 ;;		None
 45368 ;; Auto vars:     Size  Location     Type
 45369 ;;		None
 45370 ;; Return value:  Size  Location     Type
 45371 ;;                  1  [STACK] void 
 45372 ;; Registers used:
 45373 ;;		None
 45374 ;; Tracked objects:
 45375 ;;		On entry : 3F/39
 45376 ;;		On exit  : 3F/39
 45377 ;;		Unchanged: 0/0
 45378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45383 ;;Total ram usage:        0 bytes
 45384 ;; Hardware stack levels used:    1
 45385 ;; Hardware stack levels required when called:   15
 45386 ;; This function calls:
 45387 ;;		Nothing
 45388 ;; This function is called by:
 45389 ;;		_SYSTEM_Initialize
 45390 ;; This function uses a reentrant model
 45391 ;;
 45392                           
 45393                           	psect	text170
 45394  002C1E                     __ptext170:
 45395                           	opt callstack 0
 45396  002C1E                     _PMD_Initialize:
 45397                           	opt callstack 14
 45398                           
 45399                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 45400                           
 45401                           ; BSR set to: 63
 45402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45403                           ;incstack = 0
 45404  002C1E  0139               	movlb	57	; () banked
 45405  002C20  6BC0               	clrf	192,b	;volatile
 45406                           
 45407                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 45408  002C22  6BC1               	clrf	193,b	;volatile
 45409                           
 45410                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 45411  002C24  6BC2               	clrf	194,b	;volatile
 45412                           
 45413                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 45414  002C26  6BC3               	clrf	195,b	;volatile
 45415                           
 45416                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 45417  002C28  6BC4               	clrf	196,b	;volatile
 45418                           
 45419                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 45420  002C2A  6BC5               	clrf	197,b	;volatile
 45421                           
 45422                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 45423  002C2C  6BC6               	clrf	198,b	;volatile
 45424                           
 45425                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 45426  002C2E  6BC7               	clrf	199,b	;volatile
 45427                           
 45428                           ; BSR set to: 57
 45429                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45430  002C30  0012               	return		;funcret
 45431  002C32                     __end_of_PMD_Initialize:
 45432                           	opt callstack 0
 45433                           
 45434 ;; *************** function _PIN_MANAGER_Initialize *****************
 45435 ;; Defined at:
 45436 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 45437 ;; Parameters:    Size  Location     Type
 45438 ;;		None
 45439 ;; Auto vars:     Size  Location     Type
 45440 ;;		None
 45441 ;; Return value:  Size  Location     Type
 45442 ;;                  1  [STACK] void 
 45443 ;; Registers used:
 45444 ;;		wreg, status,2
 45445 ;; Tracked objects:
 45446 ;;		On entry : 3F/39
 45447 ;;		On exit  : 3F/3A
 45448 ;;		Unchanged: 0/0
 45449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45454 ;;Total ram usage:        0 bytes
 45455 ;; Hardware stack levels used:    1
 45456 ;; Hardware stack levels required when called:   15
 45457 ;; This function calls:
 45458 ;;		Nothing
 45459 ;; This function is called by:
 45460 ;;		_SYSTEM_Initialize
 45461 ;; This function uses a reentrant model
 45462 ;;
 45463                           
 45464                           	psect	text171
 45465  001250                     __ptext171:
 45466                           	opt callstack 0
 45467  001250                     _PIN_MANAGER_Initialize:
 45468                           	opt callstack 14
 45469                           
 45470                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 45471                           
 45472                           ; BSR set to: 57
 45473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45474                           ;incstack = 0
 45475  001250  0E07               	movlw	7
 45476  001252  6EBE               	movwf	190,c	;volatile
 45477                           
 45478                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 45479  001254  6ABD               	clrf	189,c	;volatile
 45480                           
 45481                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 45482  001256  6ABA               	clrf	186,c	;volatile
 45483                           
 45484                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 45485  001258  0E23               	movlw	35
 45486  00125A  6EBF               	movwf	191,c	;volatile
 45487                           
 45488                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 45489  00125C  6ABB               	clrf	187,c	;volatile
 45490                           
 45491                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 45492  00125E  0E07               	movlw	7
 45493  001260  6EBC               	movwf	188,c	;volatile
 45494                           
 45495                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 45496  001262  6AC6               	clrf	198,c	;volatile
 45497                           
 45498                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 45499  001264  0E0C               	movlw	12
 45500  001266  6EC7               	movwf	199,c	;volatile
 45501                           
 45502                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 45503  001268  68C2               	setf	194,c	;volatile
 45504                           
 45505                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 45506  00126A  0EBF               	movlw	191
 45507  00126C  6EC3               	movwf	195,c	;volatile
 45508                           
 45509                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 45510  00126E  0E90               	movlw	144
 45511  001270  6EC4               	movwf	196,c	;volatile
 45512                           
 45513                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 45514  001272  0E0C               	movlw	12
 45515  001274  6EC5               	movwf	197,c	;volatile
 45516                           
 45517                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 45518  001276  013A               	movlb	58	; () banked
 45519  001278  6B70               	clrf	112,b	;volatile
 45520                           
 45521                           ; BSR set to: 58
 45522                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 45523  00127A  6B60               	clrf	96,b	;volatile
 45524                           
 45525                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 45526  00127C  0E3C               	movlw	60
 45527  00127E  6F50               	movwf	80,b	;volatile
 45528                           
 45529                           ; BSR set to: 58
 45530                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 45531  001280  6B80               	clrf	128,b	;volatile
 45532                           
 45533                           ; BSR set to: 58
 45534                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 45535  001282  6B90               	clrf	144,b	;volatile
 45536                           
 45537                           ; BSR set to: 58
 45538                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 45539  001284  6940               	setf	64,b	;volatile
 45540                           
 45541                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 45542  001286  0E0C               	movlw	12
 45543  001288  6F71               	movwf	113,b	;volatile
 45544                           
 45545                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 45546  00128A  0E0C               	movlw	12
 45547  00128C  6F91               	movwf	145,b	;volatile
 45548                           
 45549                           ; BSR set to: 58
 45550                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 45551  00128E  6B81               	clrf	129,b	;volatile
 45552                           
 45553                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 45554  001290  0E83               	movlw	131
 45555  001292  6F51               	movwf	81,b	;volatile
 45556                           
 45557                           ; BSR set to: 58
 45558                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 45559  001294  6B41               	clrf	65,b	;volatile
 45560                           
 45561                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 45562  001296  0E97               	movlw	151
 45563  001298  6F61               	movwf	97,b	;volatile
 45564                           
 45565                           ; BSR set to: 58
 45566                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 45567  00129A  6B82               	clrf	130,b	;volatile
 45568                           
 45569                           ; BSR set to: 58
 45570                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 45571  00129C  6B92               	clrf	146,b	;volatile
 45572                           
 45573                           ; BSR set to: 58
 45574                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 45575  00129E  6B42               	clrf	66,b	;volatile
 45576                           
 45577                           ; BSR set to: 58
 45578                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 45579  0012A0  6B52               	clrf	82,b	;volatile
 45580                           
 45581                           ; BSR set to: 58
 45582                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 45583  0012A2  6B62               	clrf	98,b	;volatile
 45584                           
 45585                           ; BSR set to: 58
 45586                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 45587  0012A4  6B72               	clrf	114,b	;volatile
 45588                           
 45589                           ; BSR set to: 58
 45590                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 45591  0012A6  6943               	setf	67,b	;volatile
 45592                           
 45593                           ; BSR set to: 58
 45594                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 45595  0012A8  6953               	setf	83,b	;volatile
 45596                           
 45597                           ; BSR set to: 58
 45598                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 45599  0012AA  6963               	setf	99,b	;volatile
 45600                           
 45601                           ; BSR set to: 58
 45602                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 45603  0012AC  6973               	setf	115,b	;volatile
 45604                           
 45605                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 45606  0012AE  0E07               	movlw	7
 45607  0012B0  6F83               	movwf	131,b	;volatile
 45608                           
 45609                           ; BSR set to: 58
 45610                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 45611  0012B2  6993               	setf	147,b	;volatile
 45612                           
 45613                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 45614  0012B4  0E0F               	movlw	15
 45615  0012B6  6FE8               	movwf	232,b	;volatile
 45616                           
 45617                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 45618  0012B8  0E13               	movlw	19
 45619  0012BA  6FDE               	movwf	222,b	;volatile
 45620                           
 45621                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 45622  0012BC  0E16               	movlw	22
 45623  0012BE  6F0E               	movwf	14,b	;volatile
 45624                           
 45625                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 45626  0012C0  0E1E               	movlw	30
 45627  0012C2  6F13               	movwf	19,b	;volatile
 45628                           
 45629                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 45630  0012C4  0E08               	movlw	8
 45631  0012C6  6FC0               	movwf	192,b	;volatile
 45632                           
 45633                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 45634  0012C8  0E10               	movlw	16
 45635  0012CA  6F19               	movwf	25,b	;volatile
 45636                           
 45637                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 45638  0012CC  0E09               	movlw	9
 45639  0012CE  6FC1               	movwf	193,b	;volatile
 45640                           
 45641                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 45642  0012D0  0E1F               	movlw	31
 45643  0012D2  6F15               	movwf	21,b	;volatile
 45644                           
 45645                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 45646  0012D4  0E13               	movlw	19
 45647  0012D6  6F16               	movwf	22,b	;volatile
 45648                           
 45649                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 45650  0012D8  0E17               	movlw	23
 45651  0012DA  6FE5               	movwf	229,b	;volatile
 45652                           
 45653                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 45654  0012DC  0E14               	movlw	20
 45655  0012DE  6FDF               	movwf	223,b	;volatile
 45656                           
 45657                           ; BSR set to: 58
 45658                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 45659  0012E0  0012               	return		;funcret
 45660  0012E2                     __end_of_PIN_MANAGER_Initialize:
 45661                           	opt callstack 0
 45662                           
 45663 ;; *************** function _OSCILLATOR_Initialize *****************
 45664 ;; Defined at:
 45665 ;;		line 73 in file "mcc_generated_files/mcc.c"
 45666 ;; Parameters:    Size  Location     Type
 45667 ;;		None
 45668 ;; Auto vars:     Size  Location     Type
 45669 ;;		None
 45670 ;; Return value:  Size  Location     Type
 45671 ;;                  1  [STACK] void 
 45672 ;; Registers used:
 45673 ;;		wreg, status,2
 45674 ;; Tracked objects:
 45675 ;;		On entry : 3F/3A
 45676 ;;		On exit  : 3F/39
 45677 ;;		Unchanged: 0/0
 45678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45683 ;;Total ram usage:        0 bytes
 45684 ;; Hardware stack levels used:    1
 45685 ;; Hardware stack levels required when called:   15
 45686 ;; This function calls:
 45687 ;;		Nothing
 45688 ;; This function is called by:
 45689 ;;		_SYSTEM_Initialize
 45690 ;; This function uses a reentrant model
 45691 ;;
 45692                           
 45693                           	psect	text172
 45694  002C08                     __ptext172:
 45695                           	opt callstack 0
 45696  002C08                     _OSCILLATOR_Initialize:
 45697                           	opt callstack 14
 45698                           
 45699                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 45700                           
 45701                           ; BSR set to: 58
 45702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45703                           ;incstack = 0
 45704  002C08  0E20               	movlw	32
 45705  002C0A  0139               	movlb	57	; () banked
 45706  002C0C  6FD9               	movwf	217,b	;volatile
 45707                           
 45708                           ; BSR set to: 57
 45709                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 45710  002C0E  6BDB               	clrf	219,b	;volatile
 45711                           
 45712                           ; BSR set to: 57
 45713                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 45714  002C10  6BDD               	clrf	221,b	;volatile
 45715                           
 45716                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 45717  002C12  0E02               	movlw	2
 45718  002C14  6FDF               	movwf	223,b	;volatile
 45719                           
 45720                           ; BSR set to: 57
 45721                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 45722  002C16  6BDE               	clrf	222,b	;volatile
 45723  002C18                     l171:
 45724                           
 45725                           ; BSR set to: 57
 45726                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 45727  002C18  B1DC               	btfsc	220,0,b	;volatile
 45728  002C1A  0012               	return	
 45729  002C1C  D7FD               	goto	l171
 45730  002C1E                     __end_of_OSCILLATOR_Initialize:
 45731                           	opt callstack 0
 45732                           
 45733 ;; *************** function _INTERRUPT_Initialize *****************
 45734 ;; Defined at:
 45735 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 45736 ;; Parameters:    Size  Location     Type
 45737 ;;		None
 45738 ;; Auto vars:     Size  Location     Type
 45739 ;;  state           1  [STACK] _Bool 
 45740 ;; Return value:  Size  Location     Type
 45741 ;;                  1  [STACK] void 
 45742 ;; Registers used:
 45743 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 45744 ;; Tracked objects:
 45745 ;;		On entry : 0/0
 45746 ;;		On exit  : 3F/39
 45747 ;;		Unchanged: 0/0
 45748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45753 ;;Total ram usage:        0 bytes
 45754 ;; Hardware stack levels used:    1
 45755 ;; Hardware stack levels required when called:   15
 45756 ;; This function calls:
 45757 ;;		Nothing
 45758 ;; This function is called by:
 45759 ;;		_SYSTEM_Initialize
 45760 ;; This function uses a reentrant model
 45761 ;;
 45762                           
 45763                           	psect	text173
 45764  0019F4                     __ptext173:
 45765                           	opt callstack 0
 45766  0019F4                     _INTERRUPT_Initialize:
 45767                           	opt callstack 0
 45768                           
 45769                           ; BSR set to: 57
 45770                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45771  0019F4  52E6               	movf	postinc1,f,c
 45772                           
 45773                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 45774                           
 45775                           ;incstack = 0
 45776  0019F6  8AD2               	bsf	210,5,c	;volatile
 45777                           
 45778                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 45779  0019F8  AED2               	btfss	16338,7,c	;volatile
 45780  0019FA  D003               	goto	u12440
 45781  0019FC  6A35               	clrf	(btemp+11)^0,c
 45782  0019FE  2A35               	incf	(btemp+11)^0,f,c
 45783  001A00  D001               	goto	u12458
 45784  001A02                     u12440:
 45785  001A02  6A35               	clrf	(btemp+11)^0,c
 45786  001A04                     u12458:
 45787                           
 45788                           ;stkvar	_state @ sp[(-1)+0]
 45789  001A04  0EFF               	movlw	-1
 45790  001A06  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45791                           
 45792                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 45793  001A0C  9ED2               	bcf	16338,7,c	;volatile
 45794                           
 45795                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 45796  001A0E  0E55               	movlw	85
 45797  001A10  6ED4               	movwf	212,c	;volatile
 45798                           
 45799                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 45800  001A12  0EAA               	movlw	170
 45801  001A14  6ED4               	movwf	212,c	;volatile
 45802                           
 45803                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 45804  001A16  90D4               	bcf	212,0,c	;volatile
 45805                           
 45806                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 45807  001A18  0138               	movlb	56	; () banked
 45808  001A1A  6B9F               	clrf	159,b	;volatile
 45809                           
 45810                           ; BSR set to: 56
 45811                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 45812  001A1C  6B9E               	clrf	158,b	;volatile
 45813                           
 45814                           ; BSR set to: 56
 45815                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 45816  001A1E  0E08               	movlw	8
 45817  001A20  6F9D               	movwf	157,b	;volatile
 45818                           
 45819                           ; BSR set to: 56
 45820                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 45821  001A22  0E55               	movlw	85
 45822  001A24  6ED4               	movwf	212,c	;volatile
 45823                           
 45824                           ; BSR set to: 56
 45825                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 45826  001A26  0EAA               	movlw	170
 45827  001A28  6ED4               	movwf	212,c	;volatile
 45828                           
 45829                           ; BSR set to: 56
 45830                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 45831  001A2A  80D4               	bsf	212,0,c	;volatile
 45832                           
 45833                           ; BSR set to: 56
 45834                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 45835                           ;stkvar	_state @ sp[(-1)+0]
 45836  001A2C  0EFF               	movlw	-1
 45837  001A2E  B0E3               	btfsc	plusw1,0,c
 45838  001A30  D002               	bra	u12465
 45839  001A32  9ED2               	bcf	16338,7,c	;volatile
 45840  001A34  D001               	bra	u12466
 45841  001A36                     u12465:
 45842  001A36  8ED2               	bsf	16338,7,c	;volatile
 45843  001A38                     u12466:
 45844                           
 45845                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 45846  001A38  0139               	movlb	57	; () banked
 45847  001A3A  8782               	bsf	130,3,b	;volatile
 45848                           
 45849                           ; BSR set to: 57
 45850                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 45851  001A3C  8382               	bsf	130,1,b	;volatile
 45852                           
 45853                           ; BSR set to: 57
 45854                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 45855  001A3E  8182               	bsf	130,0,b	;volatile
 45856                           
 45857                           ; BSR set to: 57
 45858                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 45859  001A40  8582               	bsf	130,2,b	;volatile
 45860                           
 45861                           ; BSR set to: 57
 45862                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 45863  001A42  8786               	bsf	134,3,b	;volatile
 45864                           
 45865                           ; BSR set to: 57
 45866                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 45867  001A44  8586               	bsf	134,2,b	;volatile
 45868                           
 45869                           ; BSR set to: 57
 45870                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 45871  001A46  8783               	bsf	131,3,b	;volatile
 45872                           
 45873                           ; BSR set to: 57
 45874                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 45875  001A48  8181               	bsf	129,0,b	;volatile
 45876                           
 45877                           ; BSR set to: 57
 45878                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 45879  001A4A  9185               	bcf	133,0,b	;volatile
 45880                           
 45881                           ; BSR set to: 57
 45882                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 45883  001A4C  8189               	bsf	137,0,b	;volatile
 45884                           
 45885                           ; BSR set to: 57
 45886                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 45887  001A4E  9D88               	bcf	136,6,b	;volatile
 45888                           
 45889                           ; BSR set to: 57
 45890                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 45891  001A50  8581               	bsf	129,2,b	;volatile
 45892                           
 45893                           ; BSR set to: 57
 45894                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 45895  001A52  8781               	bsf	129,3,b	;volatile
 45896                           
 45897                           ; BSR set to: 57
 45898                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 45899  001A54  9D86               	bcf	134,6,b	;volatile
 45900                           
 45901                           ; BSR set to: 57
 45902                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 45903  001A56  52E5               	movf	postdec1,f,c
 45904  001A58  0012               	return		;funcret
 45905  001A5A                     __end_of_INTERRUPT_Initialize:
 45906                           	opt callstack 0
 45907                           
 45908 ;; *************** function _FVR_Initialize *****************
 45909 ;; Defined at:
 45910 ;;		line 58 in file "mcc_generated_files/fvr.c"
 45911 ;; Parameters:    Size  Location     Type
 45912 ;;		None
 45913 ;; Auto vars:     Size  Location     Type
 45914 ;;		None
 45915 ;; Return value:  Size  Location     Type
 45916 ;;                  1  [STACK] void 
 45917 ;; Registers used:
 45918 ;;		wreg, status,2
 45919 ;; Tracked objects:
 45920 ;;		On entry : 3F/39
 45921 ;;		On exit  : 3F/3E
 45922 ;;		Unchanged: 0/0
 45923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45928 ;;Total ram usage:        0 bytes
 45929 ;; Hardware stack levels used:    1
 45930 ;; Hardware stack levels required when called:   15
 45931 ;; This function calls:
 45932 ;;		Nothing
 45933 ;; This function is called by:
 45934 ;;		_SYSTEM_Initialize
 45935 ;; This function uses a reentrant model
 45936 ;;
 45937                           
 45938                           	psect	text174
 45939  002D56                     __ptext174:
 45940                           	opt callstack 0
 45941  002D56                     _FVR_Initialize:
 45942                           	opt callstack 14
 45943                           
 45944                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 45945                           
 45946                           ; BSR set to: 57
 45947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45948                           ;incstack = 0
 45949  002D56  0EAF               	movlw	175
 45950  002D58  013E               	movlb	62	; () banked
 45951  002D5A  6FC1               	movwf	193,b	;volatile
 45952                           
 45953                           ; BSR set to: 62
 45954                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45955  002D5C  0012               	return		;funcret
 45956  002D5E                     __end_of_FVR_Initialize:
 45957                           	opt callstack 0
 45958                           
 45959 ;; *************** function _EXT_INT_Initialize *****************
 45960 ;; Defined at:
 45961 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 45962 ;; Parameters:    Size  Location     Type
 45963 ;;		None
 45964 ;; Auto vars:     Size  Location     Type
 45965 ;;		None
 45966 ;; Return value:  Size  Location     Type
 45967 ;;                  1  [STACK] void 
 45968 ;; Registers used:
 45969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45970 ;; Tracked objects:
 45971 ;;		On entry : 3F/3F
 45972 ;;		On exit  : 3F/39
 45973 ;;		Unchanged: 0/0
 45974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45979 ;;Total ram usage:        0 bytes
 45980 ;; Hardware stack levels used:    1
 45981 ;; Hardware stack levels required when called:   16
 45982 ;; This function calls:
 45983 ;;		_INT0_SetInterruptHandler
 45984 ;;		_INT1_SetInterruptHandler
 45985 ;; This function is called by:
 45986 ;;		_SYSTEM_Initialize
 45987 ;; This function uses a reentrant model
 45988 ;;
 45989                           
 45990                           	psect	text175
 45991  00252E                     __ptext175:
 45992                           	opt callstack 0
 45993  00252E                     _EXT_INT_Initialize:
 45994                           	opt callstack 13
 45995                           
 45996                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 45997                           
 45998                           ; BSR set to: 62
 45999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46000                           ;incstack = 0
 46001  00252E  0139               	movlb	57	; () banked
 46002  002530  91A1               	bcf	161,0,b	;volatile
 46003                           
 46004                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 46005  002532  90D2               	bcf	210,0,c	;volatile
 46006                           
 46007                           ; BSR set to: 57
 46008                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 46009  002534  0E8E               	movlw	low _INT0_DefaultInterruptHandler
 46010  002536  6EE6               	movwf	postinc1,c
 46011  002538  0E2D               	movlw	high _INT0_DefaultInterruptHandler
 46012  00253A  6EE6               	movwf	postinc1,c
 46013  00253C  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 46014  00253E  6EE6               	movwf	postinc1,c
 46015  002540  EC4D  F014         	call	_INT0_SetInterruptHandler	;wreg free
 46016                           
 46017                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 46018  002544  0139               	movlb	57	; () banked
 46019  002546  8191               	bsf	145,0,b	;volatile
 46020                           
 46021                           ; BSR set to: 57
 46022                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 46023  002548  91A5               	bcf	165,0,b	;volatile
 46024                           
 46025                           ; BSR set to: 57
 46026                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 46027  00254A  92D2               	bcf	210,1,c	;volatile
 46028                           
 46029                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 46030  00254C  0E8A               	movlw	low _INT1_DefaultInterruptHandler
 46031  00254E  6EE6               	movwf	postinc1,c
 46032  002550  0E2D               	movlw	high _INT1_DefaultInterruptHandler
 46033  002552  6EE6               	movwf	postinc1,c
 46034  002554  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 46035  002556  6EE6               	movwf	postinc1,c
 46036  002558  EC39  F014         	call	_INT1_SetInterruptHandler	;wreg free
 46037                           
 46038                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 46039  00255C  0139               	movlb	57	; () banked
 46040  00255E  8195               	bsf	149,0,b	;volatile
 46041                           
 46042                           ; BSR set to: 57
 46043                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46044  002560  0012               	return		;funcret
 46045  002562                     __end_of_EXT_INT_Initialize:
 46046                           	opt callstack 0
 46047                           
 46048 ;; *************** function _INT1_SetInterruptHandler *****************
 46049 ;; Defined at:
 46050 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 46051 ;; Parameters:    Size  Location     Type
 46052 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46053 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 46054 ;; Auto vars:     Size  Location     Type
 46055 ;;		None
 46056 ;; Return value:  Size  Location     Type
 46057 ;;                  1  [STACK] void 
 46058 ;; Registers used:
 46059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46060 ;; Tracked objects:
 46061 ;;		On entry : 3F/39
 46062 ;;		On exit  : 0/0
 46063 ;;		Unchanged: 0/0
 46064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46069 ;;Total ram usage:        0 bytes
 46070 ;; Hardware stack levels used:    1
 46071 ;; Hardware stack levels required when called:   15
 46072 ;; This function calls:
 46073 ;;		Nothing
 46074 ;; This function is called by:
 46075 ;;		_EXT_INT_Initialize
 46076 ;;		_start_switch_handler
 46077 ;; This function uses a reentrant model
 46078 ;;
 46079                           
 46080                           	psect	text176
 46081  002872                     __ptext176:
 46082                           	opt callstack 0
 46083  002872                     _INT1_SetInterruptHandler:
 46084                           	opt callstack 14
 46085                           
 46086                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 46087                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46088                           
 46089                           ; BSR set to: 57
 46090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46091                           ;incstack = 0
 46092  002872  50E1               	movf	fsr1l,w,c
 46093  002874  0FFD               	addlw	-3
 46094  002876  6ED9               	movwf	fsr2l,c
 46095  002878  50E2               	movf	fsr1h,w,c
 46096  00287A  6EDA               	movwf	fsr2h,c
 46097  00287C  0EFF               	movlw	255
 46098  00287E  22DA               	addwfc	fsr2h,f,c
 46099  002880  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 46100  002886  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 46101  00288C  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 46102                           
 46103                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46104  002892  52E5               	movf	postdec1,f,c
 46105  002894  52E5               	movf	postdec1,f,c
 46106  002896  52E5               	movf	postdec1,f,c
 46107  002898  0012               	return		;funcret
 46108  00289A                     __end_of_INT1_SetInterruptHandler:
 46109                           	opt callstack 0
 46110                           
 46111 ;; *************** function _INT0_SetInterruptHandler *****************
 46112 ;; Defined at:
 46113 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 46114 ;; Parameters:    Size  Location     Type
 46115 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46116 ;;		 -> INT0_DefaultInterruptHandler(1), 
 46117 ;; Auto vars:     Size  Location     Type
 46118 ;;		None
 46119 ;; Return value:  Size  Location     Type
 46120 ;;                  1  [STACK] void 
 46121 ;; Registers used:
 46122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46123 ;; Tracked objects:
 46124 ;;		On entry : 3F/39
 46125 ;;		On exit  : 0/0
 46126 ;;		Unchanged: 0/0
 46127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46132 ;;Total ram usage:        0 bytes
 46133 ;; Hardware stack levels used:    1
 46134 ;; Hardware stack levels required when called:   15
 46135 ;; This function calls:
 46136 ;;		Nothing
 46137 ;; This function is called by:
 46138 ;;		_EXT_INT_Initialize
 46139 ;; This function uses a reentrant model
 46140 ;;
 46141                           
 46142                           	psect	text177
 46143  00289A                     __ptext177:
 46144                           	opt callstack 0
 46145  00289A                     _INT0_SetInterruptHandler:
 46146                           	opt callstack 13
 46147                           
 46148                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 46149                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46150                           
 46151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46152                           ;incstack = 0
 46153  00289A  50E1               	movf	fsr1l,w,c
 46154  00289C  0FFD               	addlw	-3
 46155  00289E  6ED9               	movwf	fsr2l,c
 46156  0028A0  50E2               	movf	fsr1h,w,c
 46157  0028A2  6EDA               	movwf	fsr2h,c
 46158  0028A4  0EFF               	movlw	255
 46159  0028A6  22DA               	addwfc	fsr2h,f,c
 46160  0028A8  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 46161  0028AE  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 46162  0028B4  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 46163                           
 46164                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46165  0028BA  52E5               	movf	postdec1,f,c
 46166  0028BC  52E5               	movf	postdec1,f,c
 46167  0028BE  52E5               	movf	postdec1,f,c
 46168  0028C0  0012               	return		;funcret
 46169  0028C2                     __end_of_INT0_SetInterruptHandler:
 46170                           	opt callstack 0
 46171                           
 46172 ;; *************** function _DMA2_Initialize *****************
 46173 ;; Defined at:
 46174 ;;		line 61 in file "mcc_generated_files/dma2.c"
 46175 ;; Parameters:    Size  Location     Type
 46176 ;;		None
 46177 ;; Auto vars:     Size  Location     Type
 46178 ;;		None
 46179 ;; Return value:  Size  Location     Type
 46180 ;;                  1  [STACK] void 
 46181 ;; Registers used:
 46182 ;;		wreg, status,2
 46183 ;; Tracked objects:
 46184 ;;		On entry : 3F/3D
 46185 ;;		On exit  : 3F/3B
 46186 ;;		Unchanged: 0/0
 46187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46192 ;;Total ram usage:        0 bytes
 46193 ;; Hardware stack levels used:    1
 46194 ;; Hardware stack levels required when called:   15
 46195 ;; This function calls:
 46196 ;;		Nothing
 46197 ;; This function is called by:
 46198 ;;		_SYSTEM_Initialize
 46199 ;; This function uses a reentrant model
 46200 ;;
 46201                           
 46202                           	psect	text178
 46203  001D58                     __ptext178:
 46204                           	opt callstack 0
 46205  001D58                     _DMA2_Initialize:
 46206                           	opt callstack 14
 46207                           
 46208                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 46209                           
 46210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46211                           ;incstack = 0
 46212  001D58  0E00               	movlw	0
 46213  001D5A  013B               	movlb	59	; () banked
 46214  001D5C  6FD9               	movwf	217,b	;volatile
 46215  001D5E  0E10               	movlw	16
 46216  001D60  6FDA               	movwf	218,b	;volatile
 46217  001D62  0E00               	movlw	0
 46218  001D64  6FDB               	movwf	219,b	;volatile
 46219                           
 46220                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 46221  001D66  0E3F               	movlw	63
 46222  001D68  6FD1               	movwf	209,b	;volatile
 46223  001D6A  0EBB               	movlw	187
 46224  001D6C  6FD0               	movwf	208,b	;volatile
 46225                           
 46226                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 46227  001D6E  0E03               	movlw	3
 46228  001D70  6FDD               	movwf	221,b	;volatile
 46229                           
 46230                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 46231  001D72  0E00               	movlw	0
 46232  001D74  6FD8               	movwf	216,b	;volatile
 46233  001D76  0E01               	movlw	1
 46234  001D78  6FD7               	movwf	215,b	;volatile
 46235                           
 46236                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 46237  001D7A  0E00               	movlw	0
 46238  001D7C  6FCF               	movwf	207,b	;volatile
 46239  001D7E  0E01               	movlw	1
 46240  001D80  6FCE               	movwf	206,b	;volatile
 46241                           
 46242                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 46243  001D82  0E1C               	movlw	28
 46244  001D84  6FDF               	movwf	223,b	;volatile
 46245                           
 46246                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 46247  001D86  0E3D               	movlw	61
 46248  001D88  6FDE               	movwf	222,b	;volatile
 46249                           
 46250                           ; BSR set to: 59
 46251                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 46252  001D8A  0139               	movlb	57	; () banked
 46253  001D8C  97A5               	bcf	165,3,b	;volatile
 46254                           
 46255                           ; BSR set to: 57
 46256                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 46257  001D8E  95A5               	bcf	165,2,b	;volatile
 46258                           
 46259                           ; BSR set to: 57
 46260                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 46261  001D90  9BA5               	bcf	165,5,b	;volatile
 46262                           
 46263                           ; BSR set to: 57
 46264                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 46265  001D92  99A5               	bcf	165,4,b	;volatile
 46266                           
 46267                           ; BSR set to: 57
 46268                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 46269  001D94  9795               	bcf	149,3,b	;volatile
 46270                           
 46271                           ; BSR set to: 57
 46272                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 46273  001D96  9595               	bcf	149,2,b	;volatile
 46274                           
 46275                           ; BSR set to: 57
 46276                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 46277  001D98  9B95               	bcf	149,5,b	;volatile
 46278                           
 46279                           ; BSR set to: 57
 46280                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 46281  001D9A  9995               	bcf	149,4,b	;volatile
 46282  001D9C  9ED2               	bcf	16338,7,c	;# 
 46283  001D9E  0139               	banksel	14831	;# 
 46284  001DA0  0E55               	movlw	85	;# 
 46285  001DA2  6FEF               	movwf	14831,b	;# 
 46286  001DA4  0EAA               	movlw	170	;# 
 46287  001DA6  6FEF               	movwf	14831,b	;# 
 46288  001DA8  81EF               	bsf	14831,0,b	;# 
 46289  001DAA  8ED2               	bsf	16338,7,c	;# 
 46290                           
 46291                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 46292  001DAC  013B               	movlb	59	; () banked
 46293  001DAE  6BDC               	clrf	220,b	;volatile
 46294                           
 46295                           ; BSR set to: 59
 46296                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46297  001DB0  0012               	return		;funcret
 46298  001DB2                     __end_of_DMA2_Initialize:
 46299                           	opt callstack 0
 46300                           
 46301 ;; *************** function _DMA1_Initialize *****************
 46302 ;; Defined at:
 46303 ;;		line 86 in file "mcc_generated_files/dma1.c"
 46304 ;; Parameters:    Size  Location     Type
 46305 ;;		None
 46306 ;; Auto vars:     Size  Location     Type
 46307 ;;		None
 46308 ;; Return value:  Size  Location     Type
 46309 ;;                  1  [STACK] void 
 46310 ;; Registers used:
 46311 ;;		wreg, status,2
 46312 ;; Tracked objects:
 46313 ;;		On entry : 3F/3B
 46314 ;;		On exit  : 3F/3B
 46315 ;;		Unchanged: 0/0
 46316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46321 ;;Total ram usage:        0 bytes
 46322 ;; Hardware stack levels used:    1
 46323 ;; Hardware stack levels required when called:   15
 46324 ;; This function calls:
 46325 ;;		Nothing
 46326 ;; This function is called by:
 46327 ;;		_SYSTEM_Initialize
 46328 ;; This function uses a reentrant model
 46329 ;;
 46330                           
 46331                           	psect	text179
 46332  0017E6                     __ptext179:
 46333                           	opt callstack 0
 46334  0017E6                     _DMA1_Initialize:
 46335                           	opt callstack 14
 46336                           
 46337                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 46338                           
 46339                           ; BSR set to: 59
 46340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46341                           ;incstack = 0
 46342  0017E6  0E00               	movlw	0
 46343  0017E8  013B               	movlb	59	; () banked
 46344  0017EA  6FF9               	movwf	249,b	;volatile
 46345  0017EC  0E10               	movlw	16
 46346  0017EE  6FFA               	movwf	250,b	;volatile
 46347  0017F0  0E00               	movlw	0
 46348  0017F2  6FFB               	movwf	251,b	;volatile
 46349                           
 46350                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 46351  0017F4  0E3D               	movlw	61
 46352  0017F6  6FF1               	movwf	241,b	;volatile
 46353  0017F8  0E11               	movlw	17
 46354  0017FA  6FF0               	movwf	240,b	;volatile
 46355                           
 46356                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 46357  0017FC  0E03               	movlw	3
 46358  0017FE  6FFD               	movwf	253,b	;volatile
 46359                           
 46360                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 46361  001800  0E00               	movlw	0
 46362  001802  6FF8               	movwf	248,b	;volatile
 46363  001804  0E01               	movlw	1
 46364  001806  6FF7               	movwf	247,b	;volatile
 46365                           
 46366                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 46367  001808  0E00               	movlw	0
 46368  00180A  6FEF               	movwf	239,b	;volatile
 46369  00180C  0E01               	movlw	1
 46370  00180E  6FEE               	movwf	238,b	;volatile
 46371                           
 46372                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 46373  001810  0E15               	movlw	21
 46374  001812  6FFF               	movwf	255,b	;volatile
 46375                           
 46376                           ; BSR set to: 59
 46377                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 46378  001814  6BFE               	clrf	254,b	;volatile
 46379                           
 46380                           ; BSR set to: 59
 46381                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 46382  001816  0139               	movlb	57	; () banked
 46383  001818  93A2               	bcf	162,1,b	;volatile
 46384                           
 46385                           ; BSR set to: 57
 46386                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 46387  00181A  91A2               	bcf	162,0,b	;volatile
 46388                           
 46389                           ; BSR set to: 57
 46390                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 46391  00181C  97A2               	bcf	162,3,b	;volatile
 46392                           
 46393                           ; BSR set to: 57
 46394                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 46395  00181E  95A2               	bcf	162,2,b	;volatile
 46396                           
 46397                           ; BSR set to: 57
 46398                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 46399  001820  8392               	bsf	146,1,b	;volatile
 46400                           
 46401                           ; BSR set to: 57
 46402                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 46403  001822  8192               	bsf	146,0,b	;volatile
 46404                           
 46405                           ; BSR set to: 57
 46406                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 46407  001824  8792               	bsf	146,3,b	;volatile
 46408                           
 46409                           ; BSR set to: 57
 46410                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 46411  001826  8592               	bsf	146,2,b	;volatile
 46412                           
 46413                           ; BSR set to: 57
 46414                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 46415  001828  6BF1               	clrf	241,b	;volatile
 46416                           
 46417                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 46418  00182A  0E01               	movlw	1
 46419  00182C  6FF2               	movwf	242,b	;volatile
 46420                           
 46421                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 46422  00182E  0E04               	movlw	4
 46423  001830  6FF3               	movwf	243,b	;volatile
 46424                           
 46425                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 46426  001832  0E02               	movlw	2
 46427  001834  6FF4               	movwf	244,b	;volatile
 46428                           
 46429                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 46430  001836  0E03               	movlw	3
 46431  001838  6FF7               	movwf	247,b	;volatile
 46432  00183A  9ED2               	bcf	16338,7,c	;# 
 46433  00183C  0139               	banksel	14831	;# 
 46434  00183E  0E55               	movlw	85	;# 
 46435  001840  6FEF               	movwf	14831,b	;# 
 46436  001842  0EAA               	movlw	170	;# 
 46437  001844  6FEF               	movwf	14831,b	;# 
 46438  001846  81EF               	bsf	14831,0,b	;# 
 46439  001848  8ED2               	bsf	16338,7,c	;# 
 46440                           
 46441                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 46442  00184A  013B               	movlb	59	; () banked
 46443  00184C  6BFC               	clrf	252,b	;volatile
 46444                           
 46445                           ; BSR set to: 59
 46446                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46447  00184E  0012               	return		;funcret
 46448  001850                     __end_of_DMA1_Initialize:
 46449                           	opt callstack 0
 46450                           
 46451 ;; *************** function _CRC_Initialize *****************
 46452 ;; Defined at:
 46453 ;;		line 76 in file "mcc_generated_files/crc.c"
 46454 ;; Parameters:    Size  Location     Type
 46455 ;;		None
 46456 ;; Auto vars:     Size  Location     Type
 46457 ;;  seed            2  [STACK] unsigned short 
 46458 ;;  poly            2  [STACK] unsigned short 
 46459 ;; Return value:  Size  Location     Type
 46460 ;;                  1  [STACK] void 
 46461 ;; Registers used:
 46462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 46463 ;; Tracked objects:
 46464 ;;		On entry : 0/39
 46465 ;;		On exit  : 3F/0
 46466 ;;		Unchanged: 0/0
 46467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46472 ;;Total ram usage:        0 bytes
 46473 ;; Hardware stack levels used:    1
 46474 ;; Hardware stack levels required when called:   15
 46475 ;; This function calls:
 46476 ;;		Nothing
 46477 ;; This function is called by:
 46478 ;;		_SYSTEM_Initialize
 46479 ;;		_read_cal_data
 46480 ;;		_write_cal_data
 46481 ;; This function uses a reentrant model
 46482 ;;
 46483                           
 46484                           	psect	text180
 46485  0012E2                     __ptext180:
 46486                           	opt callstack 0
 46487  0012E2                     _CRC_Initialize:
 46488                           	opt callstack 0
 46489                           
 46490                           ; BSR set to: 59
 46491                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46492  0012E2  52E6               	movf	postinc1,f,c
 46493  0012E4  52E6               	movf	postinc1,f,c
 46494  0012E6  52E6               	movf	postinc1,f,c
 46495  0012E8  52E6               	movf	postinc1,f,c
 46496                           
 46497                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 46498                           
 46499                           ;incstack = 0
 46500  0012EA  0E80               	movlw	128
 46501  0012EC  0139               	movlb	57	; () banked
 46502  0012EE  6F68               	movwf	104,b	;volatile
 46503                           
 46504                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 46505  0012F0  0E07               	movlw	7
 46506  0012F2  6F69               	movwf	105,b	;volatile
 46507                           
 46508                           ; BSR set to: 57
 46509                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 46510  0012F4  6B62               	clrf	98,b	;volatile
 46511                           
 46512                           ; BSR set to: 57
 46513                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 46514  0012F6  6B63               	clrf	99,b	;volatile
 46515                           
 46516                           ; BSR set to: 57
 46517                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 46518  0012F8  6B7C               	clrf	124,b	;volatile
 46519                           
 46520                           ; BSR set to: 57
 46521                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 46522  0012FA  6B78               	clrf	120,b	;volatile
 46523                           
 46524                           ; BSR set to: 57
 46525                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 46526  0012FC  6B77               	clrf	119,b	;volatile
 46527                           
 46528                           ; BSR set to: 57
 46529                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 46530  0012FE  6B76               	clrf	118,b	;volatile
 46531                           
 46532                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 46533  001300  0E3F               	movlw	63
 46534  001302  6F7B               	movwf	123,b	;volatile
 46535                           
 46536                           ; BSR set to: 57
 46537                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 46538  001304  697A               	setf	122,b	;volatile
 46539                           
 46540                           ; BSR set to: 57
 46541                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 46542  001306  6979               	setf	121,b	;volatile
 46543                           
 46544                           ; BSR set to: 57
 46545                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 46546  001308  6B7D               	clrf	125,b	;volatile
 46547                           
 46548                           ; BSR set to: 57
 46549                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 46550  00130A  0ED5               	movlw	213
 46551  00130C  6E34               	movwf	(btemp+10)^0,c
 46552  00130E  0E00               	movlw	0
 46553  001310  6E35               	movwf	(btemp+11)^0,c
 46554                           
 46555                           ;stkvar	_poly @ sp[(-4)+2]
 46556  001312  0EFE               	movlw	-2
 46557  001314  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 46558  00131A  0EFF               	movlw	-1
 46559  00131C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46560                           
 46561                           ; BSR set to: 57
 46562                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 46563                           ;stkvar	_poly @ sp[(-4)+2]
 46564  001322  0EFF               	movlw	255
 46565  001324  24E1               	addwf	fsr1l,w,c
 46566  001326  6ED9               	movwf	fsr2l,c
 46567  001328  0EFF               	movlw	255
 46568  00132A  20E2               	addwfc	fsr1h,w,c
 46569  00132C  6EDA               	movwf	fsr2h,c
 46570  00132E  50DF               	movf	indf2,w,c
 46571  001330  6F67               	movwf	103,b	;volatile
 46572                           
 46573                           ; BSR set to: 57
 46574                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 46575  001332  0ED5               	movlw	213
 46576  001334  6F66               	movwf	102,b	;volatile
 46577                           
 46578                           ; BSR set to: 57
 46579                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 46580                           ;stkvar	_seed @ sp[(-4)+0]
 46581  001336  0EFC               	movlw	-4
 46582  001338  6AE3               	clrf	plusw1,c
 46583  00133A  0EFD               	movlw	-3
 46584  00133C  6AE3               	clrf	plusw1,c
 46585                           
 46586                           ; BSR set to: 57
 46587                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 46588                           ;stkvar	_seed @ sp[(-4)+0]
 46589  00133E  0EFD               	movlw	253
 46590  001340  24E1               	addwf	fsr1l,w,c
 46591  001342  6ED9               	movwf	fsr2l,c
 46592  001344  0EFF               	movlw	255
 46593  001346  20E2               	addwfc	fsr1h,w,c
 46594  001348  6EDA               	movwf	fsr2h,c
 46595  00134A  50DF               	movf	indf2,w,c
 46596  00134C  6F63               	movwf	99,b	;volatile
 46597                           
 46598                           ; BSR set to: 57
 46599                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 46600  00134E  6B62               	clrf	98,b	;volatile
 46601                           
 46602                           ; BSR set to: 57
 46603                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 46604  001350  3969               	swapf	105,w,b	;volatile
 46605  001352  0B0F               	andlw	15
 46606  001354  6E35               	movwf	(btemp+11)^0,c
 46607  001356  2835               	incf	(btemp+11)^0,w,c
 46608  001358  0100               	movlb	0	; () banked
 46609  00135A  6FE4               	movwf	_crcObj& (0+255),b
 46610                           
 46611                           ; BSR set to: 0
 46612                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 46613  00135C  0139               	movlb	57	; () banked
 46614  00135E  5169               	movf	105,w,b	;volatile
 46615  001360  0B0F               	andlw	15
 46616  001362  6E35               	movwf	(btemp+11)^0,c
 46617  001364  2835               	incf	(btemp+11)^0,w,c
 46618  001366  0100               	movlb	0	; () banked
 46619  001368  6FE5               	movwf	(_crcObj+1)& (0+255),b
 46620                           
 46621                           ; BSR set to: 0
 46622                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46623  00136A  52E5               	movf	postdec1,f,c
 46624  00136C  52E5               	movf	postdec1,f,c
 46625  00136E  52E5               	movf	postdec1,f,c
 46626  001370  52E5               	movf	postdec1,f,c
 46627  001372  0012               	return		;funcret
 46628  001374                     __end_of_CRC_Initialize:
 46629                           	opt callstack 0
 46630                           
 46631 ;; *************** function _CLKREF_Initialize *****************
 46632 ;; Defined at:
 46633 ;;		line 58 in file "mcc_generated_files/clkref.c"
 46634 ;; Parameters:    Size  Location     Type
 46635 ;;		None
 46636 ;; Auto vars:     Size  Location     Type
 46637 ;;		None
 46638 ;; Return value:  Size  Location     Type
 46639 ;;                  1  [STACK] void 
 46640 ;; Registers used:
 46641 ;;		wreg, status,2
 46642 ;; Tracked objects:
 46643 ;;		On entry : 3F/3B
 46644 ;;		On exit  : 3F/3C
 46645 ;;		Unchanged: 0/0
 46646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46651 ;;Total ram usage:        0 bytes
 46652 ;; Hardware stack levels used:    1
 46653 ;; Hardware stack levels required when called:   15
 46654 ;; This function calls:
 46655 ;;		Nothing
 46656 ;; This function is called by:
 46657 ;;		_SYSTEM_Initialize
 46658 ;; This function uses a reentrant model
 46659 ;;
 46660                           
 46661                           	psect	text181
 46662  002CFE                     __ptext181:
 46663                           	opt callstack 0
 46664  002CFE                     _CLKREF_Initialize:
 46665                           	opt callstack 14
 46666                           
 46667                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 46668                           
 46669                           ; BSR set to: 0
 46670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46671                           ;incstack = 0
 46672  002CFE  013C               	movlb	60	; () banked
 46673  002D00  6BE6               	clrf	230,b	;volatile
 46674                           
 46675                           ; BSR set to: 60
 46676                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 46677  002D02  0E94               	movlw	148
 46678  002D04  6FE5               	movwf	229,b	;volatile
 46679                           
 46680                           ; BSR set to: 60
 46681                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46682  002D06  0012               	return		;funcret
 46683  002D08                     __end_of_CLKREF_Initialize:
 46684                           	opt callstack 0
 46685                           
 46686 ;; *************** function _ADCC_Initialize *****************
 46687 ;; Defined at:
 46688 ;;		line 65 in file "mcc_generated_files/adcc.c"
 46689 ;; Parameters:    Size  Location     Type
 46690 ;;		None
 46691 ;; Auto vars:     Size  Location     Type
 46692 ;;		None
 46693 ;; Return value:  Size  Location     Type
 46694 ;;                  1  [STACK] void 
 46695 ;; Registers used:
 46696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 46697 ;; Tracked objects:
 46698 ;;		On entry : 3F/0
 46699 ;;		On exit  : 0/0
 46700 ;;		Unchanged: 0/0
 46701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46706 ;;Total ram usage:        0 bytes
 46707 ;; Hardware stack levels used:    1
 46708 ;; Hardware stack levels required when called:   16
 46709 ;; This function calls:
 46710 ;;		_ADCC_SetADIInterruptHandler
 46711 ;;		_ADCC_SetADTIInterruptHandler
 46712 ;; This function is called by:
 46713 ;;		_SYSTEM_Initialize
 46714 ;; This function uses a reentrant model
 46715 ;;
 46716                           
 46717                           	psect	text182
 46718  001850                     __ptext182:
 46719                           	opt callstack 0
 46720  001850                     _ADCC_Initialize:
 46721                           	opt callstack 13
 46722                           
 46723                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 46724                           
 46725                           ; BSR set to: 60
 46726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46727                           ;incstack = 0
 46728  001850  013E               	movlb	62	; () banked
 46729  001852  6BDE               	clrf	222,b	;volatile
 46730                           
 46731                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 46732  001854  6BDF               	clrf	223,b	;volatile
 46733                           
 46734                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 46735  001856  6BE0               	clrf	224,b	;volatile
 46736                           
 46737                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 46738  001858  6BE1               	clrf	225,b	;volatile
 46739                           
 46740                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 46741  00185A  6BE4               	clrf	228,b	;volatile
 46742                           
 46743                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 46744  00185C  6BE5               	clrf	229,b	;volatile
 46745                           
 46746                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 46747  00185E  6BEA               	clrf	234,b	;volatile
 46748                           
 46749                           ; BSR set to: 62
 46750                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 46751  001860  0E40               	movlw	64
 46752  001862  6FEC               	movwf	236,b	;volatile
 46753                           
 46754                           ; BSR set to: 62
 46755                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 46756  001864  6BF1               	clrf	241,b	;volatile
 46757                           
 46758                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 46759  001866  0E20               	movlw	32
 46760  001868  6FF3               	movwf	243,b	;volatile
 46761                           
 46762                           ; BSR set to: 62
 46763                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 46764  00186A  6BF4               	clrf	244,b	;volatile
 46765                           
 46766                           ; BSR set to: 62
 46767                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 46768  00186C  6BF5               	clrf	245,b	;volatile
 46769                           
 46770                           ; BSR set to: 62
 46771                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 46772  00186E  6BF6               	clrf	246,b	;volatile
 46773                           
 46774                           ; BSR set to: 62
 46775                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 46776  001870  6BF7               	clrf	247,b	;volatile
 46777                           
 46778                           ; BSR set to: 62
 46779                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 46780  001872  6BF9               	clrf	249,b	;volatile
 46781                           
 46782                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 46783  001874  0E5B               	movlw	91
 46784  001876  6FFA               	movwf	250,b	;volatile
 46785                           
 46786                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 46787  001878  0E27               	movlw	39
 46788  00187A  6FFB               	movwf	251,b	;volatile
 46789                           
 46790                           ; BSR set to: 62
 46791                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 46792  00187C  6BFC               	clrf	252,b	;volatile
 46793                           
 46794                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 46795  00187E  0E02               	movlw	2
 46796  001880  6FFD               	movwf	253,b	;volatile
 46797                           
 46798                           ; BSR set to: 62
 46799                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 46800  001882  6BFE               	clrf	254,b	;volatile
 46801                           
 46802                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 46803  001884  0E07               	movlw	7
 46804  001886  6FFF               	movwf	255,b	;volatile
 46805                           
 46806                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 46807  001888  0E84               	movlw	132
 46808  00188A  6FF8               	movwf	248,b	;volatile
 46809                           
 46810                           ; BSR set to: 62
 46811                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 46812  00188C  0139               	movlb	57	; () banked
 46813  00188E  95A1               	bcf	161,2,b	;volatile
 46814                           
 46815                           ; BSR set to: 57
 46816                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 46817  001890  8591               	bsf	145,2,b	;volatile
 46818                           
 46819                           ; BSR set to: 57
 46820                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 46821  001892  0E90               	movlw	low _ADCC_DefaultInterruptHandler
 46822  001894  6EE6               	movwf	postinc1,c
 46823  001896  0E2D               	movlw	high _ADCC_DefaultInterruptHandler
 46824  001898  6EE6               	movwf	postinc1,c
 46825  00189A  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46826  00189C  6EE6               	movwf	postinc1,c
 46827  00189E  EC75  F014         	call	_ADCC_SetADIInterruptHandler	;wreg free
 46828                           
 46829                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 46830  0018A2  0139               	movlb	57	; () banked
 46831  0018A4  97A1               	bcf	161,3,b	;volatile
 46832                           
 46833                           ; BSR set to: 57
 46834                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 46835  0018A6  8791               	bsf	145,3,b	;volatile
 46836                           
 46837                           ; BSR set to: 57
 46838                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 46839  0018A8  0E90               	movlw	low _ADCC_DefaultInterruptHandler
 46840  0018AA  6EE6               	movwf	postinc1,c
 46841  0018AC  0E2D               	movlw	high _ADCC_DefaultInterruptHandler
 46842  0018AE  6EE6               	movwf	postinc1,c
 46843  0018B0  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46844  0018B2  6EE6               	movwf	postinc1,c
 46845  0018B4  EC61  F014         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 46846                           
 46847                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46848  0018B8  0012               	return		;funcret
 46849  0018BA                     __end_of_ADCC_Initialize:
 46850                           	opt callstack 0
 46851                           
 46852 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 46853 ;; Defined at:
 46854 ;;		line 336 in file "mcc_generated_files/adcc.c"
 46855 ;; Parameters:    Size  Location     Type
 46856 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46857 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 46858 ;; Auto vars:     Size  Location     Type
 46859 ;;		None
 46860 ;; Return value:  Size  Location     Type
 46861 ;;                  1  [STACK] void 
 46862 ;; Registers used:
 46863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46864 ;; Tracked objects:
 46865 ;;		On entry : 0/1
 46866 ;;		On exit  : 0/0
 46867 ;;		Unchanged: 0/0
 46868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46873 ;;Total ram usage:        0 bytes
 46874 ;; Hardware stack levels used:    1
 46875 ;; Hardware stack levels required when called:   15
 46876 ;; This function calls:
 46877 ;;		Nothing
 46878 ;; This function is called by:
 46879 ;;		_ADCC_Initialize
 46880 ;;		_start_adc_scan
 46881 ;; This function uses a reentrant model
 46882 ;;
 46883                           
 46884                           	psect	text183
 46885  0028C2                     __ptext183:
 46886                           	opt callstack 0
 46887  0028C2                     _ADCC_SetADTIInterruptHandler:
 46888                           	opt callstack 14
 46889                           
 46890                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 46891                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46892                           
 46893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46894                           ;incstack = 0
 46895  0028C2  50E1               	movf	fsr1l,w,c
 46896  0028C4  0FFD               	addlw	-3
 46897  0028C6  6ED9               	movwf	fsr2l,c
 46898  0028C8  50E2               	movf	fsr1h,w,c
 46899  0028CA  6EDA               	movwf	fsr2h,c
 46900  0028CC  0EFF               	movlw	255
 46901  0028CE  22DA               	addwfc	fsr2h,f,c
 46902  0028D0  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 46903  0028D6  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 46904  0028DC  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 46905                           
 46906                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 46907  0028E2  52E5               	movf	postdec1,f,c
 46908  0028E4  52E5               	movf	postdec1,f,c
 46909  0028E6  52E5               	movf	postdec1,f,c
 46910  0028E8  0012               	return		;funcret
 46911  0028EA                     __end_of_ADCC_SetADTIInterruptHandler:
 46912                           	opt callstack 0
 46913                           
 46914 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 46915 ;; Defined at:
 46916 ;;		line 323 in file "mcc_generated_files/adcc.c"
 46917 ;; Parameters:    Size  Location     Type
 46918 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46919 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 46920 ;; Auto vars:     Size  Location     Type
 46921 ;;		None
 46922 ;; Return value:  Size  Location     Type
 46923 ;;                  1  [STACK] void 
 46924 ;; Registers used:
 46925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46926 ;; Tracked objects:
 46927 ;;		On entry : 7/1
 46928 ;;		On exit  : 0/0
 46929 ;;		Unchanged: 0/0
 46930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46935 ;;Total ram usage:        0 bytes
 46936 ;; Hardware stack levels used:    1
 46937 ;; Hardware stack levels required when called:   15
 46938 ;; This function calls:
 46939 ;;		Nothing
 46940 ;; This function is called by:
 46941 ;;		_ADCC_Initialize
 46942 ;;		_start_adc_scan
 46943 ;; This function uses a reentrant model
 46944 ;;
 46945                           
 46946                           	psect	text184
 46947  0028EA                     __ptext184:
 46948                           	opt callstack 0
 46949  0028EA                     _ADCC_SetADIInterruptHandler:
 46950                           	opt callstack 14
 46951                           
 46952                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 46953                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46954                           
 46955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46956                           ;incstack = 0
 46957  0028EA  50E1               	movf	fsr1l,w,c
 46958  0028EC  0FFD               	addlw	-3
 46959  0028EE  6ED9               	movwf	fsr2l,c
 46960  0028F0  50E2               	movf	fsr1h,w,c
 46961  0028F2  6EDA               	movwf	fsr2h,c
 46962  0028F4  0EFF               	movlw	255
 46963  0028F6  22DA               	addwfc	fsr2h,f,c
 46964  0028F8  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 46965  0028FE  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 46966  002904  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 46967                           
 46968                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 46969  00290A  52E5               	movf	postdec1,f,c
 46970  00290C  52E5               	movf	postdec1,f,c
 46971  00290E  52E5               	movf	postdec1,f,c
 46972  002910  0012               	return		;funcret
 46973  002912                     __end_of_ADCC_SetADIInterruptHandler:
 46974                           	opt callstack 0
 46975                           
 46976 ;; *************** function _INT1_ISR *****************
 46977 ;; Defined at:
 46978 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 46979 ;; Parameters:    Size  Location     Type
 46980 ;;		None
 46981 ;; Auto vars:     Size  Location     Type
 46982 ;;		None
 46983 ;; Return value:  Size  Location     Type
 46984 ;;                  1    wreg      void 
 46985 ;; Registers used:
 46986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46987 ;; Tracked objects:
 46988 ;;		On entry : 0/0
 46989 ;;		On exit  : 0/0
 46990 ;;		Unchanged: 0/0
 46991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46994 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46996 ;;Total ram usage:        4 bytes
 46997 ;; Hardware stack levels used:    1
 46998 ;; Hardware stack levels required when called:    5
 46999 ;; This function calls:
 47000 ;;		_INT1_CallBack
 47001 ;; This function is called by:
 47002 ;;		Interrupt level 1
 47003 ;; This function uses a non-reentrant model
 47004 ;;
 47005                           
 47006                           	psect	text185
 47007  002300                     __ptext185:
 47008                           	opt callstack 0
 47009  002300                     _INT1_ISR:
 47010                           	opt callstack 12
 47011                           
 47012                           ;incstack = 0
 47013  002300  006F FF60  F007    	movff	status,??_INT1_ISR
 47014  002306  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 47015  00230C  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 47016  002312  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 47017  002318  EE16  F196         	lfsr	1,___intlo_sp
 47018                           
 47019                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 47020  00231C  0139               	movlb	57	; () banked
 47021  00231E  91A5               	bcf	165,0,b	;volatile
 47022                           
 47023                           ; BSR set to: 57
 47024                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 47025  002320  ECD8  F014         	call	_INT1_CallBack	;wreg free
 47026  002324  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 47027  00232A  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 47028  002330  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 47029  002336  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 47030  00233C  0011               	retfie		f
 47031  00233E                     __end_of_INT1_ISR:
 47032                           	opt callstack 0
 47033                           
 47034 ;; *************** function _INT1_CallBack *****************
 47035 ;; Defined at:
 47036 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 47037 ;; Parameters:    Size  Location     Type
 47038 ;;		None
 47039 ;; Auto vars:     Size  Location     Type
 47040 ;;		None
 47041 ;; Return value:  Size  Location     Type
 47042 ;;                  1  [STACK] void 
 47043 ;; Registers used:
 47044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 47045 ;; Tracked objects:
 47046 ;;		On entry : 3F/39
 47047 ;;		On exit  : 0/0
 47048 ;;		Unchanged: 0/0
 47049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47054 ;;Total ram usage:        0 bytes
 47055 ;; Hardware stack levels used:    1
 47056 ;; Hardware stack levels required when called:    4
 47057 ;; This function calls:
 47058 ;;		Absolute function
 47059 ;;		_INT1_DefaultInterruptHandler
 47060 ;;		_switch_handler
 47061 ;; This function is called by:
 47062 ;;		_INT1_ISR
 47063 ;; This function uses a reentrant model
 47064 ;;
 47065                           
 47066                           	psect	text186
 47067  0029B0                     __ptext186:
 47068                           	opt callstack 0
 47069  0029B0                     _INT1_CallBack:
 47070                           	opt callstack 12
 47071                           
 47072                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 47073                           
 47074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47075                           ;incstack = 0
 47076  0029B0  0100               	movlb	0	; () banked
 47077  0029B2  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47078  0029B4  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47079  0029B6  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47080  0029B8  B4D8               	btfsc	status,2,c
 47081  0029BA  0012               	return	
 47082                           
 47083                           ; BSR set to: 0
 47084                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 47085  0029BC  D801               	call	u1315_28
 47086  0029BE  0012               	return	
 47087  0029C0                     u1315_28:
 47088  0029C0  0005               	push	
 47089  0029C2  6EFA               	movwf	pclath,c
 47090  0029C4  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47091  0029C6  6EFD               	movwf	tosl,c
 47092  0029C8  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47093  0029CA  6EFE               	movwf	tosh,c
 47094  0029CC  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47095  0029CE  6EFF               	movwf	tosu,c
 47096  0029D0  50FA               	movf	pclath,w,c
 47097  0029D2  0012               	return		;indir
 47098  0029D4                     __end_of_INT1_CallBack:
 47099                           	opt callstack 0
 47100                           
 47101 ;; *************** function _INT1_DefaultInterruptHandler *****************
 47102 ;; Defined at:
 47103 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 47104 ;; Parameters:    Size  Location     Type
 47105 ;;		None
 47106 ;; Auto vars:     Size  Location     Type
 47107 ;;		None
 47108 ;; Return value:  Size  Location     Type
 47109 ;;                  1  [STACK] void 
 47110 ;; Registers used:
 47111 ;;		None
 47112 ;; Tracked objects:
 47113 ;;		On entry : 3F/0
 47114 ;;		On exit  : 0/0
 47115 ;;		Unchanged: 0/0
 47116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47121 ;;Total ram usage:        0 bytes
 47122 ;; Hardware stack levels used:    1
 47123 ;; Hardware stack levels required when called:    3
 47124 ;; This function calls:
 47125 ;;		Nothing
 47126 ;; This function is called by:
 47127 ;;		_EXT_INT_Initialize
 47128 ;;		_INT1_CallBack
 47129 ;; This function uses a reentrant model
 47130 ;;
 47131                           
 47132                           	psect	text187
 47133  002D8A                     __ptext187:
 47134                           	opt callstack 0
 47135  002D8A                     _INT1_DefaultInterruptHandler:
 47136                           	opt callstack 12
 47137                           
 47138                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47139                           
 47140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47141                           ;incstack = 0
 47142  002D8A  0012               	return		;funcret
 47143  002D8C                     __end_of_INT1_DefaultInterruptHandler:
 47144                           	opt callstack 0
 47145                           
 47146 ;; *************** function _switch_handler *****************
 47147 ;; Defined at:
 47148 ;;		line 58 in file "dio.c"
 47149 ;; Parameters:    Size  Location     Type
 47150 ;;		None
 47151 ;; Auto vars:     Size  Location     Type
 47152 ;;  i               1  [STACK] unsigned char 
 47153 ;;  sw_value        1  [STACK] unsigned char 
 47154 ;; Return value:  Size  Location     Type
 47155 ;;                  1  [STACK] void 
 47156 ;; Registers used:
 47157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 47158 ;; Tracked objects:
 47159 ;;		On entry : 3F/0
 47160 ;;		On exit  : 0/0
 47161 ;;		Unchanged: 0/0
 47162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47167 ;;Total ram usage:        0 bytes
 47168 ;; Hardware stack levels used:    1
 47169 ;; Hardware stack levels required when called:    3
 47170 ;; This function calls:
 47171 ;;		Nothing
 47172 ;; This function is called by:
 47173 ;;		_start_switch_handler
 47174 ;;		_INT1_CallBack
 47175 ;; This function uses a reentrant model
 47176 ;;
 47177                           
 47178                           	psect	text188
 47179  01F48E                     __ptext188:
 47180                           	opt callstack 0
 47181  01F48E                     _switch_handler:
 47182                           	opt callstack 0
 47183                           
 47184                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47185  01F48E  52E6               	movf	postinc1,f,c
 47186  01F490  52E6               	movf	postinc1,f,c
 47187                           
 47188                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 47189                           ;stkvar	_i @ sp[(-2)+0]
 47190                           
 47191                           ;incstack = 0
 47192  01F492  0EFE               	movlw	-2
 47193  01F494  6AE3               	clrf	plusw1,c
 47194  01F496  9ABF               	bcf	191,5,c	;volatile
 47195                           
 47196                           ;dio.c: 72:  __nop();
 47197  01F498  F000               	nop	
 47198                           
 47199                           ;dio.c: 73:  __nop();
 47200  01F49A  F000               	nop	
 47201                           
 47202                           ;dio.c: 74:  __nop();
 47203  01F49C  F000               	nop	
 47204                           
 47205                           ;dio.c: 75:  __nop();
 47206  01F49E  F000               	nop	
 47207                           
 47208                           ;dio.c: 76:  __nop();
 47209  01F4A0  F000               	nop	
 47210                           
 47211                           ;dio.c: 77:  __nop();
 47212  01F4A2  F000               	nop	
 47213  01F4A4  D016               	goto	l13770
 47214  01F4A6                     l13756:
 47215                           
 47216                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 47217  01F4A6  A6CF               	btfss	207,3,c	;volatile
 47218  01F4A8  D00E               	goto	u1281_20
 47219  01F4AA  D00A               	goto	u1281_21
 47220  01F4AC                     u1279_28:
 47221                           
 47222                           ;stkvar	_sw_value @ sp[(-2)+1]
 47223  01F4AC  0EFF               	movlw	-1
 47224  01F4AE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47225                           
 47226                           ;dio.c: 83:    break;
 47227  01F4B4  D027               	goto	l13772
 47228  01F4B6                     l13758:
 47229                           
 47230                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 47231  01F4B6  A4CF               	btfss	207,2,c	;volatile
 47232  01F4B8  D006               	goto	u1281_20
 47233  01F4BA  D002               	goto	u1281_21
 47234  01F4BC                     l13760:
 47235                           
 47236                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 47237  01F4BC  A6CD               	btfss	205,3,c	;volatile
 47238  01F4BE  D003               	goto	u1281_20
 47239  01F4C0                     u1281_21:
 47240  01F4C0  6A35               	clrf	(btemp+11)^0,c
 47241  01F4C2  2A35               	incf	(btemp+11)^0,f,c
 47242  01F4C4  D7F3               	goto	u1279_28
 47243  01F4C6                     u1281_20:
 47244  01F4C6  6A35               	clrf	(btemp+11)^0,c
 47245  01F4C8  D7F1               	goto	u1279_28
 47246  01F4CA                     l13762:
 47247                           
 47248                           ;dio.c: 91:    sw_value = 1;
 47249                           ;stkvar	_sw_value @ sp[(-2)+1]
 47250  01F4CA  0EFF               	movlw	-1
 47251  01F4CC  6AE3               	clrf	plusw1,c
 47252  01F4CE  2AE3               	incf	plusw1,f,c
 47253                           
 47254                           ;dio.c: 92:    break;
 47255  01F4D0  D019               	goto	l13772
 47256  01F4D2                     l13770:
 47257                           
 47258                           ;stkvar	_i @ sp[(-2)+0]
 47259  01F4D2  0EFE               	movlw	-2
 47260  01F4D4  50E3               	movf	plusw1,w,c
 47261  01F4D6  6E34               	movwf	(btemp+10)^0,c
 47262  01F4D8  6A35               	clrf	(btemp+11)^0,c
 47263                           
 47264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 47265                           ; Switch size 1, requested type "simple"
 47266                           ; Number of cases is 1, Range of values is 0 to 0
 47267                           ; switch strategies available:
 47268                           ; Name         Instructions Cycles
 47269                           ; simple_byte            4     3 (average)
 47270                           ;	Chosen strategy is simple_byte
 47271  01F4DA  5035               	movf	(btemp+11)^0,w,c
 47272  01F4DC  0A00               	xorlw	0	; case 0
 47273  01F4DE  A4D8               	btfss	status,2,c
 47274  01F4E0  D7F4               	goto	l13762
 47275                           
 47276                           ; Switch size 1, requested type "simple"
 47277                           ; Number of cases is 5, Range of values is 0 to 4
 47278                           ; switch strategies available:
 47279                           ; Name         Instructions Cycles
 47280                           ; simple_byte           16     9 (average)
 47281                           ;	Chosen strategy is simple_byte
 47282  01F4E2  5034               	movf	(btemp+10)^0,w,c
 47283  01F4E4  0A00               	xorlw	0	; case 0
 47284  01F4E6  B4D8               	btfsc	status,2,c
 47285  01F4E8  D7F0               	goto	l13762
 47286  01F4EA  0A01               	xorlw	1	; case 1
 47287  01F4EC  B4D8               	btfsc	status,2,c
 47288  01F4EE  D7ED               	goto	l13762
 47289  01F4F0  0A03               	xorlw	3	; case 2
 47290  01F4F2  B4D8               	btfsc	status,2,c
 47291  01F4F4  D7E0               	goto	l13758
 47292  01F4F6  0A01               	xorlw	1	; case 3
 47293  01F4F8  B4D8               	btfsc	status,2,c
 47294  01F4FA  D7D5               	goto	l13756
 47295  01F4FC  0A07               	xorlw	7	; case 4
 47296  01F4FE  B4D8               	btfsc	status,2,c
 47297  01F500  D7DD               	goto	l13760
 47298  01F502  D7E3               	goto	l13762
 47299  01F504                     l13772:
 47300                           
 47301                           ;dio.c: 102:   if (sw_value) {
 47302                           ;stkvar	_sw_value @ sp[(-2)+1]
 47303  01F504  0EFF               	movlw	-1
 47304  01F506  50E3               	movf	plusw1,w,c
 47305  01F508  B4D8               	btfsc	status,2,c
 47306  01F50A  D018               	goto	l13778
 47307                           
 47308                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 47309                           ;stkvar	_i @ sp[(-2)+0]
 47310  01F50C  0EFE               	movlw	-2
 47311  01F50E  50E3               	movf	plusw1,w,c
 47312  01F510  0D05               	mullw	5
 47313  01F512  0EA4               	movlw	low _S
 47314  01F514  24F3               	addwf	243,w,c
 47315  01F516  6ED9               	movwf	fsr2l,c
 47316  01F518  0E01               	movlw	high _S
 47317  01F51A  20F4               	addwfc	prodh,w,c
 47318  01F51C  6EDA               	movwf	fsr2h,c
 47319  01F51E  04DE               	decf	postinc2,w,c
 47320  01F520  A4D8               	btfss	status,2,c
 47321  01F522  D049               	goto	l13786
 47322                           
 47323                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 47324                           ;stkvar	_i @ sp[(-2)+0]
 47325  01F524  0EFE               	movlw	-2
 47326  01F526  50E3               	movf	plusw1,w,c
 47327  01F528  0D05               	mullw	5
 47328  01F52A  0EA4               	movlw	low _S
 47329  01F52C  24F3               	addwf	243,w,c
 47330  01F52E  6ED9               	movwf	fsr2l,c
 47331  01F530  0E01               	movlw	high _S
 47332  01F532  20F4               	addwfc	prodh,w,c
 47333  01F534  6EDA               	movwf	fsr2h,c
 47334  01F536  0E00               	movlw	0
 47335  01F538  6EDF               	movwf	indf2,c
 47336  01F53A  D03D               	goto	l13786
 47337  01F53C                     l13778:
 47338                           
 47339                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 47340                           ;stkvar	_i @ sp[(-2)+0]
 47341  01F53C  0EFE               	movlw	-2
 47342  01F53E  50E3               	movf	plusw1,w,c
 47343  01F540  0D05               	mullw	5
 47344  01F542  0EA4               	movlw	low _S
 47345  01F544  24F3               	addwf	243,w,c
 47346  01F546  6ED9               	movwf	fsr2l,c
 47347  01F548  0E01               	movlw	high _S
 47348  01F54A  20F4               	addwfc	prodh,w,c
 47349  01F54C  6EDA               	movwf	fsr2h,c
 47350  01F54E  50DF               	movf	indf2,w,c
 47351  01F550  A4D8               	btfss	status,2,c
 47352  01F552  D031               	goto	l13786
 47353                           
 47354                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 47355                           ;stkvar	_i @ sp[(-2)+0]
 47356  01F554  0EFE               	movlw	-2
 47357  01F556  50E3               	movf	plusw1,w,c
 47358  01F558  0D05               	mullw	5
 47359  01F55A  0EA4               	movlw	low _S
 47360  01F55C  24F3               	addwf	243,w,c
 47361  01F55E  6ED9               	movwf	fsr2l,c
 47362  01F560  0E01               	movlw	high _S
 47363  01F562  20F4               	addwfc	prodh,w,c
 47364  01F564  6EDA               	movwf	fsr2h,c
 47365  01F566  0E01               	movlw	1
 47366  01F568  6EDF               	movwf	indf2,c
 47367                           
 47368                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 47369  01F56A  EE20  F2B8         	lfsr	2,_V+177	;volatile
 47370                           
 47371                           ;stkvar	_i @ sp[(-2)+0]
 47372  01F56E  0EFE               	movlw	-2
 47373  01F570  50E3               	movf	plusw1,w,c
 47374  01F572  0D05               	mullw	5
 47375  01F574  0EA5               	movlw	low (_S+1)
 47376  01F576  24F3               	addwf	243,w,c
 47377  01F578  6EE9               	movwf	fsr0l,c
 47378  01F57A  0E01               	movlw	high (_S+1)
 47379  01F57C  20F4               	addwfc	prodh,w,c
 47380  01F57E  6EEA               	movwf	fsr0h,c
 47381  01F580  006F FF7B FFEE     	movff	postinc2,postinc0
 47382  01F586  006F FF7B FFEE     	movff	postinc2,postinc0
 47383  01F58C  006F FF7B FFEE     	movff	postinc2,postinc0
 47384  01F592  006F FF7B FFEE     	movff	postinc2,postinc0
 47385                           
 47386                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 47387                           ;stkvar	_i @ sp[(-2)+0]
 47388  01F598  0EFE               	movlw	-2
 47389  01F59A  006F FF8C  F035    	movff	plusw1,btemp+11
 47390  01F5A0  0E01               	movlw	1
 47391  01F5A2  6E34               	movwf	(btemp+10)^0,c
 47392  01F5A4  2A35               	incf	(btemp+11)^0,f,c
 47393  01F5A6  D002               	goto	u1285_24
 47394  01F5A8                     u1285_25:
 47395  01F5A8  90D8               	bcf	status,0,c
 47396  01F5AA  3634               	rlcf	(btemp+10)^0,f,c
 47397  01F5AC                     u1285_24:
 47398  01F5AC  2E35               	decfsz	(btemp+11)^0,f,c
 47399  01F5AE  D7FC               	goto	u1285_25
 47400  01F5B0  5034               	movf	(btemp+10)^0,w,c
 47401  01F5B2  0101               	movlb	1	; () banked
 47402  01F5B4  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 47403  01F5B6                     l13786:
 47404                           
 47405                           ;dio.c: 113:  } while (++i < 6);
 47406                           ;stkvar	_i @ sp[(-2)+0]
 47407  01F5B6  0EFE               	movlw	-2
 47408  01F5B8  2AE3               	incf	plusw1,f,c
 47409  01F5BA  0EFE               	movlw	-2
 47410  01F5BC  006F FF8C  F02A    	movff	plusw1,btemp
 47411  01F5C2  0E05               	movlw	5
 47412  01F5C4  642A               	cpfsgt	btemp^0,c
 47413  01F5C6  D785               	goto	l13770
 47414                           
 47415                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 47416  01F5C8  8ABF               	bsf	191,5,c	;volatile
 47417                           
 47418                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47419  01F5CA  52E5               	movf	postdec1,f,c
 47420  01F5CC  52E5               	movf	postdec1,f,c
 47421  01F5CE  0012               	return		;funcret
 47422  01F5D0                     __end_of_switch_handler:
 47423                           	opt callstack 0
 47424                           
 47425 ;; *************** function _TMR5_ISR *****************
 47426 ;; Defined at:
 47427 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 47428 ;; Parameters:    Size  Location     Type
 47429 ;;		None
 47430 ;; Auto vars:     Size  Location     Type
 47431 ;;		None
 47432 ;; Return value:  Size  Location     Type
 47433 ;;                  1    wreg      void 
 47434 ;; Registers used:
 47435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47436 ;; Tracked objects:
 47437 ;;		On entry : 0/0
 47438 ;;		On exit  : 3F/0
 47439 ;;		Unchanged: 0/0
 47440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47443 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47444 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47445 ;;Total ram usage:       31 bytes
 47446 ;; Hardware stack levels used:    1
 47447 ;; Hardware stack levels required when called:    9
 47448 ;; This function calls:
 47449 ;;		_TMR5_CallBack
 47450 ;;		_TMR5_WriteTimer
 47451 ;; This function is called by:
 47452 ;;		Interrupt level 1
 47453 ;; This function uses a non-reentrant model
 47454 ;;
 47455                           
 47456                           	psect	text189
 47457  01DEC0                     __ptext189:
 47458                           	opt callstack 0
 47459  01DEC0                     _TMR5_ISR:
 47460                           	opt callstack 8
 47461                           
 47462                           ;incstack = 0
 47463  01DEC0  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 47464  01DEC6  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 47465  01DECC  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 47466  01DED2  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 47467  01DED8  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 47468  01DEDE  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 47469  01DEE4  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 47470  01DEEA  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 47471  01DEF0  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 47472  01DEF6  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 47473  01DEFC  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 47474  01DF02  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 47475  01DF08  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 47476  01DF0E  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 47477  01DF14  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 47478  01DF1A  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 47479  01DF20  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 47480  01DF26  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 47481  01DF2C  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 47482  01DF32  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 47483  01DF38  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 47484  01DF3E  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 47485  01DF44  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 47486  01DF4A  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 47487  01DF50  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 47488  01DF56  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 47489  01DF5C  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 47490  01DF62  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 47491  01DF68  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 47492  01DF6E  EE16  F196         	lfsr	1,___intlo_sp
 47493                           
 47494                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 47495  01DF72  0139               	movlb	57	; () banked
 47496  01DF74  9DA8               	bcf	168,6,b	;volatile
 47497                           
 47498                           ; BSR set to: 57
 47499                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 47500  01DF76  0060  F31B  FFE6   	movff	_timer5ReloadVal,postinc1
 47501  01DF7C  0060  F31F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 47502  01DF82  EC40  F011         	call	_TMR5_WriteTimer	;wreg free
 47503                           
 47504                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 47505  01DF86  0102               	movlb	2	; () banked
 47506  01DF88  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 47507  01DF8A  6E0B               	movwf	??_TMR5_ISR^0,c
 47508  01DF8C  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 47509  01DF8E  0E05               	movlw	5
 47510  01DF90  260B               	addwf	??_TMR5_ISR^0,f,c
 47511  01DF92  0E00               	movlw	0
 47512  01DF94  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 47513  01DF96  0100               	movlb	0	; () banked
 47514  01DF98  4BC4               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 47515  01DF9A  2BC5               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47516  01DF9C  500B               	movf	??_TMR5_ISR^0,w,c
 47517  01DF9E  5DC4               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 47518  01DFA0  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 47519  01DFA2  59C5               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47520  01DFA4  A0D8               	btfss	status,0,c
 47521  01DFA6  D005               	goto	i1l1021
 47522                           
 47523                           ; BSR set to: 0
 47524                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 47525  01DFA8  ECEA  F014         	call	_TMR5_CallBack	;wreg free
 47526                           
 47527                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 47528  01DFAC  0100               	movlb	0	; () banked
 47529  01DFAE  6BC4               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 47530  01DFB0  6BC5               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 47531  01DFB2                     i1l1021:
 47532                           
 47533                           ; BSR set to: 0
 47534  01DFB2  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 47535  01DFB8  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 47536  01DFBE  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 47537  01DFC4  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 47538  01DFCA  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 47539  01DFD0  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 47540  01DFD6  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 47541  01DFDC  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 47542  01DFE2  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 47543  01DFE8  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 47544  01DFEE  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 47545  01DFF4  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 47546  01DFFA  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 47547  01E000  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 47548  01E006  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 47549  01E00C  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 47550  01E012  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 47551  01E018  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 47552  01E01E  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 47553  01E024  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 47554  01E02A  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 47555  01E030  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 47556  01E036  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 47557  01E03C  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 47558  01E042  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 47559  01E048  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 47560  01E04E  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 47561  01E054  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 47562  01E05A  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 47563  01E060  0011               	retfie		f
 47564  01E062                     __end_of_TMR5_ISR:
 47565                           	opt callstack 0
 47566                           
 47567 ;; *************** function _TMR5_WriteTimer *****************
 47568 ;; Defined at:
 47569 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 47570 ;; Parameters:    Size  Location     Type
 47571 ;;  timerVal        2  [STACK] unsigned short 
 47572 ;; Auto vars:     Size  Location     Type
 47573 ;;		None
 47574 ;; Return value:  Size  Location     Type
 47575 ;;                  1  [STACK] void 
 47576 ;; Registers used:
 47577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47578 ;; Tracked objects:
 47579 ;;		On entry : 3F/39
 47580 ;;		On exit  : 0/0
 47581 ;;		Unchanged: 0/0
 47582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47587 ;;Total ram usage:        0 bytes
 47588 ;; Hardware stack levels used:    1
 47589 ;; Hardware stack levels required when called:    3
 47590 ;; This function calls:
 47591 ;;		Nothing
 47592 ;; This function is called by:
 47593 ;;		_TMR5_ISR
 47594 ;; This function uses a reentrant model
 47595 ;;
 47596                           
 47597                           	psect	text190
 47598  002280                     __ptext190:
 47599                           	opt callstack 0
 47600  002280                     _TMR5_WriteTimer:
 47601                           	opt callstack 13
 47602                           
 47603                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 47604                           
 47605                           ; BSR set to: 0
 47606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47607                           ;incstack = 0
 47608  002280  A49A               	btfss	154,2,c	;volatile
 47609  002282  D00F               	goto	l13998
 47610                           
 47611                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 47612  002284  909A               	bcf	154,0,c	;volatile
 47613                           
 47614                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 47615                           ;stkvar	_timerVal @ sp[(0)+-2]
 47616  002286  0EFF               	movlw	255
 47617  002288  24E1               	addwf	fsr1l,w,c
 47618  00228A  6ED9               	movwf	fsr2l,c
 47619  00228C  0EFF               	movlw	255
 47620  00228E  20E2               	addwfc	fsr1h,w,c
 47621  002290  6EDA               	movwf	fsr2h,c
 47622  002292  50DF               	movf	indf2,w,c
 47623  002294  6E99               	movwf	153,c	;volatile
 47624                           
 47625                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 47626                           ;stkvar	_timerVal @ sp[(0)+-2]
 47627  002296  0EFE               	movlw	-2
 47628  002298  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47629                           
 47630                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 47631  00229E  809A               	bsf	154,0,c	;volatile
 47632                           
 47633                           ;mcc_generated_files/tmr5.c: 144:  } else {
 47634  0022A0  D00C               	goto	l1004
 47635  0022A2                     l13998:
 47636                           
 47637                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 47638                           ;stkvar	_timerVal @ sp[(0)+-2]
 47639  0022A2  0EFF               	movlw	255
 47640  0022A4  24E1               	addwf	fsr1l,w,c
 47641  0022A6  6ED9               	movwf	fsr2l,c
 47642  0022A8  0EFF               	movlw	255
 47643  0022AA  20E2               	addwfc	fsr1h,w,c
 47644  0022AC  6EDA               	movwf	fsr2h,c
 47645  0022AE  50DF               	movf	indf2,w,c
 47646  0022B0  6E99               	movwf	153,c	;volatile
 47647                           
 47648                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 47649                           ;stkvar	_timerVal @ sp[(0)+-2]
 47650  0022B2  0EFE               	movlw	-2
 47651  0022B4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47652  0022BA                     l1004:
 47653                           
 47654                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47655  0022BA  52E5               	movf	postdec1,f,c
 47656  0022BC  52E5               	movf	postdec1,f,c
 47657  0022BE  0012               	return		;funcret
 47658  0022C0                     __end_of_TMR5_WriteTimer:
 47659                           	opt callstack 0
 47660                           
 47661 ;; *************** function _TMR5_CallBack *****************
 47662 ;; Defined at:
 47663 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 47664 ;; Parameters:    Size  Location     Type
 47665 ;;		None
 47666 ;; Auto vars:     Size  Location     Type
 47667 ;;		None
 47668 ;; Return value:  Size  Location     Type
 47669 ;;                  1  [STACK] void 
 47670 ;; Registers used:
 47671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47672 ;; Tracked objects:
 47673 ;;		On entry : 3F/0
 47674 ;;		On exit  : 0/0
 47675 ;;		Unchanged: 0/0
 47676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47681 ;;Total ram usage:        0 bytes
 47682 ;; Hardware stack levels used:    1
 47683 ;; Hardware stack levels required when called:    8
 47684 ;; This function calls:
 47685 ;;		Absolute function
 47686 ;;		_TMR5_DefaultInterruptHandler
 47687 ;; This function is called by:
 47688 ;;		_TMR5_ISR
 47689 ;; This function uses a reentrant model
 47690 ;;
 47691                           
 47692                           	psect	text191
 47693  0029D4                     __ptext191:
 47694                           	opt callstack 0
 47695  0029D4                     _TMR5_CallBack:
 47696                           	opt callstack 8
 47697                           
 47698                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 47699                           
 47700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47701                           ;incstack = 0
 47702  0029D4  0100               	movlb	0	; () banked
 47703  0029D6  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47704  0029D8  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47705  0029DA  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47706  0029DC  B4D8               	btfsc	status,2,c
 47707  0029DE  0012               	return	
 47708                           
 47709                           ; BSR set to: 0
 47710                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 47711  0029E0  D801               	call	u1324_28
 47712  0029E2  0012               	return	
 47713  0029E4                     u1324_28:
 47714  0029E4  0005               	push	
 47715  0029E6  6EFA               	movwf	pclath,c
 47716  0029E8  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47717  0029EA  6EFD               	movwf	tosl,c
 47718  0029EC  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47719  0029EE  6EFE               	movwf	tosh,c
 47720  0029F0  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47721  0029F2  6EFF               	movwf	tosu,c
 47722  0029F4  50FA               	movf	pclath,w,c
 47723  0029F6  0012               	return		;indir
 47724  0029F8                     __end_of_TMR5_CallBack:
 47725                           	opt callstack 0
 47726                           
 47727 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 47728 ;; Defined at:
 47729 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 47730 ;; Parameters:    Size  Location     Type
 47731 ;;		None
 47732 ;; Auto vars:     Size  Location     Type
 47733 ;;		None
 47734 ;; Return value:  Size  Location     Type
 47735 ;;                  1  [STACK] void 
 47736 ;; Registers used:
 47737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47738 ;; Tracked objects:
 47739 ;;		On entry : 3F/0
 47740 ;;		On exit  : 0/0
 47741 ;;		Unchanged: 0/0
 47742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47747 ;;Total ram usage:        0 bytes
 47748 ;; Hardware stack levels used:    1
 47749 ;; Hardware stack levels required when called:    7
 47750 ;; This function calls:
 47751 ;;		_check_day_time
 47752 ;; This function is called by:
 47753 ;;		_TMR5_Initialize
 47754 ;;		_TMR5_CallBack
 47755 ;; This function uses a reentrant model
 47756 ;;
 47757                           
 47758                           	psect	text192
 47759  002424                     __ptext192:
 47760                           	opt callstack 0
 47761  002424                     _TMR5_DefaultInterruptHandler:
 47762                           	opt callstack 8
 47763                           
 47764                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 47765                           
 47766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47767                           ;incstack = 0
 47768  002424  A0BE               	btfss	190,0,c	;volatile
 47769  002426  D002               	goto	u1250_20
 47770  002428  0E01               	movlw	1
 47771  00242A  D001               	goto	u1250_26
 47772  00242C                     u1250_20:
 47773  00242C  0E00               	movlw	0
 47774  00242E                     u1250_26:
 47775  00242E  0AFF               	xorlw	255
 47776  002430  6E35               	movwf	(btemp+11)^0,c
 47777  002432  50BE               	movf	190,w,c	;volatile
 47778  002434  1835               	xorwf	(btemp+11)^0,w,c
 47779  002436  0BFE               	andlw	-2
 47780  002438  1835               	xorwf	(btemp+11)^0,w,c
 47781  00243A  6EBE               	movwf	190,c	;volatile
 47782                           
 47783                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 47784  00243C  0E01               	movlw	1
 47785  00243E  0102               	movlb	2	; () banked
 47786  002440  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 47787  002442  0E00               	movlw	0
 47788  002444  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 47789  002446  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 47790  002448  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 47791                           
 47792                           ; BSR set to: 2
 47793                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 47794  00244A  0E01               	movlw	1
 47795  00244C  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 47796  00244E  0E00               	movlw	0
 47797  002450  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 47798  002452  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 47799  002454  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 47800                           
 47801                           ; BSR set to: 2
 47802                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 47803  002456  ECC1  F0D3         	call	_check_day_time	;wreg free
 47804                           
 47805                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47806  00245A  0012               	return		;funcret
 47807  00245C                     __end_of_TMR5_DefaultInterruptHandler:
 47808                           	opt callstack 0
 47809                           
 47810 ;; *************** function _check_day_time *****************
 47811 ;; Defined at:
 47812 ;;		line 167 in file "mbmc.c"
 47813 ;; Parameters:    Size  Location     Type
 47814 ;;		None
 47815 ;; Auto vars:     Size  Location     Type
 47816 ;;  light           4  [STACK] float 
 47817 ;; Return value:  Size  Location     Type
 47818 ;;                  1  [STACK] _Bool 
 47819 ;; Registers used:
 47820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47821 ;; Tracked objects:
 47822 ;;		On entry : 3F/2
 47823 ;;		On exit  : 0/0
 47824 ;;		Unchanged: 0/0
 47825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47830 ;;Total ram usage:        0 bytes
 47831 ;; Hardware stack levels used:    1
 47832 ;; Hardware stack levels required when called:    6
 47833 ;; This function calls:
 47834 ;;		___flge
 47835 ;;		_conv_raw_result
 47836 ;;		_get_ac_charger_relay
 47837 ;;		_set_ac_charger_relay
 47838 ;;		_time
 47839 ;; This function is called by:
 47840 ;;		_TMR5_DefaultInterruptHandler
 47841 ;; This function uses a reentrant model
 47842 ;;
 47843                           
 47844                           	psect	text193
 47845  01A782                     __ptext193:
 47846                           	opt callstack 0
 47847  01A782                     _check_day_time:
 47848                           	opt callstack 0
 47849                           
 47850                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47851  01A782  52E6               	movf	postinc1,f,c
 47852  01A784  52E6               	movf	postinc1,f,c
 47853  01A786  52E6               	movf	postinc1,f,c
 47854  01A788  52E6               	movf	postinc1,f,c
 47855                           
 47856                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 47857                           
 47858                           ;incstack = 0
 47859  01A78A  0E00               	movlw	0
 47860  01A78C  6EE6               	movwf	postinc1,c
 47861  01A78E  0E0D               	movlw	13
 47862  01A790  6EE6               	movwf	postinc1,c
 47863  01A792  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 47864                           
 47865                           ;stkvar	_light @ sp[(-4)+0]
 47866  01A796  0EFC               	movlw	-4
 47867  01A798  0060  F0AB  FFE3   	movff	btemp,plusw1
 47868  01A79E  0EFD               	movlw	-3
 47869  01A7A0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 47870  01A7A6  0EFE               	movlw	-2
 47871  01A7A8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 47872  01A7AE  0EFF               	movlw	-1
 47873  01A7B0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 47874                           
 47875                           ;mbmc.c: 176:  if (C.day_update) {
 47876  01A7B6  EE23  F0B9         	lfsr	2,_C+312	;volatile
 47877  01A7BA  50DE               	movf	postinc2,w,c
 47878  01A7BC  10DE               	iorwf	postinc2,w,c
 47879  01A7BE  10DE               	iorwf	postinc2,w,c
 47880  01A7C0  10DE               	iorwf	postinc2,w,c
 47881  01A7C2  B4D8               	btfsc	status,2,c
 47882  01A7C4  D068               	goto	l12744
 47883                           
 47884                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 47885  01A7C6  0063  F2E4  F032   	movff	_C+312,btemp+8	;volatile
 47886  01A7CC  0063  F2E8  F033   	movff	_C+313,btemp+9	;volatile
 47887  01A7D2  0063  F2EC  F034   	movff	_C+314,btemp+10	;volatile
 47888  01A7D8  0063  F2F0  F035   	movff	_C+315,btemp+11	;volatile
 47889  01A7DE  5032               	movf	(btemp+8)^0,w,c
 47890  01A7E0  6E3A               	movwf	(btemp+16)^0,c
 47891  01A7E2  5033               	movf	(btemp+9)^0,w,c
 47892  01A7E4  6E3B               	movwf	(btemp+17)^0,c
 47893  01A7E6  5034               	movf	(btemp+10)^0,w,c
 47894  01A7E8  6E3C               	movwf	(btemp+18)^0,c
 47895  01A7EA  5035               	movf	(btemp+11)^0,w,c
 47896  01A7EC  6E3D               	movwf	(btemp+19)^0,c
 47897  01A7EE  6A3E               	clrf	(btemp+20)^0,c
 47898  01A7F0  6A3F               	clrf	(btemp+21)^0,c
 47899  01A7F2  6A40               	clrf	(btemp+22)^0,c
 47900  01A7F4  6A41               	clrf	(btemp+23)^0,c
 47901  01A7F6  0E00               	movlw	0
 47902  01A7F8  6EE6               	movwf	postinc1,c
 47903  01A7FA  0E00               	movlw	0
 47904  01A7FC  6EE6               	movwf	postinc1,c
 47905  01A7FE  EC23  F00E         	call	_time	;wreg free
 47906  01A802  52E5               	movf	postdec1,f,c
 47907  01A804  006F FF9C  F049    	movff	indf1,btemp+31
 47908  01A80A  52E5               	movf	postdec1,f,c
 47909  01A80C  006F FF9C  F048    	movff	indf1,btemp+30
 47910  01A812  52E5               	movf	postdec1,f,c
 47911  01A814  006F FF9C  F047    	movff	indf1,btemp+29
 47912  01A81A  52E5               	movf	postdec1,f,c
 47913  01A81C  006F FF9C  F046    	movff	indf1,btemp+28
 47914  01A822  52E5               	movf	postdec1,f,c
 47915  01A824  006F FF9C  F045    	movff	indf1,btemp+27
 47916  01A82A  52E5               	movf	postdec1,f,c
 47917  01A82C  006F FF9C  F044    	movff	indf1,btemp+26
 47918  01A832  52E5               	movf	postdec1,f,c
 47919  01A834  006F FF9C  F043    	movff	indf1,btemp+25
 47920  01A83A  52E5               	movf	postdec1,f,c
 47921  01A83C  006F FF9C  F042    	movff	indf1,btemp+24
 47922  01A842  503A               	movf	(btemp+16)^0,w,c
 47923  01A844  5C42               	subwf	(btemp+24)^0,w,c
 47924  01A846  503B               	movf	(btemp+17)^0,w,c
 47925  01A848  5843               	subwfb	(btemp+25)^0,w,c
 47926  01A84A  503C               	movf	(btemp+18)^0,w,c
 47927  01A84C  5844               	subwfb	(btemp+26)^0,w,c
 47928  01A84E  503D               	movf	(btemp+19)^0,w,c
 47929  01A850  5845               	subwfb	(btemp+27)^0,w,c
 47930  01A852  503E               	movf	(btemp+20)^0,w,c
 47931  01A854  5846               	subwfb	(btemp+28)^0,w,c
 47932  01A856  503F               	movf	(btemp+21)^0,w,c
 47933  01A858  5847               	subwfb	(btemp+29)^0,w,c
 47934  01A85A  5040               	movf	(btemp+22)^0,w,c
 47935  01A85C  5848               	subwfb	(btemp+30)^0,w,c
 47936  01A85E  5049               	movf	(btemp+31)^0,w,c
 47937  01A860  0A80               	xorlw	128
 47938  01A862  6E2A               	movwf	btemp^0,c
 47939  01A864  5041               	movf	(btemp+23)^0,w,c
 47940  01A866  0A80               	xorlw	128
 47941  01A868  582A               	subwfb	btemp^0,w,c
 47942  01A86A  A0D8               	btfss	status,0,c
 47943  01A86C  D014               	goto	l12744
 47944                           
 47945                           ; BSR set to: 57
 47946                           ;mbmc.c: 178:    C.day_update = 0;
 47947  01A86E  0E00               	movlw	0
 47948  01A870  006F FFA0  FCB9    	movff	wreg,_C+312	;volatile
 47949  01A876  0E00               	movlw	0
 47950  01A878  006F FFA0  FCBA    	movff	wreg,_C+313	;volatile
 47951  01A87E  0E00               	movlw	0
 47952  01A880  006F FFA0  FCBB    	movff	wreg,_C+314	;volatile
 47953  01A886  0E00               	movlw	0
 47954  01A888  006F FFA0  FCBC    	movff	wreg,_C+315	;volatile
 47955                           
 47956                           ;mbmc.c: 179:    C.dupdate = 1;
 47957  01A88E  0E01               	movlw	1
 47958  01A890  006F FFA0  FCB0    	movff	wreg,_C+303	;volatile
 47959  01A896                     l12744:
 47960                           
 47961                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 47962  01A896  2A51               	incf	check_day_time@day_delay^0,f,c
 47963  01A898  0451               	decf	check_day_time@day_delay^0,w,c
 47964  01A89A  A4D8               	btfss	status,2,c
 47965  01A89C  D123               	goto	l2211
 47966  01A89E  0102               	movlb	2	; () banked
 47967  01A8A0  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 47968  01A8A2  B4D8               	btfsc	status,2,c
 47969  01A8A4  D11F               	goto	l2211
 47970                           
 47971                           ; BSR set to: 2
 47972                           ;mbmc.c: 184:   if (C.soc > 3) {
 47973  01A8A6  EE23  F037         	lfsr	2,_C+182	;volatile
 47974  01A8AA  0E01               	movlw	1
 47975  01A8AC  50DB               	movf	plusw2,w,c
 47976  01A8AE  E104               	bnz	u1215_20
 47977  01A8B0  0E04               	movlw	4
 47978  01A8B2  5CDE               	subwf	postinc2,w,c
 47979  01A8B4  A0D8               	btfss	status,0,c
 47980  01A8B6  D0ED               	goto	l12778
 47981  01A8B8                     u1215_20:
 47982                           
 47983                           ; BSR set to: 2
 47984                           ;mbmc.c: 185:    if (!C.day) {
 47985  01A8B8  EE23  F0AF         	lfsr	2,_C+302	;volatile
 47986  01A8BC  50DF               	movf	indf2,w,c
 47987  01A8BE  A4D8               	btfss	status,2,c
 47988  01A8C0  D065               	goto	l12764
 47989                           
 47990                           ; BSR set to: 2
 47991                           ;mbmc.c: 186:     if (light > 22.0) {
 47992                           ;stkvar	_light @ sp[(-4)+0]
 47993  01A8C2  0EFC               	movlw	-4
 47994  01A8C4  006F FF8F FFE6     	movff	plusw1,postinc1
 47995  01A8CA  006F FF8F FFE6     	movff	plusw1,postinc1
 47996  01A8D0  006F FF8F FFE6     	movff	plusw1,postinc1
 47997  01A8D6  006F FF8F FFE6     	movff	plusw1,postinc1
 47998  01A8DC  0E00               	movlw	0
 47999  01A8DE  6EE6               	movwf	postinc1,c
 48000  01A8E0  0E00               	movlw	0
 48001  01A8E2  6EE6               	movwf	postinc1,c
 48002  01A8E4  0EB0               	movlw	176
 48003  01A8E6  6EE6               	movwf	postinc1,c
 48004  01A8E8  0E41               	movlw	65
 48005  01A8EA  6EE6               	movwf	postinc1,c
 48006  01A8EC  EC35  F0F6         	call	___flge	;wreg free
 48007  01A8F0  B02A               	btfsc	btemp& (0+255),0,c
 48008  01A8F2  D0F8               	goto	l2211
 48009                           
 48010                           ;mbmc.c: 187:      C.day = 1;
 48011  01A8F4  0E01               	movlw	1
 48012  01A8F6  006F FFA0  FCAF    	movff	wreg,_C+302	;volatile
 48013                           
 48014                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 48015  01A8FC  0E00               	movlw	0
 48016  01A8FE  6EE6               	movwf	postinc1,c
 48017  01A900  0E00               	movlw	0
 48018  01A902  6EE6               	movwf	postinc1,c
 48019  01A904  EC23  F00E         	call	_time	;wreg free
 48020  01A908  52E5               	movf	postdec1,f,c
 48021  01A90A  006F FF9C  F041    	movff	indf1,btemp+23
 48022  01A910  52E5               	movf	postdec1,f,c
 48023  01A912  006F FF9C  F040    	movff	indf1,btemp+22
 48024  01A918  52E5               	movf	postdec1,f,c
 48025  01A91A  006F FF9C  F03F    	movff	indf1,btemp+21
 48026  01A920  52E5               	movf	postdec1,f,c
 48027  01A922  006F FF9C  F03E    	movff	indf1,btemp+20
 48028  01A928  52E5               	movf	postdec1,f,c
 48029  01A92A  006F FF9C  F03D    	movff	indf1,btemp+19
 48030  01A930  52E5               	movf	postdec1,f,c
 48031  01A932  006F FF9C  F03C    	movff	indf1,btemp+18
 48032  01A938  52E5               	movf	postdec1,f,c
 48033  01A93A  006F FF9C  F03B    	movff	indf1,btemp+17
 48034  01A940  52E5               	movf	postdec1,f,c
 48035  01A942  006F FF9C  F03A    	movff	indf1,btemp+16
 48036  01A948  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48037  01A94E  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48038  01A954  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48039  01A95A  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48040  01A960  0060  F0C8  FCB1   	movff	btemp+8,_C+304	;volatile
 48041  01A966  0060  F0CC  FCB2   	movff	btemp+9,_C+305	;volatile
 48042  01A96C  0060  F0D0  FCB3   	movff	btemp+10,_C+306	;volatile
 48043  01A972  0060  F0D4  FCB4   	movff	btemp+11,_C+307	;volatile
 48044                           
 48045                           ; BSR set to: 57
 48046                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 48047  01A978  EC68  F016         	call	_get_ac_charger_relay	;wreg free
 48048  01A97C  502A               	movf	btemp^0,w,c
 48049  01A97E  B4D8               	btfsc	status,2,c
 48050  01A980  D0B5               	goto	l2207
 48051                           
 48052                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 48053  01A982  0E00               	movlw	0
 48054  01A984  6EE6               	movwf	postinc1,c
 48055  01A986  EC4B  F016         	call	_set_ac_charger_relay	;wreg free
 48056  01A98A  D0B0               	goto	l2207
 48057  01A98C                     l12764:
 48058                           
 48059                           ; BSR set to: 2
 48060                           ;mbmc.c: 195:     if (light < 12.0) {
 48061  01A98C  0E00               	movlw	0
 48062  01A98E  6EE6               	movwf	postinc1,c
 48063  01A990  0E00               	movlw	0
 48064  01A992  6EE6               	movwf	postinc1,c
 48065  01A994  0E40               	movlw	64
 48066  01A996  6EE6               	movwf	postinc1,c
 48067  01A998  0E41               	movlw	65
 48068  01A99A  6EE6               	movwf	postinc1,c
 48069                           
 48070                           ;stkvar	_light @ sp[(-8)+0]
 48071  01A99C  0EF8               	movlw	-8
 48072  01A99E  006F FF8F FFE6     	movff	plusw1,postinc1
 48073  01A9A4  006F FF8F FFE6     	movff	plusw1,postinc1
 48074  01A9AA  006F FF8F FFE6     	movff	plusw1,postinc1
 48075  01A9B0  006F FF8F FFE6     	movff	plusw1,postinc1
 48076  01A9B6  EC35  F0F6         	call	___flge	;wreg free
 48077  01A9BA  B02A               	btfsc	btemp& (0+255),0,c
 48078  01A9BC  D093               	goto	l2211
 48079                           
 48080                           ;mbmc.c: 196:      C.day = 0;
 48081  01A9BE  0E00               	movlw	0
 48082  01A9C0  006F FFA0  FCAF    	movff	wreg,_C+302	;volatile
 48083                           
 48084                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 48085  01A9C6  0E00               	movlw	0
 48086  01A9C8  6EE6               	movwf	postinc1,c
 48087  01A9CA  0E00               	movlw	0
 48088  01A9CC  6EE6               	movwf	postinc1,c
 48089  01A9CE  EC23  F00E         	call	_time	;wreg free
 48090  01A9D2  52E5               	movf	postdec1,f,c
 48091  01A9D4  006F FF9C  F041    	movff	indf1,btemp+23
 48092  01A9DA  52E5               	movf	postdec1,f,c
 48093  01A9DC  006F FF9C  F040    	movff	indf1,btemp+22
 48094  01A9E2  52E5               	movf	postdec1,f,c
 48095  01A9E4  006F FF9C  F03F    	movff	indf1,btemp+21
 48096  01A9EA  52E5               	movf	postdec1,f,c
 48097  01A9EC  006F FF9C  F03E    	movff	indf1,btemp+20
 48098  01A9F2  52E5               	movf	postdec1,f,c
 48099  01A9F4  006F FF9C  F03D    	movff	indf1,btemp+19
 48100  01A9FA  52E5               	movf	postdec1,f,c
 48101  01A9FC  006F FF9C  F03C    	movff	indf1,btemp+18
 48102  01AA02  52E5               	movf	postdec1,f,c
 48103  01AA04  006F FF9C  F03B    	movff	indf1,btemp+17
 48104  01AA0A  52E5               	movf	postdec1,f,c
 48105  01AA0C  006F FF9C  F03A    	movff	indf1,btemp+16
 48106  01AA12  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48107  01AA18  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48108  01AA1E  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48109  01AA24  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48110  01AA2A  0060  F0C8  FCB5   	movff	btemp+8,_C+308	;volatile
 48111  01AA30  0060  F0CC  FCB6   	movff	btemp+9,_C+309	;volatile
 48112  01AA36  0060  F0D0  FCB7   	movff	btemp+10,_C+310	;volatile
 48113  01AA3C  0060  F0D4  FCB8   	movff	btemp+11,_C+311	;volatile
 48114                           
 48115                           ; BSR set to: 57
 48116                           ;mbmc.c: 198:      C.day_update = C.day_end + 600;
 48117  01AA42  EE23  F0B5         	lfsr	2,_C+308	;volatile
 48118  01AA46  0E58               	movlw	88
 48119  01AA48  24DE               	addwf	postinc2,w,c
 48120  01AA4A  6E32               	movwf	(btemp+8)^0,c
 48121  01AA4C  0E02               	movlw	2
 48122  01AA4E  20DE               	addwfc	postinc2,w,c
 48123  01AA50  6E33               	movwf	(btemp+9)^0,c
 48124  01AA52  0E00               	movlw	0
 48125  01AA54  20DE               	addwfc	postinc2,w,c
 48126  01AA56  6E34               	movwf	(btemp+10)^0,c
 48127  01AA58  0E00               	movlw	0
 48128  01AA5A  20DE               	addwfc	postinc2,w,c
 48129  01AA5C  6E35               	movwf	(btemp+11)^0,c
 48130  01AA5E  0060  F0C8  FCB9   	movff	btemp+8,_C+312	;volatile
 48131  01AA64  0060  F0CC  FCBA   	movff	btemp+9,_C+313	;volatile
 48132  01AA6A  0060  F0D0  FCBB   	movff	btemp+10,_C+314	;volatile
 48133  01AA70  0060  F0D4  FCBC   	movff	btemp+11,_C+315	;volatile
 48134                           
 48135                           ; BSR set to: 57
 48136                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 48137  01AA76  EE23  F037         	lfsr	2,_C+182	;volatile
 48138  01AA7A  0E01               	movlw	1
 48139  01AA7C  50DB               	movf	plusw2,w,c
 48140  01AA7E  E136               	bnz	l2207
 48141  01AA80  0E14               	movlw	20
 48142  01AA82  5CDE               	subwf	postinc2,w,c
 48143  01AA84  B0D8               	btfsc	status,0,c
 48144  01AA86  D032               	goto	l2207
 48145                           
 48146                           ; BSR set to: 57
 48147                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 48148  01AA88  0E01               	movlw	1
 48149  01AA8A  6EE6               	movwf	postinc1,c
 48150  01AA8C  EC4B  F016         	call	_set_ac_charger_relay	;wreg free
 48151  01AA90  D02D               	goto	l2207
 48152  01AA92                     l12778:
 48153                           
 48154                           ; BSR set to: 2
 48155                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 48156  01AA92  EE22  F3F9         	lfsr	2,_C+120	;volatile
 48157  01AA96  006F FF7B FFE6     	movff	postinc2,postinc1
 48158  01AA9C  006F FF7B FFE6     	movff	postinc2,postinc1
 48159  01AAA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48160  01AAA8  006F FF7B FFE6     	movff	postinc2,postinc1
 48161  01AAAE  EE22  F3FD         	lfsr	2,_C+124	;volatile
 48162  01AAB2  006F FF7B FFE6     	movff	postinc2,postinc1
 48163  01AAB8  006F FF7B FFE6     	movff	postinc2,postinc1
 48164  01AABE  006F FF7B FFE6     	movff	postinc2,postinc1
 48165  01AAC4  006F FF7B FFE6     	movff	postinc2,postinc1
 48166  01AACA  EC35  F0F6         	call	___flge	;wreg free
 48167  01AACE  B02A               	btfsc	btemp& (0+255),0,c
 48168  01AAD0  D009               	goto	l2211
 48169                           
 48170                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 48171  01AAD2  EC68  F016         	call	_get_ac_charger_relay	;wreg free
 48172  01AAD6  502A               	movf	btemp^0,w,c
 48173  01AAD8  A4D8               	btfss	status,2,c
 48174  01AADA  D004               	goto	l2211
 48175                           
 48176                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 48177  01AADC  0E01               	movlw	1
 48178  01AADE  6EE6               	movwf	postinc1,c
 48179  01AAE0  EC4B  F016         	call	_set_ac_charger_relay	;wreg free
 48180  01AAE4                     l2211:
 48181                           
 48182                           ;mbmc.c: 216:  if (day_delay >= 240)
 48183  01AAE4  0EEF               	movlw	239
 48184  01AAE6  6451               	cpfsgt	check_day_time@day_delay^0,c
 48185  01AAE8  D001               	goto	l2207
 48186                           
 48187                           ;mbmc.c: 217:   day_delay = 0;
 48188  01AAEA  6A51               	clrf	check_day_time@day_delay^0,c
 48189  01AAEC                     l2207:
 48190                           
 48191                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 48192  01AAEC  52E5               	movf	postdec1,f,c
 48193  01AAEE  52E5               	movf	postdec1,f,c
 48194  01AAF0  52E5               	movf	postdec1,f,c
 48195  01AAF2  52E5               	movf	postdec1,f,c
 48196  01AAF4  0012               	return		;funcret
 48197  01AAF6                     __end_of_check_day_time:
 48198                           	opt callstack 0
 48199                           
 48200 ;; *************** function _set_ac_charger_relay *****************
 48201 ;; Defined at:
 48202 ;;		line 136 in file "mbmc.c"
 48203 ;; Parameters:    Size  Location     Type
 48204 ;;  mode            1  [STACK] const _Bool 
 48205 ;; Auto vars:     Size  Location     Type
 48206 ;;		None
 48207 ;; Return value:  Size  Location     Type
 48208 ;;                  1  [STACK] void 
 48209 ;; Registers used:
 48210 ;;		wreg, fsr1l, fsr1h
 48211 ;; Tracked objects:
 48212 ;;		On entry : 0/39
 48213 ;;		On exit  : 0/0
 48214 ;;		Unchanged: 0/0
 48215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48220 ;;Total ram usage:        0 bytes
 48221 ;; Hardware stack levels used:    1
 48222 ;; Hardware stack levels required when called:    3
 48223 ;; This function calls:
 48224 ;;		Nothing
 48225 ;; This function is called by:
 48226 ;;		_check_day_time
 48227 ;; This function uses a reentrant model
 48228 ;;
 48229                           
 48230                           	psect	text194
 48231  002C96                     __ptext194:
 48232                           	opt callstack 0
 48233  002C96                     _set_ac_charger_relay:
 48234                           	opt callstack 10
 48235                           
 48236                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 48237                           ;stkvar	_mode @ sp[(0)+-1]
 48238                           
 48239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48240                           ;incstack = 0
 48241  002C96  0EFF               	movlw	-1
 48242  002C98  B0E3               	btfsc	plusw1,0,c
 48243  002C9A  D002               	bra	u1175_25
 48244  002C9C  9CBD               	bcf	189,6,c	;volatile
 48245  002C9E  D001               	bra	u1175_26
 48246  002CA0                     u1175_25:
 48247  002CA0  8CBD               	bsf	189,6,c	;volatile
 48248  002CA2                     u1175_26:
 48249                           
 48250                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 48251  002CA2  52E5               	movf	postdec1,f,c
 48252  002CA4  0012               	return		;funcret
 48253  002CA6                     __end_of_set_ac_charger_relay:
 48254                           	opt callstack 0
 48255                           
 48256 ;; *************** function _get_ac_charger_relay *****************
 48257 ;; Defined at:
 48258 ;;		line 141 in file "mbmc.c"
 48259 ;; Parameters:    Size  Location     Type
 48260 ;;		None
 48261 ;; Auto vars:     Size  Location     Type
 48262 ;;		None
 48263 ;; Return value:  Size  Location     Type
 48264 ;;                  1  [STACK] _Bool 
 48265 ;; Registers used:
 48266 ;;		btemp
 48267 ;; Tracked objects:
 48268 ;;		On entry : 0/39
 48269 ;;		On exit  : 0/0
 48270 ;;		Unchanged: 0/0
 48271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48276 ;;Total ram usage:        0 bytes
 48277 ;; Hardware stack levels used:    1
 48278 ;; Hardware stack levels required when called:    3
 48279 ;; This function calls:
 48280 ;;		Nothing
 48281 ;; This function is called by:
 48282 ;;		_check_day_time
 48283 ;;		_calc_bsoc
 48284 ;; This function uses a reentrant model
 48285 ;;
 48286                           
 48287                           	psect	text195
 48288  002CD0                     __ptext195:
 48289                           	opt callstack 0
 48290  002CD0                     _get_ac_charger_relay:
 48291                           	opt callstack 11
 48292                           
 48293                           ;mbmc.c: 143:  return LATDbits.LATD6;
 48294                           
 48295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48296                           ;incstack = 0
 48297  002CD0  ACBD               	btfss	189,6,c	;volatile
 48298  002CD2  D003               	goto	u1239_20
 48299  002CD4  6A2A               	clrf	btemp^0,c
 48300  002CD6  2A2A               	incf	btemp^0,f,c
 48301  002CD8  0012               	return	
 48302  002CDA                     u1239_20:
 48303  002CDA  6A2A               	clrf	btemp^0,c
 48304                           
 48305                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 48306  002CDC  0012               	return		;funcret
 48307  002CDE                     __end_of_get_ac_charger_relay:
 48308                           	opt callstack 0
 48309                           
 48310 ;; *************** function _TMR3_ISR *****************
 48311 ;; Defined at:
 48312 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 48313 ;; Parameters:    Size  Location     Type
 48314 ;;		None
 48315 ;; Auto vars:     Size  Location     Type
 48316 ;;		None
 48317 ;; Return value:  Size  Location     Type
 48318 ;;                  1    wreg      void 
 48319 ;; Registers used:
 48320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48321 ;; Tracked objects:
 48322 ;;		On entry : 0/0
 48323 ;;		On exit  : 3F/0
 48324 ;;		Unchanged: 0/0
 48325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48328 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48329 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48330 ;;Total ram usage:       25 bytes
 48331 ;; Hardware stack levels used:    1
 48332 ;; Hardware stack levels required when called:   14
 48333 ;; This function calls:
 48334 ;;		_TMR3_CallBack
 48335 ;;		_TMR3_WriteTimer
 48336 ;; This function is called by:
 48337 ;;		Interrupt level 1
 48338 ;; This function uses a non-reentrant model
 48339 ;;
 48340                           
 48341                           	psect	text196
 48342  01EDCC                     __ptext196:
 48343                           	opt callstack 0
 48344  01EDCC                     _TMR3_ISR:
 48345                           	opt callstack 3
 48346                           
 48347                           ;incstack = 0
 48348  01EDCC  006F FF60  F0E7    	movff	status,??_TMR3_ISR
 48349  01EDD2  006F FFD8  F0E8    	movff	tblptrl,??_TMR3_ISR+1
 48350  01EDD8  006F FFDC  F0E9    	movff	tblptrh,??_TMR3_ISR+2
 48351  01EDDE  006F FFE0  F0EA    	movff	tblptru,??_TMR3_ISR+3
 48352  01EDE4  006F FFD4  F0EB    	movff	tablat,??_TMR3_ISR+4
 48353  01EDEA  0060  F0A8  F0EC   	movff	btemp,??_TMR3_ISR+5
 48354  01EDF0  0060  F0AC  F0ED   	movff	btemp+1,??_TMR3_ISR+6
 48355  01EDF6  0060  F0B0  F0EE   	movff	btemp+2,??_TMR3_ISR+7
 48356  01EDFC  0060  F0B4  F0EF   	movff	btemp+3,??_TMR3_ISR+8
 48357  01EE02  0060  F0B8  F0F0   	movff	btemp+4,??_TMR3_ISR+9
 48358  01EE08  0060  F0BC  F0F1   	movff	btemp+5,??_TMR3_ISR+10
 48359  01EE0E  0060  F0C0  F0F2   	movff	btemp+6,??_TMR3_ISR+11
 48360  01EE14  0060  F0C4  F0F3   	movff	btemp+7,??_TMR3_ISR+12
 48361  01EE1A  0060  F0C8  F0F4   	movff	btemp+8,??_TMR3_ISR+13
 48362  01EE20  0060  F0CC  F0F5   	movff	btemp+9,??_TMR3_ISR+14
 48363  01EE26  0060  F0D0  F0F6   	movff	btemp+10,??_TMR3_ISR+15
 48364  01EE2C  0060  F0D4  F0F7   	movff	btemp+11,??_TMR3_ISR+16
 48365  01EE32  0060  F0E8  F0F8   	movff	btemp+16,??_TMR3_ISR+17
 48366  01EE38  0060  F0EC  F0F9   	movff	btemp+17,??_TMR3_ISR+18
 48367  01EE3E  0060  F0F0  F0FA   	movff	btemp+18,??_TMR3_ISR+19
 48368  01EE44  0060  F0F4  F0FB   	movff	btemp+19,??_TMR3_ISR+20
 48369  01EE4A  0060  F0F8  F0FC   	movff	btemp+20,??_TMR3_ISR+21
 48370  01EE50  0060  F0FC  F0FD   	movff	btemp+21,??_TMR3_ISR+22
 48371  01EE56  0060  F100  F0FE   	movff	btemp+22,??_TMR3_ISR+23
 48372  01EE5C  0060  F104  F0FF   	movff	btemp+23,??_TMR3_ISR+24
 48373  01EE62  EE16  F196         	lfsr	1,___intlo_sp
 48374                           
 48375                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 48376  01EE66  0139               	movlb	57	; () banked
 48377  01EE68  9DA6               	bcf	166,6,b	;volatile
 48378                           
 48379                           ; BSR set to: 57
 48380                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 48381  01EE6A  0060  F30B  FFE6   	movff	_timer3ReloadVal,postinc1
 48382  01EE70  0060  F30F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 48383  01EE76  EC60  F011         	call	_TMR3_WriteTimer	;wreg free
 48384                           
 48385                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 48386  01EE7A  0100               	movlb	0	; () banked
 48387  01EE7C  4BC0               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 48388  01EE7E  2BC1               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 48389  01EE80  51C1               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 48390  01EE82  E104               	bnz	i1u1682_20
 48391  01EE84  0E28               	movlw	40
 48392  01EE86  5DC0               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 48393  01EE88  A0D8               	btfss	status,0,c
 48394  01EE8A  D005               	goto	i1l1209
 48395  01EE8C                     i1u1682_20:
 48396                           
 48397                           ; BSR set to: 0
 48398                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 48399  01EE8C  ECFC  F014         	call	_TMR3_CallBack	;wreg free
 48400                           
 48401                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 48402  01EE90  0100               	movlb	0	; () banked
 48403  01EE92  6BC0               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 48404  01EE94  6BC1               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 48405  01EE96                     i1l1209:
 48406                           
 48407                           ; BSR set to: 0
 48408  01EE96  0060  F3FC  F041   	movff	??_TMR3_ISR+24,btemp+23
 48409  01EE9C  0060  F3F8  F040   	movff	??_TMR3_ISR+23,btemp+22
 48410  01EEA2  0060  F3F4  F03F   	movff	??_TMR3_ISR+22,btemp+21
 48411  01EEA8  0060  F3F0  F03E   	movff	??_TMR3_ISR+21,btemp+20
 48412  01EEAE  0060  F3EC  F03D   	movff	??_TMR3_ISR+20,btemp+19
 48413  01EEB4  0060  F3E8  F03C   	movff	??_TMR3_ISR+19,btemp+18
 48414  01EEBA  0060  F3E4  F03B   	movff	??_TMR3_ISR+18,btemp+17
 48415  01EEC0  0060  F3E0  F03A   	movff	??_TMR3_ISR+17,btemp+16
 48416  01EEC6  0060  F3DC  F035   	movff	??_TMR3_ISR+16,btemp+11
 48417  01EECC  0060  F3D8  F034   	movff	??_TMR3_ISR+15,btemp+10
 48418  01EED2  0060  F3D4  F033   	movff	??_TMR3_ISR+14,btemp+9
 48419  01EED8  0060  F3D0  F032   	movff	??_TMR3_ISR+13,btemp+8
 48420  01EEDE  0060  F3CC  F031   	movff	??_TMR3_ISR+12,btemp+7
 48421  01EEE4  0060  F3C8  F030   	movff	??_TMR3_ISR+11,btemp+6
 48422  01EEEA  0060  F3C4  F02F   	movff	??_TMR3_ISR+10,btemp+5
 48423  01EEF0  0060  F3C0  F02E   	movff	??_TMR3_ISR+9,btemp+4
 48424  01EEF6  0060  F3BC  F02D   	movff	??_TMR3_ISR+8,btemp+3
 48425  01EEFC  0060  F3B8  F02C   	movff	??_TMR3_ISR+7,btemp+2
 48426  01EF02  0060  F3B4  F02B   	movff	??_TMR3_ISR+6,btemp+1
 48427  01EF08  0060  F3B0  F02A   	movff	??_TMR3_ISR+5,btemp
 48428  01EF0E  0060  F3AF  FFF5   	movff	??_TMR3_ISR+4,tablat
 48429  01EF14  0060  F3AB  FFF8   	movff	??_TMR3_ISR+3,tblptru
 48430  01EF1A  0060  F3A7  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 48431  01EF20  0060  F3A3  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 48432  01EF26  0060  F39F  FFD8   	movff	??_TMR3_ISR,status
 48433  01EF2C  0011               	retfie		f
 48434  01EF2E                     __end_of_TMR3_ISR:
 48435                           	opt callstack 0
 48436                           
 48437 ;; *************** function _TMR3_WriteTimer *****************
 48438 ;; Defined at:
 48439 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 48440 ;; Parameters:    Size  Location     Type
 48441 ;;  timerVal        2  [STACK] unsigned short 
 48442 ;; Auto vars:     Size  Location     Type
 48443 ;;		None
 48444 ;; Return value:  Size  Location     Type
 48445 ;;                  1  [STACK] void 
 48446 ;; Registers used:
 48447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 48448 ;; Tracked objects:
 48449 ;;		On entry : 3F/39
 48450 ;;		On exit  : 0/0
 48451 ;;		Unchanged: 0/0
 48452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48457 ;;Total ram usage:        0 bytes
 48458 ;; Hardware stack levels used:    1
 48459 ;; Hardware stack levels required when called:    3
 48460 ;; This function calls:
 48461 ;;		Nothing
 48462 ;; This function is called by:
 48463 ;;		_TMR3_ISR
 48464 ;; This function uses a reentrant model
 48465 ;;
 48466                           
 48467                           	psect	text197
 48468  0022C0                     __ptext197:
 48469                           	opt callstack 0
 48470  0022C0                     _TMR3_WriteTimer:
 48471                           	opt callstack 13
 48472                           
 48473                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 48474                           
 48475                           ; BSR set to: 0
 48476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48477                           ;incstack = 0
 48478  0022C0  A4A6               	btfss	166,2,c	;volatile
 48479  0022C2  D00F               	goto	l14016
 48480                           
 48481                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 48482  0022C4  90A6               	bcf	166,0,c	;volatile
 48483                           
 48484                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 48485                           ;stkvar	_timerVal @ sp[(0)+-2]
 48486  0022C6  0EFF               	movlw	255
 48487  0022C8  24E1               	addwf	fsr1l,w,c
 48488  0022CA  6ED9               	movwf	fsr2l,c
 48489  0022CC  0EFF               	movlw	255
 48490  0022CE  20E2               	addwfc	fsr1h,w,c
 48491  0022D0  6EDA               	movwf	fsr2h,c
 48492  0022D2  50DF               	movf	indf2,w,c
 48493  0022D4  6EA5               	movwf	165,c	;volatile
 48494                           
 48495                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 48496                           ;stkvar	_timerVal @ sp[(0)+-2]
 48497  0022D6  0EFE               	movlw	-2
 48498  0022D8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48499                           
 48500                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 48501  0022DE  80A6               	bsf	166,0,c	;volatile
 48502                           
 48503                           ;mcc_generated_files/tmr3.c: 141:     }
 48504  0022E0  D00C               	goto	l1192
 48505  0022E2                     l14016:
 48506                           
 48507                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 48508                           ;stkvar	_timerVal @ sp[(0)+-2]
 48509  0022E2  0EFF               	movlw	255
 48510  0022E4  24E1               	addwf	fsr1l,w,c
 48511  0022E6  6ED9               	movwf	fsr2l,c
 48512  0022E8  0EFF               	movlw	255
 48513  0022EA  20E2               	addwfc	fsr1h,w,c
 48514  0022EC  6EDA               	movwf	fsr2h,c
 48515  0022EE  50DF               	movf	indf2,w,c
 48516  0022F0  6EA5               	movwf	165,c	;volatile
 48517                           
 48518                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 48519                           ;stkvar	_timerVal @ sp[(0)+-2]
 48520  0022F2  0EFE               	movlw	-2
 48521  0022F4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48522  0022FA                     l1192:
 48523                           
 48524                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 48525  0022FA  52E5               	movf	postdec1,f,c
 48526  0022FC  52E5               	movf	postdec1,f,c
 48527  0022FE  0012               	return		;funcret
 48528  002300                     __end_of_TMR3_WriteTimer:
 48529                           	opt callstack 0
 48530                           
 48531 ;; *************** function _TMR3_CallBack *****************
 48532 ;; Defined at:
 48533 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 48534 ;; Parameters:    Size  Location     Type
 48535 ;;		None
 48536 ;; Auto vars:     Size  Location     Type
 48537 ;;		None
 48538 ;; Return value:  Size  Location     Type
 48539 ;;                  1  [STACK] void 
 48540 ;; Registers used:
 48541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48542 ;; Tracked objects:
 48543 ;;		On entry : 3F/0
 48544 ;;		On exit  : 0/0
 48545 ;;		Unchanged: 0/0
 48546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48551 ;;Total ram usage:        0 bytes
 48552 ;; Hardware stack levels used:    1
 48553 ;; Hardware stack levels required when called:   13
 48554 ;; This function calls:
 48555 ;;		Absolute function
 48556 ;;		_TMR3_DefaultInterruptHandler
 48557 ;;		_calc_bsoc
 48558 ;; This function is called by:
 48559 ;;		_TMR3_ISR
 48560 ;; This function uses a reentrant model
 48561 ;;
 48562                           
 48563                           	psect	text198
 48564  0029F8                     __ptext198:
 48565                           	opt callstack 0
 48566  0029F8                     _TMR3_CallBack:
 48567                           	opt callstack 3
 48568                           
 48569                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 48570                           
 48571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48572                           ;incstack = 0
 48573  0029F8  0100               	movlb	0	; () banked
 48574  0029FA  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48575  0029FC  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48576  0029FE  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48577  002A00  B4D8               	btfsc	status,2,c
 48578  002A02  0012               	return	
 48579                           
 48580                           ; BSR set to: 0
 48581                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 48582  002A04  D801               	call	u1660_28
 48583  002A06  0012               	return	
 48584  002A08                     u1660_28:
 48585  002A08  0005               	push	
 48586  002A0A  6EFA               	movwf	pclath,c
 48587  002A0C  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48588  002A0E  6EFD               	movwf	tosl,c
 48589  002A10  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48590  002A12  6EFE               	movwf	tosh,c
 48591  002A14  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48592  002A16  6EFF               	movwf	tosu,c
 48593  002A18  50FA               	movf	pclath,w,c
 48594  002A1A  0012               	return		;indir
 48595  002A1C                     __end_of_TMR3_CallBack:
 48596                           	opt callstack 0
 48597                           
 48598 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 48599 ;; Defined at:
 48600 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 48601 ;; Parameters:    Size  Location     Type
 48602 ;;		None
 48603 ;; Auto vars:     Size  Location     Type
 48604 ;;		None
 48605 ;; Return value:  Size  Location     Type
 48606 ;;                  1  [STACK] void 
 48607 ;; Registers used:
 48608 ;;		None
 48609 ;; Tracked objects:
 48610 ;;		On entry : 3F/0
 48611 ;;		On exit  : 0/0
 48612 ;;		Unchanged: 0/0
 48613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48618 ;;Total ram usage:        0 bytes
 48619 ;; Hardware stack levels used:    1
 48620 ;; Hardware stack levels required when called:    3
 48621 ;; This function calls:
 48622 ;;		Nothing
 48623 ;; This function is called by:
 48624 ;;		_TMR3_Initialize
 48625 ;;		_TMR3_CallBack
 48626 ;; This function uses a reentrant model
 48627 ;;
 48628                           
 48629                           	psect	text199
 48630  002D8C                     __ptext199:
 48631                           	opt callstack 0
 48632  002D8C                     _TMR3_DefaultInterruptHandler:
 48633                           	opt callstack 12
 48634                           
 48635                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48636                           
 48637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48638                           ;incstack = 0
 48639  002D8C  0012               	return		;funcret
 48640  002D8E                     __end_of_TMR3_DefaultInterruptHandler:
 48641                           	opt callstack 0
 48642                           
 48643 ;; *************** function _calc_bsoc *****************
 48644 ;; Defined at:
 48645 ;;		line 39 in file "bsoc.c"
 48646 ;; Parameters:    Size  Location     Type
 48647 ;;		None
 48648 ;; Auto vars:     Size  Location     Type
 48649 ;;  adj             4  [STACK] float 
 48650 ;;  log_ptr         2  [STACK] PTR unsigned char 
 48651 ;;		 -> port_data(512), 
 48652 ;; Return value:  Size  Location     Type
 48653 ;;                  1  [STACK] void 
 48654 ;; Registers used:
 48655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 48656 ;; Tracked objects:
 48657 ;;		On entry : 3F/0
 48658 ;;		On exit  : 6/2
 48659 ;;		Unchanged: 0/0
 48660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48665 ;;Total ram usage:        0 bytes
 48666 ;; Hardware stack levels used:    1
 48667 ;; Hardware stack levels required when called:   12
 48668 ;; This function calls:
 48669 ;;		_StartTimer
 48670 ;;		___asfladd
 48671 ;;		___fldiv
 48672 ;;		___flge
 48673 ;;		___flmul
 48674 ;;		___flneg
 48675 ;;		___fltol
 48676 ;;		_fabsf
 48677 ;;		_get_ac_charger_relay
 48678 ;;		_port_data_dma_ptr
 48679 ;;		_send_port_data_dma
 48680 ;;		_sprintf
 48681 ;;		_strlen
 48682 ;; This function is called by:
 48683 ;;		_init_bsoc
 48684 ;;		_TMR3_CallBack
 48685 ;; This function uses a reentrant model
 48686 ;;
 48687                           
 48688                           	psect	text200
 48689  0149E2                     __ptext200:
 48690                           	opt callstack 0
 48691  0149E2                     _calc_bsoc:
 48692                           	opt callstack 0
 48693                           
 48694                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48695  0149E2  0E06               	movlw	6
 48696  0149E4  26E1               	addwf	fsr1l,f,c
 48697  0149E6  0E00               	movlw	0
 48698  0149E8  22E2               	addwfc	fsr1h,f,c
 48699                           
 48700                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 48701                           
 48702                           ;incstack = 0
 48703  0149EA  0E00               	movlw	0
 48704  0149EC  6E32               	movwf	(btemp+8)^0,c
 48705  0149EE  0E00               	movlw	0
 48706  0149F0  6E33               	movwf	(btemp+9)^0,c
 48707  0149F2  0E80               	movlw	128
 48708  0149F4  6E34               	movwf	(btemp+10)^0,c
 48709  0149F6  0E3F               	movlw	63
 48710  0149F8  6E35               	movwf	(btemp+11)^0,c
 48711                           
 48712                           ;stkvar	_adj @ sp[(-6)+0]
 48713  0149FA  0EFA               	movlw	-6
 48714  0149FC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48715  014A02  0EFB               	movlw	-5
 48716  014A04  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48717  014A0A  0EFC               	movlw	-4
 48718  014A0C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48719  014A12  0EFD               	movlw	-3
 48720  014A14  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48721  014A1A  82BE               	bsf	190,1,c	;volatile
 48722                           
 48723                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 48724  014A1C  0E00               	movlw	0
 48725  014A1E  6EE6               	movwf	postinc1,c
 48726  014A20  0E00               	movlw	0
 48727  014A22  6EE6               	movwf	postinc1,c
 48728  014A24  0E61               	movlw	97
 48729  014A26  6EE6               	movwf	postinc1,c
 48730  014A28  0E45               	movlw	69
 48731  014A2A  6EE6               	movwf	postinc1,c
 48732  014A2C  EE22  F3C5         	lfsr	2,_C+68	;volatile
 48733  014A30  006F FF7B FFE6     	movff	postinc2,postinc1
 48734  014A36  006F FF7B FFE6     	movff	postinc2,postinc1
 48735  014A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 48736  014A42  006F FF7B FFE6     	movff	postinc2,postinc1
 48737  014A48  EC64  F0C1         	call	___fldiv	;wreg free
 48738  014A4C  0060  F0AB  FFE6   	movff	btemp,postinc1
 48739  014A52  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48740  014A58  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48741  014A5E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48742  014A64  0E11               	movlw	low (_C+144)
 48743  014A66  6EE6               	movwf	postinc1,c
 48744  014A68  0E0C               	movlw	high (_C+144)
 48745  014A6A  6EE6               	movwf	postinc1,c
 48746  014A6C  EC7E  F00B         	call	___asfladd	;wreg free
 48747                           
 48748                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 48749  014A70  EE23  F011         	lfsr	2,_C+144	;volatile
 48750  014A74  006F FF7B FFE6     	movff	postinc2,postinc1
 48751  014A7A  006F FF7B FFE6     	movff	postinc2,postinc1
 48752  014A80  006F FF7B FFE6     	movff	postinc2,postinc1
 48753  014A86  006F FF7B FFE6     	movff	postinc2,postinc1
 48754  014A8C  EE23  F00D         	lfsr	2,_C+140	;volatile
 48755  014A90  006F FF7B FFE6     	movff	postinc2,postinc1
 48756  014A96  006F FF7B FFE6     	movff	postinc2,postinc1
 48757  014A9C  006F FF7B FFE6     	movff	postinc2,postinc1
 48758  014AA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48759  014AA8  EC35  F0F6         	call	___flge	;wreg free
 48760  014AAC  B02A               	btfsc	btemp& (0+255),0,c
 48761  014AAE  D00E               	goto	l16858
 48762                           
 48763                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 48764  014AB0  EE23  F00D         	lfsr	2,_C+140	;volatile
 48765  014AB4  006F FF78  FC11    	movff	postinc2,_C+144	;volatile
 48766  014ABA  006F FF78  FC12    	movff	postinc2,_C+145	;volatile
 48767  014AC0  006F FF78  FC13    	movff	postinc2,_C+146	;volatile
 48768  014AC6  006F FF74  FC14    	movff	postdec2,_C+147	;volatile
 48769  014ACC                     l16858:
 48770                           
 48771                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 48772  014ACC  0ECD               	movlw	205
 48773  014ACE  6EE6               	movwf	postinc1,c
 48774  014AD0  0ECC               	movlw	204
 48775  014AD2  6EE6               	movwf	postinc1,c
 48776  014AD4  0ECC               	movlw	204
 48777  014AD6  6EE6               	movwf	postinc1,c
 48778  014AD8  0E3D               	movlw	61
 48779  014ADA  6EE6               	movwf	postinc1,c
 48780  014ADC  EE23  F011         	lfsr	2,_C+144	;volatile
 48781  014AE0  006F FF7B FFE6     	movff	postinc2,postinc1
 48782  014AE6  006F FF7B FFE6     	movff	postinc2,postinc1
 48783  014AEC  006F FF7B FFE6     	movff	postinc2,postinc1
 48784  014AF2  006F FF7B FFE6     	movff	postinc2,postinc1
 48785  014AF8  EC35  F0F6         	call	___flge	;wreg free
 48786  014AFC  B02A               	btfsc	btemp& (0+255),0,c
 48787  014AFE  D010               	goto	l16862
 48788                           
 48789                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 48790  014B00  0ECD               	movlw	205
 48791  014B02  006F FFA0  FC11    	movff	wreg,_C+144	;volatile
 48792  014B08  0ECC               	movlw	204
 48793  014B0A  006F FFA0  FC12    	movff	wreg,_C+145	;volatile
 48794  014B10  0ECC               	movlw	204
 48795  014B12  006F FFA0  FC13    	movff	wreg,_C+146	;volatile
 48796  014B18  0E3D               	movlw	61
 48797  014B1A  006F FFA0  FC14    	movff	wreg,_C+147	;volatile
 48798  014B20                     l16862:
 48799                           
 48800                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 48801  014B20  EE22  F3C5         	lfsr	2,_C+68	;volatile
 48802  014B24  006F FF7B FFE6     	movff	postinc2,postinc1
 48803  014B2A  006F FF7B FFE6     	movff	postinc2,postinc1
 48804  014B30  006F FF7B FFE6     	movff	postinc2,postinc1
 48805  014B36  006F FF7B FFE6     	movff	postinc2,postinc1
 48806  014B3C  0E0A               	movlw	10
 48807  014B3E  6EE6               	movwf	postinc1,c
 48808  014B40  0ED7               	movlw	215
 48809  014B42  6EE6               	movwf	postinc1,c
 48810  014B44  0E23               	movlw	35
 48811  014B46  6EE6               	movwf	postinc1,c
 48812  014B48  0E3C               	movlw	60
 48813  014B4A  6EE6               	movwf	postinc1,c
 48814  014B4C  EC35  F0F6         	call	___flge	;wreg free
 48815  014B50  B02A               	btfsc	btemp& (0+255),0,c
 48816  014B52  D01C               	goto	l16866
 48817                           
 48818                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 48819  014B54  0063  F158  F032   	movff	_C+213,btemp+8	;volatile
 48820  014B5A  0063  F15C  F033   	movff	_C+214,btemp+9	;volatile
 48821  014B60  0063  F160  F034   	movff	_C+215,btemp+10	;volatile
 48822  014B66  0063  F164  F035   	movff	_C+216,btemp+11	;volatile
 48823                           
 48824                           ;stkvar	_adj @ sp[(-6)+0]
 48825  014B6C  0EFA               	movlw	-6
 48826  014B6E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48827  014B74  0EFB               	movlw	-5
 48828  014B76  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48829  014B7C  0EFC               	movlw	-4
 48830  014B7E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48831  014B84  0EFD               	movlw	-3
 48832  014B86  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48833  014B8C                     l16866:
 48834                           
 48835                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 48836  014B8C  0E0A               	movlw	10
 48837  014B8E  6EE6               	movwf	postinc1,c
 48838  014B90  0ED7               	movlw	215
 48839  014B92  6EE6               	movwf	postinc1,c
 48840  014B94  0E23               	movlw	35
 48841  014B96  6EE6               	movwf	postinc1,c
 48842  014B98  0E3C               	movlw	60
 48843  014B9A  6EE6               	movwf	postinc1,c
 48844  014B9C  EE22  F3C5         	lfsr	2,_C+68	;volatile
 48845  014BA0  006F FF7B FFE6     	movff	postinc2,postinc1
 48846  014BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 48847  014BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 48848  014BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 48849  014BB8  EC35  F0F6         	call	___flge	;wreg free
 48850  014BBC  B02A               	btfsc	btemp& (0+255),0,c
 48851  014BBE  D01C               	goto	l16870
 48852                           
 48853                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 48854  014BC0  0063  F148  F032   	movff	_C+209,btemp+8	;volatile
 48855  014BC6  0063  F14C  F033   	movff	_C+210,btemp+9	;volatile
 48856  014BCC  0063  F150  F034   	movff	_C+211,btemp+10	;volatile
 48857  014BD2  0063  F154  F035   	movff	_C+212,btemp+11	;volatile
 48858                           
 48859                           ;stkvar	_adj @ sp[(-6)+0]
 48860  014BD8  0EFA               	movlw	-6
 48861  014BDA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48862  014BE0  0EFB               	movlw	-5
 48863  014BE2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48864  014BE8  0EFC               	movlw	-4
 48865  014BEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48866  014BF0  0EFD               	movlw	-3
 48867  014BF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48868  014BF8                     l16870:
 48869                           
 48870                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 48871  014BF8  0E00               	movlw	0
 48872  014BFA  6EE6               	movwf	postinc1,c
 48873  014BFC  0E00               	movlw	0
 48874  014BFE  6EE6               	movwf	postinc1,c
 48875  014C00  0E61               	movlw	97
 48876  014C02  6EE6               	movwf	postinc1,c
 48877  014C04  0E45               	movlw	69
 48878  014C06  6EE6               	movwf	postinc1,c
 48879                           
 48880                           ;stkvar	_adj @ sp[(-10)+0]
 48881  014C08  0EF6               	movlw	-10
 48882  014C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 48883  014C10  006F FF8F FFE6     	movff	plusw1,postinc1
 48884  014C16  006F FF8F FFE6     	movff	plusw1,postinc1
 48885  014C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 48886  014C22  EE22  F3C5         	lfsr	2,_C+68	;volatile
 48887  014C26  006F FF7B FFE6     	movff	postinc2,postinc1
 48888  014C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 48889  014C32  006F FF7B FFE6     	movff	postinc2,postinc1
 48890  014C38  006F FF7B FFE6     	movff	postinc2,postinc1
 48891  014C3E  EC32  F0B3         	call	___flmul	;wreg free
 48892  014C42  0060  F0AB  FFE6   	movff	btemp,postinc1
 48893  014C48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48894  014C4E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48895  014C54  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48896  014C5A  EC64  F0C1         	call	___fldiv	;wreg free
 48897  014C5E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48898  014C64  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48899  014C6A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48900  014C70  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48901  014C76  0E11               	movlw	low (_C+144)
 48902  014C78  6EE6               	movwf	postinc1,c
 48903  014C7A  0E0C               	movlw	high (_C+144)
 48904  014C7C  6EE6               	movwf	postinc1,c
 48905  014C7E  EC7E  F00B         	call	___asfladd	;wreg free
 48906                           
 48907                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 48908  014C82  EE23  F011         	lfsr	2,_C+144	;volatile
 48909  014C86  006F FF78  FC1D    	movff	postinc2,_C+156	;volatile
 48910  014C8C  006F FF78  FC1E    	movff	postinc2,_C+157	;volatile
 48911  014C92  006F FF78  FC1F    	movff	postinc2,_C+158	;volatile
 48912  014C98  006F FF74  FC20    	movff	postdec2,_C+159	;volatile
 48913                           
 48914                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 48915  014C9E  EE23  F01D         	lfsr	2,_C+156	;volatile
 48916  014CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48917  014CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 48918  014CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 48919  014CB4  006F FF7B FFE6     	movff	postinc2,postinc1
 48920  014CBA  EE23  F00D         	lfsr	2,_C+140	;volatile
 48921  014CBE  006F FF7B FFE6     	movff	postinc2,postinc1
 48922  014CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 48923  014CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 48924  014CD0  006F FF7B FFE6     	movff	postinc2,postinc1
 48925  014CD6  EC35  F0F6         	call	___flge	;wreg free
 48926  014CDA  B02A               	btfsc	btemp& (0+255),0,c
 48927  014CDC  D00E               	goto	l16878
 48928                           
 48929                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 48930  014CDE  EE23  F00D         	lfsr	2,_C+140	;volatile
 48931  014CE2  006F FF78  FC1D    	movff	postinc2,_C+156	;volatile
 48932  014CE8  006F FF78  FC1E    	movff	postinc2,_C+157	;volatile
 48933  014CEE  006F FF78  FC1F    	movff	postinc2,_C+158	;volatile
 48934  014CF4  006F FF74  FC20    	movff	postdec2,_C+159	;volatile
 48935  014CFA                     l16878:
 48936                           
 48937                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 48938  014CFA  0ECD               	movlw	205
 48939  014CFC  6EE6               	movwf	postinc1,c
 48940  014CFE  0ECC               	movlw	204
 48941  014D00  6EE6               	movwf	postinc1,c
 48942  014D02  0ECC               	movlw	204
 48943  014D04  6EE6               	movwf	postinc1,c
 48944  014D06  0E3D               	movlw	61
 48945  014D08  6EE6               	movwf	postinc1,c
 48946  014D0A  EE23  F01D         	lfsr	2,_C+156	;volatile
 48947  014D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 48948  014D14  006F FF7B FFE6     	movff	postinc2,postinc1
 48949  014D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 48950  014D20  006F FF7B FFE6     	movff	postinc2,postinc1
 48951  014D26  EC35  F0F6         	call	___flge	;wreg free
 48952  014D2A  B02A               	btfsc	btemp& (0+255),0,c
 48953  014D2C  D010               	goto	l16882
 48954                           
 48955                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 48956  014D2E  0ECD               	movlw	205
 48957  014D30  006F FFA0  FC1D    	movff	wreg,_C+156	;volatile
 48958  014D36  0ECC               	movlw	204
 48959  014D38  006F FFA0  FC1E    	movff	wreg,_C+157	;volatile
 48960  014D3E  0ECC               	movlw	204
 48961  014D40  006F FFA0  FC1F    	movff	wreg,_C+158	;volatile
 48962  014D46  0E3D               	movlw	61
 48963  014D48  006F FFA0  FC20    	movff	wreg,_C+159	;volatile
 48964  014D4E                     l16882:
 48965                           
 48966                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 48967  014D4E  0E00               	movlw	0
 48968  014D50  6EE6               	movwf	postinc1,c
 48969  014D52  0E00               	movlw	0
 48970  014D54  6EE6               	movwf	postinc1,c
 48971  014D56  0E61               	movlw	97
 48972  014D58  6EE6               	movwf	postinc1,c
 48973  014D5A  0E45               	movlw	69
 48974  014D5C  6EE6               	movwf	postinc1,c
 48975  014D5E  EE22  F3C9         	lfsr	2,_C+72	;volatile
 48976  014D62  006F FF7B FFE6     	movff	postinc2,postinc1
 48977  014D68  006F FF7B FFE6     	movff	postinc2,postinc1
 48978  014D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 48979  014D74  006F FF7B FFE6     	movff	postinc2,postinc1
 48980  014D7A  EC64  F0C1         	call	___fldiv	;wreg free
 48981  014D7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48982  014D84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48983  014D8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48984  014D90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48985  014D96  0E15               	movlw	low (_C+148)
 48986  014D98  6EE6               	movwf	postinc1,c
 48987  014D9A  0E0C               	movlw	high (_C+148)
 48988  014D9C  6EE6               	movwf	postinc1,c
 48989  014D9E  EC7E  F00B         	call	___asfladd	;wreg free
 48990                           
 48991                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 48992  014DA2  0E00               	movlw	0
 48993  014DA4  6EE6               	movwf	postinc1,c
 48994  014DA6  0E00               	movlw	0
 48995  014DA8  6EE6               	movwf	postinc1,c
 48996  014DAA  0E61               	movlw	97
 48997  014DAC  6EE6               	movwf	postinc1,c
 48998  014DAE  0E45               	movlw	69
 48999  014DB0  6EE6               	movwf	postinc1,c
 49000  014DB2  EE22  F3FD         	lfsr	2,_C+124	;volatile
 49001  014DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 49002  014DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 49003  014DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 49004  014DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 49005  014DCE  EC64  F0C1         	call	___fldiv	;wreg free
 49006  014DD2  0060  F0AB  FFE6   	movff	btemp,postinc1
 49007  014DD8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49008  014DDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49009  014DE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49010  014DEA  0E29               	movlw	low (_C+168)
 49011  014DEC  6EE6               	movwf	postinc1,c
 49012  014DEE  0E0C               	movlw	high (_C+168)
 49013  014DF0  6EE6               	movwf	postinc1,c
 49014  014DF2  EC7E  F00B         	call	___asfladd	;wreg free
 49015                           
 49016                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 49017  014DF6  0E00               	movlw	0
 49018  014DF8  6EE6               	movwf	postinc1,c
 49019  014DFA  0E00               	movlw	0
 49020  014DFC  6EE6               	movwf	postinc1,c
 49021  014DFE  0E61               	movlw	97
 49022  014E00  6EE6               	movwf	postinc1,c
 49023  014E02  0E45               	movlw	69
 49024  014E04  6EE6               	movwf	postinc1,c
 49025  014E06  EE22  F3F9         	lfsr	2,_C+120	;volatile
 49026  014E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 49027  014E10  006F FF7B FFE6     	movff	postinc2,postinc1
 49028  014E16  006F FF7B FFE6     	movff	postinc2,postinc1
 49029  014E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 49030  014E22  EC64  F0C1         	call	___fldiv	;wreg free
 49031  014E26  0060  F0AB  FFE6   	movff	btemp,postinc1
 49032  014E2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49033  014E32  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49034  014E38  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49035  014E3E  0E2D               	movlw	low (_C+172)
 49036  014E40  6EE6               	movwf	postinc1,c
 49037  014E42  0E0C               	movlw	high (_C+172)
 49038  014E44  6EE6               	movwf	postinc1,c
 49039  014E46  EC7E  F00B         	call	___asfladd	;wreg free
 49040                           
 49041                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 49042  014E4A  0E00               	movlw	0
 49043  014E4C  6EE6               	movwf	postinc1,c
 49044  014E4E  0E00               	movlw	0
 49045  014E50  6EE6               	movwf	postinc1,c
 49046  014E52  0E61               	movlw	97
 49047  014E54  6EE6               	movwf	postinc1,c
 49048  014E56  0E45               	movlw	69
 49049  014E58  6EE6               	movwf	postinc1,c
 49050  014E5A  EE22  F3F5         	lfsr	2,_C+116	;volatile
 49051  014E5E  006F FF7B FFE6     	movff	postinc2,postinc1
 49052  014E64  006F FF7B FFE6     	movff	postinc2,postinc1
 49053  014E6A  006F FF7B FFE6     	movff	postinc2,postinc1
 49054  014E70  006F FF7B FFE6     	movff	postinc2,postinc1
 49055  014E76  EC64  F0C1         	call	___fldiv	;wreg free
 49056  014E7A  0060  F0AB  FFE6   	movff	btemp,postinc1
 49057  014E80  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49058  014E86  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49059  014E8C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49060  014E92  0E31               	movlw	low (_C+176)
 49061  014E94  6EE6               	movwf	postinc1,c
 49062  014E96  0E0C               	movlw	high (_C+176)
 49063  014E98  6EE6               	movwf	postinc1,c
 49064  014E9A  EC7E  F00B         	call	___asfladd	;wreg free
 49065                           
 49066                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 49067  014E9E  EE23  F001         	lfsr	2,_C+128	;volatile
 49068  014EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 49069  014EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 49070  014EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 49071  014EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 49072  014EBA  0E00               	movlw	0
 49073  014EBC  6EE6               	movwf	postinc1,c
 49074  014EBE  0E00               	movlw	0
 49075  014EC0  6EE6               	movwf	postinc1,c
 49076  014EC2  0E00               	movlw	0
 49077  014EC4  6EE6               	movwf	postinc1,c
 49078  014EC6  0E00               	movlw	0
 49079  014EC8  6EE6               	movwf	postinc1,c
 49080  014ECA  EC35  F0F6         	call	___flge	;wreg free
 49081  014ECE  B02A               	btfsc	btemp& (0+255),0,c
 49082  014ED0  D02A               	goto	l16888
 49083                           
 49084                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 49085  014ED2  0E00               	movlw	0
 49086  014ED4  6EE6               	movwf	postinc1,c
 49087  014ED6  0E00               	movlw	0
 49088  014ED8  6EE6               	movwf	postinc1,c
 49089  014EDA  0E61               	movlw	97
 49090  014EDC  6EE6               	movwf	postinc1,c
 49091  014EDE  0E45               	movlw	69
 49092  014EE0  6EE6               	movwf	postinc1,c
 49093  014EE2  EE23  F001         	lfsr	2,_C+128	;volatile
 49094  014EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 49095  014EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 49096  014EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 49097  014EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 49098  014EFE  EC64  F0C1         	call	___fldiv	;wreg free
 49099  014F02  0060  F0AB  FFE6   	movff	btemp,postinc1
 49100  014F08  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49101  014F0E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49102  014F14  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49103  014F1A  0E21               	movlw	low (_C+160)
 49104  014F1C  6EE6               	movwf	postinc1,c
 49105  014F1E  0E0C               	movlw	high (_C+160)
 49106  014F20  6EE6               	movwf	postinc1,c
 49107  014F22  EC7E  F00B         	call	___asfladd	;wreg free
 49108  014F26                     l16888:
 49109                           
 49110                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 49111  014F26  EE23  F001         	lfsr	2,_C+128	;volatile
 49112  014F2A  0E03               	movlw	3
 49113  014F2C  AEDB               	btfss	plusw2,7,c
 49114  014F2E  D038               	goto	l16892
 49115                           
 49116                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 49117  014F30  0E00               	movlw	0
 49118  014F32  6EE6               	movwf	postinc1,c
 49119  014F34  0E00               	movlw	0
 49120  014F36  6EE6               	movwf	postinc1,c
 49121  014F38  0E61               	movlw	97
 49122  014F3A  6EE6               	movwf	postinc1,c
 49123  014F3C  0E45               	movlw	69
 49124  014F3E  6EE6               	movwf	postinc1,c
 49125  014F40  EE23  F001         	lfsr	2,_C+128	;volatile
 49126  014F44  006F FF7B FFE6     	movff	postinc2,postinc1
 49127  014F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 49128  014F50  006F FF7B FFE6     	movff	postinc2,postinc1
 49129  014F56  006F FF7B FFE6     	movff	postinc2,postinc1
 49130  014F5C  EC64  F0C1         	call	___fldiv	;wreg free
 49131  014F60  0060  F0AB  FFE6   	movff	btemp,postinc1
 49132  014F66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49133  014F6C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49134  014F72  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49135  014F78  ECBC  F005         	call	_fabsf	;wreg free
 49136  014F7C  0060  F0AB  FFE6   	movff	btemp,postinc1
 49137  014F82  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49138  014F88  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49139  014F8E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49140  014F94  0E25               	movlw	low (_C+164)
 49141  014F96  6EE6               	movwf	postinc1,c
 49142  014F98  0E0C               	movlw	high (_C+164)
 49143  014F9A  6EE6               	movwf	postinc1,c
 49144  014F9C  EC7E  F00B         	call	___asfladd	;wreg free
 49145  014FA0                     l16892:
 49146                           
 49147                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 49148  014FA0  0E00               	movlw	0
 49149  014FA2  6EE6               	movwf	postinc1,c
 49150  014FA4  0E00               	movlw	0
 49151  014FA6  6EE6               	movwf	postinc1,c
 49152  014FA8  0EC8               	movlw	200
 49153  014FAA  6EE6               	movwf	postinc1,c
 49154  014FAC  0E42               	movlw	66
 49155  014FAE  6EE6               	movwf	postinc1,c
 49156  014FB0  EE23  F00D         	lfsr	2,_C+140	;volatile
 49157  014FB4  006F FF7B FFE6     	movff	postinc2,postinc1
 49158  014FBA  006F FF7B FFE6     	movff	postinc2,postinc1
 49159  014FC0  006F FF7B FFE6     	movff	postinc2,postinc1
 49160  014FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 49161  014FCC  EE23  F01D         	lfsr	2,_C+156	;volatile
 49162  014FD0  006F FF7B FFE6     	movff	postinc2,postinc1
 49163  014FD6  006F FF7B FFE6     	movff	postinc2,postinc1
 49164  014FDC  006F FF7B FFE6     	movff	postinc2,postinc1
 49165  014FE2  006F FF7B FFE6     	movff	postinc2,postinc1
 49166  014FE8  EC64  F0C1         	call	___fldiv	;wreg free
 49167  014FEC  0060  F0AB  FFE6   	movff	btemp,postinc1
 49168  014FF2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49169  014FF8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49170  014FFE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49171  015004  EC32  F0B3         	call	___flmul	;wreg free
 49172  015008  0060  F0AB  FFE6   	movff	btemp,postinc1
 49173  01500E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49174  015014  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49175  01501A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49176  015020  ECC9  F0F4         	call	___fltol	;wreg free
 49177  015024  0060  F0A8  F034   	movff	btemp,btemp+10
 49178  01502A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49179  015030  0E01               	movlw	1
 49180  015032  2634               	addwf	(btemp+10)^0,f,c
 49181  015034  0E00               	movlw	0
 49182  015036  2235               	addwfc	(btemp+11)^0,f,c
 49183  015038  0060  F0D0  FC37   	movff	btemp+10,_C+182	;volatile
 49184  01503E  0060  F0D4  FC38   	movff	btemp+11,_C+183	;volatile
 49185                           
 49186                           ;bsoc.c: 76:  if (C.soc > 100)
 49187  015044  EE23  F037         	lfsr	2,_C+182	;volatile
 49188  015048  0E01               	movlw	1
 49189  01504A  50DB               	movf	plusw2,w,c
 49190  01504C  E104               	bnz	u1653_20
 49191  01504E  0E65               	movlw	101
 49192  015050  5CDE               	subwf	postinc2,w,c
 49193  015052  A0D8               	btfss	status,0,c
 49194  015054  D008               	goto	l16898
 49195  015056                     u1653_20:
 49196                           
 49197                           ;bsoc.c: 77:   C.soc = 100;
 49198  015056  0E64               	movlw	100
 49199  015058  006F FFA0  FC37    	movff	wreg,_C+182	;volatile
 49200  01505E  0E00               	movlw	0
 49201  015060  006F FFA0  FC38    	movff	wreg,_C+183	;volatile
 49202  015066                     l16898:
 49203                           
 49204                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 49205  015066  EE22  F3C5         	lfsr	2,_C+68	;volatile
 49206  01506A  0E03               	movlw	3
 49207  01506C  AEDB               	btfss	plusw2,7,c
 49208  01506E  D047               	goto	l2370
 49209                           
 49210                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 49211  015070  EE22  F3C5         	lfsr	2,_C+68	;volatile
 49212  015074  006F FF7B FFE6     	movff	postinc2,postinc1
 49213  01507A  006F FF7B FFE6     	movff	postinc2,postinc1
 49214  015080  006F FF7B FFE6     	movff	postinc2,postinc1
 49215  015086  006F FF7B FFE6     	movff	postinc2,postinc1
 49216  01508C  EE23  F01D         	lfsr	2,_C+156	;volatile
 49217  015090  006F FF7B FFE6     	movff	postinc2,postinc1
 49218  015096  006F FF7B FFE6     	movff	postinc2,postinc1
 49219  01509C  006F FF7B FFE6     	movff	postinc2,postinc1
 49220  0150A2  006F FF7B FFE6     	movff	postinc2,postinc1
 49221  0150A8  EC64  F0C1         	call	___fldiv	;wreg free
 49222  0150AC  0060  F0AB  FFE6   	movff	btemp,postinc1
 49223  0150B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49224  0150B8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49225  0150BE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49226  0150C4  ECA4  F00F         	call	___flneg	;wreg free
 49227  0150C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 49228  0150CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49229  0150D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49230  0150DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49231  0150E0  ECC9  F0F4         	call	___fltol	;wreg free
 49232  0150E4  0060  F0A8  F034   	movff	btemp,btemp+10
 49233  0150EA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49234  0150F0  0060  F0D0  FC35   	movff	btemp+10,_C+180	;volatile
 49235  0150F6  0060  F0D4  FC36   	movff	btemp+11,_C+181	;volatile
 49236                           
 49237                           ;bsoc.c: 81:  } else {
 49238  0150FC  D008               	goto	l16902
 49239  0150FE                     l2370:
 49240                           
 49241                           ;bsoc.c: 82:   C.runtime = 99;
 49242  0150FE  0E63               	movlw	99
 49243  015100  006F FFA0  FC35    	movff	wreg,_C+180	;volatile
 49244  015106  0E00               	movlw	0
 49245  015108  006F FFA0  FC36    	movff	wreg,_C+181	;volatile
 49246  01510E                     l16902:
 49247                           
 49248                           ;bsoc.c: 84:  if (C.runtime > 99)
 49249  01510E  EE23  F035         	lfsr	2,_C+180	;volatile
 49250  015112  0E01               	movlw	1
 49251  015114  50DB               	movf	plusw2,w,c
 49252  015116  E104               	bnz	u1655_20
 49253  015118  0E64               	movlw	100
 49254  01511A  5CDE               	subwf	postinc2,w,c
 49255  01511C  A0D8               	btfss	status,0,c
 49256  01511E  D008               	goto	l16906
 49257  015120                     u1655_20:
 49258                           
 49259                           ;bsoc.c: 85:   C.runtime = 99;
 49260  015120  0E63               	movlw	99
 49261  015122  006F FFA0  FC35    	movff	wreg,_C+180	;volatile
 49262  015128  0E00               	movlw	0
 49263  01512A  006F FFA0  FC36    	movff	wreg,_C+181	;volatile
 49264  015130                     l16906:
 49265                           
 49266                           ;bsoc.c: 87:  V.lowint_count++;
 49267  015130  0E01               	movlw	1
 49268  015132  0102               	movlb	2	; () banked
 49269  015134  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 49270  015136  0E00               	movlw	0
 49271  015138  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 49272  01513A  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 49273  01513C  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 49274                           
 49275                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 49276  01513E  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 49277  015140  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 49278  015142  A4D8               	btfss	status,2,c
 49279  015144  D177               	goto	l16918
 49280                           
 49281                           ; BSR set to: 2
 49282  015146  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 49283  015148  B4D8               	btfsc	status,2,c
 49284  01514A  D174               	goto	l16918
 49285                           
 49286                           ; BSR set to: 2
 49287                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 49288  01514C  EC84  F016         	call	_port_data_dma_ptr	;wreg free
 49289                           
 49290                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49291  015150  0EFF               	movlw	-1
 49292  015152  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 49293  015158  0EFE               	movlw	-2
 49294  01515A  0060  F0AB  FFE3   	movff	btemp,plusw1
 49295                           
 49296                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 49297  015160  EE23  F052         	lfsr	2,_C+209	;volatile
 49298  015164  006F FF7B FFE6     	movff	postinc2,postinc1
 49299  01516A  006F FF7B FFE6     	movff	postinc2,postinc1
 49300  015170  006F FF7B FFE6     	movff	postinc2,postinc1
 49301  015176  006F FF7B FFE6     	movff	postinc2,postinc1
 49302  01517C  EE23  F056         	lfsr	2,_C+213	;volatile
 49303  015180  006F FF7B FFE6     	movff	postinc2,postinc1
 49304  015186  006F FF7B FFE6     	movff	postinc2,postinc1
 49305  01518C  006F FF7B FFE6     	movff	postinc2,postinc1
 49306  015192  006F FF7B FFE6     	movff	postinc2,postinc1
 49307  015198  EE23  F01D         	lfsr	2,_C+156	;volatile
 49308  01519C  006F FF7B FFE6     	movff	postinc2,postinc1
 49309  0151A2  006F FF7B FFE6     	movff	postinc2,postinc1
 49310  0151A8  006F FF7B FFE6     	movff	postinc2,postinc1
 49311  0151AE  006F FF7B FFE6     	movff	postinc2,postinc1
 49312  0151B4  EE23  F0B5         	lfsr	2,_C+308	;volatile
 49313  0151B8  006F FF7B FFE6     	movff	postinc2,postinc1
 49314  0151BE  006F FF7B FFE6     	movff	postinc2,postinc1
 49315  0151C4  006F FF7B FFE6     	movff	postinc2,postinc1
 49316  0151CA  006F FF7B FFE6     	movff	postinc2,postinc1
 49317  0151D0  EE23  F0B1         	lfsr	2,_C+304	;volatile
 49318  0151D4  006F FF7B FFE6     	movff	postinc2,postinc1
 49319  0151DA  006F FF7B FFE6     	movff	postinc2,postinc1
 49320  0151E0  006F FF7B FFE6     	movff	postinc2,postinc1
 49321  0151E6  006F FF7B FFE6     	movff	postinc2,postinc1
 49322  0151EC  EE23  F0AF         	lfsr	2,_C+302	;volatile
 49323  0151F0  50DF               	movf	indf2,w,c
 49324  0151F2  6EE6               	movwf	postinc1,c
 49325  0151F4  0E00               	movlw	0
 49326  0151F6  6EE6               	movwf	postinc1,c
 49327  0151F8  EC68  F016         	call	_get_ac_charger_relay	;wreg free
 49328  0151FC  502A               	movf	btemp^0,w,c
 49329  0151FE  6EE6               	movwf	postinc1,c
 49330  015200  0E00               	movlw	0
 49331  015202  6EE6               	movwf	postinc1,c
 49332  015204  EE22  F3E9         	lfsr	2,_C+104	;volatile
 49333  015208  006F FF7B FFE6     	movff	postinc2,postinc1
 49334  01520E  006F FF7B FFE6     	movff	postinc2,postinc1
 49335  015214  006F FF7B FFE6     	movff	postinc2,postinc1
 49336  01521A  006F FF7B FFE6     	movff	postinc2,postinc1
 49337  015220  EE23  F009         	lfsr	2,_C+136	;volatile
 49338  015224  006F FF7B FFE6     	movff	postinc2,postinc1
 49339  01522A  006F FF7B FFE6     	movff	postinc2,postinc1
 49340  015230  006F FF7B FFE6     	movff	postinc2,postinc1
 49341  015236  006F FF7B FFE6     	movff	postinc2,postinc1
 49342  01523C  EE23  F035         	lfsr	2,_C+180	;volatile
 49343  015240  006F FF78  F034    	movff	postinc2,btemp+10
 49344  015246  006F FF74  F035    	movff	postdec2,btemp+11
 49345  01524C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49346  015252  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49347  015258  EE23  F037         	lfsr	2,_C+182	;volatile
 49348  01525C  006F FF78  F034    	movff	postinc2,btemp+10
 49349  015262  006F FF74  F035    	movff	postdec2,btemp+11
 49350  015268  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49351  01526E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49352  015274  EE23  F015         	lfsr	2,_C+148	;volatile
 49353  015278  006F FF7B FFE6     	movff	postinc2,postinc1
 49354  01527E  006F FF7B FFE6     	movff	postinc2,postinc1
 49355  015284  006F FF7B FFE6     	movff	postinc2,postinc1
 49356  01528A  006F FF7B FFE6     	movff	postinc2,postinc1
 49357  015290  EE23  F011         	lfsr	2,_C+144	;volatile
 49358  015294  006F FF7B FFE6     	movff	postinc2,postinc1
 49359  01529A  006F FF7B FFE6     	movff	postinc2,postinc1
 49360  0152A0  006F FF7B FFE6     	movff	postinc2,postinc1
 49361  0152A6  006F FF7B FFE6     	movff	postinc2,postinc1
 49362  0152AC  EE22  F3F9         	lfsr	2,_C+120	;volatile
 49363  0152B0  006F FF7B FFE6     	movff	postinc2,postinc1
 49364  0152B6  006F FF7B FFE6     	movff	postinc2,postinc1
 49365  0152BC  006F FF7B FFE6     	movff	postinc2,postinc1
 49366  0152C2  006F FF7B FFE6     	movff	postinc2,postinc1
 49367  0152C8  EE22  F3F5         	lfsr	2,_C+116	;volatile
 49368  0152CC  006F FF7B FFE6     	movff	postinc2,postinc1
 49369  0152D2  006F FF7B FFE6     	movff	postinc2,postinc1
 49370  0152D8  006F FF7B FFE6     	movff	postinc2,postinc1
 49371  0152DE  006F FF7B FFE6     	movff	postinc2,postinc1
 49372  0152E4  EE22  F3FD         	lfsr	2,_C+124	;volatile
 49373  0152E8  006F FF7B FFE6     	movff	postinc2,postinc1
 49374  0152EE  006F FF7B FFE6     	movff	postinc2,postinc1
 49375  0152F4  006F FF7B FFE6     	movff	postinc2,postinc1
 49376  0152FA  006F FF7B FFE6     	movff	postinc2,postinc1
 49377  015300  EE23  F001         	lfsr	2,_C+128	;volatile
 49378  015304  006F FF7B FFE6     	movff	postinc2,postinc1
 49379  01530A  006F FF7B FFE6     	movff	postinc2,postinc1
 49380  015310  006F FF7B FFE6     	movff	postinc2,postinc1
 49381  015316  006F FF7B FFE6     	movff	postinc2,postinc1
 49382  01531C  EE22  F3C9         	lfsr	2,_C+72	;volatile
 49383  015320  006F FF7B FFE6     	movff	postinc2,postinc1
 49384  015326  006F FF7B FFE6     	movff	postinc2,postinc1
 49385  01532C  006F FF7B FFE6     	movff	postinc2,postinc1
 49386  015332  006F FF7B FFE6     	movff	postinc2,postinc1
 49387  015338  EE22  F3C5         	lfsr	2,_C+68	;volatile
 49388  01533C  006F FF7B FFE6     	movff	postinc2,postinc1
 49389  015342  006F FF7B FFE6     	movff	postinc2,postinc1
 49390  015348  006F FF7B FFE6     	movff	postinc2,postinc1
 49391  01534E  006F FF7B FFE6     	movff	postinc2,postinc1
 49392  015354  EE22  F3E5         	lfsr	2,_C+100	;volatile
 49393  015358  006F FF7B FFE6     	movff	postinc2,postinc1
 49394  01535E  006F FF7B FFE6     	movff	postinc2,postinc1
 49395  015364  006F FF7B FFE6     	movff	postinc2,postinc1
 49396  01536A  006F FF7B FFE6     	movff	postinc2,postinc1
 49397  015370  EE22  F3CD         	lfsr	2,_C+76	;volatile
 49398  015374  006F FF7B FFE6     	movff	postinc2,postinc1
 49399  01537A  006F FF7B FFE6     	movff	postinc2,postinc1
 49400  015380  006F FF7B FFE6     	movff	postinc2,postinc1
 49401  015386  006F FF7B FFE6     	movff	postinc2,postinc1
 49402  01538C  EE22  F3D1         	lfsr	2,_C+80	;volatile
 49403  015390  006F FF7B FFE6     	movff	postinc2,postinc1
 49404  015396  006F FF7B FFE6     	movff	postinc2,postinc1
 49405  01539C  006F FF7B FFE6     	movff	postinc2,postinc1
 49406  0153A2  006F FF7B FFE6     	movff	postinc2,postinc1
 49407  0153A8  EE22  F3D5         	lfsr	2,_C+84	;volatile
 49408  0153AC  006F FF7B FFE6     	movff	postinc2,postinc1
 49409  0153B2  006F FF7B FFE6     	movff	postinc2,postinc1
 49410  0153B8  006F FF7B FFE6     	movff	postinc2,postinc1
 49411  0153BE  006F FF7B FFE6     	movff	postinc2,postinc1
 49412  0153C4  0060  FA23  FFE6   	movff	_V+129,postinc1
 49413  0153CA  0060  FA27  FFE6   	movff	_V+130,postinc1
 49414  0153D0  0060  FA2B  FFE6   	movff	_V+131,postinc1
 49415  0153D6  0060  FA2F  FFE6   	movff	_V+132,postinc1
 49416  0153DC  0E32               	movlw	50
 49417  0153DE  6EE6               	movwf	postinc1,c
 49418  0153E0  0E00               	movlw	0
 49419  0153E2  6EE6               	movwf	postinc1,c
 49420  0153E4  0EF7               	movlw	low STR_95
 49421  0153E6  6EE6               	movwf	postinc1,c
 49422  0153E8  0EF9               	movlw	high STR_95
 49423  0153EA  6EE6               	movwf	postinc1,c
 49424                           
 49425                           ;stkvar	_log_ptr @ sp[(-98)+4]
 49426  0153EC  0EA2               	movlw	-94
 49427  0153EE  006F FF8F FFE6     	movff	plusw1,postinc1
 49428  0153F4  006F FF8F FFE6     	movff	plusw1,postinc1
 49429  0153FA  0E5E               	movlw	94
 49430  0153FC  6EE6               	movwf	postinc1,c
 49431  0153FE  ECE5  F0FE         	call	_sprintf	;wreg free
 49432                           
 49433                           ; BSR set to: 0
 49434                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 49435  015402  0E7D               	movlw	125
 49436  015404  6EE6               	movwf	postinc1,c
 49437  015406  0E00               	movlw	0
 49438  015408  6EE6               	movwf	postinc1,c
 49439  01540A  0E0A               	movlw	10
 49440  01540C  6EE6               	movwf	postinc1,c
 49441  01540E  EC20  F011         	call	_StartTimer	;wreg free
 49442                           
 49443                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 49444                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49445  015412  0EFE               	movlw	-2
 49446  015414  006F FF8F FFE6     	movff	plusw1,postinc1
 49447  01541A  006F FF8F FFE6     	movff	plusw1,postinc1
 49448  015420  EC63  F007         	call	_strlen	;wreg free
 49449  015424  0060  F0AB  FFE6   	movff	btemp,postinc1
 49450  01542A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49451  015430  EC2D  F00F         	call	_send_port_data_dma	;wreg free
 49452  015434                     l16918:
 49453                           
 49454                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 49455  015434  0E09               	movlw	9
 49456  015436  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 49457  015438  D001               	goto	l2374
 49458                           
 49459                           ;bsoc.c: 102:   log_update_wait = 0;
 49460  01543A  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 49461  01543C                     l2374:
 49462                           
 49463                           ;bsoc.c: 104:  C.update = 0;
 49464  01543C  0E00               	movlw	0
 49465  01543E  006F FFA0  FC39    	movff	wreg,_C+184	;volatile
 49466                           
 49467                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 49468  015444  92BE               	bcf	190,1,c	;volatile
 49469                           
 49470                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 49471  015446  0EFA               	movlw	250
 49472  015448  26E1               	addwf	fsr1l,f,c
 49473  01544A  0EFF               	movlw	255
 49474  01544C  22E2               	addwfc	fsr1h,f,c
 49475  01544E  0012               	return		;funcret
 49476  015450                     __end_of_calc_bsoc:
 49477                           	opt callstack 0
 49478                           
 49479 ;; *************** function _send_port_data_dma *****************
 49480 ;; Defined at:
 49481 ;;		line 397 in file "eadog.c"
 49482 ;; Parameters:    Size  Location     Type
 49483 ;;  dsize           2  [STACK] unsigned short 
 49484 ;; Auto vars:     Size  Location     Type
 49485 ;;		None
 49486 ;; Return value:  Size  Location     Type
 49487 ;;                  1  [STACK] void 
 49488 ;; Registers used:
 49489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 49490 ;; Tracked objects:
 49491 ;;		On entry : 0/0
 49492 ;;		On exit  : 3F/3B
 49493 ;;		Unchanged: 0/0
 49494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49499 ;;Total ram usage:        0 bytes
 49500 ;; Hardware stack levels used:    1
 49501 ;; Hardware stack levels required when called:    3
 49502 ;; This function calls:
 49503 ;;		Nothing
 49504 ;; This function is called by:
 49505 ;;		_calc_bsoc
 49506 ;; This function uses a reentrant model
 49507 ;;
 49508                           
 49509                           	psect	text201
 49510  001E5A                     __ptext201:
 49511                           	opt callstack 0
 49512  001E5A                     _send_port_data_dma:
 49513                           	opt callstack 11
 49514                           
 49515                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 49516                           ;stkvar	_dsize @ sp[(0)+-2]
 49517                           
 49518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49519                           ;incstack = 0
 49520  001E5A  0EFE               	movlw	-2
 49521  001E5C  04E3               	decf	plusw1,w,c
 49522  001E5E  0EFF               	movlw	-1
 49523  001E60  006F FF8C  F02A    	movff	plusw1,btemp
 49524  001E66  0E02               	movlw	2
 49525  001E68  5A2A               	subwfb	btemp^0,f,c
 49526  001E6A  A0D8               	btfss	status,0,c
 49527  001E6C  D00C               	goto	l12944
 49528                           
 49529                           ;eadog.c: 400:   dsize = 512;
 49530  001E6E  0E00               	movlw	0
 49531  001E70  6E34               	movwf	(btemp+10)^0,c
 49532  001E72  0E02               	movlw	2
 49533  001E74  6E35               	movwf	(btemp+11)^0,c
 49534                           
 49535                           ;stkvar	_dsize @ sp[(0)+-2]
 49536  001E76  0EFE               	movlw	-2
 49537  001E78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49538  001E7E  0EFF               	movlw	-1
 49539  001E80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49540  001E86                     l12944:
 49541                           
 49542                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 49543  001E86  013B               	movlb	59	; () banked
 49544  001E88  9FDC               	bcf	220,7,b	;volatile
 49545                           
 49546                           ; BSR set to: 59
 49547                           ;eadog.c: 403:  DMA2SSZ = dsize;
 49548                           ;stkvar	_dsize @ sp[(0)+-2]
 49549  001E8A  0EFE               	movlw	-2
 49550  001E8C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 49551  001E92  0EFF               	movlw	-1
 49552  001E94  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 49553                           
 49554                           ; BSR set to: 59
 49555                           ;eadog.c: 404:  DMA2DSZ = 1;
 49556  001E9A  0E00               	movlw	0
 49557  001E9C  6FCF               	movwf	207,b	;volatile
 49558  001E9E  0E01               	movlw	1
 49559  001EA0  6FCE               	movwf	206,b	;volatile
 49560                           
 49561                           ; BSR set to: 59
 49562                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 49563  001EA2  8FDC               	bsf	220,7,b	;volatile
 49564                           
 49565                           ; BSR set to: 59
 49566                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 49567  001EA4  8DDC               	bsf	220,6,b	;volatile
 49568                           
 49569                           ; BSR set to: 59
 49570                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 49571  001EA6  52E5               	movf	postdec1,f,c
 49572  001EA8  52E5               	movf	postdec1,f,c
 49573  001EAA  0012               	return		;funcret
 49574  001EAC                     __end_of_send_port_data_dma:
 49575                           	opt callstack 0
 49576                           
 49577 ;; *************** function _port_data_dma_ptr *****************
 49578 ;; Defined at:
 49579 ;;		line 412 in file "eadog.c"
 49580 ;; Parameters:    Size  Location     Type
 49581 ;;		None
 49582 ;; Auto vars:     Size  Location     Type
 49583 ;;		None
 49584 ;; Return value:  Size  Location     Type
 49585 ;;                  2  [STACK] PTR unsigned char 
 49586 ;; Registers used:
 49587 ;;		wreg, status,2, status,0, btemp, btemp+1
 49588 ;; Tracked objects:
 49589 ;;		On entry : 3F/2
 49590 ;;		On exit  : 0/0
 49591 ;;		Unchanged: 0/0
 49592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49597 ;;Total ram usage:        0 bytes
 49598 ;; Hardware stack levels used:    1
 49599 ;; Hardware stack levels required when called:    3
 49600 ;; This function calls:
 49601 ;;		Nothing
 49602 ;; This function is called by:
 49603 ;;		_calc_bsoc
 49604 ;; This function uses a reentrant model
 49605 ;;
 49606                           
 49607                           	psect	text202
 49608  002D08                     __ptext202:
 49609                           	opt callstack 0
 49610  002D08                     _port_data_dma_ptr:
 49611                           	opt callstack 11
 49612                           
 49613                           ;eadog.c: 414:  return port_data;
 49614                           
 49615                           ; BSR set to: 59
 49616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49617                           ;incstack = 0
 49618  002D08  0E81               	movlw	low _port_data
 49619  002D0A  6E2A               	movwf	btemp^0,c
 49620  002D0C  0E09               	movlw	high _port_data
 49621  002D0E  6E2B               	movwf	(btemp+1)^0,c
 49622                           
 49623                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49624  002D10  0012               	return		;funcret
 49625  002D12                     __end_of_port_data_dma_ptr:
 49626                           	opt callstack 0
 49627                           
 49628 ;; *************** function ___asfladd *****************
 49629 ;; Defined at:
 49630 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 49631 ;; Parameters:    Size  Location     Type
 49632 ;;  f1p             2  [STACK] PTR 
 49633 ;;		 -> C(320), 
 49634 ;;  f2              4  [STACK] PTR 
 49635 ;; Auto vars:     Size  Location     Type
 49636 ;;		None
 49637 ;; Return value:  Size  Location     Type
 49638 ;;                  4  [STACK] PTR 
 49639 ;; Registers used:
 49640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 49641 ;; Tracked objects:
 49642 ;;		On entry : 0/0
 49643 ;;		On exit  : 0/0
 49644 ;;		Unchanged: 0/0
 49645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49650 ;;Total ram usage:        0 bytes
 49651 ;; Hardware stack levels used:    1
 49652 ;; Hardware stack levels required when called:    4
 49653 ;; This function calls:
 49654 ;;		___fladd
 49655 ;; This function is called by:
 49656 ;;		_calc_bsoc
 49657 ;; This function uses a reentrant model
 49658 ;;
 49659                           
 49660                           	psect	text203
 49661  0016FC                     __ptext203:
 49662                           	opt callstack 0
 49663  0016FC                     ___asfladd:
 49664                           	opt callstack 10
 49665                           
 49666                           ;	Return value of ___asfladd is never used
 49667                           ;stkvar	_f2 @ sp[(0)+-6]
 49668                           
 49669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49670                           ;incstack = 0
 49671  0016FC  0EFA               	movlw	-6
 49672  0016FE  006F FF8F FFE6     	movff	plusw1,postinc1
 49673  001704  006F FF8F FFE6     	movff	plusw1,postinc1
 49674  00170A  006F FF8F FFE6     	movff	plusw1,postinc1
 49675  001710  006F FF8F FFE6     	movff	plusw1,postinc1
 49676                           
 49677                           ;stkvar	_f1p @ sp[(-4)+-2]
 49678  001716  0EFA               	movlw	-6
 49679  001718  006F FF8F FFD9     	movff	plusw1,fsr2l
 49680  00171E  0EFB               	movlw	-5
 49681  001720  006F FF8F FFDA     	movff	plusw1,fsr2h
 49682  001726  006F FF7B FFE6     	movff	postinc2,postinc1
 49683  00172C  006F FF7B FFE6     	movff	postinc2,postinc1
 49684  001732  006F FF7B FFE6     	movff	postinc2,postinc1
 49685  001738  006F FF7B FFE6     	movff	postinc2,postinc1
 49686  00173E  EC47  F0B7         	call	___fladd	;wreg free
 49687                           
 49688                           ;stkvar	_f1p @ sp[(0)+-2]
 49689  001742  0EFE               	movlw	-2
 49690  001744  006F FF8F FFD9     	movff	plusw1,fsr2l
 49691  00174A  0EFF               	movlw	-1
 49692  00174C  006F FF8F FFDA     	movff	plusw1,fsr2h
 49693  001752  0060  F0AB  FFDE   	movff	btemp,postinc2
 49694  001758  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 49695  00175E  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 49696  001764  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 49697                           
 49698                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 49699  00176A  0EFA               	movlw	250
 49700  00176C  26E1               	addwf	fsr1l,f,c
 49701  00176E  0EFF               	movlw	255
 49702  001770  22E2               	addwfc	fsr1h,f,c
 49703  001772  0012               	return		;funcret
 49704  001774                     __end_of___asfladd:
 49705                           	opt callstack 0
 49706                           
 49707 ;; *************** function _INT0_ISR *****************
 49708 ;; Defined at:
 49709 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 49710 ;; Parameters:    Size  Location     Type
 49711 ;;		None
 49712 ;; Auto vars:     Size  Location     Type
 49713 ;;		None
 49714 ;; Return value:  Size  Location     Type
 49715 ;;                  1    wreg      void 
 49716 ;; Registers used:
 49717 ;;		wreg, status,2, status,0, pclath, tosl
 49718 ;; Tracked objects:
 49719 ;;		On entry : 0/0
 49720 ;;		On exit  : 0/0
 49721 ;;		Unchanged: 0/0
 49722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49727 ;;Total ram usage:        0 bytes
 49728 ;; Hardware stack levels used:    1
 49729 ;; Hardware stack levels required when called:    2
 49730 ;; This function calls:
 49731 ;;		_INT0_CallBack
 49732 ;; This function is called by:
 49733 ;;		Interrupt level 2
 49734 ;; This function uses a non-reentrant model
 49735 ;;
 49736                           
 49737                           	psect	text204
 49738  002CE0                     __ptext204:
 49739                           	opt callstack 0
 49740  002CE0                     _INT0_ISR:
 49741                           	opt callstack 3
 49742                           
 49743                           ;incstack = 0
 49744  002CE0  EE14  F32C         	lfsr	1,___inthi_sp
 49745                           
 49746                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 49747  002CE4  0139               	movlb	57	; () banked
 49748  002CE6  91A1               	bcf	161,0,b	;volatile
 49749                           
 49750                           ; BSR set to: 57
 49751                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 49752  002CE8  EC0E  F015         	call	_INT0_CallBack	;wreg free
 49753  002CEC  0011               	retfie		f
 49754  002CEE                     __end_of_INT0_ISR:
 49755                           	opt callstack 0
 49756                           
 49757 ;; *************** function _INT0_CallBack *****************
 49758 ;; Defined at:
 49759 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 49760 ;; Parameters:    Size  Location     Type
 49761 ;;		None
 49762 ;; Auto vars:     Size  Location     Type
 49763 ;;		None
 49764 ;; Return value:  Size  Location     Type
 49765 ;;                  1  [STACK] void 
 49766 ;; Registers used:
 49767 ;;		wreg, status,2, status,0, pclath, tosl
 49768 ;; Tracked objects:
 49769 ;;		On entry : 3F/39
 49770 ;;		On exit  : 0/0
 49771 ;;		Unchanged: 0/0
 49772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49777 ;;Total ram usage:        0 bytes
 49778 ;; Hardware stack levels used:    1
 49779 ;; Hardware stack levels required when called:    1
 49780 ;; This function calls:
 49781 ;;		Absolute function
 49782 ;;		_INT0_DefaultInterruptHandler
 49783 ;; This function is called by:
 49784 ;;		_INT0_ISR
 49785 ;; This function uses a reentrant model
 49786 ;;
 49787                           
 49788                           	psect	text205
 49789  002A1C                     __ptext205:
 49790                           	opt callstack 0
 49791  002A1C                     _INT0_CallBack:
 49792                           	opt callstack 3
 49793                           
 49794                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 49795                           
 49796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49797                           ;incstack = 0
 49798  002A1C  0100               	movlb	0	; () banked
 49799  002A1E  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49800  002A20  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49801  002A22  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49802  002A24  B4D8               	btfsc	status,2,c
 49803  002A26  0012               	return	
 49804                           
 49805                           ; BSR set to: 0
 49806                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 49807  002A28  D801               	call	u1313_48
 49808  002A2A  0012               	return	
 49809  002A2C                     u1313_48:
 49810  002A2C  0005               	push	
 49811  002A2E  6EFA               	movwf	pclath,c
 49812  002A30  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49813  002A32  6EFD               	movwf	tosl,c
 49814  002A34  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49815  002A36  6EFE               	movwf	tosh,c
 49816  002A38  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49817  002A3A  6EFF               	movwf	tosu,c
 49818  002A3C  50FA               	movf	pclath,w,c
 49819  002A3E  0012               	return		;indir
 49820  002A40                     __end_of_INT0_CallBack:
 49821                           	opt callstack 0
 49822                           
 49823 ;; *************** function _INT0_DefaultInterruptHandler *****************
 49824 ;; Defined at:
 49825 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 49826 ;; Parameters:    Size  Location     Type
 49827 ;;		None
 49828 ;; Auto vars:     Size  Location     Type
 49829 ;;		None
 49830 ;; Return value:  Size  Location     Type
 49831 ;;                  1  [STACK] void 
 49832 ;; Registers used:
 49833 ;;		None
 49834 ;; Tracked objects:
 49835 ;;		On entry : 3F/0
 49836 ;;		On exit  : 0/0
 49837 ;;		Unchanged: 0/0
 49838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49843 ;;Total ram usage:        0 bytes
 49844 ;; Hardware stack levels used:    1
 49845 ;; This function calls:
 49846 ;;		Nothing
 49847 ;; This function is called by:
 49848 ;;		_EXT_INT_Initialize
 49849 ;;		_INT0_CallBack
 49850 ;; This function uses a reentrant model
 49851 ;;
 49852                           
 49853                           	psect	text206
 49854  002D8E                     __ptext206:
 49855                           	opt callstack 0
 49856  002D8E                     _INT0_DefaultInterruptHandler:
 49857                           	opt callstack 3
 49858                           
 49859                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49860                           
 49861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49862                           ;incstack = 0
 49863  002D8E  0012               	return		;funcret
 49864  002D90                     __end_of_INT0_DefaultInterruptHandler:
 49865                           	opt callstack 0
 49866                           
 49867 ;; *************** function _Default_ISR *****************
 49868 ;; Defined at:
 49869 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 49870 ;; Parameters:    Size  Location     Type
 49871 ;;		None
 49872 ;; Auto vars:     Size  Location     Type
 49873 ;;		None
 49874 ;; Return value:  Size  Location     Type
 49875 ;;                  1    wreg      void 
 49876 ;; Registers used:
 49877 ;;		None
 49878 ;; Tracked objects:
 49879 ;;		On entry : 0/0
 49880 ;;		On exit  : 0/0
 49881 ;;		Unchanged: 0/0
 49882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49887 ;;Total ram usage:        0 bytes
 49888 ;; Hardware stack levels used:    1
 49889 ;; This function calls:
 49890 ;;		Nothing
 49891 ;; This function is called by:
 49892 ;;		Interrupt level 2
 49893 ;; This function uses a non-reentrant model
 49894 ;;
 49895                           
 49896                           	psect	text207
 49897  002D84                     __ptext207:
 49898                           	opt callstack 0
 49899  002D84                     _Default_ISR:
 49900                           	opt callstack 5
 49901                           
 49902                           ;incstack = 0
 49903  002D84  EE14  F32C         	lfsr	1,___inthi_sp
 49904  002D88  0011               	retfie		f
 49905  002D8A                     __end_of_Default_ISR:
 49906                           	opt callstack 0
 49907                           
 49908 ;; *************** function _ADCC_ISR *****************
 49909 ;; Defined at:
 49910 ;;		line 314 in file "mcc_generated_files/adcc.c"
 49911 ;; Parameters:    Size  Location     Type
 49912 ;;		None
 49913 ;; Auto vars:     Size  Location     Type
 49914 ;;		None
 49915 ;; Return value:  Size  Location     Type
 49916 ;;                  1    wreg      void 
 49917 ;; Registers used:
 49918 ;;		wreg, status,2, status,0, pclath, tosl
 49919 ;; Tracked objects:
 49920 ;;		On entry : 0/0
 49921 ;;		On exit  : 0/0
 49922 ;;		Unchanged: 0/0
 49923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49928 ;;Total ram usage:        0 bytes
 49929 ;; Hardware stack levels used:    1
 49930 ;; Hardware stack levels required when called:    1
 49931 ;; This function calls:
 49932 ;;		Absolute function
 49933 ;;		_ADCC_DefaultInterruptHandler
 49934 ;;		_adc_int_handler
 49935 ;; This function is called by:
 49936 ;;		Interrupt level 2
 49937 ;; This function uses a non-reentrant model
 49938 ;;
 49939                           
 49940                           	psect	text208
 49941  0026B0                     __ptext208:
 49942                           	opt callstack 0
 49943  0026B0                     _ADCC_ISR:
 49944                           	opt callstack 4
 49945                           
 49946                           ;incstack = 0
 49947  0026B0  EE14  F32C         	lfsr	1,___inthi_sp
 49948                           
 49949                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 49950  0026B4  0139               	movlb	57	; () banked
 49951  0026B6  95A1               	bcf	161,2,b	;volatile
 49952                           
 49953                           ; BSR set to: 57
 49954                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 49955  0026B8  0100               	movlb	0	; () banked
 49956  0026BA  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49957  0026BC  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49958  0026BE  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49959  0026C0  B4D8               	btfsc	status,2,c
 49960  0026C2  0011               	retfie		f
 49961                           
 49962                           ; BSR set to: 0
 49963                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 49964  0026C4  D801               	call	i2u1380_48
 49965  0026C6  0011               	retfie		f
 49966  0026C8                     i2u1380_48:
 49967  0026C8  0005               	push	
 49968  0026CA  6EFA               	movwf	pclath,c
 49969  0026CC  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49970  0026CE  6EFD               	movwf	tosl,c
 49971  0026D0  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49972  0026D2  6EFE               	movwf	tosh,c
 49973  0026D4  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49974  0026D6  6EFF               	movwf	tosu,c
 49975  0026D8  50FA               	movf	pclath,w,c
 49976  0026DA  0012               	return		;indir
 49977  0026DC                     __end_of_ADCC_ISR:
 49978                           	opt callstack 0
 49979                           
 49980 ;; *************** function _adc_int_t_handler *****************
 49981 ;; Defined at:
 49982 ;;		line 193 in file "daq.c"
 49983 ;; Parameters:    Size  Location     Type
 49984 ;;		None
 49985 ;; Auto vars:     Size  Location     Type
 49986 ;;		None
 49987 ;; Return value:  Size  Location     Type
 49988 ;;                  1  [STACK] void 
 49989 ;; Registers used:
 49990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 49991 ;; Tracked objects:
 49992 ;;		On entry : 3F/0
 49993 ;;		On exit  : 0/0
 49994 ;;		Unchanged: 0/0
 49995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50000 ;;Total ram usage:        0 bytes
 50001 ;; Hardware stack levels used:    1
 50002 ;; Hardware stack levels required when called:    1
 50003 ;; This function calls:
 50004 ;;		_ADCC_DischargeSampleCapacitor
 50005 ;;		_ADCC_StartConversion
 50006 ;; This function is called by:
 50007 ;;		_start_adc_scan
 50008 ;;		_ADCC_ThresholdISR
 50009 ;; This function uses a reentrant model
 50010 ;;
 50011                           
 50012                           	psect	text209
 50013  001504                     __ptext209:
 50014                           	opt callstack 0
 50015  001504                     _adc_int_t_handler:
 50016                           	opt callstack 3
 50017                           
 50018                           ;daq.c: 198:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 50019                           
 50020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50021                           ;incstack = 0
 50022  001504  013E               	movlb	62	; () banked
 50023  001506  51E6               	movf	230,w,b	;volatile
 50024  001508  006F FB9C  F02A    	movff	16103,btemp	;volatile
 50025  00150E  6A2B               	clrf	(btemp+1)^0,c
 50026  001510  0060  F0A8  F02B   	movff	btemp,btemp+1
 50027  001516  6A2A               	clrf	btemp^0,c
 50028  001518  262A               	addwf	btemp^0,f,c
 50029  00151A  0E00               	movlw	0
 50030  00151C  222B               	addwfc	(btemp+1)^0,f,c
 50031  00151E  0101               	movlb	1	; () banked
 50032  001520  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50033  001522  0D02               	mullw	2
 50034  001524  0E00               	movlw	low _R
 50035  001526  24F3               	addwf	243,w,c
 50036  001528  6ED9               	movwf	fsr2l,c
 50037  00152A  0E01               	movlw	high _R
 50038  00152C  20F4               	addwfc	prodh,w,c
 50039  00152E  6EDA               	movwf	fsr2h,c
 50040  001530  0060  F0AB  FFDE   	movff	btemp,postinc2
 50041  001536  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 50042  00153C                     l14652:
 50043                           
 50044                           ;daq.c: 200:   if (++R.scan_index > 0XD) {
 50045  00153C  0101               	movlb	1	; () banked
 50046  00153E  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 50047  001540  0E0D               	movlw	13
 50048  001542  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 50049  001544  D003               	goto	l14658
 50050                           
 50051                           ; BSR set to: 1
 50052                           ;daq.c: 201:    R.done = 1;
 50053  001546  0E01               	movlw	1
 50054  001548  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 50055  00154A  0012               	return	
 50056  00154C                     l14658:
 50057                           
 50058                           ; BSR set to: 1
 50059                           ;daq.c: 207:  } while (!((R.scan_select >> R.scan_index) &0x1));
 50060  00154C  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 50061  001552  EE20  F133         	lfsr	2,_R+51	;volatile
 50062  001556  006F FF78  F032    	movff	postinc2,btemp+8
 50063  00155C  006F FF74  F033    	movff	postdec2,btemp+9
 50064  001562  2A35               	incf	(btemp+11)^0,f,c
 50065  001564  D003               	goto	u1377_44
 50066  001566                     u1377_45:
 50067  001566  90D8               	bcf	status,0,c
 50068  001568  3233               	rrcf	(btemp+9)^0,f,c
 50069  00156A  3232               	rrcf	(btemp+8)^0,f,c
 50070  00156C                     u1377_44:
 50071  00156C  2E35               	decfsz	(btemp+11)^0,f,c
 50072  00156E  D7FB               	goto	u1377_45
 50073  001570  A032               	btfss	(btemp+8)^0,0,c
 50074  001572  D7E4               	goto	l14652
 50075                           
 50076                           ;daq.c: 208:  ADCC_DischargeSampleCapacitor();
 50077  001574  EC9F  F016         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 50078                           
 50079                           ; BSR set to: 62
 50080                           ;daq.c: 209:  ADCC_StartConversion(R.scan_index & 0xf);
 50081  001578  0101               	movlb	1	; () banked
 50082  00157A  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50083  00157C  0B0F               	andlw	15
 50084  00157E  6EE6               	movwf	postinc1,c
 50085  001580  EC22  F016         	call	_ADCC_StartConversion	;wreg free
 50086                           
 50087                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50088  001584  0012               	return		;funcret
 50089  001586                     __end_of_adc_int_t_handler:
 50090                           	opt callstack 0
 50091                           
 50092 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 50093 ;; Defined at:
 50094 ;;		line 339 in file "mcc_generated_files/adcc.c"
 50095 ;; Parameters:    Size  Location     Type
 50096 ;;		None
 50097 ;; Auto vars:     Size  Location     Type
 50098 ;;		None
 50099 ;; Return value:  Size  Location     Type
 50100 ;;                  1  [STACK] void 
 50101 ;; Registers used:
 50102 ;;		None
 50103 ;; Tracked objects:
 50104 ;;		On entry : 3F/0
 50105 ;;		On exit  : 0/0
 50106 ;;		Unchanged: 0/0
 50107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50112 ;;Total ram usage:        0 bytes
 50113 ;; Hardware stack levels used:    1
 50114 ;; This function calls:
 50115 ;;		Nothing
 50116 ;; This function is called by:
 50117 ;;		_ADCC_Initialize
 50118 ;;		_ADCC_ISR
 50119 ;;		_ADCC_ThresholdISR
 50120 ;; This function uses a reentrant model
 50121 ;;
 50122                           
 50123                           	psect	text210
 50124  002D90                     __ptext210:
 50125                           	opt callstack 0
 50126  002D90                     _ADCC_DefaultInterruptHandler:
 50127                           	opt callstack 4
 50128                           
 50129                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50130                           
 50131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50132                           ;incstack = 0
 50133  002D90  0012               	return		;funcret
 50134  002D92                     __end_of_ADCC_DefaultInterruptHandler:
 50135                           	opt callstack 0
 50136                           
 50137 ;; *************** function _adc_int_handler *****************
 50138 ;; Defined at:
 50139 ;;		line 183 in file "daq.c"
 50140 ;; Parameters:    Size  Location     Type
 50141 ;;		None
 50142 ;; Auto vars:     Size  Location     Type
 50143 ;;		None
 50144 ;; Return value:  Size  Location     Type
 50145 ;;                  1  [STACK] void 
 50146 ;; Registers used:
 50147 ;;		None
 50148 ;; Tracked objects:
 50149 ;;		On entry : 3F/0
 50150 ;;		On exit  : 0/0
 50151 ;;		Unchanged: 0/0
 50152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50157 ;;Total ram usage:        0 bytes
 50158 ;; Hardware stack levels used:    1
 50159 ;; This function calls:
 50160 ;;		Nothing
 50161 ;; This function is called by:
 50162 ;;		_start_adc_scan
 50163 ;;		_ADCC_ISR
 50164 ;; This function uses a reentrant model
 50165 ;;
 50166                           
 50167                           	psect	text211
 50168  002D92                     __ptext211:
 50169                           	opt callstack 0
 50170  002D92                     _adc_int_handler:
 50171                           	opt callstack 4
 50172                           
 50173                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 50174                           
 50175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50176                           ;incstack = 0
 50177  002D92  0012               	return		;funcret
 50178  002D94                     __end_of_adc_int_handler:
 50179                           	opt callstack 0
 50180                           
 50181 ;; *************** function _ADCC_ThresholdISR *****************
 50182 ;; Defined at:
 50183 ;;		line 327 in file "mcc_generated_files/adcc.c"
 50184 ;; Parameters:    Size  Location     Type
 50185 ;;		None
 50186 ;; Auto vars:     Size  Location     Type
 50187 ;;		None
 50188 ;; Return value:  Size  Location     Type
 50189 ;;                  1    wreg      void 
 50190 ;; Registers used:
 50191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 50192 ;; Tracked objects:
 50193 ;;		On entry : 0/0
 50194 ;;		On exit  : 0/0
 50195 ;;		Unchanged: 0/0
 50196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50199 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50200 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50201 ;;Total ram usage:        5 bytes
 50202 ;; Hardware stack levels used:    1
 50203 ;; Hardware stack levels required when called:    2
 50204 ;; This function calls:
 50205 ;;		Absolute function
 50206 ;;		_ADCC_DefaultInterruptHandler
 50207 ;;		_adc_int_t_handler
 50208 ;; This function is called by:
 50209 ;;		Interrupt level 2
 50210 ;; This function uses a non-reentrant model
 50211 ;;
 50212                           
 50213                           	psect	text212
 50214  0018BC                     __ptext212:
 50215                           	opt callstack 0
 50216  0018BC                     _ADCC_ThresholdISR:
 50217                           	opt callstack 3
 50218                           
 50219                           ;incstack = 0
 50220  0018BC  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 50221  0018C2  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 50222  0018C8  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 50223  0018CE  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 50224  0018D4  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 50225  0018DA  EE14  F32C         	lfsr	1,___inthi_sp
 50226                           
 50227                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 50228  0018DE  0139               	movlb	57	; () banked
 50229  0018E0  97A1               	bcf	161,3,b	;volatile
 50230                           
 50231                           ; BSR set to: 57
 50232                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 50233  0018E2  0100               	movlb	0	; () banked
 50234  0018E4  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50235  0018E6  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50236  0018E8  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50237  0018EA  B4D8               	btfsc	status,2,c
 50238  0018EC  D00C               	goto	i2u1382_49
 50239                           
 50240                           ; BSR set to: 0
 50241                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 50242  0018EE  D801               	call	i2u1382_48
 50243  0018F0  D00A               	goto	i2u1382_49
 50244  0018F2                     i2u1382_48:
 50245  0018F2  0005               	push	
 50246  0018F4  6EFA               	movwf	pclath,c
 50247  0018F6  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50248  0018F8  6EFD               	movwf	tosl,c
 50249  0018FA  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50250  0018FC  6EFE               	movwf	tosh,c
 50251  0018FE  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50252  001900  6EFF               	movwf	tosu,c
 50253  001902  50FA               	movf	pclath,w,c
 50254  001904  0012               	return		;indir
 50255  001906                     i2u1382_49:
 50256  001906  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 50257  00190C  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 50258  001912  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 50259  001918  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 50260  00191E  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 50261  001924  0011               	retfie		f
 50262  001926                     __end_of_ADCC_ThresholdISR:
 50263                           	opt callstack 0
 50264                           
 50265 ;; *************** function _UART1_rx_vect_isr *****************
 50266 ;; Defined at:
 50267 ;;		line 181 in file "mcc_generated_files/uart1.c"
 50268 ;; Parameters:    Size  Location     Type
 50269 ;;		None
 50270 ;; Auto vars:     Size  Location     Type
 50271 ;;		None
 50272 ;; Return value:  Size  Location     Type
 50273 ;;                  1    wreg      void 
 50274 ;; Registers used:
 50275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50276 ;; Tracked objects:
 50277 ;;		On entry : 0/0
 50278 ;;		On exit  : 0/0
 50279 ;;		Unchanged: 0/0
 50280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50285 ;;Total ram usage:        0 bytes
 50286 ;; Hardware stack levels used:    1
 50287 ;; Hardware stack levels required when called:    1
 50288 ;; This function calls:
 50289 ;;		Absolute function
 50290 ;;		_UART1_Receive_ISR
 50291 ;; This function is called by:
 50292 ;;		Interrupt level 2
 50293 ;; This function uses a non-reentrant model
 50294 ;;
 50295                           
 50296                           	psect	text213
 50297  002914                     __ptext213:
 50298                           	opt callstack 0
 50299  002914                     _UART1_rx_vect_isr:
 50300                           	opt callstack 4
 50301                           
 50302                           ;incstack = 0
 50303  002914  EE14  F32C         	lfsr	1,___inthi_sp
 50304                           
 50305                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 50306  002918  0100               	movlb	0	; () banked
 50307  00291A  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50308  00291C  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50309  00291E  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50310  002920  B4D8               	btfsc	status,2,c
 50311  002922  0011               	retfie		f
 50312                           
 50313                           ; BSR set to: 0
 50314                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 50315  002924  D801               	call	i2u1384_48
 50316  002926  0011               	retfie		f
 50317  002928                     i2u1384_48:
 50318  002928  0005               	push	
 50319  00292A  6EFA               	movwf	pclath,c
 50320  00292C  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50321  00292E  6EFD               	movwf	tosl,c
 50322  002930  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50323  002932  6EFE               	movwf	tosh,c
 50324  002934  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50325  002936  6EFF               	movwf	tosu,c
 50326  002938  50FA               	movf	pclath,w,c
 50327  00293A  0012               	return		;indir
 50328  00293C                     __end_of_UART1_rx_vect_isr:
 50329                           	opt callstack 0
 50330                           
 50331 ;; *************** function _UART1_Receive_ISR *****************
 50332 ;; Defined at:
 50333 ;;		line 192 in file "mcc_generated_files/uart1.c"
 50334 ;; Parameters:    Size  Location     Type
 50335 ;;		None
 50336 ;; Auto vars:     Size  Location     Type
 50337 ;;		None
 50338 ;; Return value:  Size  Location     Type
 50339 ;;                  1  [STACK] void 
 50340 ;; Registers used:
 50341 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50342 ;; Tracked objects:
 50343 ;;		On entry : 3F/0
 50344 ;;		On exit  : 3F/0
 50345 ;;		Unchanged: 0/0
 50346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50351 ;;Total ram usage:        0 bytes
 50352 ;; Hardware stack levels used:    1
 50353 ;; This function calls:
 50354 ;;		Nothing
 50355 ;; This function is called by:
 50356 ;;		_UART1_Initialize
 50357 ;;		_UART1_rx_vect_isr
 50358 ;; This function uses a reentrant model
 50359 ;;
 50360                           
 50361                           	psect	text214
 50362  002A86                     __ptext214:
 50363                           	opt callstack 0
 50364  002A86                     _UART1_Receive_ISR:
 50365                           	opt callstack 4
 50366                           
 50367                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 50368                           
 50369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50370                           ;incstack = 0
 50371  002A86  0ED6               	movlw	low _uart1RxBuffer
 50372  002A88  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 50373  002A8A  6ED9               	movwf	fsr2l,c
 50374  002A8C  6ADA               	clrf	fsr2h,c
 50375  002A8E  0E02               	movlw	high _uart1RxBuffer
 50376  002A90  22DA               	addwfc	fsr2h,f,c
 50377  002A92  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 50378  002A98  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 50379                           
 50380                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 50381  002A9A  0E07               	movlw	7
 50382  002A9C  6457               	cpfsgt	_uart1RxHead^0,c
 50383  002A9E  D001               	goto	l13960
 50384                           
 50385                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 50386  002AA0  6A57               	clrf	_uart1RxHead^0,c	;volatile
 50387  002AA2                     l13960:
 50388                           
 50389                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 50390  002AA2  0100               	movlb	0	; () banked
 50391  002AA4  2BD2               	incf	_uart1RxCount& (0+255),f,b	;volatile
 50392                           
 50393                           ; BSR set to: 0
 50394                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50395  002AA6  0012               	return		;funcret
 50396  002AA8                     __end_of_UART1_Receive_ISR:
 50397                           	opt callstack 0
 50398                           
 50399 ;; *************** function _UART2_tx_vect_isr *****************
 50400 ;; Defined at:
 50401 ;;		line 195 in file "mcc_generated_files/uart2.c"
 50402 ;; Parameters:    Size  Location     Type
 50403 ;;		None
 50404 ;; Auto vars:     Size  Location     Type
 50405 ;;		None
 50406 ;; Return value:  Size  Location     Type
 50407 ;;                  1    wreg      void 
 50408 ;; Registers used:
 50409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50410 ;; Tracked objects:
 50411 ;;		On entry : 0/0
 50412 ;;		On exit  : 0/0
 50413 ;;		Unchanged: 0/0
 50414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50419 ;;Total ram usage:        0 bytes
 50420 ;; Hardware stack levels used:    1
 50421 ;; Hardware stack levels required when called:    1
 50422 ;; This function calls:
 50423 ;;		Absolute function
 50424 ;;		_UART2_Transmit_ISR
 50425 ;; This function is called by:
 50426 ;;		Interrupt level 2
 50427 ;; This function uses a non-reentrant model
 50428 ;;
 50429                           
 50430                           	psect	text215
 50431  00293C                     __ptext215:
 50432                           	opt callstack 0
 50433  00293C                     _UART2_tx_vect_isr:
 50434                           	opt callstack 4
 50435                           
 50436                           ; BSR set to: 0
 50437                           ;incstack = 0
 50438  00293C  EE14  F32C         	lfsr	1,___inthi_sp
 50439                           
 50440                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 50441  002940  0100               	movlb	0	; () banked
 50442  002942  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50443  002944  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50444  002946  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50445  002948  B4D8               	btfsc	status,2,c
 50446  00294A  0011               	retfie		f
 50447                           
 50448                           ; BSR set to: 0
 50449                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 50450  00294C  D801               	call	i2u1386_48
 50451  00294E  0011               	retfie		f
 50452  002950                     i2u1386_48:
 50453  002950  0005               	push	
 50454  002952  6EFA               	movwf	pclath,c
 50455  002954  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50456  002956  6EFD               	movwf	tosl,c
 50457  002958  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50458  00295A  6EFE               	movwf	tosh,c
 50459  00295C  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50460  00295E  6EFF               	movwf	tosu,c
 50461  002960  50FA               	movf	pclath,w,c
 50462  002962  0012               	return		;indir
 50463  002964                     __end_of_UART2_tx_vect_isr:
 50464                           	opt callstack 0
 50465                           
 50466 ;; *************** function _UART2_Transmit_ISR *****************
 50467 ;; Defined at:
 50468 ;;		line 213 in file "mcc_generated_files/uart2.c"
 50469 ;; Parameters:    Size  Location     Type
 50470 ;;		None
 50471 ;; Auto vars:     Size  Location     Type
 50472 ;;		None
 50473 ;; Return value:  Size  Location     Type
 50474 ;;                  1  [STACK] void 
 50475 ;; Registers used:
 50476 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50477 ;; Tracked objects:
 50478 ;;		On entry : 3F/0
 50479 ;;		On exit  : 3B/39
 50480 ;;		Unchanged: 0/0
 50481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50486 ;;Total ram usage:        0 bytes
 50487 ;; Hardware stack levels used:    1
 50488 ;; This function calls:
 50489 ;;		Nothing
 50490 ;; This function is called by:
 50491 ;;		_UART2_Initialize
 50492 ;;		_UART2_tx_vect_isr
 50493 ;; This function uses a reentrant model
 50494 ;;
 50495                           
 50496                           	psect	text216
 50497  0026DC                     __ptext216:
 50498                           	opt callstack 0
 50499  0026DC                     _UART2_Transmit_ISR:
 50500                           	opt callstack 4
 50501                           
 50502                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 50503                           
 50504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50505                           ;incstack = 0
 50506  0026DC  0E40               	movlw	64
 50507  0026DE  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 50508  0026E0  D010               	goto	l675
 50509                           
 50510                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 50511  0026E2  0E00               	movlw	low _uart2TxBuffer
 50512  0026E4  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 50513  0026E6  6ED9               	movwf	fsr2l,c
 50514  0026E8  6ADA               	clrf	fsr2h,c
 50515  0026EA  0E04               	movlw	high _uart2TxBuffer
 50516  0026EC  22DA               	addwfc	fsr2h,f,c
 50517  0026EE  50DF               	movf	indf2,w,c
 50518  0026F0  013D               	movlb	61	; () banked
 50519  0026F2  6FD2               	movwf	210,b	;volatile
 50520                           
 50521                           ; BSR set to: 61
 50522  0026F4  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 50523                           
 50524                           ; BSR set to: 61
 50525                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 50526  0026F6  0E3F               	movlw	63
 50527  0026F8  6456               	cpfsgt	_uart2TxTail^0,c
 50528  0026FA  D001               	goto	l13972
 50529                           
 50530                           ; BSR set to: 61
 50531                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 50532  0026FC  6A56               	clrf	_uart2TxTail^0,c	;volatile
 50533  0026FE                     l13972:
 50534                           
 50535                           ; BSR set to: 61
 50536                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 50537  0026FE  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 50538                           
 50539                           ;mcc_generated_files/uart2.c: 224:     }
 50540  002700  0012               	return	
 50541  002702                     l675:
 50542                           
 50543                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 50544  002702  0139               	movlb	57	; () banked
 50545  002704  9796               	bcf	150,3,b	;volatile
 50546                           
 50547                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 50548  002706  0012               	return		;funcret
 50549  002708                     __end_of_UART2_Transmit_ISR:
 50550                           	opt callstack 0
 50551                           
 50552 ;; *************** function _UART2_rx_vect_isr *****************
 50553 ;; Defined at:
 50554 ;;		line 203 in file "mcc_generated_files/uart2.c"
 50555 ;; Parameters:    Size  Location     Type
 50556 ;;		None
 50557 ;; Auto vars:     Size  Location     Type
 50558 ;;		None
 50559 ;; Return value:  Size  Location     Type
 50560 ;;                  1    wreg      void 
 50561 ;; Registers used:
 50562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50563 ;; Tracked objects:
 50564 ;;		On entry : 0/0
 50565 ;;		On exit  : 0/0
 50566 ;;		Unchanged: 0/0
 50567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50572 ;;Total ram usage:        0 bytes
 50573 ;; Hardware stack levels used:    1
 50574 ;; Hardware stack levels required when called:    1
 50575 ;; This function calls:
 50576 ;;		Absolute function
 50577 ;;		_UART2_Receive_ISR
 50578 ;; This function is called by:
 50579 ;;		Interrupt level 2
 50580 ;; This function uses a non-reentrant model
 50581 ;;
 50582                           
 50583                           	psect	text217
 50584  002964                     __ptext217:
 50585                           	opt callstack 0
 50586  002964                     _UART2_rx_vect_isr:
 50587                           	opt callstack 4
 50588                           
 50589                           ;incstack = 0
 50590  002964  EE14  F32C         	lfsr	1,___inthi_sp
 50591                           
 50592                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 50593  002968  0100               	movlb	0	; () banked
 50594  00296A  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50595  00296C  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50596  00296E  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50597  002970  B4D8               	btfsc	status,2,c
 50598  002972  0011               	retfie		f
 50599                           
 50600                           ; BSR set to: 0
 50601                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 50602  002974  D801               	call	i2u1388_48
 50603  002976  0011               	retfie		f
 50604  002978                     i2u1388_48:
 50605  002978  0005               	push	
 50606  00297A  6EFA               	movwf	pclath,c
 50607  00297C  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50608  00297E  6EFD               	movwf	tosl,c
 50609  002980  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50610  002982  6EFE               	movwf	tosh,c
 50611  002984  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50612  002986  6EFF               	movwf	tosu,c
 50613  002988  50FA               	movf	pclath,w,c
 50614  00298A  0012               	return		;indir
 50615  00298C                     __end_of_UART2_rx_vect_isr:
 50616                           	opt callstack 0
 50617                           
 50618 ;; *************** function _UART2_Receive_ISR *****************
 50619 ;; Defined at:
 50620 ;;		line 233 in file "mcc_generated_files/uart2.c"
 50621 ;; Parameters:    Size  Location     Type
 50622 ;;		None
 50623 ;; Auto vars:     Size  Location     Type
 50624 ;;		None
 50625 ;; Return value:  Size  Location     Type
 50626 ;;                  1  [STACK] void 
 50627 ;; Registers used:
 50628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50629 ;; Tracked objects:
 50630 ;;		On entry : 3F/0
 50631 ;;		On exit  : 3F/0
 50632 ;;		Unchanged: 0/0
 50633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50638 ;;Total ram usage:        0 bytes
 50639 ;; Hardware stack levels used:    1
 50640 ;; This function calls:
 50641 ;;		Nothing
 50642 ;; This function is called by:
 50643 ;;		_UART2_Initialize
 50644 ;;		_UART2_rx_vect_isr
 50645 ;; This function uses a reentrant model
 50646 ;;
 50647                           
 50648                           	psect	text218
 50649  002AC8                     __ptext218:
 50650                           	opt callstack 0
 50651  002AC8                     _UART2_Receive_ISR:
 50652                           	opt callstack 4
 50653                           
 50654                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 50655                           
 50656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50657                           ;incstack = 0
 50658  002AC8  0E00               	movlw	low _uart2RxBuffer
 50659  002ACA  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 50660  002ACC  6ED9               	movwf	fsr2l,c
 50661  002ACE  6ADA               	clrf	fsr2h,c
 50662  002AD0  0E06               	movlw	high _uart2RxBuffer
 50663  002AD2  22DA               	addwfc	fsr2h,f,c
 50664  002AD4  006F F743 FFDF     	movff	15824,indf2	;volatile
 50665  002ADA  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 50666                           
 50667                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 50668  002ADC  2854               	incf	_uart2RxHead^0,w,c
 50669  002ADE  B4D8               	btfsc	status,2,c
 50670                           
 50671                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 50672  002AE0  6A54               	clrf	_uart2RxHead^0,c	;volatile
 50673                           
 50674                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 50675  002AE2  0100               	movlb	0	; () banked
 50676  002AE4  2BCF               	incf	_uart2RxCount& (0+255),f,b	;volatile
 50677                           
 50678                           ; BSR set to: 0
 50679                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50680  002AE6  0012               	return		;funcret
 50681  002AE8                     __end_of_UART2_Receive_ISR:
 50682                           	opt callstack 0
 50683                           
 50684 ;; *************** function _TMR6_ISR *****************
 50685 ;; Defined at:
 50686 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 50687 ;; Parameters:    Size  Location     Type
 50688 ;;		None
 50689 ;; Auto vars:     Size  Location     Type
 50690 ;;		None
 50691 ;; Return value:  Size  Location     Type
 50692 ;;                  1    wreg      void 
 50693 ;; Registers used:
 50694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50695 ;; Tracked objects:
 50696 ;;		On entry : 0/0
 50697 ;;		On exit  : 0/0
 50698 ;;		Unchanged: 0/0
 50699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50704 ;;Total ram usage:        1 bytes
 50705 ;; Hardware stack levels used:    1
 50706 ;; Hardware stack levels required when called:    2
 50707 ;; This function calls:
 50708 ;;		_TMR6_CallBack
 50709 ;; This function is called by:
 50710 ;;		Interrupt level 2
 50711 ;; This function uses a non-reentrant model
 50712 ;;
 50713                           
 50714                           	psect	text219
 50715  002B7C                     __ptext219:
 50716                           	opt callstack 0
 50717  002B7C                     _TMR6_ISR:
 50718                           	opt callstack 3
 50719                           
 50720                           ; BSR set to: 0
 50721                           ;incstack = 0
 50722  002B7C  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 50723  002B82  EE14  F32C         	lfsr	1,___inthi_sp
 50724                           
 50725                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 50726  002B86  0139               	movlb	57	; () banked
 50727  002B88  91A9               	bcf	169,0,b	;volatile
 50728                           
 50729                           ; BSR set to: 57
 50730                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 50731  002B8A  EC20  F015         	call	_TMR6_CallBack	;wreg free
 50732  002B8E  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 50733  002B94  0011               	retfie		f
 50734  002B96                     __end_of_TMR6_ISR:
 50735                           	opt callstack 0
 50736                           
 50737 ;; *************** function _TMR6_CallBack *****************
 50738 ;; Defined at:
 50739 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 50740 ;; Parameters:    Size  Location     Type
 50741 ;;		None
 50742 ;; Auto vars:     Size  Location     Type
 50743 ;;		None
 50744 ;; Return value:  Size  Location     Type
 50745 ;;                  1  [STACK] void 
 50746 ;; Registers used:
 50747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50748 ;; Tracked objects:
 50749 ;;		On entry : 3F/39
 50750 ;;		On exit  : 0/0
 50751 ;;		Unchanged: 0/0
 50752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50757 ;;Total ram usage:        0 bytes
 50758 ;; Hardware stack levels used:    1
 50759 ;; Hardware stack levels required when called:    1
 50760 ;; This function calls:
 50761 ;;		Absolute function
 50762 ;;		_TMR6_DefaultInterruptHandler
 50763 ;; This function is called by:
 50764 ;;		_TMR6_ISR
 50765 ;; This function uses a reentrant model
 50766 ;;
 50767                           
 50768                           	psect	text220
 50769  002A40                     __ptext220:
 50770                           	opt callstack 0
 50771  002A40                     _TMR6_CallBack:
 50772                           	opt callstack 3
 50773                           
 50774                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 50775                           
 50776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50777                           ;incstack = 0
 50778  002A40  0100               	movlb	0	; () banked
 50779  002A42  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50780  002A44  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50781  002A46  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50782  002A48  B4D8               	btfsc	status,2,c
 50783  002A4A  0012               	return	
 50784                           
 50785                           ; BSR set to: 0
 50786                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 50787  002A4C  D801               	call	u1321_48
 50788  002A4E  0012               	return	
 50789  002A50                     u1321_48:
 50790  002A50  0005               	push	
 50791  002A52  6EFA               	movwf	pclath,c
 50792  002A54  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50793  002A56  6EFD               	movwf	tosl,c
 50794  002A58  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50795  002A5A  6EFE               	movwf	tosh,c
 50796  002A5C  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50797  002A5E  6EFF               	movwf	tosu,c
 50798  002A60  50FA               	movf	pclath,w,c
 50799  002A62  0012               	return		;indir
 50800  002A64                     __end_of_TMR6_CallBack:
 50801                           	opt callstack 0
 50802                           
 50803 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 50804 ;; Defined at:
 50805 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 50806 ;; Parameters:    Size  Location     Type
 50807 ;;		None
 50808 ;; Auto vars:     Size  Location     Type
 50809 ;;  i               1  [STACK] unsigned char 
 50810 ;; Return value:  Size  Location     Type
 50811 ;;                  1  [STACK] void 
 50812 ;; Registers used:
 50813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 50814 ;; Tracked objects:
 50815 ;;		On entry : 3F/0
 50816 ;;		On exit  : 0/0
 50817 ;;		Unchanged: 0/0
 50818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50823 ;;Total ram usage:        0 bytes
 50824 ;; Hardware stack levels used:    1
 50825 ;; This function calls:
 50826 ;;		Nothing
 50827 ;; This function is called by:
 50828 ;;		_TMR6_Initialize
 50829 ;;		_TMR6_CallBack
 50830 ;; This function uses a reentrant model
 50831 ;;
 50832                           
 50833                           	psect	text221
 50834  001EFA                     __ptext221:
 50835                           	opt callstack 0
 50836  001EFA                     _TMR6_DefaultInterruptHandler:
 50837                           	opt callstack 0
 50838                           
 50839                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50840  001EFA  52E6               	movf	postinc1,f,c
 50841                           
 50842                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 50843                           ;stkvar	_i @ sp[(-1)+0]
 50844                           
 50845                           ;incstack = 0
 50846  001EFC  0EFF               	movlw	-1
 50847  001EFE  6AE3               	clrf	plusw1,c
 50848  001F00                     l13380:
 50849                           
 50850                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 50851                           ;stkvar	_i @ sp[(-1)+0]
 50852  001F00  0EFF               	movlw	-1
 50853  001F02  50E3               	movf	plusw1,w,c
 50854  001F04  0D02               	mullw	2
 50855  001F06  0EBC               	movlw	low _tickCount
 50856  001F08  24F3               	addwf	243,w,c
 50857  001F0A  6ED9               	movwf	fsr2l,c
 50858  001F0C  0E02               	movlw	high _tickCount
 50859  001F0E  20F4               	addwfc	prodh,w,c
 50860  001F10  6EDA               	movwf	fsr2h,c
 50861  001F12  50DE               	movf	postinc2,w,c
 50862  001F14  10DE               	iorwf	postinc2,w,c
 50863  001F16  B4D8               	btfsc	status,2,c
 50864  001F18  D00C               	goto	l13384
 50865                           
 50866                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 50867                           ;stkvar	_i @ sp[(-1)+0]
 50868  001F1A  0EFF               	movlw	-1
 50869  001F1C  50E3               	movf	plusw1,w,c
 50870  001F1E  0D02               	mullw	2
 50871  001F20  0EBC               	movlw	low _tickCount
 50872  001F22  24F3               	addwf	243,w,c
 50873  001F24  6ED9               	movwf	fsr2l,c
 50874  001F26  0E02               	movlw	high _tickCount
 50875  001F28  20F4               	addwfc	prodh,w,c
 50876  001F2A  6EDA               	movwf	fsr2h,c
 50877  001F2C  06DE               	decf	postinc2,f,c
 50878  001F2E  0E00               	movlw	0
 50879  001F30  5ADD               	subwfb	postdec2,f,c
 50880  001F32                     l13384:
 50881                           
 50882                           ;mcc_generated_files/tmr6.c: 207:  }
 50883                           ;stkvar	_i @ sp[(-1)+0]
 50884  001F32  0EFF               	movlw	-1
 50885  001F34  2AE3               	incf	plusw1,f,c
 50886                           
 50887                           ;stkvar	_i @ sp[(-1)+0]
 50888  001F36  0EFF               	movlw	-1
 50889  001F38  006F FF8C  F02A    	movff	plusw1,btemp
 50890  001F3E  0E0C               	movlw	12
 50891  001F40  642A               	cpfsgt	btemp^0,c
 50892  001F42  D7DE               	goto	l13380
 50893                           
 50894                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50895  001F44  52E5               	movf	postdec1,f,c
 50896  001F46  0012               	return		;funcret
 50897  001F48                     __end_of_TMR6_DefaultInterruptHandler:
 50898                           	opt callstack 0
 50899                           
 50900 ;; *************** function _DMA1_DMASCNT_ISR *****************
 50901 ;; Defined at:
 50902 ;;		line 126 in file "mcc_generated_files/dma1.c"
 50903 ;; Parameters:    Size  Location     Type
 50904 ;;		None
 50905 ;; Auto vars:     Size  Location     Type
 50906 ;;		None
 50907 ;; Return value:  Size  Location     Type
 50908 ;;                  1    wreg      void 
 50909 ;; Registers used:
 50910 ;;		None
 50911 ;; Tracked objects:
 50912 ;;		On entry : 0/0
 50913 ;;		On exit  : 3F/0
 50914 ;;		Unchanged: 0/0
 50915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50920 ;;Total ram usage:        0 bytes
 50921 ;; Hardware stack levels used:    1
 50922 ;; This function calls:
 50923 ;;		Nothing
 50924 ;; This function is called by:
 50925 ;;		Interrupt level 2
 50926 ;; This function uses a non-reentrant model
 50927 ;;
 50928                           
 50929                           	psect	text222
 50930  002CF0                     __ptext222:
 50931                           	opt callstack 0
 50932  002CF0                     _DMA1_DMASCNT_ISR:
 50933                           	opt callstack 5
 50934                           
 50935                           ;incstack = 0
 50936  002CF0  EE14  F32C         	lfsr	1,___inthi_sp
 50937                           
 50938                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 50939  002CF4  0139               	movlb	57	; () banked
 50940  002CF6  91A2               	bcf	162,0,b	;volatile
 50941                           
 50942                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 50943  002CF8  0100               	movlb	0	; () banked
 50944  002CFA  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 50945                           
 50946                           ; BSR set to: 0
 50947  002CFC  0011               	retfie		f
 50948  002CFE                     __end_of_DMA1_DMASCNT_ISR:
 50949                           	opt callstack 0
 50950                           
 50951 ;; *************** function _DMA1_DMADCNT_ISR *****************
 50952 ;; Defined at:
 50953 ;;		line 133 in file "mcc_generated_files/dma1.c"
 50954 ;; Parameters:    Size  Location     Type
 50955 ;;		None
 50956 ;; Auto vars:     Size  Location     Type
 50957 ;;		None
 50958 ;; Return value:  Size  Location     Type
 50959 ;;                  1    wreg      void 
 50960 ;; Registers used:
 50961 ;;		None
 50962 ;; Tracked objects:
 50963 ;;		On entry : 0/0
 50964 ;;		On exit  : 3F/39
 50965 ;;		Unchanged: 0/0
 50966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50971 ;;Total ram usage:        0 bytes
 50972 ;; Hardware stack levels used:    1
 50973 ;; This function calls:
 50974 ;;		Nothing
 50975 ;; This function is called by:
 50976 ;;		Interrupt level 2
 50977 ;; This function uses a non-reentrant model
 50978 ;;
 50979                           
 50980                           	psect	text223
 50981  002D14                     __ptext223:
 50982                           	opt callstack 0
 50983  002D14                     _DMA1_DMADCNT_ISR:
 50984                           	opt callstack 5
 50985                           
 50986                           ; BSR set to: 0
 50987                           ;incstack = 0
 50988  002D14  EE14  F32C         	lfsr	1,___inthi_sp
 50989                           
 50990                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 50991  002D18  0139               	movlb	57	; () banked
 50992  002D1A  93A2               	bcf	162,1,b	;volatile
 50993                           
 50994                           ; BSR set to: 57
 50995  002D1C  0011               	retfie		f
 50996  002D1E                     __end_of_DMA1_DMADCNT_ISR:
 50997                           	opt callstack 0
 50998                           
 50999 ;; *************** function _DMA1_DMAA_ISR *****************
 51000 ;; Defined at:
 51001 ;;		line 143 in file "mcc_generated_files/dma1.c"
 51002 ;; Parameters:    Size  Location     Type
 51003 ;;		None
 51004 ;; Auto vars:     Size  Location     Type
 51005 ;;		None
 51006 ;; Return value:  Size  Location     Type
 51007 ;;                  1    wreg      void 
 51008 ;; Registers used:
 51009 ;;		None
 51010 ;; Tracked objects:
 51011 ;;		On entry : 0/0
 51012 ;;		On exit  : 3F/39
 51013 ;;		Unchanged: 0/0
 51014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51019 ;;Total ram usage:        0 bytes
 51020 ;; Hardware stack levels used:    1
 51021 ;; This function calls:
 51022 ;;		Nothing
 51023 ;; This function is called by:
 51024 ;;		Interrupt level 2
 51025 ;; This function uses a non-reentrant model
 51026 ;;
 51027                           
 51028                           	psect	text224
 51029  002D20                     __ptext224:
 51030                           	opt callstack 0
 51031  002D20                     _DMA1_DMAA_ISR:
 51032                           	opt callstack 5
 51033                           
 51034                           ; BSR set to: 57
 51035                           ;incstack = 0
 51036  002D20  EE14  F32C         	lfsr	1,___inthi_sp
 51037                           
 51038                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 51039  002D24  0139               	movlb	57	; () banked
 51040  002D26  97A2               	bcf	162,3,b	;volatile
 51041                           
 51042                           ; BSR set to: 57
 51043  002D28  0011               	retfie		f
 51044  002D2A                     __end_of_DMA1_DMAA_ISR:
 51045                           	opt callstack 0
 51046                           
 51047 ;; *************** function _DMA1_DMAOR_ISR *****************
 51048 ;; Defined at:
 51049 ;;		line 154 in file "mcc_generated_files/dma1.c"
 51050 ;; Parameters:    Size  Location     Type
 51051 ;;		None
 51052 ;; Auto vars:     Size  Location     Type
 51053 ;;		None
 51054 ;; Return value:  Size  Location     Type
 51055 ;;                  1    wreg      void 
 51056 ;; Registers used:
 51057 ;;		None
 51058 ;; Tracked objects:
 51059 ;;		On entry : 0/0
 51060 ;;		On exit  : 3F/39
 51061 ;;		Unchanged: 0/0
 51062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51067 ;;Total ram usage:        0 bytes
 51068 ;; Hardware stack levels used:    1
 51069 ;; This function calls:
 51070 ;;		Nothing
 51071 ;; This function is called by:
 51072 ;;		Interrupt level 2
 51073 ;; This function uses a non-reentrant model
 51074 ;;
 51075                           
 51076                           	psect	text225
 51077  002D2C                     __ptext225:
 51078                           	opt callstack 0
 51079  002D2C                     _DMA1_DMAOR_ISR:
 51080                           	opt callstack 5
 51081                           
 51082                           ; BSR set to: 57
 51083                           ;incstack = 0
 51084  002D2C  EE14  F32C         	lfsr	1,___inthi_sp
 51085                           
 51086                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 51087  002D30  0139               	movlb	57	; () banked
 51088  002D32  95A2               	bcf	162,2,b	;volatile
 51089                           
 51090                           ; BSR set to: 57
 51091  002D34  0011               	retfie		f
 51092  002D36                     __end_of_DMA1_DMAOR_ISR:
 51093                           	opt callstack 0
 51094                           
 51095                           ;
 51096                           ; Interrupt Vector Table @ 0x8
 51097                           ;
 51098                           
 51099                           	psect	ivt0x8
 51100  000008                     __pivt0x8:
 51101                           	opt callstack 0
 51102  000008                     ivt0x8_base:
 51103                           	opt callstack 0
 51104                           
 51105                           ; Vector 0 : SWINT
 51106  000008  0B61               	dw	_Default_ISR shr (0+2)
 51107                           
 51108                           ; Vector 1 : HLVD
 51109  00000A  0B61               	dw	_Default_ISR shr (0+2)
 51110                           
 51111                           ; Vector 2 : OSF
 51112  00000C  0B61               	dw	_Default_ISR shr (0+2)
 51113                           
 51114                           ; Vector 3 : CSW
 51115  00000E  0B61               	dw	_Default_ISR shr (0+2)
 51116                           
 51117                           ; Vector 4 : NVM
 51118  000010  0B61               	dw	_Default_ISR shr (0+2)
 51119                           
 51120                           ; Vector 5 : SCAN
 51121  000012  0B61               	dw	_Default_ISR shr (0+2)
 51122                           
 51123                           ; Vector 6 : CRC
 51124  000014  0B61               	dw	_Default_ISR shr (0+2)
 51125                           
 51126                           ; Vector 7 : IOC
 51127  000016  0B61               	dw	_Default_ISR shr (0+2)
 51128                           
 51129                           ; Vector 8 : INT0
 51130  000018  0B38               	dw	_INT0_ISR shr (0+2)
 51131                           
 51132                           ; Vector 9 : ZCD
 51133  00001A  0B61               	dw	_Default_ISR shr (0+2)
 51134                           
 51135                           ; Vector 10 : AD
 51136  00001C  09AC               	dw	_ADCC_ISR shr (0+2)
 51137                           
 51138                           ; Vector 11 : ADT
 51139  00001E  062F               	dw	_ADCC_ThresholdISR shr (0+2)
 51140                           
 51141                           ; Vector 12 : CMP1
 51142  000020  0B61               	dw	_Default_ISR shr (0+2)
 51143                           
 51144                           ; Vector 13 : SMT1
 51145  000022  0B61               	dw	_Default_ISR shr (0+2)
 51146                           
 51147                           ; Vector 14 : SMT1PRA
 51148  000024  0B61               	dw	_Default_ISR shr (0+2)
 51149                           
 51150                           ; Vector 15 : SMT1PRW
 51151  000026  0B61               	dw	_Default_ISR shr (0+2)
 51152                           
 51153                           ; Vector 16 : DMA1SCNT
 51154  000028  0B3C               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 51155                           
 51156                           ; Vector 17 : DMA1DCNT
 51157  00002A  0B45               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 51158                           
 51159                           ; Vector 18 : DMA1OR
 51160  00002C  0B4B               	dw	_DMA1_DMAOR_ISR shr (0+2)
 51161                           
 51162                           ; Vector 19 : DMA1A
 51163  00002E  0B48               	dw	_DMA1_DMAA_ISR shr (0+2)
 51164                           
 51165                           ; Vector 20 : SPI1RX
 51166  000030  0B61               	dw	_Default_ISR shr (0+2)
 51167                           
 51168                           ; Vector 21 : SPI1TX
 51169  000032  0B61               	dw	_Default_ISR shr (0+2)
 51170                           
 51171                           ; Vector 22 : SPI1
 51172  000034  0B61               	dw	_Default_ISR shr (0+2)
 51173                           
 51174                           ; Vector 23 : I2C1RX
 51175  000036  0B61               	dw	_Default_ISR shr (0+2)
 51176                           
 51177                           ; Vector 24 : I2C1TX
 51178  000038  0B61               	dw	_Default_ISR shr (0+2)
 51179                           
 51180                           ; Vector 25 : I2C1
 51181  00003A  0B61               	dw	_Default_ISR shr (0+2)
 51182                           
 51183                           ; Vector 26 : I2C1E
 51184  00003C  0B61               	dw	_Default_ISR shr (0+2)
 51185                           
 51186                           ; Vector 27 : U1RX
 51187  00003E  0A45               	dw	_UART1_rx_vect_isr shr (0+2)
 51188                           
 51189                           ; Vector 28 : U1TX
 51190  000040  0B61               	dw	_Default_ISR shr (0+2)
 51191                           
 51192                           ; Vector 29 : U1E
 51193  000042  0B61               	dw	_Default_ISR shr (0+2)
 51194                           
 51195                           ; Vector 30 : U1
 51196  000044  0B61               	dw	_Default_ISR shr (0+2)
 51197                           
 51198                           ; Vector 31 : TMR0
 51199  000046  0B61               	dw	_Default_ISR shr (0+2)
 51200                           
 51201                           ; Vector 32 : TMR1
 51202  000048  0B61               	dw	_Default_ISR shr (0+2)
 51203                           
 51204                           ; Vector 33 : TMR1G
 51205  00004A  0B61               	dw	_Default_ISR shr (0+2)
 51206                           
 51207                           ; Vector 34 : TMR2
 51208  00004C  0B61               	dw	_Default_ISR shr (0+2)
 51209                           
 51210                           ; Vector 35 : CCP1
 51211  00004E  0B61               	dw	_Default_ISR shr (0+2)
 51212                           
 51213                           ; Vector 36 : Undefined
 51214  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 51215                           
 51216                           ; Vector 37 : NCO1
 51217  000052  0B61               	dw	_Default_ISR shr (0+2)
 51218                           
 51219                           ; Vector 38 : CWG1
 51220  000054  0B61               	dw	_Default_ISR shr (0+2)
 51221                           
 51222                           ; Vector 39 : CLC1
 51223  000056  0B61               	dw	_Default_ISR shr (0+2)
 51224                           
 51225                           ; Vector 40 : INT1
 51226  000058  08C0               	dw	_INT1_ISR shr (0+2)
 51227                           
 51228                           ; Vector 41 : CMP2
 51229  00005A  0B61               	dw	_Default_ISR shr (0+2)
 51230                           
 51231                           ; Vector 42 : DMA2SCNT
 51232  00005C  0B61               	dw	_Default_ISR shr (0+2)
 51233                           
 51234                           ; Vector 43 : DMA2DCNT
 51235  00005E  0B61               	dw	_Default_ISR shr (0+2)
 51236                           
 51237                           ; Vector 44 : DMA2OR
 51238  000060  0B61               	dw	_Default_ISR shr (0+2)
 51239                           
 51240                           ; Vector 45 : DMA2A
 51241  000062  0B61               	dw	_Default_ISR shr (0+2)
 51242                           
 51243                           ; Vector 46 : I2C2RX
 51244  000064  0B61               	dw	_Default_ISR shr (0+2)
 51245                           
 51246                           ; Vector 47 : I2C2TX
 51247  000066  0B61               	dw	_Default_ISR shr (0+2)
 51248                           
 51249                           ; Vector 48 : I2C2
 51250  000068  0B61               	dw	_Default_ISR shr (0+2)
 51251                           
 51252                           ; Vector 49 : I2C2E
 51253  00006A  0B61               	dw	_Default_ISR shr (0+2)
 51254                           
 51255                           ; Vector 50 : U2RX
 51256  00006C  0A59               	dw	_UART2_rx_vect_isr shr (0+2)
 51257                           
 51258                           ; Vector 51 : U2TX
 51259  00006E  0A4F               	dw	_UART2_tx_vect_isr shr (0+2)
 51260                           
 51261                           ; Vector 52 : U2E
 51262  000070  0B61               	dw	_Default_ISR shr (0+2)
 51263                           
 51264                           ; Vector 53 : U2
 51265  000072  0B61               	dw	_Default_ISR shr (0+2)
 51266                           
 51267                           ; Vector 54 : TMR3
 51268  000074  7B73               	dw	_TMR3_ISR shr (0+2)
 51269                           
 51270                           ; Vector 55 : TMR3G
 51271  000076  0B61               	dw	_Default_ISR shr (0+2)
 51272                           
 51273                           ; Vector 56 : TMR4
 51274  000078  0B61               	dw	_Default_ISR shr (0+2)
 51275                           
 51276                           ; Vector 57 : CCP2
 51277  00007A  0B61               	dw	_Default_ISR shr (0+2)
 51278                           
 51279                           ; Vector 58 : Undefined
 51280  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 51281                           
 51282                           ; Vector 59 : CWG2
 51283  00007E  0B61               	dw	_Default_ISR shr (0+2)
 51284                           
 51285                           ; Vector 60 : CLC2
 51286  000080  0B61               	dw	_Default_ISR shr (0+2)
 51287                           
 51288                           ; Vector 61 : INT2
 51289  000082  0B61               	dw	_Default_ISR shr (0+2)
 51290                           
 51291                           ; Vector 62 : Undefined
 51292  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 51293                           
 51294                           ; Vector 63 : Undefined
 51295  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 51296                           
 51297                           ; Vector 64 : Undefined
 51298  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 51299                           
 51300                           ; Vector 65 : Undefined
 51301  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 51302                           
 51303                           ; Vector 66 : Undefined
 51304  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 51305                           
 51306                           ; Vector 67 : Undefined
 51307  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 51308                           
 51309                           ; Vector 68 : Undefined
 51310  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 51311                           
 51312                           ; Vector 69 : Undefined
 51313  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 51314                           
 51315                           ; Vector 70 : TMR5
 51316  000094  77B0               	dw	_TMR5_ISR shr (0+2)
 51317                           
 51318                           ; Vector 71 : TMR5G
 51319  000096  0B61               	dw	_Default_ISR shr (0+2)
 51320                           
 51321                           ; Vector 72 : TMR6
 51322  000098  0ADF               	dw	_TMR6_ISR shr (0+2)
 51323                           
 51324                           ; Vector 73 : CCP3
 51325  00009A  0B61               	dw	_Default_ISR shr (0+2)
 51326                           
 51327                           ; Vector 74 : CWG3
 51328  00009C  0B61               	dw	_Default_ISR shr (0+2)
 51329                           
 51330                           ; Vector 75 : CLC3
 51331  00009E  0B61               	dw	_Default_ISR shr (0+2)
 51332                           
 51333                           ; Vector 76 : Undefined
 51334  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 51335                           
 51336                           ; Vector 77 : Undefined
 51337  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 51338                           
 51339                           ; Vector 78 : Undefined
 51340  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 51341                           
 51342                           ; Vector 79 : Undefined
 51343  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 51344                           
 51345                           ; Vector 80 : CCP4
 51346  0000A8  0B61               	dw	_Default_ISR shr (0+2)
 51347                           
 51348                           ; Vector 81 : CLC4
 51349  0000AA  0B61               	dw	_Default_ISR shr (0+2)
 51350  0000AC                     ivt0x8_undefint:
 51351                           	opt callstack 0
 51352  0000AC  00FF               	reset	
 51353                           
 51354                           	psect	text226
 51355  000000                     __ptext226:
 51356                           	opt callstack 0
 51357                           
 51358                           	psect	rparam
 51359  0000                     
 51360                           	psect	temp
 51361  00002A                     btemp:
 51362                           	opt callstack 0
 51363  00002A                     	ds	32
 51364  0000                     wtemp0	set	btemp
 51365  0000                     wtemp1	set	btemp+2
 51366  0000                     wtemp2	set	btemp+4
 51367  0000                     wtemp3	set	btemp+6
 51368  0000                     wtemp4	set	btemp+8
 51369  0000                     wtemp5	set	btemp+10
 51370  0000                     wtemp8	set	btemp+1
 51371  0000                     ttemp0	set	btemp
 51372  0000                     ttemp1	set	btemp+3
 51373  0000                     ttemp2	set	btemp+6
 51374  0000                     ttemp3	set	btemp+9
 51375  0000                     ttemp5	set	btemp+1
 51376  0000                     ttemp6	set	btemp+4
 51377  0000                     ttemp7	set	btemp+8
 51378  0000                     ltemp0	set	btemp
 51379  0000                     ltemp1	set	btemp+4
 51380  0000                     ltemp2	set	btemp+8
 51381  0000                     lltemp0	set	btemp
 51382  0000                     lltemp1	set	btemp+8
 51383  0000                     lltemp2	set	btemp+16
 51384  0000                     lltemp3	set	btemp+24
 51385                           tosu	equ	0x3FFF
 51386                           tosh	equ	0x3FFE
 51387                           tosl	equ	0x3FFD
 51388                           stkptr	equ	0x3FFC
 51389                           pclatu	equ	0x3FFB
 51390                           pclath	equ	0x3FFA
 51391                           pcl	equ	0x3FF9
 51392                           tblptru	equ	0x3FF8
 51393                           tblptrh	equ	0x3FF7
 51394                           tblptrl	equ	0x3FF6
 51395                           tablat	equ	0x3FF5
 51396                           prodh	equ	0x3FF4
 51397                           prodl	equ	0x3FF3
 51398                           indf0	equ	0x3FEF
 51399                           postinc0	equ	0x3FEE
 51400                           postdec0	equ	0x3FED
 51401                           preinc0	equ	0x3FEC
 51402                           plusw0	equ	0x3FEB
 51403                           fsr0h	equ	0x3FEA
 51404                           fsr0l	equ	0x3FE9
 51405                           wreg	equ	0x3FE8
 51406                           indf1	equ	0x3FE7
 51407                           postinc1	equ	0x3FE6
 51408                           postdec1	equ	0x3FE5
 51409                           preinc1	equ	0x3FE4
 51410                           plusw1	equ	0x3FE3
 51411                           fsr1h	equ	0x3FE2
 51412                           fsr1l	equ	0x3FE1
 51413                           bsr	equ	0x3FE0
 51414                           indf2	equ	0x3FDF
 51415                           postinc2	equ	0x3FDE
 51416                           postdec2	equ	0x3FDD
 51417                           preinc2	equ	0x3FDC
 51418                           plusw2	equ	0x3FDB
 51419                           fsr2h	equ	0x3FDA
 51420                           fsr2l	equ	0x3FD9
 51421                           status	equ	0x3FD8


Data Sizes:
    Strings     1544
    Constant    588
    Data        1826
    BSS         1135
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     160
    BANK1           256      0     253
    BANK2           256      0     254
    BANK3           256      0     223
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_134(CODE[1]), STR_94(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_135(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK2[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK2[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK2[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK2[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_129(CODE[3]), STR_125(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[3]), STR_106(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_129(CODE[3]), STR_125(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[3]), STR_106(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), 
		 -> STR_91(CODE[21]), STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), 
		 -> STR_87(CODE[21]), STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), 
		 -> STR_83(CODE[15]), STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), 
		 -> STR_79(CODE[10]), STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), 
		 -> STR_73(CODE[14]), STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), 
		 -> STR_69(CODE[22]), STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), 
		 -> STR_65(CODE[22]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), 
		 -> STR_53(CODE[24]), STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), 
		 -> STR_49(CODE[24]), STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), 
		 -> STR_33(CODE[17]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), 
		 -> STR_25(CODE[23]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[22]), STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), 
		 -> STR_91(CODE[21]), STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), 
		 -> STR_87(CODE[21]), STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), 
		 -> STR_83(CODE[15]), STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), 
		 -> STR_79(CODE[10]), STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), 
		 -> STR_73(CODE[14]), STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), 
		 -> STR_69(CODE[22]), STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), 
		 -> STR_65(CODE[22]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), 
		 -> STR_53(CODE[24]), STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), 
		 -> STR_49(CODE[24]), STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), 
		 -> STR_33(CODE[17]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), 
		 -> STR_25(CODE[23]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[22]), STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_76(CODE[9]), STR_75(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_76(CODE[9]), STR_75(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_101(CODE[4]), STR_100(CODE[4]), STR_97(CODE[4]), STR_96(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_101(CODE[4]), STR_100(CODE[4]), STR_97(CODE[4]), STR_96(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_74(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_73(CODE[14]), STR_72(CODE[28]), 
		 -> STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), STR_68(CODE[22]), 
		 -> STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[21]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), STR_52(CODE[24]), 
		 -> STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), STR_48(CODE[24]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), STR_28(CODE[14]), 
		 -> STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), STR_20(CODE[23]), 
		 -> STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7411_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK2[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK2[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK2[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_133(CODE[37]), STR_132(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_76(CODE[9]), 
		 -> STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_76(CODE[9]), 
		 -> STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_76(CODE[9]), STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_76(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_75(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK2[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK2[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  432098
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    4070
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1451
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   80959
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14068
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14037
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   10553
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1417
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2027
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     741
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     159
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0   66357
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  129598
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   64515
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   34528
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34246
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1420
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
     _wait_lcd_done
   _wait_lcd_done
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      DF      11       87.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     611      58        0.0%
DATA                 0      0     BD3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 00:50:24 2020

                         _SPI1_Exchange8bit 2AE8                    __end_of_set_display_info 2B60  
                                         _C 0B81                                           _D 06FF  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F8B7                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 284A                __end_of_start_switch_handler 2AC8  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1DB2                                          _r0 01E5  
                                        _r1 01DB                                          _bp F9DF  
                    __end_of_FVR_Initialize 2D5E                              _check_day_time A782  
                               __CFG_LVP$ON 000000                                         l171 2C18  
                                       l809 2AF6                                         l675 2702  
                                       l942 1972                                         _GIE 01FE97  
                                       _abs 20AE                                         _pad FCB6  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 2BAE  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs 038A  
                             _INT0_CallBack 2A1C                           _update_adc_result 237A  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 29B0  
                              __CFG_ZCD$OFF 000000                                        l1004 22BA  
                                      l2104 167A                                        l2025 16F8  
                                      l2041 0B66                                        l3002 EDC2  
                                      l2211 AAE4                                        l2300 D71E  
                                      l1500 110A                                        l2207 AAEC  
                                      l1271 2C40                                        l1192 22FA  
                                      l2145 DEB6                                        l1505 16E0  
                                      l2066 1122                                        l1282 E84E  
                           _timer3ReloadVal 00C2                                        l1284 E854  
                                      l1524 9AFE                                        l3029 EAFA  
                                      l1462 0444                                        l1455 005E  
                                      l2192 00CA                                        l2416 BD38  
                                      l2370 50FE                                        l3314 8838  
                                      l1618 1D08                                        l2531 295A  
                                      l2291 F842                                        l1475 0962  
                                      l3421 20EE                                        l3413 E1EE  
                                      l2613 BE26                                        l4029 7B46  
                                      l4037 665A                                        l1477 0968  
                                      l2374 543C                                        l3350 6E84  
                                      l1750 1248                                        l1824 23D0  
                                      l2560 1D8A                                        l3281 74D0  
                                      l1841 F08A                                        l1833 D7D6  
                                      l1489 0CDA                                        l1746 0D74  
                                      l2634 AEA6                                        l1834 D932  
                                      l3426 FA7C                                        l2475 FD12  
                                      l1499 0EE0                                        l3269 7640  
                                      l1765 2474                                        l2741 0570  
                                      l3525 CE70                                        l3390 DB30  
                                      l3462 C9E4                        _ADCC_StartConversion 2C44  
                                      l3551 F962                                        l2495 92F2  
                                      l2575 223A                                        l1881 2B5C  
                                      l2649 A40C                                        l1985 920E  
                                      l3833 14FA                                        l3818 D4FE  
                                      l2699 49D8                                        l3941 D2DE  
                                      l3846 1476                                        l3950 C4F0  
                                      l2991 088A                                        l3857 3A2C  
                                      l2995 ECEE                                        l3985 C274  
                                      l3977 C18E                                        l9910 724C  
                                      l9830 6F24                                        l9912 725E  
                                      l9920 7298                                        l9824 6EE4  
                                      l9906 722C                                        l9842 6FA2  
                                      l9834 6F3A                                        l9940 7346  
                                      l9916 7268                                        l9860 705A  
                                      l9836 6F6A                                        l9854 7014  
                                      STR_1 FF1D                                        l9960 745A  
                                      l9944 7350                                        l9848 6FD4  
                                      STR_2 FF08                                        STR_3 FFD5  
                                      l9970 74B4                                        l9962 7480  
                                      l9938 7334                                        l9866 707C  
                                      l9858 702A                                        STR_4 FEF3  
                                      STR_5 FBB9                                        l9980 7504  
                                      l9948 7382                                        l9796 0EEC  
                                      STR_6 FBB9                                        STR_7 FBB9  
                                      l9798 0F0E                                        STR_8 FBB9  
                                      STR_9 FBB9                                        l9984 7510  
                                      l9896 71BA                                        l9994 7538  
                                      l9978 74F2                                        l9998 753E  
                                      _LATA 003FBA                                        _LATB 003FBB  
                                      _LATC 003FBC                                        _LATD 003FBD  
                                      _LATE 003FBE                                        _LATF 003FBF  
                                      _T2PR 003FAB                                        _T6PR 003F93  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      _PMD2 0039C2                                        _PMD3 0039C3  
                                      u7200 2618                                        u8000 2174  
                                      _PMD4 0039C4                                        _PMD5 0039C5  
                                      u7210 261A                                        u8010 1424  
                                      _PMD6 0039C6                                        _PMD7 0039C7  
                                      u8020 1426                                        u8101 F1BE  
                                      u7310 71E0                                        u7320 7200  
                                      u8040 2648                                        u8200 C700  
                                      u7321 71FA                                        u8050 264A  
                                      u7170 0F3C                                        u8130 C556  
                                      u8220 C752                                        u7510 7516  
                                      u7430 7378                                        u8150 C5AC  
                                      u8310 D042                                        u9030 1F62  
                                      u9110 EAB0                                        u7600 75AC  
                                      u7360 7290                                        u9040 E9C4  
                                      u9200 F604                                        u7177 0F2E  
                                      u8161 C5B6                                        u8081 F09C  
                                      u7530 7530                                        u7370 72B0  
                                      u7338 7202                                        u8170 C5F0  
                                      u8330 D094                                        u8250 CED0  
                                      u9130 EADA                                        u9050 E9D8  
                                      u9210 F636                                        u7435 7368  
                                      u8180 C622                                        u9060 EA12  
                                      u7365 7280                                        u9045 E9BA  
                                      u9141 E6AE                                        u7470 74A2  
                                      u8510 86F6                                        u8270 CF26  
                                      u9150 E6E8                                        u9230 F6EE  
                                      u8280 CF58                                        u9160 E71A  
                                      u7640 25E8                                        u9065 EA08  
                                      u7570 758C                                        u9250 1E26  
                                      u8290 CF8A                                        u7650 25EA  
                                      u9260 1E46                                        u7820 E1DE  
                                      u7900 ABF8                                        u9180 E7F8  
                                      u7660 0284                                        u8550 8752  
                                      u8470 866C                                        u7830 E1E0  
                                      u7575 757C                                        u7815 E1C0  
                                      u8560 878C                                        u7760 20C2  
                                      u8730 6CFC                                        u8570 87C8  
                                      u7770 E110                                        u8555 8742  
                                      u8660 680E                                        u7940 ACD8  
                                      u7860 14A8                                        u7925 AC32  
                                      u8910 FC14                                        u7926 AC38  
                                      u7870 14AA                                        u7775 E106  
                                      u7927 AC46                                        u8840 F3C6  
                                      u7960 ADB0                                        u7945 ACCE  
                                      u8770 6D58                                        u8930 FC88  
                                      u7890 ABAC                                        _PLLR 01CEE0  
                                      u8675 69A2                                        u8780 6D92  
                                      u8860 F460                                        u8685 6A6A  
                                      u7965 ADA6                                        u8790 6DD8  
                                      u7990 2172                                        u8775 6D48  
                                      u8695 6C32                                        u7895 ABA2  
                                      u8970 0884                     __end_of_display_history BA64  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUD 003A71  
                                      _WPUE 003A81                                        _WPUF 003A91  
                          __end_of_ADCC_ISR 26DC                       __size_of___secs_to_tm 10D2  
                             __CFG_FCMEN$ON 000000                                _rule_to_secs 764A  
                                      _dbuf 0354                          __size_of_CRC_Start 0006  
                                      _cp_h F9F3                                        _cp_l F9EF  
                                      _atoi C77A                                        _ctoa 1374  
                                      _main 0000                                        _dtoa 9214  
                                      _nanf 1B84                                        _lock 01D3  
                                      _seed 02F6                                        _prec 004C  
                                      _time 1C46                                        _nout 00BA  
                                      _spin F967                                        fsr0h 003FEA  
                                      fsr1h 003FE2                                        indf0 003FEF  
                                      fsr2h 003FDA                                        fsr0l 003FE9  
                                      indf1 003FE7                                        indf2 003FDF  
                                      fsr1l 003FE1                                        fsr2l 003FD9  
                                      _stoa BD3C                                        btemp 002A  
                                      _utoa AE62                                        _xtoa A3C8  
                    __end_of_check_adc_scan 2D3E                               ___fpclassifyf E062  
                                      prodh 003FF4                                        prodl 003FF3  
                                      start 00AE                             _timer5ReloadVal 00C6  
                 __end_of_SPI1_Exchange8bit 2B06                   __size_of_clear_hid_pflags 0066  
                           _TMR3_Initialize 2020                 __size_of_set_load_relay_one 0010  
               __size_of_set_load_relay_two 0010                               __CFG_CSWEN$ON 000000  
                            _SPI1STATUSbits 003D17                           _UART1_rx_vect_isr 2914  
                              ___param_bank 000000                        display_history@bwait 0053  
                    __end_of_check_day_time AAF6                          ?_UART1_rx_vect_isr 0001  
                 __size_of_DATAEE_WriteByte 0068                            _update_hist_data 1606  
                          __end_of_INT0_ISR 2CEE                            __end_of_INT1_ISR 233E  
            __size_of_OSCILLATOR_Initialize 0016                    __end_of_ringBufS_put_dma 0D7C  
             __end_of_OSCILLATOR_Initialize 2C1E                                       l10010 759C  
                                     l10020 75C8                                       l10032 7620  
                                     l10024 75E0                                       l10120 20DE  
                                     l10200 AE38                                       l10026 75F0  
                                     l10042 01BA                                       l10134 E18C  
                                     l10230 05C6                                       l10046 0240  
                                     l10320 D00A                                       l10312 CF5E  
                                     l10304 CED6                                       l10144 E1E6  
                                     l10240 F0A4                                       l10410 85DA  
                                     l10402 85A4                                       l10138 E190  
                                     l10162 14EA                                       l10218 1466  
                                     l10412 85EC                                       l10420 8644  
                                     l10340 831E                                       l10260 C55C  
                                     l10244 F14A                                       l10502 66FA  
                                     l10350 8374                                       l10190 AD32  
                                     l10520 67C8                                       l10504 6700  
                                     l10432 868E                                       l10360 83FC  
                                     l10352 83A4                                       l10272 C5F6  
                                     l10192 AD82                                       l10176 AC14  
                                     l12032 EBEE                                       l12024 EB82  
                                     l12016 EB3A                                       l10522 67CE  
                                     l10514 6788                                       l10506 6730  
                                     l10450 8704                                       l10426 8672  
                                     l10418 8640                                       l10370 8452  
                                     l10346 835E                                       l12050 D980  
                                     l10266 C5B0                                       l10604 6D04  
                                     l10532 6820                                       l10524 67FE  
                                     l10460 8778                                       l10436 86B4  
                                     l10372 8482                                       l12060 D9FA  
                                     l10284 C6C8                                       l10196 ADCA  
                                     l10622 6DC4                                       l10446 86FE  
                                     l10366 843C                                       l12070 DA5C  
                                     l12062 DA10                                       l11502 C938  
                                     l12302 0790                                       l10608 6D0A  
                                     l10480 881C                                       l10472 87E4  
                                     l10392 8514                                       l10384 84FA  
                                     l12072 DA7A                                       l12064 DA2E  
                                     l12400 277A                                       l11512 C9D4  
                                     l10712 FBE8                                       l10704 FBBE  
                                     l10618 6D7E                                       l10466 87B4  
                                     l10378 84C0                                       l12082 DAAE  
                                     l12074 DA90                                       l12058 D9EC  
                                     l10730 FC9C                                       l10722 FC68  
                                     l11530 D3DC                                       l12306 07A4  
                                     l10636 6E32                                       l10628 6DEE  
                                     l12092 DB10                                       l10708 FBD0  
                                     l11700 5928                                       l12148 2368  
                                     l10638 6E4C                                       l10590 6C94  
                                     l10478 880C                                       l12334 8D8A  
                                     l10670 F39A                                       l10742 0854  
                                     l10814 EA92                                       l10806 EA66  
                                     l10830 E6EE                                       l11550 E232  
                                     l14016 22E2                                       l10584 6C78  
                                     l10496 66BA                                       l10760 ED3C  
                                     l12360 9060                                       l12344 8EB0  
                                     l12328 8D5A                                       l10664 F37A  
                                     l10816 EAA8                                       l10808 EA82  
                                     l11528 D370                                       l10912 D2C4  
                                     l11720 59FE                                       l10594 6CBA  
                                     l10754 ECAC                                       l10658 F364  
                                     l10746 0888                                       l10738 0812  
                                     l10842 E7C0                                       l11562 E28E  
                                     l11706 595A                                       l14202 161C  
                                     l10772 EDC0                                       l10764 ED8A  
                                     l12356 8FC4                                       l12348 8F92  
                                     l11492 C856                                       l11476 C794  
                                     l10692 F474                                       l10684 F440  
                                     l10780 1F66                                       l11556 E25E  
                                     l10908 D2A0                                       l11716 59D0  
                                     l11740 5B10                                       l11708 5964  
                                     l14300 BBA4                                       PRLOCK 0039EF  
                                     l12374 91DC                                       l12382 91EE  
                                     l11494 C86E                                       l11486 C82A  
                                     l11478 C7B6                                       l10790 E9E4  
                                     l10862 F6B6                                       l10854 F60A  
                                     l11574 E310                                       l11734 5A7C  
                                     l11726 5A48                                       l14214 1654  
                                     l12368 9140                                       l11496 C892  
                                     l12456 0FDA                                       l12448 0F76  
                                     l11728 5A50                                       l11680 5594  
                                     l14152 DB82                                       l14234 E67A  
                                     l11498 C8D0                                       l14410 0A4E  
                                     l12298 0752                                       l10890 D122  
                                     l11754 0360                                       l11690 56D0  
                                     l11658 1A82                                       l14322 BCFE  
                                     l13380 1F00                                       l13604 10FC  
                                     l11676 556A                                       l11684 569A  
                                     l14324 BD28                                       l14180 DCEE  
                                     l14164 DC38                                       l14172 DCEA  
                                     l10878 1E4A                                       l16022 A5C8  
                                     l16006 A4D2                                       l16030 A64E  
                                     l14406 0A10                                       l13462 019C  
                                     l12822 E916                                       l13550 F23E  
                                     l16102 B3B0                                       l10894 D162  
                                     l14254 BA80                                       l14166 DC6C  
                                     l13384 1F32                                       l12744 A896  
                                     l13456 00EA                                       l14280 BB24  
                                     l14264 BAC6                                       l14256 BA90  
                                     l14192 1DE2                                       l15410 F878  
                                     l16210 3FD2                                       l16202 3EE6  
                                     l12826 E940                                       l13554 F2B4  
                                     l16106 B43C                                       l14274 BAFC  
                                     l14258 BA96                                       l13706 16B6  
                                     l13730 FB4A                                       l12764 A98C  
                                     l13580 DD7C                                       l13644 23E6  
                                     l16060 C33A                                       l14292 BB7E  
                                     l14284 BB30                                       l14268 BAD2  
                                     l15422 1012                                       l16046 A738  
                                     l16302 47CE                                       l16214 4026  
                                     l16150 3B18                                       l12838 247E  
                                     l17014 974C                                       l16062 C360  
                                     l13718 16CE                                       l13726 FAE8  
                                     l12944 1E86                                       l13760 F4BC  
                                     l13576 DD68                                       l13568 DD3C  
                                     l14456 A3BA                                       l16152 3B52  
                                     l13592 10C6                                       l14480 9CA4  
                                     l12778 AA92                                       l13762 F4CA  
                                     l13770 F4D2                                       l15426 1050  
                                     l15506 1392                                       l16322 4960  
                                     l16234 4238                                       l16226 4180  
                                     l16154 3B68                                       l15442 B536  
                                     l17026 97C2                                       l17018 9760  
                                     l16090 B28A                                       l16058 C322  
                                     l16410 7BBC                                       l13682 239A  
                                     l14652 153C                                       l13772 F504  
                                     l13756 F4A6                                       l17116 17DC  
                                     l15508 13BE                                       l15540 932C  
                                     l15532 92E2                                       l15700 1D22  
                                     l15604 1810                                       l15612 1866  
                                     l16316 4906                                       l16172 3C9A  
                                     l16332 4984                                       l12964 15BE  
                                     l12892 2694                                       l17140 BA50  
                                     l14476 9C68                                       l13758 F4B6  
                                     l15622 190A                                       l15630 1978  
                                     l16326 4964                                       l16238 426C  
                                     l16174 3CD4                                       l15462 B70C  
                                     l15454 B65E                                       l16086 B1F0  
                                     l16078 C4CC                                       l13960 2AA2  
                                     l15480 FD1C                                       l15544 934A  
                                     l15720 1E10                                       l15640 1A1C  
                                     l15624 1936                                       l16192 3E4E  
                                     l16176 3CEA                                       l15448 B5F4  
                                     l17064 9A4A                                       l16600 32D8  
                                     l16096 B30C                                       l16520 6552  
                                     l17072 D51C                                       l17400 0958  
                                     l17240 0066                                       l14658 154C  
                                     l13786 F5B6                                       l13778 F53C  
                                     l15474 FCE2                                       l15554 955C  
                                     l15802 24B0                                       l15810 25C2  
                                     l15626 194C                                       l16258 43CC  
                                     l16450 0C94                                       l16610 3398  
                                     l16602 32DE                                       l16098 B316  
                                     l16506 63F0                                       l17146 BA54  
                                     l17322 045E                                       l17314 03F2  
                                     l17242 007A                                       l17234 0040  
                                     l13972 26FE                                       l15484 FD58  
                                     l15716 1DD8                                       l15660 1B26  
                                     l16268 447A                                       l16428 0DD4  
                                     l17172 D7A6                                       l16372 C206  
                                     l16364 C174                                       l16532 663E  
                                     l16524 6570                                       l17500 1348  
                                     l17420 09D0                                       l17316 041C  
                                     l17236 0048                                       l15478 FD0A  
                                     l15574 960E                                       l15494 0676  
                                     l15822 265A                                       l15750 2168  
                                     l15726 1E9A                                       l15662 1B90  
                                     l15910 BE5C                                       l16278 459C  
                                     l16702 FA3C                                       l16614 35A4  
                                     l16542 2A22                                       l16366 C198  
                                     l13894 0962                                       l17406 096C  
                                     l15488 FDA2                                       l15760 2254  
                                     l15736 2046                                       l15656 1AB6  
                                     l15648 1A4A                                       l15592 17CC  
                                     l16288 4652                                       l16448 0C52  
                                     l16560 2E0A                                       l16392 7804  
                                     l16480 5EF4                                       l16712 CCA2  
                                     l17088 D610                                       l17504 13AA  
                                     l17408 099C                                       l15578 964A  
                                     l15690 1CB4                                       l15682 1C9C  
                                     l15666 1BF2                                       l15914 BE98  
                                     l17186 D8CE                                       l16634 37BC  
                                     l16626 36C2                                       l16618 3604  
                                     l16554 2CCE                                       l16394 7858  
                                     l16482 5F14                                       l17098 D6E8  
                                     l13898 09DE                                       l17530 15B2  
                                     l17514 152C                                       l17450 0B82  
                                     l17426 09F6                                       l17370 06EE  
                                     l15836 26F6                                       l15684 1CAE  
                                     l15932 BFBA                                       l15924 BF52  
                                     l16732 EF52                                       l16484 600A  
                                     l17516 1558                                       l17444 0B4A  
                                     l16902 510E                                       l13998 22A2  
                                     l15838 2710                                       l15774 2352  
                                     l15758 2232                                       l15678 1C74  
                                     l15918 BEC8                                       l16670 1142  
                                     l16590 323A                                       l16582 3166  
                                     l16574 3092                                       l16486 602A  
                                     l17470 0CCA                                       l17382 07C8  
                                     l15848 27B2                                       l15928 BF7E  
                                     l16672 1150                                       l16680 1182  
                                     l16568 300A                                       l16496 6310  
                                     l16840 F7DC                                       l17560 165A  
                                     l17544 160A                                       l16906 5130  
                                     l15874 28BA                                       l15858 2802  
                                     l15786 23DA                                       l15794 2444  
                                     l15698 1D16                                       l15954 AEF2  
                                     l15946 AE96                                       l16666 1130  
                                     l16834 F776                                       l17562 1672  
                                     l17554 1648                                       l15964 B0E8  
                                     l16668 1138                                       l17572 16B6  
                                     l17476 0CEC                                       l16918 5434  
                                     l16870 4BF8                                       l16862 4B20  
                                     l15894 BDA8                                       l16678 1156  
                                     l17582 170C                                       l15992 A436  
                                     l17568 1690                                       l17488 0DEC  
                                     l16882 4D4E                                       l16866 4B8C  
                                     l16858 4ACC                                       l15986 A3FC  
                                     l16892 4FA0                                       l16878 4CFA  
                                     l15998 A472                                       l16888 4F26  
                                     l16898 5066                             __end_of___aldiv E38C  
                           __end_of___aodiv C77A                                _Volts_to_SOC 0950  
                                     _ADCAP 003EF5                                       _ADACT 003EFE  
                           __end_of___almod EC6A                             __end_of___fladd 764A  
                                     _ADCLK 003EFF                             __end_of___aomod D0B8  
                                     _ADPCH 003EF1                             __end_of___fldiv 8842  
                                     _ADREF 003EFD                             __end_of___awdiv F48E  
                           __end_of___flneg 1F90                                       STR_10 FBB9  
                                     STR_11 FBB9                                       STR_12 FBB9  
                                     STR_20 FBB7                                       STR_13 FBB9  
                                     STR_21 FD95                                       STR_14 FF32  
                                     STR_30 FEB3                                       STR_22 FDAB  
                                     STR_15 FF5C                                       STR_23 FE5B  
                                     STR_31 FD7F                                       STR_32 FE2F  
                                     STR_24 FE19                                       STR_16 FD69  
                                     STR_40 FC58                                       STR_33 FF96  
                                     STR_41 FC41                                       STR_25 FBCE  
                                     STR_17 FB25                               __CFG_WDTE$OFF 000000  
                                     STR_42 FD10                                       STR_18 FBE5  
                                     STR_26 FAD5                                       STR_50 FA9B  
                                     STR_35 FF84                                       STR_43 FCE2  
                                     STR_19 FCCB                                       STR_51 FB3F  
                                     STR_27 FAF0                                       STR_28 FF76  
                                     STR_60 FF47                                       STR_44 FCF9  
                                     STR_36 FCB4                                       STR_52 FB6F  
                           __end_of___awmod FCB6                                       STR_29 FF76  
                                     STR_61 FE45                                       STR_37 FC9D  
                                     STR_45 FBFC                                       STR_53 FB87  
                                     STR_54 FE87                                       STR_62 FD3D  
                                     STR_38 FC86                                       STR_46 FC13  
                                     STR_70 FAB9                                       STR_71 FAB9  
                                     STR_55 FE87                                       STR_63 FE9D  
                                     STR_39 FC6F                                       STR_47 FC2A  
                                     STR_72 FAB9                                       STR_64 FE03  
                                     STR_80 FFC2                                       STR_56 FE87  
                                     STR_48 FB57                                       _ADRPT 003EEC  
                                     STR_73 FF76                                       STR_81 FFA7  
                                     STR_57 FE03                                       STR_65 FD53  
                                     STR_49 FB9F                                       STR_82 FFA7  
                                     STR_74 FFFC                                       STR_66 FDED  
                                     STR_58 FDD7                                       STR_67 FE03  
                                     STR_83 FFA7                                       STR_75 FFB6  
                                     STR_59 FDC1                                       STR_68 FD53  
                                     STR_84 FFA7                                       STR_76 FFCC  
                           __end_of___lbmod 1002                                       STR_77 FF71  
                                     STR_69 FE71                                       STR_85 FB0B  
                                     STR_94 FA75                                       STR_78 FF71  
                                     STR_86 FEC9                                       STR_79 FFC2  
                                     STR_87 FEDE                                       STR_95 F9F7  
                                     STR_96 FFDA                             __end_of___flmul 6E8E  
                                     STR_97 FFE2                             __end_of___flsub 213A  
                           __end_of___fltol EB04                                       u10400 C826  
                                     u10420 C97E                                       u11300 EC40  
                                     u11220 EB34                                       u10430 C980  
                                     u10510 D4A4                                       u10520 D4D2  
                                     u10600 E338                                       u11240 EB62  
                                     u12105 1982                                       u12106 1984  
                                     u11250 EB7C                                       u10515 D49E  
                           __end_of___lodiv E820                                       u10620 E362  
                                     u10540 E22C                                       u11260 EB9E  
                                     u10517 D490                                       u10470 D40A  
                                     u12310 2C82                                       u10527 D4C4  
                                     u12080 1932                                       u10560 E25A  
                                     u11280 EC16                                       u10800 5980  
                                     u11370 DAA4                                       u10570 E288  
                                     _U1P1H 003DED                                       u10731 54CA  
                                     u10580 E2AA                                       u10820 5A1A  
                                     u10724 1AA0                                       _U1P2H 003DEF  
                                     u12245 21AE                                       u10477 D3FC  
                                     u10725 1A9A                                       u11614 8D74  
                                     _U1P1L 003DEC                                       _U1P3H 003DF1  
                                     u11615 8D6E                                       _T3CLK 003FA9  
                                     u12440 1A02                                       u11720 90A4  
                                     u15000 2604                                       u11560 0744  
                                     u12088 1934                                       u10840 5AEE  
                                     _T2CON 003FAC                                       _U1P2L 003DEE  
                                     u12610 DD1A                                       u11714 909C  
                                     u11634 8DA4                                       u12370 15BA  
                                     u10850 5AF0                                       _U1P3L 003DF0  
                                     u11715 9096                                       u11635 8D9E  
                                     u12515 2C70                                       u13411 1640  
                                     u12516 2C72                                       u13340 DCEA  
                                     u11565 073E                                       u12525 2C60  
                                     u11654 8DC6                                       u12294 E8C2  
                                     u10870 0342                                       u12526 2C62  
                                     _U2P1L 003DD4                                       u11655 8DC0  
                                     u12295 E8BC                                       u13351 1DBC  
                                     u13431 166A                                       u15200 BFE0  
                                     u16000 0DB4                                       u10880 2CBA  
                                     u12640 10C2                                       _T3CON 003FA6  
                                     _U2P2L 003DD6                                       u12465 1A36  
                                     u12466 1A38                                       u12458 1A04  
                                     u11674 8FAC                                       u14250 F86C  
                                     u14330 B780                                       _U2P3L 003DD8  
                                     u11675 8FA6                                       u14500 9318  
                                     u15060 27D8                                       u15220 AE7C  
                                     u15300 A3E2                                       u12660 10F6  
                                     u16100 6484                                       u13380 1618  
                                     u11694 907A                                       u14270 F8E8  
                                     u14510 9570                                       u14430 9244  
                                     u11695 9074                                       _T5CLK 003F9D  
                                     u14440 9246                                       u15080 288E  
                                     u15160 BEBE                                       u15400 A64A  
                                     u14521 95A0                             __end_of___lomod F710  
                                     u14530 95B6                                       u15090 2890  
                                     u14610 17FA                                       u15170 BF04  
                                     u15410 A66A                                       u15330 A4CA  
                                     u16130 29BE                                       u14531 95B4  
                                     u15251 B12A                                       u12780 2A70  
                                     u14540 95CA                                       u14460 92B6  
                                     u14380 06F0                                       u15260 B140  
                                     u15340 A51E                                       u16140 2A0E  
                                     u17100 15CE                                       u17020 0B8E  
                                     _T2HLT 003FAD                                       u15261 B13E  
                                     u15421 A69A                                       u15405 A62C  
                                     u14550 95CE                                       u15270 B154  
                                     u15430 A6B0                                       u15350 A520  
                                     u16230 32D8                                       u16310 CC62  
                                     u15431 A6AE                                       u14480 92C8  
                                     u14640 18B4                                       u15280 B158  
                                     u15440 A6C4                                       u15600 3BD8  
                                     u15520 B2F4                                       u16320 CC98  
                                     u16400 F7B8                                       _T5CON 003F9A  
                                     u15177 BEF6                                       u12786 2A72  
                                     u14570 95E4                                       u14730 1C2E  
                                     u14650 18B6                                       u15450 A6C8  
                                     u15370 A57E                                       u17106 15D0  
                                     u14387 06E2                                       u14900 2138  
                                     u15380 A580                                       u15700 3F3A  
                                     u15540 B43C                                       u14830 1D68  
                                     u15630 3D32                                       u16270 368C  
                                     u15470 C2F4                                       u16430 F81E  
                                     u16255 33BA                                       u14760 1C82  
                                     u14680 19C6                                       u15720 40AE  
                                     u15640 3D34                                       u16280 373A  
                                     u17080 15A2                                       _T6CON 003F94  
                                     u16281 3736                                       u14690 19C8  
                                     u15650 3D5A                                       u16418 F7BA  
                                     u16370 F752                                       u17090 15BC  
                                     u15820 46A6                                       u15580 3BB0  
                                     u14790 1CE6                                       u15750 4326  
                                     u15590 3BB2                                       u17086 15A4  
                            __CFG_DEBUG$OFF 000000                                       u15840 4856  
                                     u15760 4328                                       u16800 D91E  
                                     u16640 9908                                       u16448 F820  
                                     u17096 15BE                                       u16810 D920  
                                     u16650 9932                                       u15940 77DE  
                                     u16388 F754                                       u16645 98FA  
                                     u15950 77F0                                       u16910 07F6  
                                     u16655 9924                                       u16920 0920  
                                     u15890 C14A                                       u16930 0922  
                                     _T6HLT 003F95                  _ADCC_ADTI_InterruptHandler 00A1  
                                     u16890 0578                                       _T2TMR 003FAA  
                                     _U1UIR 003DF8                                       _T2RST 003FAF  
                                     _U1RXB 003DE8                                       _U2UIR 003DE0  
                                     _U2RXB 003DD0                                       _U2TXB 003DD2  
                                     _T6TMR 003F92                                       _T6RST 003F97  
                       ??_UART1_rx_vect_isr 0006                                       _ISRPR 0039F1  
                                     _OSCEN 0039DD                                       _TMR3H 003FA5  
                                     _TMR5H 003F99                                       _TMR3L 003FA4  
                                     _TMR5L 003F98                   __end_of_update_adc_result 23B4  
                                     _TRISA 003FC2                                       _TRISB 003FC3  
                                     _TRISC 003FC4                                       _TRISD 003FC5  
                                     _TRISE 003FC6                                       _TRISF 003FC7  
                               _Default_ISR 2D84                         __size_of_CRC_IsBusy 0010  
                   __size_of_clear_adc_scan 0006                          _current_sensor_cal 9694  
         __size_of_TMR3_SetInterruptHandler 0028                                ___secs_to_tm 2964  
         __size_of_TMR6_SetInterruptHandler 0028                             __end_of_asctime 8D58  
                             __CFG_WRTB$OFF 000000                            __end_of_TMR3_ISR EF2E  
                             __CFG_WRTC$OFF 000000                            _cal_current_zero 109A  
                                     ___gmt F9E7                               __CFG_WRTD$OFF 000000  
                          __end_of_TMR5_ISR E062                             __end_of_getname B49E  
                              _DMA1CON0bits 003BFC                            __end_of_TMR6_ISR 2B96  
                              _DMA1CON1bits 003BFD                  __size_of_send_lcd_data_dma 0046  
                           _DATAEE_ReadByte 2562                                       _fabsf 0B78  
                           __end_of_getrule C4FA                                       _flags 004E  
                      __size_of_check_range 0080                   __size_of_CRC_ReverseValue 00CE  
                                     _r_cal 0440                    __size_of_calc_model_data 045A  
                              _DMA2CON0bits 003BDC                                _DMA2CON1bits 003BDD  
              __end_of_get_ac_charger_relay 2CDE                                       _fputc F848  
                __size_of_send_lcd_cmd_long 0040                             __end_of_isalpha 217E  
                                     _fputs 1002                             __end_of_isdigit 2654  
                           __end_of_ivln2_h F9EF                                       _put2d F96C  
                        __CFG_MCLRE$EXTMCLR 000000                                       _srand 2492  
                                     _width 004A                                       _putch 2B60  
              __end_of_set_ac_charger_relay 2CA6                             __end_of_islower 25F4  
                           __end_of_isspace 1E5A                    _INT1_SetInterruptHandler 2872  
                           __end_of_set_dac 0B78                             __end_of_isupper 2624  
                                     pclath 003FFA                                       tablat 003FF5  
                                     ltemp0 002A                                       ltemp1 002E  
                                     ltemp2 0032                    __size_of_DMA1_Initialize 006A  
                                     plusw0 003FEB                                       plusw1 003FE3  
                                     plusw2 003FDB                                       ttemp0 002A  
                                     ttemp1 002D                                       ttemp2 0030  
                                     ttemp3 0033                                       ttemp5 002B  
                                     ttemp6 002E                                       ttemp7 0032  
                                     status 003FD8         __end_of_UART1_SetRxInterruptHandler 27FA  
               _UART1_SetRxInterruptHandler 27D2                                       wtemp0 002A  
                                     wtemp1 002C                                       wtemp2 002E  
                                     wtemp3 0030                                       wtemp4 0032  
                                     wtemp5 0034                                       wtemp8 002B  
                           __end_of_sprintf FED4                             __end_of_tolower 1504  
                           __end_of_strncmp D508                             __end_of_toupper 1480  
                 __size_of_DMA1_DMADCNT_ISR 000A                   __end_of_UART1_rx_vect_isr 293C  
                  __size_of_SPI1_Initialize 0016                     __end_of_update_cal_data 1E08  
                           _TMR5_Initialize 1FD8                       __end_of_ringBufS_init 275A  
                           __initialization 0474                           _UART2_rx_vect_isr 2964  
                             ___localtime_r CC34                                __end_of_cp_h F9F7  
                              __end_of_cp_l F9F3                                __end_of_atoi C9EE  
                              __end_of_ctoa 13FC                                __end_of_main 1720  
                              __end_of_dtoa 9694                                __end_of_nanf 1BE6  
                              __end_of_time 1CA4                                __end_of_spin F9DF  
                              __end_of_stoa BFFA                                __end_of_utoa B1A2  
                              __end_of_xtoa A782                              __CFG_SAFEN$OFF 000000  
                        ?_UART2_rx_vect_isr 0001                     __end_of_TMR2_Initialize 2BC6  
                     __end_of_send_lcd_data 29B0                    __size_of_DMA2_Initialize 005A  
                __end_of_check_enter_button 17E6                           __end_of_CRC_Start 2D6A  
                  _TMR5_SetInterruptHandler 2822                               __activetblptr 000003  
                 __size_of_DMA1_DMASCNT_ISR 000E                       _TMR3_InterruptHandler 0098  
                         _port_data_dma_ptr 2D08                          esr_check@esr_state 00C8  
                       ??_UART2_rx_vect_isr 0006                                      INTCON0 003FD2  
      __size_of_UART2_SetRxInterruptHandler 0028                              __CFG_MVECEN$ON 000000  
                           _TMR6_Initialize 2708                             _PWM8_Initialize 2BF2  
                          _UART1_Initialize 1F90                           _UART2_tx_vect_isr 293C  
                        _UART2_Transmit_ISR 26DC                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                            _start_adc_scan 1ABE                                      _ADLTHH 003EDF  
                                    STR_100 FFDE                                      _ADLTHL 003EDE  
                                    STR_101 FFE6                                      STR_110 FFF3  
                                    STR_120 FFF6                                      STR_104 FFED  
                                    STR_113 FFF0                                      STR_106 FFED  
                                    STR_115 FFF0                                      STR_123 FFF9  
                                    STR_108 FFF3                                      STR_132 FD27  
                                    STR_125 FFF9                                      STR_133 FA76  
                                    STR_118 FFF6                                      STR_127 FFEA  
                                    STR_129 FFEA                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 217E                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 DFB2  
                                    _RB6PPS 003A0E                                      i1l1209 EE96  
                      _start_switch_handler 2AA8                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 2068  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 2CC2                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl DB3A  
     __end_of_ADCC_DischargeSampleCapacitor 2D46      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 2D3E                    __end_of_send_lcd_cmd_dma 2B24  
                           _TMR3_WriteTimer 22C0                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 298C                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 2CFE  
                          _UART2_Initialize 1BE6                                      _WaitMs 245C  
                           _conv_raw_result 8D58                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset C27A  
                                    ___flge EC6A                                      ___fleq 07D0  
                                    ___lmul 0558                                      ___omul F08E  
                         _ADCC_ThresholdISR 18BC                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E4                              _ringBufS_flush 11BE  
                                    _efgtoa 1720                                      _getoff D0B8  
                                    _getint 01AC                                      _floorf AAF6  
                         dac_spi_control@S0 00CD                           dac_spi_control@S1 00CC  
                         dac_spi_control@S2 00CB                           dac_spi_control@SB 00C9  
                         dac_spi_control@SC 00CA                          ?_ADCC_ThresholdISR 0001  
                                    _memset B49E                                      _pclock 00DC  
                      __size_of_help_button 0038                                      clear_0 04E6  
                                    clear_1 04F8                                      clear_2 0504  
                                    clear_3 0510                                      clear_4 051C  
                                    clear_5 0528                                      clear_6 0534  
                                    clear_7 0540                                      _t_mbmc 00BE  
                 __end_of_port_data_dma_ptr 2D12                      __size_of_read_cal_data 01CA  
                                    _printf 1B22                          _eaDogM_WriteString 0D7C  
                   __end_of_DATAEE_ReadByte 2594                                      _strcpy 062E  
                                 ?_ADCC_ISR 0001                                      _strlen 0EC6  
                        __size_of_TimerDone 0028                                __pdataBIGRAM 06FF  
                           _ADCC_Initialize 1850                              _PMD_Initialize 2C1E  
                __size_of_update_adc_result 003A                   __end_of_UART2_tx_vect_isr 2964  
                          __end_of_set_time 0000                                      lltemp0 002A  
                                    lltemp1 0032                                      lltemp2 003A  
                                    lltemp3 0042                         ??_ADCC_ThresholdISR 0001  
                    __end_of_start_adc_scan 1B22                                __mediumconst F7AA  
                                    preinc2 003FDC                      __size_of_init_port_dma 0030  
                                    tblptrh 003FF7                                      tblptrl 003FF6  
                                    tblptru 003FF8                            __end_of_wdtdelay 1D58  
                          __end_of_spinners 01AC                            __end_of_vfprintf 0CD2  
                                _StartTimer 2240                          __size_of___asfladd 0078  
                               localtime@tm 02DE               __size_of_INTERRUPT_Initialize 0066  
                   __end_of_TMR5_Initialize 2020                           _SYSTEM_Initialize 1EAC  
                                ___daylight 00B8                                  __accesstop 0060  
                   __end_of__initialization 0552                                   ?_INT0_ISR 0001  
                                 ?_INT1_ISR 0001                        __end_of_display_help 2D56  
                      __end_of_display_info 2D4E                   __end_of_CLKREF_Initialize 2D08  
                             ___rparam_used 000001                  __size_of_UART1_rx_vect_isr 0028  
                           _TMR5_WriteTimer 2280                       _set_temp_display_help 2C86  
                          _clear_hid_pflags 198E                       __end_of_TMR3_CallBack 2A1C  
                 __end_of_ADCC_ThresholdISR 1926                       __end_of_set_hist_flag 2D64  
                        __size_of_calc_bsoc 0A6E                      __end_of_ringBufS_flush 1250  
                            __pcstackCOMRAM 0001                                  ___inthi_sp 132C  
                                ___intlo_sp 1996                                __pidataBANK1 0E22  
                              __pidataBANK2 0894                               __end_of___gmt F9EB  
               __size_of_send_port_data_dma 0052                               __end_of_fabsf 0C26  
                                 ?_TMR3_ISR 0001                                   ?_TMR5_ISR 0001  
                                 ?_TMR6_ISR 0001                            _DATAEE_WriteByte 1926  
                            ivt0x8_undefint 00AC                               __end_of_fputc F96C  
                             __end_of_fputs 109A                        _get_ac_charger_relay 2CD0  
                             __end_of_put2d FA86                               __end_of_srand 24C6  
                     __end_of_TMR5_CallBack 29F8                               __end_of_putch 2B7A  
                      _set_ac_charger_relay 2C96                     __end_of_PWM8_Initialize 2C08  
                   __end_of_TMR6_Initialize 2732                           _adc_int_t_handler 1504  
                    __end_of_PMD_Initialize 2C32                                  __end_of_bp F9E7  
                                ___timezone 0070                                  ??_ADCC_ISR 0001  
                     __end_of_TMR6_CallBack 2A64                 __size_of_EXT_INT_Initialize 0034  
                  calc_bsoc@log_update_wait 0050                      __size_of_calc_ror_data 0186  
                             _DMA1_DMAA_ISR 2D20                       TMR3_ISR@CountCallBack 00C0  
                            _clear_adc_scan 2D6A                          __size_of_hid_input 0138  
                        __end_of_CRC_IsBusy 2C86                      __size_of_mode_lamp_dim 0018  
                          time@current_time 00D4                            _CRC_ReverseValue 0702  
                  _UART2_RxInterruptHandler 00AD                   __end_of_SYSTEM_Initialize 1EFA  
                           __CFG_PR1WAY$OFF 000000                             __CFG_IVT1WAY$ON 000000  
                   __end_of_TMR3_WriteTimer 2300                                  __pbssBANK0 0060  
                                __pbssBANK1 01A4                                  __pbssBANK2 02BC  
                                __pbssBANK3 0300                                  __pbssBANK4 0400  
                                __pbssBANK5 0500                                  __pbssBANK6 0600  
                  __end_of_update_hist_data 1682                                  _check_help D724  
                             _read_cal_data DB3A                     __end_of_conv_raw_result 9214  
                        __size_of_esr_check 02D8                       _INT0_InterruptHandler 00B3  
                                ??_INT0_ISR 0001                                  ??_INT1_ISR 0007  
                     __end_of_days_in_month 1ABE                           __end_of_TimerDone 2782  
                          _DMA1_DMADCNT_ISR 2D14                             _convert_dac_raw FA86  
                        __size_of_init_bsoc 0246                  __size_of_UART2_rx_vect_isr 0028  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                          __size_of_lp_filter 01BC  
                        __size_of_localtime 0016                               _init_port_dma 2594  
                     __end_of_wait_lcd_done 2CC2                    __end_of_cal_current_zero 112C  
          __end_of_TMR3_SetInterruptHandler 2872                             __CFG_PPS1WAY$ON 000000  
          __end_of_TMR6_SetInterruptHandler 2822                                  ??_TMR3_ISR 00E7  
                   __end_of_ADCC_Initialize 18BA                                  ??_TMR5_ISR 000B  
                 __end_of_adc_int_t_handler 1586                                  ??_TMR6_ISR 0006  
                         __end_of___asfladd 1774                                     _ADFLTRH 003EE7  
                                   _ADFLTRL 003EE6                                     _DMA1DSA 003BF0  
                                   _DMA2DSA 003BD0                                     _DMA1DSZ 003BEE  
                                   _DMA2DSZ 003BCE                                     _DMA1SSA 003BF9  
                                   _DMA2SSA 003BD9                          __size_of_set_dac_a 0034  
                        __size_of_set_dac_b 0034        __end_of_ADCC_SetADTIInterruptHandler 28EA  
     __size_of_ADCC_SetADTIInterruptHandler 0028                _ADCC_SetADTIInterruptHandler 28C2  
                                   _DMA1SSZ 003BF7                                     _DMA2SSZ 003BD7  
                __size_of_port_data_dma_ptr 000A                                     _ADSTPTH 003EE5  
                                   _ADSTPTL 003EE4                                     _CRCACCH 003963  
                                   _CRCACCL 003962                     __size_of_load_hist_data 0466  
                                   _CRCDATH 003961                                     _CRCDATL 003960  
                         _UART1_Receive_ISR 2A86                                     _CRCCON0 003968  
                                   _CRCCON1 003969                                     _CLKRCLK 003CE6  
                                   _CLKRCON 003CE5                      __end_of_clear_adc_scan 2D70  
                                   _CRCXORH 003967                                     _CRCXORL 003966  
                                   u1215_20 A8B8                              ?_DMA1_DMAA_ISR 0001  
                          _DMA1_DMASCNT_ISR 2CF0                                     _U1ERRIE 003DFA  
                                   u1250_20 242C                                     u1321_48 2A50  
                                   u1313_48 2A2C                                     u1250_26 242E  
                        __size_of_set_vterm 001E                                     _U1ERRIR 003DF9  
                                   u1315_28 29C0                                     u1324_28 29E4  
                                   _U2ERRIE 003DE2                                     u1239_20 2CDA  
                                   _U2ERRIR 003DE1                                     u1175_25 2CA0  
                                   u1175_26 2CA2                                     u1281_20 F4C6  
                                   u1281_21 F4C0                                     u1285_24 F5AC  
                                   u1285_25 F5A8                                     u1279_28 F4AC  
                                   u1377_44 156C                                     u1377_45 1566  
                         _CRC_8BitDataWrite 2C32                                     _INT0PPS 003AC0  
                                   u1653_20 5056                                     u1660_28 2A08  
                       __CFG_PWRTS$PWRT_OFF 000000                                     _INT1PPS 003AC1  
                                   u1655_20 5120                                ?_Default_ISR 0001  
                __size_of_UART2_tx_vect_isr 0028                                     _U1RXPPS 003AE5  
                                   _U2RXPPS 003AE8                             _dac_spi_control 1682  
                                   _OSCCON1 0039D9                                     _OSCCON3 0039DB  
                                   _IVTLOCK 003FD4                          __size_of_vfpfcnvrt 0FAC  
                                   _SPI1CLK 003D1C                                     _SPI1RXB 003D10  
                                   _NVMADRH 0039E1                                     _NVMADRL 0039E0  
                         __end_of_calc_bsoc 5450                                     _SPI1TXB 003D11  
                                   _OSCTUNE 0039DE                                     _NVMCON2 0039E6  
                                   _PWM8DCH 003F61                                     _PWM8DCL 003F60  
                                   _PWM8CON 003F62                                     _SLRCONA 003A43  
                                   _SLRCONB 003A53                                     _SLRCONC 003A63  
                                   _SLRCOND 003A73                                     _SLRCONE 003A83  
                                   _SLRCONF 003A93                          __size_of_zi_read32 00F6  
                                _get_switch 2682                          __size_of_start_lcd 0006  
                   __size_of___year_to_secs 0972                     __end_of_TMR5_WriteTimer 22C0  
                   __size_of_switch_handler 0142                          __size_of_stop_bsoc 0006  
                __end_of_set_load_relay_one 2C76                  __end_of_set_load_relay_two 2C66  
         __size_of_INT0_SetInterruptHandler 0028                  __size_of_CLKREF_Initialize 000A  
                             _calc_ror_data E51A                              ___secs_to_zone 5DC2  
                   __size_of_DMA1_DMAOR_ISR 000A                                     __Hparam 0000  
                __size_of_ADCC_ThresholdISR 006A                               _mode_lamp_dim 2B96  
                                   __Lparam 0000                    __end_of_UART1_Initialize 1FD8  
                         __end_of_hid_input F848                             __size_of_WaitMs 0036  
                                   ___aldiv E1F8                             __size_of___flge 0162  
                           __size_of___fleq 00C4                                     ___aodiv C4FA  
                                   ___almod EB04                                     ___fladd 6E8E  
                                   ___aomod CE78                                     ___fldiv 82C8  
                                   ___awdiv F340                                     ___flneg 1F48  
                           __size_of___lmul 00D6                                     ___awmod FB9E  
                           __size_of___omul 015A                                     ___lbmod 0F68  
                                   ___flmul 6664                                     ___flsub 20F4  
                                   ___fltol E992                                     ___lodiv E6A0  
                                   ___lomod F5D0                   __end_of_UART1_Receive_ISR 2AA8  
                           __size_of_efgtoa 1244                             __size_of_getoff 0230  
                           __size_of_getint 00F2                             __size_of_floorf 036C  
                      __end_of_init_display 0474                                     __pcinit 0474  
                  __end_of_mode_lamp_bright 2CD0                             __size_of_memset 02EC  
                  __size_of_adc_int_handler 0002                         _eaDogM_WriteCommand 2CA6  
                                   __ramtop 2000                   __end_of_CRC_8BitDataWrite 2C44  
                                   __ptext0 0000                                     __ptext1 1606  
                                   __ptext2 1DB2                                     __ptext3 1CA4  
                                   __ptext4 2AA8                                     __ptext5 2492  
                                   __ptext6 FFCA                                     __ptext7 2D5E  
                                   __ptext8 24C6                                     __ptext9 24FA  
                         __end_of_esr_check BD3C                           _UART2_Receive_ISR 2AC8  
                                   _asctime 8842                             __size_of_printf 0062  
                                   _getname B1A2                             __CFG_WRTAPP$OFF 000000  
                           __size_of_strcpy 00D4                             __size_of_strlen 00A2  
                                   _getrule C27A                                     _dst_off 00B6  
                     _OSCILLATOR_Initialize 2C08                                __size_of_abs 0046  
                                   us811999 F1D2                                __size_of_pad 0114  
                         __end_of_init_bsoc CC34                                     _isalpha 213A  
                                   us823999 C764                                     _isdigit 2624  
                                   _ivln2_h F9EB                                     us834999 D0A6  
                                   us924999 F700                                   _T3CONbits 003FA6  
                                   us919999 E80A                                     _mode_sw 00CE  
                         __end_of_lp_filter DEC0                           __end_of_localtime 2BDC  
                                   _islower 25C4                                     _isspace 1E08  
                           __CFG_WRTSAF$OFF 000000                                  _scan_trans 233E  
                                 _T5CONbits 003F9A                                     _set_dac 0AC2  
                  __end_of_UART2_Initialize 1C46                                     _isupper 25F4  
                                 _CRC_Start 2D64                                  _old_tz_buf 03A4  
                __size_of_SYSTEM_Initialize 004E                                     _sprintf FDCA  
                                   _tolower 1480                       __size_of_display_help 0008  
                                   _utctime 01D7                     __end_of_convert_dac_raw FB9E  
                     __size_of_display_info 0008                                     _strncmp D2E8  
                                   _toupper 13FC                        end_of_initialization 0552  
                 __size_of_convert_adc_data 00B8                                   _SCANHADRH 00397A  
                                 _SCANHADRL 003979                                   _SCANHADRU 00397B  
                                 _SCANLADRH 003977                                   _SCANLADRL 003976  
                        _check_enter_button 1774                                   _SCANLADRU 003978  
                         __end_of_set_dac_a 252E                           __end_of_set_dac_b 24FA  
                    __end_of___secs_to_zone 6664         __end_of_UART2_SetRxInterruptHandler 27D2  
               _UART2_SetRxInterruptHandler 27AA                                   i1u1682_20 EE8C  
                   check_day_time@day_delay 0051                                   i2u1380_48 26C8  
                         __end_of_set_vterm 2B42                                   i2u1382_48 18F2  
                                 i2u1382_49 1906                                   i2u1384_48 2928  
                                 i2u1386_48 2950                                   i2u1388_48 2978  
                         __end_of_vfpfcnvrt 49E2                                   _SPI1TCNTL 003D12  
                                   postdec0 003FED                                     postdec1 003FE5  
                                   postdec2 003FDD                                     postinc0 003FEE  
                                   postinc1 003FE6                                     postinc2 003FDE  
                         __end_of_zi_read32 FFCA                  __size_of_adc_int_t_handler 0082  
                       __size_of_StartTimer 0040                           __end_of_start_lcd 2D7C  
                 __end_of_UART2_Receive_ISR 2AE8                              wdtdelay@dcount 0090  
                   __end_of_dac_spi_control 16FC                 __size_of_current_sensor_cal 0474  
                     __CFG_WDTCPS$WDTCPS_31 000000                             ??_DMA1_DMAA_ISR 0007  
                     _INT1_InterruptHandler 00B0                                   _PORTBbits 003FCB  
                         __end_of_stop_bsoc 2D82                                   _PORTDbits 003FCD  
                  _TMR3_SetInterruptHandler 284A                                   _PORTFbits 003FCF  
                  _TMR6_SetInterruptHandler 27FA                                _display_help 2D4E  
                     _TMR5_InterruptHandler 009B                                _display_info 2D46  
      __size_of_UART2_SetTxInterruptHandler 0028                    __end_of_clear_hid_pflags 19F4  
                         __size_of_ADCC_ISR 002C         __end_of_ADCC_SetADIInterruptHandler 2912  
               _ADCC_SetADIInterruptHandler 28EA                                  asctime@buf 03C4  
                                _update_lcd EF2E                             _calc_model_data 9F6E  
                    __size_of_ringBufS_init 0028                            __CFG_FEXTOSC$ECH 000000  
                                _static_soc 1CA4                    __end_of_DATAEE_WriteByte 198E  
                           _DMA1_Initialize 17E6                         __end_of_check_range 1606  
                                _start_bsoc 2A64                    __size_of___month_to_secs 00EC  
                    __size_of_send_lcd_data 0024                             _SPI1_Initialize 2BDC  
                     __end_of_get_vterm_ptr 2682                           __size_of_INT0_ISR 000E  
                         __size_of_INT1_ISR 003E                    __size_of_display_history 02DA  
                  __end_of_CRC_ReverseValue 07D0                              __end_of_WaitMs 2492  
              __end_of_INTERRUPT_Initialize 1A5A                                  _vterm_dump E38C  
                            __end_of___flge EDCC                              __end_of___fleq 0894  
      __end_of_INT0_DefaultInterruptHandler 2D90       __size_of_INT0_DefaultInterruptHandler 0002  
              _INT0_DefaultInterruptHandler 2D8E                  __size_of_UART1_Receive_ISR 0022  
                           _DMA2_Initialize 1D58                              __end_of___lmul 062E  
                            __end_of___omul F1E8                               __pidataBIGRAM 7D06  
                            _load_hist_data 9B08                              __end_of_efgtoa 2964  
                __size_of_CRC_8BitDataWrite 0012                           __size_of_TMR3_ISR 0162  
                            __end_of_getoff D2E8                           __size_of_TMR5_ISR 01A2  
                            __end_of_getint 029E                           __size_of_TMR6_ISR 001A  
                       __size_of_check_help 0212                              __end_of_floorf AE62  
               __size_of_UART2_Transmit_ISR 002C                                  floorf@F524 0074  
                            __end_of_memset B78A  __end_of___month_to_secs@secs_through_month F8AB  
        ___month_to_secs@secs_through_month F87B                              __end_of_printf 1B84  
                  __end_of_DMA1_DMADCNT_ISR 2D1E                 __size_of_PWM8_LoadDutyValue 0042  
                     __end_of_INT0_CallBack 2A40                              __end_of_strcpy 0702  
                            __end_of_strlen 0F68                         start_initialization 0474  
                   __size_of_write_cal_data 0158        __end_of_TMR5_DefaultInterruptHandler 245C  
     __size_of_TMR5_DefaultInterruptHandler 0038                _TMR5_DefaultInterruptHandler 2424  
           __size_of_PIN_MANAGER_Initialize 0092                                 __end_of_abs 20F4  
                     __end_of_INT1_CallBack 29D4                   __size_of_set_display_info 001E  
                               __end_of_pad FDCA                        __size_of_Default_ISR 0006  
                   __size_of_CRC_Initialize 0092                              ___year_to_secs 5450  
                      __end_of_send_lcd_cmd 2240                              _switch_handler F48E  
             __size_of_ADCC_StartConversion 0012                                  ivt0x8_base 0008  
                             _uart1RxBuffer 02D6                       __end_of___fpclassifyf E1F8  
                             _uart2RxBuffer 0600                    __end_of_DMA1_DMASCNT_ISR 2CFE  
                             _uart2TxBuffer 0400                              _DMA1_DMAOR_ISR 2D2C  
                       __end_of_hid_display D724                  __end_of_send_port_data_dma 1EAC  
                          __CFG_LPBOREN$OFF 000000                       __size_of_init_display 00EA  
               __size_of_eaDogM_WriteString 00A6             __end_of_CRC_CalculatedResultGet E992  
                                 _TimerDone 275A                               _ringBufS_init 2732  
                    __end_of_load_hist_data 9F6E                                 __pdataBANK1 0100  
                               __pdataBANK2 0200                  __size_of_UART2_Receive_ISR 0020  
                       __size_of_get_switch 002C                  __end_of_EXT_INT_Initialize 2562  
                  __size_of_update_cal_data 0056                     __end_of_calc_model_data A3C8  
                             _send_lcd_data 298C                         __end_of_help_button 23EC  
           __end_of_eaDogM_WriteStringAtPos 11BE                         __end_of_BVSOC_TABLE F87B  
                                 ___asfladd 16FC                        calc_model_data@bcror 0088  
                   __end_of_DMA1_Initialize 1850                        calc_model_data@bvror 008C  
                               __pbssCOMRAM 004A                                 _check_range 1586  
          __end_of_INT0_SetInterruptHandler 28C2                      __end_of___year_to_secs 5DC2  
                             __pcstackBANK0 00E7                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler F5D0  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                    __size_of_set_hist_flag 0006                           __size_of___xxtofl 0204  
                   __end_of_SPI1_Initialize 2BF2                    _UART1_RxInterruptHandler 00A7  
                  _UART2_TxInterruptHandler 00AA                                   __end_of_T F967  
                          _convert_adc_data 0A0A                                   _calc_bsoc 49E2  
                 __size_of_ringBufS_put_dma 00AA                                _init_display 038A  
                    __end_of_DMA1_DMAOR_ISR 2D36                      __size_of_TMR5_CallBack 0024  
                         __size_of_do_tzset 0280                       _TMR6_InterruptHandler 009E  
                        calc_ror_data@bcror 0080                      __size_of_TMR6_CallBack 0024  
                   __end_of_DMA2_Initialize 1DB2                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 1250                       __end_of___localtime_r CE78  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 2D76  
                       __size_of_scan_trans 003C                               __pmediumconst F7AA  
                                 __ptext100 E6A0                                   __ptext101 D2E8  
                                 __ptext110 1F48                                   __ptext102 BD3C  
                                 __ptext111 07D0                                   __ptext103 1720  
                                 __ptext200 49E2                                   __ptext120 0EC6  
                                 __ptext112 FB9E                                   __ptext104 1480  
                                 __ptext201 1E5A                                   __ptext121 1002  
                                 __ptext113 F340                                   __ptext105 25F4  
                                 __ptext210 2D90                                   __ptext202 2D08  
                                 __ptext130 2B42                                   __ptext122 F848  
                                 __ptext114 9214                                   __ptext106 062E  
                                 __ptext211 2D92                                   __ptext203 16FC  
                                 __ptext131 2B96                                   __ptext123 2B60  
                                 __ptext115 20AE                                   __ptext107 AAF6  
                                 __ptext220 2A40                                   __ptext212 18BC  
                                 __ptext204 2CE0                                   __ptext140 E51A  
                                 __ptext132 2CC2                                   __ptext124 0CD2  
                                 __ptext116 CE78                                   __ptext108 E062  
                                 __ptext221 1EFA                                   __ptext213 2914  
                                 __ptext205 2A1C                                   __ptext141 0B78  
                                 __ptext133 217E                                   __ptext125 C77A  
                                 __ptext117 C4FA                                   __ptext109 E992  
                                 __ptext222 2CF0                                   __ptext214 2A86  
                                 __ptext206 2D8E                                   __ptext150 2A64  
                                 __ptext142 8D58                                   __ptext134 23B4  
                                 __ptext126 1E08                                   __ptext118 1374  
                                 __ptext223 2D14                                   __ptext215 293C  
                                 __ptext207 2D84                                   __ptext151 DD04  
                                 __ptext143 1B84                                   __ptext135 275A  
                                 __ptext127 2624                                   __ptext119 FCB6  
                                 __ptext224 2D20                                   __ptext216 26DC  
                                 __ptext208 26B0                                   __ptext160 27D2  
                                 __ptext152 20F4                                   __ptext144 23EC  
                                 __ptext136 2240                                   __ptext128 2B24  
                                 __ptext225 2D2C                                   __ptext217 2964  
                                 __ptext209 1504                                   __ptext161 2708  
                                 __ptext153 6E8E                                   __ptext145 D936  
                                 __ptext137 2D46                                   __ptext129 2C86  
                                 __ptext226 0000                                   __ptext218 2AC8  
                                 __ptext170 2C1E                                   __ptext162 27FA  
                                 __ptext154 6664                                   __ptext146 82C8  
                                 __ptext138 2D4E                                   __ptext219 2B7C  
                                 __ptext171 1250                                   __ptext163 1FD8  
                                 __ptext155 1EAC                                   __ptext147 EC6A  
                                 __ptext139 1774                                   __ptext180 12E2  
                                 __ptext172 2C08                                   __ptext164 2822  
                                 __ptext156 1BE6                                   __ptext148 9F6E  
                                 __ptext181 2CFE                                   __ptext173 19F4  
                                 __ptext165 2020                                   __ptext157 2782  
                                 __ptext149 2D7C                                   __ptext190 2280  
                                 __ptext182 1850                                   __ptext174 2D56  
                                 __ptext166 284A                                   __ptext158 27AA  
                                 __ptext191 29D4                                   __ptext183 28C2  
                                 __ptext175 252E                                   __ptext167 2BAE  
                                 __ptext159 1F90                                   __ptext192 2424  
                                 __ptext184 28EA                                   __ptext176 2872  
                                 __ptext168 2BDC                                   __ptext193 A782  
                                 __ptext185 2300                                   __ptext177 289A  
                                 __ptext169 2BF2                                   __ptext194 2C96  
                                 __ptext186 29B0                                   __ptext178 1D58  
                                 __ptext195 2CD0                                   __ptext187 2D8A  
                                 __ptext179 17E6                                   __ptext196 EDCC  
                                 __ptext188 F48E                                   __ptext197 22C0  
                                 __ptext189 DEC0                                   __ptext198 29F8  
                                 __ptext199 2D8C                           __size_of_set_time 0036  
                                 _hid_input F710                          __end_of_StartTimer 2280  
                        _set_load_relay_one 2C66                          _set_load_relay_two 2C56  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 26B0  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check BA64  
                   __size_of_get_raw_result 0038                              __size_of_fabsf 00AE  
                                 _init_bsoc C9EE                      __size_of_wait_lcd_done 000E  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter DD04  
                                 _localtime 2BC6                                 _hid_display D508  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 19F4                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2CE0                                    _INT1_ISR 2300  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 24FA  
                                 _set_dac_b 24C6                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 29F8  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 2D5E  
                                 _set_vterm 2B24                         __size_of_update_lcd 0160  
                               _help_button 23B4                                    _TMR3_ISR EDCC  
                               _BVSOC_TABLE F7AB                                    _TMR5_ISR DEC0  
                                  _TMR6_ISR 2B7C          __end_of___secs_to_tm@days_in_month F8B7  
                ___secs_to_tm@days_in_month F8AB                                   _port_data 0981  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 3A36  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 29D4                                  _ADCON0bits 003EF8  
                                 _zi_read32 FED4                          __end_of_check_help D936  
                                 _start_lcd 2D76                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 2A40  
                            _write_cal_data F1E8                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 2D7C  
                          _set_display_info 2B42                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 12E2  
                               _INTCON0bits 003FD2                                   copy_data0 0488  
                                 copy_data1 04AE                                   copy_data2 04D0  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 289A  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 27AA  
               _UART2_SetTxInterruptHandler 2782                               _days_in_month 1A5A  
                              _uart1RxCount 00D2                                _uart2RxCount 00CF  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 9B08  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 2CB4  
                              _send_lcd_cmd 2200                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 2D92  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 26AE  
                      __end_of_rule_to_secs 7D06                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data F340                       __end_of_DMA1_DMAA_ISR 2D2A  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl D936                      __end_of_CRC_Initialize 1374  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 2CB4                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 FA86                                    __ptext11 0AC2  
                                  __ptext20 2200                                    __ptext12 1682  
                                  __ptext21 1CFE                                    __ptext13 DB3A  
                                  __ptext30 2D36                                    __ptext22 2AE8  
                                  __ptext14 2562                                    __ptext31 2C56  
                                  __ptext23 2732                                    __ptext15 9B08  
                                  __ptext40 FED4                                    __ptext32 2C66  
                                  __ptext24 C9EE                                    __ptext16 2594  
                                  __ptext41 764A                                    __ptext33 2CA6  
                                  __ptext25 0950                                    __ptext17 038A  
                                  __ptext50 2964                                    __ptext42 1A5A  
                                  __ptext34 B78A                                    __ptext26 D508  
                                  __ptext18 298C                                    __ptext51 F08E  
                                  __ptext43 5450                                    __ptext35 1C46  
                                  __ptext27 F710                                    __ptext19 21C0  
                                  __ptext60 1926                                    __ptext52 0558  
                                  __ptext44 029E                                    __ptext36 2BC6  
                                  __ptext28 BA64                                    __ptext61 2D64  
                                  __ptext53 EB04                                    __ptext45 BFFA  
                                  __ptext37 CC34                                    __ptext29 237A  
                                  __ptext70 2682                                    __ptext62 2C76  
                                  __ptext54 E1F8                                    __ptext46 C27A  
                                  __ptext38 5DC2                                    __ptext71 2D6A  
                                  __ptext63 E820                                    __ptext55 8842  
                                  __ptext47 D0B8                                    __ptext39 233E  
                                  __ptext80 245C                                    __ptext72 109A  
                                  __ptext64 0702                                    __ptext56 F96C  
                                  __ptext48 01AC                                    __ptext81 EF2E  
                                  __ptext73 1586                                    __ptext65 2C32  
                                  __ptext57 0F68                                    __ptext49 B1A2  
                                  __ptext90 B49E                                    __ptext82 112C  
                                  __ptext74 0A0A                                    __ptext66 1ABE  
                                  __ptext58 9694                                    __ptext91 1B22  
                                  __ptext83 2B06                                    __ptext75 198E  
                                  __ptext67 2C44                                    __ptext59 F1E8  
                                  __ptext92 0C26                                    __ptext84 2CB4  
                                  __ptext76 D724                                    __ptext68 2D3E  
                                  __ptext93 3A36                                    __ptext85 2068  
                                  __ptext77 E38C                                    __ptext69 00B6  
                                  __ptext94 A3C8                                    __ptext86 0D7C  
                                  __ptext78 FDCA                                    __ptext95 13FC  
                                  __ptext87 2D70                                    __ptext79 2654  
                                  __ptext96 25C4                                    __ptext88 2D76  
                                  __ptext97 213A                                    __ptext89 11BE  
                                  __ptext98 AE62                                    __ptext99 F5D0  
                          __size_of_isupper 0030                                    _do_tzset BFFA  
                     __end_of_read_cal_data DD04                                    us1160999 1C96  
                          __size_of_sprintf 010A                            __size_of_tolower 0084  
                                  us1511999 BD4E                                    us1442999 922E  
                                  us1523999 AEC8                                    us1532999 A448  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                          _ringBufS_put_dma 0CD2                                    us1599999 7CF0  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 0A0A  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 1720                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 2C76  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 25C4                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 3A36                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time FFCA                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 2C56                          __end_of_scan_trans 237A  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 1CFE                  __end_of_UART2_Transmit_ISR 2708  
                                  _spinners 00B6                                    _vfprintf 0C26  
                  __end_of_convert_adc_data 0AC2                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 21C0        __end_of_TMR3_DefaultInterruptHandler 2D8E  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 2D8C  
      __end_of_INT1_DefaultInterruptHandler 2D8C       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 2D8A                    get_raw_result@raw_result 00BC  
                        _send_port_data_dma 1E5A                               ??_Default_ISR 0001  
                               _uart1RxHead 0057                      __size_of_get_vterm_ptr 002E  
                               _uart2RxHead 0054                                 _uart1RxTail 00D3  
                            _get_raw_result 23EC                                 _NVMCON1bits 0039E5  
                               _uart2TxHead 00D1                                 _uart2RxTail 00D0  
                                 spinners@s 01CD                                 _uart2TxTail 0056  
                 __size_of_cal_current_zero 0092                                _wait_lcd_set 2D70  
                        _EXT_INT_Initialize 252E        __end_of_TMR6_DefaultInterruptHandler 1F48  
     __size_of_TMR6_DefaultInterruptHandler 004E                _TMR6_DefaultInterruptHandler 1EFA  
                         _send_lcd_data_dma 2068        __end_of_ADCC_DefaultInterruptHandler 2D92  
     __size_of_ADCC_DefaultInterruptHandler 0002                _ADCC_DefaultInterruptHandler 2D90  
                                  intlevel1 0000                                    intlevel2 0000  
                           ___month_to_secs 029E                           _send_lcd_cmd_long 21C0  
            __size_of_set_temp_display_help 0010               __end_of_set_temp_display_help 2C96  
                     __end_of_calc_ror_data E6A0                           __CFG_CLKOUTEN$OFF 000000  
                __end_of_eaDogM_WriteString 0E22                       __end_of_mode_lamp_dim 2BAE  
                   __end_of_adc_int_handler 2D94                    __size_of_convert_dac_raw 0118  
                           _display_history B78A                      __size_of_INT0_CallBack 0024  
                                _SPI1SCKPPS 003ADE                                  _SPI1SDIPPS 003ADF  
                    __size_of_INT1_CallBack 0024                          __end_of_update_lcd F08E  
                    _uart2TxBufferRemaining 0055                          __end_of_static_soc 1CFE  
                        __end_of_start_bsoc 2A86                              _FVR_Initialize 2D56  
                    __end_of_get_raw_result 2424                            _send_lcd_cmd_dma 2B06  
                    __size_of___fpclassifyf 0196                       TMR5_ISR@CountCallBack 00C4  
          __end_of_INT1_SetInterruptHandler 289A                   __size_of_UART1_Initialize 0048  
                  __size_of_dac_spi_control 007A                   __end_of_send_lcd_data_dma 20AE  
                          ??_DMA1_DMAOR_ISR 0007                     _CRC_CalculatedResultGet E820  
                 __end_of_send_lcd_cmd_long 2200                     __size_of_start_adc_scan 0064  
                       __end_of_Default_ISR 2D8A              __end_of_PIN_MANAGER_Initialize 12E2  
                 __size_of_mode_lamp_bright 000E                          __end_of_vterm_dump E51A  
                   _eaDogM_WriteStringAtPos 112C                               _get_vterm_ptr 2654  
                            _check_adc_scan 2D36                   __size_of_UART2_Initialize 0060  
                     __size_of_rule_to_secs 06BC  
